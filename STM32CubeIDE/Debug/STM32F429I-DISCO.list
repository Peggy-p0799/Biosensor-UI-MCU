
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002ea84  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0001b208  0802ec38  0802ec38  0003ec38  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002866  08049e40  08049e40  00059e40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000008c  0804c6a8  0804c6a8  0005c6a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000004b8  0804c734  0804c734  0005c734  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00093158  0804cbec  0804cbec  0005cbec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080dfd44  080dfd44  000f02e8  2**0
                  CONTENTS
  8 .ARM          00000008  080dfd44  080dfd44  000efd44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080dfd4c  080dfd4c  000f02e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080dfd4c  080dfd4c  000efd4c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080dfd60  080dfd60  000efd60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         000002e8  20000000  080dfd68  000f0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001e19c  200002e8  080e0050  000f02e8  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  2001e484  080e0050  000fe484  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000f02e8  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00100000  2**2
                  ALLOC
 17 .debug_line   00084aeb  00000000  00000000  000f0318  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   001f5aa7  00000000  00000000  00174e03  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0002d387  00000000  00000000  0036a8aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000046e0  00000000  00000000  00397c38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00126089  00000000  00000000  0039c318  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 0000bd88  00000000  00000000  004c23a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    0004da43  00000000  00000000  004ce130  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  000395bd  00000000  00000000  0051bb73  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      0000013d  00000000  00000000  00555130  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000c7c4  00000000  00000000  00555270  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200002e8 	.word	0x200002e8
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802ec1c 	.word	0x0802ec1c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200002ec 	.word	0x200002ec
 80001ec:	0802ec1c 	.word	0x0802ec1c

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <memchr>:
 80002c0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002c4:	2a10      	cmp	r2, #16
 80002c6:	db2b      	blt.n	8000320 <memchr+0x60>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	d008      	beq.n	80002e0 <memchr+0x20>
 80002ce:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002d2:	3a01      	subs	r2, #1
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d02d      	beq.n	8000334 <memchr+0x74>
 80002d8:	f010 0f07 	tst.w	r0, #7
 80002dc:	b342      	cbz	r2, 8000330 <memchr+0x70>
 80002de:	d1f6      	bne.n	80002ce <memchr+0xe>
 80002e0:	b4f0      	push	{r4, r5, r6, r7}
 80002e2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002e6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002ea:	f022 0407 	bic.w	r4, r2, #7
 80002ee:	f07f 0700 	mvns.w	r7, #0
 80002f2:	2300      	movs	r3, #0
 80002f4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002f8:	3c08      	subs	r4, #8
 80002fa:	ea85 0501 	eor.w	r5, r5, r1
 80002fe:	ea86 0601 	eor.w	r6, r6, r1
 8000302:	fa85 f547 	uadd8	r5, r5, r7
 8000306:	faa3 f587 	sel	r5, r3, r7
 800030a:	fa86 f647 	uadd8	r6, r6, r7
 800030e:	faa5 f687 	sel	r6, r5, r7
 8000312:	b98e      	cbnz	r6, 8000338 <memchr+0x78>
 8000314:	d1ee      	bne.n	80002f4 <memchr+0x34>
 8000316:	bcf0      	pop	{r4, r5, r6, r7}
 8000318:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800031c:	f002 0207 	and.w	r2, r2, #7
 8000320:	b132      	cbz	r2, 8000330 <memchr+0x70>
 8000322:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000326:	3a01      	subs	r2, #1
 8000328:	ea83 0301 	eor.w	r3, r3, r1
 800032c:	b113      	cbz	r3, 8000334 <memchr+0x74>
 800032e:	d1f8      	bne.n	8000322 <memchr+0x62>
 8000330:	2000      	movs	r0, #0
 8000332:	4770      	bx	lr
 8000334:	3801      	subs	r0, #1
 8000336:	4770      	bx	lr
 8000338:	2d00      	cmp	r5, #0
 800033a:	bf06      	itte	eq
 800033c:	4635      	moveq	r5, r6
 800033e:	3803      	subeq	r0, #3
 8000340:	3807      	subne	r0, #7
 8000342:	f015 0f01 	tst.w	r5, #1
 8000346:	d107      	bne.n	8000358 <memchr+0x98>
 8000348:	3001      	adds	r0, #1
 800034a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800034e:	bf02      	ittt	eq
 8000350:	3001      	addeq	r0, #1
 8000352:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000356:	3001      	addeq	r0, #1
 8000358:	bcf0      	pop	{r4, r5, r6, r7}
 800035a:	3801      	subs	r0, #1
 800035c:	4770      	bx	lr
 800035e:	bf00      	nop

08000360 <__aeabi_drsub>:
 8000360:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000364:	e002      	b.n	800036c <__adddf3>
 8000366:	bf00      	nop

08000368 <__aeabi_dsub>:
 8000368:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800036c <__adddf3>:
 800036c:	b530      	push	{r4, r5, lr}
 800036e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000372:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000376:	ea94 0f05 	teq	r4, r5
 800037a:	bf08      	it	eq
 800037c:	ea90 0f02 	teqeq	r0, r2
 8000380:	bf1f      	itttt	ne
 8000382:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000386:	ea55 0c02 	orrsne.w	ip, r5, r2
 800038a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800038e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000392:	f000 80e2 	beq.w	800055a <__adddf3+0x1ee>
 8000396:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800039a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800039e:	bfb8      	it	lt
 80003a0:	426d      	neglt	r5, r5
 80003a2:	dd0c      	ble.n	80003be <__adddf3+0x52>
 80003a4:	442c      	add	r4, r5
 80003a6:	ea80 0202 	eor.w	r2, r0, r2
 80003aa:	ea81 0303 	eor.w	r3, r1, r3
 80003ae:	ea82 0000 	eor.w	r0, r2, r0
 80003b2:	ea83 0101 	eor.w	r1, r3, r1
 80003b6:	ea80 0202 	eor.w	r2, r0, r2
 80003ba:	ea81 0303 	eor.w	r3, r1, r3
 80003be:	2d36      	cmp	r5, #54	; 0x36
 80003c0:	bf88      	it	hi
 80003c2:	bd30      	pophi	{r4, r5, pc}
 80003c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80003cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80003d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80003d4:	d002      	beq.n	80003dc <__adddf3+0x70>
 80003d6:	4240      	negs	r0, r0
 80003d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80003dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80003e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80003e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80003e8:	d002      	beq.n	80003f0 <__adddf3+0x84>
 80003ea:	4252      	negs	r2, r2
 80003ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80003f0:	ea94 0f05 	teq	r4, r5
 80003f4:	f000 80a7 	beq.w	8000546 <__adddf3+0x1da>
 80003f8:	f1a4 0401 	sub.w	r4, r4, #1
 80003fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000400:	db0d      	blt.n	800041e <__adddf3+0xb2>
 8000402:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000406:	fa22 f205 	lsr.w	r2, r2, r5
 800040a:	1880      	adds	r0, r0, r2
 800040c:	f141 0100 	adc.w	r1, r1, #0
 8000410:	fa03 f20e 	lsl.w	r2, r3, lr
 8000414:	1880      	adds	r0, r0, r2
 8000416:	fa43 f305 	asr.w	r3, r3, r5
 800041a:	4159      	adcs	r1, r3
 800041c:	e00e      	b.n	800043c <__adddf3+0xd0>
 800041e:	f1a5 0520 	sub.w	r5, r5, #32
 8000422:	f10e 0e20 	add.w	lr, lr, #32
 8000426:	2a01      	cmp	r2, #1
 8000428:	fa03 fc0e 	lsl.w	ip, r3, lr
 800042c:	bf28      	it	cs
 800042e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000432:	fa43 f305 	asr.w	r3, r3, r5
 8000436:	18c0      	adds	r0, r0, r3
 8000438:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800043c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000440:	d507      	bpl.n	8000452 <__adddf3+0xe6>
 8000442:	f04f 0e00 	mov.w	lr, #0
 8000446:	f1dc 0c00 	rsbs	ip, ip, #0
 800044a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800044e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000452:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000456:	d31b      	bcc.n	8000490 <__adddf3+0x124>
 8000458:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800045c:	d30c      	bcc.n	8000478 <__adddf3+0x10c>
 800045e:	0849      	lsrs	r1, r1, #1
 8000460:	ea5f 0030 	movs.w	r0, r0, rrx
 8000464:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000468:	f104 0401 	add.w	r4, r4, #1
 800046c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000470:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000474:	f080 809a 	bcs.w	80005ac <__adddf3+0x240>
 8000478:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800047c:	bf08      	it	eq
 800047e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000482:	f150 0000 	adcs.w	r0, r0, #0
 8000486:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800048a:	ea41 0105 	orr.w	r1, r1, r5
 800048e:	bd30      	pop	{r4, r5, pc}
 8000490:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000494:	4140      	adcs	r0, r0
 8000496:	eb41 0101 	adc.w	r1, r1, r1
 800049a:	3c01      	subs	r4, #1
 800049c:	bf28      	it	cs
 800049e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80004a2:	d2e9      	bcs.n	8000478 <__adddf3+0x10c>
 80004a4:	f091 0f00 	teq	r1, #0
 80004a8:	bf04      	itt	eq
 80004aa:	4601      	moveq	r1, r0
 80004ac:	2000      	moveq	r0, #0
 80004ae:	fab1 f381 	clz	r3, r1
 80004b2:	bf08      	it	eq
 80004b4:	3320      	addeq	r3, #32
 80004b6:	f1a3 030b 	sub.w	r3, r3, #11
 80004ba:	f1b3 0220 	subs.w	r2, r3, #32
 80004be:	da0c      	bge.n	80004da <__adddf3+0x16e>
 80004c0:	320c      	adds	r2, #12
 80004c2:	dd08      	ble.n	80004d6 <__adddf3+0x16a>
 80004c4:	f102 0c14 	add.w	ip, r2, #20
 80004c8:	f1c2 020c 	rsb	r2, r2, #12
 80004cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80004d0:	fa21 f102 	lsr.w	r1, r1, r2
 80004d4:	e00c      	b.n	80004f0 <__adddf3+0x184>
 80004d6:	f102 0214 	add.w	r2, r2, #20
 80004da:	bfd8      	it	le
 80004dc:	f1c2 0c20 	rsble	ip, r2, #32
 80004e0:	fa01 f102 	lsl.w	r1, r1, r2
 80004e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80004e8:	bfdc      	itt	le
 80004ea:	ea41 010c 	orrle.w	r1, r1, ip
 80004ee:	4090      	lslle	r0, r2
 80004f0:	1ae4      	subs	r4, r4, r3
 80004f2:	bfa2      	ittt	ge
 80004f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80004f8:	4329      	orrge	r1, r5
 80004fa:	bd30      	popge	{r4, r5, pc}
 80004fc:	ea6f 0404 	mvn.w	r4, r4
 8000500:	3c1f      	subs	r4, #31
 8000502:	da1c      	bge.n	800053e <__adddf3+0x1d2>
 8000504:	340c      	adds	r4, #12
 8000506:	dc0e      	bgt.n	8000526 <__adddf3+0x1ba>
 8000508:	f104 0414 	add.w	r4, r4, #20
 800050c:	f1c4 0220 	rsb	r2, r4, #32
 8000510:	fa20 f004 	lsr.w	r0, r0, r4
 8000514:	fa01 f302 	lsl.w	r3, r1, r2
 8000518:	ea40 0003 	orr.w	r0, r0, r3
 800051c:	fa21 f304 	lsr.w	r3, r1, r4
 8000520:	ea45 0103 	orr.w	r1, r5, r3
 8000524:	bd30      	pop	{r4, r5, pc}
 8000526:	f1c4 040c 	rsb	r4, r4, #12
 800052a:	f1c4 0220 	rsb	r2, r4, #32
 800052e:	fa20 f002 	lsr.w	r0, r0, r2
 8000532:	fa01 f304 	lsl.w	r3, r1, r4
 8000536:	ea40 0003 	orr.w	r0, r0, r3
 800053a:	4629      	mov	r1, r5
 800053c:	bd30      	pop	{r4, r5, pc}
 800053e:	fa21 f004 	lsr.w	r0, r1, r4
 8000542:	4629      	mov	r1, r5
 8000544:	bd30      	pop	{r4, r5, pc}
 8000546:	f094 0f00 	teq	r4, #0
 800054a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800054e:	bf06      	itte	eq
 8000550:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000554:	3401      	addeq	r4, #1
 8000556:	3d01      	subne	r5, #1
 8000558:	e74e      	b.n	80003f8 <__adddf3+0x8c>
 800055a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800055e:	bf18      	it	ne
 8000560:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000564:	d029      	beq.n	80005ba <__adddf3+0x24e>
 8000566:	ea94 0f05 	teq	r4, r5
 800056a:	bf08      	it	eq
 800056c:	ea90 0f02 	teqeq	r0, r2
 8000570:	d005      	beq.n	800057e <__adddf3+0x212>
 8000572:	ea54 0c00 	orrs.w	ip, r4, r0
 8000576:	bf04      	itt	eq
 8000578:	4619      	moveq	r1, r3
 800057a:	4610      	moveq	r0, r2
 800057c:	bd30      	pop	{r4, r5, pc}
 800057e:	ea91 0f03 	teq	r1, r3
 8000582:	bf1e      	ittt	ne
 8000584:	2100      	movne	r1, #0
 8000586:	2000      	movne	r0, #0
 8000588:	bd30      	popne	{r4, r5, pc}
 800058a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800058e:	d105      	bne.n	800059c <__adddf3+0x230>
 8000590:	0040      	lsls	r0, r0, #1
 8000592:	4149      	adcs	r1, r1
 8000594:	bf28      	it	cs
 8000596:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800059a:	bd30      	pop	{r4, r5, pc}
 800059c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80005a0:	bf3c      	itt	cc
 80005a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80005a6:	bd30      	popcc	{r4, r5, pc}
 80005a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005b4:	f04f 0000 	mov.w	r0, #0
 80005b8:	bd30      	pop	{r4, r5, pc}
 80005ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005be:	bf1a      	itte	ne
 80005c0:	4619      	movne	r1, r3
 80005c2:	4610      	movne	r0, r2
 80005c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80005c8:	bf1c      	itt	ne
 80005ca:	460b      	movne	r3, r1
 80005cc:	4602      	movne	r2, r0
 80005ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80005d2:	bf06      	itte	eq
 80005d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80005d8:	ea91 0f03 	teqeq	r1, r3
 80005dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80005e0:	bd30      	pop	{r4, r5, pc}
 80005e2:	bf00      	nop

080005e4 <__aeabi_ui2d>:
 80005e4:	f090 0f00 	teq	r0, #0
 80005e8:	bf04      	itt	eq
 80005ea:	2100      	moveq	r1, #0
 80005ec:	4770      	bxeq	lr
 80005ee:	b530      	push	{r4, r5, lr}
 80005f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005f8:	f04f 0500 	mov.w	r5, #0
 80005fc:	f04f 0100 	mov.w	r1, #0
 8000600:	e750      	b.n	80004a4 <__adddf3+0x138>
 8000602:	bf00      	nop

08000604 <__aeabi_i2d>:
 8000604:	f090 0f00 	teq	r0, #0
 8000608:	bf04      	itt	eq
 800060a:	2100      	moveq	r1, #0
 800060c:	4770      	bxeq	lr
 800060e:	b530      	push	{r4, r5, lr}
 8000610:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000614:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000618:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800061c:	bf48      	it	mi
 800061e:	4240      	negmi	r0, r0
 8000620:	f04f 0100 	mov.w	r1, #0
 8000624:	e73e      	b.n	80004a4 <__adddf3+0x138>
 8000626:	bf00      	nop

08000628 <__aeabi_f2d>:
 8000628:	0042      	lsls	r2, r0, #1
 800062a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800062e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000632:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000636:	bf1f      	itttt	ne
 8000638:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800063c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000640:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000644:	4770      	bxne	lr
 8000646:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800064a:	bf08      	it	eq
 800064c:	4770      	bxeq	lr
 800064e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000652:	bf04      	itt	eq
 8000654:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000658:	4770      	bxeq	lr
 800065a:	b530      	push	{r4, r5, lr}
 800065c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000660:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000664:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000668:	e71c      	b.n	80004a4 <__adddf3+0x138>
 800066a:	bf00      	nop

0800066c <__aeabi_ul2d>:
 800066c:	ea50 0201 	orrs.w	r2, r0, r1
 8000670:	bf08      	it	eq
 8000672:	4770      	bxeq	lr
 8000674:	b530      	push	{r4, r5, lr}
 8000676:	f04f 0500 	mov.w	r5, #0
 800067a:	e00a      	b.n	8000692 <__aeabi_l2d+0x16>

0800067c <__aeabi_l2d>:
 800067c:	ea50 0201 	orrs.w	r2, r0, r1
 8000680:	bf08      	it	eq
 8000682:	4770      	bxeq	lr
 8000684:	b530      	push	{r4, r5, lr}
 8000686:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800068a:	d502      	bpl.n	8000692 <__aeabi_l2d+0x16>
 800068c:	4240      	negs	r0, r0
 800068e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000692:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000696:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800069a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800069e:	f43f aed8 	beq.w	8000452 <__adddf3+0xe6>
 80006a2:	f04f 0203 	mov.w	r2, #3
 80006a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006aa:	bf18      	it	ne
 80006ac:	3203      	addne	r2, #3
 80006ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006b2:	bf18      	it	ne
 80006b4:	3203      	addne	r2, #3
 80006b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006ba:	f1c2 0320 	rsb	r3, r2, #32
 80006be:	fa00 fc03 	lsl.w	ip, r0, r3
 80006c2:	fa20 f002 	lsr.w	r0, r0, r2
 80006c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80006ca:	ea40 000e 	orr.w	r0, r0, lr
 80006ce:	fa21 f102 	lsr.w	r1, r1, r2
 80006d2:	4414      	add	r4, r2
 80006d4:	e6bd      	b.n	8000452 <__adddf3+0xe6>
 80006d6:	bf00      	nop

080006d8 <__aeabi_dmul>:
 80006d8:	b570      	push	{r4, r5, r6, lr}
 80006da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80006de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80006e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80006e6:	bf1d      	ittte	ne
 80006e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80006ec:	ea94 0f0c 	teqne	r4, ip
 80006f0:	ea95 0f0c 	teqne	r5, ip
 80006f4:	f000 f8de 	bleq	80008b4 <__aeabi_dmul+0x1dc>
 80006f8:	442c      	add	r4, r5
 80006fa:	ea81 0603 	eor.w	r6, r1, r3
 80006fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000702:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000706:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800070a:	bf18      	it	ne
 800070c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000710:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000714:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000718:	d038      	beq.n	800078c <__aeabi_dmul+0xb4>
 800071a:	fba0 ce02 	umull	ip, lr, r0, r2
 800071e:	f04f 0500 	mov.w	r5, #0
 8000722:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000726:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800072a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800072e:	f04f 0600 	mov.w	r6, #0
 8000732:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000736:	f09c 0f00 	teq	ip, #0
 800073a:	bf18      	it	ne
 800073c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000740:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000744:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000748:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800074c:	d204      	bcs.n	8000758 <__aeabi_dmul+0x80>
 800074e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000752:	416d      	adcs	r5, r5
 8000754:	eb46 0606 	adc.w	r6, r6, r6
 8000758:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800075c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000760:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000764:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000768:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800076c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000770:	bf88      	it	hi
 8000772:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000776:	d81e      	bhi.n	80007b6 <__aeabi_dmul+0xde>
 8000778:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800077c:	bf08      	it	eq
 800077e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000782:	f150 0000 	adcs.w	r0, r0, #0
 8000786:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000790:	ea46 0101 	orr.w	r1, r6, r1
 8000794:	ea40 0002 	orr.w	r0, r0, r2
 8000798:	ea81 0103 	eor.w	r1, r1, r3
 800079c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80007a0:	bfc2      	ittt	gt
 80007a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80007a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80007aa:	bd70      	popgt	{r4, r5, r6, pc}
 80007ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80007b0:	f04f 0e00 	mov.w	lr, #0
 80007b4:	3c01      	subs	r4, #1
 80007b6:	f300 80ab 	bgt.w	8000910 <__aeabi_dmul+0x238>
 80007ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80007be:	bfde      	ittt	le
 80007c0:	2000      	movle	r0, #0
 80007c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80007c6:	bd70      	pople	{r4, r5, r6, pc}
 80007c8:	f1c4 0400 	rsb	r4, r4, #0
 80007cc:	3c20      	subs	r4, #32
 80007ce:	da35      	bge.n	800083c <__aeabi_dmul+0x164>
 80007d0:	340c      	adds	r4, #12
 80007d2:	dc1b      	bgt.n	800080c <__aeabi_dmul+0x134>
 80007d4:	f104 0414 	add.w	r4, r4, #20
 80007d8:	f1c4 0520 	rsb	r5, r4, #32
 80007dc:	fa00 f305 	lsl.w	r3, r0, r5
 80007e0:	fa20 f004 	lsr.w	r0, r0, r4
 80007e4:	fa01 f205 	lsl.w	r2, r1, r5
 80007e8:	ea40 0002 	orr.w	r0, r0, r2
 80007ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80007f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80007f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007f8:	fa21 f604 	lsr.w	r6, r1, r4
 80007fc:	eb42 0106 	adc.w	r1, r2, r6
 8000800:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000804:	bf08      	it	eq
 8000806:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800080a:	bd70      	pop	{r4, r5, r6, pc}
 800080c:	f1c4 040c 	rsb	r4, r4, #12
 8000810:	f1c4 0520 	rsb	r5, r4, #32
 8000814:	fa00 f304 	lsl.w	r3, r0, r4
 8000818:	fa20 f005 	lsr.w	r0, r0, r5
 800081c:	fa01 f204 	lsl.w	r2, r1, r4
 8000820:	ea40 0002 	orr.w	r0, r0, r2
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000828:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800082c:	f141 0100 	adc.w	r1, r1, #0
 8000830:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000834:	bf08      	it	eq
 8000836:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800083a:	bd70      	pop	{r4, r5, r6, pc}
 800083c:	f1c4 0520 	rsb	r5, r4, #32
 8000840:	fa00 f205 	lsl.w	r2, r0, r5
 8000844:	ea4e 0e02 	orr.w	lr, lr, r2
 8000848:	fa20 f304 	lsr.w	r3, r0, r4
 800084c:	fa01 f205 	lsl.w	r2, r1, r5
 8000850:	ea43 0302 	orr.w	r3, r3, r2
 8000854:	fa21 f004 	lsr.w	r0, r1, r4
 8000858:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800085c:	fa21 f204 	lsr.w	r2, r1, r4
 8000860:	ea20 0002 	bic.w	r0, r0, r2
 8000864:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000868:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800086c:	bf08      	it	eq
 800086e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000872:	bd70      	pop	{r4, r5, r6, pc}
 8000874:	f094 0f00 	teq	r4, #0
 8000878:	d10f      	bne.n	800089a <__aeabi_dmul+0x1c2>
 800087a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800087e:	0040      	lsls	r0, r0, #1
 8000880:	eb41 0101 	adc.w	r1, r1, r1
 8000884:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000888:	bf08      	it	eq
 800088a:	3c01      	subeq	r4, #1
 800088c:	d0f7      	beq.n	800087e <__aeabi_dmul+0x1a6>
 800088e:	ea41 0106 	orr.w	r1, r1, r6
 8000892:	f095 0f00 	teq	r5, #0
 8000896:	bf18      	it	ne
 8000898:	4770      	bxne	lr
 800089a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800089e:	0052      	lsls	r2, r2, #1
 80008a0:	eb43 0303 	adc.w	r3, r3, r3
 80008a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80008a8:	bf08      	it	eq
 80008aa:	3d01      	subeq	r5, #1
 80008ac:	d0f7      	beq.n	800089e <__aeabi_dmul+0x1c6>
 80008ae:	ea43 0306 	orr.w	r3, r3, r6
 80008b2:	4770      	bx	lr
 80008b4:	ea94 0f0c 	teq	r4, ip
 80008b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008bc:	bf18      	it	ne
 80008be:	ea95 0f0c 	teqne	r5, ip
 80008c2:	d00c      	beq.n	80008de <__aeabi_dmul+0x206>
 80008c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008c8:	bf18      	it	ne
 80008ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008ce:	d1d1      	bne.n	8000874 <__aeabi_dmul+0x19c>
 80008d0:	ea81 0103 	eor.w	r1, r1, r3
 80008d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80008d8:	f04f 0000 	mov.w	r0, #0
 80008dc:	bd70      	pop	{r4, r5, r6, pc}
 80008de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e2:	bf06      	itte	eq
 80008e4:	4610      	moveq	r0, r2
 80008e6:	4619      	moveq	r1, r3
 80008e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008ec:	d019      	beq.n	8000922 <__aeabi_dmul+0x24a>
 80008ee:	ea94 0f0c 	teq	r4, ip
 80008f2:	d102      	bne.n	80008fa <__aeabi_dmul+0x222>
 80008f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80008f8:	d113      	bne.n	8000922 <__aeabi_dmul+0x24a>
 80008fa:	ea95 0f0c 	teq	r5, ip
 80008fe:	d105      	bne.n	800090c <__aeabi_dmul+0x234>
 8000900:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000904:	bf1c      	itt	ne
 8000906:	4610      	movne	r0, r2
 8000908:	4619      	movne	r1, r3
 800090a:	d10a      	bne.n	8000922 <__aeabi_dmul+0x24a>
 800090c:	ea81 0103 	eor.w	r1, r1, r3
 8000910:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000914:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000918:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800091c:	f04f 0000 	mov.w	r0, #0
 8000920:	bd70      	pop	{r4, r5, r6, pc}
 8000922:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000926:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800092a:	bd70      	pop	{r4, r5, r6, pc}

0800092c <__aeabi_ddiv>:
 800092c:	b570      	push	{r4, r5, r6, lr}
 800092e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000932:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000936:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800093a:	bf1d      	ittte	ne
 800093c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000940:	ea94 0f0c 	teqne	r4, ip
 8000944:	ea95 0f0c 	teqne	r5, ip
 8000948:	f000 f8a7 	bleq	8000a9a <__aeabi_ddiv+0x16e>
 800094c:	eba4 0405 	sub.w	r4, r4, r5
 8000950:	ea81 0e03 	eor.w	lr, r1, r3
 8000954:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000958:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800095c:	f000 8088 	beq.w	8000a70 <__aeabi_ddiv+0x144>
 8000960:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000964:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000968:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800096c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000970:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000974:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000978:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800097c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000980:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000984:	429d      	cmp	r5, r3
 8000986:	bf08      	it	eq
 8000988:	4296      	cmpeq	r6, r2
 800098a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800098e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000992:	d202      	bcs.n	800099a <__aeabi_ddiv+0x6e>
 8000994:	085b      	lsrs	r3, r3, #1
 8000996:	ea4f 0232 	mov.w	r2, r2, rrx
 800099a:	1ab6      	subs	r6, r6, r2
 800099c:	eb65 0503 	sbc.w	r5, r5, r3
 80009a0:	085b      	lsrs	r3, r3, #1
 80009a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80009aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80009ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80009b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009b6:	bf22      	ittt	cs
 80009b8:	1ab6      	subcs	r6, r6, r2
 80009ba:	4675      	movcs	r5, lr
 80009bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80009c0:	085b      	lsrs	r3, r3, #1
 80009c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80009ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009ce:	bf22      	ittt	cs
 80009d0:	1ab6      	subcs	r6, r6, r2
 80009d2:	4675      	movcs	r5, lr
 80009d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80009d8:	085b      	lsrs	r3, r3, #1
 80009da:	ea4f 0232 	mov.w	r2, r2, rrx
 80009de:	ebb6 0e02 	subs.w	lr, r6, r2
 80009e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009e6:	bf22      	ittt	cs
 80009e8:	1ab6      	subcs	r6, r6, r2
 80009ea:	4675      	movcs	r5, lr
 80009ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80009f0:	085b      	lsrs	r3, r3, #1
 80009f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80009fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009fe:	bf22      	ittt	cs
 8000a00:	1ab6      	subcs	r6, r6, r2
 8000a02:	4675      	movcs	r5, lr
 8000a04:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000a08:	ea55 0e06 	orrs.w	lr, r5, r6
 8000a0c:	d018      	beq.n	8000a40 <__aeabi_ddiv+0x114>
 8000a0e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000a12:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000a16:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000a1a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000a1e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000a22:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000a26:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000a2a:	d1c0      	bne.n	80009ae <__aeabi_ddiv+0x82>
 8000a2c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a30:	d10b      	bne.n	8000a4a <__aeabi_ddiv+0x11e>
 8000a32:	ea41 0100 	orr.w	r1, r1, r0
 8000a36:	f04f 0000 	mov.w	r0, #0
 8000a3a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000a3e:	e7b6      	b.n	80009ae <__aeabi_ddiv+0x82>
 8000a40:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a44:	bf04      	itt	eq
 8000a46:	4301      	orreq	r1, r0
 8000a48:	2000      	moveq	r0, #0
 8000a4a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000a4e:	bf88      	it	hi
 8000a50:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000a54:	f63f aeaf 	bhi.w	80007b6 <__aeabi_dmul+0xde>
 8000a58:	ebb5 0c03 	subs.w	ip, r5, r3
 8000a5c:	bf04      	itt	eq
 8000a5e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000a62:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000a66:	f150 0000 	adcs.w	r0, r0, #0
 8000a6a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000a6e:	bd70      	pop	{r4, r5, r6, pc}
 8000a70:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000a74:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000a78:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000a7c:	bfc2      	ittt	gt
 8000a7e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000a82:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a86:	bd70      	popgt	{r4, r5, r6, pc}
 8000a88:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a8c:	f04f 0e00 	mov.w	lr, #0
 8000a90:	3c01      	subs	r4, #1
 8000a92:	e690      	b.n	80007b6 <__aeabi_dmul+0xde>
 8000a94:	ea45 0e06 	orr.w	lr, r5, r6
 8000a98:	e68d      	b.n	80007b6 <__aeabi_dmul+0xde>
 8000a9a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a9e:	ea94 0f0c 	teq	r4, ip
 8000aa2:	bf08      	it	eq
 8000aa4:	ea95 0f0c 	teqeq	r5, ip
 8000aa8:	f43f af3b 	beq.w	8000922 <__aeabi_dmul+0x24a>
 8000aac:	ea94 0f0c 	teq	r4, ip
 8000ab0:	d10a      	bne.n	8000ac8 <__aeabi_ddiv+0x19c>
 8000ab2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000ab6:	f47f af34 	bne.w	8000922 <__aeabi_dmul+0x24a>
 8000aba:	ea95 0f0c 	teq	r5, ip
 8000abe:	f47f af25 	bne.w	800090c <__aeabi_dmul+0x234>
 8000ac2:	4610      	mov	r0, r2
 8000ac4:	4619      	mov	r1, r3
 8000ac6:	e72c      	b.n	8000922 <__aeabi_dmul+0x24a>
 8000ac8:	ea95 0f0c 	teq	r5, ip
 8000acc:	d106      	bne.n	8000adc <__aeabi_ddiv+0x1b0>
 8000ace:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000ad2:	f43f aefd 	beq.w	80008d0 <__aeabi_dmul+0x1f8>
 8000ad6:	4610      	mov	r0, r2
 8000ad8:	4619      	mov	r1, r3
 8000ada:	e722      	b.n	8000922 <__aeabi_dmul+0x24a>
 8000adc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000ae0:	bf18      	it	ne
 8000ae2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000ae6:	f47f aec5 	bne.w	8000874 <__aeabi_dmul+0x19c>
 8000aea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000aee:	f47f af0d 	bne.w	800090c <__aeabi_dmul+0x234>
 8000af2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000af6:	f47f aeeb 	bne.w	80008d0 <__aeabi_dmul+0x1f8>
 8000afa:	e712      	b.n	8000922 <__aeabi_dmul+0x24a>

08000afc <__gedf2>:
 8000afc:	f04f 3cff 	mov.w	ip, #4294967295
 8000b00:	e006      	b.n	8000b10 <__cmpdf2+0x4>
 8000b02:	bf00      	nop

08000b04 <__ledf2>:
 8000b04:	f04f 0c01 	mov.w	ip, #1
 8000b08:	e002      	b.n	8000b10 <__cmpdf2+0x4>
 8000b0a:	bf00      	nop

08000b0c <__cmpdf2>:
 8000b0c:	f04f 0c01 	mov.w	ip, #1
 8000b10:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000b14:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b18:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b20:	bf18      	it	ne
 8000b22:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000b26:	d01b      	beq.n	8000b60 <__cmpdf2+0x54>
 8000b28:	b001      	add	sp, #4
 8000b2a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000b2e:	bf0c      	ite	eq
 8000b30:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000b34:	ea91 0f03 	teqne	r1, r3
 8000b38:	bf02      	ittt	eq
 8000b3a:	ea90 0f02 	teqeq	r0, r2
 8000b3e:	2000      	moveq	r0, #0
 8000b40:	4770      	bxeq	lr
 8000b42:	f110 0f00 	cmn.w	r0, #0
 8000b46:	ea91 0f03 	teq	r1, r3
 8000b4a:	bf58      	it	pl
 8000b4c:	4299      	cmppl	r1, r3
 8000b4e:	bf08      	it	eq
 8000b50:	4290      	cmpeq	r0, r2
 8000b52:	bf2c      	ite	cs
 8000b54:	17d8      	asrcs	r0, r3, #31
 8000b56:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000b5a:	f040 0001 	orr.w	r0, r0, #1
 8000b5e:	4770      	bx	lr
 8000b60:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b64:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b68:	d102      	bne.n	8000b70 <__cmpdf2+0x64>
 8000b6a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b6e:	d107      	bne.n	8000b80 <__cmpdf2+0x74>
 8000b70:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b74:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b78:	d1d6      	bne.n	8000b28 <__cmpdf2+0x1c>
 8000b7a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b7e:	d0d3      	beq.n	8000b28 <__cmpdf2+0x1c>
 8000b80:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop

08000b88 <__aeabi_cdrcmple>:
 8000b88:	4684      	mov	ip, r0
 8000b8a:	4610      	mov	r0, r2
 8000b8c:	4662      	mov	r2, ip
 8000b8e:	468c      	mov	ip, r1
 8000b90:	4619      	mov	r1, r3
 8000b92:	4663      	mov	r3, ip
 8000b94:	e000      	b.n	8000b98 <__aeabi_cdcmpeq>
 8000b96:	bf00      	nop

08000b98 <__aeabi_cdcmpeq>:
 8000b98:	b501      	push	{r0, lr}
 8000b9a:	f7ff ffb7 	bl	8000b0c <__cmpdf2>
 8000b9e:	2800      	cmp	r0, #0
 8000ba0:	bf48      	it	mi
 8000ba2:	f110 0f00 	cmnmi.w	r0, #0
 8000ba6:	bd01      	pop	{r0, pc}

08000ba8 <__aeabi_dcmpeq>:
 8000ba8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bac:	f7ff fff4 	bl	8000b98 <__aeabi_cdcmpeq>
 8000bb0:	bf0c      	ite	eq
 8000bb2:	2001      	moveq	r0, #1
 8000bb4:	2000      	movne	r0, #0
 8000bb6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bba:	bf00      	nop

08000bbc <__aeabi_dcmplt>:
 8000bbc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bc0:	f7ff ffea 	bl	8000b98 <__aeabi_cdcmpeq>
 8000bc4:	bf34      	ite	cc
 8000bc6:	2001      	movcc	r0, #1
 8000bc8:	2000      	movcs	r0, #0
 8000bca:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bce:	bf00      	nop

08000bd0 <__aeabi_dcmple>:
 8000bd0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bd4:	f7ff ffe0 	bl	8000b98 <__aeabi_cdcmpeq>
 8000bd8:	bf94      	ite	ls
 8000bda:	2001      	movls	r0, #1
 8000bdc:	2000      	movhi	r0, #0
 8000bde:	f85d fb08 	ldr.w	pc, [sp], #8
 8000be2:	bf00      	nop

08000be4 <__aeabi_dcmpge>:
 8000be4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000be8:	f7ff ffce 	bl	8000b88 <__aeabi_cdrcmple>
 8000bec:	bf94      	ite	ls
 8000bee:	2001      	movls	r0, #1
 8000bf0:	2000      	movhi	r0, #0
 8000bf2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bf6:	bf00      	nop

08000bf8 <__aeabi_dcmpgt>:
 8000bf8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bfc:	f7ff ffc4 	bl	8000b88 <__aeabi_cdrcmple>
 8000c00:	bf34      	ite	cc
 8000c02:	2001      	movcc	r0, #1
 8000c04:	2000      	movcs	r0, #0
 8000c06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c0a:	bf00      	nop

08000c0c <__aeabi_dcmpun>:
 8000c0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000c10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c14:	d102      	bne.n	8000c1c <__aeabi_dcmpun+0x10>
 8000c16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000c1a:	d10a      	bne.n	8000c32 <__aeabi_dcmpun+0x26>
 8000c1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000c20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c24:	d102      	bne.n	8000c2c <__aeabi_dcmpun+0x20>
 8000c26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000c2a:	d102      	bne.n	8000c32 <__aeabi_dcmpun+0x26>
 8000c2c:	f04f 0000 	mov.w	r0, #0
 8000c30:	4770      	bx	lr
 8000c32:	f04f 0001 	mov.w	r0, #1
 8000c36:	4770      	bx	lr

08000c38 <__aeabi_d2iz>:
 8000c38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000c40:	d215      	bcs.n	8000c6e <__aeabi_d2iz+0x36>
 8000c42:	d511      	bpl.n	8000c68 <__aeabi_d2iz+0x30>
 8000c44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000c48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c4c:	d912      	bls.n	8000c74 <__aeabi_d2iz+0x3c>
 8000c4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000c5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000c62:	bf18      	it	ne
 8000c64:	4240      	negne	r0, r0
 8000c66:	4770      	bx	lr
 8000c68:	f04f 0000 	mov.w	r0, #0
 8000c6c:	4770      	bx	lr
 8000c6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c72:	d105      	bne.n	8000c80 <__aeabi_d2iz+0x48>
 8000c74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000c78:	bf08      	it	eq
 8000c7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000c7e:	4770      	bx	lr
 8000c80:	f04f 0000 	mov.w	r0, #0
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_d2uiz>:
 8000c88:	004a      	lsls	r2, r1, #1
 8000c8a:	d211      	bcs.n	8000cb0 <__aeabi_d2uiz+0x28>
 8000c8c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000c90:	d211      	bcs.n	8000cb6 <__aeabi_d2uiz+0x2e>
 8000c92:	d50d      	bpl.n	8000cb0 <__aeabi_d2uiz+0x28>
 8000c94:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000c98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c9c:	d40e      	bmi.n	8000cbc <__aeabi_d2uiz+0x34>
 8000c9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ca2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ca6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000caa:	fa23 f002 	lsr.w	r0, r3, r2
 8000cae:	4770      	bx	lr
 8000cb0:	f04f 0000 	mov.w	r0, #0
 8000cb4:	4770      	bx	lr
 8000cb6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000cba:	d102      	bne.n	8000cc2 <__aeabi_d2uiz+0x3a>
 8000cbc:	f04f 30ff 	mov.w	r0, #4294967295
 8000cc0:	4770      	bx	lr
 8000cc2:	f04f 0000 	mov.w	r0, #0
 8000cc6:	4770      	bx	lr

08000cc8 <__aeabi_d2f>:
 8000cc8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ccc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000cd0:	bf24      	itt	cs
 8000cd2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000cd6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000cda:	d90d      	bls.n	8000cf8 <__aeabi_d2f+0x30>
 8000cdc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ce0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ce4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ce8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000cec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000cf0:	bf08      	it	eq
 8000cf2:	f020 0001 	biceq.w	r0, r0, #1
 8000cf6:	4770      	bx	lr
 8000cf8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000cfc:	d121      	bne.n	8000d42 <__aeabi_d2f+0x7a>
 8000cfe:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000d02:	bfbc      	itt	lt
 8000d04:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000d08:	4770      	bxlt	lr
 8000d0a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000d0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000d12:	f1c2 0218 	rsb	r2, r2, #24
 8000d16:	f1c2 0c20 	rsb	ip, r2, #32
 8000d1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000d1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000d22:	bf18      	it	ne
 8000d24:	f040 0001 	orrne.w	r0, r0, #1
 8000d28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000d2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000d30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000d34:	ea40 000c 	orr.w	r0, r0, ip
 8000d38:	fa23 f302 	lsr.w	r3, r3, r2
 8000d3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000d40:	e7cc      	b.n	8000cdc <__aeabi_d2f+0x14>
 8000d42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000d46:	d107      	bne.n	8000d58 <__aeabi_d2f+0x90>
 8000d48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000d4c:	bf1e      	ittt	ne
 8000d4e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000d52:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000d56:	4770      	bxne	lr
 8000d58:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000d5c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000d60:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000d64:	4770      	bx	lr
 8000d66:	bf00      	nop

08000d68 <__aeabi_uldivmod>:
 8000d68:	b953      	cbnz	r3, 8000d80 <__aeabi_uldivmod+0x18>
 8000d6a:	b94a      	cbnz	r2, 8000d80 <__aeabi_uldivmod+0x18>
 8000d6c:	2900      	cmp	r1, #0
 8000d6e:	bf08      	it	eq
 8000d70:	2800      	cmpeq	r0, #0
 8000d72:	bf1c      	itt	ne
 8000d74:	f04f 31ff 	movne.w	r1, #4294967295
 8000d78:	f04f 30ff 	movne.w	r0, #4294967295
 8000d7c:	f000 b974 	b.w	8001068 <__aeabi_idiv0>
 8000d80:	f1ad 0c08 	sub.w	ip, sp, #8
 8000d84:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000d88:	f000 f806 	bl	8000d98 <__udivmoddi4>
 8000d8c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d90:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d94:	b004      	add	sp, #16
 8000d96:	4770      	bx	lr

08000d98 <__udivmoddi4>:
 8000d98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d9c:	9d08      	ldr	r5, [sp, #32]
 8000d9e:	4604      	mov	r4, r0
 8000da0:	468e      	mov	lr, r1
 8000da2:	2b00      	cmp	r3, #0
 8000da4:	d14d      	bne.n	8000e42 <__udivmoddi4+0xaa>
 8000da6:	428a      	cmp	r2, r1
 8000da8:	4694      	mov	ip, r2
 8000daa:	d969      	bls.n	8000e80 <__udivmoddi4+0xe8>
 8000dac:	fab2 f282 	clz	r2, r2
 8000db0:	b152      	cbz	r2, 8000dc8 <__udivmoddi4+0x30>
 8000db2:	fa01 f302 	lsl.w	r3, r1, r2
 8000db6:	f1c2 0120 	rsb	r1, r2, #32
 8000dba:	fa20 f101 	lsr.w	r1, r0, r1
 8000dbe:	fa0c fc02 	lsl.w	ip, ip, r2
 8000dc2:	ea41 0e03 	orr.w	lr, r1, r3
 8000dc6:	4094      	lsls	r4, r2
 8000dc8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000dcc:	0c21      	lsrs	r1, r4, #16
 8000dce:	fbbe f6f8 	udiv	r6, lr, r8
 8000dd2:	fa1f f78c 	uxth.w	r7, ip
 8000dd6:	fb08 e316 	mls	r3, r8, r6, lr
 8000dda:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000dde:	fb06 f107 	mul.w	r1, r6, r7
 8000de2:	4299      	cmp	r1, r3
 8000de4:	d90a      	bls.n	8000dfc <__udivmoddi4+0x64>
 8000de6:	eb1c 0303 	adds.w	r3, ip, r3
 8000dea:	f106 30ff 	add.w	r0, r6, #4294967295
 8000dee:	f080 811f 	bcs.w	8001030 <__udivmoddi4+0x298>
 8000df2:	4299      	cmp	r1, r3
 8000df4:	f240 811c 	bls.w	8001030 <__udivmoddi4+0x298>
 8000df8:	3e02      	subs	r6, #2
 8000dfa:	4463      	add	r3, ip
 8000dfc:	1a5b      	subs	r3, r3, r1
 8000dfe:	b2a4      	uxth	r4, r4
 8000e00:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e04:	fb08 3310 	mls	r3, r8, r0, r3
 8000e08:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e0c:	fb00 f707 	mul.w	r7, r0, r7
 8000e10:	42a7      	cmp	r7, r4
 8000e12:	d90a      	bls.n	8000e2a <__udivmoddi4+0x92>
 8000e14:	eb1c 0404 	adds.w	r4, ip, r4
 8000e18:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e1c:	f080 810a 	bcs.w	8001034 <__udivmoddi4+0x29c>
 8000e20:	42a7      	cmp	r7, r4
 8000e22:	f240 8107 	bls.w	8001034 <__udivmoddi4+0x29c>
 8000e26:	4464      	add	r4, ip
 8000e28:	3802      	subs	r0, #2
 8000e2a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e2e:	1be4      	subs	r4, r4, r7
 8000e30:	2600      	movs	r6, #0
 8000e32:	b11d      	cbz	r5, 8000e3c <__udivmoddi4+0xa4>
 8000e34:	40d4      	lsrs	r4, r2
 8000e36:	2300      	movs	r3, #0
 8000e38:	e9c5 4300 	strd	r4, r3, [r5]
 8000e3c:	4631      	mov	r1, r6
 8000e3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e42:	428b      	cmp	r3, r1
 8000e44:	d909      	bls.n	8000e5a <__udivmoddi4+0xc2>
 8000e46:	2d00      	cmp	r5, #0
 8000e48:	f000 80ef 	beq.w	800102a <__udivmoddi4+0x292>
 8000e4c:	2600      	movs	r6, #0
 8000e4e:	e9c5 0100 	strd	r0, r1, [r5]
 8000e52:	4630      	mov	r0, r6
 8000e54:	4631      	mov	r1, r6
 8000e56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e5a:	fab3 f683 	clz	r6, r3
 8000e5e:	2e00      	cmp	r6, #0
 8000e60:	d14a      	bne.n	8000ef8 <__udivmoddi4+0x160>
 8000e62:	428b      	cmp	r3, r1
 8000e64:	d302      	bcc.n	8000e6c <__udivmoddi4+0xd4>
 8000e66:	4282      	cmp	r2, r0
 8000e68:	f200 80f9 	bhi.w	800105e <__udivmoddi4+0x2c6>
 8000e6c:	1a84      	subs	r4, r0, r2
 8000e6e:	eb61 0303 	sbc.w	r3, r1, r3
 8000e72:	2001      	movs	r0, #1
 8000e74:	469e      	mov	lr, r3
 8000e76:	2d00      	cmp	r5, #0
 8000e78:	d0e0      	beq.n	8000e3c <__udivmoddi4+0xa4>
 8000e7a:	e9c5 4e00 	strd	r4, lr, [r5]
 8000e7e:	e7dd      	b.n	8000e3c <__udivmoddi4+0xa4>
 8000e80:	b902      	cbnz	r2, 8000e84 <__udivmoddi4+0xec>
 8000e82:	deff      	udf	#255	; 0xff
 8000e84:	fab2 f282 	clz	r2, r2
 8000e88:	2a00      	cmp	r2, #0
 8000e8a:	f040 8092 	bne.w	8000fb2 <__udivmoddi4+0x21a>
 8000e8e:	eba1 010c 	sub.w	r1, r1, ip
 8000e92:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e96:	fa1f fe8c 	uxth.w	lr, ip
 8000e9a:	2601      	movs	r6, #1
 8000e9c:	0c20      	lsrs	r0, r4, #16
 8000e9e:	fbb1 f3f7 	udiv	r3, r1, r7
 8000ea2:	fb07 1113 	mls	r1, r7, r3, r1
 8000ea6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000eaa:	fb0e f003 	mul.w	r0, lr, r3
 8000eae:	4288      	cmp	r0, r1
 8000eb0:	d908      	bls.n	8000ec4 <__udivmoddi4+0x12c>
 8000eb2:	eb1c 0101 	adds.w	r1, ip, r1
 8000eb6:	f103 38ff 	add.w	r8, r3, #4294967295
 8000eba:	d202      	bcs.n	8000ec2 <__udivmoddi4+0x12a>
 8000ebc:	4288      	cmp	r0, r1
 8000ebe:	f200 80cb 	bhi.w	8001058 <__udivmoddi4+0x2c0>
 8000ec2:	4643      	mov	r3, r8
 8000ec4:	1a09      	subs	r1, r1, r0
 8000ec6:	b2a4      	uxth	r4, r4
 8000ec8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000ecc:	fb07 1110 	mls	r1, r7, r0, r1
 8000ed0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000ed4:	fb0e fe00 	mul.w	lr, lr, r0
 8000ed8:	45a6      	cmp	lr, r4
 8000eda:	d908      	bls.n	8000eee <__udivmoddi4+0x156>
 8000edc:	eb1c 0404 	adds.w	r4, ip, r4
 8000ee0:	f100 31ff 	add.w	r1, r0, #4294967295
 8000ee4:	d202      	bcs.n	8000eec <__udivmoddi4+0x154>
 8000ee6:	45a6      	cmp	lr, r4
 8000ee8:	f200 80bb 	bhi.w	8001062 <__udivmoddi4+0x2ca>
 8000eec:	4608      	mov	r0, r1
 8000eee:	eba4 040e 	sub.w	r4, r4, lr
 8000ef2:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000ef6:	e79c      	b.n	8000e32 <__udivmoddi4+0x9a>
 8000ef8:	f1c6 0720 	rsb	r7, r6, #32
 8000efc:	40b3      	lsls	r3, r6
 8000efe:	fa22 fc07 	lsr.w	ip, r2, r7
 8000f02:	ea4c 0c03 	orr.w	ip, ip, r3
 8000f06:	fa20 f407 	lsr.w	r4, r0, r7
 8000f0a:	fa01 f306 	lsl.w	r3, r1, r6
 8000f0e:	431c      	orrs	r4, r3
 8000f10:	40f9      	lsrs	r1, r7
 8000f12:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000f16:	fa00 f306 	lsl.w	r3, r0, r6
 8000f1a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000f1e:	0c20      	lsrs	r0, r4, #16
 8000f20:	fa1f fe8c 	uxth.w	lr, ip
 8000f24:	fb09 1118 	mls	r1, r9, r8, r1
 8000f28:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000f2c:	fb08 f00e 	mul.w	r0, r8, lr
 8000f30:	4288      	cmp	r0, r1
 8000f32:	fa02 f206 	lsl.w	r2, r2, r6
 8000f36:	d90b      	bls.n	8000f50 <__udivmoddi4+0x1b8>
 8000f38:	eb1c 0101 	adds.w	r1, ip, r1
 8000f3c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000f40:	f080 8088 	bcs.w	8001054 <__udivmoddi4+0x2bc>
 8000f44:	4288      	cmp	r0, r1
 8000f46:	f240 8085 	bls.w	8001054 <__udivmoddi4+0x2bc>
 8000f4a:	f1a8 0802 	sub.w	r8, r8, #2
 8000f4e:	4461      	add	r1, ip
 8000f50:	1a09      	subs	r1, r1, r0
 8000f52:	b2a4      	uxth	r4, r4
 8000f54:	fbb1 f0f9 	udiv	r0, r1, r9
 8000f58:	fb09 1110 	mls	r1, r9, r0, r1
 8000f5c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000f60:	fb00 fe0e 	mul.w	lr, r0, lr
 8000f64:	458e      	cmp	lr, r1
 8000f66:	d908      	bls.n	8000f7a <__udivmoddi4+0x1e2>
 8000f68:	eb1c 0101 	adds.w	r1, ip, r1
 8000f6c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000f70:	d26c      	bcs.n	800104c <__udivmoddi4+0x2b4>
 8000f72:	458e      	cmp	lr, r1
 8000f74:	d96a      	bls.n	800104c <__udivmoddi4+0x2b4>
 8000f76:	3802      	subs	r0, #2
 8000f78:	4461      	add	r1, ip
 8000f7a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000f7e:	fba0 9402 	umull	r9, r4, r0, r2
 8000f82:	eba1 010e 	sub.w	r1, r1, lr
 8000f86:	42a1      	cmp	r1, r4
 8000f88:	46c8      	mov	r8, r9
 8000f8a:	46a6      	mov	lr, r4
 8000f8c:	d356      	bcc.n	800103c <__udivmoddi4+0x2a4>
 8000f8e:	d053      	beq.n	8001038 <__udivmoddi4+0x2a0>
 8000f90:	b15d      	cbz	r5, 8000faa <__udivmoddi4+0x212>
 8000f92:	ebb3 0208 	subs.w	r2, r3, r8
 8000f96:	eb61 010e 	sbc.w	r1, r1, lr
 8000f9a:	fa01 f707 	lsl.w	r7, r1, r7
 8000f9e:	fa22 f306 	lsr.w	r3, r2, r6
 8000fa2:	40f1      	lsrs	r1, r6
 8000fa4:	431f      	orrs	r7, r3
 8000fa6:	e9c5 7100 	strd	r7, r1, [r5]
 8000faa:	2600      	movs	r6, #0
 8000fac:	4631      	mov	r1, r6
 8000fae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fb2:	f1c2 0320 	rsb	r3, r2, #32
 8000fb6:	40d8      	lsrs	r0, r3
 8000fb8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000fbc:	fa21 f303 	lsr.w	r3, r1, r3
 8000fc0:	4091      	lsls	r1, r2
 8000fc2:	4301      	orrs	r1, r0
 8000fc4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000fc8:	fa1f fe8c 	uxth.w	lr, ip
 8000fcc:	fbb3 f0f7 	udiv	r0, r3, r7
 8000fd0:	fb07 3610 	mls	r6, r7, r0, r3
 8000fd4:	0c0b      	lsrs	r3, r1, #16
 8000fd6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000fda:	fb00 f60e 	mul.w	r6, r0, lr
 8000fde:	429e      	cmp	r6, r3
 8000fe0:	fa04 f402 	lsl.w	r4, r4, r2
 8000fe4:	d908      	bls.n	8000ff8 <__udivmoddi4+0x260>
 8000fe6:	eb1c 0303 	adds.w	r3, ip, r3
 8000fea:	f100 38ff 	add.w	r8, r0, #4294967295
 8000fee:	d22f      	bcs.n	8001050 <__udivmoddi4+0x2b8>
 8000ff0:	429e      	cmp	r6, r3
 8000ff2:	d92d      	bls.n	8001050 <__udivmoddi4+0x2b8>
 8000ff4:	3802      	subs	r0, #2
 8000ff6:	4463      	add	r3, ip
 8000ff8:	1b9b      	subs	r3, r3, r6
 8000ffa:	b289      	uxth	r1, r1
 8000ffc:	fbb3 f6f7 	udiv	r6, r3, r7
 8001000:	fb07 3316 	mls	r3, r7, r6, r3
 8001004:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8001008:	fb06 f30e 	mul.w	r3, r6, lr
 800100c:	428b      	cmp	r3, r1
 800100e:	d908      	bls.n	8001022 <__udivmoddi4+0x28a>
 8001010:	eb1c 0101 	adds.w	r1, ip, r1
 8001014:	f106 38ff 	add.w	r8, r6, #4294967295
 8001018:	d216      	bcs.n	8001048 <__udivmoddi4+0x2b0>
 800101a:	428b      	cmp	r3, r1
 800101c:	d914      	bls.n	8001048 <__udivmoddi4+0x2b0>
 800101e:	3e02      	subs	r6, #2
 8001020:	4461      	add	r1, ip
 8001022:	1ac9      	subs	r1, r1, r3
 8001024:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8001028:	e738      	b.n	8000e9c <__udivmoddi4+0x104>
 800102a:	462e      	mov	r6, r5
 800102c:	4628      	mov	r0, r5
 800102e:	e705      	b.n	8000e3c <__udivmoddi4+0xa4>
 8001030:	4606      	mov	r6, r0
 8001032:	e6e3      	b.n	8000dfc <__udivmoddi4+0x64>
 8001034:	4618      	mov	r0, r3
 8001036:	e6f8      	b.n	8000e2a <__udivmoddi4+0x92>
 8001038:	454b      	cmp	r3, r9
 800103a:	d2a9      	bcs.n	8000f90 <__udivmoddi4+0x1f8>
 800103c:	ebb9 0802 	subs.w	r8, r9, r2
 8001040:	eb64 0e0c 	sbc.w	lr, r4, ip
 8001044:	3801      	subs	r0, #1
 8001046:	e7a3      	b.n	8000f90 <__udivmoddi4+0x1f8>
 8001048:	4646      	mov	r6, r8
 800104a:	e7ea      	b.n	8001022 <__udivmoddi4+0x28a>
 800104c:	4620      	mov	r0, r4
 800104e:	e794      	b.n	8000f7a <__udivmoddi4+0x1e2>
 8001050:	4640      	mov	r0, r8
 8001052:	e7d1      	b.n	8000ff8 <__udivmoddi4+0x260>
 8001054:	46d0      	mov	r8, sl
 8001056:	e77b      	b.n	8000f50 <__udivmoddi4+0x1b8>
 8001058:	3b02      	subs	r3, #2
 800105a:	4461      	add	r1, ip
 800105c:	e732      	b.n	8000ec4 <__udivmoddi4+0x12c>
 800105e:	4630      	mov	r0, r6
 8001060:	e709      	b.n	8000e76 <__udivmoddi4+0xde>
 8001062:	4464      	add	r4, ip
 8001064:	3802      	subs	r0, #2
 8001066:	e742      	b.n	8000eee <__udivmoddi4+0x156>

08001068 <__aeabi_idiv0>:
 8001068:	4770      	bx	lr
 800106a:	bf00      	nop

0800106c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800106c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80010a4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8001070:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8001072:	e003      	b.n	800107c <LoopCopyDataInit>

08001074 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001074:	4b0c      	ldr	r3, [pc, #48]	; (80010a8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8001076:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001078:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800107a:	3104      	adds	r1, #4

0800107c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800107c:	480b      	ldr	r0, [pc, #44]	; (80010ac <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800107e:	4b0c      	ldr	r3, [pc, #48]	; (80010b0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001080:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8001082:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001084:	d3f6      	bcc.n	8001074 <CopyDataInit>
  ldr  r2, =_sbss
 8001086:	4a0b      	ldr	r2, [pc, #44]	; (80010b4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001088:	e002      	b.n	8001090 <LoopFillZerobss>

0800108a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800108a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800108c:	f842 3b04 	str.w	r3, [r2], #4

08001090 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001090:	4b09      	ldr	r3, [pc, #36]	; (80010b8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8001092:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001094:	d3f9      	bcc.n	800108a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8001096:	f00a fcaf 	bl	800b9f8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800109a:	f02b f8d3 	bl	802c244 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800109e:	f000 fed1 	bl	8001e44 <main>
  bx  lr    
 80010a2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80010a4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80010a8:	080dfd68 	.word	0x080dfd68
  ldr  r0, =_sdata
 80010ac:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80010b0:	200002e8 	.word	0x200002e8
  ldr  r2, =_sbss
 80010b4:	200002e8 	.word	0x200002e8
  ldr  r3, = _ebss
 80010b8:	2001e484 	.word	0x2001e484

080010bc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80010bc:	e7fe      	b.n	80010bc <ADC_IRQHandler>

080010be <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80010be:	f000 bc07 	b.w	80018d0 <touchgfx_init>

080010c2 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80010c2:	f000 bc77 	b.w	80019b4 <touchgfx_taskEntry>

080010c6 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80010c6:	4770      	bx	lr

080010c8 <_ZN20STM32TouchControllerD0Ev>:
 80010c8:	b510      	push	{r4, lr}
 80010ca:	2104      	movs	r1, #4
 80010cc:	4604      	mov	r4, r0
 80010ce:	f02a f82c 	bl	802b12a <_ZdlPvj>
 80010d2:	4620      	mov	r0, r4
 80010d4:	bd10      	pop	{r4, pc}
	...

080010d8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80010d8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80010da:	4b0c      	ldr	r3, [pc, #48]	; (800110c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80010dc:	4c0c      	ldr	r4, [pc, #48]	; (8001110 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80010de:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80010e0:	4b0c      	ldr	r3, [pc, #48]	; (8001114 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80010e2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80010e4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80010e6:	6863      	ldr	r3, [r4, #4]
 80010e8:	4798      	blx	r3
 80010ea:	f640 0311 	movw	r3, #2065	; 0x811
 80010ee:	4298      	cmp	r0, r3
 80010f0:	d10a      	bne.n	8001108 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80010f2:	4d09      	ldr	r5, [pc, #36]	; (8001118 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80010f4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80010f6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80010f8:	2082      	movs	r0, #130	; 0x82
 80010fa:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80010fc:	682b      	ldr	r3, [r5, #0]
 80010fe:	2082      	movs	r0, #130	; 0x82
 8001100:	68db      	ldr	r3, [r3, #12]
 8001102:	4798      	blx	r3
 8001104:	2000      	movs	r0, #0
    }

    return ret;
}
 8001106:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001108:	2001      	movs	r0, #1
 800110a:	e7fc      	b.n	8001106 <_Z11BSP_TS_Inittt+0x2e>
 800110c:	20000304 	.word	0x20000304
 8001110:	20000064 	.word	0x20000064
 8001114:	20000306 	.word	0x20000306
 8001118:	20000308 	.word	0x20000308

0800111c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800111c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001120:	20f0      	movs	r0, #240	; 0xf0
 8001122:	f7ff bfd9 	b.w	80010d8 <_Z11BSP_TS_Inittt>
	...

08001128 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001128:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800112a:	4d2d      	ldr	r5, [pc, #180]	; (80011e0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 800112c:	682b      	ldr	r3, [r5, #0]
{
 800112e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001130:	691b      	ldr	r3, [r3, #16]
 8001132:	2082      	movs	r0, #130	; 0x82
 8001134:	4798      	blx	r3
 8001136:	b280      	uxth	r0, r0
 8001138:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800113a:	2800      	cmp	r0, #0
 800113c:	d043      	beq.n	80011c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800113e:	682b      	ldr	r3, [r5, #0]
 8001140:	f10d 0206 	add.w	r2, sp, #6
 8001144:	695b      	ldr	r3, [r3, #20]
 8001146:	a901      	add	r1, sp, #4
 8001148:	2082      	movs	r0, #130	; 0x82
 800114a:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 800114c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001150:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 8001154:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001156:	2a0a      	cmp	r2, #10
 8001158:	d937      	bls.n	80011ca <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 800115a:	230b      	movs	r3, #11
 800115c:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001160:	4b20      	ldr	r3, [pc, #128]	; (80011e4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 8001162:	881b      	ldrh	r3, [r3, #0]
 8001164:	429a      	cmp	r2, r3
 8001166:	d901      	bls.n	800116c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8001168:	3b01      	subs	r3, #1
 800116a:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800116c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001170:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001174:	428b      	cmp	r3, r1
 8001176:	d82a      	bhi.n	80011ce <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 8001178:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800117c:	330e      	adds	r3, #14
 800117e:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001180:	210f      	movs	r1, #15
 8001182:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001186:	4918      	ldr	r1, [pc, #96]	; (80011e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 8001188:	8809      	ldrh	r1, [r1, #0]
 800118a:	428b      	cmp	r3, r1
 800118c:	d901      	bls.n	8001192 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 800118e:	1e4b      	subs	r3, r1, #1
 8001190:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001192:	4e16      	ldr	r6, [pc, #88]	; (80011ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001194:	4d16      	ldr	r5, [pc, #88]	; (80011f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001196:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001198:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 800119a:	4283      	cmp	r3, r0
 800119c:	b281      	uxth	r1, r0
 800119e:	bf8c      	ite	hi
 80011a0:	1a59      	subhi	r1, r3, r1
 80011a2:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80011a4:	b2b8      	uxth	r0, r7
 80011a6:	42ba      	cmp	r2, r7
 80011a8:	bf8c      	ite	hi
 80011aa:	1a10      	subhi	r0, r2, r0
 80011ac:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80011ae:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80011b0:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80011b2:	4401      	add	r1, r0
 80011b4:	2905      	cmp	r1, #5
        {
            _x = x;
 80011b6:	bfc8      	it	gt
 80011b8:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80011ba:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80011bc:	bfc8      	it	gt
 80011be:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80011c0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80011c2:	682b      	ldr	r3, [r5, #0]
 80011c4:	80a3      	strh	r3, [r4, #4]
    }
}
 80011c6:	b003      	add	sp, #12
 80011c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80011ca:	2200      	movs	r2, #0
 80011cc:	e7ce      	b.n	800116c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80011ce:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80011d2:	3308      	adds	r3, #8
 80011d4:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80011d6:	2b0e      	cmp	r3, #14
 80011d8:	d8d2      	bhi.n	8001180 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 80011da:	2300      	movs	r3, #0
 80011dc:	e7d9      	b.n	8001192 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 80011de:	bf00      	nop
 80011e0:	20000308 	.word	0x20000308
 80011e4:	20000306 	.word	0x20000306
 80011e8:	20000304 	.word	0x20000304
 80011ec:	2000030c 	.word	0x2000030c
 80011f0:	20000310 	.word	0x20000310

080011f4 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80011f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80011f6:	4668      	mov	r0, sp
{
 80011f8:	460d      	mov	r5, r1
 80011fa:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 80011fc:	f7ff ff94 	bl	8001128 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001200:	f8bd 0000 	ldrh.w	r0, [sp]
 8001204:	b130      	cbz	r0, 8001214 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8001206:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800120a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800120c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001210:	6023      	str	r3, [r4, #0]
        return true;
 8001212:	2001      	movs	r0, #1
}
 8001214:	b003      	add	sp, #12
 8001216:	bd30      	pop	{r4, r5, pc}

08001218 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8001218:	4770      	bx	lr

0800121a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 800121a:	4770      	bx	lr

0800121c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 800121c:	4770      	bx	lr

0800121e <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800121e:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001220:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8001224:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8001228:	4770      	bx	lr

0800122a <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 800122a:	2000      	movs	r0, #0
 800122c:	4770      	bx	lr
	...

08001230 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001230:	4b03      	ldr	r3, [pc, #12]	; (8001240 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001232:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001234:	3900      	subs	r1, #0
 8001236:	bf18      	it	ne
 8001238:	2101      	movne	r1, #1
 800123a:	7019      	strb	r1, [r3, #0]
    }
 800123c:	4770      	bx	lr
 800123e:	bf00      	nop
 8001240:	2001e1bf 	.word	0x2001e1bf

08001244 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001244:	2000      	movs	r0, #0
 8001246:	4770      	bx	lr

08001248 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001248:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800124a:	b10b      	cbz	r3, 8001250 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800124c:	4608      	mov	r0, r1
 800124e:	4718      	bx	r3
        }
    }
 8001250:	4770      	bx	lr

08001252 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001252:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001256:	4770      	bx	lr

08001258 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001258:	6840      	ldr	r0, [r0, #4]
 800125a:	6803      	ldr	r3, [r0, #0]
 800125c:	699b      	ldr	r3, [r3, #24]
 800125e:	4718      	bx	r3

08001260 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001260:	4770      	bx	lr

08001262 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001262:	4770      	bx	lr

08001264 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001264:	4770      	bx	lr

08001266 <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001266:	f000 bc45 	b.w	8001af4 <_ZN20TouchGFXGeneratedHAL10initializeEv>

0800126a <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 800126a:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 800126c:	6803      	ldr	r3, [r0, #0]
{
 800126e:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001270:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001274:	4798      	blx	r3
    enableInterrupts();
 8001276:	6823      	ldr	r3, [r4, #0]
 8001278:	4620      	mov	r0, r4
 800127a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800127c:	4798      	blx	r3

    OSWrappers::waitForVSync();
 800127e:	f000 f8eb 	bl	8001458 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001282:	6823      	ldr	r3, [r4, #0]
 8001284:	4620      	mov	r0, r4
 8001286:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001288:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800128a:	2029      	movs	r0, #41	; 0x29
 800128c:	f001 f9f2 	bl	8002674 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001290:	f000 f8e2 	bl	8001458 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001294:	6823      	ldr	r3, [r4, #0]
 8001296:	4620      	mov	r0, r4
 8001298:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800129a:	4798      	blx	r3
    for (;;)
 800129c:	e7f8      	b.n	8001290 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

0800129e <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800129e:	b510      	push	{r4, lr}
 80012a0:	4604      	mov	r4, r0
        swapFrameBuffers();
 80012a2:	f011 fea3 	bl	8012fec <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80012a6:	6823      	ldr	r3, [r4, #0]
 80012a8:	4620      	mov	r0, r4
 80012aa:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80012ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80012b2:	4718      	bx	r3

080012b4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80012b4:	f000 bc10 	b.w	8001ad8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080012b8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80012b8:	f000 bc14 	b.w	8001ae4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080012bc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80012bc:	f000 bc40 	b.w	8001b40 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080012c0 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80012c0:	f000 bbe6 	b.w	8001a90 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080012c4 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80012c4:	f000 bc40 	b.w	8001b48 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080012c8 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80012c8:	f000 bc48 	b.w	8001b5c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080012cc <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80012cc:	f000 bbea 	b.w	8001aa4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080012d0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80012d0:	f011 b818 	b.w	8012304 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080012d4 <_ZN11TouchGFXHALD0Ev>:
 80012d4:	b510      	push	{r4, lr}
 80012d6:	217c      	movs	r1, #124	; 0x7c
 80012d8:	4604      	mov	r4, r0
 80012da:	f029 ff26 	bl	802b12a <_ZdlPvj>
 80012de:	4620      	mov	r0, r4
 80012e0:	bd10      	pop	{r4, pc}

080012e2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80012e2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80012e6:	b11b      	cbz	r3, 80012f0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80012e8:	6840      	ldr	r0, [r0, #4]
 80012ea:	6803      	ldr	r3, [r0, #0]
 80012ec:	681b      	ldr	r3, [r3, #0]
 80012ee:	4718      	bx	r3
    }
 80012f0:	4618      	mov	r0, r3
 80012f2:	4770      	bx	lr

080012f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80012f4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80012f6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80012fa:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 80012fe:	4b0c      	ldr	r3, [pc, #48]	; (8001330 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001300:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001302:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001304:	d009      	beq.n	800131a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001306:	b93a      	cbnz	r2, 8001318 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001308:	4a0a      	ldr	r2, [pc, #40]	; (8001334 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800130a:	490b      	ldr	r1, [pc, #44]	; (8001338 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800130c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800130e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001310:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001312:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001314:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001316:	701a      	strb	r2, [r3, #0]
    }
 8001318:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800131a:	2a00      	cmp	r2, #0
 800131c:	d0fc      	beq.n	8001318 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800131e:	4a05      	ldr	r2, [pc, #20]	; (8001334 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001320:	4905      	ldr	r1, [pc, #20]	; (8001338 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001322:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001324:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001326:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001328:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 800132a:	2200      	movs	r2, #0
 800132c:	e7f3      	b.n	8001316 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800132e:	bf00      	nop
 8001330:	2001e1b8 	.word	0x2001e1b8
 8001334:	2001e1b4 	.word	0x2001e1b4
 8001338:	2001e1b6 	.word	0x2001e1b6

0800133c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800133c:	b570      	push	{r4, r5, r6, lr}
 800133e:	460d      	mov	r5, r1
 8001340:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001342:	b935      	cbnz	r5, 8001352 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001344:	4b09      	ldr	r3, [pc, #36]	; (800136c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001346:	4a0a      	ldr	r2, [pc, #40]	; (8001370 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001348:	480a      	ldr	r0, [pc, #40]	; (8001374 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 800134a:	f240 21bb 	movw	r1, #699	; 0x2bb
 800134e:	f02a fe39 	bl	802bfc4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001352:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001356:	4b08      	ldr	r3, [pc, #32]	; (8001378 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001358:	3a00      	subs	r2, #0
 800135a:	bf18      	it	ne
 800135c:	2201      	movne	r2, #1
 800135e:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001360:	6803      	ldr	r3, [r0, #0]
    }
 8001362:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001366:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800136a:	4718      	bx	r3
 800136c:	0802ed5c 	.word	0x0802ed5c
 8001370:	0802ed94 	.word	0x0802ed94
 8001374:	0802ede2 	.word	0x0802ede2
 8001378:	2001e1be 	.word	0x2001e1be

0800137c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800137c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800137e:	4b09      	ldr	r3, [pc, #36]	; (80013a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001380:	881b      	ldrh	r3, [r3, #0]
 8001382:	428b      	cmp	r3, r1
 8001384:	d803      	bhi.n	800138e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001386:	4b08      	ldr	r3, [pc, #32]	; (80013a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001388:	881b      	ldrh	r3, [r3, #0]
 800138a:	4293      	cmp	r3, r2
 800138c:	d905      	bls.n	800139a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800138e:	4b07      	ldr	r3, [pc, #28]	; (80013ac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001390:	4a07      	ldr	r2, [pc, #28]	; (80013b0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001392:	4808      	ldr	r0, [pc, #32]	; (80013b4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001394:	219e      	movs	r1, #158	; 0x9e
 8001396:	f02a fe15 	bl	802bfc4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800139a:	4b07      	ldr	r3, [pc, #28]	; (80013b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800139c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800139e:	4b07      	ldr	r3, [pc, #28]	; (80013bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80013a0:	801a      	strh	r2, [r3, #0]
    }
 80013a2:	bd08      	pop	{r3, pc}
 80013a4:	2001e1b4 	.word	0x2001e1b4
 80013a8:	2001e1b6 	.word	0x2001e1b6
 80013ac:	0802ee27 	.word	0x0802ee27
 80013b0:	0802ee8a 	.word	0x0802ee8a
 80013b4:	0802ede2 	.word	0x0802ede2
 80013b8:	2001e1ba 	.word	0x2001e1ba
 80013bc:	2001e1bc 	.word	0x2001e1bc

080013c0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80013c0:	2101      	movs	r1, #1
{
 80013c2:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80013c4:	2200      	movs	r2, #0
 80013c6:	4608      	mov	r0, r1
 80013c8:	f00d fe6e 	bl	800f0a8 <osSemaphoreNew>
 80013cc:	4b0a      	ldr	r3, [pc, #40]	; (80013f8 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80013ce:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80013d0:	b928      	cbnz	r0, 80013de <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80013d2:	4b0a      	ldr	r3, [pc, #40]	; (80013fc <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80013d4:	4a0a      	ldr	r2, [pc, #40]	; (8001400 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80013d6:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80013d8:	480a      	ldr	r0, [pc, #40]	; (8001404 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80013da:	f02a fdf3 	bl	802bfc4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80013de:	2200      	movs	r2, #0
 80013e0:	2104      	movs	r1, #4
 80013e2:	2001      	movs	r0, #1
 80013e4:	f00d ff26 	bl	800f234 <osMessageQueueNew>
 80013e8:	4b07      	ldr	r3, [pc, #28]	; (8001408 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80013ea:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80013ec:	b918      	cbnz	r0, 80013f6 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80013ee:	4b07      	ldr	r3, [pc, #28]	; (800140c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80013f0:	4a03      	ldr	r2, [pc, #12]	; (8001400 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80013f2:	212d      	movs	r1, #45	; 0x2d
 80013f4:	e7f0      	b.n	80013d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80013f6:	bd08      	pop	{r3, pc}
 80013f8:	20000318 	.word	0x20000318
 80013fc:	0802efa8 	.word	0x0802efa8
 8001400:	0802eff1 	.word	0x0802eff1
 8001404:	0802f020 	.word	0x0802f020
 8001408:	20000314 	.word	0x20000314
 800140c:	0802f079 	.word	0x0802f079

08001410 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001410:	4b02      	ldr	r3, [pc, #8]	; (800141c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001412:	f04f 31ff 	mov.w	r1, #4294967295
 8001416:	6818      	ldr	r0, [r3, #0]
 8001418:	f00d be9c 	b.w	800f154 <osSemaphoreAcquire>
 800141c:	20000318 	.word	0x20000318

08001420 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001420:	4b01      	ldr	r3, [pc, #4]	; (8001428 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001422:	6818      	ldr	r0, [r3, #0]
 8001424:	f00d bed0 	b.w	800f1c8 <osSemaphoreRelease>
 8001428:	20000318 	.word	0x20000318

0800142c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 800142c:	4b02      	ldr	r3, [pc, #8]	; (8001438 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800142e:	2100      	movs	r1, #0
 8001430:	6818      	ldr	r0, [r3, #0]
 8001432:	f00d be8f 	b.w	800f154 <osSemaphoreAcquire>
 8001436:	bf00      	nop
 8001438:	20000318 	.word	0x20000318

0800143c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 800143c:	f7ff bff0 	b.w	8001420 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001440 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001440:	4803      	ldr	r0, [pc, #12]	; (8001450 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001442:	4904      	ldr	r1, [pc, #16]	; (8001454 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001444:	6800      	ldr	r0, [r0, #0]
 8001446:	2300      	movs	r3, #0
 8001448:	461a      	mov	r2, r3
 800144a:	f00d bf39 	b.w	800f2c0 <osMessageQueuePut>
 800144e:	bf00      	nop
 8001450:	20000314 	.word	0x20000314
 8001454:	20000004 	.word	0x20000004

08001458 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001458:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800145a:	4c08      	ldr	r4, [pc, #32]	; (800147c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800145c:	2300      	movs	r3, #0
 800145e:	461a      	mov	r2, r3
 8001460:	a901      	add	r1, sp, #4
 8001462:	6820      	ldr	r0, [r4, #0]
 8001464:	f00d ff6e 	bl	800f344 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001468:	6820      	ldr	r0, [r4, #0]
 800146a:	f04f 33ff 	mov.w	r3, #4294967295
 800146e:	2200      	movs	r2, #0
 8001470:	a901      	add	r1, sp, #4
 8001472:	f00d ff67 	bl	800f344 <osMessageQueueGet>
}
 8001476:	b002      	add	sp, #8
 8001478:	bd10      	pop	{r4, pc}
 800147a:	bf00      	nop
 800147c:	20000314 	.word	0x20000314

08001480 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001480:	6803      	ldr	r3, [r0, #0]
 8001482:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001484:	4718      	bx	r3

08001486 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001486:	2001      	movs	r0, #1
 8001488:	4770      	bx	lr

0800148a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800148a:	6803      	ldr	r3, [r0, #0]
 800148c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800148e:	4718      	bx	r3

08001490 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8001490:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001492:	2300      	movs	r3, #0
 8001494:	9301      	str	r3, [sp, #4]
 8001496:	4b0d      	ldr	r3, [pc, #52]	; (80014cc <_ZN8STM32DMA10initializeEv+0x3c>)
 8001498:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800149a:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800149e:	631a      	str	r2, [r3, #48]	; 0x30
 80014a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014a2:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80014a6:	9201      	str	r2, [sp, #4]
 80014a8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80014aa:	691a      	ldr	r2, [r3, #16]
 80014ac:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80014b0:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80014b2:	691a      	ldr	r2, [r3, #16]
 80014b4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80014b8:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80014ba:	4b05      	ldr	r3, [pc, #20]	; (80014d0 <_ZN8STM32DMA10initializeEv+0x40>)
 80014bc:	4a05      	ldr	r2, [pc, #20]	; (80014d4 <_ZN8STM32DMA10initializeEv+0x44>)
 80014be:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014c0:	4b05      	ldr	r3, [pc, #20]	; (80014d8 <_ZN8STM32DMA10initializeEv+0x48>)
 80014c2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80014c6:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80014c8:	b002      	add	sp, #8
 80014ca:	4770      	bx	lr
 80014cc:	40023800 	.word	0x40023800
 80014d0:	20008d98 	.word	0x20008d98
 80014d4:	0800151d 	.word	0x0800151d
 80014d8:	e000e100 	.word	0xe000e100

080014dc <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 80014dc:	f240 30ef 	movw	r0, #1007	; 0x3ef
 80014e0:	4770      	bx	lr
	...

080014e4 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 80014e4:	4b05      	ldr	r3, [pc, #20]	; (80014fc <_ZN8STM32DMAD1Ev+0x18>)
 80014e6:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014e8:	4b05      	ldr	r3, [pc, #20]	; (8001500 <_ZN8STM32DMAD1Ev+0x1c>)
 80014ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80014ee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80014f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014f6:	f3bf 8f6f 	isb	sy
}
 80014fa:	4770      	bx	lr
 80014fc:	0802f224 	.word	0x0802f224
 8001500:	e000e100 	.word	0xe000e100

08001504 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001504:	b510      	push	{r4, lr}
 8001506:	4604      	mov	r4, r0
}
 8001508:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 800150c:	f7ff ffea 	bl	80014e4 <_ZN8STM32DMAD1Ev>
 8001510:	4620      	mov	r0, r4
 8001512:	f029 fe0a 	bl	802b12a <_ZdlPvj>
 8001516:	4620      	mov	r0, r4
 8001518:	bd10      	pop	{r4, pc}
	...

0800151c <DMA2D_XferCpltCallback>:
        return instance;
 800151c:	4b02      	ldr	r3, [pc, #8]	; (8001528 <DMA2D_XferCpltCallback+0xc>)
 800151e:	681b      	ldr	r3, [r3, #0]
 8001520:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001522:	6803      	ldr	r3, [r0, #0]
 8001524:	695b      	ldr	r3, [r3, #20]
 8001526:	4718      	bx	r3
 8001528:	2001e1c0 	.word	0x2001e1c0

0800152c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 800152c:	b570      	push	{r4, r5, r6, lr}
 800152e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001530:	4625      	mov	r5, r4
 8001532:	4b0a      	ldr	r3, [pc, #40]	; (800155c <_ZN8STM32DMAC1Ev+0x30>)
 8001534:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001536:	2600      	movs	r6, #0
 8001538:	6060      	str	r0, [r4, #4]
 800153a:	7226      	strb	r6, [r4, #8]
 800153c:	7266      	strb	r6, [r4, #9]
 800153e:	f845 3b20 	str.w	r3, [r5], #32
 8001542:	2260      	movs	r2, #96	; 0x60
 8001544:	4629      	mov	r1, r5
 8001546:	f011 feb9 	bl	80132bc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800154a:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800154e:	60ee      	str	r6, [r5, #12]
 8001550:	3524      	adds	r5, #36	; 0x24
 8001552:	42ab      	cmp	r3, r5
 8001554:	d1fb      	bne.n	800154e <_ZN8STM32DMAC1Ev+0x22>
}
 8001556:	4620      	mov	r0, r4
 8001558:	bd70      	pop	{r4, r5, r6, pc}
 800155a:	bf00      	nop
 800155c:	0802f224 	.word	0x0802f224

08001560 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001560:	b508      	push	{r3, lr}
    switch (format)
 8001562:	290b      	cmp	r1, #11
 8001564:	d80b      	bhi.n	800157e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8001566:	e8df f001 	tbb	[pc, r1]
 800156a:	0612      	.short	0x0612
 800156c:	0a0a0a10 	.word	0x0a0a0a10
 8001570:	0808080a 	.word	0x0808080a
 8001574:	0808      	.short	0x0808
 8001576:	2001      	movs	r0, #1
}
 8001578:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 800157a:	2005      	movs	r0, #5
        break;
 800157c:	e7fc      	b.n	8001578 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 800157e:	4b05      	ldr	r3, [pc, #20]	; (8001594 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001580:	4a05      	ldr	r2, [pc, #20]	; (8001598 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001582:	4806      	ldr	r0, [pc, #24]	; (800159c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8001584:	2167      	movs	r1, #103	; 0x67
 8001586:	f02a fd1d 	bl	802bfc4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800158a:	2000      	movs	r0, #0
 800158c:	e7f4      	b.n	8001578 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800158e:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001590:	e7f2      	b.n	8001578 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001592:	bf00      	nop
 8001594:	0802f0bb 	.word	0x0802f0bb
 8001598:	0802f0d6 	.word	0x0802f0d6
 800159c:	0802f120 	.word	0x0802f120

080015a0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80015a0:	b508      	push	{r3, lr}
    switch (format)
 80015a2:	290a      	cmp	r1, #10
 80015a4:	d809      	bhi.n	80015ba <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 80015a6:	e8df f001 	tbb	[pc, r1]
 80015aa:	0610      	.short	0x0610
 80015ac:	0808080e 	.word	0x0808080e
 80015b0:	06060608 	.word	0x06060608
 80015b4:	06          	.byte	0x06
 80015b5:	00          	.byte	0x00
 80015b6:	2001      	movs	r0, #1
}
 80015b8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80015ba:	4b05      	ldr	r3, [pc, #20]	; (80015d0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 80015bc:	4a05      	ldr	r2, [pc, #20]	; (80015d4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 80015be:	4806      	ldr	r0, [pc, #24]	; (80015d8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 80015c0:	2188      	movs	r1, #136	; 0x88
 80015c2:	f02a fcff 	bl	802bfc4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 80015c6:	2000      	movs	r0, #0
 80015c8:	e7f6      	b.n	80015b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80015ca:	2002      	movs	r0, #2
    return dma2dColorMode;
 80015cc:	e7f4      	b.n	80015b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 80015ce:	bf00      	nop
 80015d0:	0802f0bb 	.word	0x0802f0bb
 80015d4:	0802f177 	.word	0x0802f177
 80015d8:	0802f120 	.word	0x0802f120

080015dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 80015dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80015e0:	7f4f      	ldrb	r7, [r1, #29]
{
 80015e2:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80015e4:	4639      	mov	r1, r7
{
 80015e6:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80015e8:	f7ff ffba 	bl	8001560 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015ec:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80015f0:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015f2:	4641      	mov	r1, r8
 80015f4:	4648      	mov	r0, r9
 80015f6:	f7ff ffb3 	bl	8001560 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015fa:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015fc:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015fe:	4648      	mov	r0, r9
 8001600:	f7ff ffce 	bl	80015a0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001604:	8aa1      	ldrh	r1, [r4, #20]
 8001606:	8b62      	ldrh	r2, [r4, #26]
 8001608:	4b42      	ldr	r3, [pc, #264]	; (8001714 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800160a:	1a52      	subs	r2, r2, r1
 800160c:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800160e:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001610:	8b22      	ldrh	r2, [r4, #24]
 8001612:	1a52      	subs	r2, r2, r1
 8001614:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001616:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001618:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800161a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800161e:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001620:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001622:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001624:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001626:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8001628:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800162a:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 800162e:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001630:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8001634:	d026      	beq.n	8001684 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8001636:	d810      	bhi.n	800165a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8001638:	2920      	cmp	r1, #32
 800163a:	ea45 0402 	orr.w	r4, r5, r2
 800163e:	d061      	beq.n	8001704 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8001640:	2940      	cmp	r1, #64	; 0x40
 8001642:	d05f      	beq.n	8001704 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8001644:	2904      	cmp	r1, #4
 8001646:	d05d      	beq.n	8001704 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001648:	4b32      	ldr	r3, [pc, #200]	; (8001714 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800164a:	432a      	orrs	r2, r5
 800164c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001650:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001652:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001654:	d05a      	beq.n	800170c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001656:	4a30      	ldr	r2, [pc, #192]	; (8001718 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001658:	e040      	b.n	80016dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 800165a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800165e:	d007      	beq.n	8001670 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8001660:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8001664:	d1f0      	bne.n	8001648 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001666:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800166a:	f042 0209 	orr.w	r2, r2, #9
 800166e:	e003      	b.n	8001678 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001670:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001674:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001678:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 800167a:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800167c:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800167e:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001680:	6158      	str	r0, [r3, #20]
 8001682:	e02a      	b.n	80016da <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001684:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001686:	432a      	orrs	r2, r5
 8001688:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 800168c:	1d21      	adds	r1, r4, #4
 800168e:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001690:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8001692:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001694:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001696:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001698:	b142      	cbz	r2, 80016ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 800169a:	2a01      	cmp	r2, #1
 800169c:	d021      	beq.n	80016e2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 800169e:	4b1f      	ldr	r3, [pc, #124]	; (800171c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 80016a0:	4a1f      	ldr	r2, [pc, #124]	; (8001720 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 80016a2:	4820      	ldr	r0, [pc, #128]	; (8001724 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 80016a4:	f44f 7189 	mov.w	r1, #274	; 0x112
 80016a8:	f02a fc8c 	bl	802bfc4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80016ac:	69da      	ldr	r2, [r3, #28]
 80016ae:	8861      	ldrh	r1, [r4, #2]
 80016b0:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80016b4:	3901      	subs	r1, #1
 80016b6:	f022 0210 	bic.w	r2, r2, #16
 80016ba:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80016be:	61da      	str	r2, [r3, #28]
            bool blend = true;
 80016c0:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80016c2:	4b14      	ldr	r3, [pc, #80]	; (8001714 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80016c4:	69da      	ldr	r2, [r3, #28]
 80016c6:	f042 0220 	orr.w	r2, r2, #32
 80016ca:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80016cc:	69da      	ldr	r2, [r3, #28]
 80016ce:	0692      	lsls	r2, r2, #26
 80016d0:	d4fc      	bmi.n	80016cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80016d2:	2210      	movs	r2, #16
 80016d4:	609a      	str	r2, [r3, #8]
            if(blend)
 80016d6:	2800      	cmp	r0, #0
 80016d8:	d0bd      	beq.n	8001656 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 80016da:	4a13      	ldr	r2, [pc, #76]	; (8001728 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80016dc:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 80016de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80016e2:	8862      	ldrh	r2, [r4, #2]
 80016e4:	69d9      	ldr	r1, [r3, #28]
 80016e6:	1e54      	subs	r4, r2, #1
 80016e8:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 80016ec:	f022 0210 	bic.w	r2, r2, #16
 80016f0:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 80016f4:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80016f8:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 80016fc:	bf18      	it	ne
 80016fe:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001700:	61da      	str	r2, [r3, #28]
                break;
 8001702:	e7de      	b.n	80016c2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001704:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001708:	61dc      	str	r4, [r3, #28]
 800170a:	e7b8      	b.n	800167e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800170c:	f240 2201 	movw	r2, #513	; 0x201
 8001710:	e7e4      	b.n	80016dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8001712:	bf00      	nop
 8001714:	4002b000 	.word	0x4002b000
 8001718:	00010201 	.word	0x00010201
 800171c:	0802f1c2 	.word	0x0802f1c2
 8001720:	0802f1dc 	.word	0x0802f1dc
 8001724:	0802f120 	.word	0x0802f120
 8001728:	00020201 	.word	0x00020201

0800172c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800172c:	b570      	push	{r4, r5, r6, lr}
 800172e:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001730:	7f89      	ldrb	r1, [r1, #30]
 8001732:	f7ff ff35 	bl	80015a0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001736:	8aa6      	ldrh	r6, [r4, #20]
 8001738:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800173a:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800173c:	4b15      	ldr	r3, [pc, #84]	; (8001794 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800173e:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001740:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001742:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001746:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001748:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800174a:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800174c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800174e:	6826      	ldr	r6, [r4, #0]
 8001750:	68e1      	ldr	r1, [r4, #12]
 8001752:	2e08      	cmp	r6, #8
 8001754:	d10d      	bne.n	8001772 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001756:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001758:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800175a:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 800175c:	7f20      	ldrb	r0, [r4, #28]
 800175e:	4a0e      	ldr	r2, [pc, #56]	; (8001798 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001760:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001764:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001766:	4a0d      	ldr	r2, [pc, #52]	; (800179c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001768:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800176a:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800176c:	60dd      	str	r5, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800176e:	601a      	str	r2, [r3, #0]
    }
}
 8001770:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001772:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001774:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001776:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001778:	0948      	lsrs	r0, r1, #5
 800177a:	0a0a      	lsrs	r2, r1, #8
 800177c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8001780:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8001784:	4302      	orrs	r2, r0
 8001786:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800178a:	430a      	orrs	r2, r1
 800178c:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800178e:	4a04      	ldr	r2, [pc, #16]	; (80017a0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001790:	e7ed      	b.n	800176e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001792:	bf00      	nop
 8001794:	4002b000 	.word	0x4002b000
 8001798:	00010009 	.word	0x00010009
 800179c:	00020201 	.word	0x00020201
 80017a0:	00030201 	.word	0x00030201

080017a4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80017a4:	2001      	movs	r0, #1
 80017a6:	4770      	bx	lr

080017a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80017a8:	2054      	movs	r0, #84	; 0x54
 80017aa:	4770      	bx	lr

080017ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80017ac:	2354      	movs	r3, #84	; 0x54
 80017ae:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80017b2:	3008      	adds	r0, #8
 80017b4:	4770      	bx	lr

080017b6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80017b6:	2354      	movs	r3, #84	; 0x54
 80017b8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80017bc:	3008      	adds	r0, #8
 80017be:	4770      	bx	lr

080017c0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80017c0:	2001      	movs	r0, #1
 80017c2:	4770      	bx	lr

080017c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80017c4:	f241 70b8 	movw	r0, #6072	; 0x17b8
 80017c8:	4770      	bx	lr

080017ca <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80017ca:	f241 73b8 	movw	r3, #6072	; 0x17b8
 80017ce:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80017d2:	3008      	adds	r0, #8
 80017d4:	4770      	bx	lr

080017d6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80017d6:	f241 73b8 	movw	r3, #6072	; 0x17b8
 80017da:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80017de:	3008      	adds	r0, #8
 80017e0:	4770      	bx	lr

080017e2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80017e2:	2001      	movs	r0, #1
 80017e4:	4770      	bx	lr

080017e6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80017e6:	2010      	movs	r0, #16
 80017e8:	4770      	bx	lr

080017ea <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80017ea:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80017ee:	3008      	adds	r0, #8
 80017f0:	4770      	bx	lr

080017f2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80017f2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80017f6:	3008      	adds	r0, #8
 80017f8:	4770      	bx	lr

080017fa <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartPageScreenNoTransition();
 80017fa:	4608      	mov	r0, r1
 80017fc:	f003 b928 	b.w	8004a50 <_ZN23FrontendApplicationBase31gotoStartPageScreenNoTransitionEv>

08001800 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001800:	b510      	push	{r4, lr}
 8001802:	4b03      	ldr	r3, [pc, #12]	; (8001810 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001804:	6003      	str	r3, [r0, #0]
 8001806:	4604      	mov	r4, r0
 8001808:	f00f fe60 	bl	80114cc <_ZN8touchgfx17AbstractPartitionD1Ev>
 800180c:	4620      	mov	r0, r4
 800180e:	bd10      	pop	{r4, pc}
 8001810:	0802f2dc 	.word	0x0802f2dc

08001814 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001814:	b510      	push	{r4, lr}
 8001816:	4604      	mov	r4, r0
 8001818:	f7ff fff2 	bl	8001800 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800181c:	4620      	mov	r0, r4
 800181e:	215c      	movs	r1, #92	; 0x5c
 8001820:	f029 fc83 	bl	802b12a <_ZdlPvj>
 8001824:	4620      	mov	r0, r4
 8001826:	bd10      	pop	{r4, pc}

08001828 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001828:	b510      	push	{r4, lr}
 800182a:	4b03      	ldr	r3, [pc, #12]	; (8001838 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800182c:	6003      	str	r3, [r0, #0]
 800182e:	4604      	mov	r4, r0
 8001830:	f00f fe4c 	bl	80114cc <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001834:	4620      	mov	r0, r4
 8001836:	bd10      	pop	{r4, pc}
 8001838:	0802f2a8 	.word	0x0802f2a8

0800183c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800183c:	b510      	push	{r4, lr}
 800183e:	4604      	mov	r4, r0
 8001840:	f7ff fff2 	bl	8001828 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001844:	4620      	mov	r0, r4
 8001846:	f44f 51be 	mov.w	r1, #6080	; 0x17c0
 800184a:	f029 fc6e 	bl	802b12a <_ZdlPvj>
 800184e:	4620      	mov	r0, r4
 8001850:	bd10      	pop	{r4, pc}
	...

08001854 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001854:	b510      	push	{r4, lr}
 8001856:	4b03      	ldr	r3, [pc, #12]	; (8001864 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001858:	6003      	str	r3, [r0, #0]
 800185a:	4604      	mov	r4, r0
 800185c:	f00f fe36 	bl	80114cc <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001860:	4620      	mov	r0, r4
 8001862:	bd10      	pop	{r4, pc}
 8001864:	0802f274 	.word	0x0802f274

08001868 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001868:	b510      	push	{r4, lr}
 800186a:	4604      	mov	r4, r0
 800186c:	f7ff fff2 	bl	8001854 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001870:	4620      	mov	r0, r4
 8001872:	2118      	movs	r1, #24
 8001874:	f029 fc59 	bl	802b12a <_ZdlPvj>
 8001878:	4620      	mov	r0, r4
 800187a:	bd10      	pop	{r4, pc}

0800187c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800187c:	b510      	push	{r4, lr}
 800187e:	4b09      	ldr	r3, [pc, #36]	; (80018a4 <_ZN12FrontendHeapD1Ev+0x28>)
 8001880:	6003      	str	r3, [r0, #0]
 8001882:	4604      	mov	r4, r0
 8001884:	f500 50bf 	add.w	r0, r0, #6112	; 0x17e0
 8001888:	300c      	adds	r0, #12
 800188a:	f7ff ffb9 	bl	8001800 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800188e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001892:	f7ff ffc9 	bl	8001828 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001896:	f104 0014 	add.w	r0, r4, #20
 800189a:	f7ff ffdb 	bl	8001854 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800189e:	4620      	mov	r0, r4
 80018a0:	bd10      	pop	{r4, pc}
 80018a2:	bf00      	nop
 80018a4:	0802f310 	.word	0x0802f310

080018a8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80018a8:	b508      	push	{r3, lr}
 80018aa:	4802      	ldr	r0, [pc, #8]	; (80018b4 <__tcf_0+0xc>)
 80018ac:	f7ff ffe6 	bl	800187c <_ZN12FrontendHeapD1Ev>
 80018b0:	bd08      	pop	{r3, pc}
 80018b2:	bf00      	nop
 80018b4:	20000320 	.word	0x20000320

080018b8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80018b8:	b510      	push	{r4, lr}
 80018ba:	4604      	mov	r4, r0
 80018bc:	f7ff ffde 	bl	800187c <_ZN12FrontendHeapD1Ev>
 80018c0:	4620      	mov	r0, r4
 80018c2:	f641 11a4 	movw	r1, #6564	; 0x19a4
 80018c6:	f029 fc30 	bl	802b12a <_ZdlPvj>
 80018ca:	4620      	mov	r0, r4
 80018cc:	bd10      	pop	{r4, pc}
	...

080018d0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 80018d0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80018d4:	f001 ff06 	bl	80036e4 <_ZN14BitmapDatabase11getInstanceEv>
 80018d8:	4605      	mov	r5, r0
 80018da:	f001 ff07 	bl	80036ec <_ZN14BitmapDatabase15getInstanceSizeEv>
 80018de:	2400      	movs	r4, #0
 80018e0:	4601      	mov	r1, r0
 80018e2:	4623      	mov	r3, r4
 80018e4:	4628      	mov	r0, r5
 80018e6:	4622      	mov	r2, r4
 80018e8:	9400      	str	r4, [sp, #0]
 80018ea:	f01a fed3 	bl	801c694 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80018ee:	4b26      	ldr	r3, [pc, #152]	; (8001988 <touchgfx_init+0xb8>)
 80018f0:	4a26      	ldr	r2, [pc, #152]	; (800198c <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 80018f2:	4d27      	ldr	r5, [pc, #156]	; (8001990 <touchgfx_init+0xc0>)
 80018f4:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80018f6:	4620      	mov	r0, r4
 80018f8:	f009 f9aa 	bl	800ac50 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80018fc:	4825      	ldr	r0, [pc, #148]	; (8001994 <touchgfx_init+0xc4>)
 80018fe:	f01a fe15 	bl	801c52c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001902:	782b      	ldrb	r3, [r5, #0]
 8001904:	f3bf 8f5b 	dmb	ish
 8001908:	07db      	lsls	r3, r3, #31
 800190a:	d437      	bmi.n	800197c <touchgfx_init+0xac>
 800190c:	4628      	mov	r0, r5
 800190e:	f029 fc0e 	bl	802b12e <__cxa_guard_acquire>
 8001912:	b398      	cbz	r0, 800197c <touchgfx_init+0xac>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001914:	4c20      	ldr	r4, [pc, #128]	; (8001998 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001916:	4b21      	ldr	r3, [pc, #132]	; (800199c <touchgfx_init+0xcc>)
 8001918:	6023      	str	r3, [r4, #0]
 800191a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800191e:	f508 57be 	add.w	r7, r8, #6080	; 0x17c0
 8001922:	f508 56c1 	add.w	r6, r8, #6176	; 0x1820
 8001926:	f104 0014 	add.w	r0, r4, #20
 800192a:	6060      	str	r0, [r4, #4]
 800192c:	f8c4 8008 	str.w	r8, [r4, #8]
 8001930:	60e7      	str	r7, [r4, #12]
 8001932:	6126      	str	r6, [r4, #16]
 8001934:	f00f fdcc 	bl	80114d0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001938:	4b19      	ldr	r3, [pc, #100]	; (80019a0 <touchgfx_init+0xd0>)
 800193a:	6163      	str	r3, [r4, #20]
 800193c:	4640      	mov	r0, r8
 800193e:	f00f fdc7 	bl	80114d0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001942:	4b18      	ldr	r3, [pc, #96]	; (80019a4 <touchgfx_init+0xd4>)
 8001944:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001946:	4638      	mov	r0, r7
 8001948:	f00f fdc2 	bl	80114d0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800194c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8001950:	4a15      	ldr	r2, [pc, #84]	; (80019a8 <touchgfx_init+0xd8>)
 8001952:	f8c3 27ec 	str.w	r2, [r3, #2028]	; 0x7ec
 8001956:	f603 0048 	addw	r0, r3, #2120	; 0x848
 800195a:	f009 fb37 	bl	800afcc <_ZN5ModelC1Ev>
 800195e:	4622      	mov	r2, r4
 8001960:	f107 015c 	add.w	r1, r7, #92	; 0x5c
 8001964:	4630      	mov	r0, r6
 8001966:	f009 fa91 	bl	800ae8c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800196a:	4630      	mov	r0, r6
 800196c:	f003 f870 	bl	8004a50 <_ZN23FrontendApplicationBase31gotoStartPageScreenNoTransitionEv>
        static FrontendHeap instance;
 8001970:	480e      	ldr	r0, [pc, #56]	; (80019ac <touchgfx_init+0xdc>)
 8001972:	f02a fb45 	bl	802c000 <atexit>
 8001976:	4628      	mov	r0, r5
 8001978:	f029 fbe5 	bl	802b146 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800197c:	480c      	ldr	r0, [pc, #48]	; (80019b0 <touchgfx_init+0xe0>)
}
 800197e:	b002      	add	sp, #8
 8001980:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001984:	f7ff bc6f 	b.w	8001266 <_ZN11TouchGFXHAL10initializeEv>
 8001988:	2001e23c 	.word	0x2001e23c
 800198c:	20002ae4 	.word	0x20002ae4
 8001990:	2000031c 	.word	0x2000031c
 8001994:	20000008 	.word	0x20000008
 8001998:	20000320 	.word	0x20000320
 800199c:	0802f310 	.word	0x0802f310
 80019a0:	0802f274 	.word	0x0802f274
 80019a4:	0802f2a8 	.word	0x0802f2a8
 80019a8:	0802f2dc 	.word	0x0802f2dc
 80019ac:	080018a9 	.word	0x080018a9
 80019b0:	20002a68 	.word	0x20002a68

080019b4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80019b4:	4801      	ldr	r0, [pc, #4]	; (80019bc <touchgfx_taskEntry+0x8>)
 80019b6:	f7ff bc58 	b.w	800126a <_ZN11TouchGFXHAL9taskEntryEv>
 80019ba:	bf00      	nop
 80019bc:	20002a68 	.word	0x20002a68

080019c0 <_GLOBAL__sub_I_touchgfx_init>:
}
 80019c0:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 80019c2:	4c23      	ldr	r4, [pc, #140]	; (8001a50 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 80019c4:	4e23      	ldr	r6, [pc, #140]	; (8001a54 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 80019c6:	4b24      	ldr	r3, [pc, #144]	; (8001a58 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 80019c8:	4d24      	ldr	r5, [pc, #144]	; (8001a5c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80019ca:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80019cc:	4630      	mov	r0, r6
 80019ce:	f7ff fdad 	bl	800152c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80019d2:	4628      	mov	r0, r5
 80019d4:	f01e f80a 	bl	801f9ec <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80019d8:	4b21      	ldr	r3, [pc, #132]	; (8001a60 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 80019da:	4822      	ldr	r0, [pc, #136]	; (8001a64 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 80019dc:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80019de:	4c22      	ldr	r4, [pc, #136]	; (8001a68 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 80019e0:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 80019e2:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80019e4:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 80019e6:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80019ea:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 80019ec:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80019f0:	4c1e      	ldr	r4, [pc, #120]	; (8001a6c <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 80019f2:	491f      	ldr	r1, [pc, #124]	; (8001a70 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80019f4:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 80019f6:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80019fa:	4c1e      	ldr	r4, [pc, #120]	; (8001a74 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80019fc:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 80019fe:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a02:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8001a06:	6759      	str	r1, [r3, #116]	; 0x74
 8001a08:	2101      	movs	r1, #1
 8001a0a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001a0e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001a12:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001a16:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001a1a:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001a1e:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001a22:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001a26:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001a2a:	661a      	str	r2, [r3, #96]	; 0x60
 8001a2c:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001a30:	671a      	str	r2, [r3, #112]	; 0x70
 8001a32:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8001a36:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a3a:	8020      	strh	r0, [r4, #0]
 8001a3c:	4c0e      	ldr	r4, [pc, #56]	; (8001a78 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001a3e:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a42:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8001a44:	480d      	ldr	r0, [pc, #52]	; (8001a7c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001a46:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001a48:	4a0d      	ldr	r2, [pc, #52]	; (8001a80 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001a4a:	601a      	str	r2, [r3, #0]
}
 8001a4c:	bd70      	pop	{r4, r5, r6, pc}
 8001a4e:	bf00      	nop
 8001a50:	20001cc4 	.word	0x20001cc4
 8001a54:	20001cc8 	.word	0x20001cc8
 8001a58:	0802ed4c 	.word	0x0802ed4c
 8001a5c:	20002ae8 	.word	0x20002ae8
 8001a60:	20002a68 	.word	0x20002a68
 8001a64:	2001e1c0 	.word	0x2001e1c0
 8001a68:	2001e1b4 	.word	0x2001e1b4
 8001a6c:	2001e1ba 	.word	0x2001e1ba
 8001a70:	01000001 	.word	0x01000001
 8001a74:	2001e1b6 	.word	0x2001e1b6
 8001a78:	2001e1bc 	.word	0x2001e1bc
 8001a7c:	2001e1b8 	.word	0x2001e1b8
 8001a80:	0802eed8 	.word	0x0802eed8

08001a84 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001a84:	4801      	ldr	r0, [pc, #4]	; (8001a8c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001a86:	f7ff bd2d 	b.w	80014e4 <_ZN8STM32DMAD1Ev>
 8001a8a:	bf00      	nop
 8001a8c:	20001cc8 	.word	0x20001cc8

08001a90 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001a90:	4b03      	ldr	r3, [pc, #12]	; (8001aa0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001a92:	2290      	movs	r2, #144	; 0x90
 8001a94:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001a98:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001a9c:	4770      	bx	lr
 8001a9e:	bf00      	nop
 8001aa0:	e000e100 	.word	0xe000e100

08001aa4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001aa4:	4a09      	ldr	r2, [pc, #36]	; (8001acc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001aa6:	490a      	ldr	r1, [pc, #40]	; (8001ad0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001aa8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001aaa:	480a      	ldr	r0, [pc, #40]	; (8001ad4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001aac:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001ab0:	3b01      	subs	r3, #1
 8001ab2:	b29b      	uxth	r3, r3
 8001ab4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001ab6:	6911      	ldr	r1, [r2, #16]
 8001ab8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001abc:	3901      	subs	r1, #1
 8001abe:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001ac0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001ac2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001ac4:	f043 0301 	orr.w	r3, r3, #1
 8001ac8:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001aca:	4770      	bx	lr
 8001acc:	40016800 	.word	0x40016800
 8001ad0:	20002b64 	.word	0x20002b64
 8001ad4:	20002b62 	.word	0x20002b62

08001ad8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001ad8:	4b01      	ldr	r3, [pc, #4]	; (8001ae0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001ada:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8001ade:	4770      	bx	lr
 8001ae0:	40016800 	.word	0x40016800

08001ae4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001ae4:	4b02      	ldr	r3, [pc, #8]	; (8001af0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001ae6:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001ae8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001aec:	625a      	str	r2, [r3, #36]	; 0x24
}
 8001aee:	4770      	bx	lr
 8001af0:	40016800 	.word	0x40016800

08001af4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001af4:	b570      	push	{r4, r5, r6, lr}
 8001af6:	4604      	mov	r4, r0
    HAL::initialize();
 8001af8:	f010 fc59 	bl	80123ae <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001afc:	6823      	ldr	r3, [r4, #0]
 8001afe:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001b00:	f017 fc2a 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8001b04:	4601      	mov	r1, r0
 8001b06:	4620      	mov	r0, r4
 8001b08:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001b0a:	6823      	ldr	r3, [r4, #0]
 8001b0c:	4a05      	ldr	r2, [pc, #20]	; (8001b24 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001b0e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001b12:	4620      	mov	r0, r4
 8001b14:	46ac      	mov	ip, r5
 8001b16:	2300      	movs	r3, #0
}
 8001b18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001b1c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001b20:	4760      	bx	ip
 8001b22:	bf00      	nop
 8001b24:	d0025800 	.word	0xd0025800

08001b28 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001b28:	f010 bc28 	b.w	801237c <_ZN8touchgfx3HAL10beginFrameEv>

08001b2c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 8001b2c:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 8001b30:	b113      	cbz	r3, 8001b38 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 8001b32:	4b02      	ldr	r3, [pc, #8]	; (8001b3c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 8001b34:	2201      	movs	r2, #1
 8001b36:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 8001b38:	f010 bc2c 	b.w	8012394 <_ZN8touchgfx3HAL8endFrameEv>
 8001b3c:	20002b60 	.word	0x20002b60

08001b40 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001b40:	f010 bbe6 	b.w	8012310 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001b44 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001b44:	f010 bd3f 	b.w	80125c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001b48 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001b48:	4b03      	ldr	r3, [pc, #12]	; (8001b58 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001b4a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001b4e:	609a      	str	r2, [r3, #8]
 8001b50:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001b54:	609a      	str	r2, [r3, #8]
}
 8001b56:	4770      	bx	lr
 8001b58:	e000e100 	.word	0xe000e100

08001b5c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001b5c:	4b08      	ldr	r3, [pc, #32]	; (8001b80 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001b5e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001b62:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001b66:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001b6a:	f3bf 8f6f 	isb	sy
 8001b6e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001b72:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001b76:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001b7a:	f3bf 8f6f 	isb	sy
}
 8001b7e:	4770      	bx	lr
 8001b80:	e000e100 	.word	0xe000e100

08001b84 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001b84:	b510      	push	{r4, lr}
        return instance;
 8001b86:	4c14      	ldr	r4, [pc, #80]	; (8001bd8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001b88:	6823      	ldr	r3, [r4, #0]
 8001b8a:	b323      	cbz	r3, 8001bd6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001b8c:	4b13      	ldr	r3, [pc, #76]	; (8001bdc <HAL_LTDC_LineEventCallback+0x58>)
 8001b8e:	4a14      	ldr	r2, [pc, #80]	; (8001be0 <HAL_LTDC_LineEventCallback+0x5c>)
 8001b90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b92:	8811      	ldrh	r1, [r2, #0]
 8001b94:	428b      	cmp	r3, r1
 8001b96:	d113      	bne.n	8001bc0 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001b98:	4b12      	ldr	r3, [pc, #72]	; (8001be4 <HAL_LTDC_LineEventCallback+0x60>)
 8001b9a:	8819      	ldrh	r1, [r3, #0]
 8001b9c:	f00b fc26 	bl	800d3ec <HAL_LTDC_ProgramLineEvent>
 8001ba0:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001ba2:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001ba6:	3301      	adds	r3, #1
 8001ba8:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001bac:	f7ff fc48 	bl	8001440 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001bb0:	6820      	ldr	r0, [r4, #0]
 8001bb2:	f011 fa1b 	bl	8012fec <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001bb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001bba:	2000      	movs	r0, #0
 8001bbc:	f7ff bb2c 	b.w	8001218 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001bc0:	f00b fc14 	bl	800d3ec <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001bc4:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001bc6:	6803      	ldr	r3, [r0, #0]
 8001bc8:	6a1b      	ldr	r3, [r3, #32]
 8001bca:	4798      	blx	r3
    }
 8001bcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001bd0:	2000      	movs	r0, #0
 8001bd2:	f7ff bb22 	b.w	800121a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001bd6:	bd10      	pop	{r4, pc}
 8001bd8:	2001e1c0 	.word	0x2001e1c0
 8001bdc:	40016800 	.word	0x40016800
 8001be0:	20002b64 	.word	0x20002b64
 8001be4:	20002b62 	.word	0x20002b62

08001be8 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001be8:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001bea:	4b06      	ldr	r3, [pc, #24]	; (8001c04 <SPI5_Write+0x1c>)
{
 8001bec:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001bf0:	681b      	ldr	r3, [r3, #0]
 8001bf2:	4805      	ldr	r0, [pc, #20]	; (8001c08 <SPI5_Write+0x20>)
 8001bf4:	2201      	movs	r2, #1
 8001bf6:	f10d 0106 	add.w	r1, sp, #6
 8001bfa:	f00c f908 	bl	800de0e <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001bfe:	b003      	add	sp, #12
 8001c00:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c04:	20000018 	.word	0x20000018
 8001c08:	20009028 	.word	0x20009028

08001c0c <StartActuating>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartActuating */
void StartActuating(void *argument)
{
 8001c0c:	b583      	push	{r0, r1, r7, lr}
	  /* Infinite loop */


	  while(1){

		  if(FreqSweep<=30){
 8001c0e:	4e27      	ldr	r6, [pc, #156]	; (8001cac <StartActuating+0xa0>)

		      osMessageQueueGet(ADCstateHandle,&buffer_get, 0, osWaitForever);

			  if(buffer_get==1){
				            htim2.Instance->CCR1=htim2.Instance->ARR * 0.50;
 8001c10:	4d27      	ldr	r5, [pc, #156]	; (8001cb0 <StartActuating+0xa4>)
 8001c12:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 8001cc8 <StartActuating+0xbc>
 8001c16:	2400      	movs	r4, #0
		  if(FreqSweep<=30){
 8001c18:	6833      	ldr	r3, [r6, #0]
 8001c1a:	2b1e      	cmp	r3, #30
 8001c1c:	dc32      	bgt.n	8001c84 <StartActuating+0x78>
		      osMessageQueueGet(ADCstateHandle,&buffer_get, 0, osWaitForever);
 8001c1e:	4825      	ldr	r0, [pc, #148]	; (8001cb4 <StartActuating+0xa8>)
 8001c20:	f04f 33ff 	mov.w	r3, #4294967295
 8001c24:	6800      	ldr	r0, [r0, #0]
 8001c26:	2200      	movs	r2, #0
 8001c28:	f10d 0107 	add.w	r1, sp, #7
 8001c2c:	f00d fb8a 	bl	800f344 <osMessageQueueGet>
			  if(buffer_get==1){
 8001c30:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001c34:	2b01      	cmp	r3, #1
 8001c36:	d125      	bne.n	8001c84 <StartActuating+0x78>
				            htim2.Instance->CCR1=htim2.Instance->ARR * 0.50;
 8001c38:	f8d8 7000 	ldr.w	r7, [r8]
 8001c3c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8001c3e:	f7fe fcd1 	bl	80005e4 <__aeabi_ui2d>
 8001c42:	4622      	mov	r2, r4
 8001c44:	462b      	mov	r3, r5
 8001c46:	f7fe fd47 	bl	80006d8 <__aeabi_dmul>
 8001c4a:	f7ff f81d 	bl	8000c88 <__aeabi_d2uiz>
			 	        	FreqSweepConverter=1000/FreqSweep+1;
 8001c4e:	6832      	ldr	r2, [r6, #0]
				            htim2.Instance->CCR1=htim2.Instance->ARR * 0.50;
 8001c50:	6378      	str	r0, [r7, #52]	; 0x34
			 	        	FreqSweepConverter=1000/FreqSweep+1;
 8001c52:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001c56:	fb93 f3f2 	sdiv	r3, r3, r2
 8001c5a:	3301      	adds	r3, #1
 8001c5c:	ee07 3a90 	vmov	s15, r3
 8001c60:	4b15      	ldr	r3, [pc, #84]	; (8001cb8 <StartActuating+0xac>)
			 				htim2.Instance->PSC=FreqSweepConverter;
			 				FreqSweep++;
			 				osMessageQueuePut(ProgressBarHandle, &FreqSweep, 0, 20);
 8001c62:	4816      	ldr	r0, [pc, #88]	; (8001cbc <StartActuating+0xb0>)
			 	        	FreqSweepConverter=1000/FreqSweep+1;
 8001c64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
			 				FreqSweep++;
 8001c68:	3201      	adds	r2, #1
			 	        	FreqSweepConverter=1000/FreqSweep+1;
 8001c6a:	edc3 7a00 	vstr	s15, [r3]
			 				htim2.Instance->PSC=FreqSweepConverter;
 8001c6e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
			 				FreqSweep++;
 8001c72:	6032      	str	r2, [r6, #0]
			 				osMessageQueuePut(ProgressBarHandle, &FreqSweep, 0, 20);
 8001c74:	6800      	ldr	r0, [r0, #0]
			 				htim2.Instance->PSC=FreqSweepConverter;
 8001c76:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
			 				osMessageQueuePut(ProgressBarHandle, &FreqSweep, 0, 20);
 8001c7a:	2314      	movs	r3, #20
 8001c7c:	2200      	movs	r2, #0
 8001c7e:	4631      	mov	r1, r6
 8001c80:	f00d fb1e 	bl	800f2c0 <osMessageQueuePut>
		      }
	       }

		  if(FreqSweep==31){
 8001c84:	6833      	ldr	r3, [r6, #0]
 8001c86:	2b1f      	cmp	r3, #31
 8001c88:	d1c6      	bne.n	8001c18 <StartActuating+0xc>
			  FreqSweep=0;
//			  HAL_TIM_PWM_Stop(&htim4, TIM_CHANNEL_2);
			  htim2.Instance->CCR1=htim2.Instance->ARR +1;
 8001c8a:	f8d8 2000 	ldr.w	r2, [r8]
			  FreqSweep=0;
 8001c8e:	2300      	movs	r3, #0
 8001c90:	6033      	str	r3, [r6, #0]
			  htim2.Instance->CCR1=htim2.Instance->ARR +1;
 8001c92:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8001c94:	3301      	adds	r3, #1
 8001c96:	6353      	str	r3, [r2, #52]	; 0x34
			  osThreadSuspend(PQReaderHandle);
 8001c98:	4b09      	ldr	r3, [pc, #36]	; (8001cc0 <StartActuating+0xb4>)
 8001c9a:	6818      	ldr	r0, [r3, #0]
 8001c9c:	f00d f9b2 	bl	800f004 <osThreadSuspend>
			  osThreadSuspend(TemperatureContHandle);
 8001ca0:	4b08      	ldr	r3, [pc, #32]	; (8001cc4 <StartActuating+0xb8>)
 8001ca2:	6818      	ldr	r0, [r3, #0]
 8001ca4:	f00d f9ae 	bl	800f004 <osThreadSuspend>
 8001ca8:	e7b6      	b.n	8001c18 <StartActuating+0xc>
 8001caa:	bf00      	nop
 8001cac:	20000010 	.word	0x20000010
 8001cb0:	3fe00000 	.word	0x3fe00000
 8001cb4:	20002b68 	.word	0x20002b68
 8001cb8:	20002b74 	.word	0x20002b74
 8001cbc:	20002b88 	.word	0x20002b88
 8001cc0:	20002b84 	.word	0x20002b84
 8001cc4:	20002c9c 	.word	0x20002c9c
 8001cc8:	200090c0 	.word	0x200090c0
 8001ccc:	00000000 	.word	0x00000000

08001cd0 <TempControl>:
{
 8001cd0:	b580      	push	{r7, lr}
	    Temp=(Temp_Vanalogue-0.5)/0.01;
 8001cd2:	a72c      	add	r7, pc, #176	; (adr r7, 8001d84 <TempControl+0xb4>)
 8001cd4:	e9d7 6700 	ldrd	r6, r7, [r7]
		HAL_ADC_Start(&hadc3);
 8001cd8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8001d8c <TempControl+0xbc>
	    Temp=(Temp_Vanalogue-0.5)/0.01;
 8001cdc:	4d22      	ldr	r5, [pc, #136]	; (8001d68 <TempControl+0x98>)
 8001cde:	2400      	movs	r4, #0
		HAL_ADC_Start(&hadc3);
 8001ce0:	4640      	mov	r0, r8
 8001ce2:	f009 ff7d 	bl	800bbe0 <HAL_ADC_Start>
	     HAL_ADC_PollForConversion(&hadc3, 1);
 8001ce6:	2101      	movs	r1, #1
 8001ce8:	4640      	mov	r0, r8
 8001cea:	f009 ffed 	bl	800bcc8 <HAL_ADC_PollForConversion>
	     Temp_Vdigital=HAL_ADC_GetValue(&hadc3);
 8001cee:	4640      	mov	r0, r8
 8001cf0:	f00a f8cc 	bl	800be8c <HAL_ADC_GetValue>
 8001cf4:	b280      	uxth	r0, r0
	    Temp_Vanalogue=(float)Temp_Vdigital*3/4096;
 8001cf6:	ee07 0a90 	vmov	s15, r0
 8001cfa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001cfe:	eeb0 7a08 	vmov.f32	s14, #8	; 0x40400000  3.0
	     Temp_Vdigital=HAL_ADC_GetValue(&hadc3);
 8001d02:	4b1a      	ldr	r3, [pc, #104]	; (8001d6c <TempControl+0x9c>)
	    Temp_Vanalogue=(float)Temp_Vdigital*3/4096;
 8001d04:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d08:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8001d70 <TempControl+0xa0>
	     Temp_Vdigital=HAL_ADC_GetValue(&hadc3);
 8001d0c:	8018      	strh	r0, [r3, #0]
	    Temp_Vanalogue=(float)Temp_Vdigital*3/4096;
 8001d0e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d12:	4b18      	ldr	r3, [pc, #96]	; (8001d74 <TempControl+0xa4>)
	    Temp=(Temp_Vanalogue-0.5)/0.01;
 8001d14:	ee17 0a90 	vmov	r0, s15
	    Temp_Vanalogue=(float)Temp_Vdigital*3/4096;
 8001d18:	edc3 7a00 	vstr	s15, [r3]
	    Temp=(Temp_Vanalogue-0.5)/0.01;
 8001d1c:	f7fe fc84 	bl	8000628 <__aeabi_f2d>
 8001d20:	4622      	mov	r2, r4
 8001d22:	462b      	mov	r3, r5
 8001d24:	f7fe fb20 	bl	8000368 <__aeabi_dsub>
 8001d28:	4632      	mov	r2, r6
 8001d2a:	463b      	mov	r3, r7
 8001d2c:	f7fe fdfe 	bl	800092c <__aeabi_ddiv>
 8001d30:	f7fe ffca 	bl	8000cc8 <__aeabi_d2f>
	    if(Temp<=35){
 8001d34:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8001d78 <TempControl+0xa8>
	    Temp=(Temp_Vanalogue-0.5)/0.01;
 8001d38:	4b10      	ldr	r3, [pc, #64]	; (8001d7c <TempControl+0xac>)
 8001d3a:	ee07 0a90 	vmov	s15, r0
	    if(Temp<=35){
 8001d3e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001d42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	    Temp=(Temp_Vanalogue-0.5)/0.01;
 8001d46:	6018      	str	r0, [r3, #0]
	    	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 8001d48:	bf98      	it	ls
 8001d4a:	2201      	movls	r2, #1
	    	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 8001d4c:	480c      	ldr	r0, [pc, #48]	; (8001d80 <TempControl+0xb0>)
 8001d4e:	bf88      	it	hi
 8001d50:	2200      	movhi	r2, #0
 8001d52:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001d56:	f00a fd65 	bl	800c824 <HAL_GPIO_WritePin>
	    osDelay(500);
 8001d5a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001d5e:	f00d f989 	bl	800f074 <osDelay>
		HAL_ADC_Start(&hadc3);
 8001d62:	e7bd      	b.n	8001ce0 <TempControl+0x10>
 8001d64:	f3af 8000 	nop.w
 8001d68:	3fe00000 	.word	0x3fe00000
 8001d6c:	20002c98 	.word	0x20002c98
 8001d70:	39800000 	.word	0x39800000
 8001d74:	20002c94 	.word	0x20002c94
 8001d78:	420c0000 	.word	0x420c0000
 8001d7c:	20002c90 	.word	0x20002c90
 8001d80:	40021800 	.word	0x40021800
 8001d84:	47ae147b 	.word	0x47ae147b
 8001d88:	3f847ae1 	.word	0x3f847ae1
 8001d8c:	20008d48 	.word	0x20008d48

08001d90 <SystemClock_Config>:
{
 8001d90:	b570      	push	{r4, r5, r6, lr}
 8001d92:	b0a0      	sub	sp, #128	; 0x80
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001d94:	2210      	movs	r2, #16
 8001d96:	2100      	movs	r1, #0
 8001d98:	a80a      	add	r0, sp, #40	; 0x28
 8001d9a:	f02a fa99 	bl	802c2d0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001d9e:	2214      	movs	r2, #20
 8001da0:	2100      	movs	r1, #0
 8001da2:	a803      	add	r0, sp, #12
 8001da4:	f02a fa94 	bl	802c2d0 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001da8:	2100      	movs	r1, #0
 8001daa:	2230      	movs	r2, #48	; 0x30
 8001dac:	a814      	add	r0, sp, #80	; 0x50
 8001dae:	f02a fa8f 	bl	802c2d0 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001db2:	2500      	movs	r5, #0
 8001db4:	4b21      	ldr	r3, [pc, #132]	; (8001e3c <SystemClock_Config+0xac>)
 8001db6:	9501      	str	r5, [sp, #4]
 8001db8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001dba:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001dbe:	641a      	str	r2, [r3, #64]	; 0x40
 8001dc0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001dc2:	4a1f      	ldr	r2, [pc, #124]	; (8001e40 <SystemClock_Config+0xb0>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001dc4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001dc8:	9301      	str	r3, [sp, #4]
 8001dca:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001dcc:	9502      	str	r5, [sp, #8]
 8001dce:	6813      	ldr	r3, [r2, #0]
 8001dd0:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8001dd4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001dd8:	6013      	str	r3, [r2, #0]
 8001dda:	6813      	ldr	r3, [r2, #0]
 8001ddc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001de0:	9302      	str	r3, [sp, #8]
 8001de2:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001de4:	f44f 3680 	mov.w	r6, #65536	; 0x10000
 8001de8:	2301      	movs	r3, #1
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001dea:	2402      	movs	r4, #2
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001dec:	e9cd 3608 	strd	r3, r6, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001df0:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 72;
 8001df4:	2204      	movs	r2, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001df6:	e9cd 430e 	strd	r4, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 72;
 8001dfa:	2348      	movs	r3, #72	; 0x48
 8001dfc:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001e00:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 3;
 8001e02:	2303      	movs	r3, #3
 8001e04:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001e06:	9412      	str	r4, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001e08:	f00b fb0e 	bl	800d428 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001e0c:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001e0e:	e9cd 3403 	strd	r3, r4, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001e12:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001e14:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001e18:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001e1a:	e9cd 3306 	strd	r3, r3, [sp, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001e1e:	9505      	str	r5, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001e20:	f00b fcda 	bl	800d7d8 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001e24:	2308      	movs	r3, #8
 8001e26:	9314      	str	r3, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 60;
 8001e28:	233c      	movs	r3, #60	; 0x3c
 8001e2a:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001e2c:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 8001e2e:	2305      	movs	r3, #5
 8001e30:	931a      	str	r3, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 8001e32:	961d      	str	r6, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001e34:	f00b fdaa 	bl	800d98c <HAL_RCCEx_PeriphCLKConfig>
}
 8001e38:	b020      	add	sp, #128	; 0x80
 8001e3a:	bd70      	pop	{r4, r5, r6, pc}
 8001e3c:	40023800 	.word	0x40023800
 8001e40:	40007000 	.word	0x40007000

08001e44 <main>:
{
 8001e44:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001e48:	b09d      	sub	sp, #116	; 0x74
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e4a:	2400      	movs	r4, #0
 8001e4c:	4dcc      	ldr	r5, [pc, #816]	; (8002180 <main+0x33c>)
  hi2c3.Instance = I2C3;
 8001e4e:	f8df 836c 	ldr.w	r8, [pc, #876]	; 80021bc <main+0x378>
  HAL_Init();
 8001e52:	f009 fddf 	bl	800ba14 <HAL_Init>
  SystemClock_Config();
 8001e56:	f7ff ff9b 	bl	8001d90 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e5a:	2214      	movs	r2, #20
 8001e5c:	2100      	movs	r1, #0
 8001e5e:	a80f      	add	r0, sp, #60	; 0x3c
 8001e60:	f02a fa36 	bl	802c2d0 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e64:	9402      	str	r4, [sp, #8]
 8001e66:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e68:	48c6      	ldr	r0, [pc, #792]	; (8002184 <main+0x340>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e6a:	f043 0320 	orr.w	r3, r3, #32
 8001e6e:	632b      	str	r3, [r5, #48]	; 0x30
 8001e70:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e72:	f003 0320 	and.w	r3, r3, #32
 8001e76:	9302      	str	r3, [sp, #8]
 8001e78:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001e7a:	9403      	str	r4, [sp, #12]
 8001e7c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001e82:	632b      	str	r3, [r5, #48]	; 0x30
 8001e84:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e86:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001e8a:	9303      	str	r3, [sp, #12]
 8001e8c:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e8e:	9404      	str	r4, [sp, #16]
 8001e90:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e92:	f043 0304 	orr.w	r3, r3, #4
 8001e96:	632b      	str	r3, [r5, #48]	; 0x30
 8001e98:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e9a:	f003 0304 	and.w	r3, r3, #4
 8001e9e:	9304      	str	r3, [sp, #16]
 8001ea0:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ea2:	9405      	str	r4, [sp, #20]
 8001ea4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ea6:	f043 0301 	orr.w	r3, r3, #1
 8001eaa:	632b      	str	r3, [r5, #48]	; 0x30
 8001eac:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001eae:	f003 0301 	and.w	r3, r3, #1
 8001eb2:	9305      	str	r3, [sp, #20]
 8001eb4:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001eb6:	9406      	str	r4, [sp, #24]
 8001eb8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001eba:	f043 0302 	orr.w	r3, r3, #2
 8001ebe:	632b      	str	r3, [r5, #48]	; 0x30
 8001ec0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ec2:	f003 0302 	and.w	r3, r3, #2
 8001ec6:	9306      	str	r3, [sp, #24]
 8001ec8:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001eca:	9407      	str	r4, [sp, #28]
 8001ecc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ece:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001ed2:	632b      	str	r3, [r5, #48]	; 0x30
 8001ed4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ed6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001eda:	9307      	str	r3, [sp, #28]
 8001edc:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001ede:	9408      	str	r4, [sp, #32]
 8001ee0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ee2:	f043 0310 	orr.w	r3, r3, #16
 8001ee6:	632b      	str	r3, [r5, #48]	; 0x30
 8001ee8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001eea:	f003 0310 	and.w	r3, r3, #16
 8001eee:	9308      	str	r3, [sp, #32]
 8001ef0:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ef2:	9409      	str	r4, [sp, #36]	; 0x24
 8001ef4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ef6:	f043 0308 	orr.w	r3, r3, #8
 8001efa:	632b      	str	r3, [r5, #48]	; 0x30
 8001efc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001efe:	f003 0308 	and.w	r3, r3, #8
 8001f02:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f04:	4622      	mov	r2, r4
 8001f06:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f08:	9b09      	ldr	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f0a:	f00a fc8b 	bl	800c824 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001f0e:	489e      	ldr	r0, [pc, #632]	; (8002188 <main+0x344>)
 8001f10:	4622      	mov	r2, r4
 8001f12:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001f16:	f00a fc85 	bl	800c824 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 8001f1a:	4622      	mov	r2, r4
 8001f1c:	489b      	ldr	r0, [pc, #620]	; (800218c <main+0x348>)
 8001f1e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f22:	2601      	movs	r6, #1
 8001f24:	2704      	movs	r7, #4
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 8001f26:	f00a fc7d 	bl	800c824 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f2a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f2c:	4895      	ldr	r0, [pc, #596]	; (8002184 <main+0x340>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f2e:	9312      	str	r3, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f30:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f32:	e9cd 760f 	strd	r7, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f36:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f38:	f00a fb8c 	bl	800c654 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f3c:	2302      	movs	r3, #2
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001f3e:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f42:	4891      	ldr	r0, [pc, #580]	; (8002188 <main+0x344>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f44:	9312      	str	r3, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f46:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f48:	e9cd 260f 	strd	r2, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Pin = LD3_Pin;
 8001f4c:	f44f 5900 	mov.w	r9, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f50:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f52:	f00a fb7f 	bl	800c654 <HAL_GPIO_Init>
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 8001f56:	a90f      	add	r1, sp, #60	; 0x3c
 8001f58:	488c      	ldr	r0, [pc, #560]	; (800218c <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f5a:	e9cd 960f 	strd	r9, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f5e:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 8001f62:	f00a fb77 	bl	800c654 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001f66:	488a      	ldr	r0, [pc, #552]	; (8002190 <main+0x34c>)
 8001f68:	4a8a      	ldr	r2, [pc, #552]	; (8002194 <main+0x350>)
 8001f6a:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001f6c:	f00a f8c6 	bl	800c0fc <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001f70:	4b89      	ldr	r3, [pc, #548]	; (8002198 <main+0x354>)
 8001f72:	4a8a      	ldr	r2, [pc, #552]	; (800219c <main+0x358>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001f74:	f8c8 4020 	str.w	r4, [r8, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001f78:	e9c8 3200 	strd	r3, r2, [r8]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001f7c:	4640      	mov	r0, r8
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001f7e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001f82:	e9c8 2404 	strd	r2, r4, [r8, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001f86:	e9c8 4402 	strd	r4, r4, [r8, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001f8a:	e9c8 4406 	strd	r4, r4, [r8, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001f8e:	f00a fe31 	bl	800cbf4 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001f92:	2110      	movs	r1, #16
 8001f94:	4640      	mov	r0, r8
 8001f96:	f00b f86d 	bl	800d074 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001f9a:	4621      	mov	r1, r4
 8001f9c:	4640      	mov	r0, r8
 8001f9e:	f00b f888 	bl	800d0b2 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001fa2:	487f      	ldr	r0, [pc, #508]	; (80021a0 <main+0x35c>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001fa4:	497f      	ldr	r1, [pc, #508]	; (80021a4 <main+0x360>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001fa6:	f8df 8218 	ldr.w	r8, [pc, #536]	; 80021c0 <main+0x37c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001faa:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001fac:	f44f 7282 	mov.w	r2, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001fb0:	f44f 7c00 	mov.w	ip, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001fb4:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001fb8:	2218      	movs	r2, #24
 8001fba:	e9c0 c206 	strd	ip, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001fbe:	220a      	movs	r2, #10
 8001fc0:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001fc2:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001fc6:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001fca:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001fce:	f00b fee1 	bl	800dd94 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001fd2:	4a75      	ldr	r2, [pc, #468]	; (80021a8 <main+0x364>)
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001fd4:	f8c8 9028 	str.w	r9, [r8, #40]	; 0x28
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001fd8:	f04f 0a10 	mov.w	sl, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001fdc:	e9c8 2600 	strd	r2, r6, [r8]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001fe0:	2240      	movs	r2, #64	; 0x40
 8001fe2:	e9c8 a204 	strd	sl, r2, [r8, #16]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001fe6:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001fea:	f44f 72c0 	mov.w	r2, #384	; 0x180
  SdramTiming.WriteRecoveryTime = 3;
 8001fee:	f04f 0b03 	mov.w	fp, #3
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001ff2:	e9c8 2406 	strd	r2, r4, [r8, #24]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001ff6:	e9c8 3408 	strd	r3, r4, [r8, #32]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001ffa:	2207      	movs	r2, #7
 8001ffc:	2302      	movs	r3, #2
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001ffe:	a90f      	add	r1, sp, #60	; 0x3c
 8002000:	4640      	mov	r0, r8
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002002:	f04f 0908 	mov.w	r9, #8
  SdramTiming.ExitSelfRefreshDelay = 7;
 8002006:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
  SdramTiming.RPDelay = 2;
 800200a:	e9cd b313 	strd	fp, r3, [sp, #76]	; 0x4c
  SdramTiming.RCDDelay = 2;
 800200e:	9315      	str	r3, [sp, #84]	; 0x54
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8002010:	e9c8 4702 	strd	r4, r7, [r8, #8]
  SdramTiming.RowCycleDelay = 7;
 8002014:	e9cd 7211 	strd	r7, r2, [sp, #68]	; 0x44
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002018:	f00b fde2 	bl	800dbe0 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800201c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002020:	a90b      	add	r1, sp, #44	; 0x2c
 8002022:	4640      	mov	r0, r8
  Command->AutoRefreshNumber       = 1;
 8002024:	e9cd 960c 	strd	r9, r6, [sp, #48]	; 0x30
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8002028:	960b      	str	r6, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 800202a:	940a      	str	r4, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = 0;
 800202c:	940e      	str	r4, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800202e:	f00b fdf7 	bl	800dc20 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8002032:	4630      	mov	r0, r6
 8002034:	f009 fd1a 	bl	800ba6c <HAL_Delay>
  Command->CommandMode             = FMC_SDRAM_CMD_PALL;
 8002038:	2302      	movs	r3, #2
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 800203a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800203e:	a90b      	add	r1, sp, #44	; 0x2c
 8002040:	4640      	mov	r0, r8
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002042:	e9cd 390b 	strd	r3, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8002046:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 800204a:	f00b fde9 	bl	800dc20 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800204e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002052:	a90b      	add	r1, sp, #44	; 0x2c
 8002054:	4640      	mov	r0, r8
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002056:	e9cd b90b 	strd	fp, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 800205a:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800205e:	f00b fddf 	bl	800dc20 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8002062:	f44f 720c 	mov.w	r2, #560	; 0x230
 8002066:	920a      	str	r2, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = tmpmrd;
 8002068:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800206a:	920e      	str	r2, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800206c:	a90b      	add	r1, sp, #44	; 0x2c
 800206e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002072:	4640      	mov	r0, r8
  Command->AutoRefreshNumber       = 1;
 8002074:	960d      	str	r6, [sp, #52]	; 0x34
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002076:	e9cd 790b 	strd	r7, r9, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800207a:	f00b fdd1 	bl	800dc20 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 800207e:	f240 516a 	movw	r1, #1386	; 0x56a
 8002082:	4640      	mov	r0, r8
 8002084:	f00b fde3 	bl	800dc4e <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8002088:	4621      	mov	r1, r4
 800208a:	2234      	movs	r2, #52	; 0x34
 800208c:	a80f      	add	r0, sp, #60	; 0x3c
 800208e:	f02a f91f 	bl	802c2d0 <memset>
  hltdc.Instance = LTDC;
 8002092:	f8df 8130 	ldr.w	r8, [pc, #304]	; 80021c4 <main+0x380>
 8002096:	4a45      	ldr	r2, [pc, #276]	; (80021ac <main+0x368>)
  hltdc.Init.Backcolor.Blue = 0;
 8002098:	f8a8 4034 	strh.w	r4, [r8, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800209c:	e9c8 2400 	strd	r2, r4, [r8]
  hltdc.Init.HorizontalSync = 9;
 80020a0:	2209      	movs	r2, #9
  hltdc.Init.VerticalSync = 1;
 80020a2:	e9c8 2605 	strd	r2, r6, [r8, #20]
  hltdc.Init.AccumulatedHBP = 29;
 80020a6:	221d      	movs	r2, #29
  hltdc.Init.AccumulatedActiveH = 323;
 80020a8:	f240 1e0d 	movw	lr, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 80020ac:	e9c8 2b07 	strd	r2, fp, [r8, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80020b0:	f240 1243 	movw	r2, #323	; 0x143
 80020b4:	e9c8 e209 	strd	lr, r2, [r8, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80020b8:	f240 1b17 	movw	fp, #279	; 0x117
 80020bc:	f240 1247 	movw	r2, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80020c0:	4640      	mov	r0, r8
  hltdc.Init.TotalHeigh = 327;
 80020c2:	e9c8 b20b 	strd	fp, r2, [r8, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80020c6:	e9c8 4402 	strd	r4, r4, [r8, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80020ca:	f8c8 4010 	str.w	r4, [r8, #16]
  hltdc.Init.Backcolor.Red = 0;
 80020ce:	f888 4036 	strb.w	r4, [r8, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80020d2:	f00b f893 	bl	800d1fc <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80020d6:	20ff      	movs	r0, #255	; 0xff
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80020d8:	2302      	movs	r3, #2
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80020da:	f04f 0b05 	mov.w	fp, #5
  pLayerCfg.WindowX1 = 240;
 80020de:	21f0      	movs	r1, #240	; 0xf0
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80020e0:	f44f 72a0 	mov.w	r2, #320	; 0x140
  pLayerCfg.Alpha0 = 0;
 80020e4:	e9cd 0414 	strd	r0, r4, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80020e8:	f44f 6080 	mov.w	r0, #1024	; 0x400
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80020ec:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  pLayerCfg.WindowY0 = 0;
 80020f0:	e9cd 1410 	strd	r1, r4, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80020f4:	e9cd 0b16 	strd	r0, fp, [sp, #88]	; 0x58
  pLayerCfg.ImageWidth = 240;
 80020f8:	e9cd 4118 	strd	r4, r1, [sp, #96]	; 0x60
  pLayerCfg.ImageHeight = 320;
 80020fc:	921a      	str	r2, [sp, #104]	; 0x68
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80020fe:	a90f      	add	r1, sp, #60	; 0x3c
 8002100:	4622      	mov	r2, r4
 8002102:	4640      	mov	r0, r8
  pLayerCfg.WindowX0 = 0;
 8002104:	940f      	str	r4, [sp, #60]	; 0x3c
  LcdDrv = &ili9341_drv;
 8002106:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 80021c8 <main+0x384>
  pLayerCfg.Backcolor.Blue = 0;
 800210a:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 800210e:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002112:	f00b f93e 	bl	800d392 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8002116:	4a26      	ldr	r2, [pc, #152]	; (80021b0 <main+0x36c>)
 8002118:	f8c8 2000 	str.w	r2, [r8]
  LcdDrv->Init();
 800211c:	6812      	ldr	r2, [r2, #0]
 800211e:	4790      	blx	r2
  LcdDrv->DisplayOff();
 8002120:	f8d8 2000 	ldr.w	r2, [r8]
  hdma2d.Instance = DMA2D;
 8002124:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 80021cc <main+0x388>
  LcdDrv->DisplayOff();
 8002128:	68d2      	ldr	r2, [r2, #12]
 800212a:	4790      	blx	r2
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 800212c:	2302      	movs	r3, #2
  hdma2d.Instance = DMA2D;
 800212e:	4a21      	ldr	r2, [pc, #132]	; (80021b4 <main+0x370>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8002130:	e9c8 430a 	strd	r4, r3, [r8, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8002134:	e9c8 440c 	strd	r4, r4, [r8, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002138:	4640      	mov	r0, r8
  hdma2d.Init.OutputOffset = 0;
 800213a:	e9c8 3402 	strd	r3, r4, [r8, #8]
  hdma2d.Init.Mode = DMA2D_M2M;
 800213e:	e9c8 2400 	strd	r2, r4, [r8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002142:	f00a f98b 	bl	800c45c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8002146:	4631      	mov	r1, r6
 8002148:	4640      	mov	r0, r8
 800214a:	f00a fa3f 	bl	800c5cc <HAL_DMA2D_ConfigLayer>
  TIM_OC_InitTypeDef sConfigOC = {0};
 800214e:	221c      	movs	r2, #28
 8002150:	4621      	mov	r1, r4
 8002152:	a80f      	add	r0, sp, #60	; 0x3c
  htim3.Instance = TIM3;
 8002154:	f8df 8078 	ldr.w	r8, [pc, #120]	; 80021d0 <main+0x38c>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002158:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 800215c:	f02a f8b8 	bl	802c2d0 <memset>
  htim3.Instance = TIM3;
 8002160:	4b15      	ldr	r3, [pc, #84]	; (80021b8 <main+0x374>)
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002162:	f8c8 4008 	str.w	r4, [r8, #8]
  htim3.Init.Prescaler = 0;
 8002166:	e9c8 3400 	strd	r3, r4, [r8]
  htim3.Init.Period = 35156-1;
 800216a:	f648 1353 	movw	r3, #35155	; 0x8953
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800216e:	e9c8 3403 	strd	r3, r4, [r8, #12]
  if (HAL_TIM_OC_Init(&htim3) != HAL_OK)
 8002172:	4640      	mov	r0, r8
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002174:	2380      	movs	r3, #128	; 0x80
 8002176:	f8c8 3018 	str.w	r3, [r8, #24]
  if (HAL_TIM_OC_Init(&htim3) != HAL_OK)
 800217a:	f00c fa5f 	bl	800e63c <HAL_TIM_OC_Init>
 800217e:	e029      	b.n	80021d4 <main+0x390>
 8002180:	40023800 	.word	0x40023800
 8002184:	40020800 	.word	0x40020800
 8002188:	40020c00 	.word	0x40020c00
 800218c:	40021800 	.word	0x40021800
 8002190:	20008d90 	.word	0x20008d90
 8002194:	40023000 	.word	0x40023000
 8002198:	40005c00 	.word	0x40005c00
 800219c:	000186a0 	.word	0x000186a0
 80021a0:	20009028 	.word	0x20009028
 80021a4:	40015000 	.word	0x40015000
 80021a8:	a0000140 	.word	0xa0000140
 80021ac:	40016800 	.word	0x40016800
 80021b0:	2000002c 	.word	0x2000002c
 80021b4:	4002b000 	.word	0x4002b000
 80021b8:	40000400 	.word	0x40000400
 80021bc:	20008ef8 	.word	0x20008ef8
 80021c0:	20008ff4 	.word	0x20008ff4
 80021c4:	20008f4c 	.word	0x20008f4c
 80021c8:	20002b7c 	.word	0x20002b7c
 80021cc:	20008d98 	.word	0x20008d98
 80021d0:	20009100 	.word	0x20009100
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 80021d4:	2320      	movs	r3, #32
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80021d6:	a90b      	add	r1, sp, #44	; 0x2c
 80021d8:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80021da:	e9cd 340b 	strd	r3, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80021de:	f00c fbf1 	bl	800e9c4 <HAL_TIMEx_MasterConfigSynchronization>
  sConfigOC.OCMode = TIM_OCMODE_TOGGLE;
 80021e2:	2330      	movs	r3, #48	; 0x30
  if (HAL_TIM_OC_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80021e4:	4622      	mov	r2, r4
 80021e6:	a90f      	add	r1, sp, #60	; 0x3c
 80021e8:	4640      	mov	r0, r8
  sConfigOC.Pulse = 0;
 80021ea:	e9cd 340f 	strd	r3, r4, [sp, #60]	; 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80021ee:	9411      	str	r4, [sp, #68]	; 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80021f0:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_OC_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80021f2:	f00c fa8d 	bl	800e710 <HAL_TIM_OC_ConfigChannel>
  HAL_TIM_MspPostInit(&htim3);
 80021f6:	4640      	mov	r0, r8
 80021f8:	f001 f854 	bl	80032a4 <HAL_TIM_MspPostInit>
  ADC_ChannelConfTypeDef sConfig = {0};
 80021fc:	4652      	mov	r2, sl
 80021fe:	4621      	mov	r1, r4
 8002200:	a80f      	add	r0, sp, #60	; 0x3c
 8002202:	f02a f865 	bl	802c2d0 <memset>
  hadc3.Instance = ADC3;
 8002206:	4ab7      	ldr	r2, [pc, #732]	; (80024e4 <main+0x6a0>)
 8002208:	4bb7      	ldr	r3, [pc, #732]	; (80024e8 <main+0x6a4>)
  hadc3.Init.ContinuousConvMode = ENABLE;
 800220a:	7616      	strb	r6, [r2, #24]
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 800220c:	e9c2 3400 	strd	r3, r4, [r2]
  hadc3.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
 8002210:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
 8002214:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8002218:	4610      	mov	r0, r2
  hadc3.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
 800221a:	e9c2 310a 	strd	r3, r1, [r2, #40]	; 0x28
  hadc3.Init.NbrOfConversion = 1;
 800221e:	61d6      	str	r6, [r2, #28]
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8002220:	6156      	str	r6, [r2, #20]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8002222:	6094      	str	r4, [r2, #8]
  hadc3.Init.ScanConvMode = DISABLE;
 8002224:	6114      	str	r4, [r2, #16]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 8002226:	f882 4020 	strb.w	r4, [r2, #32]
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800222a:	60d4      	str	r4, [r2, #12]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 800222c:	f882 4030 	strb.w	r4, [r2, #48]	; 0x30
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8002230:	f009 fc30 	bl	800ba94 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8002234:	4aab      	ldr	r2, [pc, #684]	; (80024e4 <main+0x6a0>)
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8002236:	9411      	str	r4, [sp, #68]	; 0x44
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8002238:	a90f      	add	r1, sp, #60	; 0x3c
 800223a:	4610      	mov	r0, r2
  sConfig.Rank = 1;
 800223c:	e9cd 760f 	strd	r7, r6, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8002240:	f009 fe6e 	bl	800bf20 <HAL_ADC_ConfigChannel>
  __HAL_RCC_DMA2_CLK_ENABLE();
 8002244:	9401      	str	r4, [sp, #4]
 8002246:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 8002248:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800224c:	632a      	str	r2, [r5, #48]	; 0x30
 800224e:	6b2a      	ldr	r2, [r5, #48]	; 0x30
  hadc1.Instance = ADC1;
 8002250:	4da6      	ldr	r5, [pc, #664]	; (80024ec <main+0x6a8>)
  __HAL_RCC_DMA2_CLK_ENABLE();
 8002252:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8002256:	9201      	str	r2, [sp, #4]
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 5, 0);
 8002258:	4659      	mov	r1, fp
  __HAL_RCC_DMA2_CLK_ENABLE();
 800225a:	9a01      	ldr	r2, [sp, #4]
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 5, 0);
 800225c:	2038      	movs	r0, #56	; 0x38
 800225e:	4622      	mov	r2, r4
 8002260:	f009 ff0c 	bl	800c07c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8002264:	2038      	movs	r0, #56	; 0x38
 8002266:	f009 ff3b 	bl	800c0e0 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 5, 0);
 800226a:	4622      	mov	r2, r4
 800226c:	4659      	mov	r1, fp
 800226e:	203a      	movs	r0, #58	; 0x3a
 8002270:	f009 ff04 	bl	800c07c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 8002274:	203a      	movs	r0, #58	; 0x3a
 8002276:	f009 ff33 	bl	800c0e0 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 5, 0);
 800227a:	4622      	mov	r2, r4
 800227c:	4659      	mov	r1, fp
 800227e:	2046      	movs	r0, #70	; 0x46
 8002280:	f009 fefc 	bl	800c07c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 8002284:	2046      	movs	r0, #70	; 0x46
 8002286:	f009 ff2b 	bl	800c0e0 <HAL_NVIC_EnableIRQ>
  ADC_ChannelConfTypeDef sConfig = {0};
 800228a:	4652      	mov	r2, sl
 800228c:	4621      	mov	r1, r4
 800228e:	a80f      	add	r0, sp, #60	; 0x3c
 8002290:	f02a f81e 	bl	802c2d0 <memset>
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
 8002294:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  hadc1.Instance = ADC1;
 8002298:	4a95      	ldr	r2, [pc, #596]	; (80024f0 <main+0x6ac>)
  hadc1.Init.NbrOfConversion = 1;
 800229a:	61ee      	str	r6, [r5, #28]
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
 800229c:	f04f 5040 	mov.w	r0, #805306368	; 0x30000000
 80022a0:	e9c5 300a 	strd	r3, r0, [r5, #40]	; 0x28
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80022a4:	4628      	mov	r0, r5
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 80022a6:	e9c5 2400 	strd	r2, r4, [r5]
  hadc1.Init.DMAContinuousRequests = ENABLE;
 80022aa:	f885 6030 	strb.w	r6, [r5, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80022ae:	616e      	str	r6, [r5, #20]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80022b0:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80022b2:	612c      	str	r4, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80022b4:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80022b6:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80022ba:	60ec      	str	r4, [r5, #12]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80022bc:	f009 fbea 	bl	800ba94 <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_11;
 80022c0:	220b      	movs	r2, #11
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80022c2:	a90f      	add	r1, sp, #60	; 0x3c
 80022c4:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 80022c6:	e9cd 260f 	strd	r2, r6, [sp, #60]	; 0x3c
  hadc2.Instance = ADC2;
 80022ca:	4d8a      	ldr	r5, [pc, #552]	; (80024f4 <main+0x6b0>)
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80022cc:	9411      	str	r4, [sp, #68]	; 0x44
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80022ce:	f009 fe27 	bl	800bf20 <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 80022d2:	4652      	mov	r2, sl
 80022d4:	4621      	mov	r1, r4
 80022d6:	a80f      	add	r0, sp, #60	; 0x3c
 80022d8:	f029 fffa 	bl	802c2d0 <memset>
  hadc2.Instance = ADC2;
 80022dc:	4a86      	ldr	r2, [pc, #536]	; (80024f8 <main+0x6b4>)
  hadc2.Init.NbrOfConversion = 1;
 80022de:	61ee      	str	r6, [r5, #28]
  hadc2.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
 80022e0:	f04f 5c40 	mov.w	ip, #805306368	; 0x30000000
 80022e4:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80022e8:	4628      	mov	r0, r5
  hadc2.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
 80022ea:	e9c5 3c0a 	strd	r3, ip, [r5, #40]	; 0x28
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 80022ee:	e9c5 2400 	strd	r2, r4, [r5]
  hadc2.Init.DMAContinuousRequests = ENABLE;
 80022f2:	f885 6030 	strb.w	r6, [r5, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80022f6:	616e      	str	r6, [r5, #20]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 80022f8:	60ac      	str	r4, [r5, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 80022fa:	612c      	str	r4, [r5, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 80022fc:	762c      	strb	r4, [r5, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80022fe:	f885 4020 	strb.w	r4, [r5, #32]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8002302:	60ec      	str	r4, [r5, #12]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8002304:	f009 fbc6 	bl	800ba94 <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_13;
 8002308:	230d      	movs	r3, #13
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800230a:	a90f      	add	r1, sp, #60	; 0x3c
 800230c:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 800230e:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  htim1.Instance = TIM1;
 8002312:	4d7a      	ldr	r5, [pc, #488]	; (80024fc <main+0x6b8>)
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8002314:	9411      	str	r4, [sp, #68]	; 0x44
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8002316:	f009 fe03 	bl	800bf20 <HAL_ADC_ConfigChannel>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800231a:	4652      	mov	r2, sl
 800231c:	4621      	mov	r1, r4
 800231e:	a80f      	add	r0, sp, #60	; 0x3c
 8002320:	f029 ffd6 	bl	802c2d0 <memset>
  htim1.Instance = TIM1;
 8002324:	4b76      	ldr	r3, [pc, #472]	; (8002500 <main+0x6bc>)
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002326:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8002328:	4628      	mov	r0, r5
  htim1.Init.Prescaler = 0;
 800232a:	e9c5 3400 	strd	r3, r4, [r5]
  htim1.Init.Period = 0;
 800232e:	e9c5 4402 	strd	r4, r4, [r5, #8]
  htim1.Init.RepetitionCounter = 0;
 8002332:	e9c5 4404 	strd	r4, r4, [r5, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002336:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800233a:	f00c f965 	bl	800e608 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800233e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8002342:	a90f      	add	r1, sp, #60	; 0x3c
 8002344:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002346:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8002348:	f00c fa78 	bl	800e83c <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800234c:	a90b      	add	r1, sp, #44	; 0x2c
 800234e:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002350:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim4.Instance = TIM4;
 8002354:	4d6b      	ldr	r5, [pc, #428]	; (8002504 <main+0x6c0>)
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8002356:	f00c fb35 	bl	800e9c4 <HAL_TIMEx_MasterConfigSynchronization>
  TIM_OC_InitTypeDef sConfigOC = {0};
 800235a:	221c      	movs	r2, #28
 800235c:	4621      	mov	r1, r4
 800235e:	a80f      	add	r0, sp, #60	; 0x3c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002360:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002364:	f029 ffb4 	bl	802c2d0 <memset>
  htim4.Init.Prescaler = 1000;
 8002368:	4b67      	ldr	r3, [pc, #412]	; (8002508 <main+0x6c4>)
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800236a:	612c      	str	r4, [r5, #16]
  htim4.Init.Prescaler = 1000;
 800236c:	f44f 7a7a 	mov.w	sl, #1000	; 0x3e8
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8002370:	4628      	mov	r0, r5
  htim4.Init.Prescaler = 1000;
 8002372:	e9c5 3a00 	strd	r3, sl, [r5]
  htim4.Init.Period = 0;
 8002376:	e9c5 4402 	strd	r4, r4, [r5, #8]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800237a:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 800237c:	f00c f978 	bl	800e670 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8002380:	a90b      	add	r1, sp, #44	; 0x2c
 8002382:	4628      	mov	r0, r5
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002384:	2660      	movs	r6, #96	; 0x60
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002386:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800238a:	f00c fb1b 	bl	800e9c4 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800238e:	463a      	mov	r2, r7
 8002390:	a90f      	add	r1, sp, #60	; 0x3c
 8002392:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8002394:	e9cd 640f 	strd	r6, r4, [sp, #60]	; 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002398:	9411      	str	r4, [sp, #68]	; 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800239a:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800239c:	f00c f9e4 	bl	800e768 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim4);
 80023a0:	4628      	mov	r0, r5
 80023a2:	f000 ff7f 	bl	80032a4 <HAL_TIM_MspPostInit>
  huart1.Init.BaudRate = 9600;
 80023a6:	f8df e1d4 	ldr.w	lr, [pc, #468]	; 800257c <main+0x738>
  huart1.Instance = USART1;
 80023aa:	4858      	ldr	r0, [pc, #352]	; (800250c <main+0x6c8>)
  htim2.Instance = TIM2;
 80023ac:	4d58      	ldr	r5, [pc, #352]	; (8002510 <main+0x6cc>)
  huart1.Init.Parity = UART_PARITY_NONE;
 80023ae:	6104      	str	r4, [r0, #16]
  huart1.Init.BaudRate = 9600;
 80023b0:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80023b4:	e9c0 e300 	strd	lr, r3, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80023b8:	230c      	movs	r3, #12
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80023ba:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80023be:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80023c2:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80023c4:	f00c fbba 	bl	800eb3c <HAL_UART_Init>
  TIM_OC_InitTypeDef sConfigOC = {0};
 80023c8:	221c      	movs	r2, #28
 80023ca:	4621      	mov	r1, r4
 80023cc:	a80f      	add	r0, sp, #60	; 0x3c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80023ce:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 80023d2:	f029 ff7d 	bl	802c2d0 <memset>
  htim2.Instance = TIM2;
 80023d6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  htim2.Init.Prescaler = 1000;
 80023da:	e9c5 3a00 	strd	r3, sl, [r5]
  htim2.Init.Period = 72000;
 80023de:	f8df a1a0 	ldr.w	sl, [pc, #416]	; 8002580 <main+0x73c>
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80023e2:	60ac      	str	r4, [r5, #8]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80023e4:	4628      	mov	r0, r5
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80023e6:	e9c5 a403 	strd	sl, r4, [r5, #12]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80023ea:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80023ec:	f00c f940 	bl	800e670 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80023f0:	a90b      	add	r1, sp, #44	; 0x2c
 80023f2:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80023f4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80023f8:	f00c fae4 	bl	800e9c4 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80023fc:	4622      	mov	r2, r4
 80023fe:	a90f      	add	r1, sp, #60	; 0x3c
 8002400:	4628      	mov	r0, r5
  sConfigOC.Pulse = 72000;
 8002402:	e9cd 6a0f 	strd	r6, sl, [sp, #60]	; 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002406:	9411      	str	r4, [sp, #68]	; 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002408:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800240a:	f00c f9ad 	bl	800e768 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim2);
 800240e:	4628      	mov	r0, r5
 8002410:	f000 ff48 	bl	80032a4 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8002414:	f7fe fe53 	bl	80010be <MX_TouchGFX_Init>
  arm_rfft_fast_init_f32(&fft_handler, 2048);
 8002418:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800241c:	483d      	ldr	r0, [pc, #244]	; (8002514 <main+0x6d0>)
 800241e:	f027 fe9f 	bl	802a160 <arm_rfft_fast_init_f32>
  HAL_TIM_Base_Start(&htim3);
 8002422:	4640      	mov	r0, r8
 8002424:	f00b ffc2 	bl	800e3ac <HAL_TIM_Base_Start>
  HAL_TIM_OC_Start(&htim3, TIM_CHANNEL_1);//debug line PB4
 8002428:	4621      	mov	r1, r4
 800242a:	4640      	mov	r0, r8
 800242c:	f00c faa8 	bl	800e980 <HAL_TIM_OC_Start>
  HAL_TIM_PWM_Start( &htim2, TIM_CHANNEL_1 );
 8002430:	4621      	mov	r1, r4
 8002432:	4628      	mov	r0, r5
 8002434:	f00c fac4 	bl	800e9c0 <HAL_TIM_PWM_Start>
  HAL_TIM_OC_Start(&htim2, TIM_CHANNEL_1);
 8002438:	4621      	mov	r1, r4
 800243a:	4628      	mov	r0, r5
 800243c:	f00c faa0 	bl	800e980 <HAL_TIM_OC_Start>
  htim2.Instance->ARR=72000;
 8002440:	682b      	ldr	r3, [r5, #0]
 8002442:	f8c3 a02c 	str.w	sl, [r3, #44]	; 0x2c
  htim2.Instance->CCR1=htim2.Instance->ARR +1;
 8002446:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002448:	3201      	adds	r2, #1
 800244a:	635a      	str	r2, [r3, #52]	; 0x34
  osKernelInitialize();
 800244c:	f00c fd4a 	bl	800eee4 <osKernelInitialize>
  ADCstateHandle = osMessageQueueNew (8, sizeof(int), &ADCstate_attributes);
 8002450:	4a31      	ldr	r2, [pc, #196]	; (8002518 <main+0x6d4>)
 8002452:	4639      	mov	r1, r7
 8002454:	4648      	mov	r0, r9
 8002456:	f00c feed 	bl	800f234 <osMessageQueueNew>
 800245a:	4b30      	ldr	r3, [pc, #192]	; (800251c <main+0x6d8>)
  CallMeasurementHandle = osMessageQueueNew (8, sizeof(int), &CallMeasurement_attributes);
 800245c:	4a30      	ldr	r2, [pc, #192]	; (8002520 <main+0x6dc>)
  ADCstateHandle = osMessageQueueNew (8, sizeof(int), &ADCstate_attributes);
 800245e:	6018      	str	r0, [r3, #0]
  CallMeasurementHandle = osMessageQueueNew (8, sizeof(int), &CallMeasurement_attributes);
 8002460:	4639      	mov	r1, r7
 8002462:	4648      	mov	r0, r9
 8002464:	f00c fee6 	bl	800f234 <osMessageQueueNew>
 8002468:	4b2e      	ldr	r3, [pc, #184]	; (8002524 <main+0x6e0>)
  ProgressBarHandle = osMessageQueueNew (8, sizeof(int), &ProgressBar_attributes);
 800246a:	4a2f      	ldr	r2, [pc, #188]	; (8002528 <main+0x6e4>)
  CallMeasurementHandle = osMessageQueueNew (8, sizeof(int), &CallMeasurement_attributes);
 800246c:	6018      	str	r0, [r3, #0]
  ProgressBarHandle = osMessageQueueNew (8, sizeof(int), &ProgressBar_attributes);
 800246e:	4639      	mov	r1, r7
 8002470:	4648      	mov	r0, r9
 8002472:	f00c fedf 	bl	800f234 <osMessageQueueNew>
 8002476:	4b2d      	ldr	r3, [pc, #180]	; (800252c <main+0x6e8>)
  SaveDataCheckHandle = osMessageQueueNew (8, sizeof(int), &SaveDataCheck_attributes);
 8002478:	4a2d      	ldr	r2, [pc, #180]	; (8002530 <main+0x6ec>)
  ProgressBarHandle = osMessageQueueNew (8, sizeof(int), &ProgressBar_attributes);
 800247a:	6018      	str	r0, [r3, #0]
  SaveDataCheckHandle = osMessageQueueNew (8, sizeof(int), &SaveDataCheck_attributes);
 800247c:	4639      	mov	r1, r7
 800247e:	4648      	mov	r0, r9
 8002480:	f00c fed8 	bl	800f234 <osMessageQueueNew>
 8002484:	4b2b      	ldr	r3, [pc, #172]	; (8002534 <main+0x6f0>)
  SaveDataEndHandle = osMessageQueueNew (8, sizeof(int), &SaveDataEnd_attributes);
 8002486:	4a2c      	ldr	r2, [pc, #176]	; (8002538 <main+0x6f4>)
  SaveDataCheckHandle = osMessageQueueNew (8, sizeof(int), &SaveDataCheck_attributes);
 8002488:	6018      	str	r0, [r3, #0]
  SaveDataEndHandle = osMessageQueueNew (8, sizeof(int), &SaveDataEnd_attributes);
 800248a:	4639      	mov	r1, r7
 800248c:	4648      	mov	r0, r9
 800248e:	f00c fed1 	bl	800f234 <osMessageQueueNew>
 8002492:	4b2a      	ldr	r3, [pc, #168]	; (800253c <main+0x6f8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002494:	4a2a      	ldr	r2, [pc, #168]	; (8002540 <main+0x6fc>)
  SaveDataEndHandle = osMessageQueueNew (8, sizeof(int), &SaveDataEnd_attributes);
 8002496:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002498:	4621      	mov	r1, r4
 800249a:	482a      	ldr	r0, [pc, #168]	; (8002544 <main+0x700>)
 800249c:	f00c fd5c 	bl	800ef58 <osThreadNew>
 80024a0:	4b29      	ldr	r3, [pc, #164]	; (8002548 <main+0x704>)
  PQReaderHandle = osThreadNew(ImpedanceCalculator, NULL, &PQReader_attributes);
 80024a2:	4a2a      	ldr	r2, [pc, #168]	; (800254c <main+0x708>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80024a4:	6018      	str	r0, [r3, #0]
  PQReaderHandle = osThreadNew(ImpedanceCalculator, NULL, &PQReader_attributes);
 80024a6:	4621      	mov	r1, r4
 80024a8:	4829      	ldr	r0, [pc, #164]	; (8002550 <main+0x70c>)
 80024aa:	f00c fd55 	bl	800ef58 <osThreadNew>
 80024ae:	4b29      	ldr	r3, [pc, #164]	; (8002554 <main+0x710>)
  TemperatureContHandle = osThreadNew(TempControl, NULL, &TemperatureCont_attributes);
 80024b0:	4a29      	ldr	r2, [pc, #164]	; (8002558 <main+0x714>)
  PQReaderHandle = osThreadNew(ImpedanceCalculator, NULL, &PQReader_attributes);
 80024b2:	6018      	str	r0, [r3, #0]
  TemperatureContHandle = osThreadNew(TempControl, NULL, &TemperatureCont_attributes);
 80024b4:	4621      	mov	r1, r4
 80024b6:	4829      	ldr	r0, [pc, #164]	; (800255c <main+0x718>)
 80024b8:	f00c fd4e 	bl	800ef58 <osThreadNew>
 80024bc:	4b28      	ldr	r3, [pc, #160]	; (8002560 <main+0x71c>)
  AccuatorHandle = osThreadNew(StartActuating, NULL, &Accuator_attributes);
 80024be:	4a29      	ldr	r2, [pc, #164]	; (8002564 <main+0x720>)
  TemperatureContHandle = osThreadNew(TempControl, NULL, &TemperatureCont_attributes);
 80024c0:	6018      	str	r0, [r3, #0]
  AccuatorHandle = osThreadNew(StartActuating, NULL, &Accuator_attributes);
 80024c2:	4621      	mov	r1, r4
 80024c4:	4828      	ldr	r0, [pc, #160]	; (8002568 <main+0x724>)
 80024c6:	f00c fd47 	bl	800ef58 <osThreadNew>
 80024ca:	4b28      	ldr	r3, [pc, #160]	; (800256c <main+0x728>)
  SaveDataFromBLEHandle = osThreadNew(SaveData, NULL, &SaveDataFromBLE_attributes);
 80024cc:	4a28      	ldr	r2, [pc, #160]	; (8002570 <main+0x72c>)
  AccuatorHandle = osThreadNew(StartActuating, NULL, &Accuator_attributes);
 80024ce:	6018      	str	r0, [r3, #0]
  SaveDataFromBLEHandle = osThreadNew(SaveData, NULL, &SaveDataFromBLE_attributes);
 80024d0:	4621      	mov	r1, r4
 80024d2:	4828      	ldr	r0, [pc, #160]	; (8002574 <main+0x730>)
 80024d4:	f00c fd40 	bl	800ef58 <osThreadNew>
 80024d8:	4b27      	ldr	r3, [pc, #156]	; (8002578 <main+0x734>)
 80024da:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80024dc:	f00c fd1c 	bl	800ef18 <osKernelStart>
  while (1)
 80024e0:	e7fe      	b.n	80024e0 <main+0x69c>
 80024e2:	bf00      	nop
 80024e4:	20008d48 	.word	0x20008d48
 80024e8:	40012200 	.word	0x40012200
 80024ec:	20008cb8 	.word	0x20008cb8
 80024f0:	40012000 	.word	0x40012000
 80024f4:	20008d00 	.word	0x20008d00
 80024f8:	40012100 	.word	0x40012100
 80024fc:	20009080 	.word	0x20009080
 8002500:	40010000 	.word	0x40010000
 8002504:	20009140 	.word	0x20009140
 8002508:	40000800 	.word	0x40000800
 800250c:	20009180 	.word	0x20009180
 8002510:	200090c0 	.word	0x200090c0
 8002514:	20004ca0 	.word	0x20004ca0
 8002518:	0802f428 	.word	0x0802f428
 800251c:	20002b68 	.word	0x20002b68
 8002520:	0802f464 	.word	0x0802f464
 8002524:	20002b70 	.word	0x20002b70
 8002528:	0802f4c4 	.word	0x0802f4c4
 800252c:	20002b88 	.word	0x20002b88
 8002530:	0802f4dc 	.word	0x0802f4dc
 8002534:	20002c84 	.word	0x20002c84
 8002538:	0802f4f4 	.word	0x0802f4f4
 800253c:	20002c88 	.word	0x20002c88
 8002540:	0802f47c 	.word	0x0802f47c
 8002544:	080010c3 	.word	0x080010c3
 8002548:	20002b78 	.word	0x20002b78
 800254c:	0802f4a0 	.word	0x0802f4a0
 8002550:	080028e9 	.word	0x080028e9
 8002554:	20002b84 	.word	0x20002b84
 8002558:	0802f530 	.word	0x0802f530
 800255c:	08001cd1 	.word	0x08001cd1
 8002560:	20002c9c 	.word	0x20002c9c
 8002564:	0802f440 	.word	0x0802f440
 8002568:	08001c0d 	.word	0x08001c0d
 800256c:	20002b6c 	.word	0x20002b6c
 8002570:	0802f50c 	.word	0x0802f50c
 8002574:	08002be9 	.word	0x08002be9
 8002578:	20002c8c 	.word	0x20002c8c
 800257c:	40011000 	.word	0x40011000
 8002580:	00011940 	.word	0x00011940

08002584 <IOE_Init>:
 8002584:	4770      	bx	lr

08002586 <IOE_ITConfig>:
 8002586:	4770      	bx	lr

08002588 <IOE_Write>:
{
 8002588:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 800258a:	4b09      	ldr	r3, [pc, #36]	; (80025b0 <IOE_Write+0x28>)
 800258c:	f88d 2017 	strb.w	r2, [sp, #23]
 8002590:	681b      	ldr	r3, [r3, #0]
 8002592:	9302      	str	r3, [sp, #8]
 8002594:	f10d 0217 	add.w	r2, sp, #23
 8002598:	2301      	movs	r3, #1
 800259a:	9200      	str	r2, [sp, #0]
 800259c:	9301      	str	r3, [sp, #4]
 800259e:	460a      	mov	r2, r1
 80025a0:	4601      	mov	r1, r0
 80025a2:	4804      	ldr	r0, [pc, #16]	; (80025b4 <IOE_Write+0x2c>)
 80025a4:	f00a fbce 	bl	800cd44 <HAL_I2C_Mem_Write>
}
 80025a8:	b007      	add	sp, #28
 80025aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80025ae:	bf00      	nop
 80025b0:	20000014 	.word	0x20000014
 80025b4:	20008ef8 	.word	0x20008ef8

080025b8 <IOE_Read>:
{
 80025b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80025ba:	2300      	movs	r3, #0
 80025bc:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80025c0:	4b08      	ldr	r3, [pc, #32]	; (80025e4 <IOE_Read+0x2c>)
 80025c2:	681b      	ldr	r3, [r3, #0]
 80025c4:	9302      	str	r3, [sp, #8]
{
 80025c6:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80025c8:	2301      	movs	r3, #1
 80025ca:	f10d 0117 	add.w	r1, sp, #23
 80025ce:	9100      	str	r1, [sp, #0]
 80025d0:	9301      	str	r3, [sp, #4]
 80025d2:	4601      	mov	r1, r0
 80025d4:	4804      	ldr	r0, [pc, #16]	; (80025e8 <IOE_Read+0x30>)
 80025d6:	f00a fc45 	bl	800ce64 <HAL_I2C_Mem_Read>
}
 80025da:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80025de:	b007      	add	sp, #28
 80025e0:	f85d fb04 	ldr.w	pc, [sp], #4
 80025e4:	20000014 	.word	0x20000014
 80025e8:	20008ef8 	.word	0x20008ef8

080025ec <IOE_ReadMultiple>:
{
 80025ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80025ee:	4c08      	ldr	r4, [pc, #32]	; (8002610 <IOE_ReadMultiple+0x24>)
 80025f0:	6824      	ldr	r4, [r4, #0]
 80025f2:	9200      	str	r2, [sp, #0]
 80025f4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80025f8:	460a      	mov	r2, r1
 80025fa:	2301      	movs	r3, #1
 80025fc:	4601      	mov	r1, r0
 80025fe:	4805      	ldr	r0, [pc, #20]	; (8002614 <IOE_ReadMultiple+0x28>)
 8002600:	f00a fc30 	bl	800ce64 <HAL_I2C_Mem_Read>
}
 8002604:	3800      	subs	r0, #0
 8002606:	bf18      	it	ne
 8002608:	2001      	movne	r0, #1
 800260a:	b004      	add	sp, #16
 800260c:	bd10      	pop	{r4, pc}
 800260e:	bf00      	nop
 8002610:	20000014 	.word	0x20000014
 8002614:	20008ef8 	.word	0x20008ef8

08002618 <IOE_Delay>:
 8002618:	f009 ba28 	b.w	800ba6c <HAL_Delay>

0800261c <LCD_IO_Init>:
{
 800261c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800261e:	4806      	ldr	r0, [pc, #24]	; (8002638 <LCD_IO_Init+0x1c>)
 8002620:	2200      	movs	r2, #0
 8002622:	2104      	movs	r1, #4
 8002624:	f00a f8fe 	bl	800c824 <HAL_GPIO_WritePin>
}
 8002628:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800262c:	4802      	ldr	r0, [pc, #8]	; (8002638 <LCD_IO_Init+0x1c>)
 800262e:	2201      	movs	r2, #1
 8002630:	2104      	movs	r1, #4
 8002632:	f00a b8f7 	b.w	800c824 <HAL_GPIO_WritePin>
 8002636:	bf00      	nop
 8002638:	40020800 	.word	0x40020800

0800263c <LCD_IO_WriteData>:
{
 800263c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800263e:	4d0b      	ldr	r5, [pc, #44]	; (800266c <LCD_IO_WriteData+0x30>)
{
 8002640:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002642:	2201      	movs	r2, #1
 8002644:	480a      	ldr	r0, [pc, #40]	; (8002670 <LCD_IO_WriteData+0x34>)
 8002646:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800264a:	f00a f8eb 	bl	800c824 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800264e:	2200      	movs	r2, #0
 8002650:	2104      	movs	r1, #4
 8002652:	4628      	mov	r0, r5
 8002654:	f00a f8e6 	bl	800c824 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002658:	4620      	mov	r0, r4
 800265a:	f7ff fac5 	bl	8001be8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800265e:	4628      	mov	r0, r5
 8002660:	2201      	movs	r2, #1
}
 8002662:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002666:	2104      	movs	r1, #4
 8002668:	f00a b8dc 	b.w	800c824 <HAL_GPIO_WritePin>
 800266c:	40020800 	.word	0x40020800
 8002670:	40020c00 	.word	0x40020c00

08002674 <LCD_IO_WriteReg>:
{
 8002674:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002676:	4d0b      	ldr	r5, [pc, #44]	; (80026a4 <LCD_IO_WriteReg+0x30>)
{
 8002678:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800267a:	2200      	movs	r2, #0
 800267c:	480a      	ldr	r0, [pc, #40]	; (80026a8 <LCD_IO_WriteReg+0x34>)
 800267e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002682:	f00a f8cf 	bl	800c824 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002686:	2200      	movs	r2, #0
 8002688:	2104      	movs	r1, #4
 800268a:	4628      	mov	r0, r5
 800268c:	f00a f8ca 	bl	800c824 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8002690:	4620      	mov	r0, r4
 8002692:	f7ff faa9 	bl	8001be8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002696:	4628      	mov	r0, r5
 8002698:	2201      	movs	r2, #1
}
 800269a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800269e:	2104      	movs	r1, #4
 80026a0:	f00a b8c0 	b.w	800c824 <HAL_GPIO_WritePin>
 80026a4:	40020800 	.word	0x40020800
 80026a8:	40020c00 	.word	0x40020c00

080026ac <LCD_IO_ReadData>:
{
 80026ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80026ae:	4e14      	ldr	r6, [pc, #80]	; (8002700 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80026b0:	4f14      	ldr	r7, [pc, #80]	; (8002704 <LCD_IO_ReadData+0x58>)
{
 80026b2:	4605      	mov	r5, r0
 80026b4:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80026b6:	4630      	mov	r0, r6
 80026b8:	2200      	movs	r2, #0
 80026ba:	2104      	movs	r1, #4
 80026bc:	f00a f8b2 	bl	800c824 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80026c0:	2200      	movs	r2, #0
 80026c2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80026c6:	4638      	mov	r0, r7
 80026c8:	f00a f8ac 	bl	800c824 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80026cc:	4628      	mov	r0, r5
 80026ce:	f7ff fa8b 	bl	8001be8 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80026d2:	4b0d      	ldr	r3, [pc, #52]	; (8002708 <LCD_IO_ReadData+0x5c>)
 80026d4:	480d      	ldr	r0, [pc, #52]	; (800270c <LCD_IO_ReadData+0x60>)
 80026d6:	681b      	ldr	r3, [r3, #0]
 80026d8:	4622      	mov	r2, r4
 80026da:	a901      	add	r1, sp, #4
 80026dc:	f00b fd35 	bl	800e14a <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80026e0:	4638      	mov	r0, r7
 80026e2:	2201      	movs	r2, #1
 80026e4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 80026e8:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80026ea:	f00a f89b 	bl	800c824 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80026ee:	4630      	mov	r0, r6
 80026f0:	2201      	movs	r2, #1
 80026f2:	2104      	movs	r1, #4
 80026f4:	f00a f896 	bl	800c824 <HAL_GPIO_WritePin>
}
 80026f8:	4620      	mov	r0, r4
 80026fa:	b003      	add	sp, #12
 80026fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80026fe:	bf00      	nop
 8002700:	40020800 	.word	0x40020800
 8002704:	40020c00 	.word	0x40020c00
 8002708:	20000018 	.word	0x20000018
 800270c:	20009028 	.word	0x20009028

08002710 <LCD_Delay>:
  HAL_Delay(Delay);
 8002710:	f009 b9ac 	b.w	800ba6c <HAL_Delay>

08002714 <HAL_UART_TxCpltCallback>:
   HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8002714:	4802      	ldr	r0, [pc, #8]	; (8002720 <HAL_UART_TxCpltCallback+0xc>)
 8002716:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800271a:	f00a b888 	b.w	800c82e <HAL_GPIO_TogglePin>
 800271e:	bf00      	nop
 8002720:	40021800 	.word	0x40021800

08002724 <HAL_ADC_ConvHalfCpltCallback>:
}
 8002724:	4770      	bx	lr
	...

08002728 <HAL_ADC_ConvCpltCallback>:
  NewBuffState=1;
 8002728:	4b01      	ldr	r3, [pc, #4]	; (8002730 <HAL_ADC_ConvCpltCallback+0x8>)
 800272a:	2201      	movs	r2, #1
 800272c:	601a      	str	r2, [r3, #0]
}
 800272e:	4770      	bx	lr
 8002730:	20002b80 	.word	0x20002b80

08002734 <complexDiv_R>:
float32_t complexDiv_R(float32_t R1,float32_t I1,float32_t R2,float32_t I2){
 8002734:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002738:	ed2d 8b02 	vpush	{d8}
	return (R1*R2+I1*I2)/(pow(R2,2)+pow(I2,2));
 800273c:	ee20 8aa1 	vmul.f32	s16, s1, s3
float32_t complexDiv_R(float32_t R1,float32_t I1,float32_t R2,float32_t I2){
 8002740:	b083      	sub	sp, #12
	return (R1*R2+I1*I2)/(pow(R2,2)+pow(I2,2));
 8002742:	ee11 0a10 	vmov	r0, s2
 8002746:	eea0 8a01 	vfma.f32	s16, s0, s2
float32_t complexDiv_R(float32_t R1,float32_t I1,float32_t R2,float32_t I2){
 800274a:	eef0 8a61 	vmov.f32	s17, s3
	return (R1*R2+I1*I2)/(pow(R2,2)+pow(I2,2));
 800274e:	f7fd ff6b 	bl	8000628 <__aeabi_f2d>
 8002752:	4602      	mov	r2, r0
 8002754:	460b      	mov	r3, r1
 8002756:	ee18 0a90 	vmov	r0, s17
 800275a:	e9cd 2300 	strd	r2, r3, [sp]
 800275e:	f7fd ff63 	bl	8000628 <__aeabi_f2d>
 8002762:	4680      	mov	r8, r0
 8002764:	ee18 0a10 	vmov	r0, s16
 8002768:	4689      	mov	r9, r1
 800276a:	f7fd ff5d 	bl	8000628 <__aeabi_f2d>
 800276e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002772:	4604      	mov	r4, r0
 8002774:	460d      	mov	r5, r1
 8002776:	4610      	mov	r0, r2
 8002778:	4619      	mov	r1, r3
 800277a:	f7fd ffad 	bl	80006d8 <__aeabi_dmul>
 800277e:	4642      	mov	r2, r8
 8002780:	4606      	mov	r6, r0
 8002782:	460f      	mov	r7, r1
 8002784:	464b      	mov	r3, r9
 8002786:	4640      	mov	r0, r8
 8002788:	4649      	mov	r1, r9
 800278a:	f7fd ffa5 	bl	80006d8 <__aeabi_dmul>
 800278e:	4602      	mov	r2, r0
 8002790:	460b      	mov	r3, r1
 8002792:	4630      	mov	r0, r6
 8002794:	4639      	mov	r1, r7
 8002796:	f7fd fde9 	bl	800036c <__adddf3>
 800279a:	4602      	mov	r2, r0
 800279c:	460b      	mov	r3, r1
 800279e:	4620      	mov	r0, r4
 80027a0:	4629      	mov	r1, r5
 80027a2:	f7fe f8c3 	bl	800092c <__aeabi_ddiv>
 80027a6:	f7fe fa8f 	bl	8000cc8 <__aeabi_d2f>
}
 80027aa:	ee00 0a10 	vmov	s0, r0
 80027ae:	b003      	add	sp, #12
 80027b0:	ecbd 8b02 	vpop	{d8}
 80027b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080027b8 <complexDiv_X>:
float32_t complexDiv_X(float32_t R1,float32_t I1,float32_t R2,float32_t I2){
 80027b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80027bc:	ed2d 8b02 	vpush	{d8}
	return (I1*R2+R1*I2)/(pow(R2,2)+pow(I2,2));
 80027c0:	ee20 8a21 	vmul.f32	s16, s0, s3
float32_t complexDiv_X(float32_t R1,float32_t I1,float32_t R2,float32_t I2){
 80027c4:	b083      	sub	sp, #12
	return (I1*R2+R1*I2)/(pow(R2,2)+pow(I2,2));
 80027c6:	ee11 0a10 	vmov	r0, s2
 80027ca:	eea0 8a81 	vfma.f32	s16, s1, s2
float32_t complexDiv_X(float32_t R1,float32_t I1,float32_t R2,float32_t I2){
 80027ce:	eef0 8a61 	vmov.f32	s17, s3
	return (I1*R2+R1*I2)/(pow(R2,2)+pow(I2,2));
 80027d2:	f7fd ff29 	bl	8000628 <__aeabi_f2d>
 80027d6:	4602      	mov	r2, r0
 80027d8:	460b      	mov	r3, r1
 80027da:	ee18 0a90 	vmov	r0, s17
 80027de:	e9cd 2300 	strd	r2, r3, [sp]
 80027e2:	f7fd ff21 	bl	8000628 <__aeabi_f2d>
 80027e6:	4680      	mov	r8, r0
 80027e8:	ee18 0a10 	vmov	r0, s16
 80027ec:	4689      	mov	r9, r1
 80027ee:	f7fd ff1b 	bl	8000628 <__aeabi_f2d>
 80027f2:	e9dd 2300 	ldrd	r2, r3, [sp]
 80027f6:	4604      	mov	r4, r0
 80027f8:	460d      	mov	r5, r1
 80027fa:	4610      	mov	r0, r2
 80027fc:	4619      	mov	r1, r3
 80027fe:	f7fd ff6b 	bl	80006d8 <__aeabi_dmul>
 8002802:	4642      	mov	r2, r8
 8002804:	4606      	mov	r6, r0
 8002806:	460f      	mov	r7, r1
 8002808:	464b      	mov	r3, r9
 800280a:	4640      	mov	r0, r8
 800280c:	4649      	mov	r1, r9
 800280e:	f7fd ff63 	bl	80006d8 <__aeabi_dmul>
 8002812:	4602      	mov	r2, r0
 8002814:	460b      	mov	r3, r1
 8002816:	4630      	mov	r0, r6
 8002818:	4639      	mov	r1, r7
 800281a:	f7fd fda7 	bl	800036c <__adddf3>
 800281e:	4602      	mov	r2, r0
 8002820:	460b      	mov	r3, r1
 8002822:	4620      	mov	r0, r4
 8002824:	4629      	mov	r1, r5
 8002826:	f7fe f881 	bl	800092c <__aeabi_ddiv>
 800282a:	f7fe fa4d 	bl	8000cc8 <__aeabi_d2f>
}
 800282e:	ee00 0a10 	vmov	s0, r0
 8002832:	b003      	add	sp, #12
 8002834:	ecbd 8b02 	vpop	{d8}
 8002838:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800283c <DoFFT>:
void DoFFT(int frequency){
 800283c:	b570      	push	{r4, r5, r6, lr}
 800283e:	ed2d 8b02 	vpush	{d8}
	arm_rfft_fast_f32(&fft_handler, &fftin_buf_p, &out_buf_p, 0);
 8002842:	4e22      	ldr	r6, [pc, #136]	; (80028cc <DoFFT+0x90>)
	arm_rfft_fast_f32(&fft_handler, &fftin_buf_q, &out_buf_q, 0);
 8002844:	4d22      	ldr	r5, [pc, #136]	; (80028d0 <DoFFT+0x94>)
	arm_rfft_fast_f32(&fft_handler, &fftin_buf_p, &out_buf_p, 0);
 8002846:	4923      	ldr	r1, [pc, #140]	; (80028d4 <DoFFT+0x98>)
void DoFFT(int frequency){
 8002848:	b084      	sub	sp, #16
 800284a:	4604      	mov	r4, r0
	arm_rfft_fast_f32(&fft_handler, &fftin_buf_p, &out_buf_p, 0);
 800284c:	2300      	movs	r3, #0
 800284e:	4822      	ldr	r0, [pc, #136]	; (80028d8 <DoFFT+0x9c>)
 8002850:	4632      	mov	r2, r6
 8002852:	f027 fd07 	bl	802a264 <arm_rfft_fast_f32>
	arm_rfft_fast_f32(&fft_handler, &fftin_buf_q, &out_buf_q, 0);
 8002856:	4921      	ldr	r1, [pc, #132]	; (80028dc <DoFFT+0xa0>)
 8002858:	481f      	ldr	r0, [pc, #124]	; (80028d8 <DoFFT+0x9c>)
 800285a:	2300      	movs	r3, #0
 800285c:	462a      	mov	r2, r5
 800285e:	f027 fd01 	bl	802a264 <arm_rfft_fast_f32>
	if(frequency<31){
 8002862:	2c1e      	cmp	r4, #30
 8002864:	dc2e      	bgt.n	80028c4 <DoFFT+0x88>
	N_real=2*frequency-2;
 8002866:	1e63      	subs	r3, r4, #1
	N_imag=2*frequency-1;
 8002868:	00da      	lsls	r2, r3, #3
	P_real=out_buf_p[N_real];
 800286a:	eb06 01c3 	add.w	r1, r6, r3, lsl #3
	P_imag=out_buf_p[N_imag];
 800286e:	3204      	adds	r2, #4
	Q_real=out_buf_q[N_real];
 8002870:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
	P_real=out_buf_p[N_real];
 8002874:	ed91 8a00 	vldr	s16, [r1]
	Q_real=out_buf_q[N_real];
 8002878:	ed93 1a00 	vldr	s2, [r3]
	Q_imag=out_buf_q[N_imag];
 800287c:	4415      	add	r5, r2
	P_imag=out_buf_p[N_imag];
 800287e:	4416      	add	r6, r2
	Q_imag=out_buf_q[N_imag];
 8002880:	edd5 1a00 	vldr	s3, [r5]
	P_imag=out_buf_p[N_imag];
 8002884:	edd6 0a00 	vldr	s1, [r6]
		Resistance[frequency]=complexDiv_R(P_real, P_imag,Q_real,Q_imag);
 8002888:	edcd 1a03 	vstr	s3, [sp, #12]
 800288c:	eeb0 0a48 	vmov.f32	s0, s16
 8002890:	ed8d 1a02 	vstr	s2, [sp, #8]
 8002894:	edcd 0a01 	vstr	s1, [sp, #4]
 8002898:	f7ff ff4c 	bl	8002734 <complexDiv_R>
 800289c:	4810      	ldr	r0, [pc, #64]	; (80028e0 <DoFFT+0xa4>)
		Reactance[frequency]=complexDiv_X(P_real, P_imag,Q_real,Q_imag);
 800289e:	eddd 1a03 	vldr	s3, [sp, #12]
 80028a2:	ed9d 1a02 	vldr	s2, [sp, #8]
 80028a6:	eddd 0a01 	vldr	s1, [sp, #4]
		Resistance[frequency]=complexDiv_R(P_real, P_imag,Q_real,Q_imag);
 80028aa:	00a5      	lsls	r5, r4, #2
 80028ac:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 80028b0:	ed84 0a00 	vstr	s0, [r4]
		Reactance[frequency]=complexDiv_X(P_real, P_imag,Q_real,Q_imag);
 80028b4:	eeb0 0a48 	vmov.f32	s0, s16
 80028b8:	f7ff ff7e 	bl	80027b8 <complexDiv_X>
 80028bc:	4b09      	ldr	r3, [pc, #36]	; (80028e4 <DoFFT+0xa8>)
 80028be:	442b      	add	r3, r5
 80028c0:	ed83 0a00 	vstr	s0, [r3]
}
 80028c4:	b004      	add	sp, #16
 80028c6:	ecbd 8b02 	vpop	{d8}
 80028ca:	bd70      	pop	{r4, r5, r6, pc}
 80028cc:	200091c0 	.word	0x200091c0
 80028d0:	2000b1c0 	.word	0x2000b1c0
 80028d4:	20004cb8 	.word	0x20004cb8
 80028d8:	20004ca0 	.word	0x20004ca0
 80028dc:	20006cb8 	.word	0x20006cb8
 80028e0:	20002c08 	.word	0x20002c08
 80028e4:	20002b8c 	.word	0x20002b8c

080028e8 <ImpedanceCalculator>:
{
 80028e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80028ec:	ed2d 8b04 	vpush	{d8-d9}
	osMessageQueueGet(CallMeasurementHandle,&ac_get, NULL, osWaitForever);
 80028f0:	4865      	ldr	r0, [pc, #404]	; (8002a88 <ImpedanceCalculator+0x1a0>)
{
 80028f2:	b085      	sub	sp, #20
	osMessageQueueGet(CallMeasurementHandle,&ac_get, NULL, osWaitForever);
 80028f4:	f04f 33ff 	mov.w	r3, #4294967295
 80028f8:	6800      	ldr	r0, [r0, #0]
 80028fa:	2200      	movs	r2, #0
 80028fc:	a903      	add	r1, sp, #12
 80028fe:	f00c fd21 	bl	800f344 <osMessageQueueGet>
	if(ac_get==0){
 8002902:	9b03      	ldr	r3, [sp, #12]
 8002904:	b93b      	cbnz	r3, 8002916 <ImpedanceCalculator+0x2e>
        osThreadSuspend(AccuatorHandle);
 8002906:	4b61      	ldr	r3, [pc, #388]	; (8002a8c <ImpedanceCalculator+0x1a4>)
 8002908:	6818      	ldr	r0, [r3, #0]
 800290a:	f00c fb7b 	bl	800f004 <osThreadSuspend>
        osThreadSuspend(PQReaderHandle);
 800290e:	4b60      	ldr	r3, [pc, #384]	; (8002a90 <ImpedanceCalculator+0x1a8>)
 8002910:	6818      	ldr	r0, [r3, #0]
 8002912:	f00c fb77 	bl	800f004 <osThreadSuspend>
	if(ac_get==1){
 8002916:	9b03      	ldr	r3, [sp, #12]
 8002918:	2b01      	cmp	r3, #1
 800291a:	d107      	bne.n	800292c <ImpedanceCalculator+0x44>
        osThreadResume(AccuatorHandle);
 800291c:	4b5b      	ldr	r3, [pc, #364]	; (8002a8c <ImpedanceCalculator+0x1a4>)
 800291e:	6818      	ldr	r0, [r3, #0]
 8002920:	f00c fb8c 	bl	800f03c <osThreadResume>
        osThreadResume(PQReaderHandle);
 8002924:	4b5a      	ldr	r3, [pc, #360]	; (8002a90 <ImpedanceCalculator+0x1a8>)
 8002926:	6818      	ldr	r0, [r3, #0]
 8002928:	f00c fb88 	bl	800f03c <osThreadResume>
				  fftin_buf_p[n]=((float32_t)adc_buf_p[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525;//Pressure sensor conversion - Pa
 800292c:	f20f 1b38 	addw	fp, pc, #312	; 0x138
 8002930:	e9db ab00 	ldrd	sl, fp, [fp]
			  HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_buf_p, ADC_BUF_LEN_P); //Pressure sensing
 8002934:	4957      	ldr	r1, [pc, #348]	; (8002a94 <ImpedanceCalculator+0x1ac>)
 8002936:	4858      	ldr	r0, [pc, #352]	; (8002a98 <ImpedanceCalculator+0x1b0>)
 8002938:	f8df 9188 	ldr.w	r9, [pc, #392]	; 8002ac4 <ImpedanceCalculator+0x1dc>
 800293c:	f8df 8164 	ldr.w	r8, [pc, #356]	; 8002aa4 <ImpedanceCalculator+0x1bc>
 8002940:	4d56      	ldr	r5, [pc, #344]	; (8002a9c <ImpedanceCalculator+0x1b4>)
				  fftin_buf_p[n]=((float32_t)adc_buf_p[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525;//Pressure sensor conversion - Pa
 8002942:	ed9f 8a57 	vldr	s16, [pc, #348]	; 8002aa0 <ImpedanceCalculator+0x1b8>
			  HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_buf_p, ADC_BUF_LEN_P); //Pressure sensing
 8002946:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800294a:	f009 fa0d 	bl	800bd68 <HAL_ADC_Start_DMA>
			  HAL_ADC_Start_DMA(&hadc2, (uint32_t*)adc_buf_q, ADC_BUF_LEN_Q); //Flow rate sensing
 800294e:	4955      	ldr	r1, [pc, #340]	; (8002aa4 <ImpedanceCalculator+0x1bc>)
 8002950:	4855      	ldr	r0, [pc, #340]	; (8002aa8 <ImpedanceCalculator+0x1c0>)
 8002952:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002956:	f009 fa07 	bl	800bd68 <HAL_ADC_Start_DMA>
			  for (n=0;n<2048;n=n+1){
 800295a:	4b4e      	ldr	r3, [pc, #312]	; (8002a94 <ImpedanceCalculator+0x1ac>)
 800295c:	9301      	str	r3, [sp, #4]
 800295e:	2400      	movs	r4, #0
				  fftin_buf_p[n]=((float32_t)adc_buf_p[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525;//Pressure sensor conversion - Pa
 8002960:	eef0 8a08 	vmov.f32	s17, #8	; 0x40400000  3.0
 8002964:	9b01      	ldr	r3, [sp, #4]
 8002966:	f833 2b02 	ldrh.w	r2, [r3], #2
 800296a:	9301      	str	r3, [sp, #4]
 800296c:	ee07 2a90 	vmov	s15, r2
 8002970:	eef8 7a67 	vcvt.f32.u32	s15, s15
			  for (n=0;n<2048;n=n+1){
 8002974:	3401      	adds	r4, #1
				  fftin_buf_p[n]=((float32_t)adc_buf_p[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525;//Pressure sensor conversion - Pa
 8002976:	ee67 7aa8 	vmul.f32	s15, s15, s17
 800297a:	ee67 7a88 	vmul.f32	s15, s15, s16
 800297e:	ee17 0a90 	vmov	r0, s15
 8002982:	f7fd fe51 	bl	8000628 <__aeabi_f2d>
 8002986:	a33a      	add	r3, pc, #232	; (adr r3, 8002a70 <ImpedanceCalculator+0x188>)
 8002988:	e9d3 2300 	ldrd	r2, r3, [r3]
 800298c:	4606      	mov	r6, r0
 800298e:	460f      	mov	r7, r1
 8002990:	f7fd ffcc 	bl	800092c <__aeabi_ddiv>
 8002994:	4b45      	ldr	r3, [pc, #276]	; (8002aac <ImpedanceCalculator+0x1c4>)
 8002996:	2200      	movs	r2, #0
 8002998:	f7fd fce6 	bl	8000368 <__aeabi_dsub>
 800299c:	4602      	mov	r2, r0
 800299e:	460b      	mov	r3, r1
 80029a0:	f7fd fe9a 	bl	80006d8 <__aeabi_dmul>
 80029a4:	ec47 6b19 	vmov	d9, r6, r7
 80029a8:	4652      	mov	r2, sl
 80029aa:	4606      	mov	r6, r0
 80029ac:	460f      	mov	r7, r1
 80029ae:	465b      	mov	r3, fp
 80029b0:	ec51 0b19 	vmov	r0, r1, d9
 80029b4:	f7fd ffba 	bl	800092c <__aeabi_ddiv>
 80029b8:	4b3d      	ldr	r3, [pc, #244]	; (8002ab0 <ImpedanceCalculator+0x1c8>)
 80029ba:	2200      	movs	r2, #0
 80029bc:	f7fd fcd4 	bl	8000368 <__aeabi_dsub>
 80029c0:	4632      	mov	r2, r6
 80029c2:	463b      	mov	r3, r7
 80029c4:	f7fd fe88 	bl	80006d8 <__aeabi_dmul>
 80029c8:	2200      	movs	r2, #0
 80029ca:	4b3a      	ldr	r3, [pc, #232]	; (8002ab4 <ImpedanceCalculator+0x1cc>)
 80029cc:	f7fd fe84 	bl	80006d8 <__aeabi_dmul>
 80029d0:	f7fe f97a 	bl	8000cc8 <__aeabi_d2f>
				  fftin_buf_q[n]=(((float32_t)adc_buf_q[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525)*2.083/98.066;// Flow rate conversion - L/s
 80029d4:	f838 3b02 	ldrh.w	r3, [r8], #2
				  fftin_buf_p[n]=((float32_t)adc_buf_p[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525;//Pressure sensor conversion - Pa
 80029d8:	f849 0b04 	str.w	r0, [r9], #4
				  fftin_buf_q[n]=(((float32_t)adc_buf_q[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525)*2.083/98.066;// Flow rate conversion - L/s
 80029dc:	ee07 3a90 	vmov	s15, r3
 80029e0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80029e4:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80029e8:	ee67 7a88 	vmul.f32	s15, s15, s16
 80029ec:	ee17 0a90 	vmov	r0, s15
 80029f0:	f7fd fe1a 	bl	8000628 <__aeabi_f2d>
 80029f4:	4652      	mov	r2, sl
 80029f6:	465b      	mov	r3, fp
 80029f8:	f7fd ff98 	bl	800092c <__aeabi_ddiv>
 80029fc:	4b2c      	ldr	r3, [pc, #176]	; (8002ab0 <ImpedanceCalculator+0x1c8>)
 80029fe:	2200      	movs	r2, #0
 8002a00:	f7fd fcb2 	bl	8000368 <__aeabi_dsub>
 8002a04:	4632      	mov	r2, r6
 8002a06:	463b      	mov	r3, r7
 8002a08:	f7fd fe66 	bl	80006d8 <__aeabi_dmul>
 8002a0c:	4b29      	ldr	r3, [pc, #164]	; (8002ab4 <ImpedanceCalculator+0x1cc>)
 8002a0e:	2200      	movs	r2, #0
 8002a10:	f7fd fe62 	bl	80006d8 <__aeabi_dmul>
 8002a14:	a318      	add	r3, pc, #96	; (adr r3, 8002a78 <ImpedanceCalculator+0x190>)
 8002a16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002a1a:	f7fd fe5d 	bl	80006d8 <__aeabi_dmul>
 8002a1e:	a318      	add	r3, pc, #96	; (adr r3, 8002a80 <ImpedanceCalculator+0x198>)
 8002a20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002a24:	f7fd ff82 	bl	800092c <__aeabi_ddiv>
 8002a28:	f7fe f94e 	bl	8000cc8 <__aeabi_d2f>
			  for (n=0;n<2048;n=n+1){
 8002a2c:	f5b4 6f00 	cmp.w	r4, #2048	; 0x800
				  fftin_buf_q[n]=(((float32_t)adc_buf_q[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525)*2.083/98.066;// Flow rate conversion - L/s
 8002a30:	f845 0b04 	str.w	r0, [r5], #4
			  for (n=0;n<2048;n=n+1){
 8002a34:	d196      	bne.n	8002964 <ImpedanceCalculator+0x7c>
			  if(NewBuffState==1){
 8002a36:	4c20      	ldr	r4, [pc, #128]	; (8002ab8 <ImpedanceCalculator+0x1d0>)
 8002a38:	6823      	ldr	r3, [r4, #0]
 8002a3a:	2b01      	cmp	r3, #1
 8002a3c:	f47f af7a 	bne.w	8002934 <ImpedanceCalculator+0x4c>
				 DoFFT(Freq);
 8002a40:	4d1e      	ldr	r5, [pc, #120]	; (8002abc <ImpedanceCalculator+0x1d4>)
 8002a42:	6828      	ldr	r0, [r5, #0]
 8002a44:	f7ff fefa 	bl	800283c <DoFFT>
				 Freq++;
 8002a48:	682b      	ldr	r3, [r5, #0]
				 osMessageQueuePut(ADCstateHandle, &NewBuffState, 0, 200);
 8002a4a:	481d      	ldr	r0, [pc, #116]	; (8002ac0 <ImpedanceCalculator+0x1d8>)
				 Freq++;
 8002a4c:	3301      	adds	r3, #1
 8002a4e:	602b      	str	r3, [r5, #0]
				 osMessageQueuePut(ADCstateHandle, &NewBuffState, 0, 200);
 8002a50:	6800      	ldr	r0, [r0, #0]
 8002a52:	23c8      	movs	r3, #200	; 0xc8
 8002a54:	2200      	movs	r2, #0
 8002a56:	4621      	mov	r1, r4
 8002a58:	f00c fc32 	bl	800f2c0 <osMessageQueuePut>
				 NewBuffState=0;
 8002a5c:	2300      	movs	r3, #0
 8002a5e:	6023      	str	r3, [r4, #0]
 8002a60:	e768      	b.n	8002934 <ImpedanceCalculator+0x4c>
 8002a62:	bf00      	nop
 8002a64:	f3af 8000 	nop.w
 8002a68:	66666666 	.word	0x66666666
 8002a6c:	400a6666 	.word	0x400a6666
 8002a70:	51eb851f 	.word	0x51eb851f
 8002a74:	3ff51eb8 	.word	0x3ff51eb8
 8002a78:	e76c8b44 	.word	0xe76c8b44
 8002a7c:	4000a9fb 	.word	0x4000a9fb
 8002a80:	5810624e 	.word	0x5810624e
 8002a84:	40588439 	.word	0x40588439
 8002a88:	20002b70 	.word	0x20002b70
 8002a8c:	20002b6c 	.word	0x20002b6c
 8002a90:	20002b84 	.word	0x20002b84
 8002a94:	20002ca0 	.word	0x20002ca0
 8002a98:	20008cb8 	.word	0x20008cb8
 8002a9c:	20006cb8 	.word	0x20006cb8
 8002aa0:	39800000 	.word	0x39800000
 8002aa4:	20003ca0 	.word	0x20003ca0
 8002aa8:	20008d00 	.word	0x20008d00
 8002aac:	3ff40000 	.word	0x3ff40000
 8002ab0:	3fe00000 	.word	0x3fe00000
 8002ab4:	40806800 	.word	0x40806800
 8002ab8:	20002b80 	.word	0x20002b80
 8002abc:	2000000c 	.word	0x2000000c
 8002ac0:	20002b68 	.word	0x20002b68
 8002ac4:	20004cb8 	.word	0x20004cb8

08002ac8 <reverse>:
{
 8002ac8:	b530      	push	{r4, r5, lr}
 8002aca:	1e42      	subs	r2, r0, #1
    int i=0, j=len-1, temp;
 8002acc:	2300      	movs	r3, #0
 8002ace:	4408      	add	r0, r1
    while (i<j)
 8002ad0:	3901      	subs	r1, #1
 8002ad2:	1acc      	subs	r4, r1, r3
 8002ad4:	42a3      	cmp	r3, r4
 8002ad6:	db00      	blt.n	8002ada <reverse+0x12>
}
 8002ad8:	bd30      	pop	{r4, r5, pc}
        temp = str[i];
 8002ada:	f812 4f01 	ldrb.w	r4, [r2, #1]!
        str[i] = str[j];
 8002ade:	f810 5d01 	ldrb.w	r5, [r0, #-1]!
 8002ae2:	7015      	strb	r5, [r2, #0]
        i++; j--;
 8002ae4:	3301      	adds	r3, #1
        str[j] = temp;
 8002ae6:	7004      	strb	r4, [r0, #0]
        i++; j--;
 8002ae8:	e7f3      	b.n	8002ad2 <reverse+0xa>

08002aea <intToStr>:
{
 8002aea:	b570      	push	{r4, r5, r6, lr}
 8002aec:	460d      	mov	r5, r1
        str[i++] = (x%10) + '0';
 8002aee:	240a      	movs	r4, #10
 8002af0:	1b4e      	subs	r6, r1, r5
    while (x)
 8002af2:	b9a8      	cbnz	r0, 8002b20 <intToStr+0x36>
    if(NPflag==0){
 8002af4:	b913      	cbnz	r3, 8002afc <intToStr+0x12>
        str[i++] = '-';
 8002af6:	232d      	movs	r3, #45	; 0x2d
 8002af8:	3601      	adds	r6, #1
 8002afa:	700b      	strb	r3, [r1, #0]
        str[i++] = '0';
 8002afc:	1b94      	subs	r4, r2, r6
 8002afe:	42b2      	cmp	r2, r6
 8002b00:	bfb8      	it	lt
 8002b02:	2400      	movlt	r4, #0
 8002b04:	4622      	mov	r2, r4
 8002b06:	2130      	movs	r1, #48	; 0x30
 8002b08:	4434      	add	r4, r6
 8002b0a:	19a8      	adds	r0, r5, r6
 8002b0c:	f029 fbe0 	bl	802c2d0 <memset>
    reverse(str, i);
 8002b10:	4628      	mov	r0, r5
 8002b12:	4621      	mov	r1, r4
 8002b14:	f7ff ffd8 	bl	8002ac8 <reverse>
    str[i] = ' ';
 8002b18:	2320      	movs	r3, #32
 8002b1a:	552b      	strb	r3, [r5, r4]
}
 8002b1c:	4620      	mov	r0, r4
 8002b1e:	bd70      	pop	{r4, r5, r6, pc}
        str[i++] = (x%10) + '0';
 8002b20:	fb90 f6f4 	sdiv	r6, r0, r4
 8002b24:	fb04 0016 	mls	r0, r4, r6, r0
 8002b28:	3030      	adds	r0, #48	; 0x30
 8002b2a:	f801 0b01 	strb.w	r0, [r1], #1
        x = x/10;
 8002b2e:	4630      	mov	r0, r6
 8002b30:	e7de      	b.n	8002af0 <intToStr+0x6>
 8002b32:	0000      	movs	r0, r0
 8002b34:	0000      	movs	r0, r0
	...

08002b38 <ftoa>:
{
 8002b38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    	ipart = -(int)n;
 8002b3c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
    if(n<0){
 8002b40:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
    	ipart = -(int)n;
 8002b44:	ee17 6a90 	vmov	r6, s15
    if(n<0){
 8002b48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    	ipart = -(int)n;
 8002b4c:	bf48      	it	mi
 8002b4e:	4276      	negmi	r6, r6
{
 8002b50:	ed2d 8b02 	vpush	{d8}
 8002b54:	4604      	mov	r4, r0
 8002b56:	460f      	mov	r7, r1
    	flag=0;
 8002b58:	bf48      	it	mi
 8002b5a:	2300      	movmi	r3, #0
    int i = intToStr(ipart, res, 0, flag);
 8002b5c:	4601      	mov	r1, r0
        flag=1;
 8002b5e:	bf58      	it	pl
 8002b60:	2301      	movpl	r3, #1
    int i = intToStr(ipart, res, 0, flag);
 8002b62:	f04f 0200 	mov.w	r2, #0
 8002b66:	4630      	mov	r0, r6
{
 8002b68:	eeb0 8a40 	vmov.f32	s16, s0
    	m = -n;
 8002b6c:	bf48      	it	mi
 8002b6e:	eeb1 8a40 	vnegmi.f32	s16, s0
    int i = intToStr(ipart, res, 0, flag);
 8002b72:	f7ff ffba 	bl	8002aea <intToStr>
 8002b76:	4605      	mov	r5, r0
    if (afterpoint != 0)
 8002b78:	b36f      	cbz	r7, 8002bd6 <ftoa+0x9e>
        res[i] = '.';  // add dot
 8002b7a:	232e      	movs	r3, #46	; 0x2e
 8002b7c:	5423      	strb	r3, [r4, r0]
        fpart = fpart * pow(10, afterpoint);
 8002b7e:	4638      	mov	r0, r7
 8002b80:	f7fd fd40 	bl	8000604 <__aeabi_i2d>
 8002b84:	ed9f 0b16 	vldr	d0, [pc, #88]	; 8002be0 <ftoa+0xa8>
 8002b88:	ec41 0b11 	vmov	d1, r0, r1
 8002b8c:	f028 faf6 	bl	802b17c <pow>
    float fpart = m - (float)ipart;
 8002b90:	ee07 6a90 	vmov	s15, r6
 8002b94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        fpart = fpart * pow(10, afterpoint);
 8002b98:	ec59 8b10 	vmov	r8, r9, d0
 8002b9c:	ee78 7a67 	vsub.f32	s15, s16, s15
        intToStr((int)fpart, res + i + 1, afterpoint,1);
 8002ba0:	3501      	adds	r5, #1
        fpart = fpart * pow(10, afterpoint);
 8002ba2:	ee17 0a90 	vmov	r0, s15
 8002ba6:	f7fd fd3f 	bl	8000628 <__aeabi_f2d>
 8002baa:	4642      	mov	r2, r8
 8002bac:	464b      	mov	r3, r9
 8002bae:	f7fd fd93 	bl	80006d8 <__aeabi_dmul>
 8002bb2:	f7fe f889 	bl	8000cc8 <__aeabi_d2f>
}
 8002bb6:	ecbd 8b02 	vpop	{d8}
        intToStr((int)fpart, res + i + 1, afterpoint,1);
 8002bba:	ee07 0a90 	vmov	s15, r0
 8002bbe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002bc2:	442c      	add	r4, r5
 8002bc4:	463a      	mov	r2, r7
 8002bc6:	4621      	mov	r1, r4
 8002bc8:	ee17 0a90 	vmov	r0, s15
}
 8002bcc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
        intToStr((int)fpart, res + i + 1, afterpoint,1);
 8002bd0:	2301      	movs	r3, #1
 8002bd2:	f7ff bf8a 	b.w	8002aea <intToStr>
}
 8002bd6:	ecbd 8b02 	vpop	{d8}
 8002bda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002bde:	bf00      	nop
 8002be0:	00000000 	.word	0x00000000
 8002be4:	40240000 	.word	0x40240000

08002be8 <SaveData>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_SaveData */
void SaveData(void *argument)
{
 8002be8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* USER CODE BEGIN SaveData */
	int i,m;
	  char string1[8];
	  char string2[8];
	  char IntroText1[]="Patient:\n Gender:\n Age:\n Height:\n Weight\n ";
 8002bec:	4b45      	ldr	r3, [pc, #276]	; (8002d04 <SaveData+0x11c>)
{
 8002bee:	b0ac      	sub	sp, #176	; 0xb0
	  char IntroText1[]="Patient:\n Gender:\n Age:\n Height:\n Weight\n ";
 8002bf0:	aa21      	add	r2, sp, #132	; 0x84
 8002bf2:	f103 0628 	add.w	r6, r3, #40	; 0x28
 8002bf6:	4614      	mov	r4, r2
 8002bf8:	6818      	ldr	r0, [r3, #0]
 8002bfa:	6859      	ldr	r1, [r3, #4]
 8002bfc:	4615      	mov	r5, r2
 8002bfe:	c503      	stmia	r5!, {r0, r1}
 8002c00:	3308      	adds	r3, #8
 8002c02:	42b3      	cmp	r3, r6
 8002c04:	462a      	mov	r2, r5
 8002c06:	d1f7      	bne.n	8002bf8 <SaveData+0x10>
 8002c08:	8819      	ldrh	r1, [r3, #0]
 8002c0a:	789b      	ldrb	r3, [r3, #2]
 8002c0c:	70ab      	strb	r3, [r5, #2]
	  char IntroText2[]="Respiratory Resistance from 5Hz to 30Hz:\n";
 8002c0e:	4b3e      	ldr	r3, [pc, #248]	; (8002d08 <SaveData+0x120>)
	  char IntroText1[]="Patient:\n Gender:\n Age:\n Height:\n Weight\n ";
 8002c10:	8029      	strh	r1, [r5, #0]
	  char IntroText2[]="Respiratory Resistance from 5Hz to 30Hz:\n";
 8002c12:	aa16      	add	r2, sp, #88	; 0x58
 8002c14:	f103 0728 	add.w	r7, r3, #40	; 0x28
 8002c18:	4615      	mov	r5, r2
 8002c1a:	6818      	ldr	r0, [r3, #0]
 8002c1c:	6859      	ldr	r1, [r3, #4]
 8002c1e:	4616      	mov	r6, r2
 8002c20:	c603      	stmia	r6!, {r0, r1}
 8002c22:	3308      	adds	r3, #8
 8002c24:	42bb      	cmp	r3, r7
 8002c26:	4632      	mov	r2, r6
 8002c28:	d1f7      	bne.n	8002c1a <SaveData+0x32>
 8002c2a:	881b      	ldrh	r3, [r3, #0]
 8002c2c:	8033      	strh	r3, [r6, #0]
	  char IntroText3[]="Respiratory Reactance from 5Hz to 30Hz:\n";
 8002c2e:	4b37      	ldr	r3, [pc, #220]	; (8002d0c <SaveData+0x124>)
 8002c30:	aa0b      	add	r2, sp, #44	; 0x2c
 8002c32:	f103 0c28 	add.w	ip, r3, #40	; 0x28
 8002c36:	4617      	mov	r7, r2
 8002c38:	6818      	ldr	r0, [r3, #0]
 8002c3a:	6859      	ldr	r1, [r3, #4]
 8002c3c:	4616      	mov	r6, r2
 8002c3e:	c603      	stmia	r6!, {r0, r1}
 8002c40:	3308      	adds	r3, #8
 8002c42:	4563      	cmp	r3, ip
 8002c44:	4632      	mov	r2, r6
 8002c46:	d1f7      	bne.n	8002c38 <SaveData+0x50>
 8002c48:	781b      	ldrb	r3, [r3, #0]
 8002c4a:	7033      	strb	r3, [r6, #0]
	  char IntroText4[]="Measuring Date:\n";
 8002c4c:	4b30      	ldr	r3, [pc, #192]	; (8002d10 <SaveData+0x128>)
 8002c4e:	aa06      	add	r2, sp, #24
 8002c50:	f103 0c10 	add.w	ip, r3, #16
 8002c54:	4690      	mov	r8, r2
 8002c56:	6818      	ldr	r0, [r3, #0]
 8002c58:	6859      	ldr	r1, [r3, #4]
 8002c5a:	4616      	mov	r6, r2
 8002c5c:	c603      	stmia	r6!, {r0, r1}
 8002c5e:	3308      	adds	r3, #8
 8002c60:	4563      	cmp	r3, ip
 8002c62:	4632      	mov	r2, r6
 8002c64:	d1f7      	bne.n	8002c56 <SaveData+0x6e>
 8002c66:	781b      	ldrb	r3, [r3, #0]
	  int Flag;
	  int endFlag=0;
	  osMessageQueueGet(SaveDataCheckHandle,&Flag,0,osWaitForever);
 8002c68:	482a      	ldr	r0, [pc, #168]	; (8002d14 <SaveData+0x12c>)
	  char IntroText4[]="Measuring Date:\n";
 8002c6a:	7033      	strb	r3, [r6, #0]
	  int endFlag=0;
 8002c6c:	2200      	movs	r2, #0
	  osMessageQueueGet(SaveDataCheckHandle,&Flag,0,osWaitForever);
 8002c6e:	f04f 33ff 	mov.w	r3, #4294967295
 8002c72:	6800      	ldr	r0, [r0, #0]
	  int endFlag=0;
 8002c74:	9201      	str	r2, [sp, #4]
	  osMessageQueueGet(SaveDataCheckHandle,&Flag,0,osWaitForever);
 8002c76:	4669      	mov	r1, sp
 8002c78:	f00c fb64 	bl	800f344 <osMessageQueueGet>
	  if(Flag==1){
 8002c7c:	9b00      	ldr	r3, [sp, #0]
 8002c7e:	2b01      	cmp	r3, #1
 8002c80:	d13c      	bne.n	8002cfc <SaveData+0x114>
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText1, sizeof(IntroText1));
 8002c82:	4621      	mov	r1, r4
 8002c84:	222b      	movs	r2, #43	; 0x2b
 8002c86:	4824      	ldr	r0, [pc, #144]	; (8002d18 <SaveData+0x130>)
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText2, sizeof(IntroText2));
		  for(i=5;i<31;i++){
			ftoa(Resistance[i], string1, 3);
			HAL_UART_Transmit_IT(&huart1, (uint8_t*)string1, sizeof(string1)); //add UART IT callback.
 8002c88:	4e23      	ldr	r6, [pc, #140]	; (8002d18 <SaveData+0x130>)
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText1, sizeof(IntroText1));
 8002c8a:	f00b ff85 	bl	800eb98 <HAL_UART_Transmit_IT>
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText2, sizeof(IntroText2));
 8002c8e:	4629      	mov	r1, r5
 8002c90:	4821      	ldr	r0, [pc, #132]	; (8002d18 <SaveData+0x130>)
 8002c92:	4d22      	ldr	r5, [pc, #136]	; (8002d1c <SaveData+0x134>)
 8002c94:	222a      	movs	r2, #42	; 0x2a
 8002c96:	f00b ff7f 	bl	800eb98 <HAL_UART_Transmit_IT>
 8002c9a:	241a      	movs	r4, #26
			ftoa(Resistance[i], string1, 3);
 8002c9c:	ecb5 0a01 	vldmia	r5!, {s0}
 8002ca0:	2103      	movs	r1, #3
 8002ca2:	a802      	add	r0, sp, #8
 8002ca4:	f7ff ff48 	bl	8002b38 <ftoa>
			HAL_UART_Transmit_IT(&huart1, (uint8_t*)string1, sizeof(string1)); //add UART IT callback.
 8002ca8:	2208      	movs	r2, #8
 8002caa:	eb0d 0102 	add.w	r1, sp, r2
 8002cae:	4630      	mov	r0, r6
 8002cb0:	f00b ff72 	bl	800eb98 <HAL_UART_Transmit_IT>
		  for(i=5;i<31;i++){
 8002cb4:	3c01      	subs	r4, #1
 8002cb6:	d1f1      	bne.n	8002c9c <SaveData+0xb4>
		  }
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText3, sizeof(IntroText3));
 8002cb8:	4817      	ldr	r0, [pc, #92]	; (8002d18 <SaveData+0x130>)
 8002cba:	4d19      	ldr	r5, [pc, #100]	; (8002d20 <SaveData+0x138>)
		  for(m=5;m<31;m++){
			ftoa(Reactance[m], string2, 3);
			HAL_UART_Transmit_IT(&huart1, (uint8_t*)string2, sizeof(string2)); //add UART IT callback.
 8002cbc:	4e16      	ldr	r6, [pc, #88]	; (8002d18 <SaveData+0x130>)
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText3, sizeof(IntroText3));
 8002cbe:	2229      	movs	r2, #41	; 0x29
 8002cc0:	4639      	mov	r1, r7
 8002cc2:	f00b ff69 	bl	800eb98 <HAL_UART_Transmit_IT>
 8002cc6:	241a      	movs	r4, #26
			ftoa(Reactance[m], string2, 3);
 8002cc8:	ecb5 0a01 	vldmia	r5!, {s0}
 8002ccc:	2103      	movs	r1, #3
 8002cce:	a804      	add	r0, sp, #16
 8002cd0:	f7ff ff32 	bl	8002b38 <ftoa>
			HAL_UART_Transmit_IT(&huart1, (uint8_t*)string2, sizeof(string2)); //add UART IT callback.
 8002cd4:	2208      	movs	r2, #8
 8002cd6:	a904      	add	r1, sp, #16
 8002cd8:	4630      	mov	r0, r6
 8002cda:	f00b ff5d 	bl	800eb98 <HAL_UART_Transmit_IT>
		  for(m=5;m<31;m++){
 8002cde:	3c01      	subs	r4, #1
 8002ce0:	d1f2      	bne.n	8002cc8 <SaveData+0xe0>
		  }
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText4, sizeof(IntroText4));
 8002ce2:	2211      	movs	r2, #17
 8002ce4:	4641      	mov	r1, r8
 8002ce6:	480c      	ldr	r0, [pc, #48]	; (8002d18 <SaveData+0x130>)
 8002ce8:	f00b ff56 	bl	800eb98 <HAL_UART_Transmit_IT>
		  osMessageQueuePut(SaveDataEndHandle, &endFlag, 0, 1000);
 8002cec:	480d      	ldr	r0, [pc, #52]	; (8002d24 <SaveData+0x13c>)
 8002cee:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002cf2:	6800      	ldr	r0, [r0, #0]
 8002cf4:	4622      	mov	r2, r4
 8002cf6:	a901      	add	r1, sp, #4
 8002cf8:	f00c fae2 	bl	800f2c0 <osMessageQueuePut>
//	  for(;;)
//	  {
//	    osDelay(1);
//	  }
  /* USER CODE END SaveData */
}
 8002cfc:	b02c      	add	sp, #176	; 0xb0
 8002cfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002d02:	bf00      	nop
 8002d04:	0802f31c 	.word	0x0802f31c
 8002d08:	0802f347 	.word	0x0802f347
 8002d0c:	0802f371 	.word	0x0802f371
 8002d10:	0802f39a 	.word	0x0802f39a
 8002d14:	20002c84 	.word	0x20002c84
 8002d18:	20009180 	.word	0x20009180
 8002d1c:	20002c1c 	.word	0x20002c1c
 8002d20:	20002ba0 	.word	0x20002ba0
 8002d24:	20002c88 	.word	0x20002c88

08002d28 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8002d28:	6802      	ldr	r2, [r0, #0]
 8002d2a:	4b03      	ldr	r3, [pc, #12]	; (8002d38 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002d2c:	429a      	cmp	r2, r3
 8002d2e:	d101      	bne.n	8002d34 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8002d30:	f008 be8a 	b.w	800ba48 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002d34:	4770      	bx	lr
 8002d36:	bf00      	nop
 8002d38:	40001000 	.word	0x40001000

08002d3c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002d3c:	4770      	bx	lr
	...

08002d40 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                            /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002d40:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002d42:	4b0e      	ldr	r3, [pc, #56]	; (8002d7c <HAL_MspInit+0x3c>)
 8002d44:	2200      	movs	r2, #0
 8002d46:	9200      	str	r2, [sp, #0]
 8002d48:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002d4a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8002d4e:	6459      	str	r1, [r3, #68]	; 0x44
 8002d50:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002d52:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8002d56:	9100      	str	r1, [sp, #0]
 8002d58:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002d5a:	9201      	str	r2, [sp, #4]
 8002d5c:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002d5e:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8002d62:	6419      	str	r1, [r3, #64]	; 0x40
 8002d64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d66:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002d6a:	9301      	str	r3, [sp, #4]
 8002d6c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002d6e:	210f      	movs	r1, #15
 8002d70:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002d74:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002d76:	f009 b981 	b.w	800c07c <HAL_NVIC_SetPriority>
 8002d7a:	bf00      	nop
 8002d7c:	40023800 	.word	0x40023800

08002d80 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8002d80:	b570      	push	{r4, r5, r6, lr}
 8002d82:	4605      	mov	r5, r0
 8002d84:	b08c      	sub	sp, #48	; 0x30
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002d86:	2214      	movs	r2, #20
 8002d88:	2100      	movs	r1, #0
 8002d8a:	a807      	add	r0, sp, #28
 8002d8c:	f029 faa0 	bl	802c2d0 <memset>
  if(hadc->Instance==ADC1)
 8002d90:	682b      	ldr	r3, [r5, #0]
 8002d92:	4a45      	ldr	r2, [pc, #276]	; (8002ea8 <HAL_ADC_MspInit+0x128>)
 8002d94:	4293      	cmp	r3, r2
 8002d96:	d13c      	bne.n	8002e12 <HAL_ADC_MspInit+0x92>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8002d98:	4b44      	ldr	r3, [pc, #272]	; (8002eac <HAL_ADC_MspInit+0x12c>)
    PC1     ------> ADC1_IN11
    */
    GPIO_InitStruct.Pin = Psensor_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(Psensor_GPIO_Port, &GPIO_InitStruct);
 8002d9a:	4845      	ldr	r0, [pc, #276]	; (8002eb0 <HAL_ADC_MspInit+0x130>)

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 8002d9c:	4c45      	ldr	r4, [pc, #276]	; (8002eb4 <HAL_ADC_MspInit+0x134>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8002d9e:	2600      	movs	r6, #0
 8002da0:	9601      	str	r6, [sp, #4]
 8002da2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002da4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002da8:	645a      	str	r2, [r3, #68]	; 0x44
 8002daa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002dac:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8002db0:	9201      	str	r2, [sp, #4]
 8002db2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002db4:	9602      	str	r6, [sp, #8]
 8002db6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002db8:	f042 0204 	orr.w	r2, r2, #4
 8002dbc:	631a      	str	r2, [r3, #48]	; 0x30
 8002dbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002dc0:	f003 0304 	and.w	r3, r3, #4
 8002dc4:	9302      	str	r3, [sp, #8]
 8002dc6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002dc8:	f04f 0e02 	mov.w	lr, #2
 8002dcc:	2303      	movs	r3, #3
    HAL_GPIO_Init(Psensor_GPIO_Port, &GPIO_InitStruct);
 8002dce:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002dd0:	e9cd e307 	strd	lr, r3, [sp, #28]
    HAL_GPIO_Init(Psensor_GPIO_Port, &GPIO_InitStruct);
 8002dd4:	f009 fc3e 	bl	800c654 <HAL_GPIO_Init>
    hdma_adc1.Instance = DMA2_Stream0;
 8002dd8:	4b37      	ldr	r3, [pc, #220]	; (8002eb8 <HAL_ADC_MspInit+0x138>)
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 8002dda:	e9c4 3600 	strd	r3, r6, [r4]
    hdma_adc2.Instance = DMA2_Stream2;
    hdma_adc2.Init.Channel = DMA_CHANNEL_1;
    hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
    hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
    hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
    hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002dde:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002de2:	f44f 6180 	mov.w	r1, #1024	; 0x400
    hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
    hdma_adc2.Init.Mode = DMA_CIRCULAR;
 8002de6:	f44f 5000 	mov.w	r0, #8192	; 0x2000
    hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002dea:	e9c4 1304 	strd	r1, r3, [r4, #16]
    hdma_adc2.Init.Mode = DMA_CIRCULAR;
 8002dee:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002df2:	e9c4 0306 	strd	r0, r3, [r4, #24]
    hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 8002df6:	e9c4 6602 	strd	r6, r6, [r4, #8]
    hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
    hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002dfa:	e9c4 6608 	strd	r6, r6, [r4, #32]
    if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 8002dfe:	4620      	mov	r0, r4
 8002e00:	f009 f9a2 	bl	800c148 <HAL_DMA_Init>
 8002e04:	b108      	cbz	r0, 8002e0a <HAL_ADC_MspInit+0x8a>
    {
      Error_Handler();
 8002e06:	f7ff ff99 	bl	8002d3c <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc2);
 8002e0a:	63ac      	str	r4, [r5, #56]	; 0x38
 8002e0c:	63a5      	str	r5, [r4, #56]	; 0x38
  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }

}
 8002e0e:	b00c      	add	sp, #48	; 0x30
 8002e10:	bd70      	pop	{r4, r5, r6, pc}
  else if(hadc->Instance==ADC2)
 8002e12:	4a2a      	ldr	r2, [pc, #168]	; (8002ebc <HAL_ADC_MspInit+0x13c>)
 8002e14:	4293      	cmp	r3, r2
 8002e16:	d125      	bne.n	8002e64 <HAL_ADC_MspInit+0xe4>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8002e18:	4b24      	ldr	r3, [pc, #144]	; (8002eac <HAL_ADC_MspInit+0x12c>)
    HAL_GPIO_Init(Qsensor_GPIO_Port, &GPIO_InitStruct);
 8002e1a:	4825      	ldr	r0, [pc, #148]	; (8002eb0 <HAL_ADC_MspInit+0x130>)
    __HAL_RCC_ADC2_CLK_ENABLE();
 8002e1c:	2600      	movs	r6, #0
 8002e1e:	9603      	str	r6, [sp, #12]
 8002e20:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002e22:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002e26:	645a      	str	r2, [r3, #68]	; 0x44
 8002e28:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002e2a:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8002e2e:	9203      	str	r2, [sp, #12]
 8002e30:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002e32:	9604      	str	r6, [sp, #16]
 8002e34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002e36:	f042 0204 	orr.w	r2, r2, #4
 8002e3a:	631a      	str	r2, [r3, #48]	; 0x30
 8002e3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e3e:	f003 0304 	and.w	r3, r3, #4
 8002e42:	9304      	str	r3, [sp, #16]
 8002e44:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002e46:	2408      	movs	r4, #8
 8002e48:	2303      	movs	r3, #3
    HAL_GPIO_Init(Qsensor_GPIO_Port, &GPIO_InitStruct);
 8002e4a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002e4c:	e9cd 4307 	strd	r4, r3, [sp, #28]
    HAL_GPIO_Init(Qsensor_GPIO_Port, &GPIO_InitStruct);
 8002e50:	f009 fc00 	bl	800c654 <HAL_GPIO_Init>
    hdma_adc2.Instance = DMA2_Stream2;
 8002e54:	4c1a      	ldr	r4, [pc, #104]	; (8002ec0 <HAL_ADC_MspInit+0x140>)
    hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 8002e56:	f8df c074 	ldr.w	ip, [pc, #116]	; 8002ecc <HAL_ADC_MspInit+0x14c>
 8002e5a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002e5e:	e9c4 c300 	strd	ip, r3, [r4]
 8002e62:	e7bc      	b.n	8002dde <HAL_ADC_MspInit+0x5e>
  else if(hadc->Instance==ADC3)
 8002e64:	4a17      	ldr	r2, [pc, #92]	; (8002ec4 <HAL_ADC_MspInit+0x144>)
 8002e66:	4293      	cmp	r3, r2
 8002e68:	d1d1      	bne.n	8002e0e <HAL_ADC_MspInit+0x8e>
    __HAL_RCC_ADC3_CLK_ENABLE();
 8002e6a:	4b10      	ldr	r3, [pc, #64]	; (8002eac <HAL_ADC_MspInit+0x12c>)
    HAL_GPIO_Init(Tsensor_GPIO_Port, &GPIO_InitStruct);
 8002e6c:	4816      	ldr	r0, [pc, #88]	; (8002ec8 <HAL_ADC_MspInit+0x148>)
    __HAL_RCC_ADC3_CLK_ENABLE();
 8002e6e:	2100      	movs	r1, #0
 8002e70:	9105      	str	r1, [sp, #20]
 8002e72:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002e74:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002e78:	645a      	str	r2, [r3, #68]	; 0x44
 8002e7a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002e7c:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8002e80:	9205      	str	r2, [sp, #20]
 8002e82:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002e84:	9106      	str	r1, [sp, #24]
 8002e86:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002e88:	f042 0220 	orr.w	r2, r2, #32
 8002e8c:	631a      	str	r2, [r3, #48]	; 0x30
 8002e8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e90:	f003 0320 	and.w	r3, r3, #32
 8002e94:	9306      	str	r3, [sp, #24]
 8002e96:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002e98:	2240      	movs	r2, #64	; 0x40
 8002e9a:	2303      	movs	r3, #3
    HAL_GPIO_Init(Tsensor_GPIO_Port, &GPIO_InitStruct);
 8002e9c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002e9e:	e9cd 2307 	strd	r2, r3, [sp, #28]
    HAL_GPIO_Init(Tsensor_GPIO_Port, &GPIO_InitStruct);
 8002ea2:	f009 fbd7 	bl	800c654 <HAL_GPIO_Init>
}
 8002ea6:	e7b2      	b.n	8002e0e <HAL_ADC_MspInit+0x8e>
 8002ea8:	40012000 	.word	0x40012000
 8002eac:	40023800 	.word	0x40023800
 8002eb0:	40020800 	.word	0x40020800
 8002eb4:	20008dd8 	.word	0x20008dd8
 8002eb8:	40026410 	.word	0x40026410
 8002ebc:	40012100 	.word	0x40012100
 8002ec0:	20008e38 	.word	0x20008e38
 8002ec4:	40012200 	.word	0x40012200
 8002ec8:	40021400 	.word	0x40021400
 8002ecc:	40026440 	.word	0x40026440

08002ed0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002ed0:	6802      	ldr	r2, [r0, #0]
 8002ed2:	4b09      	ldr	r3, [pc, #36]	; (8002ef8 <HAL_CRC_MspInit+0x28>)
 8002ed4:	429a      	cmp	r2, r3
{
 8002ed6:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002ed8:	d10b      	bne.n	8002ef2 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002eda:	2300      	movs	r3, #0
 8002edc:	9301      	str	r3, [sp, #4]
 8002ede:	4b07      	ldr	r3, [pc, #28]	; (8002efc <HAL_CRC_MspInit+0x2c>)
 8002ee0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002ee2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002ee6:	631a      	str	r2, [r3, #48]	; 0x30
 8002ee8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002eea:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002eee:	9301      	str	r3, [sp, #4]
 8002ef0:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002ef2:	b002      	add	sp, #8
 8002ef4:	4770      	bx	lr
 8002ef6:	bf00      	nop
 8002ef8:	40023000 	.word	0x40023000
 8002efc:	40023800 	.word	0x40023800

08002f00 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002f00:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002f02:	4b0f      	ldr	r3, [pc, #60]	; (8002f40 <HAL_DMA2D_MspInit+0x40>)
 8002f04:	6802      	ldr	r2, [r0, #0]
 8002f06:	429a      	cmp	r2, r3
 8002f08:	d116      	bne.n	8002f38 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002f0a:	2200      	movs	r2, #0
 8002f0c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8002f10:	9201      	str	r2, [sp, #4]
 8002f12:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002f14:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8002f18:	6319      	str	r1, [r3, #48]	; 0x30
 8002f1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f1c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002f20:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002f22:	2105      	movs	r1, #5
 8002f24:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002f26:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002f28:	f009 f8a8 	bl	800c07c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002f2c:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8002f2e:	b003      	add	sp, #12
 8002f30:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002f34:	f009 b8d4 	b.w	800c0e0 <HAL_NVIC_EnableIRQ>
}
 8002f38:	b003      	add	sp, #12
 8002f3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8002f3e:	bf00      	nop
 8002f40:	4002b000 	.word	0x4002b000

08002f44 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002f44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002f48:	4604      	mov	r4, r0
 8002f4a:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002f4c:	2214      	movs	r2, #20
 8002f4e:	2100      	movs	r1, #0
 8002f50:	a803      	add	r0, sp, #12
 8002f52:	f029 f9bd 	bl	802c2d0 <memset>
  if(hi2c->Instance==I2C3)
 8002f56:	6822      	ldr	r2, [r4, #0]
 8002f58:	4b24      	ldr	r3, [pc, #144]	; (8002fec <HAL_I2C_MspInit+0xa8>)
 8002f5a:	429a      	cmp	r2, r3
 8002f5c:	d143      	bne.n	8002fe6 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002f5e:	4c24      	ldr	r4, [pc, #144]	; (8002ff0 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002f60:	4824      	ldr	r0, [pc, #144]	; (8002ff4 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002f62:	2500      	movs	r5, #0
 8002f64:	9500      	str	r5, [sp, #0]
 8002f66:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002f68:	f043 0304 	orr.w	r3, r3, #4
 8002f6c:	6323      	str	r3, [r4, #48]	; 0x30
 8002f6e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002f70:	f003 0304 	and.w	r3, r3, #4
 8002f74:	9300      	str	r3, [sp, #0]
 8002f76:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002f78:	9501      	str	r5, [sp, #4]
 8002f7a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002f7c:	f043 0301 	orr.w	r3, r3, #1
 8002f80:	6323      	str	r3, [r4, #48]	; 0x30
 8002f82:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002f84:	f003 0301 	and.w	r3, r3, #1
 8002f88:	9301      	str	r3, [sp, #4]
 8002f8a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002f8c:	f04f 0912 	mov.w	r9, #18
 8002f90:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002f94:	f04f 0801 	mov.w	r8, #1
 8002f98:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002f9a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002f9c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002f9e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002fa2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002fa6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002fa8:	f009 fb54 	bl	800c654 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002fac:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002fb0:	4811      	ldr	r0, [pc, #68]	; (8002ff8 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002fb2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002fb4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002fb6:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002fba:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002fbe:	f009 fb49 	bl	800c654 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002fc2:	9502      	str	r5, [sp, #8]
 8002fc4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002fc6:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002fca:	6423      	str	r3, [r4, #64]	; 0x40
 8002fcc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002fce:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002fd2:	9302      	str	r3, [sp, #8]
 8002fd4:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002fd6:	6a23      	ldr	r3, [r4, #32]
 8002fd8:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002fdc:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002fde:	6a23      	ldr	r3, [r4, #32]
 8002fe0:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002fe4:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8002fe6:	b009      	add	sp, #36	; 0x24
 8002fe8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002fec:	40005c00 	.word	0x40005c00
 8002ff0:	40023800 	.word	0x40023800
 8002ff4:	40020800 	.word	0x40020800
 8002ff8:	40020000 	.word	0x40020000

08002ffc <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002ffc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002ffe:	4604      	mov	r4, r0
 8003000:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003002:	2214      	movs	r2, #20
 8003004:	2100      	movs	r1, #0
 8003006:	a807      	add	r0, sp, #28
 8003008:	f029 f962 	bl	802c2d0 <memset>
  if(hltdc->Instance==LTDC)
 800300c:	6822      	ldr	r2, [r4, #0]
 800300e:	4b57      	ldr	r3, [pc, #348]	; (800316c <HAL_LTDC_MspInit+0x170>)
 8003010:	429a      	cmp	r2, r3
 8003012:	f040 80a8 	bne.w	8003166 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8003016:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 800301a:	2500      	movs	r5, #0
 800301c:	9500      	str	r5, [sp, #0]
 800301e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8003020:	4853      	ldr	r0, [pc, #332]	; (8003170 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8003022:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8003026:	645a      	str	r2, [r3, #68]	; 0x44
 8003028:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800302a:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 800302e:	9200      	str	r2, [sp, #0]
 8003030:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8003032:	9501      	str	r5, [sp, #4]
 8003034:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003036:	f042 0220 	orr.w	r2, r2, #32
 800303a:	631a      	str	r2, [r3, #48]	; 0x30
 800303c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800303e:	f002 0220 	and.w	r2, r2, #32
 8003042:	9201      	str	r2, [sp, #4]
 8003044:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003046:	9502      	str	r5, [sp, #8]
 8003048:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800304a:	f042 0201 	orr.w	r2, r2, #1
 800304e:	631a      	str	r2, [r3, #48]	; 0x30
 8003050:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003052:	f002 0201 	and.w	r2, r2, #1
 8003056:	9202      	str	r2, [sp, #8]
 8003058:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800305a:	9503      	str	r5, [sp, #12]
 800305c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800305e:	f042 0202 	orr.w	r2, r2, #2
 8003062:	631a      	str	r2, [r3, #48]	; 0x30
 8003064:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003066:	f002 0202 	and.w	r2, r2, #2
 800306a:	9203      	str	r2, [sp, #12]
 800306c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800306e:	9504      	str	r5, [sp, #16]
 8003070:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003072:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003076:	631a      	str	r2, [r3, #48]	; 0x30
 8003078:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800307a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800307e:	9204      	str	r2, [sp, #16]
 8003080:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003082:	9505      	str	r5, [sp, #20]
 8003084:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003086:	f042 0204 	orr.w	r2, r2, #4
 800308a:	631a      	str	r2, [r3, #48]	; 0x30
 800308c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800308e:	f002 0204 	and.w	r2, r2, #4
 8003092:	9205      	str	r2, [sp, #20]
 8003094:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003096:	9506      	str	r5, [sp, #24]
 8003098:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800309a:	f042 0208 	orr.w	r2, r2, #8
 800309e:	631a      	str	r2, [r3, #48]	; 0x30
 80030a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030a2:	f003 0308 	and.w	r3, r3, #8
 80030a6:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030a8:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80030aa:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80030ac:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80030ae:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030b0:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80030b4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030b6:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80030ba:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80030bc:	f009 faca 	bl	800c654 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80030c0:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80030c4:	482b      	ldr	r0, [pc, #172]	; (8003174 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80030c6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80030c8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030ca:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80030ce:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80030d0:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80030d4:	f009 fabe 	bl	800c654 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80030d8:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80030da:	4827      	ldr	r0, [pc, #156]	; (8003178 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80030dc:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80030de:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030e0:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80030e4:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80030e8:	f009 fab4 	bl	800c654 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80030ec:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80030f0:	4821      	ldr	r0, [pc, #132]	; (8003178 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80030f2:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80030f4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030f6:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80030fa:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80030fe:	f009 faa9 	bl	800c654 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8003102:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003106:	481d      	ldr	r0, [pc, #116]	; (800317c <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8003108:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800310a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800310c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003110:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003114:	f009 fa9e 	bl	800c654 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8003118:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800311a:	4819      	ldr	r0, [pc, #100]	; (8003180 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800311c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800311e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003120:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003124:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003128:	f009 fa94 	bl	800c654 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800312c:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800312e:	4815      	ldr	r0, [pc, #84]	; (8003184 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8003130:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8003132:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003134:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003138:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800313c:	f009 fa8a 	bl	800c654 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8003140:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003144:	480d      	ldr	r0, [pc, #52]	; (800317c <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8003146:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003148:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800314a:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800314e:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003152:	f009 fa7f 	bl	800c654 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8003156:	2058      	movs	r0, #88	; 0x58
 8003158:	462a      	mov	r2, r5
 800315a:	2105      	movs	r1, #5
 800315c:	f008 ff8e 	bl	800c07c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8003160:	2058      	movs	r0, #88	; 0x58
 8003162:	f008 ffbd 	bl	800c0e0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8003166:	b00d      	add	sp, #52	; 0x34
 8003168:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800316a:	bf00      	nop
 800316c:	40016800 	.word	0x40016800
 8003170:	40021400 	.word	0x40021400
 8003174:	40020000 	.word	0x40020000
 8003178:	40020400 	.word	0x40020400
 800317c:	40021800 	.word	0x40021800
 8003180:	40020800 	.word	0x40020800
 8003184:	40020c00 	.word	0x40020c00

08003188 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8003188:	b510      	push	{r4, lr}
 800318a:	4604      	mov	r4, r0
 800318c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800318e:	2214      	movs	r2, #20
 8003190:	2100      	movs	r1, #0
 8003192:	a803      	add	r0, sp, #12
 8003194:	f029 f89c 	bl	802c2d0 <memset>
  if(hspi->Instance==SPI5)
 8003198:	6822      	ldr	r2, [r4, #0]
 800319a:	4b14      	ldr	r3, [pc, #80]	; (80031ec <HAL_SPI_MspInit+0x64>)
 800319c:	429a      	cmp	r2, r3
 800319e:	d123      	bne.n	80031e8 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80031a0:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80031a4:	2100      	movs	r1, #0
 80031a6:	9101      	str	r1, [sp, #4]
 80031a8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80031aa:	4811      	ldr	r0, [pc, #68]	; (80031f0 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 80031ac:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80031b0:	645a      	str	r2, [r3, #68]	; 0x44
 80031b2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80031b4:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 80031b8:	9201      	str	r2, [sp, #4]
 80031ba:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80031bc:	9102      	str	r1, [sp, #8]
 80031be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80031c0:	f042 0220 	orr.w	r2, r2, #32
 80031c4:	631a      	str	r2, [r3, #48]	; 0x30
 80031c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031c8:	f003 0320 	and.w	r3, r3, #32
 80031cc:	9302      	str	r3, [sp, #8]
 80031ce:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80031d0:	f44f 7260 	mov.w	r2, #896	; 0x380
 80031d4:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80031d6:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80031d8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80031dc:	2305      	movs	r3, #5
 80031de:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80031e2:	a903      	add	r1, sp, #12
 80031e4:	f009 fa36 	bl	800c654 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 80031e8:	b008      	add	sp, #32
 80031ea:	bd10      	pop	{r4, pc}
 80031ec:	40015000 	.word	0x40015000
 80031f0:	40021400 	.word	0x40021400

080031f4 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 80031f4:	6802      	ldr	r2, [r0, #0]
 80031f6:	4b09      	ldr	r3, [pc, #36]	; (800321c <HAL_TIM_Base_MspInit+0x28>)
 80031f8:	429a      	cmp	r2, r3
{
 80031fa:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
 80031fc:	d10b      	bne.n	8003216 <HAL_TIM_Base_MspInit+0x22>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80031fe:	2300      	movs	r3, #0
 8003200:	9301      	str	r3, [sp, #4]
 8003202:	4b07      	ldr	r3, [pc, #28]	; (8003220 <HAL_TIM_Base_MspInit+0x2c>)
 8003204:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003206:	f042 0201 	orr.w	r2, r2, #1
 800320a:	645a      	str	r2, [r3, #68]	; 0x44
 800320c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800320e:	f003 0301 	and.w	r3, r3, #1
 8003212:	9301      	str	r3, [sp, #4]
 8003214:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 8003216:	b002      	add	sp, #8
 8003218:	4770      	bx	lr
 800321a:	bf00      	nop
 800321c:	40010000 	.word	0x40010000
 8003220:	40023800 	.word	0x40023800

08003224 <HAL_TIM_PWM_MspInit>:
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
  if(htim_pwm->Instance==TIM2)
 8003224:	6803      	ldr	r3, [r0, #0]
 8003226:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 800322a:	b082      	sub	sp, #8
  if(htim_pwm->Instance==TIM2)
 800322c:	d10d      	bne.n	800324a <HAL_TIM_PWM_MspInit+0x26>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800322e:	2300      	movs	r3, #0
 8003230:	9300      	str	r3, [sp, #0]
 8003232:	4b0e      	ldr	r3, [pc, #56]	; (800326c <HAL_TIM_PWM_MspInit+0x48>)
 8003234:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003236:	f042 0201 	orr.w	r2, r2, #1
 800323a:	641a      	str	r2, [r3, #64]	; 0x40
 800323c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800323e:	f003 0301 	and.w	r3, r3, #1
 8003242:	9300      	str	r3, [sp, #0]
 8003244:	9b00      	ldr	r3, [sp, #0]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8003246:	b002      	add	sp, #8
 8003248:	4770      	bx	lr
  else if(htim_pwm->Instance==TIM4)
 800324a:	4a09      	ldr	r2, [pc, #36]	; (8003270 <HAL_TIM_PWM_MspInit+0x4c>)
 800324c:	4293      	cmp	r3, r2
 800324e:	d1fa      	bne.n	8003246 <HAL_TIM_PWM_MspInit+0x22>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8003250:	2300      	movs	r3, #0
 8003252:	9301      	str	r3, [sp, #4]
 8003254:	4b05      	ldr	r3, [pc, #20]	; (800326c <HAL_TIM_PWM_MspInit+0x48>)
 8003256:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003258:	f042 0204 	orr.w	r2, r2, #4
 800325c:	641a      	str	r2, [r3, #64]	; 0x40
 800325e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003260:	f003 0304 	and.w	r3, r3, #4
 8003264:	9301      	str	r3, [sp, #4]
 8003266:	9b01      	ldr	r3, [sp, #4]
}
 8003268:	e7ed      	b.n	8003246 <HAL_TIM_PWM_MspInit+0x22>
 800326a:	bf00      	nop
 800326c:	40023800 	.word	0x40023800
 8003270:	40000800 	.word	0x40000800

08003274 <HAL_TIM_OC_MspInit>:
* @param htim_oc: TIM_OC handle pointer
* @retval None
*/
void HAL_TIM_OC_MspInit(TIM_HandleTypeDef* htim_oc)
{
  if(htim_oc->Instance==TIM3)
 8003274:	6802      	ldr	r2, [r0, #0]
 8003276:	4b09      	ldr	r3, [pc, #36]	; (800329c <HAL_TIM_OC_MspInit+0x28>)
 8003278:	429a      	cmp	r2, r3
{
 800327a:	b082      	sub	sp, #8
  if(htim_oc->Instance==TIM3)
 800327c:	d10b      	bne.n	8003296 <HAL_TIM_OC_MspInit+0x22>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 800327e:	2300      	movs	r3, #0
 8003280:	9301      	str	r3, [sp, #4]
 8003282:	4b07      	ldr	r3, [pc, #28]	; (80032a0 <HAL_TIM_OC_MspInit+0x2c>)
 8003284:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003286:	f042 0202 	orr.w	r2, r2, #2
 800328a:	641a      	str	r2, [r3, #64]	; 0x40
 800328c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800328e:	f003 0302 	and.w	r3, r3, #2
 8003292:	9301      	str	r3, [sp, #4]
 8003294:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8003296:	b002      	add	sp, #8
 8003298:	4770      	bx	lr
 800329a:	bf00      	nop
 800329c:	40000400 	.word	0x40000400
 80032a0:	40023800 	.word	0x40023800

080032a4 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80032a4:	b510      	push	{r4, lr}
 80032a6:	4604      	mov	r4, r0
 80032a8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80032aa:	2214      	movs	r2, #20
 80032ac:	2100      	movs	r1, #0
 80032ae:	a803      	add	r0, sp, #12
 80032b0:	f029 f80e 	bl	802c2d0 <memset>
  if(htim->Instance==TIM2)
 80032b4:	6823      	ldr	r3, [r4, #0]
 80032b6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80032ba:	d117      	bne.n	80032ec <HAL_TIM_MspPostInit+0x48>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80032bc:	2300      	movs	r3, #0
 80032be:	9300      	str	r3, [sp, #0]
 80032c0:	4b1e      	ldr	r3, [pc, #120]	; (800333c <HAL_TIM_MspPostInit+0x98>)
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80032c2:	481f      	ldr	r0, [pc, #124]	; (8003340 <HAL_TIM_MspPostInit+0x9c>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80032c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80032c6:	f042 0201 	orr.w	r2, r2, #1
 80032ca:	631a      	str	r2, [r3, #48]	; 0x30
 80032cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032ce:	f003 0301 	and.w	r3, r3, #1
 80032d2:	9300      	str	r3, [sp, #0]
 80032d4:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80032d6:	2220      	movs	r2, #32
 80032d8:	2302      	movs	r3, #2
 80032da:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80032de:	2301      	movs	r3, #1
 80032e0:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80032e2:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80032e4:	f009 f9b6 	bl	800c654 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 80032e8:	b008      	add	sp, #32
 80032ea:	bd10      	pop	{r4, pc}
  else if(htim->Instance==TIM3)
 80032ec:	4a15      	ldr	r2, [pc, #84]	; (8003344 <HAL_TIM_MspPostInit+0xa0>)
 80032ee:	4293      	cmp	r3, r2
 80032f0:	d113      	bne.n	800331a <HAL_TIM_MspPostInit+0x76>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80032f2:	2300      	movs	r3, #0
 80032f4:	9301      	str	r3, [sp, #4]
 80032f6:	4b11      	ldr	r3, [pc, #68]	; (800333c <HAL_TIM_MspPostInit+0x98>)
 80032f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80032fa:	f042 0202 	orr.w	r2, r2, #2
 80032fe:	631a      	str	r2, [r3, #48]	; 0x30
 8003300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003302:	f003 0302 	and.w	r3, r3, #2
 8003306:	9301      	str	r3, [sp, #4]
 8003308:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 800330a:	2310      	movs	r3, #16
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 800330c:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800330e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003310:	480d      	ldr	r0, [pc, #52]	; (8003348 <HAL_TIM_MspPostInit+0xa4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003312:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8003314:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003316:	a903      	add	r1, sp, #12
 8003318:	e7e4      	b.n	80032e4 <HAL_TIM_MspPostInit+0x40>
  else if(htim->Instance==TIM4)
 800331a:	4a0c      	ldr	r2, [pc, #48]	; (800334c <HAL_TIM_MspPostInit+0xa8>)
 800331c:	4293      	cmp	r3, r2
 800331e:	d1e3      	bne.n	80032e8 <HAL_TIM_MspPostInit+0x44>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003320:	2300      	movs	r3, #0
 8003322:	9302      	str	r3, [sp, #8]
 8003324:	4b05      	ldr	r3, [pc, #20]	; (800333c <HAL_TIM_MspPostInit+0x98>)
 8003326:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003328:	f042 0202 	orr.w	r2, r2, #2
 800332c:	631a      	str	r2, [r3, #48]	; 0x30
 800332e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003330:	f003 0302 	and.w	r3, r3, #2
 8003334:	9302      	str	r3, [sp, #8]
 8003336:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8003338:	2380      	movs	r3, #128	; 0x80
 800333a:	e7e7      	b.n	800330c <HAL_TIM_MspPostInit+0x68>
 800333c:	40023800 	.word	0x40023800
 8003340:	40020000 	.word	0x40020000
 8003344:	40000400 	.word	0x40000400
 8003348:	40020400 	.word	0x40020400
 800334c:	40000800 	.word	0x40000800

08003350 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8003350:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003354:	4606      	mov	r6, r0
 8003356:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003358:	2214      	movs	r2, #20
 800335a:	2100      	movs	r1, #0
 800335c:	a803      	add	r0, sp, #12
 800335e:	f028 ffb7 	bl	802c2d0 <memset>
  if(huart->Instance==USART1)
 8003362:	6832      	ldr	r2, [r6, #0]
 8003364:	4b2b      	ldr	r3, [pc, #172]	; (8003414 <HAL_UART_MspInit+0xc4>)
 8003366:	429a      	cmp	r2, r3
 8003368:	d151      	bne.n	800340e <HAL_UART_MspInit+0xbe>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 800336a:	2500      	movs	r5, #0
 800336c:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 8003370:	9501      	str	r5, [sp, #4]
 8003372:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003374:	4828      	ldr	r0, [pc, #160]	; (8003418 <HAL_UART_MspInit+0xc8>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8003376:	f042 0210 	orr.w	r2, r2, #16
 800337a:	645a      	str	r2, [r3, #68]	; 0x44
 800337c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800337e:	f002 0210 	and.w	r2, r2, #16
 8003382:	9201      	str	r2, [sp, #4]
 8003384:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003386:	9502      	str	r5, [sp, #8]
 8003388:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800338a:	f042 0201 	orr.w	r2, r2, #1
 800338e:	631a      	str	r2, [r3, #48]	; 0x30
 8003390:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003392:	f003 0301 	and.w	r3, r3, #1
 8003396:	9302      	str	r3, [sp, #8]
 8003398:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800339a:	f04f 0902 	mov.w	r9, #2
 800339e:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80033a2:	2407      	movs	r4, #7
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80033a4:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80033a8:	f04f 0803 	mov.w	r8, #3
 80033ac:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80033ae:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80033b0:	e9cd 3805 	strd	r3, r8, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80033b4:	9407      	str	r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80033b6:	f44f 6780 	mov.w	r7, #1024	; 0x400
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80033ba:	f009 f94b 	bl	800c654 <HAL_GPIO_Init>
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80033be:	4816      	ldr	r0, [pc, #88]	; (8003418 <HAL_UART_MspInit+0xc8>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80033c0:	9407      	str	r4, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80033c2:	a903      	add	r1, sp, #12

    /* USART1 DMA Init */
    /* USART1_TX Init */
    hdma_usart1_tx.Instance = DMA2_Stream7;
 80033c4:	4c15      	ldr	r4, [pc, #84]	; (800341c <HAL_UART_MspInit+0xcc>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80033c6:	e9cd 7903 	strd	r7, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80033ca:	e9cd 5805 	strd	r5, r8, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80033ce:	f009 f941 	bl	800c654 <HAL_GPIO_Init>
    hdma_usart1_tx.Init.Channel = DMA_CHANNEL_4;
 80033d2:	4a13      	ldr	r2, [pc, #76]	; (8003420 <HAL_UART_MspInit+0xd0>)
 80033d4:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80033d8:	e9c4 2300 	strd	r2, r3, [r4]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
    hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
    hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
    hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 80033dc:	4620      	mov	r0, r4
    hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80033de:	2340      	movs	r3, #64	; 0x40
    hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80033e0:	e9c4 3502 	strd	r3, r5, [r4, #8]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80033e4:	e9c4 7504 	strd	r7, r5, [r4, #16]
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 80033e8:	e9c4 5506 	strd	r5, r5, [r4, #24]
    hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80033ec:	e9c4 5508 	strd	r5, r5, [r4, #32]
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 80033f0:	f008 feaa 	bl	800c148 <HAL_DMA_Init>
 80033f4:	b108      	cbz	r0, 80033fa <HAL_UART_MspInit+0xaa>
    {
      Error_Handler();
 80033f6:	f7ff fca1 	bl	8002d3c <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmatx,hdma_usart1_tx);
 80033fa:	6334      	str	r4, [r6, #48]	; 0x30

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 80033fc:	2025      	movs	r0, #37	; 0x25
 80033fe:	2200      	movs	r2, #0
 8003400:	2105      	movs	r1, #5
    __HAL_LINKDMA(huart,hdmatx,hdma_usart1_tx);
 8003402:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 8003404:	f008 fe3a 	bl	800c07c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8003408:	2025      	movs	r0, #37	; 0x25
 800340a:	f008 fe69 	bl	800c0e0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 800340e:	b009      	add	sp, #36	; 0x24
 8003410:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003414:	40011000 	.word	0x40011000
 8003418:	40020000 	.word	0x40020000
 800341c:	20008e98 	.word	0x20008e98
 8003420:	400264b8 	.word	0x400264b8

08003424 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8003424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003428:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800342a:	2300      	movs	r3, #0
 800342c:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 800342e:	4b2b      	ldr	r3, [pc, #172]	; (80034dc <HAL_SDRAM_MspInit+0xb8>)
 8003430:	681c      	ldr	r4, [r3, #0]
 8003432:	2c00      	cmp	r4, #0
 8003434:	d14f      	bne.n	80034d6 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8003436:	f04f 0801 	mov.w	r8, #1
 800343a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 800343e:	4b28      	ldr	r3, [pc, #160]	; (80034e0 <HAL_SDRAM_MspInit+0xbc>)
 8003440:	9400      	str	r4, [sp, #0]
 8003442:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8003444:	4827      	ldr	r0, [pc, #156]	; (80034e4 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8003446:	ea42 0208 	orr.w	r2, r2, r8
 800344a:	639a      	str	r2, [r3, #56]	; 0x38
 800344c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800344e:	ea03 0308 	and.w	r3, r3, r8
 8003452:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003454:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8003456:	2603      	movs	r6, #3
 8003458:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 800345a:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800345c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800345e:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8003462:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8003466:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800346a:	f009 f8f3 	bl	800c654 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800346e:	481e      	ldr	r0, [pc, #120]	; (80034e8 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8003470:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003472:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003474:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003478:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800347c:	f009 f8ea 	bl	800c654 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8003480:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003484:	4819      	ldr	r0, [pc, #100]	; (80034ec <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8003486:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003488:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800348a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800348e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003492:	f009 f8df 	bl	800c654 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8003496:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800349a:	4815      	ldr	r0, [pc, #84]	; (80034f0 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800349c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800349e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034a0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80034a4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80034a8:	f009 f8d4 	bl	800c654 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80034ac:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80034b0:	4810      	ldr	r0, [pc, #64]	; (80034f4 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80034b2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80034b4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034b6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80034ba:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80034be:	f009 f8c9 	bl	800c654 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80034c2:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80034c4:	480c      	ldr	r0, [pc, #48]	; (80034f8 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80034c6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80034c8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034ca:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80034ce:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80034d2:	f009 f8bf 	bl	800c654 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80034d6:	b006      	add	sp, #24
 80034d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80034dc:	2000d1c0 	.word	0x2000d1c0
 80034e0:	40023800 	.word	0x40023800
 80034e4:	40021400 	.word	0x40021400
 80034e8:	40020800 	.word	0x40020800
 80034ec:	40021800 	.word	0x40021800
 80034f0:	40021000 	.word	0x40021000
 80034f4:	40020c00 	.word	0x40020c00
 80034f8:	40020400 	.word	0x40020400

080034fc <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80034fc:	b530      	push	{r4, r5, lr}
 80034fe:	4601      	mov	r1, r0
 8003500:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8003502:	2200      	movs	r2, #0
 8003504:	2036      	movs	r0, #54	; 0x36
 8003506:	f008 fdb9 	bl	800c07c <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800350a:	2036      	movs	r0, #54	; 0x36
 800350c:	f008 fde8 	bl	800c0e0 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8003510:	2500      	movs	r5, #0
 8003512:	4b15      	ldr	r3, [pc, #84]	; (8003568 <HAL_InitTick+0x6c>)
 8003514:	9502      	str	r5, [sp, #8]
 8003516:	6c1a      	ldr	r2, [r3, #64]	; 0x40

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8003518:	4c14      	ldr	r4, [pc, #80]	; (800356c <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 800351a:	f042 0210 	orr.w	r2, r2, #16
 800351e:	641a      	str	r2, [r3, #64]	; 0x40
 8003520:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003522:	f003 0310 	and.w	r3, r3, #16
 8003526:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8003528:	a901      	add	r1, sp, #4
 800352a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 800352c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800352e:	f00a fa0f 	bl	800d950 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8003532:	f00a f9ed 	bl	800d910 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8003536:	4b0e      	ldr	r3, [pc, #56]	; (8003570 <HAL_InitTick+0x74>)
 8003538:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 800353a:	f240 33e7 	movw	r3, #999	; 0x3e7
 800353e:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8003540:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8003542:	4b0c      	ldr	r3, [pc, #48]	; (8003574 <HAL_InitTick+0x78>)
 8003544:	fbb0 f0f3 	udiv	r0, r0, r3
 8003548:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 800354a:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 800354c:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 800354e:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003550:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8003552:	f00b f859 	bl	800e608 <HAL_TIM_Base_Init>
 8003556:	b920      	cbnz	r0, 8003562 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8003558:	4620      	mov	r0, r4
 800355a:	f00a ff39 	bl	800e3d0 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 800355e:	b009      	add	sp, #36	; 0x24
 8003560:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8003562:	2001      	movs	r0, #1
 8003564:	e7fb      	b.n	800355e <HAL_InitTick+0x62>
 8003566:	bf00      	nop
 8003568:	40023800 	.word	0x40023800
 800356c:	2000d1c4 	.word	0x2000d1c4
 8003570:	40001000 	.word	0x40001000
 8003574:	000f4240 	.word	0x000f4240

08003578 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8003578:	4770      	bx	lr

0800357a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800357a:	e7fe      	b.n	800357a <HardFault_Handler>

0800357c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800357c:	e7fe      	b.n	800357c <MemManage_Handler>

0800357e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800357e:	e7fe      	b.n	800357e <BusFault_Handler>

08003580 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003580:	e7fe      	b.n	8003580 <UsageFault_Handler>

08003582 <DebugMon_Handler>:
 8003582:	4770      	bx	lr

08003584 <USART1_IRQHandler>:
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8003584:	4801      	ldr	r0, [pc, #4]	; (800358c <USART1_IRQHandler+0x8>)
 8003586:	f00b bb61 	b.w	800ec4c <HAL_UART_IRQHandler>
 800358a:	bf00      	nop
 800358c:	20009180 	.word	0x20009180

08003590 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8003590:	4801      	ldr	r0, [pc, #4]	; (8003598 <TIM6_DAC_IRQHandler+0x8>)
 8003592:	f00a bf31 	b.w	800e3f8 <HAL_TIM_IRQHandler>
 8003596:	bf00      	nop
 8003598:	2000d1c4 	.word	0x2000d1c4

0800359c <DMA2_Stream0_IRQHandler>:
void DMA2_Stream0_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 800359c:	4801      	ldr	r0, [pc, #4]	; (80035a4 <DMA2_Stream0_IRQHandler+0x8>)
 800359e:	f008 be9f 	b.w	800c2e0 <HAL_DMA_IRQHandler>
 80035a2:	bf00      	nop
 80035a4:	20008dd8 	.word	0x20008dd8

080035a8 <DMA2_Stream2_IRQHandler>:
void DMA2_Stream2_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc2);
 80035a8:	4801      	ldr	r0, [pc, #4]	; (80035b0 <DMA2_Stream2_IRQHandler+0x8>)
 80035aa:	f008 be99 	b.w	800c2e0 <HAL_DMA_IRQHandler>
 80035ae:	bf00      	nop
 80035b0:	20008e38 	.word	0x20008e38

080035b4 <DMA2_Stream7_IRQHandler>:
void DMA2_Stream7_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */

  /* USER CODE END DMA2_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_tx);
 80035b4:	4801      	ldr	r0, [pc, #4]	; (80035bc <DMA2_Stream7_IRQHandler+0x8>)
 80035b6:	f008 be93 	b.w	800c2e0 <HAL_DMA_IRQHandler>
 80035ba:	bf00      	nop
 80035bc:	20008e98 	.word	0x20008e98

080035c0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80035c0:	4801      	ldr	r0, [pc, #4]	; (80035c8 <LTDC_IRQHandler+0x8>)
 80035c2:	f009 be89 	b.w	800d2d8 <HAL_LTDC_IRQHandler>
 80035c6:	bf00      	nop
 80035c8:	20008f4c 	.word	0x20008f4c

080035cc <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80035cc:	4801      	ldr	r0, [pc, #4]	; (80035d4 <DMA2D_IRQHandler+0x8>)
 80035ce:	f008 bf73 	b.w	800c4b8 <HAL_DMA2D_IRQHandler>
 80035d2:	bf00      	nop
 80035d4:	20008d98 	.word	0x20008d98

080035d8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80035d8:	2001      	movs	r0, #1
 80035da:	4770      	bx	lr

080035dc <_kill>:

int _kill(int pid, int sig)
{
 80035dc:	b508      	push	{r3, lr}
	errno = EINVAL;
 80035de:	f028 fd23 	bl	802c028 <__errno>
 80035e2:	2316      	movs	r3, #22
 80035e4:	6003      	str	r3, [r0, #0]
	return -1;
}
 80035e6:	f04f 30ff 	mov.w	r0, #4294967295
 80035ea:	bd08      	pop	{r3, pc}

080035ec <_exit>:

void _exit (int status)
{
 80035ec:	b508      	push	{r3, lr}
	errno = EINVAL;
 80035ee:	f028 fd1b 	bl	802c028 <__errno>
 80035f2:	2316      	movs	r3, #22
 80035f4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80035f6:	e7fe      	b.n	80035f6 <_exit+0xa>

080035f8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80035f8:	b570      	push	{r4, r5, r6, lr}
 80035fa:	460d      	mov	r5, r1
 80035fc:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80035fe:	460e      	mov	r6, r1
 8003600:	1b73      	subs	r3, r6, r5
 8003602:	429c      	cmp	r4, r3
 8003604:	dc01      	bgt.n	800360a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8003606:	4620      	mov	r0, r4
 8003608:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800360a:	f3af 8000 	nop.w
 800360e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003612:	e7f5      	b.n	8003600 <_read+0x8>

08003614 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8003614:	b570      	push	{r4, r5, r6, lr}
 8003616:	460d      	mov	r5, r1
 8003618:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800361a:	460e      	mov	r6, r1
 800361c:	1b73      	subs	r3, r6, r5
 800361e:	429c      	cmp	r4, r3
 8003620:	dc01      	bgt.n	8003626 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8003622:	4620      	mov	r0, r4
 8003624:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8003626:	f816 0b01 	ldrb.w	r0, [r6], #1
 800362a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800362e:	e7f5      	b.n	800361c <_write+0x8>

08003630 <_close>:

int _close(int file)
{
	return -1;
}
 8003630:	f04f 30ff 	mov.w	r0, #4294967295
 8003634:	4770      	bx	lr

08003636 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8003636:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800363a:	604b      	str	r3, [r1, #4]
	return 0;
}
 800363c:	2000      	movs	r0, #0
 800363e:	4770      	bx	lr

08003640 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8003640:	2001      	movs	r0, #1
 8003642:	4770      	bx	lr

08003644 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8003644:	2000      	movs	r0, #0
 8003646:	4770      	bx	lr

08003648 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8003648:	4a0a      	ldr	r2, [pc, #40]	; (8003674 <_sbrk+0x2c>)
 800364a:	6811      	ldr	r1, [r2, #0]
{
 800364c:	b508      	push	{r3, lr}
 800364e:	4603      	mov	r3, r0
	if (heap_end == 0)
 8003650:	b909      	cbnz	r1, 8003656 <_sbrk+0xe>
		heap_end = &end;
 8003652:	4909      	ldr	r1, [pc, #36]	; (8003678 <_sbrk+0x30>)
 8003654:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8003656:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8003658:	4669      	mov	r1, sp
 800365a:	4403      	add	r3, r0
 800365c:	428b      	cmp	r3, r1
 800365e:	d906      	bls.n	800366e <_sbrk+0x26>
	{
		errno = ENOMEM;
 8003660:	f028 fce2 	bl	802c028 <__errno>
 8003664:	230c      	movs	r3, #12
 8003666:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8003668:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 800366c:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800366e:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8003670:	e7fc      	b.n	800366c <_sbrk+0x24>
 8003672:	bf00      	nop
 8003674:	2000d204 	.word	0x2000d204
 8003678:	2001e488 	.word	0x2001e488

0800367c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId GRAPHAXIS = 2;    // verdana_10_4bpp
    static const touchgfx::FontId HIGHLIGHT = 7;    // arialbi_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 8;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800367c:	4770      	bx	lr

0800367e <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800367e:	b508      	push	{r3, lr}
    switch (typography)
 8003680:	2908      	cmp	r1, #8
 8003682:	d826      	bhi.n	80036d2 <_ZN23ApplicationFontProvider7getFontEt+0x54>
 8003684:	e8df f001 	tbb	[pc, r1]
 8003688:	0d1d0905 	.word	0x0d1d0905
 800368c:	1d191511 	.word	0x1d191511
 8003690:	21          	.byte	0x21
 8003691:	00          	.byte	0x00
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8003692:	f007 fb29 	bl	800ace8 <_ZN17TypedTextDatabase8getFontsEv>
 8003696:	6800      	ldr	r0, [r0, #0]
        // arialbi_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[7]);
    default:
        return 0;
    }
}
 8003698:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800369a:	f007 fb25 	bl	800ace8 <_ZN17TypedTextDatabase8getFontsEv>
 800369e:	6840      	ldr	r0, [r0, #4]
 80036a0:	e7fa      	b.n	8003698 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80036a2:	f007 fb21 	bl	800ace8 <_ZN17TypedTextDatabase8getFontsEv>
 80036a6:	68c0      	ldr	r0, [r0, #12]
 80036a8:	e7f6      	b.n	8003698 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 80036aa:	f007 fb1d 	bl	800ace8 <_ZN17TypedTextDatabase8getFontsEv>
 80036ae:	6900      	ldr	r0, [r0, #16]
 80036b0:	e7f2      	b.n	8003698 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
 80036b2:	f007 fb19 	bl	800ace8 <_ZN17TypedTextDatabase8getFontsEv>
 80036b6:	6940      	ldr	r0, [r0, #20]
 80036b8:	e7ee      	b.n	8003698 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
 80036ba:	f007 fb15 	bl	800ace8 <_ZN17TypedTextDatabase8getFontsEv>
 80036be:	6980      	ldr	r0, [r0, #24]
 80036c0:	e7ea      	b.n	8003698 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80036c2:	f007 fb11 	bl	800ace8 <_ZN17TypedTextDatabase8getFontsEv>
 80036c6:	6880      	ldr	r0, [r0, #8]
 80036c8:	e7e6      	b.n	8003698 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[7]);
 80036ca:	f007 fb0d 	bl	800ace8 <_ZN17TypedTextDatabase8getFontsEv>
 80036ce:	69c0      	ldr	r0, [r0, #28]
 80036d0:	e7e2      	b.n	8003698 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
    switch (typography)
 80036d2:	2000      	movs	r0, #0
 80036d4:	e7e0      	b.n	8003698 <_ZN23ApplicationFontProvider7getFontEt+0x1a>

080036d6 <_ZN23ApplicationFontProviderD0Ev>:
 80036d6:	b510      	push	{r4, lr}
 80036d8:	2104      	movs	r1, #4
 80036da:	4604      	mov	r4, r0
 80036dc:	f027 fd25 	bl	802b12a <_ZdlPvj>
 80036e0:	4620      	mov	r0, r4
 80036e2:	bd10      	pop	{r4, pc}

080036e4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80036e4:	4800      	ldr	r0, [pc, #0]	; (80036e8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80036e6:	4770      	bx	lr
 80036e8:	0802f568 	.word	0x0802f568

080036ec <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80036ec:	2012      	movs	r0, #18
 80036ee:	4770      	bx	lr

080036f0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80036f0:	b513      	push	{r0, r1, r4, lr}
 80036f2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80036f4:	b151      	cbz	r1, 800370c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80036f6:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80036f8:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80036fa:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80036fe:	aa01      	add	r2, sp, #4
 8003700:	689c      	ldr	r4, [r3, #8]
 8003702:	f10d 0303 	add.w	r3, sp, #3
 8003706:	47a0      	blx	r4
        return glyph;
    }
 8003708:	b002      	add	sp, #8
 800370a:	bd10      	pop	{r4, pc}
            return 0;
 800370c:	4608      	mov	r0, r1
 800370e:	e7fb      	b.n	8003708 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08003710 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8003710:	8940      	ldrh	r0, [r0, #10]
 8003712:	4770      	bx	lr

08003714 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8003714:	8980      	ldrh	r0, [r0, #12]
 8003716:	4770      	bx	lr

08003718 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8003718:	8880      	ldrh	r0, [r0, #4]
 800371a:	4770      	bx	lr

0800371c <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 800371c:	7983      	ldrb	r3, [r0, #6]
 800371e:	8880      	ldrh	r0, [r0, #4]
 8003720:	4418      	add	r0, r3
    }
 8003722:	b280      	uxth	r0, r0
 8003724:	4770      	bx	lr

08003726 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8003726:	79c0      	ldrb	r0, [r0, #7]
    }
 8003728:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800372c:	4770      	bx	lr

0800372e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800372e:	79c0      	ldrb	r0, [r0, #7]
    }
 8003730:	09c0      	lsrs	r0, r0, #7
 8003732:	4770      	bx	lr

08003734 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8003734:	2000      	movs	r0, #0
 8003736:	4770      	bx	lr

08003738 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8003738:	8081      	strh	r1, [r0, #4]
    }
 800373a:	4770      	bx	lr

0800373c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800373c:	80c1      	strh	r1, [r0, #6]
    }
 800373e:	4770      	bx	lr

08003740 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003740:	8101      	strh	r1, [r0, #8]
    }
 8003742:	4770      	bx	lr

08003744 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8003744:	8141      	strh	r1, [r0, #10]
    }
 8003746:	4770      	bx	lr

08003748 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8003748:	4770      	bx	lr

0800374a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 800374a:	4770      	bx	lr

0800374c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 800374c:	4770      	bx	lr

0800374e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 800374e:	4770      	bx	lr

08003750 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003750:	4770      	bx	lr

08003752 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8003752:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8003754:	88c4      	ldrh	r4, [r0, #6]
 8003756:	6803      	ldr	r3, [r0, #0]
 8003758:	1b12      	subs	r2, r2, r4
 800375a:	8884      	ldrh	r4, [r0, #4]
 800375c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800375e:	1b09      	subs	r1, r1, r4
 8003760:	b212      	sxth	r2, r2
    }
 8003762:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8003766:	b209      	sxth	r1, r1
 8003768:	4718      	bx	r3

0800376a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800376a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800376e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003770:	f04f 33ff 	mov.w	r3, #4294967295
 8003774:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8003776:	6813      	ldr	r3, [r2, #0]
 8003778:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800377a:	6010      	str	r0, [r2, #0]
    }
 800377c:	4770      	bx	lr

0800377e <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800377e:	4770      	bx	lr

08003780 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003780:	4770      	bx	lr

08003782 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003782:	4770      	bx	lr

08003784 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003784:	4770      	bx	lr

08003786 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8003786:	4770      	bx	lr

08003788 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8003788:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800378c:	b11a      	cbz	r2, 8003796 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800378e:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8003792:	b102      	cbz	r2, 8003796 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8003794:	6018      	str	r0, [r3, #0]
        }
    }
 8003796:	4770      	bx	lr

08003798 <_ZN23DataDisplayListViewBaseD1Ev>:

class DataDisplayListViewBase : public touchgfx::View<DataDisplayListPresenter>
{
public:
    DataDisplayListViewBase();
    virtual ~DataDisplayListViewBase() {}
 8003798:	4770      	bx	lr

0800379a <_ZN23DataDisplayListViewBase11setupScreenEv>:
}

void DataDisplayListViewBase::setupScreen()
{

}
 800379a:	4770      	bx	lr

0800379c <_ZN8touchgfx8CallbackI23DataDisplayListViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800379c:	4770      	bx	lr

0800379e <_ZN8touchgfx8CallbackI23DataDisplayListViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800379e:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun_1)(t1);
 80037a0:	68c2      	ldr	r2, [r0, #12]
 80037a2:	6844      	ldr	r4, [r0, #4]
 80037a4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80037a6:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80037a8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80037ac:	07d2      	lsls	r2, r2, #31
 80037ae:	bf48      	it	mi
 80037b0:	5962      	ldrmi	r2, [r4, r5]
 80037b2:	689b      	ldr	r3, [r3, #8]
    }
 80037b4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80037b6:	bf48      	it	mi
 80037b8:	58d3      	ldrmi	r3, [r2, r3]
 80037ba:	4718      	bx	r3

080037bc <_ZNK8touchgfx8CallbackI23DataDisplayListViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_1 != 0);
 80037bc:	6843      	ldr	r3, [r0, #4]
 80037be:	b12b      	cbz	r3, 80037cc <_ZNK8touchgfx8CallbackI23DataDisplayListViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80037c0:	6883      	ldr	r3, [r0, #8]
 80037c2:	b92b      	cbnz	r3, 80037d0 <_ZNK8touchgfx8CallbackI23DataDisplayListViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80037c4:	68c0      	ldr	r0, [r0, #12]
 80037c6:	f000 0001 	and.w	r0, r0, #1
 80037ca:	4770      	bx	lr
 80037cc:	4618      	mov	r0, r3
 80037ce:	4770      	bx	lr
 80037d0:	2001      	movs	r0, #1
    }
 80037d2:	4770      	bx	lr

080037d4 <_ZN8touchgfx8CallbackI23DataDisplayListViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80037d4:	b510      	push	{r4, lr}
 80037d6:	2110      	movs	r1, #16
 80037d8:	4604      	mov	r4, r0
 80037da:	f027 fca6 	bl	802b12a <_ZdlPvj>
 80037de:	4620      	mov	r0, r4
 80037e0:	bd10      	pop	{r4, pc}

080037e2 <_ZN23DataDisplayListViewBaseD0Ev>:
 80037e2:	b510      	push	{r4, lr}
 80037e4:	f44f 71c0 	mov.w	r1, #384	; 0x180
 80037e8:	4604      	mov	r4, r0
 80037ea:	f027 fc9e 	bl	802b12a <_ZdlPvj>
 80037ee:	4620      	mov	r0, r4
 80037f0:	bd10      	pop	{r4, pc}

080037f2 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80037f2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80037f6:	b112      	cbz	r2, 80037fe <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80037f8:	6803      	ldr	r3, [r0, #0]
 80037fa:	695b      	ldr	r3, [r3, #20]
 80037fc:	4718      	bx	r3
    }
 80037fe:	4770      	bx	lr

08003800 <_ZN23DataDisplayListViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void DataDisplayListViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8003800:	b508      	push	{r3, lr}
    if (&src == &ReactanceGraph)
 8003802:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8003806:	4299      	cmp	r1, r3
 8003808:	d105      	bne.n	8003816 <_ZN23DataDisplayListViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800380a:	f015 fda5 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction4
        //When SaveData clicked change screen to DataSaved
        //Go to DataSaved with screen transition towards North
        application().gotoDataSavedScreenSlideTransitionNorth();
    }
}
 800380e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoReactanceGraphScreenSlideTransitionWest();
 8003812:	f001 b9ed 	b.w	8004bf0 <_ZN23FrontendApplicationBase43gotoReactanceGraphScreenSlideTransitionWestEv>
    else if (&src == &ResistanceGraph)
 8003816:	f100 03e0 	add.w	r3, r0, #224	; 0xe0
 800381a:	4299      	cmp	r1, r3
 800381c:	d105      	bne.n	800382a <_ZN23DataDisplayListViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
 800381e:	f015 fd9b 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003822:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoResistanceGraphScreenSlideTransitionWest();
 8003826:	f001 b9d3 	b.w	8004bd0 <_ZN23FrontendApplicationBase44gotoResistanceGraphScreenSlideTransitionWestEv>
    else if (&src == &SaveData)
 800382a:	f500 7094 	add.w	r0, r0, #296	; 0x128
 800382e:	4281      	cmp	r1, r0
 8003830:	d105      	bne.n	800383e <_ZN23DataDisplayListViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3e>
 8003832:	f015 fd91 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003836:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoDataSavedScreenSlideTransitionNorth();
 800383a:	f001 b9e9 	b.w	8004c10 <_ZN23FrontendApplicationBase39gotoDataSavedScreenSlideTransitionNorthEv>
}
 800383e:	bd08      	pop	{r3, pc}

08003840 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8003840:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8003842:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8003844:	4604      	mov	r4, r0
        setX(x);
 8003846:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8003848:	4615      	mov	r5, r2
        setX(x);
 800384a:	4798      	blx	r3
        setY(y);
 800384c:	6823      	ldr	r3, [r4, #0]
 800384e:	4629      	mov	r1, r5
 8003850:	4620      	mov	r0, r4
 8003852:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8003854:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003858:	4718      	bx	r3
	...

0800385c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 800385c:	4b1b      	ldr	r3, [pc, #108]	; (80038cc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800385e:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8003860:	881b      	ldrh	r3, [r3, #0]
 8003862:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8003864:	428b      	cmp	r3, r1
    void updateTextPosition()
 8003866:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003868:	d92b      	bls.n	80038c2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800386a:	4b19      	ldr	r3, [pc, #100]	; (80038d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	b92b      	cbnz	r3, 800387c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003870:	4b18      	ldr	r3, [pc, #96]	; (80038d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003872:	4a19      	ldr	r2, [pc, #100]	; (80038d8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003874:	4819      	ldr	r0, [pc, #100]	; (80038dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8003876:	21ae      	movs	r1, #174	; 0xae
 8003878:	f028 fba4 	bl	802bfc4 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800387c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003880:	4b17      	ldr	r3, [pc, #92]	; (80038e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8003882:	681b      	ldr	r3, [r3, #0]
 8003884:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003888:	4b16      	ldr	r3, [pc, #88]	; (80038e4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 800388a:	6818      	ldr	r0, [r3, #0]
 800388c:	f007 fa1c 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003890:	682b      	ldr	r3, [r5, #0]
 8003892:	9001      	str	r0, [sp, #4]
 8003894:	4601      	mov	r1, r0
 8003896:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003898:	4628      	mov	r0, r5
 800389a:	4798      	blx	r3
 800389c:	682b      	ldr	r3, [r5, #0]
 800389e:	9901      	ldr	r1, [sp, #4]
 80038a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038a2:	4604      	mov	r4, r0
 80038a4:	4628      	mov	r0, r5
 80038a6:	4798      	blx	r3
 80038a8:	682b      	ldr	r3, [r5, #0]
 80038aa:	9901      	ldr	r1, [sp, #4]
 80038ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038ae:	fb14 f400 	smulbb	r4, r4, r0
 80038b2:	4628      	mov	r0, r5
 80038b4:	4798      	blx	r3
 80038b6:	b2e4      	uxtb	r4, r4
 80038b8:	4404      	add	r4, r0
 80038ba:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80038be:	b002      	add	sp, #8
 80038c0:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 80038c2:	2300      	movs	r3, #0
 80038c4:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 80038c8:	e7f9      	b.n	80038be <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 80038ca:	bf00      	nop
 80038cc:	2001e234 	.word	0x2001e234
 80038d0:	2001e230 	.word	0x2001e230
 80038d4:	0802f6d0 	.word	0x0802f6d0
 80038d8:	0802f712 	.word	0x0802f712
 80038dc:	0802f740 	.word	0x0802f740
 80038e0:	2001e238 	.word	0x2001e238
 80038e4:	2001e23c 	.word	0x2001e23c

080038e8 <_ZN23DataDisplayListViewBaseC1Ev>:
DataDisplayListViewBase::DataDisplayListViewBase() :
 80038e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038ec:	4604      	mov	r4, r0
 80038ee:	b085      	sub	sp, #20
    buttonCallback(this, &DataDisplayListViewBase::buttonCallbackHandler)
 80038f0:	4625      	mov	r5, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80038f2:	f017 f8a1 	bl	801aa38 <_ZN8touchgfx6ScreenC1Ev>
 80038f6:	2600      	movs	r6, #0
 80038f8:	4b66      	ldr	r3, [pc, #408]	; (8003a94 <_ZN23DataDisplayListViewBaseC1Ev+0x1ac>)
 80038fa:	63e6      	str	r6, [r4, #60]	; 0x3c
 80038fc:	f845 3b40 	str.w	r3, [r5], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003900:	4b65      	ldr	r3, [pc, #404]	; (8003a98 <_ZN23DataDisplayListViewBaseC1Ev+0x1b0>)
          visible(true)
 8003902:	6626      	str	r6, [r4, #96]	; 0x60
 8003904:	e9c4 3610 	strd	r3, r6, [r4, #64]	; 0x40
 8003908:	f44f 7280 	mov.w	r2, #256	; 0x100
 800390c:	23ff      	movs	r3, #255	; 0xff
 800390e:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8003912:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8003916:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800391a:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800391e:	f64f 73ff 	movw	r3, #65535	; 0xffff
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003922:	4a5e      	ldr	r2, [pc, #376]	; (8003a9c <_ZN23DataDisplayListViewBaseC1Ev+0x1b4>)
 8003924:	66e2      	str	r2, [r4, #108]	; 0x6c
 8003926:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800392a:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
    {
        Image::setBitmap(bmp);
 800392e:	a903      	add	r1, sp, #12
 8003930:	f104 0998 	add.w	r9, r4, #152	; 0x98
 8003934:	e9c4 6612 	strd	r6, r6, [r4, #72]	; 0x48
 8003938:	e9c4 6614 	strd	r6, r6, [r4, #80]	; 0x50
 800393c:	e9c4 6616 	strd	r6, r6, [r4, #88]	; 0x58
 8003940:	e9c4 661c 	strd	r6, r6, [r4, #112]	; 0x70
 8003944:	e9c4 661e 	strd	r6, r6, [r4, #120]	; 0x78
 8003948:	e9c4 6620 	strd	r6, r6, [r4, #128]	; 0x80
 800394c:	e9c4 6622 	strd	r6, r6, [r4, #136]	; 0x88
        : color(col)
 8003950:	66a6      	str	r6, [r4, #104]	; 0x68
 8003952:	4650      	mov	r0, sl
 8003954:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003958:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 800395c:	f013 fe41 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003960:	4648      	mov	r0, r9
 8003962:	f013 ff87 	bl	8017874 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003966:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800396a:	4640      	mov	r0, r8
 800396c:	f013 ff82 	bl	8017874 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003970:	4638      	mov	r0, r7
 8003972:	f013 ff7f 	bl	8017874 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003976:	4b4a      	ldr	r3, [pc, #296]	; (8003aa0 <_ZN23DataDisplayListViewBaseC1Ev+0x1b8>)
 8003978:	e9c4 345c 	strd	r3, r4, [r4, #368]	; 0x170
 800397c:	4b49      	ldr	r3, [pc, #292]	; (8003aa4 <_ZN23DataDisplayListViewBaseC1Ev+0x1bc>)
        setXY(x, y);
 800397e:	4632      	mov	r2, r6
 8003980:	e9c4 365e 	strd	r3, r6, [r4, #376]	; 0x178
 8003984:	4631      	mov	r1, r6
 8003986:	4628      	mov	r0, r5
 8003988:	f7ff ff5a 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800398c:	4628      	mov	r0, r5
 800398e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003992:	f7ff fed5 	bl	8003740 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003996:	4628      	mov	r0, r5
 8003998:	21f0      	movs	r1, #240	; 0xf0
 800399a:	f7ff fed3 	bl	8003744 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800399e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80039a2:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 80039a4:	4632      	mov	r2, r6
 80039a6:	4631      	mov	r1, r6
 80039a8:	4650      	mov	r0, sl
 80039aa:	f7ff ff49 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 80039ae:	a903      	add	r1, sp, #12
 80039b0:	4650      	mov	r0, sl
 80039b2:	f8ad 600c 	strh.w	r6, [sp, #12]
 80039b6:	f013 fe14 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    ReactanceGraph.setXY(51, 105);
 80039ba:	4648      	mov	r0, r9
 80039bc:	2269      	movs	r2, #105	; 0x69
 80039be:	2133      	movs	r1, #51	; 0x33
 80039c0:	f7ff ff3e 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 80039c4:	f04f 0b06 	mov.w	fp, #6
 80039c8:	2305      	movs	r3, #5
    ReactanceGraph.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_PRESSED_ID));
 80039ca:	a902      	add	r1, sp, #8
 80039cc:	aa03      	add	r2, sp, #12
 80039ce:	4648      	mov	r0, r9
 80039d0:	f8ad 3008 	strh.w	r3, [sp, #8]
 80039d4:	f8ad b00c 	strh.w	fp, [sp, #12]
 80039d8:	f013 fada 	bl	8016f90 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80039dc:	2210      	movs	r2, #16
 80039de:	f8a4 20d0 	strh.w	r2, [r4, #208]	; 0xd0
        updateTextPosition();
 80039e2:	4648      	mov	r0, r9
 80039e4:	f7ff ff3a 	bl	800385c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80039e8:	f04f 36ff 	mov.w	r6, #4294967295
    ReactanceGraph.setAction(buttonCallback);
 80039ec:	f504 73b8 	add.w	r3, r4, #368	; 0x170
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80039f0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    ResistanceGraph.setXY(51, 36);
 80039f4:	4640      	mov	r0, r8
        colorPressed = col;
 80039f6:	e9c4 6635 	strd	r6, r6, [r4, #212]	; 0xd4
 80039fa:	2224      	movs	r2, #36	; 0x24
 80039fc:	2133      	movs	r1, #51	; 0x33
    ReactanceGraph.setAction(buttonCallback);
 80039fe:	9301      	str	r3, [sp, #4]
    ResistanceGraph.setXY(51, 36);
 8003a00:	f7ff ff1e 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 8003a04:	2305      	movs	r3, #5
    ResistanceGraph.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_PRESSED_ID));
 8003a06:	a902      	add	r1, sp, #8
 8003a08:	aa03      	add	r2, sp, #12
 8003a0a:	4640      	mov	r0, r8
 8003a0c:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003a10:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003a14:	f013 fabc 	bl	8016f90 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003a18:	220f      	movs	r2, #15
 8003a1a:	f8a4 2118 	strh.w	r2, [r4, #280]	; 0x118
        updateTextPosition();
 8003a1e:	4640      	mov	r0, r8
 8003a20:	f7ff ff1c 	bl	800385c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003a24:	9b01      	ldr	r3, [sp, #4]
 8003a26:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
    SaveData.setXY(51, 172);
 8003a2a:	4638      	mov	r0, r7
        colorPressed = col;
 8003a2c:	e9c4 6647 	strd	r6, r6, [r4, #284]	; 0x11c
 8003a30:	22ac      	movs	r2, #172	; 0xac
 8003a32:	2133      	movs	r1, #51	; 0x33
 8003a34:	f7ff ff04 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    SaveData.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_PRESSED_ID));
 8003a38:	aa03      	add	r2, sp, #12
 8003a3a:	a902      	add	r1, sp, #8
 8003a3c:	2305      	movs	r3, #5
 8003a3e:	4638      	mov	r0, r7
 8003a40:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003a44:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003a48:	f013 faa2 	bl	8016f90 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003a4c:	230e      	movs	r3, #14
 8003a4e:	f8a4 3160 	strh.w	r3, [r4, #352]	; 0x160
        updateTextPosition();
 8003a52:	4638      	mov	r0, r7
 8003a54:	f7ff ff02 	bl	800385c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003a58:	9b01      	ldr	r3, [sp, #4]
 8003a5a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003a5e:	1d20      	adds	r0, r4, #4
 8003a60:	4629      	mov	r1, r5
        colorPressed = col;
 8003a62:	e9c4 6659 	strd	r6, r6, [r4, #356]	; 0x164
 8003a66:	9001      	str	r0, [sp, #4]
 8003a68:	f00e f9f8 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003a6c:	9801      	ldr	r0, [sp, #4]
 8003a6e:	4651      	mov	r1, sl
 8003a70:	f00e f9f4 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003a74:	9801      	ldr	r0, [sp, #4]
 8003a76:	4649      	mov	r1, r9
 8003a78:	f00e f9f0 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003a7c:	9801      	ldr	r0, [sp, #4]
 8003a7e:	4641      	mov	r1, r8
 8003a80:	f00e f9ec 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003a84:	9801      	ldr	r0, [sp, #4]
 8003a86:	4639      	mov	r1, r7
 8003a88:	f00e f9e8 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003a8c:	4620      	mov	r0, r4
 8003a8e:	b005      	add	sp, #20
 8003a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a94:	0802f7a8 	.word	0x0802f7a8
 8003a98:	08034824 	.word	0x08034824
 8003a9c:	08034a04 	.word	0x08034a04
 8003aa0:	0802f790 	.word	0x0802f790
 8003aa4:	08003801 	.word	0x08003801

08003aa8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8003aa8:	4770      	bx	lr

08003aaa <_ZN17DataSavedViewBaseD1Ev>:

class DataSavedViewBase : public touchgfx::View<DataSavedPresenter>
{
public:
    DataSavedViewBase();
    virtual ~DataSavedViewBase() {}
 8003aaa:	4770      	bx	lr

08003aac <_ZN17DataSavedViewBase11setupScreenEv>:
}

void DataSavedViewBase::setupScreen()
{

}
 8003aac:	4770      	bx	lr

08003aae <_ZN8touchgfx8CallbackI17DataSavedViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003aae:	4770      	bx	lr

08003ab0 <_ZN8touchgfx8CallbackI17DataSavedViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003ab0:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003ab2:	68c2      	ldr	r2, [r0, #12]
 8003ab4:	6844      	ldr	r4, [r0, #4]
 8003ab6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003ab8:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003aba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003abe:	07d2      	lsls	r2, r2, #31
 8003ac0:	bf48      	it	mi
 8003ac2:	5962      	ldrmi	r2, [r4, r5]
 8003ac4:	689b      	ldr	r3, [r3, #8]
    }
 8003ac6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003ac8:	bf48      	it	mi
 8003aca:	58d3      	ldrmi	r3, [r2, r3]
 8003acc:	4718      	bx	r3

08003ace <_ZNK8touchgfx8CallbackI17DataSavedViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003ace:	6843      	ldr	r3, [r0, #4]
 8003ad0:	b12b      	cbz	r3, 8003ade <_ZNK8touchgfx8CallbackI17DataSavedViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003ad2:	6883      	ldr	r3, [r0, #8]
 8003ad4:	b92b      	cbnz	r3, 8003ae2 <_ZNK8touchgfx8CallbackI17DataSavedViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003ad6:	68c0      	ldr	r0, [r0, #12]
 8003ad8:	f000 0001 	and.w	r0, r0, #1
 8003adc:	4770      	bx	lr
 8003ade:	4618      	mov	r0, r3
 8003ae0:	4770      	bx	lr
 8003ae2:	2001      	movs	r0, #1
    }
 8003ae4:	4770      	bx	lr

08003ae6 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8003ae6:	b510      	push	{r4, lr}
    }
 8003ae8:	2108      	movs	r1, #8
    virtual ~TypedText()
 8003aea:	4604      	mov	r4, r0
    }
 8003aec:	f027 fb1d 	bl	802b12a <_ZdlPvj>
 8003af0:	4620      	mov	r0, r4
 8003af2:	bd10      	pop	{r4, pc}

08003af4 <_ZN8touchgfx8CallbackI17DataSavedViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003af4:	b510      	push	{r4, lr}
 8003af6:	2110      	movs	r1, #16
 8003af8:	4604      	mov	r4, r0
 8003afa:	f027 fb16 	bl	802b12a <_ZdlPvj>
 8003afe:	4620      	mov	r0, r4
 8003b00:	bd10      	pop	{r4, pc}

08003b02 <_ZN17DataSavedViewBaseD0Ev>:
 8003b02:	b510      	push	{r4, lr}
 8003b04:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8003b08:	4604      	mov	r4, r0
 8003b0a:	f027 fb0e 	bl	802b12a <_ZdlPvj>
 8003b0e:	4620      	mov	r0, r4
 8003b10:	bd10      	pop	{r4, pc}

08003b12 <_ZN17DataSavedViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void DataSavedViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &NextButton4)
 8003b12:	f500 7086 	add.w	r0, r0, #268	; 0x10c
 8003b16:	4288      	cmp	r0, r1
{
 8003b18:	b508      	push	{r3, lr}
    if (&src == &NextButton4)
 8003b1a:	d105      	bne.n	8003b28 <_ZN17DataSavedViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003b1c:	f015 fc1c 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When NextButton4 clicked change screen to FinishPage
        //Go to FinishPage with block transition
        application().gotoFinishPageScreenBlockTransition();
    }
}
 8003b20:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoFinishPageScreenBlockTransition();
 8003b24:	f001 b884 	b.w	8004c30 <_ZN23FrontendApplicationBase35gotoFinishPageScreenBlockTransitionEv>
}
 8003b28:	bd08      	pop	{r3, pc}
	...

08003b2c <_ZN8touchgfx6WidgetC1Ev>:
        : x(0), y(0), width(0), height(0)
 8003b2c:	2200      	movs	r2, #0
 8003b2e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003b32:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8003b36:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003b3a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003b3e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003b42:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003b44:	4a01      	ldr	r2, [pc, #4]	; (8003b4c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8003b46:	6002      	str	r2, [r0, #0]
 8003b48:	4770      	bx	lr
 8003b4a:	bf00      	nop
 8003b4c:	0802f7dc 	.word	0x0802f7dc

08003b50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8003b50:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8003b52:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8003b54:	4604      	mov	r4, r0
 8003b56:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8003b58:	2100      	movs	r1, #0
 8003b5a:	f028 fbb9 	bl	802c2d0 <memset>
 8003b5e:	4620      	mov	r0, r4
 8003b60:	f7ff ffe4 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8003b64:	4b06      	ldr	r3, [pc, #24]	; (8003b80 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8003b66:	6023      	str	r3, [r4, #0]
 8003b68:	882b      	ldrh	r3, [r5, #0]
 8003b6a:	84e3      	strh	r3, [r4, #38]	; 0x26
 8003b6c:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8003b6e:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8003b70:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8003b74:	4629      	mov	r1, r5
 8003b76:	f013 fd34 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8003b7a:	4620      	mov	r0, r4
 8003b7c:	bd38      	pop	{r3, r4, r5, pc}
 8003b7e:	bf00      	nop
 8003b80:	08034a04 	.word	0x08034a04

08003b84 <_ZN17DataSavedViewBaseC1Ev>:
DataSavedViewBase::DataSavedViewBase() :
 8003b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b88:	4604      	mov	r4, r0
 8003b8a:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &DataSavedViewBase::buttonCallbackHandler)
 8003b8c:	4626      	mov	r6, r4
 8003b8e:	2500      	movs	r5, #0
 8003b90:	f016 ff52 	bl	801aa38 <_ZN8touchgfx6ScreenC1Ev>
 8003b94:	4b67      	ldr	r3, [pc, #412]	; (8003d34 <_ZN17DataSavedViewBaseC1Ev+0x1b0>)
 8003b96:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003b98:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8003b9c:	2226      	movs	r2, #38	; 0x26
 8003b9e:	4629      	mov	r1, r5
 8003ba0:	4630      	mov	r0, r6
 8003ba2:	f028 fb95 	bl	802c2d0 <memset>
 8003ba6:	4630      	mov	r0, r6
 8003ba8:	f7ff ffc0 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8003bac:	4b62      	ldr	r3, [pc, #392]	; (8003d38 <_ZN17DataSavedViewBaseC1Ev+0x1b4>)
 8003bae:	6423      	str	r3, [r4, #64]	; 0x40
 8003bb0:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8003bb4:	23ff      	movs	r3, #255	; 0xff
 8003bb6:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8003bba:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8003bbe:	f104 0a98 	add.w	sl, r4, #152	; 0x98
 8003bc2:	f64f 79ff 	movw	r9, #65535	; 0xffff
        : color(col)
 8003bc6:	66a5      	str	r5, [r4, #104]	; 0x68
 8003bc8:	4641      	mov	r1, r8
 8003bca:	4658      	mov	r0, fp
 8003bcc:	f104 07c4 	add.w	r7, r4, #196	; 0xc4
 8003bd0:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 8003bd4:	f7ff ffbc 	bl	8003b50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003bd8:	4641      	mov	r1, r8
 8003bda:	4650      	mov	r0, sl
 8003bdc:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 8003be0:	f7ff ffb6 	bl	8003b50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003be4:	4629      	mov	r1, r5
 8003be6:	2226      	movs	r2, #38	; 0x26
 8003be8:	4638      	mov	r0, r7
 8003bea:	f028 fb71 	bl	802c2d0 <memset>
 8003bee:	4638      	mov	r0, r7
 8003bf0:	f7ff ff9c 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8003bf4:	4b51      	ldr	r3, [pc, #324]	; (8003d3c <_ZN17DataSavedViewBaseC1Ev+0x1b8>)
 8003bf6:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 8003bfa:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
        : typedTextId(id)
 8003bfe:	4b50      	ldr	r3, [pc, #320]	; (8003d40 <_ZN17DataSavedViewBaseC1Ev+0x1bc>)
 8003c00:	f8a4 90f0 	strh.w	r9, [r4, #240]	; 0xf0
 8003c04:	f8c4 20f8 	str.w	r2, [r4, #248]	; 0xf8
 8003c08:	f504 7986 	add.w	r9, r4, #268	; 0x10c
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 8003c0c:	f04f 32ff 	mov.w	r2, #4294967295
 8003c10:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8003c14:	e9c4 2541 	strd	r2, r5, [r4, #260]	; 0x104
        : color(col)
 8003c18:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003c1c:	f8a4 50fc 	strh.w	r5, [r4, #252]	; 0xfc
        : x(x), y(y), width(width), height(height)
 8003c20:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8003c24:	4648      	mov	r0, r9
 8003c26:	f013 fcb5 	bl	8017594 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003c2a:	4a46      	ldr	r2, [pc, #280]	; (8003d44 <_ZN17DataSavedViewBaseC1Ev+0x1c0>)
 8003c2c:	e9c4 2452 	strd	r2, r4, [r4, #328]	; 0x148
 8003c30:	4a45      	ldr	r2, [pc, #276]	; (8003d48 <_ZN17DataSavedViewBaseC1Ev+0x1c4>)
        setXY(x, y);
 8003c32:	4629      	mov	r1, r5
 8003c34:	e9c4 2554 	strd	r2, r5, [r4, #336]	; 0x150
 8003c38:	4630      	mov	r0, r6
 8003c3a:	462a      	mov	r2, r5
 8003c3c:	f7ff fe00 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003c40:	4630      	mov	r0, r6
 8003c42:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003c46:	f7ff fd7b 	bl	8003740 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003c4a:	4630      	mov	r0, r6
 8003c4c:	21f0      	movs	r1, #240	; 0xf0
 8003c4e:	f7ff fd79 	bl	8003744 <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 8003c52:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8003c56:	66a2      	str	r2, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 8003c58:	4629      	mov	r1, r5
 8003c5a:	462a      	mov	r2, r5
 8003c5c:	4658      	mov	r0, fp
 8003c5e:	f7ff fdef 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 8003c62:	4641      	mov	r1, r8
 8003c64:	4658      	mov	r0, fp
 8003c66:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 8003c6a:	f013 fcba 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image2.setXY(69, 76);
 8003c6e:	4650      	mov	r0, sl
 8003c70:	224c      	movs	r2, #76	; 0x4c
 8003c72:	2145      	movs	r1, #69	; 0x45
 8003c74:	f7ff fde4 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 8003c78:	2207      	movs	r2, #7
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_MARK_ACTIVE_ID));
 8003c7a:	4641      	mov	r1, r8
 8003c7c:	4650      	mov	r0, sl
 8003c7e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8003c82:	f013 fcae 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textArea1.setXY(124, 91);
 8003c86:	4638      	mov	r0, r7
 8003c88:	225b      	movs	r2, #91	; 0x5b
 8003c8a:	217c      	movs	r1, #124	; 0x7c
 8003c8c:	f7ff fdd8 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8003c90:	4a2e      	ldr	r2, [pc, #184]	; (8003d4c <_ZN17DataSavedViewBaseC1Ev+0x1c8>)
        linespace = space;
 8003c92:	f8a4 50f8 	strh.w	r5, [r4, #248]	; 0xf8
        boundingArea = calculateBoundingArea();
 8003c96:	ad04      	add	r5, sp, #16
        this->color = color;
 8003c98:	f8c4 20f4 	str.w	r2, [r4, #244]	; 0xf4
        boundingArea = calculateBoundingArea();
 8003c9c:	4639      	mov	r1, r7
 8003c9e:	4628      	mov	r0, r5
 8003ca0:	f012 fdd6 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003ca4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ca8:	f504 7c80 	add.w	ip, r4, #256	; 0x100
 8003cac:	4b24      	ldr	r3, [pc, #144]	; (8003d40 <_ZN17DataSavedViewBaseC1Ev+0x1bc>)
 8003cae:	930c      	str	r3, [sp, #48]	; 0x30
 8003cb0:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8003cb4:	230c      	movs	r3, #12
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EBKP));
 8003cb6:	4641      	mov	r1, r8
 8003cb8:	4638      	mov	r0, r7
 8003cba:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8003cbe:	f013 f90d 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    NextButton4.setXY(130, 180);
 8003cc2:	4648      	mov	r0, r9
 8003cc4:	22b4      	movs	r2, #180	; 0xb4
 8003cc6:	2182      	movs	r1, #130	; 0x82
 8003cc8:	f7ff fdba 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 8003ccc:	2303      	movs	r3, #3
 8003cce:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003cd2:	2304      	movs	r3, #4
 8003cd4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003cd8:	2308      	movs	r3, #8
    NextButton4.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID));
 8003cda:	aa0a      	add	r2, sp, #40	; 0x28
 8003cdc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003ce0:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8003ce4:	a909      	add	r1, sp, #36	; 0x24
 8003ce6:	ab0b      	add	r3, sp, #44	; 0x2c
 8003ce8:	4648      	mov	r0, r9
 8003cea:	f8cd 8000 	str.w	r8, [sp]
 8003cee:	f013 fbae 	bl	801744e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8003cf2:	4b17      	ldr	r3, [pc, #92]	; (8003d50 <_ZN17DataSavedViewBaseC1Ev+0x1cc>)
 8003cf4:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
    NextButton4.setAction(buttonCallback);
 8003cf8:	f504 73a4 	add.w	r3, r4, #328	; 0x148
 8003cfc:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
 8003d00:	1d20      	adds	r0, r4, #4
 8003d02:	4631      	mov	r1, r6
 8003d04:	9003      	str	r0, [sp, #12]
 8003d06:	f00e f8a9 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d0a:	9803      	ldr	r0, [sp, #12]
 8003d0c:	4659      	mov	r1, fp
 8003d0e:	f00e f8a5 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d12:	9803      	ldr	r0, [sp, #12]
 8003d14:	4651      	mov	r1, sl
 8003d16:	f00e f8a1 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d1a:	9803      	ldr	r0, [sp, #12]
 8003d1c:	4639      	mov	r1, r7
 8003d1e:	f00e f89d 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d22:	9803      	ldr	r0, [sp, #12]
 8003d24:	4649      	mov	r1, r9
 8003d26:	f00e f899 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003d2a:	4620      	mov	r0, r4
 8003d2c:	b00f      	add	sp, #60	; 0x3c
 8003d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d32:	bf00      	nop
 8003d34:	0802f86c 	.word	0x0802f86c
 8003d38:	08034824 	.word	0x08034824
 8003d3c:	08034764 	.word	0x08034764
 8003d40:	0802f844 	.word	0x0802f844
 8003d44:	0802f854 	.word	0x0802f854
 8003d48:	08003b13 	.word	0x08003b13
 8003d4c:	ffff0000 	.word	0xffff0000
 8003d50:	0016000f 	.word	0x0016000f

08003d54 <_ZN18FinishPageViewBaseD1Ev>:

class FinishPageViewBase : public touchgfx::View<FinishPagePresenter>
{
public:
    FinishPageViewBase();
    virtual ~FinishPageViewBase() {}
 8003d54:	4770      	bx	lr

08003d56 <_ZN18FinishPageViewBase8PowerOffEv>:
     * Virtual Action Handlers
     */
    virtual void PowerOff()
    {
        // Override and implement this function in FinishPage
    }
 8003d56:	4770      	bx	lr

08003d58 <_ZN18FinishPageViewBase11setupScreenEv>:
}

void FinishPageViewBase::setupScreen()
{

}
 8003d58:	4770      	bx	lr

08003d5a <_ZN8touchgfx8CallbackI18FinishPageViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d5a:	4770      	bx	lr

08003d5c <_ZN8touchgfx8CallbackI18FinishPageViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003d5c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003d5e:	68c2      	ldr	r2, [r0, #12]
 8003d60:	6844      	ldr	r4, [r0, #4]
 8003d62:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003d64:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003d66:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003d6a:	07d2      	lsls	r2, r2, #31
 8003d6c:	bf48      	it	mi
 8003d6e:	5962      	ldrmi	r2, [r4, r5]
 8003d70:	689b      	ldr	r3, [r3, #8]
    }
 8003d72:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003d74:	bf48      	it	mi
 8003d76:	58d3      	ldrmi	r3, [r2, r3]
 8003d78:	4718      	bx	r3

08003d7a <_ZNK8touchgfx8CallbackI18FinishPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003d7a:	6843      	ldr	r3, [r0, #4]
 8003d7c:	b12b      	cbz	r3, 8003d8a <_ZNK8touchgfx8CallbackI18FinishPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003d7e:	6883      	ldr	r3, [r0, #8]
 8003d80:	b92b      	cbnz	r3, 8003d8e <_ZNK8touchgfx8CallbackI18FinishPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003d82:	68c0      	ldr	r0, [r0, #12]
 8003d84:	f000 0001 	and.w	r0, r0, #1
 8003d88:	4770      	bx	lr
 8003d8a:	4618      	mov	r0, r3
 8003d8c:	4770      	bx	lr
 8003d8e:	2001      	movs	r0, #1
    }
 8003d90:	4770      	bx	lr

08003d92 <_ZN8touchgfx8CallbackI18FinishPageViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d92:	b510      	push	{r4, lr}
 8003d94:	2110      	movs	r1, #16
 8003d96:	4604      	mov	r4, r0
 8003d98:	f027 f9c7 	bl	802b12a <_ZdlPvj>
 8003d9c:	4620      	mov	r0, r4
 8003d9e:	bd10      	pop	{r4, pc}

08003da0 <_ZN18FinishPageViewBaseD0Ev>:
    virtual ~FinishPageViewBase() {}
 8003da0:	b510      	push	{r4, lr}
 8003da2:	f44f 71c0 	mov.w	r1, #384	; 0x180
 8003da6:	4604      	mov	r4, r0
 8003da8:	f027 f9bf 	bl	802b12a <_ZdlPvj>
 8003dac:	4620      	mov	r0, r4
 8003dae:	bd10      	pop	{r4, pc}

08003db0 <_ZN18FinishPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void FinishPageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ReturnToDataList)
 8003db0:	f100 0298 	add.w	r2, r0, #152	; 0x98
 8003db4:	4291      	cmp	r1, r2
{
 8003db6:	b510      	push	{r4, lr}
    if (&src == &ReturnToDataList)
 8003db8:	d105      	bne.n	8003dc6 <_ZN18FinishPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003dba:	f015 facd 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When TurnOff clicked call virtual function
        //Call PowerOff
        PowerOff();
    }
}
 8003dbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoDataDisplayListScreenSlideTransitionSouth();
 8003dc2:	f000 bef5 	b.w	8004bb0 <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionSouthEv>
    else if (&src == &StartNewMeas)
 8003dc6:	f100 02e0 	add.w	r2, r0, #224	; 0xe0
 8003dca:	4291      	cmp	r1, r2
 8003dcc:	d105      	bne.n	8003dda <_ZN18FinishPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
 8003dce:	f015 fac3 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003dd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoInstructionPage1ScreenSlideTransitionSouth();
 8003dd6:	f000 be5b 	b.w	8004a90 <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionSouthEv>
    else if (&src == &TurnOff)
 8003dda:	f500 7294 	add.w	r2, r0, #296	; 0x128
 8003dde:	4291      	cmp	r1, r2
 8003de0:	d104      	bne.n	8003dec <_ZN18FinishPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c>
        PowerOff();
 8003de2:	6803      	ldr	r3, [r0, #0]
}
 8003de4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        PowerOff();
 8003de8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003dea:	4718      	bx	r3
}
 8003dec:	bd10      	pop	{r4, pc}
	...

08003df0 <_ZN18FinishPageViewBaseC1Ev>:
FinishPageViewBase::FinishPageViewBase() :
 8003df0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003df4:	4604      	mov	r4, r0
 8003df6:	b085      	sub	sp, #20
    buttonCallback(this, &FinishPageViewBase::buttonCallbackHandler)
 8003df8:	4625      	mov	r5, r4
 8003dfa:	f016 fe1d 	bl	801aa38 <_ZN8touchgfx6ScreenC1Ev>
 8003dfe:	2600      	movs	r6, #0
 8003e00:	4b66      	ldr	r3, [pc, #408]	; (8003f9c <_ZN18FinishPageViewBaseC1Ev+0x1ac>)
 8003e02:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003e04:	f845 3b40 	str.w	r3, [r5], #64
        : Widget(), alpha(255), color(0)
 8003e08:	4b65      	ldr	r3, [pc, #404]	; (8003fa0 <_ZN18FinishPageViewBaseC1Ev+0x1b0>)
          visible(true)
 8003e0a:	6626      	str	r6, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8003e0c:	e9c4 3610 	strd	r3, r6, [r4, #64]	; 0x40
 8003e10:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003e14:	23ff      	movs	r3, #255	; 0xff
 8003e16:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8003e1a:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8003e1e:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8003e22:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8003e26:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8003e2a:	4a5e      	ldr	r2, [pc, #376]	; (8003fa4 <_ZN18FinishPageViewBaseC1Ev+0x1b4>)
 8003e2c:	66e2      	str	r2, [r4, #108]	; 0x6c
 8003e2e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8003e32:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003e36:	a903      	add	r1, sp, #12
 8003e38:	f104 0998 	add.w	r9, r4, #152	; 0x98
 8003e3c:	e9c4 6612 	strd	r6, r6, [r4, #72]	; 0x48
 8003e40:	e9c4 6614 	strd	r6, r6, [r4, #80]	; 0x50
 8003e44:	e9c4 6616 	strd	r6, r6, [r4, #88]	; 0x58
 8003e48:	e9c4 661c 	strd	r6, r6, [r4, #112]	; 0x70
 8003e4c:	e9c4 661e 	strd	r6, r6, [r4, #120]	; 0x78
 8003e50:	e9c4 6620 	strd	r6, r6, [r4, #128]	; 0x80
 8003e54:	e9c4 6622 	strd	r6, r6, [r4, #136]	; 0x88
        : color(col)
 8003e58:	66a6      	str	r6, [r4, #104]	; 0x68
 8003e5a:	4650      	mov	r0, sl
 8003e5c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003e60:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8003e64:	f013 fbbd 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003e68:	4648      	mov	r0, r9
 8003e6a:	f013 fd03 	bl	8017874 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003e6e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8003e72:	4640      	mov	r0, r8
 8003e74:	f013 fcfe 	bl	8017874 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003e78:	4638      	mov	r0, r7
 8003e7a:	f013 fcfb 	bl	8017874 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003e7e:	4b4a      	ldr	r3, [pc, #296]	; (8003fa8 <_ZN18FinishPageViewBaseC1Ev+0x1b8>)
 8003e80:	e9c4 345c 	strd	r3, r4, [r4, #368]	; 0x170
 8003e84:	4b49      	ldr	r3, [pc, #292]	; (8003fac <_ZN18FinishPageViewBaseC1Ev+0x1bc>)
        setXY(x, y);
 8003e86:	4632      	mov	r2, r6
 8003e88:	e9c4 365e 	strd	r3, r6, [r4, #376]	; 0x178
 8003e8c:	4631      	mov	r1, r6
 8003e8e:	4628      	mov	r0, r5
 8003e90:	f7ff fcd6 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003e94:	4628      	mov	r0, r5
 8003e96:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003e9a:	f7ff fc51 	bl	8003740 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003e9e:	4628      	mov	r0, r5
 8003ea0:	21f0      	movs	r1, #240	; 0xf0
 8003ea2:	f7ff fc4f 	bl	8003744 <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 8003ea6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003eaa:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 8003eac:	4632      	mov	r2, r6
 8003eae:	4631      	mov	r1, r6
 8003eb0:	4650      	mov	r0, sl
 8003eb2:	f7ff fcc5 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 8003eb6:	a903      	add	r1, sp, #12
 8003eb8:	4650      	mov	r0, sl
 8003eba:	f8ad 600c 	strh.w	r6, [sp, #12]
 8003ebe:	f013 fb90 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    ReturnToDataList.setXY(45, 42);
 8003ec2:	4648      	mov	r0, r9
 8003ec4:	222a      	movs	r2, #42	; 0x2a
 8003ec6:	212d      	movs	r1, #45	; 0x2d
 8003ec8:	f7ff fcba 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 8003ecc:	f04f 0b06 	mov.w	fp, #6
 8003ed0:	2305      	movs	r3, #5
    ReturnToDataList.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_PRESSED_ID));
 8003ed2:	a902      	add	r1, sp, #8
 8003ed4:	aa03      	add	r2, sp, #12
 8003ed6:	4648      	mov	r0, r9
 8003ed8:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003edc:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003ee0:	f013 f856 	bl	8016f90 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003ee4:	220b      	movs	r2, #11
 8003ee6:	f8a4 20d0 	strh.w	r2, [r4, #208]	; 0xd0
        updateTextPosition();
 8003eea:	4648      	mov	r0, r9
 8003eec:	f7ff fcb6 	bl	800385c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8003ef0:	f04f 36ff 	mov.w	r6, #4294967295
    ReturnToDataList.setAction(buttonCallback);
 8003ef4:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8003ef8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    StartNewMeas.setXY(45, 102);
 8003efc:	4640      	mov	r0, r8
        colorPressed = col;
 8003efe:	e9c4 6635 	strd	r6, r6, [r4, #212]	; 0xd4
 8003f02:	2266      	movs	r2, #102	; 0x66
 8003f04:	212d      	movs	r1, #45	; 0x2d
    ReturnToDataList.setAction(buttonCallback);
 8003f06:	9301      	str	r3, [sp, #4]
    StartNewMeas.setXY(45, 102);
 8003f08:	f7ff fc9a 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 8003f0c:	2305      	movs	r3, #5
    StartNewMeas.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_PRESSED_ID));
 8003f0e:	a902      	add	r1, sp, #8
 8003f10:	aa03      	add	r2, sp, #12
 8003f12:	4640      	mov	r0, r8
 8003f14:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003f18:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003f1c:	f013 f838 	bl	8016f90 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003f20:	220a      	movs	r2, #10
 8003f22:	f8a4 2118 	strh.w	r2, [r4, #280]	; 0x118
        updateTextPosition();
 8003f26:	4640      	mov	r0, r8
 8003f28:	f7ff fc98 	bl	800385c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003f2c:	9b01      	ldr	r3, [sp, #4]
 8003f2e:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
    TurnOff.setXY(45, 162);
 8003f32:	4638      	mov	r0, r7
        colorPressed = col;
 8003f34:	e9c4 6647 	strd	r6, r6, [r4, #284]	; 0x11c
 8003f38:	22a2      	movs	r2, #162	; 0xa2
 8003f3a:	212d      	movs	r1, #45	; 0x2d
 8003f3c:	f7ff fc80 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    TurnOff.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_PRESSED_ID));
 8003f40:	aa03      	add	r2, sp, #12
 8003f42:	a902      	add	r1, sp, #8
 8003f44:	2305      	movs	r3, #5
 8003f46:	4638      	mov	r0, r7
 8003f48:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003f4c:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003f50:	f013 f81e 	bl	8016f90 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003f54:	2309      	movs	r3, #9
 8003f56:	f8a4 3160 	strh.w	r3, [r4, #352]	; 0x160
        updateTextPosition();
 8003f5a:	4638      	mov	r0, r7
 8003f5c:	f7ff fc7e 	bl	800385c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003f60:	9b01      	ldr	r3, [sp, #4]
 8003f62:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 8003f66:	1d20      	adds	r0, r4, #4
 8003f68:	4629      	mov	r1, r5
        colorPressed = col;
 8003f6a:	e9c4 6659 	strd	r6, r6, [r4, #356]	; 0x164
 8003f6e:	9001      	str	r0, [sp, #4]
 8003f70:	f00d ff74 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f74:	9801      	ldr	r0, [sp, #4]
 8003f76:	4651      	mov	r1, sl
 8003f78:	f00d ff70 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f7c:	9801      	ldr	r0, [sp, #4]
 8003f7e:	4649      	mov	r1, r9
 8003f80:	f00d ff6c 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f84:	9801      	ldr	r0, [sp, #4]
 8003f86:	4641      	mov	r1, r8
 8003f88:	f00d ff68 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f8c:	9801      	ldr	r0, [sp, #4]
 8003f8e:	4639      	mov	r1, r7
 8003f90:	f00d ff64 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003f94:	4620      	mov	r0, r4
 8003f96:	b005      	add	sp, #20
 8003f98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003f9c:	0802f8b8 	.word	0x0802f8b8
 8003fa0:	08034824 	.word	0x08034824
 8003fa4:	08034a04 	.word	0x08034a04
 8003fa8:	0802f8a0 	.word	0x0802f8a0
 8003fac:	08003db1 	.word	0x08003db1

08003fb0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003fb0:	4770      	bx	lr

08003fb2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8003fb2:	4770      	bx	lr

08003fb4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003fb4:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8003fb8:	6808      	ldr	r0, [r1, #0]
 8003fba:	6849      	ldr	r1, [r1, #4]
 8003fbc:	c303      	stmia	r3!, {r0, r1}
    }
 8003fbe:	4770      	bx	lr

08003fc0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003fc0:	4770      	bx	lr

08003fc2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003fc2:	4770      	bx	lr

08003fc4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003fc4:	6041      	str	r1, [r0, #4]
    }
 8003fc6:	4770      	bx	lr

08003fc8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003fc8:	4770      	bx	lr
	...

08003fcc <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003fcc:	4b06      	ldr	r3, [pc, #24]	; (8003fe8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003fce:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8003fd2:	2300      	movs	r3, #0
 8003fd4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// StartPage

void FrontendApplicationBase::gotoStartPageScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoStartPageScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003fd8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8003fdc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8003fe0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoStartPageScreenNoTransition();
    }
 8003fe4:	4770      	bx	lr
 8003fe6:	bf00      	nop
 8003fe8:	08004869 	.word	0x08004869

08003fec <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003fec:	2301      	movs	r3, #1
 8003fee:	7203      	strb	r3, [r0, #8]
    }
 8003ff0:	4770      	bx	lr

08003ff2 <_ZN8touchgfx15BlockTransition8tearDownEv>:
        }
    }

    virtual void tearDown()
    {
    }
 8003ff2:	4770      	bx	lr

08003ff4 <_ZN8touchgfx15BlockTransition4initEv>:

    virtual void init()
    {
        Transition::init();
    }
 8003ff4:	4770      	bx	lr

08003ff6 <_ZN8touchgfx15BlockTransition10invalidateEv>:
     * Block transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003ff6:	4770      	bx	lr

08003ff8 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE0EEERNS_8DrawableEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003ff8:	4770      	bx	lr

08003ffa <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE1EEERNS_8DrawableEvvED1Ev>:
 8003ffa:	4770      	bx	lr

08003ffc <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED1Ev>:
 8003ffc:	4770      	bx	lr

08003ffe <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvED1Ev>:
 8003ffe:	4770      	bx	lr

08004000 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE16tickMoveDrawableERNS_8DrawableE>:
    /**
     * Moves the Drawable.
     *
     * @param [in] d The Drawable to move.
     */
    virtual void tickMoveDrawable(Drawable& d)
 8004000:	4603      	mov	r3, r0
 8004002:	b410      	push	{r4}
    {
        if (&d == snapshotPtr)
 8004004:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004006:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 8004008:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 800400a:	d008      	beq.n	800401e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE16tickMoveDrawableERNS_8DrawableE+0x1e>
        case WEST:
            d.moveRelative(calculatedValue, 0);
            break;
        case NORTH:
        case SOUTH:
            d.moveRelative(0, calculatedValue);
 800400c:	680a      	ldr	r2, [r1, #0]
 800400e:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8004010:	f9b3 2050 	ldrsh.w	r2, [r3, #80]	; 0x50
 8004014:	2100      	movs	r1, #0
 8004016:	4623      	mov	r3, r4
        default:
            // Special case, do not move. Class NoTransition can be used instead.
            done = true;
            break;
        }
    }
 8004018:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(0, calculatedValue);
 800401c:	4718      	bx	r3
    }
 800401e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004022:	4770      	bx	lr

08004024 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE16tickMoveDrawableERNS_8DrawableE>:
    virtual void tickMoveDrawable(Drawable& d)
 8004024:	4603      	mov	r3, r0
 8004026:	b410      	push	{r4}
        if (&d == snapshotPtr)
 8004028:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800402a:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 800402c:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 800402e:	d008      	beq.n	8004042 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE16tickMoveDrawableERNS_8DrawableE+0x1e>
            d.moveRelative(0, calculatedValue);
 8004030:	680a      	ldr	r2, [r1, #0]
 8004032:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8004034:	f9b3 2050 	ldrsh.w	r2, [r3, #80]	; 0x50
 8004038:	2100      	movs	r1, #0
 800403a:	4623      	mov	r3, r4
    }
 800403c:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(0, calculatedValue);
 8004040:	4718      	bx	r3
    }
 8004042:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004046:	4770      	bx	lr

08004048 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE>:
    virtual void tickMoveDrawable(Drawable& d)
 8004048:	4603      	mov	r3, r0
 800404a:	b410      	push	{r4}
        if (&d == snapshotPtr)
 800404c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800404e:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 8004050:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 8004052:	d008      	beq.n	8004066 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE+0x1e>
            d.moveRelative(calculatedValue, 0);
 8004054:	680a      	ldr	r2, [r1, #0]
 8004056:	f9b3 1050 	ldrsh.w	r1, [r3, #80]	; 0x50
 800405a:	6d54      	ldr	r4, [r2, #84]	; 0x54
 800405c:	2200      	movs	r2, #0
 800405e:	4623      	mov	r3, r4
    }
 8004060:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(calculatedValue, 0);
 8004064:	4718      	bx	r3
    }
 8004066:	f85d 4b04 	ldr.w	r4, [sp], #4
 800406a:	4770      	bx	lr

0800406c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE>:
    virtual void tickMoveDrawable(Drawable& d)
 800406c:	4603      	mov	r3, r0
 800406e:	b410      	push	{r4}
        if (&d == snapshotPtr)
 8004070:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004072:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 8004074:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 8004076:	d008      	beq.n	800408a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE+0x1e>
            d.moveRelative(calculatedValue, 0);
 8004078:	680a      	ldr	r2, [r1, #0]
 800407a:	f9b3 1050 	ldrsh.w	r1, [r3, #80]	; 0x50
 800407e:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8004080:	2200      	movs	r2, #0
 8004082:	4623      	mov	r3, r4
    }
 8004084:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(calculatedValue, 0);
 8004088:	4718      	bx	r3
    }
 800408a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800408e:	4770      	bx	lr

08004090 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EED1Ev>:
class SlideTransition : public Transition
 8004090:	4770      	bx	lr

08004092 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EED1Ev>:
 8004092:	4770      	bx	lr

08004094 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
 8004094:	4770      	bx	lr

08004096 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 8004096:	4770      	bx	lr

08004098 <_ZN8touchgfx15BlockTransitionD1Ev>:
class BlockTransition : public Transition
 8004098:	4770      	bx	lr

0800409a <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800409a:	4770      	bx	lr

0800409c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800409c:	4770      	bx	lr
	...

080040a0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(0, -HAL::DISPLAY_HEIGHT);
 80040a0:	4b04      	ldr	r3, [pc, #16]	; (80040b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE16initMoveDrawableERNS_8DrawableE+0x14>)
 80040a2:	881a      	ldrh	r2, [r3, #0]
 80040a4:	680b      	ldr	r3, [r1, #0]
 80040a6:	4252      	negs	r2, r2
    virtual void initMoveDrawable(Drawable& d)
 80040a8:	4608      	mov	r0, r1
            d.moveRelative(0, -HAL::DISPLAY_HEIGHT);
 80040aa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80040ac:	b212      	sxth	r2, r2
 80040ae:	2100      	movs	r1, #0
 80040b0:	4718      	bx	r3
 80040b2:	bf00      	nop
 80040b4:	2001e1b6 	.word	0x2001e1b6

080040b8 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE0EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 80040b8:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80040ba:	68c2      	ldr	r2, [r0, #12]
 80040bc:	6844      	ldr	r4, [r0, #4]
 80040be:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80040c0:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80040c2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80040c6:	07d2      	lsls	r2, r2, #31
 80040c8:	bf48      	it	mi
 80040ca:	5962      	ldrmi	r2, [r4, r5]
 80040cc:	689b      	ldr	r3, [r3, #8]
    }
 80040ce:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80040d0:	bf48      	it	mi
 80040d2:	58d3      	ldrmi	r3, [r2, r3]
 80040d4:	4718      	bx	r3

080040d6 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE0EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80040d6:	6843      	ldr	r3, [r0, #4]
 80040d8:	b12b      	cbz	r3, 80040e6 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE0EEERNS_8DrawableEvvE7isValidEv+0x10>
 80040da:	6883      	ldr	r3, [r0, #8]
 80040dc:	b92b      	cbnz	r3, 80040ea <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE0EEERNS_8DrawableEvvE7isValidEv+0x14>
 80040de:	68c0      	ldr	r0, [r0, #12]
 80040e0:	f000 0001 	and.w	r0, r0, #1
 80040e4:	4770      	bx	lr
 80040e6:	4618      	mov	r0, r3
 80040e8:	4770      	bx	lr
 80040ea:	2001      	movs	r0, #1
    }
 80040ec:	4770      	bx	lr
	...

080040f0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 80040f0:	680b      	ldr	r3, [r1, #0]
 80040f2:	4a03      	ldr	r2, [pc, #12]	; (8004100 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE16initMoveDrawableERNS_8DrawableE+0x10>)
 80040f4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80040f6:	f9b2 2000 	ldrsh.w	r2, [r2]
    virtual void initMoveDrawable(Drawable& d)
 80040fa:	4608      	mov	r0, r1
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 80040fc:	2100      	movs	r1, #0
 80040fe:	4718      	bx	r3
 8004100:	2001e1b6 	.word	0x2001e1b6

08004104 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE1EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 8004104:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8004106:	68c2      	ldr	r2, [r0, #12]
 8004108:	6844      	ldr	r4, [r0, #4]
 800410a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800410c:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800410e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004112:	07d2      	lsls	r2, r2, #31
 8004114:	bf48      	it	mi
 8004116:	5962      	ldrmi	r2, [r4, r5]
 8004118:	689b      	ldr	r3, [r3, #8]
    }
 800411a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800411c:	bf48      	it	mi
 800411e:	58d3      	ldrmi	r3, [r2, r3]
 8004120:	4718      	bx	r3

08004122 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE1EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8004122:	6843      	ldr	r3, [r0, #4]
 8004124:	b12b      	cbz	r3, 8004132 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE1EEERNS_8DrawableEvvE7isValidEv+0x10>
 8004126:	6883      	ldr	r3, [r0, #8]
 8004128:	b92b      	cbnz	r3, 8004136 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE1EEERNS_8DrawableEvvE7isValidEv+0x14>
 800412a:	68c0      	ldr	r0, [r0, #12]
 800412c:	f000 0001 	and.w	r0, r0, #1
 8004130:	4770      	bx	lr
 8004132:	4618      	mov	r0, r3
 8004134:	4770      	bx	lr
 8004136:	2001      	movs	r0, #1
    }
 8004138:	4770      	bx	lr
	...

0800413c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(-HAL::DISPLAY_WIDTH, 0);
 800413c:	4b04      	ldr	r3, [pc, #16]	; (8004150 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x14>)
    virtual void initMoveDrawable(Drawable& d)
 800413e:	4608      	mov	r0, r1
            d.moveRelative(-HAL::DISPLAY_WIDTH, 0);
 8004140:	8819      	ldrh	r1, [r3, #0]
 8004142:	6803      	ldr	r3, [r0, #0]
 8004144:	4249      	negs	r1, r1
 8004146:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004148:	2200      	movs	r2, #0
 800414a:	b209      	sxth	r1, r1
 800414c:	4718      	bx	r3
 800414e:	bf00      	nop
 8004150:	2001e1b4 	.word	0x2001e1b4

08004154 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 8004154:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8004156:	68c2      	ldr	r2, [r0, #12]
 8004158:	6844      	ldr	r4, [r0, #4]
 800415a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800415c:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800415e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004162:	07d2      	lsls	r2, r2, #31
 8004164:	bf48      	it	mi
 8004166:	5962      	ldrmi	r2, [r4, r5]
 8004168:	689b      	ldr	r3, [r3, #8]
    }
 800416a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800416c:	bf48      	it	mi
 800416e:	58d3      	ldrmi	r3, [r2, r3]
 8004170:	4718      	bx	r3

08004172 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8004172:	6843      	ldr	r3, [r0, #4]
 8004174:	b12b      	cbz	r3, 8004182 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv+0x10>
 8004176:	6883      	ldr	r3, [r0, #8]
 8004178:	b92b      	cbnz	r3, 8004186 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv+0x14>
 800417a:	68c0      	ldr	r0, [r0, #12]
 800417c:	f000 0001 	and.w	r0, r0, #1
 8004180:	4770      	bx	lr
 8004182:	4618      	mov	r0, r3
 8004184:	4770      	bx	lr
 8004186:	2001      	movs	r0, #1
    }
 8004188:	4770      	bx	lr
	...

0800418c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 800418c:	680b      	ldr	r3, [r1, #0]
    virtual void initMoveDrawable(Drawable& d)
 800418e:	4608      	mov	r0, r1
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 8004190:	4902      	ldr	r1, [pc, #8]	; (800419c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x10>)
 8004192:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004194:	f9b1 1000 	ldrsh.w	r1, [r1]
 8004198:	2200      	movs	r2, #0
 800419a:	4718      	bx	r3
 800419c:	2001e1b4 	.word	0x2001e1b4

080041a0 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 80041a0:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80041a2:	68c2      	ldr	r2, [r0, #12]
 80041a4:	6844      	ldr	r4, [r0, #4]
 80041a6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80041a8:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80041aa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80041ae:	07d2      	lsls	r2, r2, #31
 80041b0:	bf48      	it	mi
 80041b2:	5962      	ldrmi	r2, [r4, r5]
 80041b4:	689b      	ldr	r3, [r3, #8]
    }
 80041b6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80041b8:	bf48      	it	mi
 80041ba:	58d3      	ldrmi	r3, [r2, r3]
 80041bc:	4718      	bx	r3

080041be <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80041be:	6843      	ldr	r3, [r0, #4]
 80041c0:	b12b      	cbz	r3, 80041ce <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x10>
 80041c2:	6883      	ldr	r3, [r0, #8]
 80041c4:	b92b      	cbnz	r3, 80041d2 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x14>
 80041c6:	68c0      	ldr	r0, [r0, #12]
 80041c8:	f000 0001 	and.w	r0, r0, #1
 80041cc:	4770      	bx	lr
 80041ce:	4618      	mov	r0, r3
 80041d0:	4770      	bx	lr
 80041d2:	2001      	movs	r0, #1
    }
 80041d4:	4770      	bx	lr

080041d6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80041d6:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 80041d8:	68c2      	ldr	r2, [r0, #12]
 80041da:	6841      	ldr	r1, [r0, #4]
 80041dc:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80041de:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80041e0:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80041e4:	07d2      	lsls	r2, r2, #31
 80041e6:	bf48      	it	mi
 80041e8:	590a      	ldrmi	r2, [r1, r4]
 80041ea:	689b      	ldr	r3, [r3, #8]
    }
 80041ec:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80041f0:	bf48      	it	mi
 80041f2:	58d3      	ldrmi	r3, [r2, r3]
 80041f4:	4718      	bx	r3

080041f6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80041f6:	6843      	ldr	r3, [r0, #4]
 80041f8:	b12b      	cbz	r3, 8004206 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80041fa:	6883      	ldr	r3, [r0, #8]
 80041fc:	b92b      	cbnz	r3, 800420a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80041fe:	68c0      	ldr	r0, [r0, #12]
 8004200:	f000 0001 	and.w	r0, r0, #1
 8004204:	4770      	bx	lr
 8004206:	4618      	mov	r0, r3
 8004208:	4770      	bx	lr
 800420a:	2001      	movs	r0, #1
    }
 800420c:	4770      	bx	lr

0800420e <_ZN8touchgfx15BlockTransitionD0Ev>:
 800420e:	b510      	push	{r4, lr}
 8004210:	2114      	movs	r1, #20
 8004212:	4604      	mov	r4, r0
 8004214:	f026 ff89 	bl	802b12a <_ZdlPvj>
 8004218:	4620      	mov	r0, r4
 800421a:	bd10      	pop	{r4, pc}

0800421c <_ZN8touchgfx12NoTransitionD0Ev>:
 800421c:	b510      	push	{r4, lr}
 800421e:	210c      	movs	r1, #12
 8004220:	4604      	mov	r4, r0
 8004222:	f026 ff82 	bl	802b12a <_ZdlPvj>
 8004226:	4620      	mov	r0, r4
 8004228:	bd10      	pop	{r4, pc}

0800422a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800422a:	b510      	push	{r4, lr}
 800422c:	2110      	movs	r1, #16
 800422e:	4604      	mov	r4, r0
 8004230:	f026 ff7b 	bl	802b12a <_ZdlPvj>
 8004234:	4620      	mov	r0, r4
 8004236:	bd10      	pop	{r4, pc}

08004238 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8004238:	b510      	push	{r4, lr}
 800423a:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800423e:	4604      	mov	r4, r0
 8004240:	f026 ff73 	bl	802b12a <_ZdlPvj>
 8004244:	4620      	mov	r0, r4
 8004246:	bd10      	pop	{r4, pc}

08004248 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EED0Ev>:
class SlideTransition : public Transition
 8004248:	b510      	push	{r4, lr}
 800424a:	2154      	movs	r1, #84	; 0x54
 800424c:	4604      	mov	r4, r0
 800424e:	f026 ff6c 	bl	802b12a <_ZdlPvj>
 8004252:	4620      	mov	r0, r4
 8004254:	bd10      	pop	{r4, pc}

08004256 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE0EEERNS_8DrawableEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004256:	b510      	push	{r4, lr}
 8004258:	2110      	movs	r1, #16
 800425a:	4604      	mov	r4, r0
 800425c:	f026 ff65 	bl	802b12a <_ZdlPvj>
 8004260:	4620      	mov	r0, r4
 8004262:	bd10      	pop	{r4, pc}

08004264 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EED0Ev>:
 8004264:	b510      	push	{r4, lr}
 8004266:	2154      	movs	r1, #84	; 0x54
 8004268:	4604      	mov	r4, r0
 800426a:	f026 ff5e 	bl	802b12a <_ZdlPvj>
 800426e:	4620      	mov	r0, r4
 8004270:	bd10      	pop	{r4, pc}

08004272 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE1EEERNS_8DrawableEvvED0Ev>:
 8004272:	b510      	push	{r4, lr}
 8004274:	2110      	movs	r1, #16
 8004276:	4604      	mov	r4, r0
 8004278:	f026 ff57 	bl	802b12a <_ZdlPvj>
 800427c:	4620      	mov	r0, r4
 800427e:	bd10      	pop	{r4, pc}

08004280 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
 8004280:	b510      	push	{r4, lr}
 8004282:	2154      	movs	r1, #84	; 0x54
 8004284:	4604      	mov	r4, r0
 8004286:	f026 ff50 	bl	802b12a <_ZdlPvj>
 800428a:	4620      	mov	r0, r4
 800428c:	bd10      	pop	{r4, pc}

0800428e <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvED0Ev>:
 800428e:	b510      	push	{r4, lr}
 8004290:	2110      	movs	r1, #16
 8004292:	4604      	mov	r4, r0
 8004294:	f026 ff49 	bl	802b12a <_ZdlPvj>
 8004298:	4620      	mov	r0, r4
 800429a:	bd10      	pop	{r4, pc}

0800429c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 800429c:	b510      	push	{r4, lr}
 800429e:	2154      	movs	r1, #84	; 0x54
 80042a0:	4604      	mov	r4, r0
 80042a2:	f026 ff42 	bl	802b12a <_ZdlPvj>
 80042a6:	4620      	mov	r0, r4
 80042a8:	bd10      	pop	{r4, pc}

080042aa <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED0Ev>:
 80042aa:	b510      	push	{r4, lr}
 80042ac:	2110      	movs	r1, #16
 80042ae:	4604      	mov	r4, r0
 80042b0:	f026 ff3b 	bl	802b12a <_ZdlPvj>
 80042b4:	4620      	mov	r0, r4
 80042b6:	bd10      	pop	{r4, pc}

080042b8 <_ZN8touchgfx15BlockTransition15handleTickEventEv>:
    virtual void handleTickEvent()
 80042b8:	b570      	push	{r4, r5, r6, lr}
 80042ba:	4604      	mov	r4, r0
 80042bc:	b0b2      	sub	sp, #200	; 0xc8
        const int indeces[blocks] = { 20, 11, 47, 14, 10, 0, 18, 28, 13, 6, 2, 41,
 80042be:	491e      	ldr	r1, [pc, #120]	; (8004338 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x80>)
 80042c0:	22c0      	movs	r2, #192	; 0xc0
 80042c2:	a802      	add	r0, sp, #8
 80042c4:	f027 fff6 	bl	802c2b4 <memcpy>
        if (animationCounter == 0 && HAL::USE_DOUBLE_BUFFERING)
 80042c8:	7c23      	ldrb	r3, [r4, #16]
 80042ca:	bb6b      	cbnz	r3, 8004328 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x70>
 80042cc:	4b1b      	ldr	r3, [pc, #108]	; (800433c <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x84>)
 80042ce:	781b      	ldrb	r3, [r3, #0]
 80042d0:	bb33      	cbnz	r3, 8004320 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x68>
    virtual void handleTickEvent()
 80042d2:	2503      	movs	r5, #3
            while (blocks_per_tick-- > 0 && animationCounter < blocks)
 80042d4:	3d01      	subs	r5, #1
 80042d6:	d02c      	beq.n	8004332 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x7a>
 80042d8:	7c23      	ldrb	r3, [r4, #16]
 80042da:	2b2f      	cmp	r3, #47	; 0x2f
 80042dc:	d829      	bhi.n	8004332 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x7a>
                const int index = indeces[animationCounter];
 80042de:	aa32      	add	r2, sp, #200	; 0xc8
 80042e0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
                const int16_t x = (index % blocksHorizontal) * blockWidth;
 80042e4:	89e6      	ldrh	r6, [r4, #14]
                const int index = indeces[animationCounter];
 80042e6:	f853 3cc0 	ldr.w	r3, [r3, #-192]
                const int16_t x = (index % blocksHorizontal) * blockWidth;
 80042ea:	8960      	ldrh	r0, [r4, #10]
 80042ec:	fb93 f2f6 	sdiv	r2, r3, r6
 80042f0:	fb06 3312 	mls	r3, r6, r2, r3
 80042f4:	fb13 f300 	smulbb	r3, r3, r0
        : x(x), y(y), width(width), height(height)
 80042f8:	f8ad 0004 	strh.w	r0, [sp, #4]
                screenContainer->invalidateRect(invRect);
 80042fc:	6860      	ldr	r0, [r4, #4]
                const int16_t y = (index / blocksHorizontal) * blockHeight;
 80042fe:	89a1      	ldrh	r1, [r4, #12]
 8004300:	f8ad 3000 	strh.w	r3, [sp]
                screenContainer->invalidateRect(invRect);
 8004304:	6803      	ldr	r3, [r0, #0]
 8004306:	f8ad 1006 	strh.w	r1, [sp, #6]
                const int16_t y = (index / blocksHorizontal) * blockHeight;
 800430a:	fb12 f201 	smulbb	r2, r2, r1
                screenContainer->invalidateRect(invRect);
 800430e:	691b      	ldr	r3, [r3, #16]
 8004310:	f8ad 2002 	strh.w	r2, [sp, #2]
 8004314:	4669      	mov	r1, sp
 8004316:	4798      	blx	r3
                animationCounter++;
 8004318:	7c23      	ldrb	r3, [r4, #16]
 800431a:	3301      	adds	r3, #1
 800431c:	7423      	strb	r3, [r4, #16]
            while (blocks_per_tick-- > 0 && animationCounter < blocks)
 800431e:	e7d9      	b.n	80042d4 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004320:	f015 f81a 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8004324:	f015 f872 	bl	801940c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
        if (animationCounter < blocks)
 8004328:	7c23      	ldrb	r3, [r4, #16]
 800432a:	2b2f      	cmp	r3, #47	; 0x2f
 800432c:	d9d1      	bls.n	80042d2 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1a>
            done = true;
 800432e:	2301      	movs	r3, #1
 8004330:	7223      	strb	r3, [r4, #8]
    }
 8004332:	b032      	add	sp, #200	; 0xc8
 8004334:	bd70      	pop	{r4, r5, r6, pc}
 8004336:	bf00      	nop
 8004338:	0802ec38 	.word	0x0802ec38
 800433c:	2001e1be 	.word	0x2001e1be

08004340 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8004340:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8004342:	f015 f809 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004346:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 800434a:	f015 bc3d 	b.w	8019bc8 <_ZN8touchgfx11Application10invalidateEv>
	...

08004350 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8004350:	4b05      	ldr	r3, [pc, #20]	; (8004368 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x18>)
 8004352:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 8004354:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8004356:	b12b      	cbz	r3, 8004364 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x14>
 8004358:	6840      	ldr	r0, [r0, #4]
 800435a:	b118      	cbz	r0, 8004364 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 800435c:	6803      	ldr	r3, [r0, #0]
 800435e:	310c      	adds	r1, #12
 8004360:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004362:	4718      	bx	r3
    }
 8004364:	4770      	bx	lr
 8004366:	bf00      	nop
 8004368:	2001e1bf 	.word	0x2001e1bf

0800436c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800436c:	4b05      	ldr	r3, [pc, #20]	; (8004384 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv+0x18>)
 800436e:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 8004370:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8004372:	b12b      	cbz	r3, 8004380 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv+0x14>
 8004374:	6840      	ldr	r0, [r0, #4]
 8004376:	b118      	cbz	r0, 8004380 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 8004378:	6803      	ldr	r3, [r0, #0]
 800437a:	310c      	adds	r1, #12
 800437c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800437e:	4718      	bx	r3
    }
 8004380:	4770      	bx	lr
 8004382:	bf00      	nop
 8004384:	2001e1bf 	.word	0x2001e1bf

08004388 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8004388:	4b05      	ldr	r3, [pc, #20]	; (80043a0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
 800438a:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 800438c:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800438e:	b12b      	cbz	r3, 800439c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
 8004390:	6840      	ldr	r0, [r0, #4]
 8004392:	b118      	cbz	r0, 800439c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 8004394:	6803      	ldr	r3, [r0, #0]
 8004396:	310c      	adds	r1, #12
 8004398:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800439a:	4718      	bx	r3
    }
 800439c:	4770      	bx	lr
 800439e:	bf00      	nop
 80043a0:	2001e1bf 	.word	0x2001e1bf

080043a4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80043a4:	4b05      	ldr	r3, [pc, #20]	; (80043bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 80043a6:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80043a8:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80043aa:	b12b      	cbz	r3, 80043b8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 80043ac:	6840      	ldr	r0, [r0, #4]
 80043ae:	b118      	cbz	r0, 80043b8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 80043b0:	6803      	ldr	r3, [r0, #0]
 80043b2:	310c      	adds	r1, #12
 80043b4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80043b6:	4718      	bx	r3
    }
 80043b8:	4770      	bx	lr
 80043ba:	bf00      	nop
 80043bc:	2001e1bf 	.word	0x2001e1bf

080043c0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 80043c0:	4b1f      	ldr	r3, [pc, #124]	; (8004440 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x80>)
 80043c2:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 80043c4:	b510      	push	{r4, lr}
 80043c6:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 80043c8:	b913      	cbnz	r3, 80043d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x10>
            done = true;
 80043ca:	2301      	movs	r3, #1
 80043cc:	7203      	strb	r3, [r0, #8]
    }
 80043ce:	bd10      	pop	{r4, pc}
        animationCounter++;
 80043d0:	f890 004d 	ldrb.w	r0, [r0, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 80043d4:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
        animationCounter++;
 80043d8:	3001      	adds	r0, #1
 80043da:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 80043dc:	4298      	cmp	r0, r3
        animationCounter++;
 80043de:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 80043e2:	d824      	bhi.n	800442e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x6e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80043e4:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 80043e8:	2100      	movs	r1, #0
 80043ea:	f016 fcd7 	bl	801ad9c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 80043ee:	f010 0201 	ands.w	r2, r0, #1
 80043f2:	b283      	uxth	r3, r0
 80043f4:	d021      	beq.n	800443a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x7a>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80043f6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80043fa:	2800      	cmp	r0, #0
 80043fc:	bfd8      	it	le
 80043fe:	460a      	movle	r2, r1
 8004400:	4413      	add	r3, r2
 8004402:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
            calculatedValue -= snapshot.getX();
 8004406:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800440a:	8a23      	ldrh	r3, [r4, #16]
 800440c:	1ac9      	subs	r1, r1, r3
 800440e:	b209      	sxth	r1, r1
 8004410:	f8a4 1050 	strh.w	r1, [r4, #80]	; 0x50
            snapshot.moveRelative(calculatedValue, 0);
 8004414:	f104 000c 	add.w	r0, r4, #12
 8004418:	2200      	movs	r2, #0
 800441a:	f016 f81b 	bl	801a454 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 800441e:	6860      	ldr	r0, [r4, #4]
 8004420:	6803      	ldr	r3, [r0, #0]
 8004422:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8004426:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    }
 8004428:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 800442c:	4718      	bx	r3
            done = true;
 800442e:	2301      	movs	r3, #1
 8004430:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004432:	2300      	movs	r3, #0
 8004434:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
            return;
 8004438:	e7c9      	b.n	80043ce <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800443a:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 800443e:	e7e2      	b.n	8004406 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x46>
 8004440:	2001e1bf 	.word	0x2001e1bf

08004444 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 8004444:	4b1f      	ldr	r3, [pc, #124]	; (80044c4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>)
 8004446:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 8004448:	b510      	push	{r4, lr}
 800444a:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 800444c:	b913      	cbnz	r3, 8004454 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x10>
            done = true;
 800444e:	2301      	movs	r3, #1
 8004450:	7203      	strb	r3, [r0, #8]
    }
 8004452:	bd10      	pop	{r4, pc}
        animationCounter++;
 8004454:	f890 004d 	ldrb.w	r0, [r0, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 8004458:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
        animationCounter++;
 800445c:	3001      	adds	r0, #1
 800445e:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 8004460:	4298      	cmp	r0, r3
        animationCounter++;
 8004462:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 8004466:	d824      	bhi.n	80044b2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x6e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004468:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 800446c:	2100      	movs	r1, #0
 800446e:	f016 fc95 	bl	801ad9c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8004472:	f010 0201 	ands.w	r2, r0, #1
 8004476:	b283      	uxth	r3, r0
 8004478:	d021      	beq.n	80044be <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x7a>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800447a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800447e:	2800      	cmp	r0, #0
 8004480:	bfd8      	it	le
 8004482:	460a      	movle	r2, r1
 8004484:	4413      	add	r3, r2
 8004486:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
            calculatedValue -= snapshot.getX();
 800448a:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800448e:	8a23      	ldrh	r3, [r4, #16]
 8004490:	1ac9      	subs	r1, r1, r3
 8004492:	b209      	sxth	r1, r1
 8004494:	f8a4 1050 	strh.w	r1, [r4, #80]	; 0x50
            snapshot.moveRelative(calculatedValue, 0);
 8004498:	f104 000c 	add.w	r0, r4, #12
 800449c:	2200      	movs	r2, #0
 800449e:	f015 ffd9 	bl	801a454 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 80044a2:	6860      	ldr	r0, [r4, #4]
 80044a4:	6803      	ldr	r3, [r0, #0]
 80044a6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80044aa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    }
 80044ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 80044b0:	4718      	bx	r3
            done = true;
 80044b2:	2301      	movs	r3, #1
 80044b4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80044b6:	2300      	movs	r3, #0
 80044b8:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
            return;
 80044bc:	e7c9      	b.n	8004452 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80044be:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 80044c2:	e7e2      	b.n	800448a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x46>
 80044c4:	2001e1bf 	.word	0x2001e1bf

080044c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 80044c8:	4b1f      	ldr	r3, [pc, #124]	; (8004548 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x80>)
 80044ca:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 80044cc:	b510      	push	{r4, lr}
 80044ce:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 80044d0:	b913      	cbnz	r3, 80044d8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x10>
            done = true;
 80044d2:	2301      	movs	r3, #1
 80044d4:	7203      	strb	r3, [r0, #8]
    }
 80044d6:	bd10      	pop	{r4, pc}
        animationCounter++;
 80044d8:	f890 004d 	ldrb.w	r0, [r0, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 80044dc:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
        animationCounter++;
 80044e0:	3001      	adds	r0, #1
 80044e2:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 80044e4:	4298      	cmp	r0, r3
        animationCounter++;
 80044e6:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 80044ea:	d824      	bhi.n	8004536 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x6e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80044ec:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 80044f0:	2100      	movs	r1, #0
 80044f2:	f016 fc53 	bl	801ad9c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 80044f6:	f010 0201 	ands.w	r2, r0, #1
 80044fa:	b283      	uxth	r3, r0
 80044fc:	d021      	beq.n	8004542 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x7a>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80044fe:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004502:	2800      	cmp	r0, #0
 8004504:	bfd8      	it	le
 8004506:	460a      	movle	r2, r1
 8004508:	4413      	add	r3, r2
 800450a:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
            calculatedValue -= snapshot.getY();
 800450e:	f8b4 2050 	ldrh.w	r2, [r4, #80]	; 0x50
 8004512:	8a63      	ldrh	r3, [r4, #18]
 8004514:	1ad2      	subs	r2, r2, r3
 8004516:	b212      	sxth	r2, r2
            snapshot.moveRelative(0, calculatedValue);
 8004518:	f104 000c 	add.w	r0, r4, #12
            calculatedValue -= snapshot.getY();
 800451c:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
            snapshot.moveRelative(0, calculatedValue);
 8004520:	2100      	movs	r1, #0
 8004522:	f015 ff97 	bl	801a454 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 8004526:	6860      	ldr	r0, [r4, #4]
 8004528:	6803      	ldr	r3, [r0, #0]
 800452a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800452e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    }
 8004530:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 8004534:	4718      	bx	r3
            done = true;
 8004536:	2301      	movs	r3, #1
 8004538:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800453a:	2300      	movs	r3, #0
 800453c:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
            return;
 8004540:	e7c9      	b.n	80044d6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004542:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 8004546:	e7e2      	b.n	800450e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x46>
 8004548:	2001e1bf 	.word	0x2001e1bf

0800454c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 800454c:	4b1f      	ldr	r3, [pc, #124]	; (80045cc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x80>)
 800454e:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 8004550:	b510      	push	{r4, lr}
 8004552:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 8004554:	b913      	cbnz	r3, 800455c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x10>
            done = true;
 8004556:	2301      	movs	r3, #1
 8004558:	7203      	strb	r3, [r0, #8]
    }
 800455a:	bd10      	pop	{r4, pc}
        animationCounter++;
 800455c:	f890 004d 	ldrb.w	r0, [r0, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 8004560:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
        animationCounter++;
 8004564:	3001      	adds	r0, #1
 8004566:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 8004568:	4298      	cmp	r0, r3
        animationCounter++;
 800456a:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 800456e:	d824      	bhi.n	80045ba <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x6e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004570:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 8004574:	2100      	movs	r1, #0
 8004576:	f016 fc11 	bl	801ad9c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800457a:	f010 0201 	ands.w	r2, r0, #1
 800457e:	b283      	uxth	r3, r0
 8004580:	d021      	beq.n	80045c6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x7a>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004582:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004586:	2800      	cmp	r0, #0
 8004588:	bfd8      	it	le
 800458a:	460a      	movle	r2, r1
 800458c:	4413      	add	r3, r2
 800458e:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
            calculatedValue -= snapshot.getY();
 8004592:	f8b4 2050 	ldrh.w	r2, [r4, #80]	; 0x50
 8004596:	8a63      	ldrh	r3, [r4, #18]
 8004598:	1ad2      	subs	r2, r2, r3
 800459a:	b212      	sxth	r2, r2
            snapshot.moveRelative(0, calculatedValue);
 800459c:	f104 000c 	add.w	r0, r4, #12
            calculatedValue -= snapshot.getY();
 80045a0:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
            snapshot.moveRelative(0, calculatedValue);
 80045a4:	2100      	movs	r1, #0
 80045a6:	f015 ff55 	bl	801a454 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 80045aa:	6860      	ldr	r0, [r4, #4]
 80045ac:	6803      	ldr	r3, [r0, #0]
 80045ae:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80045b2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    }
 80045b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 80045b8:	4718      	bx	r3
            done = true;
 80045ba:	2301      	movs	r3, #1
 80045bc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80045be:	2300      	movs	r3, #0
 80045c0:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
            return;
 80045c4:	e7c9      	b.n	800455a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80045c6:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 80045ca:	e7e2      	b.n	8004592 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x46>
 80045cc:	2001e1bf 	.word	0x2001e1bf

080045d0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80045d0:	b510      	push	{r4, lr}
 80045d2:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80045d4:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80045d8:	b158      	cbz	r0, 80045f2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80045da:	6803      	ldr	r3, [r0, #0]
 80045dc:	68db      	ldr	r3, [r3, #12]
 80045de:	4798      	blx	r3
 80045e0:	b138      	cbz	r0, 80045f2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80045e2:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80045e6:	6803      	ldr	r3, [r0, #0]
 80045e8:	689b      	ldr	r3, [r3, #8]
 80045ea:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80045ec:	2300      	movs	r3, #0
 80045ee:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80045f2:	bd10      	pop	{r4, pc}

080045f4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv>:
    virtual void init()
 80045f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 80045f6:	4b0c      	ldr	r3, [pc, #48]	; (8004628 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x34>)
 80045f8:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 80045fa:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 80045fc:	b18b      	cbz	r3, 8004622 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x2e>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80045fe:	4b0b      	ldr	r3, [pc, #44]	; (800462c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x38>)
 8004600:	221c      	movs	r2, #28
 8004602:	e9cd 3000 	strd	r3, r0, [sp]
 8004606:	2301      	movs	r3, #1
 8004608:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 800460c:	6840      	ldr	r0, [r0, #4]
 800460e:	6803      	ldr	r3, [r0, #0]
 8004610:	4669      	mov	r1, sp
 8004612:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8004614:	4798      	blx	r3
            screenContainer->add(snapshot);
 8004616:	6860      	ldr	r0, [r4, #4]
 8004618:	6803      	ldr	r3, [r0, #0]
 800461a:	f104 010c 	add.w	r1, r4, #12
 800461e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004620:	4798      	blx	r3
    }
 8004622:	b004      	add	sp, #16
 8004624:	bd10      	pop	{r4, pc}
 8004626:	bf00      	nop
 8004628:	2001e1bf 	.word	0x2001e1bf
 800462c:	08030e88 	.word	0x08030e88

08004630 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv>:
    virtual void init()
 8004630:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 8004632:	4b0c      	ldr	r3, [pc, #48]	; (8004664 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x34>)
 8004634:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 8004636:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 8004638:	b18b      	cbz	r3, 800465e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x2e>
 800463a:	4b0b      	ldr	r3, [pc, #44]	; (8004668 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x38>)
 800463c:	221c      	movs	r2, #28
 800463e:	e9cd 3000 	strd	r3, r0, [sp]
 8004642:	2301      	movs	r3, #1
 8004644:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 8004648:	6840      	ldr	r0, [r0, #4]
 800464a:	6803      	ldr	r3, [r0, #0]
 800464c:	4669      	mov	r1, sp
 800464e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8004650:	4798      	blx	r3
            screenContainer->add(snapshot);
 8004652:	6860      	ldr	r0, [r4, #4]
 8004654:	6803      	ldr	r3, [r0, #0]
 8004656:	f104 010c 	add.w	r1, r4, #12
 800465a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800465c:	4798      	blx	r3
    }
 800465e:	b004      	add	sp, #16
 8004660:	bd10      	pop	{r4, pc}
 8004662:	bf00      	nop
 8004664:	2001e1bf 	.word	0x2001e1bf
 8004668:	08030e44 	.word	0x08030e44

0800466c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800466c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 800466e:	4b0c      	ldr	r3, [pc, #48]	; (80046a0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x34>)
 8004670:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 8004672:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 8004674:	b18b      	cbz	r3, 800469a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x2e>
 8004676:	4b0b      	ldr	r3, [pc, #44]	; (80046a4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>)
 8004678:	221c      	movs	r2, #28
 800467a:	e9cd 3000 	strd	r3, r0, [sp]
 800467e:	2301      	movs	r3, #1
 8004680:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 8004684:	6840      	ldr	r0, [r0, #4]
 8004686:	6803      	ldr	r3, [r0, #0]
 8004688:	4669      	mov	r1, sp
 800468a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800468c:	4798      	blx	r3
            screenContainer->add(snapshot);
 800468e:	6860      	ldr	r0, [r4, #4]
 8004690:	6803      	ldr	r3, [r0, #0]
 8004692:	f104 010c 	add.w	r1, r4, #12
 8004696:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004698:	4798      	blx	r3
    }
 800469a:	b004      	add	sp, #16
 800469c:	bd10      	pop	{r4, pc}
 800469e:	bf00      	nop
 80046a0:	2001e1bf 	.word	0x2001e1bf
 80046a4:	08030dbc 	.word	0x08030dbc

080046a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:
    virtual void init()
 80046a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 80046aa:	4b0c      	ldr	r3, [pc, #48]	; (80046dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x34>)
 80046ac:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 80046ae:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 80046b0:	b18b      	cbz	r3, 80046d6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x2e>
 80046b2:	4b0b      	ldr	r3, [pc, #44]	; (80046e0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x38>)
 80046b4:	221c      	movs	r2, #28
 80046b6:	e9cd 3000 	strd	r3, r0, [sp]
 80046ba:	2301      	movs	r3, #1
 80046bc:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 80046c0:	6840      	ldr	r0, [r0, #4]
 80046c2:	6803      	ldr	r3, [r0, #0]
 80046c4:	4669      	mov	r1, sp
 80046c6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80046c8:	4798      	blx	r3
            screenContainer->add(snapshot);
 80046ca:	6860      	ldr	r0, [r4, #4]
 80046cc:	6803      	ldr	r3, [r0, #0]
 80046ce:	f104 010c 	add.w	r1, r4, #12
 80046d2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80046d4:	4798      	blx	r3
    }
 80046d6:	b004      	add	sp, #16
 80046d8:	bd10      	pop	{r4, pc}
 80046da:	bf00      	nop
 80046dc:	2001e1bf 	.word	0x2001e1bf
 80046e0:	08030e00 	.word	0x08030e00

080046e4 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoFinishPageScreenBlockTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoFinishPageScreenBlockTransitionImpl()
{
 80046e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<FinishPageView, FinishPagePresenter, touchgfx::BlockTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80046e8:	e9d0 6954 	ldrd	r6, r9, [r0, #336]	; 0x150
{
 80046ec:	4605      	mov	r5, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80046ee:	68b0      	ldr	r0, [r6, #8]
 80046f0:	6803      	ldr	r3, [r0, #0]
 80046f2:	6a1b      	ldr	r3, [r3, #32]
 80046f4:	4798      	blx	r3
 80046f6:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 80046fa:	d205      	bcs.n	8004708 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x24>
 80046fc:	4b50      	ldr	r3, [pc, #320]	; (8004840 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x15c>)
 80046fe:	4a51      	ldr	r2, [pc, #324]	; (8004844 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x160>)
 8004700:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004702:	4851      	ldr	r0, [pc, #324]	; (8004848 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x164>)
 8004704:	f027 fc5e 	bl	802bfc4 <__assert_func>
 8004708:	6870      	ldr	r0, [r6, #4]
 800470a:	6803      	ldr	r3, [r0, #0]
 800470c:	6a1b      	ldr	r3, [r3, #32]
 800470e:	4798      	blx	r3
 8004710:	280f      	cmp	r0, #15
 8004712:	d803      	bhi.n	800471c <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x38>
 8004714:	4b4d      	ldr	r3, [pc, #308]	; (800484c <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x168>)
 8004716:	4a4b      	ldr	r2, [pc, #300]	; (8004844 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x160>)
 8004718:	21a4      	movs	r1, #164	; 0xa4
 800471a:	e7f2      	b.n	8004702 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800471c:	68f0      	ldr	r0, [r6, #12]
 800471e:	6803      	ldr	r3, [r0, #0]
 8004720:	6a1b      	ldr	r3, [r3, #32]
 8004722:	4798      	blx	r3
 8004724:	2813      	cmp	r0, #19
 8004726:	d803      	bhi.n	8004730 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x4c>
 8004728:	4b49      	ldr	r3, [pc, #292]	; (8004850 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x16c>)
 800472a:	4a46      	ldr	r2, [pc, #280]	; (8004844 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x160>)
 800472c:	21a5      	movs	r1, #165	; 0xa5
 800472e:	e7e8      	b.n	8004702 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x1e>
    if (*currentTrans)
 8004730:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8004864 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x180>
    Application::getInstance()->clearAllTimerWidgets();
 8004734:	f014 fe10 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8004738:	f014 fe5c 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800473c:	f8d8 0000 	ldr.w	r0, [r8]
 8004740:	b110      	cbz	r0, 8004748 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8004742:	6803      	ldr	r3, [r0, #0]
 8004744:	68db      	ldr	r3, [r3, #12]
 8004746:	4798      	blx	r3
    if (*currentTrans)
 8004748:	f8d8 0000 	ldr.w	r0, [r8]
 800474c:	b110      	cbz	r0, 8004754 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800474e:	6803      	ldr	r3, [r0, #0]
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	4798      	blx	r3
    if (*currentScreen)
 8004754:	4f3f      	ldr	r7, [pc, #252]	; (8004854 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x170>)
 8004756:	6838      	ldr	r0, [r7, #0]
 8004758:	b110      	cbz	r0, 8004760 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x7c>
        (*currentScreen)->tearDownScreen();
 800475a:	6803      	ldr	r3, [r0, #0]
 800475c:	695b      	ldr	r3, [r3, #20]
 800475e:	4798      	blx	r3
    if (*currentPresenter)
 8004760:	f8d5 0138 	ldr.w	r0, [r5, #312]	; 0x138
 8004764:	b110      	cbz	r0, 800476c <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x88>
        (*currentPresenter)->deactivate();
 8004766:	6803      	ldr	r3, [r0, #0]
 8004768:	685b      	ldr	r3, [r3, #4]
 800476a:	4798      	blx	r3
    if (*currentScreen)
 800476c:	6838      	ldr	r0, [r7, #0]
 800476e:	b110      	cbz	r0, 8004776 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x92>
        (*currentScreen)->~Screen();
 8004770:	6803      	ldr	r3, [r0, #0]
 8004772:	681b      	ldr	r3, [r3, #0]
 8004774:	4798      	blx	r3
    if (*currentPresenter)
 8004776:	f8d5 0138 	ldr.w	r0, [r5, #312]	; 0x138
 800477a:	b110      	cbz	r0, 8004782 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x9e>
        (*currentPresenter)->~Presenter();
 800477c:	6803      	ldr	r3, [r0, #0]
 800477e:	689b      	ldr	r3, [r3, #8]
 8004780:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004782:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004784:	6803      	ldr	r3, [r0, #0]
 8004786:	2100      	movs	r1, #0
 8004788:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800478a:	4798      	blx	r3
        : screenContainer(0), done(false)
 800478c:	2300      	movs	r3, #0
 800478e:	6043      	str	r3, [r0, #4]
 8004790:	7203      	strb	r3, [r0, #8]
          animationCounter(0)
 8004792:	7403      	strb	r3, [r0, #16]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 8004794:	4b30      	ldr	r3, [pc, #192]	; (8004858 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x174>)
          animationCounter(0)
 8004796:	4a31      	ldr	r2, [pc, #196]	; (800485c <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x178>)
 8004798:	6002      	str	r2, [r0, #0]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 800479a:	881a      	ldrh	r2, [r3, #0]
 800479c:	4b30      	ldr	r3, [pc, #192]	; (8004860 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x17c>)
 800479e:	881b      	ldrh	r3, [r3, #0]
 80047a0:	429a      	cmp	r2, r3
 80047a2:	4604      	mov	r4, r0
 80047a4:	d93f      	bls.n	8004826 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x142>
            blockWidth = (HAL::DISPLAY_WIDTH + 7) / 8;
 80047a6:	3207      	adds	r2, #7
 80047a8:	10d2      	asrs	r2, r2, #3
 80047aa:	8142      	strh	r2, [r0, #10]
            blockHeight = (HAL::DISPLAY_HEIGHT + 5) / 6;
 80047ac:	3305      	adds	r3, #5
 80047ae:	2206      	movs	r2, #6
 80047b0:	fbb3 f3f2 	udiv	r3, r3, r2
 80047b4:	8183      	strh	r3, [r0, #12]
            blocksHorizontal = 8;
 80047b6:	2308      	movs	r3, #8
 80047b8:	81c3      	strh	r3, [r0, #14]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80047ba:	68b0      	ldr	r0, [r6, #8]
 80047bc:	6803      	ldr	r3, [r0, #0]
 80047be:	2100      	movs	r1, #0
 80047c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047c2:	4798      	blx	r3
 80047c4:	4682      	mov	sl, r0
 80047c6:	f006 fb43 	bl	800ae50 <_ZN14FinishPageViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80047ca:	6870      	ldr	r0, [r6, #4]
 80047cc:	6803      	ldr	r3, [r0, #0]
 80047ce:	2100      	movs	r1, #0
 80047d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047d2:	4798      	blx	r3
 80047d4:	4651      	mov	r1, sl
 80047d6:	4606      	mov	r6, r0
 80047d8:	f006 fb20 	bl	800ae1c <_ZN19FinishPagePresenterC1ER14FinishPageView>
    *currentTrans = newTransition;
 80047dc:	f8c8 4000 	str.w	r4, [r8]
    *currentPresenter = newPresenter;
 80047e0:	f8c5 6138 	str.w	r6, [r5, #312]	; 0x138
    *currentScreen = newScreen;
 80047e4:	f8c7 a000 	str.w	sl, [r7]
    model->bind(newPresenter);
 80047e8:	b33e      	cbz	r6, 800483a <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x156>
 80047ea:	1d33      	adds	r3, r6, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80047ec:	f8c9 3000 	str.w	r3, [r9]
    newScreen->setupScreen();
 80047f0:	f8da 3000 	ldr.w	r3, [sl]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80047f4:	f8c6 9008 	str.w	r9, [r6, #8]
 80047f8:	4650      	mov	r0, sl
 80047fa:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 80047fc:	f8ca 603c 	str.w	r6, [sl, #60]	; 0x3c
 8004800:	4798      	blx	r3
    newPresenter->activate();
 8004802:	6833      	ldr	r3, [r6, #0]
 8004804:	4630      	mov	r0, r6
 8004806:	681b      	ldr	r3, [r3, #0]
 8004808:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800480a:	4621      	mov	r1, r4
 800480c:	4650      	mov	r0, sl
 800480e:	f016 fabf 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004812:	6823      	ldr	r3, [r4, #0]
 8004814:	4620      	mov	r0, r4
 8004816:	691b      	ldr	r3, [r3, #16]
 8004818:	4798      	blx	r3
    newTransition->invalidate();
 800481a:	6823      	ldr	r3, [r4, #0]
 800481c:	4620      	mov	r0, r4
 800481e:	695b      	ldr	r3, [r3, #20]
}
 8004820:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004824:	4718      	bx	r3
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 8004826:	3307      	adds	r3, #7
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8004828:	2106      	movs	r1, #6
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 800482a:	10db      	asrs	r3, r3, #3
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 800482c:	3205      	adds	r2, #5
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 800482e:	8183      	strh	r3, [r0, #12]
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8004830:	fbb2 f2f1 	udiv	r2, r2, r1
            blocksHorizontal = 6;
 8004834:	81c1      	strh	r1, [r0, #14]
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8004836:	8142      	strh	r2, [r0, #10]
            blocksHorizontal = 6;
 8004838:	e7bf      	b.n	80047ba <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0xd6>
    model->bind(newPresenter);
 800483a:	4633      	mov	r3, r6
 800483c:	e7d6      	b.n	80047ec <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x108>
 800483e:	bf00      	nop
 8004840:	0802f8e8 	.word	0x0802f8e8
 8004844:	0802f976 	.word	0x0802f976
 8004848:	0802fa83 	.word	0x0802fa83
 800484c:	0802faca 	.word	0x0802faca
 8004850:	0802fb6d 	.word	0x0802fb6d
 8004854:	2001e21c 	.word	0x2001e21c
 8004858:	2001e1b4 	.word	0x2001e1b4
 800485c:	08030d98 	.word	0x08030d98
 8004860:	2001e1b6 	.word	0x2001e1b6
 8004864:	2001e220 	.word	0x2001e220

08004868 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv>:
{
 8004868:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartPageView, StartPagePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800486c:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8004870:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004872:	68a8      	ldr	r0, [r5, #8]
 8004874:	6803      	ldr	r3, [r0, #0]
 8004876:	6a1b      	ldr	r3, [r3, #32]
 8004878:	4798      	blx	r3
 800487a:	f5b0 7fba 	cmp.w	r0, #372	; 0x174
 800487e:	d205      	bcs.n	800488c <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x24>
 8004880:	4b45      	ldr	r3, [pc, #276]	; (8004998 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x130>)
 8004882:	4a46      	ldr	r2, [pc, #280]	; (800499c <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x134>)
 8004884:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004886:	4846      	ldr	r0, [pc, #280]	; (80049a0 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x138>)
 8004888:	f027 fb9c 	bl	802bfc4 <__assert_func>
 800488c:	6868      	ldr	r0, [r5, #4]
 800488e:	6803      	ldr	r3, [r0, #0]
 8004890:	6a1b      	ldr	r3, [r3, #32]
 8004892:	4798      	blx	r3
 8004894:	280f      	cmp	r0, #15
 8004896:	d803      	bhi.n	80048a0 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x38>
 8004898:	4b42      	ldr	r3, [pc, #264]	; (80049a4 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x13c>)
 800489a:	4a40      	ldr	r2, [pc, #256]	; (800499c <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x134>)
 800489c:	21a4      	movs	r1, #164	; 0xa4
 800489e:	e7f2      	b.n	8004886 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048a0:	68e8      	ldr	r0, [r5, #12]
 80048a2:	6803      	ldr	r3, [r0, #0]
 80048a4:	6a1b      	ldr	r3, [r3, #32]
 80048a6:	4798      	blx	r3
 80048a8:	280b      	cmp	r0, #11
 80048aa:	d803      	bhi.n	80048b4 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x4c>
 80048ac:	4b3e      	ldr	r3, [pc, #248]	; (80049a8 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x140>)
 80048ae:	4a3b      	ldr	r2, [pc, #236]	; (800499c <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x134>)
 80048b0:	21a5      	movs	r1, #165	; 0xa5
 80048b2:	e7e8      	b.n	8004886 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80048b4:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80049b0 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 80048b8:	f014 fd4e 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 80048bc:	f014 fd9a 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80048c0:	f8d9 0000 	ldr.w	r0, [r9]
 80048c4:	b110      	cbz	r0, 80048cc <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80048c6:	6803      	ldr	r3, [r0, #0]
 80048c8:	68db      	ldr	r3, [r3, #12]
 80048ca:	4798      	blx	r3
    if (*currentTrans)
 80048cc:	f8d9 0000 	ldr.w	r0, [r9]
 80048d0:	b110      	cbz	r0, 80048d8 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80048d2:	6803      	ldr	r3, [r0, #0]
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	4798      	blx	r3
    if (*currentScreen)
 80048d8:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80049b4 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x14c>
 80048dc:	f8d8 0000 	ldr.w	r0, [r8]
 80048e0:	b110      	cbz	r0, 80048e8 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80048e2:	6803      	ldr	r3, [r0, #0]
 80048e4:	695b      	ldr	r3, [r3, #20]
 80048e6:	4798      	blx	r3
    if (*currentPresenter)
 80048e8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80048ec:	b110      	cbz	r0, 80048f4 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80048ee:	6803      	ldr	r3, [r0, #0]
 80048f0:	685b      	ldr	r3, [r3, #4]
 80048f2:	4798      	blx	r3
    if (*currentScreen)
 80048f4:	f8d8 0000 	ldr.w	r0, [r8]
 80048f8:	b110      	cbz	r0, 8004900 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80048fa:	6803      	ldr	r3, [r0, #0]
 80048fc:	681b      	ldr	r3, [r3, #0]
 80048fe:	4798      	blx	r3
    if (*currentPresenter)
 8004900:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004904:	b110      	cbz	r0, 800490c <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8004906:	6803      	ldr	r3, [r0, #0]
 8004908:	689b      	ldr	r3, [r3, #8]
 800490a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800490c:	68e8      	ldr	r0, [r5, #12]
 800490e:	6803      	ldr	r3, [r0, #0]
 8004910:	2100      	movs	r1, #0
 8004912:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004914:	4798      	blx	r3
 8004916:	f04f 0b00 	mov.w	fp, #0
 800491a:	4b24      	ldr	r3, [pc, #144]	; (80049ac <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x144>)
 800491c:	6003      	str	r3, [r0, #0]
 800491e:	4604      	mov	r4, r0
 8004920:	f8c0 b004 	str.w	fp, [r0, #4]
 8004924:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004928:	68a8      	ldr	r0, [r5, #8]
 800492a:	6803      	ldr	r3, [r0, #0]
 800492c:	4659      	mov	r1, fp
 800492e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004930:	4798      	blx	r3
 8004932:	4606      	mov	r6, r0
 8004934:	f006 fdb6 	bl	800b4a4 <_ZN13StartPageViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004938:	6868      	ldr	r0, [r5, #4]
 800493a:	6803      	ldr	r3, [r0, #0]
 800493c:	4659      	mov	r1, fp
 800493e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004940:	4798      	blx	r3
 8004942:	4631      	mov	r1, r6
 8004944:	4605      	mov	r5, r0
 8004946:	f006 fd93 	bl	800b470 <_ZN18StartPagePresenterC1ER13StartPageView>
    *currentTrans = newTransition;
 800494a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800494e:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8004952:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004956:	b1e5      	cbz	r5, 8004992 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x12a>
 8004958:	1d2b      	adds	r3, r5, #4
 800495a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800495e:	6833      	ldr	r3, [r6, #0]
 8004960:	f8c5 a008 	str.w	sl, [r5, #8]
 8004964:	4630      	mov	r0, r6
 8004966:	68db      	ldr	r3, [r3, #12]
 8004968:	63f5      	str	r5, [r6, #60]	; 0x3c
 800496a:	4798      	blx	r3
    newPresenter->activate();
 800496c:	682b      	ldr	r3, [r5, #0]
 800496e:	4628      	mov	r0, r5
 8004970:	681b      	ldr	r3, [r3, #0]
 8004972:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004974:	4621      	mov	r1, r4
 8004976:	4630      	mov	r0, r6
 8004978:	f016 fa0a 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800497c:	6823      	ldr	r3, [r4, #0]
 800497e:	4620      	mov	r0, r4
 8004980:	691b      	ldr	r3, [r3, #16]
 8004982:	4798      	blx	r3
    newTransition->invalidate();
 8004984:	6823      	ldr	r3, [r4, #0]
 8004986:	695b      	ldr	r3, [r3, #20]
 8004988:	4620      	mov	r0, r4
}
 800498a:	b001      	add	sp, #4
 800498c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004990:	4718      	bx	r3
    model->bind(newPresenter);
 8004992:	462b      	mov	r3, r5
 8004994:	e7e1      	b.n	800495a <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0xf2>
 8004996:	bf00      	nop
 8004998:	0802f8e8 	.word	0x0802f8e8
 800499c:	0802fc10 	.word	0x0802fc10
 80049a0:	0802fa83 	.word	0x0802fa83
 80049a4:	0802faca 	.word	0x0802faca
 80049a8:	0802fb6d 	.word	0x0802fb6d
 80049ac:	08030d74 	.word	0x08030d74
 80049b0:	2001e220 	.word	0x2001e220
 80049b4:	2001e21c 	.word	0x2001e21c

080049b8 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80049b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80049bc:	461d      	mov	r5, r3
        setX(x);
 80049be:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80049c0:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 80049c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80049c6:	4604      	mov	r4, r0
 80049c8:	4616      	mov	r6, r2
        setX(x);
 80049ca:	4798      	blx	r3
        setY(y);
 80049cc:	6823      	ldr	r3, [r4, #0]
 80049ce:	4631      	mov	r1, r6
 80049d0:	4620      	mov	r0, r4
 80049d2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80049d4:	4798      	blx	r3
        setWidth(width);
 80049d6:	6823      	ldr	r3, [r4, #0]
 80049d8:	4629      	mov	r1, r5
 80049da:	4620      	mov	r0, r4
 80049dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80049de:	4798      	blx	r3
        setHeight(height);
 80049e0:	6823      	ldr	r3, [r4, #0]
 80049e2:	4639      	mov	r1, r7
 80049e4:	4620      	mov	r0, r4
 80049e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80049e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 80049ec:	4718      	bx	r3
	...

080049f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80049f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049f2:	4604      	mov	r4, r0
 80049f4:	4617      	mov	r7, r2
 80049f6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80049f8:	f014 fd3e 	bl	8019478 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80049fc:	4b10      	ldr	r3, [pc, #64]	; (8004a40 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80049fe:	2500      	movs	r5, #0
      model(m)
 8004a00:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8004a04:	4e0f      	ldr	r6, [pc, #60]	; (8004a44 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 8004a06:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 8004a08:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8004a0c:	4b0e      	ldr	r3, [pc, #56]	; (8004a48 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8004a0e:	6830      	ldr	r0, [r6, #0]
 8004a10:	6023      	str	r3, [r4, #0]
 8004a12:	4b0e      	ldr	r3, [pc, #56]	; (8004a4c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004a14:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8004a18:	6803      	ldr	r3, [r0, #0]
 8004a1a:	4629      	mov	r1, r5
 8004a1c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004a1e:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8004a22:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004a24:	4628      	mov	r0, r5
 8004a26:	f006 f913 	bl	800ac50 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004a2a:	6833      	ldr	r3, [r6, #0]
 8004a2c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8004a30:	b10a      	cbz	r2, 8004a36 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8004a32:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004a34:	b900      	cbnz	r0, 8004a38 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8004a36:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004a38:	f01c fe23 	bl	8021682 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8004a3c:	4620      	mov	r0, r4
 8004a3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004a40:	2001e22c 	.word	0x2001e22c
 8004a44:	2001e1c0 	.word	0x2001e1c0
 8004a48:	08030d28 	.word	0x08030d28
 8004a4c:	08030d10 	.word	0x08030d10

08004a50 <_ZN23FrontendApplicationBase31gotoStartPageScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004a50:	4b06      	ldr	r3, [pc, #24]	; (8004a6c <_ZN23FrontendApplicationBase31gotoStartPageScreenNoTransitionEv+0x1c>)
 8004a52:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004a56:	2300      	movs	r3, #0
 8004a58:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004a5c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004a60:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004a64:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004a68:	4770      	bx	lr
 8004a6a:	bf00      	nop
 8004a6c:	08004869 	.word	0x08004869

08004a70 <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionNorthEv>:
 8004a70:	4b06      	ldr	r3, [pc, #24]	; (8004a8c <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionNorthEv+0x1c>)
 8004a72:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004a76:	2300      	movs	r3, #0
 8004a78:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004a7c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004a80:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004a84:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004a88:	4770      	bx	lr
 8004a8a:	bf00      	nop
 8004a8c:	08005441 	.word	0x08005441

08004a90 <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionSouthEv>:
 8004a90:	4b06      	ldr	r3, [pc, #24]	; (8004aac <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionSouthEv+0x1c>)
 8004a92:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004a96:	2300      	movs	r3, #0
 8004a98:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004a9c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004aa0:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004aa4:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004aa8:	4770      	bx	lr
 8004aaa:	bf00      	nop
 8004aac:	080055f9 	.word	0x080055f9

08004ab0 <_ZN23FrontendApplicationBase46gotoInstructionPage2ScreenSlideTransitionNorthEv>:
 8004ab0:	4b06      	ldr	r3, [pc, #24]	; (8004acc <_ZN23FrontendApplicationBase46gotoInstructionPage2ScreenSlideTransitionNorthEv+0x1c>)
 8004ab2:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004ab6:	2300      	movs	r3, #0
 8004ab8:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004abc:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004ac0:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004ac4:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004ac8:	4770      	bx	lr
 8004aca:	bf00      	nop
 8004acc:	08005305 	.word	0x08005305

08004ad0 <_ZN23FrontendApplicationBase39gotoKnownPageScreenSlideTransitionNorthEv>:
 8004ad0:	4b06      	ldr	r3, [pc, #24]	; (8004aec <_ZN23FrontendApplicationBase39gotoKnownPageScreenSlideTransitionNorthEv+0x1c>)
 8004ad2:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004ad6:	2300      	movs	r3, #0
 8004ad8:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004adc:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004ae0:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004ae4:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004ae8:	4770      	bx	lr
 8004aea:	bf00      	nop
 8004aec:	080051c9 	.word	0x080051c9

08004af0 <_ZN23FrontendApplicationBase36gotoPIPageScreenSlideTransitionNorthEv>:
 8004af0:	4b06      	ldr	r3, [pc, #24]	; (8004b0c <_ZN23FrontendApplicationBase36gotoPIPageScreenSlideTransitionNorthEv+0x1c>)
 8004af2:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004af6:	2300      	movs	r3, #0
 8004af8:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004afc:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004b00:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004b04:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004b08:	4770      	bx	lr
 8004b0a:	bf00      	nop
 8004b0c:	0800508d 	.word	0x0800508d

08004b10 <_ZN23FrontendApplicationBase46gotoStartMeasurementScreenSlideTransitionNorthEv>:
 8004b10:	4b06      	ldr	r3, [pc, #24]	; (8004b2c <_ZN23FrontendApplicationBase46gotoStartMeasurementScreenSlideTransitionNorthEv+0x1c>)
 8004b12:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004b16:	2300      	movs	r3, #0
 8004b18:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004b1c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004b20:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004b24:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004b28:	4770      	bx	lr
 8004b2a:	bf00      	nop
 8004b2c:	08004f51 	.word	0x08004f51

08004b30 <_ZN23FrontendApplicationBase41gotoProgressBarScreenSlideTransitionNorthEv>:
 8004b30:	4b06      	ldr	r3, [pc, #24]	; (8004b4c <_ZN23FrontendApplicationBase41gotoProgressBarScreenSlideTransitionNorthEv+0x1c>)
 8004b32:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004b36:	2300      	movs	r3, #0
 8004b38:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004b3c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004b40:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004b44:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004b48:	4770      	bx	lr
 8004b4a:	bf00      	nop
 8004b4c:	08004e11 	.word	0x08004e11

08004b50 <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionNorthEv>:
 8004b50:	4b06      	ldr	r3, [pc, #24]	; (8004b6c <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionNorthEv+0x1c>)
 8004b52:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004b56:	2300      	movs	r3, #0
 8004b58:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004b5c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004b60:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004b64:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004b68:	4770      	bx	lr
 8004b6a:	bf00      	nop
 8004b6c:	08005b75 	.word	0x08005b75

08004b70 <_ZN23FrontendApplicationBase44gotoDataDisplayListScreenSlideTransitionEastEv>:
 8004b70:	4b06      	ldr	r3, [pc, #24]	; (8004b8c <_ZN23FrontendApplicationBase44gotoDataDisplayListScreenSlideTransitionEastEv+0x1c>)
 8004b72:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004b76:	2300      	movs	r3, #0
 8004b78:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004b7c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004b80:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004b84:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004b88:	4770      	bx	lr
 8004b8a:	bf00      	nop
 8004b8c:	080059cd 	.word	0x080059cd

08004b90 <_ZN23FrontendApplicationBase37gotoDataDisplayListScreenNoTransitionEv>:
 8004b90:	4b06      	ldr	r3, [pc, #24]	; (8004bac <_ZN23FrontendApplicationBase37gotoDataDisplayListScreenNoTransitionEv+0x1c>)
 8004b92:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004b96:	2300      	movs	r3, #0
 8004b98:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004b9c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004ba0:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004ba4:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004ba8:	4770      	bx	lr
 8004baa:	bf00      	nop
 8004bac:	08005881 	.word	0x08005881

08004bb0 <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionSouthEv>:
 8004bb0:	4b06      	ldr	r3, [pc, #24]	; (8004bcc <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionSouthEv+0x1c>)
 8004bb2:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004bb6:	2300      	movs	r3, #0
 8004bb8:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004bbc:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004bc0:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004bc4:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004bc8:	4770      	bx	lr
 8004bca:	bf00      	nop
 8004bcc:	08005745 	.word	0x08005745

08004bd0 <_ZN23FrontendApplicationBase44gotoResistanceGraphScreenSlideTransitionWestEv>:
 8004bd0:	4b06      	ldr	r3, [pc, #24]	; (8004bec <_ZN23FrontendApplicationBase44gotoResistanceGraphScreenSlideTransitionWestEv+0x1c>)
 8004bd2:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004bd6:	2300      	movs	r3, #0
 8004bd8:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004bdc:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004be0:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004be4:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004be8:	4770      	bx	lr
 8004bea:	bf00      	nop
 8004bec:	08005e69 	.word	0x08005e69

08004bf0 <_ZN23FrontendApplicationBase43gotoReactanceGraphScreenSlideTransitionWestEv>:
 8004bf0:	4b06      	ldr	r3, [pc, #24]	; (8004c0c <_ZN23FrontendApplicationBase43gotoReactanceGraphScreenSlideTransitionWestEv+0x1c>)
 8004bf2:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004bf6:	2300      	movs	r3, #0
 8004bf8:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004bfc:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004c00:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004c04:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004c08:	4770      	bx	lr
 8004c0a:	bf00      	nop
 8004c0c:	08005d29 	.word	0x08005d29

08004c10 <_ZN23FrontendApplicationBase39gotoDataSavedScreenSlideTransitionNorthEv>:
 8004c10:	4b06      	ldr	r3, [pc, #24]	; (8004c2c <_ZN23FrontendApplicationBase39gotoDataSavedScreenSlideTransitionNorthEv+0x1c>)
 8004c12:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004c16:	2300      	movs	r3, #0
 8004c18:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004c1c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004c20:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004c24:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004c28:	4770      	bx	lr
 8004c2a:	bf00      	nop
 8004c2c:	08004cd5 	.word	0x08004cd5

08004c30 <_ZN23FrontendApplicationBase35gotoFinishPageScreenBlockTransitionEv>:
 8004c30:	4b06      	ldr	r3, [pc, #24]	; (8004c4c <_ZN23FrontendApplicationBase35gotoFinishPageScreenBlockTransitionEv+0x1c>)
 8004c32:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004c36:	2300      	movs	r3, #0
 8004c38:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004c3c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004c40:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004c44:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004c48:	4770      	bx	lr
 8004c4a:	bf00      	nop
 8004c4c:	080046e5 	.word	0x080046e5

08004c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>:
 8004c50:	6803      	ldr	r3, [r0, #0]
 8004c52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c54:	4718      	bx	r3
	...

08004c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8004c58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          calculatedValue(0)
 8004c5a:	4605      	mov	r5, r0
 8004c5c:	2600      	movs	r6, #0
 8004c5e:	4b18      	ldr	r3, [pc, #96]	; (8004cc0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh+0x68>)
 8004c60:	6046      	str	r6, [r0, #4]
 8004c62:	7206      	strb	r6, [r0, #8]
 8004c64:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8004c68:	4604      	mov	r4, r0
          calculatedValue(0)
 8004c6a:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8004c6c:	460f      	mov	r7, r1
          calculatedValue(0)
 8004c6e:	f011 fd05 	bl	801667c <_ZN8touchgfx14SnapshotWidgetC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8004c72:	4b14      	ldr	r3, [pc, #80]	; (8004cc4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh+0x6c>)
 8004c74:	63a5      	str	r5, [r4, #56]	; 0x38
 8004c76:	e9c4 340f 	strd	r3, r4, [r4, #60]	; 0x3c
 8004c7a:	2220      	movs	r2, #32
 8004c7c:	2301      	movs	r3, #1
 8004c7e:	e9c4 2311 	strd	r2, r3, [r4, #68]	; 0x44
        if (HAL::USE_ANIMATION_STORAGE)
 8004c82:	4b11      	ldr	r3, [pc, #68]	; (8004cc8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh+0x70>)
          calculatedValue(0)
 8004c84:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
        if (HAL::USE_ANIMATION_STORAGE)
 8004c88:	781b      	ldrb	r3, [r3, #0]
          calculatedValue(0)
 8004c8a:	f884 604d 	strb.w	r6, [r4, #77]	; 0x4d
 8004c8e:	f8a4 6050 	strh.w	r6, [r4, #80]	; 0x50
        if (HAL::USE_ANIMATION_STORAGE)
 8004c92:	b18b      	cbz	r3, 8004cb8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh+0x60>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004c94:	4f0d      	ldr	r7, [pc, #52]	; (8004ccc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh+0x74>)
 8004c96:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004c9a:	9300      	str	r3, [sp, #0]
 8004c9c:	4b0c      	ldr	r3, [pc, #48]	; (8004cd0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh+0x78>)
 8004c9e:	4632      	mov	r2, r6
 8004ca0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004ca4:	4631      	mov	r1, r6
 8004ca6:	4628      	mov	r0, r5
 8004ca8:	f7ff fe86 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
            snapshot.makeSnapshot();
 8004cac:	4628      	mov	r0, r5
 8004cae:	f011 fc61 	bl	8016574 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
                targetValue = HAL::DISPLAY_HEIGHT;
 8004cb2:	883b      	ldrh	r3, [r7, #0]
 8004cb4:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
    }
 8004cb8:	4620      	mov	r0, r4
 8004cba:	b003      	add	sp, #12
 8004cbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004cbe:	bf00      	nop
 8004cc0:	08030ea0 	.word	0x08030ea0
 8004cc4:	08030e88 	.word	0x08030e88
 8004cc8:	2001e1bf 	.word	0x2001e1bf
 8004ccc:	2001e1b6 	.word	0x2001e1b6
 8004cd0:	2001e1b4 	.word	0x2001e1b4

08004cd4 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv>:
{
 8004cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<DataSavedView, DataSavedPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004cd8:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8004cdc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004cde:	68a0      	ldr	r0, [r4, #8]
 8004ce0:	6803      	ldr	r3, [r0, #0]
 8004ce2:	6a1b      	ldr	r3, [r3, #32]
 8004ce4:	4798      	blx	r3
 8004ce6:	f5b0 7fac 	cmp.w	r0, #344	; 0x158
 8004cea:	d205      	bcs.n	8004cf8 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x24>
 8004cec:	4b41      	ldr	r3, [pc, #260]	; (8004df4 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x120>)
 8004cee:	4a42      	ldr	r2, [pc, #264]	; (8004df8 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x124>)
 8004cf0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004cf2:	4842      	ldr	r0, [pc, #264]	; (8004dfc <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x128>)
 8004cf4:	f027 f966 	bl	802bfc4 <__assert_func>
 8004cf8:	6860      	ldr	r0, [r4, #4]
 8004cfa:	6803      	ldr	r3, [r0, #0]
 8004cfc:	6a1b      	ldr	r3, [r3, #32]
 8004cfe:	4798      	blx	r3
 8004d00:	280f      	cmp	r0, #15
 8004d02:	d803      	bhi.n	8004d0c <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x38>
 8004d04:	4b3e      	ldr	r3, [pc, #248]	; (8004e00 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x12c>)
 8004d06:	4a3c      	ldr	r2, [pc, #240]	; (8004df8 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x124>)
 8004d08:	21a4      	movs	r1, #164	; 0xa4
 8004d0a:	e7f2      	b.n	8004cf2 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d0c:	68e0      	ldr	r0, [r4, #12]
 8004d0e:	6803      	ldr	r3, [r0, #0]
 8004d10:	6a1b      	ldr	r3, [r3, #32]
 8004d12:	4798      	blx	r3
 8004d14:	2853      	cmp	r0, #83	; 0x53
 8004d16:	d803      	bhi.n	8004d20 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x4c>
 8004d18:	4b3a      	ldr	r3, [pc, #232]	; (8004e04 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x130>)
 8004d1a:	4a37      	ldr	r2, [pc, #220]	; (8004df8 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x124>)
 8004d1c:	21a5      	movs	r1, #165	; 0xa5
 8004d1e:	e7e8      	b.n	8004cf2 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 8004d20:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e08 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8004d24:	f014 fb18 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8004d28:	f014 fb64 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004d2c:	f8d9 0000 	ldr.w	r0, [r9]
 8004d30:	b110      	cbz	r0, 8004d38 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 8004d32:	6803      	ldr	r3, [r0, #0]
 8004d34:	68db      	ldr	r3, [r3, #12]
 8004d36:	4798      	blx	r3
    if (*currentTrans)
 8004d38:	f8d9 0000 	ldr.w	r0, [r9]
 8004d3c:	b110      	cbz	r0, 8004d44 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 8004d3e:	6803      	ldr	r3, [r0, #0]
 8004d40:	681b      	ldr	r3, [r3, #0]
 8004d42:	4798      	blx	r3
    if (*currentScreen)
 8004d44:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004e0c <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x138>
 8004d48:	f8d8 0000 	ldr.w	r0, [r8]
 8004d4c:	b110      	cbz	r0, 8004d54 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8004d4e:	6803      	ldr	r3, [r0, #0]
 8004d50:	695b      	ldr	r3, [r3, #20]
 8004d52:	4798      	blx	r3
    if (*currentPresenter)
 8004d54:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004d58:	b110      	cbz	r0, 8004d60 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004d5a:	6803      	ldr	r3, [r0, #0]
 8004d5c:	685b      	ldr	r3, [r3, #4]
 8004d5e:	4798      	blx	r3
    if (*currentScreen)
 8004d60:	f8d8 0000 	ldr.w	r0, [r8]
 8004d64:	b110      	cbz	r0, 8004d6c <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 8004d66:	6803      	ldr	r3, [r0, #0]
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	4798      	blx	r3
    if (*currentPresenter)
 8004d6c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004d70:	b110      	cbz	r0, 8004d78 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8004d72:	6803      	ldr	r3, [r0, #0]
 8004d74:	689b      	ldr	r3, [r3, #8]
 8004d76:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d78:	68e0      	ldr	r0, [r4, #12]
 8004d7a:	2100      	movs	r1, #0
 8004d7c:	f7ff ff68 	bl	8004c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 8004d80:	2114      	movs	r1, #20
 8004d82:	4605      	mov	r5, r0
 8004d84:	f7ff ff68 	bl	8004c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d88:	68a0      	ldr	r0, [r4, #8]
 8004d8a:	6803      	ldr	r3, [r0, #0]
 8004d8c:	2100      	movs	r1, #0
 8004d8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d90:	4798      	blx	r3
 8004d92:	4606      	mov	r6, r0
 8004d94:	f006 f82a 	bl	800adec <_ZN13DataSavedViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d98:	6860      	ldr	r0, [r4, #4]
 8004d9a:	6803      	ldr	r3, [r0, #0]
 8004d9c:	2100      	movs	r1, #0
 8004d9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004da0:	4798      	blx	r3
 8004da2:	4631      	mov	r1, r6
 8004da4:	4604      	mov	r4, r0
 8004da6:	f006 f801 	bl	800adac <_ZN18DataSavedPresenterC1ER13DataSavedView>
    *currentTrans = newTransition;
 8004daa:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004dae:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8004db2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004db6:	b1dc      	cbz	r4, 8004df0 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x11c>
 8004db8:	1d23      	adds	r3, r4, #4
 8004dba:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004dbe:	6833      	ldr	r3, [r6, #0]
 8004dc0:	f8c4 a008 	str.w	sl, [r4, #8]
 8004dc4:	4630      	mov	r0, r6
 8004dc6:	68db      	ldr	r3, [r3, #12]
 8004dc8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004dca:	4798      	blx	r3
    newPresenter->activate();
 8004dcc:	6823      	ldr	r3, [r4, #0]
 8004dce:	4620      	mov	r0, r4
 8004dd0:	681b      	ldr	r3, [r3, #0]
 8004dd2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004dd4:	4629      	mov	r1, r5
 8004dd6:	4630      	mov	r0, r6
 8004dd8:	f015 ffda 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004ddc:	682b      	ldr	r3, [r5, #0]
 8004dde:	4628      	mov	r0, r5
 8004de0:	691b      	ldr	r3, [r3, #16]
 8004de2:	4798      	blx	r3
    newTransition->invalidate();
 8004de4:	682b      	ldr	r3, [r5, #0]
 8004de6:	4628      	mov	r0, r5
 8004de8:	695b      	ldr	r3, [r3, #20]
}
 8004dea:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004dee:	4718      	bx	r3
    model->bind(newPresenter);
 8004df0:	4623      	mov	r3, r4
 8004df2:	e7e2      	b.n	8004dba <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0xe6>
 8004df4:	0802f8e8 	.word	0x0802f8e8
 8004df8:	0802fd18 	.word	0x0802fd18
 8004dfc:	0802fa83 	.word	0x0802fa83
 8004e00:	0802faca 	.word	0x0802faca
 8004e04:	0802fb6d 	.word	0x0802fb6d
 8004e08:	2001e220 	.word	0x2001e220
 8004e0c:	2001e21c 	.word	0x2001e21c

08004e10 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv>:
{
 8004e10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ProgressBarView, ProgressBarPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e14:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8004e18:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e1a:	68a0      	ldr	r0, [r4, #8]
 8004e1c:	6803      	ldr	r3, [r0, #0]
 8004e1e:	6a1b      	ldr	r3, [r3, #32]
 8004e20:	4798      	blx	r3
 8004e22:	f241 53e7 	movw	r3, #5607	; 0x15e7
 8004e26:	4298      	cmp	r0, r3
 8004e28:	d805      	bhi.n	8004e36 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x26>
 8004e2a:	4b42      	ldr	r3, [pc, #264]	; (8004f34 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x124>)
 8004e2c:	4a42      	ldr	r2, [pc, #264]	; (8004f38 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x128>)
 8004e2e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e30:	4842      	ldr	r0, [pc, #264]	; (8004f3c <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x12c>)
 8004e32:	f027 f8c7 	bl	802bfc4 <__assert_func>
 8004e36:	6860      	ldr	r0, [r4, #4]
 8004e38:	6803      	ldr	r3, [r0, #0]
 8004e3a:	6a1b      	ldr	r3, [r3, #32]
 8004e3c:	4798      	blx	r3
 8004e3e:	280f      	cmp	r0, #15
 8004e40:	d803      	bhi.n	8004e4a <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x3a>
 8004e42:	4b3f      	ldr	r3, [pc, #252]	; (8004f40 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x130>)
 8004e44:	4a3c      	ldr	r2, [pc, #240]	; (8004f38 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x128>)
 8004e46:	21a4      	movs	r1, #164	; 0xa4
 8004e48:	e7f2      	b.n	8004e30 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e4a:	68e0      	ldr	r0, [r4, #12]
 8004e4c:	6803      	ldr	r3, [r0, #0]
 8004e4e:	6a1b      	ldr	r3, [r3, #32]
 8004e50:	4798      	blx	r3
 8004e52:	2853      	cmp	r0, #83	; 0x53
 8004e54:	d803      	bhi.n	8004e5e <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x4e>
 8004e56:	4b3b      	ldr	r3, [pc, #236]	; (8004f44 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x134>)
 8004e58:	4a37      	ldr	r2, [pc, #220]	; (8004f38 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x128>)
 8004e5a:	21a5      	movs	r1, #165	; 0xa5
 8004e5c:	e7e8      	b.n	8004e30 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x20>
    if (*currentTrans)
 8004e5e:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8004f48 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8004e62:	f014 fa79 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8004e66:	f014 fac5 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004e6a:	f8d9 0000 	ldr.w	r0, [r9]
 8004e6e:	b110      	cbz	r0, 8004e76 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x66>
        (*currentTrans)->tearDown();
 8004e70:	6803      	ldr	r3, [r0, #0]
 8004e72:	68db      	ldr	r3, [r3, #12]
 8004e74:	4798      	blx	r3
    if (*currentTrans)
 8004e76:	f8d9 0000 	ldr.w	r0, [r9]
 8004e7a:	b110      	cbz	r0, 8004e82 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x72>
        (*currentTrans)->~Transition();
 8004e7c:	6803      	ldr	r3, [r0, #0]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	4798      	blx	r3
    if (*currentScreen)
 8004e82:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004f4c <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x13c>
 8004e86:	f8d8 0000 	ldr.w	r0, [r8]
 8004e8a:	b110      	cbz	r0, 8004e92 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004e8c:	6803      	ldr	r3, [r0, #0]
 8004e8e:	695b      	ldr	r3, [r3, #20]
 8004e90:	4798      	blx	r3
    if (*currentPresenter)
 8004e92:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004e96:	b110      	cbz	r0, 8004e9e <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004e98:	6803      	ldr	r3, [r0, #0]
 8004e9a:	685b      	ldr	r3, [r3, #4]
 8004e9c:	4798      	blx	r3
    if (*currentScreen)
 8004e9e:	f8d8 0000 	ldr.w	r0, [r8]
 8004ea2:	b110      	cbz	r0, 8004eaa <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004ea4:	6803      	ldr	r3, [r0, #0]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	4798      	blx	r3
    if (*currentPresenter)
 8004eaa:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004eae:	b110      	cbz	r0, 8004eb6 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004eb0:	6803      	ldr	r3, [r0, #0]
 8004eb2:	689b      	ldr	r3, [r3, #8]
 8004eb4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004eb6:	68e0      	ldr	r0, [r4, #12]
 8004eb8:	2100      	movs	r1, #0
 8004eba:	f7ff fec9 	bl	8004c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 8004ebe:	2114      	movs	r1, #20
 8004ec0:	4605      	mov	r5, r0
 8004ec2:	f7ff fec9 	bl	8004c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ec6:	68a0      	ldr	r0, [r4, #8]
 8004ec8:	6803      	ldr	r3, [r0, #0]
 8004eca:	2100      	movs	r1, #0
 8004ecc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ece:	4798      	blx	r3
 8004ed0:	4606      	mov	r6, r0
 8004ed2:	f006 f939 	bl	800b148 <_ZN15ProgressBarViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ed6:	6860      	ldr	r0, [r4, #4]
 8004ed8:	6803      	ldr	r3, [r0, #0]
 8004eda:	2100      	movs	r1, #0
 8004edc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ede:	4798      	blx	r3
 8004ee0:	4631      	mov	r1, r6
 8004ee2:	4604      	mov	r4, r0
 8004ee4:	f006 f8f6 	bl	800b0d4 <_ZN20ProgressBarPresenterC1ER15ProgressBarView>
    *currentTrans = newTransition;
 8004ee8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004eec:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8004ef0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004ef4:	b1dc      	cbz	r4, 8004f2e <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x11e>
 8004ef6:	1d23      	adds	r3, r4, #4
 8004ef8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004efc:	6833      	ldr	r3, [r6, #0]
 8004efe:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f02:	4630      	mov	r0, r6
 8004f04:	68db      	ldr	r3, [r3, #12]
 8004f06:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f08:	4798      	blx	r3
    newPresenter->activate();
 8004f0a:	6823      	ldr	r3, [r4, #0]
 8004f0c:	4620      	mov	r0, r4
 8004f0e:	681b      	ldr	r3, [r3, #0]
 8004f10:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f12:	4629      	mov	r1, r5
 8004f14:	4630      	mov	r0, r6
 8004f16:	f015 ff3b 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f1a:	682b      	ldr	r3, [r5, #0]
 8004f1c:	4628      	mov	r0, r5
 8004f1e:	691b      	ldr	r3, [r3, #16]
 8004f20:	4798      	blx	r3
    newTransition->invalidate();
 8004f22:	682b      	ldr	r3, [r5, #0]
 8004f24:	4628      	mov	r0, r5
 8004f26:	695b      	ldr	r3, [r3, #20]
}
 8004f28:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f2c:	4718      	bx	r3
    model->bind(newPresenter);
 8004f2e:	4623      	mov	r3, r4
 8004f30:	e7e2      	b.n	8004ef8 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0xe8>
 8004f32:	bf00      	nop
 8004f34:	0802f8e8 	.word	0x0802f8e8
 8004f38:	0802fe34 	.word	0x0802fe34
 8004f3c:	0802fa83 	.word	0x0802fa83
 8004f40:	0802faca 	.word	0x0802faca
 8004f44:	0802fb6d 	.word	0x0802fb6d
 8004f48:	2001e220 	.word	0x2001e220
 8004f4c:	2001e21c 	.word	0x2001e21c

08004f50 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv>:
{
 8004f50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<StartMeasurementView, StartMeasurementPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004f54:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8004f58:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004f5a:	68a0      	ldr	r0, [r4, #8]
 8004f5c:	6803      	ldr	r3, [r0, #0]
 8004f5e:	6a1b      	ldr	r3, [r3, #32]
 8004f60:	4798      	blx	r3
 8004f62:	f5b0 7f94 	cmp.w	r0, #296	; 0x128
 8004f66:	d205      	bcs.n	8004f74 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x24>
 8004f68:	4b41      	ldr	r3, [pc, #260]	; (8005070 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x120>)
 8004f6a:	4a42      	ldr	r2, [pc, #264]	; (8005074 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x124>)
 8004f6c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004f6e:	4842      	ldr	r0, [pc, #264]	; (8005078 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x128>)
 8004f70:	f027 f828 	bl	802bfc4 <__assert_func>
 8004f74:	6860      	ldr	r0, [r4, #4]
 8004f76:	6803      	ldr	r3, [r0, #0]
 8004f78:	6a1b      	ldr	r3, [r3, #32]
 8004f7a:	4798      	blx	r3
 8004f7c:	280f      	cmp	r0, #15
 8004f7e:	d803      	bhi.n	8004f88 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x38>
 8004f80:	4b3e      	ldr	r3, [pc, #248]	; (800507c <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x12c>)
 8004f82:	4a3c      	ldr	r2, [pc, #240]	; (8005074 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x124>)
 8004f84:	21a4      	movs	r1, #164	; 0xa4
 8004f86:	e7f2      	b.n	8004f6e <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004f88:	68e0      	ldr	r0, [r4, #12]
 8004f8a:	6803      	ldr	r3, [r0, #0]
 8004f8c:	6a1b      	ldr	r3, [r3, #32]
 8004f8e:	4798      	blx	r3
 8004f90:	2853      	cmp	r0, #83	; 0x53
 8004f92:	d803      	bhi.n	8004f9c <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x4c>
 8004f94:	4b3a      	ldr	r3, [pc, #232]	; (8005080 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x130>)
 8004f96:	4a37      	ldr	r2, [pc, #220]	; (8005074 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x124>)
 8004f98:	21a5      	movs	r1, #165	; 0xa5
 8004f9a:	e7e8      	b.n	8004f6e <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 8004f9c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005084 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8004fa0:	f014 f9da 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8004fa4:	f014 fa26 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004fa8:	f8d9 0000 	ldr.w	r0, [r9]
 8004fac:	b110      	cbz	r0, 8004fb4 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 8004fae:	6803      	ldr	r3, [r0, #0]
 8004fb0:	68db      	ldr	r3, [r3, #12]
 8004fb2:	4798      	blx	r3
    if (*currentTrans)
 8004fb4:	f8d9 0000 	ldr.w	r0, [r9]
 8004fb8:	b110      	cbz	r0, 8004fc0 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 8004fba:	6803      	ldr	r3, [r0, #0]
 8004fbc:	681b      	ldr	r3, [r3, #0]
 8004fbe:	4798      	blx	r3
    if (*currentScreen)
 8004fc0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005088 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x138>
 8004fc4:	f8d8 0000 	ldr.w	r0, [r8]
 8004fc8:	b110      	cbz	r0, 8004fd0 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8004fca:	6803      	ldr	r3, [r0, #0]
 8004fcc:	695b      	ldr	r3, [r3, #20]
 8004fce:	4798      	blx	r3
    if (*currentPresenter)
 8004fd0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004fd4:	b110      	cbz	r0, 8004fdc <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004fd6:	6803      	ldr	r3, [r0, #0]
 8004fd8:	685b      	ldr	r3, [r3, #4]
 8004fda:	4798      	blx	r3
    if (*currentScreen)
 8004fdc:	f8d8 0000 	ldr.w	r0, [r8]
 8004fe0:	b110      	cbz	r0, 8004fe8 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 8004fe2:	6803      	ldr	r3, [r0, #0]
 8004fe4:	681b      	ldr	r3, [r3, #0]
 8004fe6:	4798      	blx	r3
    if (*currentPresenter)
 8004fe8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004fec:	b110      	cbz	r0, 8004ff4 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8004fee:	6803      	ldr	r3, [r0, #0]
 8004ff0:	689b      	ldr	r3, [r3, #8]
 8004ff2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ff4:	68e0      	ldr	r0, [r4, #12]
 8004ff6:	2100      	movs	r1, #0
 8004ff8:	f7ff fe2a 	bl	8004c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 8004ffc:	2114      	movs	r1, #20
 8004ffe:	4605      	mov	r5, r0
 8005000:	f7ff fe2a 	bl	8004c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005004:	68a0      	ldr	r0, [r4, #8]
 8005006:	6803      	ldr	r3, [r0, #0]
 8005008:	2100      	movs	r1, #0
 800500a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800500c:	4798      	blx	r3
 800500e:	4606      	mov	r6, r0
 8005010:	f006 fa16 	bl	800b440 <_ZN20StartMeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005014:	6860      	ldr	r0, [r4, #4]
 8005016:	6803      	ldr	r3, [r0, #0]
 8005018:	2100      	movs	r1, #0
 800501a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800501c:	4798      	blx	r3
 800501e:	4631      	mov	r1, r6
 8005020:	4604      	mov	r4, r0
 8005022:	f006 f9ed 	bl	800b400 <_ZN25StartMeasurementPresenterC1ER20StartMeasurementView>
    *currentTrans = newTransition;
 8005026:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800502a:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800502e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005032:	b1dc      	cbz	r4, 800506c <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x11c>
 8005034:	1d23      	adds	r3, r4, #4
 8005036:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800503a:	6833      	ldr	r3, [r6, #0]
 800503c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005040:	4630      	mov	r0, r6
 8005042:	68db      	ldr	r3, [r3, #12]
 8005044:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005046:	4798      	blx	r3
    newPresenter->activate();
 8005048:	6823      	ldr	r3, [r4, #0]
 800504a:	4620      	mov	r0, r4
 800504c:	681b      	ldr	r3, [r3, #0]
 800504e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005050:	4629      	mov	r1, r5
 8005052:	4630      	mov	r0, r6
 8005054:	f015 fe9c 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005058:	682b      	ldr	r3, [r5, #0]
 800505a:	4628      	mov	r0, r5
 800505c:	691b      	ldr	r3, [r3, #16]
 800505e:	4798      	blx	r3
    newTransition->invalidate();
 8005060:	682b      	ldr	r3, [r5, #0]
 8005062:	4628      	mov	r0, r5
 8005064:	695b      	ldr	r3, [r3, #20]
}
 8005066:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800506a:	4718      	bx	r3
    model->bind(newPresenter);
 800506c:	4623      	mov	r3, r4
 800506e:	e7e2      	b.n	8005036 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0xe6>
 8005070:	0802f8e8 	.word	0x0802f8e8
 8005074:	0802ff54 	.word	0x0802ff54
 8005078:	0802fa83 	.word	0x0802fa83
 800507c:	0802faca 	.word	0x0802faca
 8005080:	0802fb6d 	.word	0x0802fb6d
 8005084:	2001e220 	.word	0x2001e220
 8005088:	2001e21c 	.word	0x2001e21c

0800508c <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv>:
{
 800508c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<PIPageView, PIPagePresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005090:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005094:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005096:	68a0      	ldr	r0, [r4, #8]
 8005098:	6803      	ldr	r3, [r0, #0]
 800509a:	6a1b      	ldr	r3, [r3, #32]
 800509c:	4798      	blx	r3
 800509e:	f5b0 7f96 	cmp.w	r0, #300	; 0x12c
 80050a2:	d205      	bcs.n	80050b0 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x24>
 80050a4:	4b41      	ldr	r3, [pc, #260]	; (80051ac <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x120>)
 80050a6:	4a42      	ldr	r2, [pc, #264]	; (80051b0 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x124>)
 80050a8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80050aa:	4842      	ldr	r0, [pc, #264]	; (80051b4 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x128>)
 80050ac:	f026 ff8a 	bl	802bfc4 <__assert_func>
 80050b0:	6860      	ldr	r0, [r4, #4]
 80050b2:	6803      	ldr	r3, [r0, #0]
 80050b4:	6a1b      	ldr	r3, [r3, #32]
 80050b6:	4798      	blx	r3
 80050b8:	280f      	cmp	r0, #15
 80050ba:	d803      	bhi.n	80050c4 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x38>
 80050bc:	4b3e      	ldr	r3, [pc, #248]	; (80051b8 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x12c>)
 80050be:	4a3c      	ldr	r2, [pc, #240]	; (80051b0 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x124>)
 80050c0:	21a4      	movs	r1, #164	; 0xa4
 80050c2:	e7f2      	b.n	80050aa <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80050c4:	68e0      	ldr	r0, [r4, #12]
 80050c6:	6803      	ldr	r3, [r0, #0]
 80050c8:	6a1b      	ldr	r3, [r3, #32]
 80050ca:	4798      	blx	r3
 80050cc:	2853      	cmp	r0, #83	; 0x53
 80050ce:	d803      	bhi.n	80050d8 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x4c>
 80050d0:	4b3a      	ldr	r3, [pc, #232]	; (80051bc <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x130>)
 80050d2:	4a37      	ldr	r2, [pc, #220]	; (80051b0 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x124>)
 80050d4:	21a5      	movs	r1, #165	; 0xa5
 80050d6:	e7e8      	b.n	80050aa <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 80050d8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80051c0 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 80050dc:	f014 f93c 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 80050e0:	f014 f988 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80050e4:	f8d9 0000 	ldr.w	r0, [r9]
 80050e8:	b110      	cbz	r0, 80050f0 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 80050ea:	6803      	ldr	r3, [r0, #0]
 80050ec:	68db      	ldr	r3, [r3, #12]
 80050ee:	4798      	blx	r3
    if (*currentTrans)
 80050f0:	f8d9 0000 	ldr.w	r0, [r9]
 80050f4:	b110      	cbz	r0, 80050fc <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 80050f6:	6803      	ldr	r3, [r0, #0]
 80050f8:	681b      	ldr	r3, [r3, #0]
 80050fa:	4798      	blx	r3
    if (*currentScreen)
 80050fc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80051c4 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x138>
 8005100:	f8d8 0000 	ldr.w	r0, [r8]
 8005104:	b110      	cbz	r0, 800510c <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8005106:	6803      	ldr	r3, [r0, #0]
 8005108:	695b      	ldr	r3, [r3, #20]
 800510a:	4798      	blx	r3
    if (*currentPresenter)
 800510c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005110:	b110      	cbz	r0, 8005118 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8005112:	6803      	ldr	r3, [r0, #0]
 8005114:	685b      	ldr	r3, [r3, #4]
 8005116:	4798      	blx	r3
    if (*currentScreen)
 8005118:	f8d8 0000 	ldr.w	r0, [r8]
 800511c:	b110      	cbz	r0, 8005124 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 800511e:	6803      	ldr	r3, [r0, #0]
 8005120:	681b      	ldr	r3, [r3, #0]
 8005122:	4798      	blx	r3
    if (*currentPresenter)
 8005124:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005128:	b110      	cbz	r0, 8005130 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800512a:	6803      	ldr	r3, [r0, #0]
 800512c:	689b      	ldr	r3, [r3, #8]
 800512e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005130:	68e0      	ldr	r0, [r4, #12]
 8005132:	2100      	movs	r1, #0
 8005134:	f7ff fd8c 	bl	8004c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 8005138:	2114      	movs	r1, #20
 800513a:	4605      	mov	r5, r0
 800513c:	f7ff fd8c 	bl	8004c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005140:	68a0      	ldr	r0, [r4, #8]
 8005142:	6803      	ldr	r3, [r0, #0]
 8005144:	2100      	movs	r1, #0
 8005146:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005148:	4798      	blx	r3
 800514a:	4606      	mov	r6, r0
 800514c:	f005 ffaa 	bl	800b0a4 <_ZN10PIPageViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005150:	6860      	ldr	r0, [r4, #4]
 8005152:	6803      	ldr	r3, [r0, #0]
 8005154:	2100      	movs	r1, #0
 8005156:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005158:	4798      	blx	r3
 800515a:	4631      	mov	r1, r6
 800515c:	4604      	mov	r4, r0
 800515e:	f005 ff87 	bl	800b070 <_ZN15PIPagePresenterC1ER10PIPageView>
    *currentTrans = newTransition;
 8005162:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005166:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800516a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800516e:	b1dc      	cbz	r4, 80051a8 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x11c>
 8005170:	1d23      	adds	r3, r4, #4
 8005172:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005176:	6833      	ldr	r3, [r6, #0]
 8005178:	f8c4 a008 	str.w	sl, [r4, #8]
 800517c:	4630      	mov	r0, r6
 800517e:	68db      	ldr	r3, [r3, #12]
 8005180:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005182:	4798      	blx	r3
    newPresenter->activate();
 8005184:	6823      	ldr	r3, [r4, #0]
 8005186:	4620      	mov	r0, r4
 8005188:	681b      	ldr	r3, [r3, #0]
 800518a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800518c:	4629      	mov	r1, r5
 800518e:	4630      	mov	r0, r6
 8005190:	f015 fdfe 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005194:	682b      	ldr	r3, [r5, #0]
 8005196:	4628      	mov	r0, r5
 8005198:	691b      	ldr	r3, [r3, #16]
 800519a:	4798      	blx	r3
    newTransition->invalidate();
 800519c:	682b      	ldr	r3, [r5, #0]
 800519e:	4628      	mov	r0, r5
 80051a0:	695b      	ldr	r3, [r3, #20]
}
 80051a2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80051a6:	4718      	bx	r3
    model->bind(newPresenter);
 80051a8:	4623      	mov	r3, r4
 80051aa:	e7e2      	b.n	8005172 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0xe6>
 80051ac:	0802f8e8 	.word	0x0802f8e8
 80051b0:	0803007e 	.word	0x0803007e
 80051b4:	0802fa83 	.word	0x0802fa83
 80051b8:	0802faca 	.word	0x0802faca
 80051bc:	0802fb6d 	.word	0x0802fb6d
 80051c0:	2001e220 	.word	0x2001e220
 80051c4:	2001e21c 	.word	0x2001e21c

080051c8 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv>:
{
 80051c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<KnownPageView, KnownPagePresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80051cc:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 80051d0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80051d2:	68a0      	ldr	r0, [r4, #8]
 80051d4:	6803      	ldr	r3, [r0, #0]
 80051d6:	6a1b      	ldr	r3, [r3, #32]
 80051d8:	4798      	blx	r3
 80051da:	f5b0 7fe4 	cmp.w	r0, #456	; 0x1c8
 80051de:	d205      	bcs.n	80051ec <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x24>
 80051e0:	4b41      	ldr	r3, [pc, #260]	; (80052e8 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x120>)
 80051e2:	4a42      	ldr	r2, [pc, #264]	; (80052ec <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x124>)
 80051e4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80051e6:	4842      	ldr	r0, [pc, #264]	; (80052f0 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x128>)
 80051e8:	f026 feec 	bl	802bfc4 <__assert_func>
 80051ec:	6860      	ldr	r0, [r4, #4]
 80051ee:	6803      	ldr	r3, [r0, #0]
 80051f0:	6a1b      	ldr	r3, [r3, #32]
 80051f2:	4798      	blx	r3
 80051f4:	280f      	cmp	r0, #15
 80051f6:	d803      	bhi.n	8005200 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x38>
 80051f8:	4b3e      	ldr	r3, [pc, #248]	; (80052f4 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x12c>)
 80051fa:	4a3c      	ldr	r2, [pc, #240]	; (80052ec <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x124>)
 80051fc:	21a4      	movs	r1, #164	; 0xa4
 80051fe:	e7f2      	b.n	80051e6 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005200:	68e0      	ldr	r0, [r4, #12]
 8005202:	6803      	ldr	r3, [r0, #0]
 8005204:	6a1b      	ldr	r3, [r3, #32]
 8005206:	4798      	blx	r3
 8005208:	2853      	cmp	r0, #83	; 0x53
 800520a:	d803      	bhi.n	8005214 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x4c>
 800520c:	4b3a      	ldr	r3, [pc, #232]	; (80052f8 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x130>)
 800520e:	4a37      	ldr	r2, [pc, #220]	; (80052ec <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x124>)
 8005210:	21a5      	movs	r1, #165	; 0xa5
 8005212:	e7e8      	b.n	80051e6 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 8005214:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80052fc <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8005218:	f014 f89e 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 800521c:	f014 f8ea 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005220:	f8d9 0000 	ldr.w	r0, [r9]
 8005224:	b110      	cbz	r0, 800522c <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 8005226:	6803      	ldr	r3, [r0, #0]
 8005228:	68db      	ldr	r3, [r3, #12]
 800522a:	4798      	blx	r3
    if (*currentTrans)
 800522c:	f8d9 0000 	ldr.w	r0, [r9]
 8005230:	b110      	cbz	r0, 8005238 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 8005232:	6803      	ldr	r3, [r0, #0]
 8005234:	681b      	ldr	r3, [r3, #0]
 8005236:	4798      	blx	r3
    if (*currentScreen)
 8005238:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005300 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x138>
 800523c:	f8d8 0000 	ldr.w	r0, [r8]
 8005240:	b110      	cbz	r0, 8005248 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8005242:	6803      	ldr	r3, [r0, #0]
 8005244:	695b      	ldr	r3, [r3, #20]
 8005246:	4798      	blx	r3
    if (*currentPresenter)
 8005248:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800524c:	b110      	cbz	r0, 8005254 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800524e:	6803      	ldr	r3, [r0, #0]
 8005250:	685b      	ldr	r3, [r3, #4]
 8005252:	4798      	blx	r3
    if (*currentScreen)
 8005254:	f8d8 0000 	ldr.w	r0, [r8]
 8005258:	b110      	cbz	r0, 8005260 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 800525a:	6803      	ldr	r3, [r0, #0]
 800525c:	681b      	ldr	r3, [r3, #0]
 800525e:	4798      	blx	r3
    if (*currentPresenter)
 8005260:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005264:	b110      	cbz	r0, 800526c <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005266:	6803      	ldr	r3, [r0, #0]
 8005268:	689b      	ldr	r3, [r3, #8]
 800526a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800526c:	68e0      	ldr	r0, [r4, #12]
 800526e:	2100      	movs	r1, #0
 8005270:	f7ff fcee 	bl	8004c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 8005274:	2114      	movs	r1, #20
 8005276:	4605      	mov	r5, r0
 8005278:	f7ff fcee 	bl	8004c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800527c:	68a0      	ldr	r0, [r4, #8]
 800527e:	6803      	ldr	r3, [r0, #0]
 8005280:	2100      	movs	r1, #0
 8005282:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005284:	4798      	blx	r3
 8005286:	4606      	mov	r6, r0
 8005288:	f005 fe96 	bl	800afb8 <_ZN13KnownPageViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800528c:	6860      	ldr	r0, [r4, #4]
 800528e:	6803      	ldr	r3, [r0, #0]
 8005290:	2100      	movs	r1, #0
 8005292:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005294:	4798      	blx	r3
 8005296:	4631      	mov	r1, r6
 8005298:	4604      	mov	r4, r0
 800529a:	f005 fe73 	bl	800af84 <_ZN18KnownPagePresenterC1ER13KnownPageView>
    *currentTrans = newTransition;
 800529e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80052a2:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80052a6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80052aa:	b1dc      	cbz	r4, 80052e4 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x11c>
 80052ac:	1d23      	adds	r3, r4, #4
 80052ae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80052b2:	6833      	ldr	r3, [r6, #0]
 80052b4:	f8c4 a008 	str.w	sl, [r4, #8]
 80052b8:	4630      	mov	r0, r6
 80052ba:	68db      	ldr	r3, [r3, #12]
 80052bc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80052be:	4798      	blx	r3
    newPresenter->activate();
 80052c0:	6823      	ldr	r3, [r4, #0]
 80052c2:	4620      	mov	r0, r4
 80052c4:	681b      	ldr	r3, [r3, #0]
 80052c6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80052c8:	4629      	mov	r1, r5
 80052ca:	4630      	mov	r0, r6
 80052cc:	f015 fd60 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80052d0:	682b      	ldr	r3, [r5, #0]
 80052d2:	4628      	mov	r0, r5
 80052d4:	691b      	ldr	r3, [r3, #16]
 80052d6:	4798      	blx	r3
    newTransition->invalidate();
 80052d8:	682b      	ldr	r3, [r5, #0]
 80052da:	4628      	mov	r0, r5
 80052dc:	695b      	ldr	r3, [r3, #20]
}
 80052de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80052e2:	4718      	bx	r3
    model->bind(newPresenter);
 80052e4:	4623      	mov	r3, r4
 80052e6:	e7e2      	b.n	80052ae <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0xe6>
 80052e8:	0802f8e8 	.word	0x0802f8e8
 80052ec:	08030194 	.word	0x08030194
 80052f0:	0802fa83 	.word	0x0802fa83
 80052f4:	0802faca 	.word	0x0802faca
 80052f8:	0802fb6d 	.word	0x0802fb6d
 80052fc:	2001e220 	.word	0x2001e220
 8005300:	2001e21c 	.word	0x2001e21c

08005304 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv>:
{
 8005304:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<InstructionPage2View, InstructionPage2Presenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005308:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 800530c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800530e:	68a0      	ldr	r0, [r4, #8]
 8005310:	6803      	ldr	r3, [r0, #0]
 8005312:	6a1b      	ldr	r3, [r3, #32]
 8005314:	4798      	blx	r3
 8005316:	f5b0 7fce 	cmp.w	r0, #412	; 0x19c
 800531a:	d205      	bcs.n	8005328 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x24>
 800531c:	4b41      	ldr	r3, [pc, #260]	; (8005424 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x120>)
 800531e:	4a42      	ldr	r2, [pc, #264]	; (8005428 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x124>)
 8005320:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005322:	4842      	ldr	r0, [pc, #264]	; (800542c <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x128>)
 8005324:	f026 fe4e 	bl	802bfc4 <__assert_func>
 8005328:	6860      	ldr	r0, [r4, #4]
 800532a:	6803      	ldr	r3, [r0, #0]
 800532c:	6a1b      	ldr	r3, [r3, #32]
 800532e:	4798      	blx	r3
 8005330:	280f      	cmp	r0, #15
 8005332:	d803      	bhi.n	800533c <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x38>
 8005334:	4b3e      	ldr	r3, [pc, #248]	; (8005430 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x12c>)
 8005336:	4a3c      	ldr	r2, [pc, #240]	; (8005428 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x124>)
 8005338:	21a4      	movs	r1, #164	; 0xa4
 800533a:	e7f2      	b.n	8005322 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800533c:	68e0      	ldr	r0, [r4, #12]
 800533e:	6803      	ldr	r3, [r0, #0]
 8005340:	6a1b      	ldr	r3, [r3, #32]
 8005342:	4798      	blx	r3
 8005344:	2853      	cmp	r0, #83	; 0x53
 8005346:	d803      	bhi.n	8005350 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x4c>
 8005348:	4b3a      	ldr	r3, [pc, #232]	; (8005434 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x130>)
 800534a:	4a37      	ldr	r2, [pc, #220]	; (8005428 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x124>)
 800534c:	21a5      	movs	r1, #165	; 0xa5
 800534e:	e7e8      	b.n	8005322 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 8005350:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005438 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8005354:	f014 f800 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8005358:	f014 f84c 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800535c:	f8d9 0000 	ldr.w	r0, [r9]
 8005360:	b110      	cbz	r0, 8005368 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 8005362:	6803      	ldr	r3, [r0, #0]
 8005364:	68db      	ldr	r3, [r3, #12]
 8005366:	4798      	blx	r3
    if (*currentTrans)
 8005368:	f8d9 0000 	ldr.w	r0, [r9]
 800536c:	b110      	cbz	r0, 8005374 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 800536e:	6803      	ldr	r3, [r0, #0]
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	4798      	blx	r3
    if (*currentScreen)
 8005374:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800543c <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x138>
 8005378:	f8d8 0000 	ldr.w	r0, [r8]
 800537c:	b110      	cbz	r0, 8005384 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800537e:	6803      	ldr	r3, [r0, #0]
 8005380:	695b      	ldr	r3, [r3, #20]
 8005382:	4798      	blx	r3
    if (*currentPresenter)
 8005384:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005388:	b110      	cbz	r0, 8005390 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800538a:	6803      	ldr	r3, [r0, #0]
 800538c:	685b      	ldr	r3, [r3, #4]
 800538e:	4798      	blx	r3
    if (*currentScreen)
 8005390:	f8d8 0000 	ldr.w	r0, [r8]
 8005394:	b110      	cbz	r0, 800539c <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 8005396:	6803      	ldr	r3, [r0, #0]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	4798      	blx	r3
    if (*currentPresenter)
 800539c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80053a0:	b110      	cbz	r0, 80053a8 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80053a2:	6803      	ldr	r3, [r0, #0]
 80053a4:	689b      	ldr	r3, [r3, #8]
 80053a6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80053a8:	68e0      	ldr	r0, [r4, #12]
 80053aa:	2100      	movs	r1, #0
 80053ac:	f7ff fc50 	bl	8004c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 80053b0:	2114      	movs	r1, #20
 80053b2:	4605      	mov	r5, r0
 80053b4:	f7ff fc50 	bl	8004c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80053b8:	68a0      	ldr	r0, [r4, #8]
 80053ba:	6803      	ldr	r3, [r0, #0]
 80053bc:	2100      	movs	r1, #0
 80053be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053c0:	4798      	blx	r3
 80053c2:	4606      	mov	r6, r0
 80053c4:	f005 fdc6 	bl	800af54 <_ZN20InstructionPage2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80053c8:	6860      	ldr	r0, [r4, #4]
 80053ca:	6803      	ldr	r3, [r0, #0]
 80053cc:	2100      	movs	r1, #0
 80053ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053d0:	4798      	blx	r3
 80053d2:	4631      	mov	r1, r6
 80053d4:	4604      	mov	r4, r0
 80053d6:	f005 fda3 	bl	800af20 <_ZN25InstructionPage2PresenterC1ER20InstructionPage2View>
    *currentTrans = newTransition;
 80053da:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80053de:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80053e2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80053e6:	b1dc      	cbz	r4, 8005420 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x11c>
 80053e8:	1d23      	adds	r3, r4, #4
 80053ea:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80053ee:	6833      	ldr	r3, [r6, #0]
 80053f0:	f8c4 a008 	str.w	sl, [r4, #8]
 80053f4:	4630      	mov	r0, r6
 80053f6:	68db      	ldr	r3, [r3, #12]
 80053f8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80053fa:	4798      	blx	r3
    newPresenter->activate();
 80053fc:	6823      	ldr	r3, [r4, #0]
 80053fe:	4620      	mov	r0, r4
 8005400:	681b      	ldr	r3, [r3, #0]
 8005402:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005404:	4629      	mov	r1, r5
 8005406:	4630      	mov	r0, r6
 8005408:	f015 fcc2 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800540c:	682b      	ldr	r3, [r5, #0]
 800540e:	4628      	mov	r0, r5
 8005410:	691b      	ldr	r3, [r3, #16]
 8005412:	4798      	blx	r3
    newTransition->invalidate();
 8005414:	682b      	ldr	r3, [r5, #0]
 8005416:	4628      	mov	r0, r5
 8005418:	695b      	ldr	r3, [r3, #20]
}
 800541a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800541e:	4718      	bx	r3
    model->bind(newPresenter);
 8005420:	4623      	mov	r3, r4
 8005422:	e7e2      	b.n	80053ea <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0xe6>
 8005424:	0802f8e8 	.word	0x0802f8e8
 8005428:	080302b0 	.word	0x080302b0
 800542c:	0802fa83 	.word	0x0802fa83
 8005430:	0802faca 	.word	0x0802faca
 8005434:	0802fb6d 	.word	0x0802fb6d
 8005438:	2001e220 	.word	0x2001e220
 800543c:	2001e21c 	.word	0x2001e21c

08005440 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv>:
{
 8005440:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<InstructionPage1View, InstructionPage1Presenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005444:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005448:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800544a:	68a0      	ldr	r0, [r4, #8]
 800544c:	6803      	ldr	r3, [r0, #0]
 800544e:	6a1b      	ldr	r3, [r3, #32]
 8005450:	4798      	blx	r3
 8005452:	f5b0 7fb0 	cmp.w	r0, #352	; 0x160
 8005456:	d205      	bcs.n	8005464 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x24>
 8005458:	4b41      	ldr	r3, [pc, #260]	; (8005560 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x120>)
 800545a:	4a42      	ldr	r2, [pc, #264]	; (8005564 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x124>)
 800545c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800545e:	4842      	ldr	r0, [pc, #264]	; (8005568 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x128>)
 8005460:	f026 fdb0 	bl	802bfc4 <__assert_func>
 8005464:	6860      	ldr	r0, [r4, #4]
 8005466:	6803      	ldr	r3, [r0, #0]
 8005468:	6a1b      	ldr	r3, [r3, #32]
 800546a:	4798      	blx	r3
 800546c:	280f      	cmp	r0, #15
 800546e:	d803      	bhi.n	8005478 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x38>
 8005470:	4b3e      	ldr	r3, [pc, #248]	; (800556c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x12c>)
 8005472:	4a3c      	ldr	r2, [pc, #240]	; (8005564 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x124>)
 8005474:	21a4      	movs	r1, #164	; 0xa4
 8005476:	e7f2      	b.n	800545e <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005478:	68e0      	ldr	r0, [r4, #12]
 800547a:	6803      	ldr	r3, [r0, #0]
 800547c:	6a1b      	ldr	r3, [r3, #32]
 800547e:	4798      	blx	r3
 8005480:	2853      	cmp	r0, #83	; 0x53
 8005482:	d803      	bhi.n	800548c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x4c>
 8005484:	4b3a      	ldr	r3, [pc, #232]	; (8005570 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x130>)
 8005486:	4a37      	ldr	r2, [pc, #220]	; (8005564 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x124>)
 8005488:	21a5      	movs	r1, #165	; 0xa5
 800548a:	e7e8      	b.n	800545e <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 800548c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005574 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8005490:	f013 ff62 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8005494:	f013 ffae 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005498:	f8d9 0000 	ldr.w	r0, [r9]
 800549c:	b110      	cbz	r0, 80054a4 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 800549e:	6803      	ldr	r3, [r0, #0]
 80054a0:	68db      	ldr	r3, [r3, #12]
 80054a2:	4798      	blx	r3
    if (*currentTrans)
 80054a4:	f8d9 0000 	ldr.w	r0, [r9]
 80054a8:	b110      	cbz	r0, 80054b0 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 80054aa:	6803      	ldr	r3, [r0, #0]
 80054ac:	681b      	ldr	r3, [r3, #0]
 80054ae:	4798      	blx	r3
    if (*currentScreen)
 80054b0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005578 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x138>
 80054b4:	f8d8 0000 	ldr.w	r0, [r8]
 80054b8:	b110      	cbz	r0, 80054c0 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80054ba:	6803      	ldr	r3, [r0, #0]
 80054bc:	695b      	ldr	r3, [r3, #20]
 80054be:	4798      	blx	r3
    if (*currentPresenter)
 80054c0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80054c4:	b110      	cbz	r0, 80054cc <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80054c6:	6803      	ldr	r3, [r0, #0]
 80054c8:	685b      	ldr	r3, [r3, #4]
 80054ca:	4798      	blx	r3
    if (*currentScreen)
 80054cc:	f8d8 0000 	ldr.w	r0, [r8]
 80054d0:	b110      	cbz	r0, 80054d8 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 80054d2:	6803      	ldr	r3, [r0, #0]
 80054d4:	681b      	ldr	r3, [r3, #0]
 80054d6:	4798      	blx	r3
    if (*currentPresenter)
 80054d8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80054dc:	b110      	cbz	r0, 80054e4 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80054de:	6803      	ldr	r3, [r0, #0]
 80054e0:	689b      	ldr	r3, [r3, #8]
 80054e2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80054e4:	68e0      	ldr	r0, [r4, #12]
 80054e6:	2100      	movs	r1, #0
 80054e8:	f7ff fbb2 	bl	8004c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 80054ec:	2114      	movs	r1, #20
 80054ee:	4605      	mov	r5, r0
 80054f0:	f7ff fbb2 	bl	8004c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80054f4:	68a0      	ldr	r0, [r4, #8]
 80054f6:	6803      	ldr	r3, [r0, #0]
 80054f8:	2100      	movs	r1, #0
 80054fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054fc:	4798      	blx	r3
 80054fe:	4606      	mov	r6, r0
 8005500:	f005 fcf6 	bl	800aef0 <_ZN20InstructionPage1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005504:	6860      	ldr	r0, [r4, #4]
 8005506:	6803      	ldr	r3, [r0, #0]
 8005508:	2100      	movs	r1, #0
 800550a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800550c:	4798      	blx	r3
 800550e:	4631      	mov	r1, r6
 8005510:	4604      	mov	r4, r0
 8005512:	f005 fcd3 	bl	800aebc <_ZN25InstructionPage1PresenterC1ER20InstructionPage1View>
    *currentTrans = newTransition;
 8005516:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800551a:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800551e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005522:	b1dc      	cbz	r4, 800555c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x11c>
 8005524:	1d23      	adds	r3, r4, #4
 8005526:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800552a:	6833      	ldr	r3, [r6, #0]
 800552c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005530:	4630      	mov	r0, r6
 8005532:	68db      	ldr	r3, [r3, #12]
 8005534:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005536:	4798      	blx	r3
    newPresenter->activate();
 8005538:	6823      	ldr	r3, [r4, #0]
 800553a:	4620      	mov	r0, r4
 800553c:	681b      	ldr	r3, [r3, #0]
 800553e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005540:	4629      	mov	r1, r5
 8005542:	4630      	mov	r0, r6
 8005544:	f015 fc24 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005548:	682b      	ldr	r3, [r5, #0]
 800554a:	4628      	mov	r0, r5
 800554c:	691b      	ldr	r3, [r3, #16]
 800554e:	4798      	blx	r3
    newTransition->invalidate();
 8005550:	682b      	ldr	r3, [r5, #0]
 8005552:	4628      	mov	r0, r5
 8005554:	695b      	ldr	r3, [r3, #20]
}
 8005556:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800555a:	4718      	bx	r3
    model->bind(newPresenter);
 800555c:	4623      	mov	r3, r4
 800555e:	e7e2      	b.n	8005526 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0xe6>
 8005560:	0802f8e8 	.word	0x0802f8e8
 8005564:	080303da 	.word	0x080303da
 8005568:	0802fa83 	.word	0x0802fa83
 800556c:	0802faca 	.word	0x0802faca
 8005570:	0802fb6d 	.word	0x0802fb6d
 8005574:	2001e220 	.word	0x2001e220
 8005578:	2001e21c 	.word	0x2001e21c

0800557c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 800557c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          calculatedValue(0)
 800557e:	4605      	mov	r5, r0
 8005580:	2600      	movs	r6, #0
 8005582:	4b18      	ldr	r3, [pc, #96]	; (80055e4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh+0x68>)
 8005584:	6046      	str	r6, [r0, #4]
 8005586:	7206      	strb	r6, [r0, #8]
 8005588:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 800558c:	4604      	mov	r4, r0
          calculatedValue(0)
 800558e:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8005590:	460f      	mov	r7, r1
          calculatedValue(0)
 8005592:	f011 f873 	bl	801667c <_ZN8touchgfx14SnapshotWidgetC1Ev>
 8005596:	4b14      	ldr	r3, [pc, #80]	; (80055e8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh+0x6c>)
 8005598:	63a5      	str	r5, [r4, #56]	; 0x38
 800559a:	e9c4 340f 	strd	r3, r4, [r4, #60]	; 0x3c
 800559e:	2220      	movs	r2, #32
 80055a0:	2301      	movs	r3, #1
 80055a2:	e9c4 2311 	strd	r2, r3, [r4, #68]	; 0x44
        if (HAL::USE_ANIMATION_STORAGE)
 80055a6:	4b11      	ldr	r3, [pc, #68]	; (80055ec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh+0x70>)
          calculatedValue(0)
 80055a8:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
        if (HAL::USE_ANIMATION_STORAGE)
 80055ac:	781b      	ldrb	r3, [r3, #0]
          calculatedValue(0)
 80055ae:	f884 604d 	strb.w	r6, [r4, #77]	; 0x4d
 80055b2:	f8a4 6050 	strh.w	r6, [r4, #80]	; 0x50
        if (HAL::USE_ANIMATION_STORAGE)
 80055b6:	b193      	cbz	r3, 80055de <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh+0x62>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80055b8:	4f0d      	ldr	r7, [pc, #52]	; (80055f0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh+0x74>)
 80055ba:	f9b7 3000 	ldrsh.w	r3, [r7]
 80055be:	9300      	str	r3, [sp, #0]
 80055c0:	4b0c      	ldr	r3, [pc, #48]	; (80055f4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh+0x78>)
 80055c2:	4632      	mov	r2, r6
 80055c4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80055c8:	4631      	mov	r1, r6
 80055ca:	4628      	mov	r0, r5
 80055cc:	f7ff f9f4 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
            snapshot.makeSnapshot();
 80055d0:	4628      	mov	r0, r5
 80055d2:	f010 ffcf 	bl	8016574 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
                targetValue = -HAL::DISPLAY_HEIGHT;
 80055d6:	883b      	ldrh	r3, [r7, #0]
 80055d8:	425b      	negs	r3, r3
 80055da:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
    }
 80055de:	4620      	mov	r0, r4
 80055e0:	b003      	add	sp, #12
 80055e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80055e4:	08030e5c 	.word	0x08030e5c
 80055e8:	08030e44 	.word	0x08030e44
 80055ec:	2001e1bf 	.word	0x2001e1bf
 80055f0:	2001e1b6 	.word	0x2001e1b6
 80055f4:	2001e1b4 	.word	0x2001e1b4

080055f8 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv>:
{
 80055f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<InstructionPage1View, InstructionPage1Presenter, touchgfx::SlideTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80055fc:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005600:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005602:	68a0      	ldr	r0, [r4, #8]
 8005604:	6803      	ldr	r3, [r0, #0]
 8005606:	6a1b      	ldr	r3, [r3, #32]
 8005608:	4798      	blx	r3
 800560a:	f5b0 7fb0 	cmp.w	r0, #352	; 0x160
 800560e:	d205      	bcs.n	800561c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x24>
 8005610:	4b42      	ldr	r3, [pc, #264]	; (800571c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x124>)
 8005612:	4a43      	ldr	r2, [pc, #268]	; (8005720 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x128>)
 8005614:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005616:	4843      	ldr	r0, [pc, #268]	; (8005724 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x12c>)
 8005618:	f026 fcd4 	bl	802bfc4 <__assert_func>
 800561c:	6860      	ldr	r0, [r4, #4]
 800561e:	6803      	ldr	r3, [r0, #0]
 8005620:	6a1b      	ldr	r3, [r3, #32]
 8005622:	4798      	blx	r3
 8005624:	280f      	cmp	r0, #15
 8005626:	d803      	bhi.n	8005630 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x38>
 8005628:	4b3f      	ldr	r3, [pc, #252]	; (8005728 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x130>)
 800562a:	4a3d      	ldr	r2, [pc, #244]	; (8005720 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x128>)
 800562c:	21a4      	movs	r1, #164	; 0xa4
 800562e:	e7f2      	b.n	8005616 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005630:	68e0      	ldr	r0, [r4, #12]
 8005632:	6803      	ldr	r3, [r0, #0]
 8005634:	6a1b      	ldr	r3, [r3, #32]
 8005636:	4798      	blx	r3
 8005638:	2853      	cmp	r0, #83	; 0x53
 800563a:	d803      	bhi.n	8005644 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x4c>
 800563c:	4b3b      	ldr	r3, [pc, #236]	; (800572c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x134>)
 800563e:	4a38      	ldr	r2, [pc, #224]	; (8005720 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x128>)
 8005640:	21a5      	movs	r1, #165	; 0xa5
 8005642:	e7e8      	b.n	8005616 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x1e>
    if (*currentTrans)
 8005644:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8005730 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8005648:	f013 fe86 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 800564c:	f013 fed2 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005650:	f8d9 0000 	ldr.w	r0, [r9]
 8005654:	b110      	cbz	r0, 800565c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x64>
        (*currentTrans)->tearDown();
 8005656:	6803      	ldr	r3, [r0, #0]
 8005658:	68db      	ldr	r3, [r3, #12]
 800565a:	4798      	blx	r3
    if (*currentTrans)
 800565c:	f8d9 0000 	ldr.w	r0, [r9]
 8005660:	b110      	cbz	r0, 8005668 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x70>
        (*currentTrans)->~Transition();
 8005662:	6803      	ldr	r3, [r0, #0]
 8005664:	681b      	ldr	r3, [r3, #0]
 8005666:	4798      	blx	r3
    if (*currentScreen)
 8005668:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005734 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x13c>
 800566c:	f8d8 0000 	ldr.w	r0, [r8]
 8005670:	b110      	cbz	r0, 8005678 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8005672:	6803      	ldr	r3, [r0, #0]
 8005674:	695b      	ldr	r3, [r3, #20]
 8005676:	4798      	blx	r3
    if (*currentPresenter)
 8005678:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800567c:	b110      	cbz	r0, 8005684 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800567e:	6803      	ldr	r3, [r0, #0]
 8005680:	685b      	ldr	r3, [r3, #4]
 8005682:	4798      	blx	r3
    if (*currentScreen)
 8005684:	f8d8 0000 	ldr.w	r0, [r8]
 8005688:	b110      	cbz	r0, 8005690 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x98>
        (*currentScreen)->~Screen();
 800568a:	6803      	ldr	r3, [r0, #0]
 800568c:	681b      	ldr	r3, [r3, #0]
 800568e:	4798      	blx	r3
    if (*currentPresenter)
 8005690:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005694:	b110      	cbz	r0, 800569c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005696:	6803      	ldr	r3, [r0, #0]
 8005698:	689b      	ldr	r3, [r3, #8]
 800569a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800569c:	68e0      	ldr	r0, [r4, #12]
 800569e:	6803      	ldr	r3, [r0, #0]
 80056a0:	2100      	movs	r1, #0
 80056a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056a4:	4798      	blx	r3
 80056a6:	2114      	movs	r1, #20
 80056a8:	4605      	mov	r5, r0
 80056aa:	f7ff ff67 	bl	800557c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80056ae:	68a0      	ldr	r0, [r4, #8]
 80056b0:	6803      	ldr	r3, [r0, #0]
 80056b2:	2100      	movs	r1, #0
 80056b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056b6:	4798      	blx	r3
 80056b8:	4606      	mov	r6, r0
 80056ba:	f005 fc19 	bl	800aef0 <_ZN20InstructionPage1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80056be:	6860      	ldr	r0, [r4, #4]
 80056c0:	6803      	ldr	r3, [r0, #0]
 80056c2:	2100      	movs	r1, #0
 80056c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056c6:	4798      	blx	r3
 80056c8:	4631      	mov	r1, r6
 80056ca:	4604      	mov	r4, r0
 80056cc:	f005 fbf6 	bl	800aebc <_ZN25InstructionPage1PresenterC1ER20InstructionPage1View>
    *currentTrans = newTransition;
 80056d0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80056d4:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80056d8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80056dc:	b1dc      	cbz	r4, 8005716 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x11e>
 80056de:	1d23      	adds	r3, r4, #4
 80056e0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80056e4:	6833      	ldr	r3, [r6, #0]
 80056e6:	f8c4 a008 	str.w	sl, [r4, #8]
 80056ea:	4630      	mov	r0, r6
 80056ec:	68db      	ldr	r3, [r3, #12]
 80056ee:	63f4      	str	r4, [r6, #60]	; 0x3c
 80056f0:	4798      	blx	r3
    newPresenter->activate();
 80056f2:	6823      	ldr	r3, [r4, #0]
 80056f4:	4620      	mov	r0, r4
 80056f6:	681b      	ldr	r3, [r3, #0]
 80056f8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80056fa:	4629      	mov	r1, r5
 80056fc:	4630      	mov	r0, r6
 80056fe:	f015 fb47 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005702:	682b      	ldr	r3, [r5, #0]
 8005704:	4628      	mov	r0, r5
 8005706:	691b      	ldr	r3, [r3, #16]
 8005708:	4798      	blx	r3
    newTransition->invalidate();
 800570a:	682b      	ldr	r3, [r5, #0]
 800570c:	4628      	mov	r0, r5
 800570e:	695b      	ldr	r3, [r3, #20]
}
 8005710:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005714:	4718      	bx	r3
    model->bind(newPresenter);
 8005716:	4623      	mov	r3, r4
 8005718:	e7e2      	b.n	80056e0 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0xe8>
 800571a:	bf00      	nop
 800571c:	0802f8e8 	.word	0x0802f8e8
 8005720:	08030504 	.word	0x08030504
 8005724:	0802fa83 	.word	0x0802fa83
 8005728:	0802faca 	.word	0x0802faca
 800572c:	0802fb6d 	.word	0x0802fb6d
 8005730:	2001e220 	.word	0x2001e220
 8005734:	2001e21c 	.word	0x2001e21c

08005738 <_ZN8touchgfx17AbstractPartition2atI19DataDisplayListViewEERT_t>:
 8005738:	6803      	ldr	r3, [r0, #0]
 800573a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800573c:	4718      	bx	r3

0800573e <_ZN8touchgfx17AbstractPartition2atI24DataDisplayListPresenterEERT_t>:
 800573e:	6803      	ldr	r3, [r0, #0]
 8005740:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005742:	4718      	bx	r3

08005744 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv>:
{
 8005744:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<DataDisplayListView, DataDisplayListPresenter, touchgfx::SlideTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005748:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 800574c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800574e:	68a0      	ldr	r0, [r4, #8]
 8005750:	6803      	ldr	r3, [r0, #0]
 8005752:	6a1b      	ldr	r3, [r3, #32]
 8005754:	4798      	blx	r3
 8005756:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 800575a:	d205      	bcs.n	8005768 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x24>
 800575c:	4b41      	ldr	r3, [pc, #260]	; (8005864 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x120>)
 800575e:	4a42      	ldr	r2, [pc, #264]	; (8005868 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x124>)
 8005760:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005762:	4842      	ldr	r0, [pc, #264]	; (800586c <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x128>)
 8005764:	f026 fc2e 	bl	802bfc4 <__assert_func>
 8005768:	6860      	ldr	r0, [r4, #4]
 800576a:	6803      	ldr	r3, [r0, #0]
 800576c:	6a1b      	ldr	r3, [r3, #32]
 800576e:	4798      	blx	r3
 8005770:	280f      	cmp	r0, #15
 8005772:	d803      	bhi.n	800577c <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x38>
 8005774:	4b3e      	ldr	r3, [pc, #248]	; (8005870 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x12c>)
 8005776:	4a3c      	ldr	r2, [pc, #240]	; (8005868 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x124>)
 8005778:	21a4      	movs	r1, #164	; 0xa4
 800577a:	e7f2      	b.n	8005762 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800577c:	68e0      	ldr	r0, [r4, #12]
 800577e:	6803      	ldr	r3, [r0, #0]
 8005780:	6a1b      	ldr	r3, [r3, #32]
 8005782:	4798      	blx	r3
 8005784:	2853      	cmp	r0, #83	; 0x53
 8005786:	d803      	bhi.n	8005790 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x4c>
 8005788:	4b3a      	ldr	r3, [pc, #232]	; (8005874 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x130>)
 800578a:	4a37      	ldr	r2, [pc, #220]	; (8005868 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x124>)
 800578c:	21a5      	movs	r1, #165	; 0xa5
 800578e:	e7e8      	b.n	8005762 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x1e>
    if (*currentTrans)
 8005790:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005878 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8005794:	f013 fde0 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8005798:	f013 fe2c 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800579c:	f8d9 0000 	ldr.w	r0, [r9]
 80057a0:	b110      	cbz	r0, 80057a8 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x64>
        (*currentTrans)->tearDown();
 80057a2:	6803      	ldr	r3, [r0, #0]
 80057a4:	68db      	ldr	r3, [r3, #12]
 80057a6:	4798      	blx	r3
    if (*currentTrans)
 80057a8:	f8d9 0000 	ldr.w	r0, [r9]
 80057ac:	b110      	cbz	r0, 80057b4 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x70>
        (*currentTrans)->~Transition();
 80057ae:	6803      	ldr	r3, [r0, #0]
 80057b0:	681b      	ldr	r3, [r3, #0]
 80057b2:	4798      	blx	r3
    if (*currentScreen)
 80057b4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800587c <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x138>
 80057b8:	f8d8 0000 	ldr.w	r0, [r8]
 80057bc:	b110      	cbz	r0, 80057c4 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80057be:	6803      	ldr	r3, [r0, #0]
 80057c0:	695b      	ldr	r3, [r3, #20]
 80057c2:	4798      	blx	r3
    if (*currentPresenter)
 80057c4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80057c8:	b110      	cbz	r0, 80057d0 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80057ca:	6803      	ldr	r3, [r0, #0]
 80057cc:	685b      	ldr	r3, [r3, #4]
 80057ce:	4798      	blx	r3
    if (*currentScreen)
 80057d0:	f8d8 0000 	ldr.w	r0, [r8]
 80057d4:	b110      	cbz	r0, 80057dc <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x98>
        (*currentScreen)->~Screen();
 80057d6:	6803      	ldr	r3, [r0, #0]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	4798      	blx	r3
    if (*currentPresenter)
 80057dc:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80057e0:	b110      	cbz	r0, 80057e8 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80057e2:	6803      	ldr	r3, [r0, #0]
 80057e4:	689b      	ldr	r3, [r3, #8]
 80057e6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80057e8:	68e0      	ldr	r0, [r4, #12]
 80057ea:	6803      	ldr	r3, [r0, #0]
 80057ec:	2100      	movs	r1, #0
 80057ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057f0:	4798      	blx	r3
 80057f2:	2114      	movs	r1, #20
 80057f4:	4605      	mov	r5, r0
 80057f6:	f7ff fec1 	bl	800557c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80057fa:	2100      	movs	r1, #0
 80057fc:	68a0      	ldr	r0, [r4, #8]
 80057fe:	f7ff ff9b 	bl	8005738 <_ZN8touchgfx17AbstractPartition2atI19DataDisplayListViewEERT_t>
 8005802:	4606      	mov	r6, r0
 8005804:	f005 faba 	bl	800ad7c <_ZN19DataDisplayListViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005808:	6860      	ldr	r0, [r4, #4]
 800580a:	2100      	movs	r1, #0
 800580c:	f7ff ff97 	bl	800573e <_ZN8touchgfx17AbstractPartition2atI24DataDisplayListPresenterEERT_t>
 8005810:	4631      	mov	r1, r6
 8005812:	4604      	mov	r4, r0
 8005814:	f005 fa98 	bl	800ad48 <_ZN24DataDisplayListPresenterC1ER19DataDisplayListView>
    *currentTrans = newTransition;
 8005818:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800581c:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005820:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005824:	b1dc      	cbz	r4, 800585e <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x11a>
 8005826:	1d23      	adds	r3, r4, #4
 8005828:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800582c:	6833      	ldr	r3, [r6, #0]
 800582e:	f8c4 a008 	str.w	sl, [r4, #8]
 8005832:	4630      	mov	r0, r6
 8005834:	68db      	ldr	r3, [r3, #12]
 8005836:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005838:	4798      	blx	r3
    newPresenter->activate();
 800583a:	6823      	ldr	r3, [r4, #0]
 800583c:	4620      	mov	r0, r4
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005842:	4629      	mov	r1, r5
 8005844:	4630      	mov	r0, r6
 8005846:	f015 faa3 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800584a:	682b      	ldr	r3, [r5, #0]
 800584c:	4628      	mov	r0, r5
 800584e:	691b      	ldr	r3, [r3, #16]
 8005850:	4798      	blx	r3
    newTransition->invalidate();
 8005852:	682b      	ldr	r3, [r5, #0]
 8005854:	4628      	mov	r0, r5
 8005856:	695b      	ldr	r3, [r3, #20]
}
 8005858:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800585c:	4718      	bx	r3
    model->bind(newPresenter);
 800585e:	4623      	mov	r3, r4
 8005860:	e7e2      	b.n	8005828 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0xe4>
 8005862:	bf00      	nop
 8005864:	0802f8e8 	.word	0x0802f8e8
 8005868:	0803062e 	.word	0x0803062e
 800586c:	0802fa83 	.word	0x0802fa83
 8005870:	0802faca 	.word	0x0802faca
 8005874:	0802fb6d 	.word	0x0802fb6d
 8005878:	2001e220 	.word	0x2001e220
 800587c:	2001e21c 	.word	0x2001e21c

08005880 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv>:
{
 8005880:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<DataDisplayListView, DataDisplayListPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005884:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8005888:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800588a:	68a8      	ldr	r0, [r5, #8]
 800588c:	6803      	ldr	r3, [r0, #0]
 800588e:	6a1b      	ldr	r3, [r3, #32]
 8005890:	4798      	blx	r3
 8005892:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 8005896:	d205      	bcs.n	80058a4 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x24>
 8005898:	4b44      	ldr	r3, [pc, #272]	; (80059ac <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x12c>)
 800589a:	4a45      	ldr	r2, [pc, #276]	; (80059b0 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x130>)
 800589c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800589e:	4845      	ldr	r0, [pc, #276]	; (80059b4 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x134>)
 80058a0:	f026 fb90 	bl	802bfc4 <__assert_func>
 80058a4:	6868      	ldr	r0, [r5, #4]
 80058a6:	6803      	ldr	r3, [r0, #0]
 80058a8:	6a1b      	ldr	r3, [r3, #32]
 80058aa:	4798      	blx	r3
 80058ac:	280f      	cmp	r0, #15
 80058ae:	d803      	bhi.n	80058b8 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x38>
 80058b0:	4b41      	ldr	r3, [pc, #260]	; (80059b8 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x138>)
 80058b2:	4a3f      	ldr	r2, [pc, #252]	; (80059b0 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x130>)
 80058b4:	21a4      	movs	r1, #164	; 0xa4
 80058b6:	e7f2      	b.n	800589e <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058b8:	68e8      	ldr	r0, [r5, #12]
 80058ba:	6803      	ldr	r3, [r0, #0]
 80058bc:	6a1b      	ldr	r3, [r3, #32]
 80058be:	4798      	blx	r3
 80058c0:	280b      	cmp	r0, #11
 80058c2:	d803      	bhi.n	80058cc <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x4c>
 80058c4:	4b3d      	ldr	r3, [pc, #244]	; (80059bc <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x13c>)
 80058c6:	4a3a      	ldr	r2, [pc, #232]	; (80059b0 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x130>)
 80058c8:	21a5      	movs	r1, #165	; 0xa5
 80058ca:	e7e8      	b.n	800589e <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80058cc:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 80059c4 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 80058d0:	f013 fd42 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 80058d4:	f013 fd8e 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80058d8:	f8d9 0000 	ldr.w	r0, [r9]
 80058dc:	b110      	cbz	r0, 80058e4 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80058de:	6803      	ldr	r3, [r0, #0]
 80058e0:	68db      	ldr	r3, [r3, #12]
 80058e2:	4798      	blx	r3
    if (*currentTrans)
 80058e4:	f8d9 0000 	ldr.w	r0, [r9]
 80058e8:	b110      	cbz	r0, 80058f0 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80058ea:	6803      	ldr	r3, [r0, #0]
 80058ec:	681b      	ldr	r3, [r3, #0]
 80058ee:	4798      	blx	r3
    if (*currentScreen)
 80058f0:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 80059c8 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x148>
 80058f4:	f8d8 0000 	ldr.w	r0, [r8]
 80058f8:	b110      	cbz	r0, 8005900 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80058fa:	6803      	ldr	r3, [r0, #0]
 80058fc:	695b      	ldr	r3, [r3, #20]
 80058fe:	4798      	blx	r3
    if (*currentPresenter)
 8005900:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005904:	b110      	cbz	r0, 800590c <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8005906:	6803      	ldr	r3, [r0, #0]
 8005908:	685b      	ldr	r3, [r3, #4]
 800590a:	4798      	blx	r3
    if (*currentScreen)
 800590c:	f8d8 0000 	ldr.w	r0, [r8]
 8005910:	b110      	cbz	r0, 8005918 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8005912:	6803      	ldr	r3, [r0, #0]
 8005914:	681b      	ldr	r3, [r3, #0]
 8005916:	4798      	blx	r3
    if (*currentPresenter)
 8005918:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800591c:	b110      	cbz	r0, 8005924 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800591e:	6803      	ldr	r3, [r0, #0]
 8005920:	689b      	ldr	r3, [r3, #8]
 8005922:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005924:	68e8      	ldr	r0, [r5, #12]
 8005926:	6803      	ldr	r3, [r0, #0]
 8005928:	2100      	movs	r1, #0
 800592a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800592c:	4798      	blx	r3
 800592e:	f04f 0b00 	mov.w	fp, #0
 8005932:	4b23      	ldr	r3, [pc, #140]	; (80059c0 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x140>)
 8005934:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005936:	4659      	mov	r1, fp
 8005938:	4604      	mov	r4, r0
 800593a:	f8c0 b004 	str.w	fp, [r0, #4]
 800593e:	f880 b008 	strb.w	fp, [r0, #8]
 8005942:	68a8      	ldr	r0, [r5, #8]
 8005944:	f7ff fef8 	bl	8005738 <_ZN8touchgfx17AbstractPartition2atI19DataDisplayListViewEERT_t>
 8005948:	4606      	mov	r6, r0
 800594a:	f005 fa17 	bl	800ad7c <_ZN19DataDisplayListViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800594e:	6868      	ldr	r0, [r5, #4]
 8005950:	4659      	mov	r1, fp
 8005952:	f7ff fef4 	bl	800573e <_ZN8touchgfx17AbstractPartition2atI24DataDisplayListPresenterEERT_t>
 8005956:	4631      	mov	r1, r6
 8005958:	4605      	mov	r5, r0
 800595a:	f005 f9f5 	bl	800ad48 <_ZN24DataDisplayListPresenterC1ER19DataDisplayListView>
    *currentTrans = newTransition;
 800595e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8005962:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005966:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800596a:	b1e5      	cbz	r5, 80059a6 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x126>
 800596c:	1d2b      	adds	r3, r5, #4
 800596e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005972:	6833      	ldr	r3, [r6, #0]
 8005974:	f8c5 a008 	str.w	sl, [r5, #8]
 8005978:	4630      	mov	r0, r6
 800597a:	68db      	ldr	r3, [r3, #12]
 800597c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800597e:	4798      	blx	r3
    newPresenter->activate();
 8005980:	682b      	ldr	r3, [r5, #0]
 8005982:	4628      	mov	r0, r5
 8005984:	681b      	ldr	r3, [r3, #0]
 8005986:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005988:	4621      	mov	r1, r4
 800598a:	4630      	mov	r0, r6
 800598c:	f015 fa00 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005990:	6823      	ldr	r3, [r4, #0]
 8005992:	4620      	mov	r0, r4
 8005994:	691b      	ldr	r3, [r3, #16]
 8005996:	4798      	blx	r3
    newTransition->invalidate();
 8005998:	6823      	ldr	r3, [r4, #0]
 800599a:	695b      	ldr	r3, [r3, #20]
 800599c:	4620      	mov	r0, r4
}
 800599e:	b001      	add	sp, #4
 80059a0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059a4:	4718      	bx	r3
    model->bind(newPresenter);
 80059a6:	462b      	mov	r3, r5
 80059a8:	e7e1      	b.n	800596e <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0xee>
 80059aa:	bf00      	nop
 80059ac:	0802f8e8 	.word	0x0802f8e8
 80059b0:	08030756 	.word	0x08030756
 80059b4:	0802fa83 	.word	0x0802fa83
 80059b8:	0802faca 	.word	0x0802faca
 80059bc:	0802fb6d 	.word	0x0802fb6d
 80059c0:	08030d74 	.word	0x08030d74
 80059c4:	2001e220 	.word	0x2001e220
 80059c8:	2001e21c 	.word	0x2001e21c

080059cc <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv>:
{
 80059cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<DataDisplayListView, DataDisplayListPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80059d0:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80059d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80059d6:	68a8      	ldr	r0, [r5, #8]
 80059d8:	6803      	ldr	r3, [r0, #0]
 80059da:	6a1b      	ldr	r3, [r3, #32]
 80059dc:	4798      	blx	r3
 80059de:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 80059e2:	d205      	bcs.n	80059f0 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x24>
 80059e4:	4b57      	ldr	r3, [pc, #348]	; (8005b44 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x178>)
 80059e6:	4a58      	ldr	r2, [pc, #352]	; (8005b48 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x17c>)
 80059e8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80059ea:	4858      	ldr	r0, [pc, #352]	; (8005b4c <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x180>)
 80059ec:	f026 faea 	bl	802bfc4 <__assert_func>
 80059f0:	6868      	ldr	r0, [r5, #4]
 80059f2:	6803      	ldr	r3, [r0, #0]
 80059f4:	6a1b      	ldr	r3, [r3, #32]
 80059f6:	4798      	blx	r3
 80059f8:	280f      	cmp	r0, #15
 80059fa:	d803      	bhi.n	8005a04 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x38>
 80059fc:	4b54      	ldr	r3, [pc, #336]	; (8005b50 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x184>)
 80059fe:	4a52      	ldr	r2, [pc, #328]	; (8005b48 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x17c>)
 8005a00:	21a4      	movs	r1, #164	; 0xa4
 8005a02:	e7f2      	b.n	80059ea <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a04:	68e8      	ldr	r0, [r5, #12]
 8005a06:	6803      	ldr	r3, [r0, #0]
 8005a08:	6a1b      	ldr	r3, [r3, #32]
 8005a0a:	4798      	blx	r3
 8005a0c:	2853      	cmp	r0, #83	; 0x53
 8005a0e:	d803      	bhi.n	8005a18 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x4c>
 8005a10:	4b50      	ldr	r3, [pc, #320]	; (8005b54 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x188>)
 8005a12:	4a4d      	ldr	r2, [pc, #308]	; (8005b48 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x17c>)
 8005a14:	21a5      	movs	r1, #165	; 0xa5
 8005a16:	e7e8      	b.n	80059ea <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x1e>
    if (*currentTrans)
 8005a18:	f8df 914c 	ldr.w	r9, [pc, #332]	; 8005b68 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 8005a1c:	f013 fc9c 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8005a20:	f013 fce8 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005a24:	f8d9 0000 	ldr.w	r0, [r9]
 8005a28:	b110      	cbz	r0, 8005a30 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 8005a2a:	6803      	ldr	r3, [r0, #0]
 8005a2c:	68db      	ldr	r3, [r3, #12]
 8005a2e:	4798      	blx	r3
    if (*currentTrans)
 8005a30:	f8d9 0000 	ldr.w	r0, [r9]
 8005a34:	b110      	cbz	r0, 8005a3c <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 8005a36:	6803      	ldr	r3, [r0, #0]
 8005a38:	681b      	ldr	r3, [r3, #0]
 8005a3a:	4798      	blx	r3
    if (*currentScreen)
 8005a3c:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8005b6c <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x1a0>
 8005a40:	f8d8 0000 	ldr.w	r0, [r8]
 8005a44:	b110      	cbz	r0, 8005a4c <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8005a46:	6803      	ldr	r3, [r0, #0]
 8005a48:	695b      	ldr	r3, [r3, #20]
 8005a4a:	4798      	blx	r3
    if (*currentPresenter)
 8005a4c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005a50:	b110      	cbz	r0, 8005a58 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8005a52:	6803      	ldr	r3, [r0, #0]
 8005a54:	685b      	ldr	r3, [r3, #4]
 8005a56:	4798      	blx	r3
    if (*currentScreen)
 8005a58:	f8d8 0000 	ldr.w	r0, [r8]
 8005a5c:	b110      	cbz	r0, 8005a64 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 8005a5e:	6803      	ldr	r3, [r0, #0]
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	4798      	blx	r3
    if (*currentPresenter)
 8005a64:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005a68:	b110      	cbz	r0, 8005a70 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005a6a:	6803      	ldr	r3, [r0, #0]
 8005a6c:	689b      	ldr	r3, [r3, #8]
 8005a6e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a70:	68e8      	ldr	r0, [r5, #12]
 8005a72:	6803      	ldr	r3, [r0, #0]
 8005a74:	2100      	movs	r1, #0
 8005a76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a78:	4798      	blx	r3
          calculatedValue(0)
 8005a7a:	4606      	mov	r6, r0
 8005a7c:	2200      	movs	r2, #0
 8005a7e:	4b36      	ldr	r3, [pc, #216]	; (8005b58 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x18c>)
 8005a80:	6042      	str	r2, [r0, #4]
 8005a82:	7202      	strb	r2, [r0, #8]
 8005a84:	f846 3b0c 	str.w	r3, [r6], #12
 8005a88:	4604      	mov	r4, r0
 8005a8a:	4630      	mov	r0, r6
 8005a8c:	f010 fdf6 	bl	801667c <_ZN8touchgfx14SnapshotWidgetC1Ev>
 8005a90:	4b32      	ldr	r3, [pc, #200]	; (8005b5c <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x190>)
 8005a92:	63a6      	str	r6, [r4, #56]	; 0x38
 8005a94:	2220      	movs	r2, #32
 8005a96:	e9c4 340f 	strd	r3, r4, [r4, #60]	; 0x3c
 8005a9a:	2301      	movs	r3, #1
 8005a9c:	e9c4 2311 	strd	r2, r3, [r4, #68]	; 0x44
 8005aa0:	2314      	movs	r3, #20
 8005aa2:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
        if (HAL::USE_ANIMATION_STORAGE)
 8005aa6:	4b2e      	ldr	r3, [pc, #184]	; (8005b60 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x194>)
 8005aa8:	781b      	ldrb	r3, [r3, #0]
          calculatedValue(0)
 8005aaa:	2200      	movs	r2, #0
 8005aac:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
        if (HAL::USE_ANIMATION_STORAGE)
 8005ab0:	b19b      	cbz	r3, 8005ada <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x10e>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005ab2:	4b2c      	ldr	r3, [pc, #176]	; (8005b64 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x198>)
 8005ab4:	f8df b0b8 	ldr.w	fp, [pc, #184]	; 8005b70 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x1a4>
 8005ab8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005abc:	9300      	str	r3, [sp, #0]
 8005abe:	4611      	mov	r1, r2
 8005ac0:	f9bb 3000 	ldrsh.w	r3, [fp]
 8005ac4:	4630      	mov	r0, r6
 8005ac6:	f7fe ff77 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
            snapshot.makeSnapshot();
 8005aca:	4630      	mov	r0, r6
 8005acc:	f010 fd52 	bl	8016574 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
                targetValue = -HAL::DISPLAY_WIDTH;
 8005ad0:	f8bb 3000 	ldrh.w	r3, [fp]
 8005ad4:	425b      	negs	r3, r3
 8005ad6:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005ada:	2100      	movs	r1, #0
 8005adc:	68a8      	ldr	r0, [r5, #8]
 8005ade:	f7ff fe2b 	bl	8005738 <_ZN8touchgfx17AbstractPartition2atI19DataDisplayListViewEERT_t>
 8005ae2:	4606      	mov	r6, r0
 8005ae4:	f005 f94a 	bl	800ad7c <_ZN19DataDisplayListViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005ae8:	6868      	ldr	r0, [r5, #4]
 8005aea:	2100      	movs	r1, #0
 8005aec:	f7ff fe27 	bl	800573e <_ZN8touchgfx17AbstractPartition2atI24DataDisplayListPresenterEERT_t>
 8005af0:	4631      	mov	r1, r6
 8005af2:	4605      	mov	r5, r0
 8005af4:	f005 f928 	bl	800ad48 <_ZN24DataDisplayListPresenterC1ER19DataDisplayListView>
    *currentTrans = newTransition;
 8005af8:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8005afc:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005b00:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005b04:	b1e5      	cbz	r5, 8005b40 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x174>
 8005b06:	1d2b      	adds	r3, r5, #4
 8005b08:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005b0c:	6833      	ldr	r3, [r6, #0]
 8005b0e:	f8c5 a008 	str.w	sl, [r5, #8]
 8005b12:	4630      	mov	r0, r6
 8005b14:	68db      	ldr	r3, [r3, #12]
 8005b16:	63f5      	str	r5, [r6, #60]	; 0x3c
 8005b18:	4798      	blx	r3
    newPresenter->activate();
 8005b1a:	682b      	ldr	r3, [r5, #0]
 8005b1c:	4628      	mov	r0, r5
 8005b1e:	681b      	ldr	r3, [r3, #0]
 8005b20:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005b22:	4621      	mov	r1, r4
 8005b24:	4630      	mov	r0, r6
 8005b26:	f015 f933 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005b2a:	6823      	ldr	r3, [r4, #0]
 8005b2c:	4620      	mov	r0, r4
 8005b2e:	691b      	ldr	r3, [r3, #16]
 8005b30:	4798      	blx	r3
    newTransition->invalidate();
 8005b32:	6823      	ldr	r3, [r4, #0]
 8005b34:	695b      	ldr	r3, [r3, #20]
 8005b36:	4620      	mov	r0, r4
}
 8005b38:	b003      	add	sp, #12
 8005b3a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b3e:	4718      	bx	r3
    model->bind(newPresenter);
 8005b40:	462b      	mov	r3, r5
 8005b42:	e7e1      	b.n	8005b08 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x13c>
 8005b44:	0802f8e8 	.word	0x0802f8e8
 8005b48:	0803086a 	.word	0x0803086a
 8005b4c:	0802fa83 	.word	0x0802fa83
 8005b50:	0802faca 	.word	0x0802faca
 8005b54:	0802fb6d 	.word	0x0802fb6d
 8005b58:	08030dd4 	.word	0x08030dd4
 8005b5c:	08030dbc 	.word	0x08030dbc
 8005b60:	2001e1bf 	.word	0x2001e1bf
 8005b64:	2001e1b6 	.word	0x2001e1b6
 8005b68:	2001e220 	.word	0x2001e220
 8005b6c:	2001e21c 	.word	0x2001e21c
 8005b70:	2001e1b4 	.word	0x2001e1b4

08005b74 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv>:
{
 8005b74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<DataDisplayListView, DataDisplayListPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005b78:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005b7c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005b7e:	68a0      	ldr	r0, [r4, #8]
 8005b80:	6803      	ldr	r3, [r0, #0]
 8005b82:	6a1b      	ldr	r3, [r3, #32]
 8005b84:	4798      	blx	r3
 8005b86:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 8005b8a:	d205      	bcs.n	8005b98 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x24>
 8005b8c:	4b40      	ldr	r3, [pc, #256]	; (8005c90 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x11c>)
 8005b8e:	4a41      	ldr	r2, [pc, #260]	; (8005c94 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x120>)
 8005b90:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005b92:	4841      	ldr	r0, [pc, #260]	; (8005c98 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x124>)
 8005b94:	f026 fa16 	bl	802bfc4 <__assert_func>
 8005b98:	6860      	ldr	r0, [r4, #4]
 8005b9a:	6803      	ldr	r3, [r0, #0]
 8005b9c:	6a1b      	ldr	r3, [r3, #32]
 8005b9e:	4798      	blx	r3
 8005ba0:	280f      	cmp	r0, #15
 8005ba2:	d803      	bhi.n	8005bac <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x38>
 8005ba4:	4b3d      	ldr	r3, [pc, #244]	; (8005c9c <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x128>)
 8005ba6:	4a3b      	ldr	r2, [pc, #236]	; (8005c94 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x120>)
 8005ba8:	21a4      	movs	r1, #164	; 0xa4
 8005baa:	e7f2      	b.n	8005b92 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005bac:	68e0      	ldr	r0, [r4, #12]
 8005bae:	6803      	ldr	r3, [r0, #0]
 8005bb0:	6a1b      	ldr	r3, [r3, #32]
 8005bb2:	4798      	blx	r3
 8005bb4:	2853      	cmp	r0, #83	; 0x53
 8005bb6:	d803      	bhi.n	8005bc0 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x4c>
 8005bb8:	4b39      	ldr	r3, [pc, #228]	; (8005ca0 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x12c>)
 8005bba:	4a36      	ldr	r2, [pc, #216]	; (8005c94 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x120>)
 8005bbc:	21a5      	movs	r1, #165	; 0xa5
 8005bbe:	e7e8      	b.n	8005b92 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 8005bc0:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8005ca4 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x130>
    Application::getInstance()->clearAllTimerWidgets();
 8005bc4:	f013 fbc8 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8005bc8:	f013 fc14 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005bcc:	f8d9 0000 	ldr.w	r0, [r9]
 8005bd0:	b110      	cbz	r0, 8005bd8 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 8005bd2:	6803      	ldr	r3, [r0, #0]
 8005bd4:	68db      	ldr	r3, [r3, #12]
 8005bd6:	4798      	blx	r3
    if (*currentTrans)
 8005bd8:	f8d9 0000 	ldr.w	r0, [r9]
 8005bdc:	b110      	cbz	r0, 8005be4 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 8005bde:	6803      	ldr	r3, [r0, #0]
 8005be0:	681b      	ldr	r3, [r3, #0]
 8005be2:	4798      	blx	r3
    if (*currentScreen)
 8005be4:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8005ca8 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x134>
 8005be8:	f8d8 0000 	ldr.w	r0, [r8]
 8005bec:	b110      	cbz	r0, 8005bf4 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8005bee:	6803      	ldr	r3, [r0, #0]
 8005bf0:	695b      	ldr	r3, [r3, #20]
 8005bf2:	4798      	blx	r3
    if (*currentPresenter)
 8005bf4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005bf8:	b110      	cbz	r0, 8005c00 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8005bfa:	6803      	ldr	r3, [r0, #0]
 8005bfc:	685b      	ldr	r3, [r3, #4]
 8005bfe:	4798      	blx	r3
    if (*currentScreen)
 8005c00:	f8d8 0000 	ldr.w	r0, [r8]
 8005c04:	b110      	cbz	r0, 8005c0c <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 8005c06:	6803      	ldr	r3, [r0, #0]
 8005c08:	681b      	ldr	r3, [r3, #0]
 8005c0a:	4798      	blx	r3
    if (*currentPresenter)
 8005c0c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005c10:	b110      	cbz	r0, 8005c18 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005c12:	6803      	ldr	r3, [r0, #0]
 8005c14:	689b      	ldr	r3, [r3, #8]
 8005c16:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005c18:	68e0      	ldr	r0, [r4, #12]
 8005c1a:	2100      	movs	r1, #0
 8005c1c:	f7ff f818 	bl	8004c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 8005c20:	2114      	movs	r1, #20
 8005c22:	4605      	mov	r5, r0
 8005c24:	f7ff f818 	bl	8004c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005c28:	2100      	movs	r1, #0
 8005c2a:	68a0      	ldr	r0, [r4, #8]
 8005c2c:	f7ff fd84 	bl	8005738 <_ZN8touchgfx17AbstractPartition2atI19DataDisplayListViewEERT_t>
 8005c30:	4606      	mov	r6, r0
 8005c32:	f005 f8a3 	bl	800ad7c <_ZN19DataDisplayListViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c36:	6860      	ldr	r0, [r4, #4]
 8005c38:	2100      	movs	r1, #0
 8005c3a:	f7ff fd80 	bl	800573e <_ZN8touchgfx17AbstractPartition2atI24DataDisplayListPresenterEERT_t>
 8005c3e:	4631      	mov	r1, r6
 8005c40:	4604      	mov	r4, r0
 8005c42:	f005 f881 	bl	800ad48 <_ZN24DataDisplayListPresenterC1ER19DataDisplayListView>
    *currentTrans = newTransition;
 8005c46:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c4a:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005c4e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c52:	b1dc      	cbz	r4, 8005c8c <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x118>
 8005c54:	1d23      	adds	r3, r4, #4
 8005c56:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c5a:	6833      	ldr	r3, [r6, #0]
 8005c5c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c60:	4630      	mov	r0, r6
 8005c62:	68db      	ldr	r3, [r3, #12]
 8005c64:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005c66:	4798      	blx	r3
    newPresenter->activate();
 8005c68:	6823      	ldr	r3, [r4, #0]
 8005c6a:	4620      	mov	r0, r4
 8005c6c:	681b      	ldr	r3, [r3, #0]
 8005c6e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c70:	4629      	mov	r1, r5
 8005c72:	4630      	mov	r0, r6
 8005c74:	f015 f88c 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005c78:	682b      	ldr	r3, [r5, #0]
 8005c7a:	4628      	mov	r0, r5
 8005c7c:	691b      	ldr	r3, [r3, #16]
 8005c7e:	4798      	blx	r3
    newTransition->invalidate();
 8005c80:	682b      	ldr	r3, [r5, #0]
 8005c82:	4628      	mov	r0, r5
 8005c84:	695b      	ldr	r3, [r3, #20]
}
 8005c86:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c8a:	4718      	bx	r3
    model->bind(newPresenter);
 8005c8c:	4623      	mov	r3, r4
 8005c8e:	e7e2      	b.n	8005c56 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0xe2>
 8005c90:	0802f8e8 	.word	0x0802f8e8
 8005c94:	08030991 	.word	0x08030991
 8005c98:	0802fa83 	.word	0x0802fa83
 8005c9c:	0802faca 	.word	0x0802faca
 8005ca0:	0802fb6d 	.word	0x0802fb6d
 8005ca4:	2001e220 	.word	0x2001e220
 8005ca8:	2001e21c 	.word	0x2001e21c

08005cac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8005cac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          calculatedValue(0)
 8005cae:	4605      	mov	r5, r0
 8005cb0:	2600      	movs	r6, #0
 8005cb2:	4b18      	ldr	r3, [pc, #96]	; (8005d14 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x68>)
 8005cb4:	6046      	str	r6, [r0, #4]
 8005cb6:	7206      	strb	r6, [r0, #8]
 8005cb8:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8005cbc:	4604      	mov	r4, r0
          calculatedValue(0)
 8005cbe:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8005cc0:	460f      	mov	r7, r1
          calculatedValue(0)
 8005cc2:	f010 fcdb 	bl	801667c <_ZN8touchgfx14SnapshotWidgetC1Ev>
 8005cc6:	4b14      	ldr	r3, [pc, #80]	; (8005d18 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x6c>)
 8005cc8:	63a5      	str	r5, [r4, #56]	; 0x38
 8005cca:	e9c4 340f 	strd	r3, r4, [r4, #60]	; 0x3c
 8005cce:	2220      	movs	r2, #32
 8005cd0:	2301      	movs	r3, #1
 8005cd2:	e9c4 2311 	strd	r2, r3, [r4, #68]	; 0x44
        if (HAL::USE_ANIMATION_STORAGE)
 8005cd6:	4b11      	ldr	r3, [pc, #68]	; (8005d1c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x70>)
          calculatedValue(0)
 8005cd8:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
        if (HAL::USE_ANIMATION_STORAGE)
 8005cdc:	781b      	ldrb	r3, [r3, #0]
          calculatedValue(0)
 8005cde:	f884 604d 	strb.w	r6, [r4, #77]	; 0x4d
 8005ce2:	f8a4 6050 	strh.w	r6, [r4, #80]	; 0x50
        if (HAL::USE_ANIMATION_STORAGE)
 8005ce6:	b18b      	cbz	r3, 8005d0c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x60>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005ce8:	4b0d      	ldr	r3, [pc, #52]	; (8005d20 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x74>)
 8005cea:	4f0e      	ldr	r7, [pc, #56]	; (8005d24 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x78>)
 8005cec:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005cf0:	9300      	str	r3, [sp, #0]
 8005cf2:	f9b7 3000 	ldrsh.w	r3, [r7]
 8005cf6:	4632      	mov	r2, r6
 8005cf8:	4631      	mov	r1, r6
 8005cfa:	4628      	mov	r0, r5
 8005cfc:	f7fe fe5c 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
            snapshot.makeSnapshot();
 8005d00:	4628      	mov	r0, r5
 8005d02:	f010 fc37 	bl	8016574 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
                targetValue = HAL::DISPLAY_WIDTH;
 8005d06:	883b      	ldrh	r3, [r7, #0]
 8005d08:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
    }
 8005d0c:	4620      	mov	r0, r4
 8005d0e:	b003      	add	sp, #12
 8005d10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005d12:	bf00      	nop
 8005d14:	08030e18 	.word	0x08030e18
 8005d18:	08030e00 	.word	0x08030e00
 8005d1c:	2001e1bf 	.word	0x2001e1bf
 8005d20:	2001e1b6 	.word	0x2001e1b6
 8005d24:	2001e1b4 	.word	0x2001e1b4

08005d28 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv>:
{
 8005d28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ReactanceGraphView, ReactanceGraphPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005d2c:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005d30:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005d32:	68a0      	ldr	r0, [r4, #8]
 8005d34:	6803      	ldr	r3, [r0, #0]
 8005d36:	6a1b      	ldr	r3, [r3, #32]
 8005d38:	4798      	blx	r3
 8005d3a:	f241 73b7 	movw	r3, #6071	; 0x17b7
 8005d3e:	4298      	cmp	r0, r3
 8005d40:	d805      	bhi.n	8005d4e <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x26>
 8005d42:	4b42      	ldr	r3, [pc, #264]	; (8005e4c <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x124>)
 8005d44:	4a42      	ldr	r2, [pc, #264]	; (8005e50 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x128>)
 8005d46:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005d48:	4842      	ldr	r0, [pc, #264]	; (8005e54 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x12c>)
 8005d4a:	f026 f93b 	bl	802bfc4 <__assert_func>
 8005d4e:	6860      	ldr	r0, [r4, #4]
 8005d50:	6803      	ldr	r3, [r0, #0]
 8005d52:	6a1b      	ldr	r3, [r3, #32]
 8005d54:	4798      	blx	r3
 8005d56:	280f      	cmp	r0, #15
 8005d58:	d803      	bhi.n	8005d62 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x3a>
 8005d5a:	4b3f      	ldr	r3, [pc, #252]	; (8005e58 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x130>)
 8005d5c:	4a3c      	ldr	r2, [pc, #240]	; (8005e50 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x128>)
 8005d5e:	21a4      	movs	r1, #164	; 0xa4
 8005d60:	e7f2      	b.n	8005d48 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005d62:	68e0      	ldr	r0, [r4, #12]
 8005d64:	6803      	ldr	r3, [r0, #0]
 8005d66:	6a1b      	ldr	r3, [r3, #32]
 8005d68:	4798      	blx	r3
 8005d6a:	2853      	cmp	r0, #83	; 0x53
 8005d6c:	d803      	bhi.n	8005d76 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x4e>
 8005d6e:	4b3b      	ldr	r3, [pc, #236]	; (8005e5c <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x134>)
 8005d70:	4a37      	ldr	r2, [pc, #220]	; (8005e50 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x128>)
 8005d72:	21a5      	movs	r1, #165	; 0xa5
 8005d74:	e7e8      	b.n	8005d48 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x20>
    if (*currentTrans)
 8005d76:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8005e60 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8005d7a:	f013 faed 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8005d7e:	f013 fb39 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005d82:	f8d9 0000 	ldr.w	r0, [r9]
 8005d86:	b110      	cbz	r0, 8005d8e <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8005d88:	6803      	ldr	r3, [r0, #0]
 8005d8a:	68db      	ldr	r3, [r3, #12]
 8005d8c:	4798      	blx	r3
    if (*currentTrans)
 8005d8e:	f8d9 0000 	ldr.w	r0, [r9]
 8005d92:	b110      	cbz	r0, 8005d9a <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8005d94:	6803      	ldr	r3, [r0, #0]
 8005d96:	681b      	ldr	r3, [r3, #0]
 8005d98:	4798      	blx	r3
    if (*currentScreen)
 8005d9a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005e64 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x13c>
 8005d9e:	f8d8 0000 	ldr.w	r0, [r8]
 8005da2:	b110      	cbz	r0, 8005daa <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005da4:	6803      	ldr	r3, [r0, #0]
 8005da6:	695b      	ldr	r3, [r3, #20]
 8005da8:	4798      	blx	r3
    if (*currentPresenter)
 8005daa:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005dae:	b110      	cbz	r0, 8005db6 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005db0:	6803      	ldr	r3, [r0, #0]
 8005db2:	685b      	ldr	r3, [r3, #4]
 8005db4:	4798      	blx	r3
    if (*currentScreen)
 8005db6:	f8d8 0000 	ldr.w	r0, [r8]
 8005dba:	b110      	cbz	r0, 8005dc2 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005dbc:	6803      	ldr	r3, [r0, #0]
 8005dbe:	681b      	ldr	r3, [r3, #0]
 8005dc0:	4798      	blx	r3
    if (*currentPresenter)
 8005dc2:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005dc6:	b110      	cbz	r0, 8005dce <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005dc8:	6803      	ldr	r3, [r0, #0]
 8005dca:	689b      	ldr	r3, [r3, #8]
 8005dcc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005dce:	68e0      	ldr	r0, [r4, #12]
 8005dd0:	6803      	ldr	r3, [r0, #0]
 8005dd2:	2100      	movs	r1, #0
 8005dd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005dd6:	4798      	blx	r3
 8005dd8:	2114      	movs	r1, #20
 8005dda:	4605      	mov	r5, r0
 8005ddc:	f7ff ff66 	bl	8005cac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005de0:	68a0      	ldr	r0, [r4, #8]
 8005de2:	6803      	ldr	r3, [r0, #0]
 8005de4:	2100      	movs	r1, #0
 8005de6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005de8:	4798      	blx	r3
 8005dea:	4606      	mov	r6, r0
 8005dec:	f005 fa4e 	bl	800b28c <_ZN18ReactanceGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005df0:	6860      	ldr	r0, [r4, #4]
 8005df2:	6803      	ldr	r3, [r0, #0]
 8005df4:	2100      	movs	r1, #0
 8005df6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005df8:	4798      	blx	r3
 8005dfa:	4631      	mov	r1, r6
 8005dfc:	4604      	mov	r4, r0
 8005dfe:	f005 f9bb 	bl	800b178 <_ZN23ReactanceGraphPresenterC1ER18ReactanceGraphView>
    *currentTrans = newTransition;
 8005e02:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005e06:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005e0a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005e0e:	b1dc      	cbz	r4, 8005e48 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x120>
 8005e10:	1d23      	adds	r3, r4, #4
 8005e12:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005e16:	6833      	ldr	r3, [r6, #0]
 8005e18:	f8c4 a008 	str.w	sl, [r4, #8]
 8005e1c:	4630      	mov	r0, r6
 8005e1e:	68db      	ldr	r3, [r3, #12]
 8005e20:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005e22:	4798      	blx	r3
    newPresenter->activate();
 8005e24:	6823      	ldr	r3, [r4, #0]
 8005e26:	4620      	mov	r0, r4
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005e2c:	4629      	mov	r1, r5
 8005e2e:	4630      	mov	r0, r6
 8005e30:	f014 ffae 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005e34:	682b      	ldr	r3, [r5, #0]
 8005e36:	4628      	mov	r0, r5
 8005e38:	691b      	ldr	r3, [r3, #16]
 8005e3a:	4798      	blx	r3
    newTransition->invalidate();
 8005e3c:	682b      	ldr	r3, [r5, #0]
 8005e3e:	4628      	mov	r0, r5
 8005e40:	695b      	ldr	r3, [r3, #20]
}
 8005e42:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e46:	4718      	bx	r3
    model->bind(newPresenter);
 8005e48:	4623      	mov	r3, r4
 8005e4a:	e7e2      	b.n	8005e12 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0xea>
 8005e4c:	0802f8e8 	.word	0x0802f8e8
 8005e50:	08030ab9 	.word	0x08030ab9
 8005e54:	0802fa83 	.word	0x0802fa83
 8005e58:	0802faca 	.word	0x0802faca
 8005e5c:	0802fb6d 	.word	0x0802fb6d
 8005e60:	2001e220 	.word	0x2001e220
 8005e64:	2001e21c 	.word	0x2001e21c

08005e68 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv>:
{
 8005e68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ResistanceGraphView, ResistanceGraphPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005e6c:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005e70:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005e72:	68a0      	ldr	r0, [r4, #8]
 8005e74:	6803      	ldr	r3, [r0, #0]
 8005e76:	6a1b      	ldr	r3, [r3, #32]
 8005e78:	4798      	blx	r3
 8005e7a:	f241 73b7 	movw	r3, #6071	; 0x17b7
 8005e7e:	4298      	cmp	r0, r3
 8005e80:	d805      	bhi.n	8005e8e <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x26>
 8005e82:	4b42      	ldr	r3, [pc, #264]	; (8005f8c <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x124>)
 8005e84:	4a42      	ldr	r2, [pc, #264]	; (8005f90 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x128>)
 8005e86:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005e88:	4842      	ldr	r0, [pc, #264]	; (8005f94 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x12c>)
 8005e8a:	f026 f89b 	bl	802bfc4 <__assert_func>
 8005e8e:	6860      	ldr	r0, [r4, #4]
 8005e90:	6803      	ldr	r3, [r0, #0]
 8005e92:	6a1b      	ldr	r3, [r3, #32]
 8005e94:	4798      	blx	r3
 8005e96:	280f      	cmp	r0, #15
 8005e98:	d803      	bhi.n	8005ea2 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x3a>
 8005e9a:	4b3f      	ldr	r3, [pc, #252]	; (8005f98 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x130>)
 8005e9c:	4a3c      	ldr	r2, [pc, #240]	; (8005f90 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x128>)
 8005e9e:	21a4      	movs	r1, #164	; 0xa4
 8005ea0:	e7f2      	b.n	8005e88 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005ea2:	68e0      	ldr	r0, [r4, #12]
 8005ea4:	6803      	ldr	r3, [r0, #0]
 8005ea6:	6a1b      	ldr	r3, [r3, #32]
 8005ea8:	4798      	blx	r3
 8005eaa:	2853      	cmp	r0, #83	; 0x53
 8005eac:	d803      	bhi.n	8005eb6 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x4e>
 8005eae:	4b3b      	ldr	r3, [pc, #236]	; (8005f9c <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x134>)
 8005eb0:	4a37      	ldr	r2, [pc, #220]	; (8005f90 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x128>)
 8005eb2:	21a5      	movs	r1, #165	; 0xa5
 8005eb4:	e7e8      	b.n	8005e88 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x20>
    if (*currentTrans)
 8005eb6:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8005fa0 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8005eba:	f013 fa4d 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8005ebe:	f013 fa99 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005ec2:	f8d9 0000 	ldr.w	r0, [r9]
 8005ec6:	b110      	cbz	r0, 8005ece <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8005ec8:	6803      	ldr	r3, [r0, #0]
 8005eca:	68db      	ldr	r3, [r3, #12]
 8005ecc:	4798      	blx	r3
    if (*currentTrans)
 8005ece:	f8d9 0000 	ldr.w	r0, [r9]
 8005ed2:	b110      	cbz	r0, 8005eda <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8005ed4:	6803      	ldr	r3, [r0, #0]
 8005ed6:	681b      	ldr	r3, [r3, #0]
 8005ed8:	4798      	blx	r3
    if (*currentScreen)
 8005eda:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005fa4 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x13c>
 8005ede:	f8d8 0000 	ldr.w	r0, [r8]
 8005ee2:	b110      	cbz	r0, 8005eea <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005ee4:	6803      	ldr	r3, [r0, #0]
 8005ee6:	695b      	ldr	r3, [r3, #20]
 8005ee8:	4798      	blx	r3
    if (*currentPresenter)
 8005eea:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005eee:	b110      	cbz	r0, 8005ef6 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005ef0:	6803      	ldr	r3, [r0, #0]
 8005ef2:	685b      	ldr	r3, [r3, #4]
 8005ef4:	4798      	blx	r3
    if (*currentScreen)
 8005ef6:	f8d8 0000 	ldr.w	r0, [r8]
 8005efa:	b110      	cbz	r0, 8005f02 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005efc:	6803      	ldr	r3, [r0, #0]
 8005efe:	681b      	ldr	r3, [r3, #0]
 8005f00:	4798      	blx	r3
    if (*currentPresenter)
 8005f02:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005f06:	b110      	cbz	r0, 8005f0e <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005f08:	6803      	ldr	r3, [r0, #0]
 8005f0a:	689b      	ldr	r3, [r3, #8]
 8005f0c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005f0e:	68e0      	ldr	r0, [r4, #12]
 8005f10:	6803      	ldr	r3, [r0, #0]
 8005f12:	2100      	movs	r1, #0
 8005f14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f16:	4798      	blx	r3
 8005f18:	2114      	movs	r1, #20
 8005f1a:	4605      	mov	r5, r0
 8005f1c:	f7ff fec6 	bl	8005cac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005f20:	68a0      	ldr	r0, [r4, #8]
 8005f22:	6803      	ldr	r3, [r0, #0]
 8005f24:	2100      	movs	r1, #0
 8005f26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f28:	4798      	blx	r3
 8005f2a:	4606      	mov	r6, r0
 8005f2c:	f005 fa50 	bl	800b3d0 <_ZN19ResistanceGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005f30:	6860      	ldr	r0, [r4, #4]
 8005f32:	6803      	ldr	r3, [r0, #0]
 8005f34:	2100      	movs	r1, #0
 8005f36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f38:	4798      	blx	r3
 8005f3a:	4631      	mov	r1, r6
 8005f3c:	4604      	mov	r4, r0
 8005f3e:	f005 f9bd 	bl	800b2bc <_ZN24ResistanceGraphPresenterC1ER19ResistanceGraphView>
    *currentTrans = newTransition;
 8005f42:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005f46:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005f4a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005f4e:	b1dc      	cbz	r4, 8005f88 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x120>
 8005f50:	1d23      	adds	r3, r4, #4
 8005f52:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005f56:	6833      	ldr	r3, [r6, #0]
 8005f58:	f8c4 a008 	str.w	sl, [r4, #8]
 8005f5c:	4630      	mov	r0, r6
 8005f5e:	68db      	ldr	r3, [r3, #12]
 8005f60:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005f62:	4798      	blx	r3
    newPresenter->activate();
 8005f64:	6823      	ldr	r3, [r4, #0]
 8005f66:	4620      	mov	r0, r4
 8005f68:	681b      	ldr	r3, [r3, #0]
 8005f6a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005f6c:	4629      	mov	r1, r5
 8005f6e:	4630      	mov	r0, r6
 8005f70:	f014 ff0e 	bl	801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005f74:	682b      	ldr	r3, [r5, #0]
 8005f76:	4628      	mov	r0, r5
 8005f78:	691b      	ldr	r3, [r3, #16]
 8005f7a:	4798      	blx	r3
    newTransition->invalidate();
 8005f7c:	682b      	ldr	r3, [r5, #0]
 8005f7e:	4628      	mov	r0, r5
 8005f80:	695b      	ldr	r3, [r3, #20]
}
 8005f82:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005f86:	4718      	bx	r3
    model->bind(newPresenter);
 8005f88:	4623      	mov	r3, r4
 8005f8a:	e7e2      	b.n	8005f52 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0xea>
 8005f8c:	0802f8e8 	.word	0x0802f8e8
 8005f90:	08030bde 	.word	0x08030bde
 8005f94:	0802fa83 	.word	0x0802fa83
 8005f98:	0802faca 	.word	0x0802faca
 8005f9c:	0802fb6d 	.word	0x0802fb6d
 8005fa0:	2001e220 	.word	0x2001e220
 8005fa4:	2001e21c 	.word	0x2001e21c

08005fa8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005fa8:	6a00      	ldr	r0, [r0, #32]
 8005faa:	4770      	bx	lr

08005fac <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005fac:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005fae:	4770      	bx	lr

08005fb0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005fb0:	4770      	bx	lr

08005fb2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005fb2:	888b      	ldrh	r3, [r1, #4]
 8005fb4:	6980      	ldr	r0, [r0, #24]
 8005fb6:	680a      	ldr	r2, [r1, #0]
 8005fb8:	0adb      	lsrs	r3, r3, #11
 8005fba:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005fbe:	4410      	add	r0, r2
 8005fc0:	4770      	bx	lr

08005fc2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005fc2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005fc4:	b1c2      	cbz	r2, 8005ff8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005fc6:	7b13      	ldrb	r3, [r2, #12]
 8005fc8:	b1b3      	cbz	r3, 8005ff8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005fca:	7b54      	ldrb	r4, [r2, #13]
 8005fcc:	7ad2      	ldrb	r2, [r2, #11]
 8005fce:	0224      	lsls	r4, r4, #8
 8005fd0:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005fd4:	4314      	orrs	r4, r2
 8005fd6:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005fd8:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005fda:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005fde:	8813      	ldrh	r3, [r2, #0]
 8005fe0:	428b      	cmp	r3, r1
 8005fe2:	d102      	bne.n	8005fea <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005fe4:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005fe8:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005fea:	d805      	bhi.n	8005ff8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005fec:	3801      	subs	r0, #1
 8005fee:	b280      	uxth	r0, r0
 8005ff0:	3204      	adds	r2, #4
 8005ff2:	2800      	cmp	r0, #0
 8005ff4:	d1f3      	bne.n	8005fde <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005ff6:	e7f7      	b.n	8005fe8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005ff8:	2000      	movs	r0, #0
 8005ffa:	e7f5      	b.n	8005fe8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005ffc <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005ffc:	b510      	push	{r4, lr}
 8005ffe:	2128      	movs	r1, #40	; 0x28
 8006000:	4604      	mov	r4, r0
 8006002:	f025 f892 	bl	802b12a <_ZdlPvj>
 8006006:	4620      	mov	r0, r4
 8006008:	bd10      	pop	{r4, pc}
	...

0800600c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800600c:	b530      	push	{r4, r5, lr}
 800600e:	b089      	sub	sp, #36	; 0x24
 8006010:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8006012:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8006016:	9506      	str	r5, [sp, #24]
 8006018:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800601c:	9505      	str	r5, [sp, #20]
 800601e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8006022:	9504      	str	r5, [sp, #16]
 8006024:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8006028:	9503      	str	r5, [sp, #12]
 800602a:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 800602e:	9502      	str	r5, [sp, #8]
 8006030:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8006034:	9501      	str	r5, [sp, #4]
 8006036:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 800603a:	9500      	str	r5, [sp, #0]
 800603c:	f014 fa36 	bl	801a4ac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8006040:	4b06      	ldr	r3, [pc, #24]	; (800605c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8006042:	6023      	str	r3, [r4, #0]
 8006044:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006046:	61a3      	str	r3, [r4, #24]
 8006048:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800604a:	61e3      	str	r3, [r4, #28]
 800604c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800604e:	6223      	str	r3, [r4, #32]
 8006050:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006052:	6263      	str	r3, [r4, #36]	; 0x24
}
 8006054:	4620      	mov	r0, r4
 8006056:	b009      	add	sp, #36	; 0x24
 8006058:	bd30      	pop	{r4, r5, pc}
 800605a:	bf00      	nop
 800605c:	08030ecc 	.word	0x08030ecc

08006060 <_ZN24InstructionPage1ViewBaseD1Ev>:

class InstructionPage1ViewBase : public touchgfx::View<InstructionPage1Presenter>
{
public:
    InstructionPage1ViewBase();
    virtual ~InstructionPage1ViewBase() {}
 8006060:	4770      	bx	lr

08006062 <_ZN24InstructionPage1ViewBase11setupScreenEv>:
}

void InstructionPage1ViewBase::setupScreen()
{

}
 8006062:	4770      	bx	lr

08006064 <_ZN8touchgfx8CallbackI24InstructionPage1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006064:	4770      	bx	lr

08006066 <_ZN8touchgfx8CallbackI24InstructionPage1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006066:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8006068:	68c2      	ldr	r2, [r0, #12]
 800606a:	6844      	ldr	r4, [r0, #4]
 800606c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800606e:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8006070:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006074:	07d2      	lsls	r2, r2, #31
 8006076:	bf48      	it	mi
 8006078:	5962      	ldrmi	r2, [r4, r5]
 800607a:	689b      	ldr	r3, [r3, #8]
    }
 800607c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800607e:	bf48      	it	mi
 8006080:	58d3      	ldrmi	r3, [r2, r3]
 8006082:	4718      	bx	r3

08006084 <_ZNK8touchgfx8CallbackI24InstructionPage1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8006084:	6843      	ldr	r3, [r0, #4]
 8006086:	b12b      	cbz	r3, 8006094 <_ZNK8touchgfx8CallbackI24InstructionPage1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006088:	6883      	ldr	r3, [r0, #8]
 800608a:	b92b      	cbnz	r3, 8006098 <_ZNK8touchgfx8CallbackI24InstructionPage1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800608c:	68c0      	ldr	r0, [r0, #12]
 800608e:	f000 0001 	and.w	r0, r0, #1
 8006092:	4770      	bx	lr
 8006094:	4618      	mov	r0, r3
 8006096:	4770      	bx	lr
 8006098:	2001      	movs	r0, #1
    }
 800609a:	4770      	bx	lr

0800609c <_ZN8touchgfx8CallbackI24InstructionPage1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800609c:	b510      	push	{r4, lr}
 800609e:	2110      	movs	r1, #16
 80060a0:	4604      	mov	r4, r0
 80060a2:	f025 f842 	bl	802b12a <_ZdlPvj>
 80060a6:	4620      	mov	r0, r4
 80060a8:	bd10      	pop	{r4, pc}

080060aa <_ZN24InstructionPage1ViewBaseD0Ev>:
 80060aa:	b510      	push	{r4, lr}
 80060ac:	f44f 71b0 	mov.w	r1, #352	; 0x160
 80060b0:	4604      	mov	r4, r0
 80060b2:	f025 f83a 	bl	802b12a <_ZdlPvj>
 80060b6:	4620      	mov	r0, r4
 80060b8:	bd10      	pop	{r4, pc}

080060ba <_ZN24InstructionPage1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void InstructionPage1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &I_nextbutton1)
 80060ba:	f500 708a 	add.w	r0, r0, #276	; 0x114
 80060be:	4288      	cmp	r0, r1
{
 80060c0:	b508      	push	{r3, lr}
    if (&src == &I_nextbutton1)
 80060c2:	d105      	bne.n	80060d0 <_ZN24InstructionPage1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80060c4:	f013 f948 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When I_nextbutton1 clicked change screen to InstructionPage2
        //Go to InstructionPage2 with screen transition towards North
        application().gotoInstructionPage2ScreenSlideTransitionNorth();
    }
}
 80060c8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoInstructionPage2ScreenSlideTransitionNorth();
 80060cc:	f7fe bcf0 	b.w	8004ab0 <_ZN23FrontendApplicationBase46gotoInstructionPage2ScreenSlideTransitionNorthEv>
}
 80060d0:	bd08      	pop	{r3, pc}
	...

080060d4 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 80060d4:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 80060d6:	2226      	movs	r2, #38	; 0x26
    Box()
 80060d8:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 80060da:	2100      	movs	r1, #0
 80060dc:	f026 f8f8 	bl	802c2d0 <memset>
 80060e0:	4620      	mov	r0, r4
 80060e2:	f7fd fd23 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 80060e6:	4b04      	ldr	r3, [pc, #16]	; (80060f8 <_ZN8touchgfx3BoxC1Ev+0x24>)
 80060e8:	6023      	str	r3, [r4, #0]
 80060ea:	23ff      	movs	r3, #255	; 0xff
 80060ec:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 80060f0:	2300      	movs	r3, #0
 80060f2:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 80060f4:	4620      	mov	r0, r4
 80060f6:	bd10      	pop	{r4, pc}
 80060f8:	08034824 	.word	0x08034824

080060fc <_ZN24InstructionPage1ViewBaseC1Ev>:
InstructionPage1ViewBase::InstructionPage1ViewBase() :
 80060fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006100:	4604      	mov	r4, r0
 8006102:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &InstructionPage1ViewBase::buttonCallbackHandler)
 8006104:	46a0      	mov	r8, r4
        : presenter(0)
 8006106:	2500      	movs	r5, #0
 8006108:	f014 fc96 	bl	801aa38 <_ZN8touchgfx6ScreenC1Ev>
 800610c:	4b6e      	ldr	r3, [pc, #440]	; (80062c8 <_ZN24InstructionPage1ViewBaseC1Ev+0x1cc>)
 800610e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006110:	f848 3b40 	str.w	r3, [r8], #64
 8006114:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8006118:	4640      	mov	r0, r8
 800611a:	f7ff ffdb 	bl	80060d4 <_ZN8touchgfx3BoxC1Ev>
 800611e:	f64f 79ff 	movw	r9, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8006122:	2226      	movs	r2, #38	; 0x26
 8006124:	4629      	mov	r1, r5
 8006126:	4638      	mov	r0, r7
 8006128:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 800612c:	f026 f8d0 	bl	802c2d0 <memset>
 8006130:	4638      	mov	r0, r7
 8006132:	f7fd fcfb 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8006136:	4b65      	ldr	r3, [pc, #404]	; (80062cc <_ZN24InstructionPage1ViewBaseC1Ev+0x1d0>)
 8006138:	66e3      	str	r3, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 800613a:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
        : Widget(), bitmap(bmp), alpha(255)
 800613e:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8006142:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8006146:	f104 0698 	add.w	r6, r4, #152	; 0x98
 800614a:	f884 9094 	strb.w	r9, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800614e:	4651      	mov	r1, sl
 8006150:	4638      	mov	r0, r7
 8006152:	f011 fa46 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006156:	4629      	mov	r1, r5
 8006158:	2226      	movs	r2, #38	; 0x26
 800615a:	4630      	mov	r0, r6
 800615c:	f026 f8b8 	bl	802c2d0 <memset>
 8006160:	4630      	mov	r0, r6
 8006162:	f7fd fce3 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8006166:	4b5a      	ldr	r3, [pc, #360]	; (80062d0 <_ZN24InstructionPage1ViewBaseC1Ev+0x1d4>)
 8006168:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : typedTextId(id)
 800616c:	4b59      	ldr	r3, [pc, #356]	; (80062d4 <_ZN24InstructionPage1ViewBaseC1Ev+0x1d8>)
 800616e:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006172:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8006176:	f104 0be0 	add.w	fp, r4, #224	; 0xe0
 800617a:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
        : x(x), y(y), width(width), height(height)
 800617e:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 8006182:	e9c4 3536 	strd	r3, r5, [r4, #216]	; 0xd8
 8006186:	f8a4 90c4 	strh.w	r9, [r4, #196]	; 0xc4
        : color(col)
 800618a:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800618e:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(x), y(y), width(width), height(height)
 8006192:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 8006196:	4658      	mov	r0, fp
 8006198:	f7ff ff9c 	bl	80060d4 <_ZN8touchgfx3BoxC1Ev>
 800619c:	f504 798a 	add.w	r9, r4, #276	; 0x114
 80061a0:	4b4d      	ldr	r3, [pc, #308]	; (80062d8 <_ZN24InstructionPage1ViewBaseC1Ev+0x1dc>)
 80061a2:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
        : color(col)
 80061a6:	f8c4 510c 	str.w	r5, [r4, #268]	; 0x10c
 80061aa:	f8a4 5110 	strh.w	r5, [r4, #272]	; 0x110
 80061ae:	4648      	mov	r0, r9
 80061b0:	f011 f9f0 	bl	8017594 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80061b4:	4b49      	ldr	r3, [pc, #292]	; (80062dc <_ZN24InstructionPage1ViewBaseC1Ev+0x1e0>)
 80061b6:	e9c4 3454 	strd	r3, r4, [r4, #336]	; 0x150
 80061ba:	4b49      	ldr	r3, [pc, #292]	; (80062e0 <_ZN24InstructionPage1ViewBaseC1Ev+0x1e4>)
 80061bc:	e9c4 3556 	strd	r3, r5, [r4, #344]	; 0x158
    __background.setPosition(0, 0, 320, 240);
 80061c0:	23f0      	movs	r3, #240	; 0xf0
 80061c2:	9300      	str	r3, [sp, #0]
 80061c4:	462a      	mov	r2, r5
 80061c6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80061ca:	4629      	mov	r1, r5
 80061cc:	4640      	mov	r0, r8
 80061ce:	f7fe fbf3 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80061d2:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 80061d6:	66a2      	str	r2, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 80061d8:	4629      	mov	r1, r5
 80061da:	462a      	mov	r2, r5
 80061dc:	4638      	mov	r0, r7
 80061de:	f7fd fb2f 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 80061e2:	4651      	mov	r1, sl
 80061e4:	4638      	mov	r0, r7
 80061e6:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 80061ea:	f011 f9fa 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textArea1.setXY(28, 27);
 80061ee:	4630      	mov	r0, r6
 80061f0:	221b      	movs	r2, #27
 80061f2:	211c      	movs	r1, #28
 80061f4:	f7fd fb24 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80061f8:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        linespace = space;
 80061fc:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006200:	ad04      	add	r5, sp, #16
        this->color = color;
 8006202:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006206:	4631      	mov	r1, r6
 8006208:	4628      	mov	r0, r5
 800620a:	f010 fb21 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800620e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006212:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006216:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800621a:	4b2e      	ldr	r3, [pc, #184]	; (80062d4 <_ZN24InstructionPage1ViewBaseC1Ev+0x1d8>)
 800621c:	930c      	str	r3, [sp, #48]	; 0x30
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SS71));
 800621e:	4651      	mov	r1, sl
 8006220:	2318      	movs	r3, #24
 8006222:	4630      	mov	r0, r6
 8006224:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006228:	f010 fe58 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    boxWithBorder1.setPosition(28, 58, 264, 112);
 800622c:	2370      	movs	r3, #112	; 0x70
 800622e:	9300      	str	r3, [sp, #0]
 8006230:	4658      	mov	r0, fp
 8006232:	f44f 7384 	mov.w	r3, #264	; 0x108
 8006236:	223a      	movs	r2, #58	; 0x3a
 8006238:	211c      	movs	r1, #28
 800623a:	f7fe fbbd 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800623e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006242:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 8006246:	f503 4307 	add.w	r3, r3, #34560	; 0x8700
 800624a:	33bd      	adds	r3, #189	; 0xbd
 800624c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8006250:	2305      	movs	r3, #5
 8006252:	f8a4 3110 	strh.w	r3, [r4, #272]	; 0x110
    I_nextbutton1.setXY(130, 180);
 8006256:	4648      	mov	r0, r9
 8006258:	22b4      	movs	r2, #180	; 0xb4
 800625a:	2182      	movs	r1, #130	; 0x82
 800625c:	f7fd faf0 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 8006260:	2303      	movs	r3, #3
 8006262:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006266:	2304      	movs	r3, #4
 8006268:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800626c:	2308      	movs	r3, #8
    I_nextbutton1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID));
 800626e:	aa0a      	add	r2, sp, #40	; 0x28
 8006270:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006274:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006278:	a909      	add	r1, sp, #36	; 0x24
 800627a:	ab0b      	add	r3, sp, #44	; 0x2c
 800627c:	4648      	mov	r0, r9
 800627e:	f8cd a000 	str.w	sl, [sp]
 8006282:	f011 f8e4 	bl	801744e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006286:	4b17      	ldr	r3, [pc, #92]	; (80062e4 <_ZN24InstructionPage1ViewBaseC1Ev+0x1e8>)
 8006288:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
    I_nextbutton1.setAction(buttonCallback);
 800628c:	f504 73a8 	add.w	r3, r4, #336	; 0x150
 8006290:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
 8006294:	1d20      	adds	r0, r4, #4
 8006296:	4641      	mov	r1, r8
 8006298:	9003      	str	r0, [sp, #12]
 800629a:	f00b fddf 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800629e:	9803      	ldr	r0, [sp, #12]
 80062a0:	4639      	mov	r1, r7
 80062a2:	f00b fddb 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80062a6:	9803      	ldr	r0, [sp, #12]
 80062a8:	4631      	mov	r1, r6
 80062aa:	f00b fdd7 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80062ae:	9803      	ldr	r0, [sp, #12]
 80062b0:	4659      	mov	r1, fp
 80062b2:	f00b fdd3 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80062b6:	9803      	ldr	r0, [sp, #12]
 80062b8:	4649      	mov	r1, r9
 80062ba:	f00b fdcf 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80062be:	4620      	mov	r0, r4
 80062c0:	b00f      	add	sp, #60	; 0x3c
 80062c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062c6:	bf00      	nop
 80062c8:	08030f3c 	.word	0x08030f3c
 80062cc:	08034a04 	.word	0x08034a04
 80062d0:	08034764 	.word	0x08034764
 80062d4:	0802f844 	.word	0x0802f844
 80062d8:	080348f0 	.word	0x080348f0
 80062dc:	08030f24 	.word	0x08030f24
 80062e0:	080060bb 	.word	0x080060bb
 80062e4:	0016000f 	.word	0x0016000f

080062e8 <_ZN24InstructionPage2ViewBaseD1Ev>:

class InstructionPage2ViewBase : public touchgfx::View<InstructionPage2Presenter>
{
public:
    InstructionPage2ViewBase();
    virtual ~InstructionPage2ViewBase() {}
 80062e8:	4770      	bx	lr

080062ea <_ZN24InstructionPage2ViewBase11setupScreenEv>:
}

void InstructionPage2ViewBase::setupScreen()
{

}
 80062ea:	4770      	bx	lr

080062ec <_ZN8touchgfx8CallbackI24InstructionPage2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80062ec:	4770      	bx	lr

080062ee <_ZN8touchgfx8CallbackI24InstructionPage2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80062ee:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80062f0:	68c2      	ldr	r2, [r0, #12]
 80062f2:	6844      	ldr	r4, [r0, #4]
 80062f4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80062f6:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80062f8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80062fc:	07d2      	lsls	r2, r2, #31
 80062fe:	bf48      	it	mi
 8006300:	5962      	ldrmi	r2, [r4, r5]
 8006302:	689b      	ldr	r3, [r3, #8]
    }
 8006304:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8006306:	bf48      	it	mi
 8006308:	58d3      	ldrmi	r3, [r2, r3]
 800630a:	4718      	bx	r3

0800630c <_ZNK8touchgfx8CallbackI24InstructionPage2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800630c:	6843      	ldr	r3, [r0, #4]
 800630e:	b12b      	cbz	r3, 800631c <_ZNK8touchgfx8CallbackI24InstructionPage2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006310:	6883      	ldr	r3, [r0, #8]
 8006312:	b92b      	cbnz	r3, 8006320 <_ZNK8touchgfx8CallbackI24InstructionPage2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006314:	68c0      	ldr	r0, [r0, #12]
 8006316:	f000 0001 	and.w	r0, r0, #1
 800631a:	4770      	bx	lr
 800631c:	4618      	mov	r0, r3
 800631e:	4770      	bx	lr
 8006320:	2001      	movs	r0, #1
    }
 8006322:	4770      	bx	lr

08006324 <_ZN8touchgfx8CallbackI24InstructionPage2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006324:	b510      	push	{r4, lr}
 8006326:	2110      	movs	r1, #16
 8006328:	4604      	mov	r4, r0
 800632a:	f024 fefe 	bl	802b12a <_ZdlPvj>
 800632e:	4620      	mov	r0, r4
 8006330:	bd10      	pop	{r4, pc}

08006332 <_ZN24InstructionPage2ViewBaseD0Ev>:
 8006332:	b510      	push	{r4, lr}
 8006334:	f44f 71ce 	mov.w	r1, #412	; 0x19c
 8006338:	4604      	mov	r4, r0
 800633a:	f024 fef6 	bl	802b12a <_ZdlPvj>
 800633e:	4620      	mov	r0, r4
 8006340:	bd10      	pop	{r4, pc}

08006342 <_ZN24InstructionPage2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void InstructionPage2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006342:	b508      	push	{r3, lr}
    if (&src == &I_lastbutton)
 8006344:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8006348:	4299      	cmp	r1, r3
 800634a:	d105      	bne.n	8006358 <_ZN24InstructionPage2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800634c:	f013 f804 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When I_nextbutton2 clicked change screen to InstructionPage1
        //Go to InstructionPage1 with screen transition towards South
        application().gotoInstructionPage1ScreenSlideTransitionSouth();
    }
}
 8006350:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoKnownPageScreenSlideTransitionNorth();
 8006354:	f7fe bbbc 	b.w	8004ad0 <_ZN23FrontendApplicationBase39gotoKnownPageScreenSlideTransitionNorthEv>
    else if (&src == &I_nextbutton2)
 8006358:	f500 70a8 	add.w	r0, r0, #336	; 0x150
 800635c:	4281      	cmp	r1, r0
 800635e:	d105      	bne.n	800636c <_ZN24InstructionPage2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
 8006360:	f012 fffa 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006364:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoInstructionPage1ScreenSlideTransitionSouth();
 8006368:	f7fe bb92 	b.w	8004a90 <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionSouthEv>
}
 800636c:	bd08      	pop	{r3, pc}
	...

08006370 <_ZN24InstructionPage2ViewBaseC1Ev>:
InstructionPage2ViewBase::InstructionPage2ViewBase() :
 8006370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006374:	4604      	mov	r4, r0
 8006376:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &InstructionPage2ViewBase::buttonCallbackHandler)
 8006378:	46a0      	mov	r8, r4
 800637a:	2500      	movs	r5, #0
 800637c:	f014 fb5c 	bl	801aa38 <_ZN8touchgfx6ScreenC1Ev>
 8006380:	4b85      	ldr	r3, [pc, #532]	; (8006598 <_ZN24InstructionPage2ViewBaseC1Ev+0x228>)
 8006382:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006384:	f848 3b40 	str.w	r3, [r8], #64
 8006388:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800638c:	4640      	mov	r0, r8
 800638e:	f7ff fea1 	bl	80060d4 <_ZN8touchgfx3BoxC1Ev>
 8006392:	f64f 79ff 	movw	r9, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8006396:	2226      	movs	r2, #38	; 0x26
 8006398:	4629      	mov	r1, r5
 800639a:	4638      	mov	r0, r7
 800639c:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 80063a0:	f025 ff96 	bl	802c2d0 <memset>
 80063a4:	4638      	mov	r0, r7
 80063a6:	f7fd fbc1 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 80063aa:	4b7c      	ldr	r3, [pc, #496]	; (800659c <_ZN24InstructionPage2ViewBaseC1Ev+0x22c>)
 80063ac:	66e3      	str	r3, [r4, #108]	; 0x6c
 80063ae:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80063b2:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80063b6:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        Image::setBitmap(bmp);
 80063ba:	a90c      	add	r1, sp, #48	; 0x30
        : Widget(), bitmap(bmp), alpha(255)
 80063bc:	f884 9094 	strb.w	r9, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80063c0:	4638      	mov	r0, r7
 80063c2:	f104 06d4 	add.w	r6, r4, #212	; 0xd4
 80063c6:	f011 f90c 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80063ca:	4650      	mov	r0, sl
 80063cc:	f011 f8e2 	bl	8017594 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80063d0:	4629      	mov	r1, r5
 80063d2:	2226      	movs	r2, #38	; 0x26
 80063d4:	4630      	mov	r0, r6
 80063d6:	f025 ff7b 	bl	802c2d0 <memset>
 80063da:	4630      	mov	r0, r6
 80063dc:	f7fd fba6 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 80063e0:	4b6f      	ldr	r3, [pc, #444]	; (80065a0 <_ZN24InstructionPage2ViewBaseC1Ev+0x230>)
 80063e2:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 80063e6:	4b6f      	ldr	r3, [pc, #444]	; (80065a4 <_ZN24InstructionPage2ViewBaseC1Ev+0x234>)
 80063e8:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 80063ec:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80063f0:	f504 7b8e 	add.w	fp, r4, #284	; 0x11c
 80063f4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        : x(x), y(y), width(width), height(height)
 80063f8:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 80063fc:	e9c4 3545 	strd	r3, r5, [r4, #276]	; 0x114
 8006400:	f8a4 9100 	strh.w	r9, [r4, #256]	; 0x100
        : color(col)
 8006404:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006408:	f8a4 510c 	strh.w	r5, [r4, #268]	; 0x10c
        : x(x), y(y), width(width), height(height)
 800640c:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
        : Box(), borderColor(0), borderSize(0)
 8006410:	4658      	mov	r0, fp
 8006412:	f7ff fe5f 	bl	80060d4 <_ZN8touchgfx3BoxC1Ev>
 8006416:	f504 79a8 	add.w	r9, r4, #336	; 0x150
 800641a:	4b63      	ldr	r3, [pc, #396]	; (80065a8 <_ZN24InstructionPage2ViewBaseC1Ev+0x238>)
 800641c:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
        : color(col)
 8006420:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8006424:	f8a4 514c 	strh.w	r5, [r4, #332]	; 0x14c
 8006428:	4648      	mov	r0, r9
 800642a:	f011 f8b3 	bl	8017594 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800642e:	4b5f      	ldr	r3, [pc, #380]	; (80065ac <_ZN24InstructionPage2ViewBaseC1Ev+0x23c>)
 8006430:	e9c4 3463 	strd	r3, r4, [r4, #396]	; 0x18c
 8006434:	4b5e      	ldr	r3, [pc, #376]	; (80065b0 <_ZN24InstructionPage2ViewBaseC1Ev+0x240>)
 8006436:	e9c4 3565 	strd	r3, r5, [r4, #404]	; 0x194
    __background.setPosition(0, 0, 320, 240);
 800643a:	23f0      	movs	r3, #240	; 0xf0
 800643c:	9300      	str	r3, [sp, #0]
 800643e:	462a      	mov	r2, r5
 8006440:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006444:	4629      	mov	r1, r5
 8006446:	4640      	mov	r0, r8
 8006448:	f7fe fab6 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800644c:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8006450:	66a2      	str	r2, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 8006452:	4629      	mov	r1, r5
 8006454:	462a      	mov	r2, r5
 8006456:	4638      	mov	r0, r7
 8006458:	f7fd f9f2 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 800645c:	a90c      	add	r1, sp, #48	; 0x30
 800645e:	4638      	mov	r0, r7
 8006460:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 8006464:	f011 f8bd 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    I_lastbutton.setXY(63, 180);
 8006468:	4650      	mov	r0, sl
 800646a:	22b4      	movs	r2, #180	; 0xb4
 800646c:	213f      	movs	r1, #63	; 0x3f
 800646e:	f7fd f9e7 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 8006472:	230a      	movs	r3, #10
    I_lastbutton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID));
 8006474:	a80b      	add	r0, sp, #44	; 0x2c
 8006476:	f04f 0203 	mov.w	r2, #3
 800647a:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800647e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006482:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006486:	aa0c      	add	r2, sp, #48	; 0x30
 8006488:	4603      	mov	r3, r0
 800648a:	f04f 0104 	mov.w	r1, #4
 800648e:	a809      	add	r0, sp, #36	; 0x24
 8006490:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8006494:	9200      	str	r2, [sp, #0]
 8006496:	4601      	mov	r1, r0
 8006498:	aa0a      	add	r2, sp, #40	; 0x28
 800649a:	4650      	mov	r0, sl
 800649c:	f010 ffd7 	bl	801744e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    I_lastbutton.setAction(buttonCallback);
 80064a0:	f504 70c6 	add.w	r0, r4, #396	; 0x18c
 80064a4:	4a43      	ldr	r2, [pc, #268]	; (80065b4 <_ZN24InstructionPage2ViewBaseC1Ev+0x244>)
 80064a6:	f8c4 20d0 	str.w	r2, [r4, #208]	; 0xd0
 80064aa:	9003      	str	r0, [sp, #12]
 80064ac:	f8c4 00c0 	str.w	r0, [r4, #192]	; 0xc0
    textArea1.setXY(28, 27);
 80064b0:	221b      	movs	r2, #27
 80064b2:	4630      	mov	r0, r6
 80064b4:	211c      	movs	r1, #28
 80064b6:	f7fd f9c3 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 80064ba:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
        this->color = color;
 80064be:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 80064c2:	ad04      	add	r5, sp, #16
        this->color = color;
 80064c4:	f8c4 0104 	str.w	r0, [r4, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 80064c8:	4631      	mov	r1, r6
 80064ca:	4628      	mov	r0, r5
 80064cc:	f010 f9c0 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80064d4:	f504 7388 	add.w	r3, r4, #272	; 0x110
 80064d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D9D));
 80064dc:	a80c      	add	r0, sp, #48	; 0x30
 80064de:	4b31      	ldr	r3, [pc, #196]	; (80065a4 <_ZN24InstructionPage2ViewBaseC1Ev+0x234>)
 80064e0:	930c      	str	r3, [sp, #48]	; 0x30
 80064e2:	4601      	mov	r1, r0
 80064e4:	2317      	movs	r3, #23
 80064e6:	4630      	mov	r0, r6
 80064e8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80064ec:	f010 fcf6 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    boxWithBorder1.setPosition(28, 58, 264, 112);
 80064f0:	2370      	movs	r3, #112	; 0x70
 80064f2:	9300      	str	r3, [sp, #0]
 80064f4:	4658      	mov	r0, fp
 80064f6:	f44f 7384 	mov.w	r3, #264	; 0x108
 80064fa:	223a      	movs	r2, #58	; 0x3a
 80064fc:	211c      	movs	r1, #28
 80064fe:	f7fe fa5b 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006502:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006506:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
        borderColor = color;
 800650a:	f503 4307 	add.w	r3, r3, #34560	; 0x8700
 800650e:	33bd      	adds	r3, #189	; 0xbd
 8006510:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
        borderSize = size;
 8006514:	2305      	movs	r3, #5
 8006516:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
    I_nextbutton2.setXY(196, 180);
 800651a:	4648      	mov	r0, r9
 800651c:	22b4      	movs	r2, #180	; 0xb4
 800651e:	21c4      	movs	r1, #196	; 0xc4
 8006520:	f7fd f98e 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 8006524:	f04f 0303 	mov.w	r3, #3
 8006528:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800652c:	f04f 0104 	mov.w	r1, #4
 8006530:	2308      	movs	r3, #8
 8006532:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8006536:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800653a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
    I_nextbutton2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID));
 800653e:	a90a      	add	r1, sp, #40	; 0x28
 8006540:	ab0c      	add	r3, sp, #48	; 0x30
 8006542:	9300      	str	r3, [sp, #0]
 8006544:	460a      	mov	r2, r1
 8006546:	ab0b      	add	r3, sp, #44	; 0x2c
 8006548:	a909      	add	r1, sp, #36	; 0x24
 800654a:	4648      	mov	r0, r9
 800654c:	f010 ff7f 	bl	801744e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006550:	9b03      	ldr	r3, [sp, #12]
 8006552:	4a18      	ldr	r2, [pc, #96]	; (80065b4 <_ZN24InstructionPage2ViewBaseC1Ev+0x244>)
 8006554:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
 8006558:	f8c4 3178 	str.w	r3, [r4, #376]	; 0x178
 800655c:	1d20      	adds	r0, r4, #4
 800655e:	4641      	mov	r1, r8
 8006560:	9003      	str	r0, [sp, #12]
 8006562:	f00b fc7b 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006566:	9803      	ldr	r0, [sp, #12]
 8006568:	4639      	mov	r1, r7
 800656a:	f00b fc77 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800656e:	9803      	ldr	r0, [sp, #12]
 8006570:	4651      	mov	r1, sl
 8006572:	f00b fc73 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006576:	9803      	ldr	r0, [sp, #12]
 8006578:	4631      	mov	r1, r6
 800657a:	f00b fc6f 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800657e:	9803      	ldr	r0, [sp, #12]
 8006580:	4659      	mov	r1, fp
 8006582:	f00b fc6b 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006586:	9803      	ldr	r0, [sp, #12]
 8006588:	4649      	mov	r1, r9
 800658a:	f00b fc67 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800658e:	4620      	mov	r0, r4
 8006590:	b00f      	add	sp, #60	; 0x3c
 8006592:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006596:	bf00      	nop
 8006598:	08030f88 	.word	0x08030f88
 800659c:	08034a04 	.word	0x08034a04
 80065a0:	08034764 	.word	0x08034764
 80065a4:	0802f844 	.word	0x0802f844
 80065a8:	080348f0 	.word	0x080348f0
 80065ac:	08030f70 	.word	0x08030f70
 80065b0:	08006343 	.word	0x08006343
 80065b4:	0016000f 	.word	0x0016000f

080065b8 <_ZN17KnownPageViewBaseD1Ev>:

class KnownPageViewBase : public touchgfx::View<KnownPagePresenter>
{
public:
    KnownPageViewBase();
    virtual ~KnownPageViewBase() {}
 80065b8:	4770      	bx	lr

080065ba <_ZN17KnownPageViewBase8PowerOffEv>:
     * Virtual Action Handlers
     */
    virtual void PowerOff()
    {
        // Override and implement this function in KnownPage
    }
 80065ba:	4770      	bx	lr

080065bc <_ZN17KnownPageViewBase11setupScreenEv>:
}

void KnownPageViewBase::setupScreen()
{

}
 80065bc:	4770      	bx	lr

080065be <_ZN8touchgfx8CallbackI17KnownPageViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80065be:	4770      	bx	lr

080065c0 <_ZN8touchgfx8CallbackI17KnownPageViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80065c0:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80065c2:	68c2      	ldr	r2, [r0, #12]
 80065c4:	6844      	ldr	r4, [r0, #4]
 80065c6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80065c8:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80065ca:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80065ce:	07d2      	lsls	r2, r2, #31
 80065d0:	bf48      	it	mi
 80065d2:	5962      	ldrmi	r2, [r4, r5]
 80065d4:	689b      	ldr	r3, [r3, #8]
    }
 80065d6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80065d8:	bf48      	it	mi
 80065da:	58d3      	ldrmi	r3, [r2, r3]
 80065dc:	4718      	bx	r3

080065de <_ZNK8touchgfx8CallbackI17KnownPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80065de:	6843      	ldr	r3, [r0, #4]
 80065e0:	b12b      	cbz	r3, 80065ee <_ZNK8touchgfx8CallbackI17KnownPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80065e2:	6883      	ldr	r3, [r0, #8]
 80065e4:	b92b      	cbnz	r3, 80065f2 <_ZNK8touchgfx8CallbackI17KnownPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80065e6:	68c0      	ldr	r0, [r0, #12]
 80065e8:	f000 0001 	and.w	r0, r0, #1
 80065ec:	4770      	bx	lr
 80065ee:	4618      	mov	r0, r3
 80065f0:	4770      	bx	lr
 80065f2:	2001      	movs	r0, #1
    }
 80065f4:	4770      	bx	lr

080065f6 <_ZN8touchgfx8CallbackI17KnownPageViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80065f6:	b510      	push	{r4, lr}
 80065f8:	2110      	movs	r1, #16
 80065fa:	4604      	mov	r4, r0
 80065fc:	f024 fd95 	bl	802b12a <_ZdlPvj>
 8006600:	4620      	mov	r0, r4
 8006602:	bd10      	pop	{r4, pc}

08006604 <_ZN17KnownPageViewBaseD0Ev>:
    virtual ~KnownPageViewBase() {}
 8006604:	b510      	push	{r4, lr}
 8006606:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
 800660a:	4604      	mov	r4, r0
 800660c:	f024 fd8d 	bl	802b12a <_ZdlPvj>
 8006610:	4620      	mov	r0, r4
 8006612:	bd10      	pop	{r4, pc}

08006614 <_ZN17KnownPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void KnownPageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &AgreeButton)
 8006614:	f100 0298 	add.w	r2, r0, #152	; 0x98
 8006618:	4291      	cmp	r1, r2
{
 800661a:	b510      	push	{r4, lr}
    if (&src == &AgreeButton)
 800661c:	d105      	bne.n	800662a <_ZN17KnownPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800661e:	f012 fe9b 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When RefuseButton clicked call virtual function
        //Call PowerOff
        PowerOff();
    }
}
 8006622:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoPIPageScreenSlideTransitionNorth();
 8006626:	f7fe ba63 	b.w	8004af0 <_ZN23FrontendApplicationBase36gotoPIPageScreenSlideTransitionNorthEv>
    else if (&src == &RefuseButton)
 800662a:	f100 02e0 	add.w	r2, r0, #224	; 0xe0
 800662e:	4291      	cmp	r1, r2
 8006630:	d104      	bne.n	800663c <_ZN17KnownPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
        PowerOff();
 8006632:	6803      	ldr	r3, [r0, #0]
}
 8006634:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        PowerOff();
 8006638:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800663a:	4718      	bx	r3
}
 800663c:	bd10      	pop	{r4, pc}
	...

08006640 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8006640:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006642:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8006644:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006646:	2100      	movs	r1, #0
 8006648:	f025 fe42 	bl	802c2d0 <memset>
 800664c:	4620      	mov	r0, r4
 800664e:	f7fd fa6d 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8006652:	4b0a      	ldr	r3, [pc, #40]	; (800667c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8006654:	6023      	str	r3, [r4, #0]
 8006656:	4b0a      	ldr	r3, [pc, #40]	; (8006680 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8006658:	62a3      	str	r3, [r4, #40]	; 0x28
 800665a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800665e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8006660:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8006664:	2300      	movs	r3, #0
 8006666:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(x), y(y), width(width), height(height)
 800666a:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 800666e:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006672:	8723      	strh	r3, [r4, #56]	; 0x38
 8006674:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8006676:	4620      	mov	r0, r4
 8006678:	bd10      	pop	{r4, pc}
 800667a:	bf00      	nop
 800667c:	08034764 	.word	0x08034764
 8006680:	0802f844 	.word	0x0802f844

08006684 <_ZN17KnownPageViewBaseC1Ev>:
KnownPageViewBase::KnownPageViewBase() :
 8006684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006688:	4604      	mov	r4, r0
 800668a:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &KnownPageViewBase::buttonCallbackHandler)
 800668c:	4626      	mov	r6, r4
 800668e:	2500      	movs	r5, #0
 8006690:	f014 f9d2 	bl	801aa38 <_ZN8touchgfx6ScreenC1Ev>
 8006694:	4b7c      	ldr	r3, [pc, #496]	; (8006888 <_ZN17KnownPageViewBaseC1Ev+0x204>)
 8006696:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006698:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800669c:	4629      	mov	r1, r5
 800669e:	2226      	movs	r2, #38	; 0x26
 80066a0:	4630      	mov	r0, r6
 80066a2:	f025 fe15 	bl	802c2d0 <memset>
 80066a6:	4630      	mov	r0, r6
 80066a8:	f7fd fa40 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 80066ac:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80066b0:	f04f 08ff 	mov.w	r8, #255	; 0xff
 80066b4:	4b75      	ldr	r3, [pc, #468]	; (800688c <_ZN17KnownPageViewBaseC1Ev+0x208>)
 80066b6:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80066b8:	2226      	movs	r2, #38	; 0x26
 80066ba:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80066be:	4629      	mov	r1, r5
 80066c0:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
        : color(col)
 80066c4:	66a5      	str	r5, [r4, #104]	; 0x68
 80066c6:	4638      	mov	r0, r7
 80066c8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80066cc:	f025 fe00 	bl	802c2d0 <memset>
 80066d0:	4638      	mov	r0, r7
 80066d2:	f7fd fa2b 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 80066d6:	4b6e      	ldr	r3, [pc, #440]	; (8006890 <_ZN17KnownPageViewBaseC1Ev+0x20c>)
 80066d8:	66e3      	str	r3, [r4, #108]	; 0x6c
 80066da:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80066de:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80066e2:	a908      	add	r1, sp, #32
 80066e4:	f104 0b98 	add.w	fp, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80066e8:	f884 8094 	strb.w	r8, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80066ec:	4638      	mov	r0, r7
 80066ee:	f010 ff78 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80066f2:	f104 0ae0 	add.w	sl, r4, #224	; 0xe0
 80066f6:	4658      	mov	r0, fp
 80066f8:	f011 f8bc 	bl	8017874 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80066fc:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8006700:	4650      	mov	r0, sl
 8006702:	f011 f8b7 	bl	8017874 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006706:	f504 78b8 	add.w	r8, r4, #368	; 0x170
 800670a:	4648      	mov	r0, r9
 800670c:	f7ff ff98 	bl	8006640 <_ZN8touchgfx8TextAreaC1Ev>
 8006710:	4640      	mov	r0, r8
 8006712:	f7ff ff95 	bl	8006640 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8006716:	4b5f      	ldr	r3, [pc, #380]	; (8006894 <_ZN17KnownPageViewBaseC1Ev+0x210>)
 8006718:	e9c4 346e 	strd	r3, r4, [r4, #440]	; 0x1b8
 800671c:	4b5e      	ldr	r3, [pc, #376]	; (8006898 <_ZN17KnownPageViewBaseC1Ev+0x214>)
        setXY(x, y);
 800671e:	462a      	mov	r2, r5
 8006720:	e9c4 3570 	strd	r3, r5, [r4, #448]	; 0x1c0
 8006724:	4629      	mov	r1, r5
 8006726:	4630      	mov	r0, r6
 8006728:	f7fd f88a 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800672c:	4630      	mov	r0, r6
 800672e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006732:	f7fd f805 	bl	8003740 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8006736:	4630      	mov	r0, r6
 8006738:	21f0      	movs	r1, #240	; 0xf0
 800673a:	f7fd f803 	bl	8003744 <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 800673e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006742:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 8006744:	462a      	mov	r2, r5
 8006746:	4629      	mov	r1, r5
 8006748:	4638      	mov	r0, r7
 800674a:	f7fd f879 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 800674e:	a908      	add	r1, sp, #32
 8006750:	4638      	mov	r0, r7
 8006752:	f8ad 5020 	strh.w	r5, [sp, #32]
 8006756:	f010 ff44 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    AgreeButton.setXY(75, 90);
 800675a:	4658      	mov	r0, fp
 800675c:	225a      	movs	r2, #90	; 0x5a
 800675e:	214b      	movs	r1, #75	; 0x4b
 8006760:	f7fd f86e 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 8006764:	2301      	movs	r3, #1
    AgreeButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8006766:	aa08      	add	r2, sp, #32
 8006768:	a907      	add	r1, sp, #28
 800676a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800676e:	4658      	mov	r0, fp
 8006770:	2302      	movs	r3, #2
 8006772:	f8ad 3020 	strh.w	r3, [sp, #32]
 8006776:	f010 fc0b 	bl	8016f90 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800677a:	2316      	movs	r3, #22
 800677c:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        updateTextPosition();
 8006780:	4658      	mov	r0, fp
 8006782:	f7fd f86b 	bl	800385c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8006786:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800678a:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    AgreeButton.setAction(buttonCallback);
 800678e:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 8006792:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    RefuseButton.setXY(75, 150);
 8006796:	4650      	mov	r0, sl
 8006798:	2296      	movs	r2, #150	; 0x96
 800679a:	214b      	movs	r1, #75	; 0x4b
    AgreeButton.setAction(buttonCallback);
 800679c:	9301      	str	r3, [sp, #4]
    RefuseButton.setXY(75, 150);
 800679e:	f7fd f84f 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 80067a2:	220f      	movs	r2, #15
 80067a4:	f04f 030e 	mov.w	r3, #14
    RefuseButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80067a8:	a907      	add	r1, sp, #28
 80067aa:	f8ad 2020 	strh.w	r2, [sp, #32]
 80067ae:	4650      	mov	r0, sl
 80067b0:	aa08      	add	r2, sp, #32
 80067b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80067b6:	f010 fbeb 	bl	8016f90 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80067ba:	2215      	movs	r2, #21
 80067bc:	f8a4 2118 	strh.w	r2, [r4, #280]	; 0x118
        updateTextPosition();
 80067c0:	4650      	mov	r0, sl
 80067c2:	f7fd f84b 	bl	800385c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80067c6:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 80067ca:	e9c4 3347 	strd	r3, r3, [r4, #284]	; 0x11c
 80067ce:	9b01      	ldr	r3, [sp, #4]
 80067d0:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
    Note1.setXY(14, 45);
 80067d4:	222d      	movs	r2, #45	; 0x2d
 80067d6:	4648      	mov	r0, r9
 80067d8:	210e      	movs	r1, #14
 80067da:	f7fd f831 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80067de:	4b2f      	ldr	r3, [pc, #188]	; (800689c <_ZN17KnownPageViewBaseC1Ev+0x218>)
 80067e0:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
        linespace = space;
 80067e4:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 80067e8:	4649      	mov	r1, r9
 80067ea:	a802      	add	r0, sp, #8
 80067ec:	f010 f830 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80067f0:	ab02      	add	r3, sp, #8
 80067f2:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80067f6:	f504 7cb2 	add.w	ip, r4, #356	; 0x164
 80067fa:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        : typedTextId(id)
 80067fe:	4b28      	ldr	r3, [pc, #160]	; (80068a0 <_ZN17KnownPageViewBaseC1Ev+0x21c>)
 8006800:	9308      	str	r3, [sp, #32]
 8006802:	2208      	movs	r2, #8
    Note1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X1OM));
 8006804:	a908      	add	r1, sp, #32
 8006806:	4648      	mov	r0, r9
 8006808:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800680c:	f010 fb66 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    Note2.setXY(7, 59);
 8006810:	223b      	movs	r2, #59	; 0x3b
 8006812:	4640      	mov	r0, r8
 8006814:	2107      	movs	r1, #7
 8006816:	f7fd f813 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 800681a:	4b20      	ldr	r3, [pc, #128]	; (800689c <_ZN17KnownPageViewBaseC1Ev+0x218>)
 800681c:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
        linespace = space;
 8006820:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8006824:	4641      	mov	r1, r8
 8006826:	a802      	add	r0, sp, #8
 8006828:	f010 f812 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800682c:	ab02      	add	r3, sp, #8
 800682e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8006832:	f504 75d6 	add.w	r5, r4, #428	; 0x1ac
 8006836:	4b1a      	ldr	r3, [pc, #104]	; (80068a0 <_ZN17KnownPageViewBaseC1Ev+0x21c>)
 8006838:	9308      	str	r3, [sp, #32]
 800683a:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800683e:	2307      	movs	r3, #7
    Note2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XN3R));
 8006840:	a908      	add	r1, sp, #32
 8006842:	4640      	mov	r0, r8
 8006844:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006848:	f010 fb48 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800684c:	1d20      	adds	r0, r4, #4
 800684e:	4631      	mov	r1, r6
 8006850:	9001      	str	r0, [sp, #4]
 8006852:	f00b fb03 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006856:	9801      	ldr	r0, [sp, #4]
 8006858:	4639      	mov	r1, r7
 800685a:	f00b faff 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800685e:	9801      	ldr	r0, [sp, #4]
 8006860:	4659      	mov	r1, fp
 8006862:	f00b fafb 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006866:	9801      	ldr	r0, [sp, #4]
 8006868:	4651      	mov	r1, sl
 800686a:	f00b faf7 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800686e:	9801      	ldr	r0, [sp, #4]
 8006870:	4649      	mov	r1, r9
 8006872:	f00b faf3 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006876:	9801      	ldr	r0, [sp, #4]
 8006878:	4641      	mov	r1, r8
 800687a:	f00b faef 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800687e:	4620      	mov	r0, r4
 8006880:	b00b      	add	sp, #44	; 0x2c
 8006882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006886:	bf00      	nop
 8006888:	08030fd4 	.word	0x08030fd4
 800688c:	08034824 	.word	0x08034824
 8006890:	08034a04 	.word	0x08034a04
 8006894:	08030fbc 	.word	0x08030fbc
 8006898:	08006615 	.word	0x08006615
 800689c:	ffff0000 	.word	0xffff0000
 80068a0:	0802f844 	.word	0x0802f844

080068a4 <_ZN14PIPageViewBaseD1Ev>:

class PIPageViewBase : public touchgfx::View<PIPagePresenter>
{
public:
    PIPageViewBase();
    virtual ~PIPageViewBase() {}
 80068a4:	4770      	bx	lr

080068a6 <_ZN14PIPageViewBase11setupScreenEv>:
}

void PIPageViewBase::setupScreen()
{

}
 80068a6:	4770      	bx	lr

080068a8 <_ZN8touchgfx8CallbackI14PIPageViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80068a8:	4770      	bx	lr

080068aa <_ZN8touchgfx8CallbackI14PIPageViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80068aa:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80068ac:	68c2      	ldr	r2, [r0, #12]
 80068ae:	6844      	ldr	r4, [r0, #4]
 80068b0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80068b2:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80068b4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80068b8:	07d2      	lsls	r2, r2, #31
 80068ba:	bf48      	it	mi
 80068bc:	5962      	ldrmi	r2, [r4, r5]
 80068be:	689b      	ldr	r3, [r3, #8]
    }
 80068c0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80068c2:	bf48      	it	mi
 80068c4:	58d3      	ldrmi	r3, [r2, r3]
 80068c6:	4718      	bx	r3

080068c8 <_ZNK8touchgfx8CallbackI14PIPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80068c8:	6843      	ldr	r3, [r0, #4]
 80068ca:	b12b      	cbz	r3, 80068d8 <_ZNK8touchgfx8CallbackI14PIPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80068cc:	6883      	ldr	r3, [r0, #8]
 80068ce:	b92b      	cbnz	r3, 80068dc <_ZNK8touchgfx8CallbackI14PIPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80068d0:	68c0      	ldr	r0, [r0, #12]
 80068d2:	f000 0001 	and.w	r0, r0, #1
 80068d6:	4770      	bx	lr
 80068d8:	4618      	mov	r0, r3
 80068da:	4770      	bx	lr
 80068dc:	2001      	movs	r0, #1
    }
 80068de:	4770      	bx	lr

080068e0 <_ZN8touchgfx8CallbackI14PIPageViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80068e0:	b510      	push	{r4, lr}
 80068e2:	2110      	movs	r1, #16
 80068e4:	4604      	mov	r4, r0
 80068e6:	f024 fc20 	bl	802b12a <_ZdlPvj>
 80068ea:	4620      	mov	r0, r4
 80068ec:	bd10      	pop	{r4, pc}

080068ee <_ZN14PIPageViewBaseD0Ev>:
 80068ee:	b510      	push	{r4, lr}
 80068f0:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80068f4:	4604      	mov	r4, r0
 80068f6:	f024 fc18 	bl	802b12a <_ZdlPvj>
 80068fa:	4620      	mov	r0, r4
 80068fc:	bd10      	pop	{r4, pc}

080068fe <_ZN14PIPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void PIPageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &NextButton2)
 80068fe:	30e0      	adds	r0, #224	; 0xe0
 8006900:	4288      	cmp	r0, r1
{
 8006902:	b508      	push	{r3, lr}
    if (&src == &NextButton2)
 8006904:	d105      	bne.n	8006912 <_ZN14PIPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006906:	f012 fd27 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When NextButton2 clicked change screen to StartMeasurement
        //Go to StartMeasurement with screen transition towards North
        application().gotoStartMeasurementScreenSlideTransitionNorth();
    }
}
 800690a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoStartMeasurementScreenSlideTransitionNorth();
 800690e:	f7fe b8ff 	b.w	8004b10 <_ZN23FrontendApplicationBase46gotoStartMeasurementScreenSlideTransitionNorthEv>
}
 8006912:	bd08      	pop	{r3, pc}

08006914 <_ZN14PIPageViewBaseC1Ev>:
PIPageViewBase::PIPageViewBase() :
 8006914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006918:	4604      	mov	r4, r0
 800691a:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &PIPageViewBase::buttonCallbackHandler)
 800691c:	4626      	mov	r6, r4
 800691e:	2500      	movs	r5, #0
 8006920:	f014 f88a 	bl	801aa38 <_ZN8touchgfx6ScreenC1Ev>
 8006924:	4b64      	ldr	r3, [pc, #400]	; (8006ab8 <_ZN14PIPageViewBaseC1Ev+0x1a4>)
 8006926:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006928:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800692c:	4629      	mov	r1, r5
 800692e:	2226      	movs	r2, #38	; 0x26
 8006930:	4630      	mov	r0, r6
 8006932:	f025 fccd 	bl	802c2d0 <memset>
 8006936:	4630      	mov	r0, r6
 8006938:	f7fd f8f8 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 800693c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006940:	4b5e      	ldr	r3, [pc, #376]	; (8006abc <_ZN14PIPageViewBaseC1Ev+0x1a8>)
 8006942:	6423      	str	r3, [r4, #64]	; 0x40
 8006944:	27ff      	movs	r7, #255	; 0xff
        : Widget(), bitmap(bmp), alpha(255)
 8006946:	2226      	movs	r2, #38	; 0x26
 8006948:	4629      	mov	r1, r5
 800694a:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 800694e:	66a5      	str	r5, [r4, #104]	; 0x68
 8006950:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8006954:	4640      	mov	r0, r8
 8006956:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 800695a:	f025 fcb9 	bl	802c2d0 <memset>
 800695e:	4640      	mov	r0, r8
 8006960:	f7fd f8e4 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8006964:	4b56      	ldr	r3, [pc, #344]	; (8006ac0 <_ZN14PIPageViewBaseC1Ev+0x1ac>)
 8006966:	66e3      	str	r3, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8006968:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
        : Widget(), bitmap(bmp), alpha(255)
 800696c:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8006970:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8006974:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006978:	4651      	mov	r1, sl
 800697a:	f104 0798 	add.w	r7, r4, #152	; 0x98
 800697e:	4640      	mov	r0, r8
 8006980:	f010 fe2f 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006984:	4629      	mov	r1, r5
 8006986:	2226      	movs	r2, #38	; 0x26
 8006988:	4638      	mov	r0, r7
 800698a:	f025 fca1 	bl	802c2d0 <memset>
 800698e:	4638      	mov	r0, r7
 8006990:	f7fd f8cc 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8006994:	4b4b      	ldr	r3, [pc, #300]	; (8006ac4 <_ZN14PIPageViewBaseC1Ev+0x1b0>)
 8006996:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800699a:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 800699e:	f8df b134 	ldr.w	fp, [pc, #308]	; 8006ad4 <_ZN14PIPageViewBaseC1Ev+0x1c0>
 80069a2:	f8a4 90c4 	strh.w	r9, [r4, #196]	; 0xc4
 80069a6:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 80069aa:	f104 09e0 	add.w	r9, r4, #224	; 0xe0
        : x(x), y(y), width(width), height(height)
 80069ae:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 80069b2:	e9c4 3536 	strd	r3, r5, [r4, #216]	; 0xd8
        : color(col)
 80069b6:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80069ba:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(x), y(y), width(width), height(height)
 80069be:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
 80069c2:	f8c4 b0c0 	str.w	fp, [r4, #192]	; 0xc0
 80069c6:	4648      	mov	r0, r9
 80069c8:	f010 fde4 	bl	8017594 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80069cc:	4b3e      	ldr	r3, [pc, #248]	; (8006ac8 <_ZN14PIPageViewBaseC1Ev+0x1b4>)
 80069ce:	e9c4 3447 	strd	r3, r4, [r4, #284]	; 0x11c
 80069d2:	4b3e      	ldr	r3, [pc, #248]	; (8006acc <_ZN14PIPageViewBaseC1Ev+0x1b8>)
        setXY(x, y);
 80069d4:	462a      	mov	r2, r5
 80069d6:	e9c4 3549 	strd	r3, r5, [r4, #292]	; 0x124
 80069da:	4629      	mov	r1, r5
 80069dc:	4630      	mov	r0, r6
 80069de:	f7fc ff2f 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80069e2:	4630      	mov	r0, r6
 80069e4:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80069e8:	f7fc feaa 	bl	8003740 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80069ec:	4630      	mov	r0, r6
 80069ee:	21f0      	movs	r1, #240	; 0xf0
 80069f0:	f7fc fea8 	bl	8003744 <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 80069f4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80069f8:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 80069fa:	462a      	mov	r2, r5
 80069fc:	4629      	mov	r1, r5
 80069fe:	4640      	mov	r0, r8
 8006a00:	f7fc ff1e 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 8006a04:	4651      	mov	r1, sl
 8006a06:	4640      	mov	r0, r8
 8006a08:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 8006a0c:	f010 fde9 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textArea1.setXY(28, 27);
 8006a10:	221b      	movs	r2, #27
 8006a12:	4638      	mov	r0, r7
 8006a14:	211c      	movs	r1, #28
 8006a16:	f7fc ff13 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8006a1a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        linespace = space;
 8006a1e:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006a22:	ad04      	add	r5, sp, #16
        this->color = color;
 8006a24:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006a28:	4639      	mov	r1, r7
 8006a2a:	4628      	mov	r0, r5
 8006a2c:	f00f ff10 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a30:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006a34:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006a38:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a3c:	2314      	movs	r3, #20
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P62M));
 8006a3e:	4651      	mov	r1, sl
 8006a40:	4638      	mov	r0, r7
 8006a42:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006a46:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006a4a:	f010 fa47 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    NextButton2.setXY(130, 180);
 8006a4e:	4648      	mov	r0, r9
 8006a50:	22b4      	movs	r2, #180	; 0xb4
 8006a52:	2182      	movs	r1, #130	; 0x82
 8006a54:	f7fc fef4 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 8006a58:	2303      	movs	r3, #3
 8006a5a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006a5e:	2304      	movs	r3, #4
 8006a60:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006a64:	2308      	movs	r3, #8
    NextButton2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID));
 8006a66:	aa0a      	add	r2, sp, #40	; 0x28
 8006a68:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a6c:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006a70:	a909      	add	r1, sp, #36	; 0x24
 8006a72:	ab0b      	add	r3, sp, #44	; 0x2c
 8006a74:	4648      	mov	r0, r9
 8006a76:	f8cd a000 	str.w	sl, [sp]
 8006a7a:	f010 fce8 	bl	801744e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006a7e:	4b14      	ldr	r3, [pc, #80]	; (8006ad0 <_ZN14PIPageViewBaseC1Ev+0x1bc>)
 8006a80:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
    NextButton2.setAction(buttonCallback);
 8006a84:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006a88:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8006a8c:	1d20      	adds	r0, r4, #4
 8006a8e:	4631      	mov	r1, r6
 8006a90:	9003      	str	r0, [sp, #12]
 8006a92:	f00b f9e3 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a96:	9803      	ldr	r0, [sp, #12]
 8006a98:	4641      	mov	r1, r8
 8006a9a:	f00b f9df 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a9e:	9803      	ldr	r0, [sp, #12]
 8006aa0:	4639      	mov	r1, r7
 8006aa2:	f00b f9db 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006aa6:	9803      	ldr	r0, [sp, #12]
 8006aa8:	4649      	mov	r1, r9
 8006aaa:	f00b f9d7 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006aae:	4620      	mov	r0, r4
 8006ab0:	b00f      	add	sp, #60	; 0x3c
 8006ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ab6:	bf00      	nop
 8006ab8:	08031024 	.word	0x08031024
 8006abc:	08034824 	.word	0x08034824
 8006ac0:	08034a04 	.word	0x08034a04
 8006ac4:	08034764 	.word	0x08034764
 8006ac8:	0803100c 	.word	0x0803100c
 8006acc:	080068ff 	.word	0x080068ff
 8006ad0:	0016000f 	.word	0x0016000f
 8006ad4:	0802f844 	.word	0x0802f844

08006ad8 <_ZN19ProgressBarViewBaseD1Ev>:

class ProgressBarViewBase : public touchgfx::View<ProgressBarPresenter>
{
public:
    ProgressBarViewBase();
    virtual ~ProgressBarViewBase() {}
 8006ad8:	4770      	bx	lr

08006ada <_ZN19ProgressBarViewBase11setupScreenEv>:
}

void ProgressBarViewBase::setupScreen()
{

}
 8006ada:	4770      	bx	lr

08006adc <_ZN19ProgressBarViewBaseD0Ev>:
 8006adc:	b510      	push	{r4, lr}
 8006ade:	f241 51e8 	movw	r1, #5608	; 0x15e8
 8006ae2:	4604      	mov	r4, r0
 8006ae4:	f024 fb21 	bl	802b12a <_ZdlPvj>
 8006ae8:	4620      	mov	r0, r4
 8006aea:	bd10      	pop	{r4, pc}

08006aec <_ZN19ProgressBarViewBase14handleKeyEventEh>:

//Handles when a key is pressed
void ProgressBarViewBase::handleKeyEvent(uint8_t key)
{
 8006aec:	b508      	push	{r3, lr}
    if(0 == key)
 8006aee:	b929      	cbnz	r1, 8006afc <_ZN19ProgressBarViewBase14handleKeyEventEh+0x10>
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006af0:	f012 fc32 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When hardware button 0 clicked change screen to DataDisplayList
        //Go to DataDisplayList with screen transition towards North
        application().gotoDataDisplayListScreenSlideTransitionNorth();
    }
}
 8006af4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoDataDisplayListScreenSlideTransitionNorth();
 8006af8:	f7fe b82a 	b.w	8004b50 <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionNorthEv>
}
 8006afc:	bd08      	pop	{r3, pc}
	...

08006b00 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8006b00:	b570      	push	{r4, r5, r6, lr}
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8006b02:	4e15      	ldr	r6, [pc, #84]	; (8006b58 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
public:
    /** Initializes a new instance of the AbstractPainter class. */
    AbstractPainter()
        : areaOffsetX(0),
          areaOffsetY(0),
          widgetAlpha(255)
 8006b04:	2300      	movs	r3, #0
 8006b06:	22ff      	movs	r2, #255	; 0xff
        : AbstractPainter(), currentX(0), currentY(0)
 8006b08:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006b0c:	6043      	str	r3, [r0, #4]
 8006b0e:	6833      	ldr	r3, [r6, #0]
 8006b10:	7202      	strb	r2, [r0, #8]
 8006b12:	4a12      	ldr	r2, [pc, #72]	; (8006b5c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8006b14:	6002      	str	r2, [r0, #0]
 8006b16:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8006b1a:	4604      	mov	r4, r0
 8006b1c:	b10a      	cbz	r2, 8006b22 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x22>
 8006b1e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8006b20:	b900      	cbnz	r0, 8006b24 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x24>
        return instance->lcdRef;
 8006b22:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8006b24:	6803      	ldr	r3, [r0, #0]
 8006b26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b28:	4798      	blx	r3
        return auxiliaryLCD;
 8006b2a:	6833      	ldr	r3, [r6, #0]
 8006b2c:	fab0 f580 	clz	r5, r0
 8006b30:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8006b32:	096d      	lsrs	r5, r5, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8006b34:	b130      	cbz	r0, 8006b44 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x44>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8006b36:	6803      	ldr	r3, [r0, #0]
 8006b38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b3a:	4798      	blx	r3
 8006b3c:	2800      	cmp	r0, #0
 8006b3e:	bf08      	it	eq
 8006b40:	f045 0501 	orreq.w	r5, r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8006b44:	b92d      	cbnz	r5, 8006b52 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x52>
 8006b46:	4b06      	ldr	r3, [pc, #24]	; (8006b60 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8006b48:	4a06      	ldr	r2, [pc, #24]	; (8006b64 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x64>)
 8006b4a:	4807      	ldr	r0, [pc, #28]	; (8006b68 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x68>)
 8006b4c:	212c      	movs	r1, #44	; 0x2c
 8006b4e:	f025 fa39 	bl	802bfc4 <__assert_func>
    }
 8006b52:	4620      	mov	r0, r4
 8006b54:	bd70      	pop	{r4, r5, r6, pc}
 8006b56:	bf00      	nop
 8006b58:	2001e1c0 	.word	0x2001e1c0
 8006b5c:	08033d04 	.word	0x08033d04
 8006b60:	08031050 	.word	0x08031050
 8006b64:	080310ae 	.word	0x080310ae
 8006b68:	080310e7 	.word	0x080310e7

08006b6c <_ZN19ProgressBarViewBaseC1Ev>:
ProgressBarViewBase::ProgressBarViewBase()
 8006b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b70:	ed2d 8b02 	vpush	{d8}
 8006b74:	4604      	mov	r4, r0
 8006b76:	b08b      	sub	sp, #44	; 0x2c
 8006b78:	46a0      	mov	r8, r4
 8006b7a:	2500      	movs	r5, #0
 8006b7c:	f013 ff5c 	bl	801aa38 <_ZN8touchgfx6ScreenC1Ev>
 8006b80:	4b9c      	ldr	r3, [pc, #624]	; (8006df4 <_ZN19ProgressBarViewBaseC1Ev+0x288>)
 8006b82:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006b84:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8006b88:	4629      	mov	r1, r5
 8006b8a:	2226      	movs	r2, #38	; 0x26
 8006b8c:	4640      	mov	r0, r8
 8006b8e:	f025 fb9f 	bl	802c2d0 <memset>
 8006b92:	4640      	mov	r0, r8
 8006b94:	f7fc ffca 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8006b98:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006b9c:	4b96      	ldr	r3, [pc, #600]	; (8006df8 <_ZN19ProgressBarViewBaseC1Ev+0x28c>)
 8006b9e:	6423      	str	r3, [r4, #64]	; 0x40
 8006ba0:	26ff      	movs	r6, #255	; 0xff
        : Widget(), bitmap(bmp), alpha(255)
 8006ba2:	2226      	movs	r2, #38	; 0x26
 8006ba4:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8006ba8:	4629      	mov	r1, r5
 8006baa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
        : color(col)
 8006bae:	66a5      	str	r5, [r4, #104]	; 0x68
 8006bb0:	4650      	mov	r0, sl
 8006bb2:	f8ad b020 	strh.w	fp, [sp, #32]
 8006bb6:	f025 fb8b 	bl	802c2d0 <memset>
 8006bba:	4650      	mov	r0, sl
 8006bbc:	f7fc ffb6 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8006bc0:	4b8e      	ldr	r3, [pc, #568]	; (8006dfc <_ZN19ProgressBarViewBaseC1Ev+0x290>)
 8006bc2:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006bc4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8006bc8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006bcc:	a908      	add	r1, sp, #32
        : Widget(), bitmap(bmp), alpha(255)
 8006bce:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006bd2:	4650      	mov	r0, sl
 8006bd4:	f104 0698 	add.w	r6, r4, #152	; 0x98
 8006bd8:	f010 fd03 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006bdc:	4630      	mov	r0, r6
 8006bde:	f00a fecd 	bl	801197c <_ZN8touchgfx14CircleProgressC1Ev>
 8006be2:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8006be6:	ee08 3a10 	vmov	s16, r3
     */
    PainterRGB565Bitmap(const Bitmap& bmp = Bitmap(BITMAP_INVALID))
        : AbstractPainterRGB565(),
          bitmapARGB8888Pointer(0), bitmapRGB565Pointer(0), bitmapAlphaPointer(0),
          bitmap(), bitmapRectToFrameBuffer(),
          xOffset(0), yOffset(0), isTiled(false)
 8006bea:	4618      	mov	r0, r3
 8006bec:	f8ad b020 	strh.w	fp, [sp, #32]
 8006bf0:	f7ff ff86 	bl	8006b00 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006bf4:	4b82      	ldr	r3, [pc, #520]	; (8006e00 <_ZN19ProgressBarViewBaseC1Ev+0x294>)
 8006bf6:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006bfa:	f504 77e6 	add.w	r7, r4, #460	; 0x1cc
 8006bfe:	e9c4 5b6e 	strd	r5, fp, [r4, #440]	; 0x1b8
    {
        setBitmap(bmp);
 8006c02:	a908      	add	r1, sp, #32
          xOffset(0), yOffset(0), isTiled(false)
 8006c04:	e9c4 556c 	strd	r5, r5, [r4, #432]	; 0x1b0
        : x(0), y(0), width(0), height(0)
 8006c08:	e9c4 5570 	strd	r5, r5, [r4, #448]	; 0x1c0
        setBitmap(bmp);
 8006c0c:	ee18 0a10 	vmov	r0, s16
          xOffset(0), yOffset(0), isTiled(false)
 8006c10:	f8a4 51c8 	strh.w	r5, [r4, #456]	; 0x1c8
 8006c14:	f884 51ca 	strb.w	r5, [r4, #458]	; 0x1ca
        setBitmap(bmp);
 8006c18:	f00c fe82 	bl	8013920 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>
 8006c1c:	f504 7938 	add.w	r9, r4, #736	; 0x2e0
 8006c20:	4638      	mov	r0, r7
 8006c22:	f00a fd93 	bl	801174c <_ZN8touchgfx12TextProgressC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006c26:	2226      	movs	r2, #38	; 0x26
 8006c28:	4629      	mov	r1, r5
 8006c2a:	4648      	mov	r0, r9
 8006c2c:	f025 fb50 	bl	802c2d0 <memset>
 8006c30:	4648      	mov	r0, r9
 8006c32:	f7fc ff7b 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8006c36:	4b73      	ldr	r3, [pc, #460]	; (8006e04 <_ZN19ProgressBarViewBaseC1Ev+0x298>)
 8006c38:	f8c4 32e0 	str.w	r3, [r4, #736]	; 0x2e0
 8006c3c:	4b72      	ldr	r3, [pc, #456]	; (8006e08 <_ZN19ProgressBarViewBaseC1Ev+0x29c>)
 8006c3e:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 8006c42:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8006c46:	f8c4 3314 	str.w	r3, [r4, #788]	; 0x314
        : x(x), y(y), width(width), height(height)
 8006c4a:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 8006c4e:	e9c4 35c8 	strd	r3, r5, [r4, #800]	; 0x320
 8006c52:	f8a4 b30c 	strh.w	fp, [r4, #780]	; 0x30c
        : color(col)
 8006c56:	f8c4 5310 	str.w	r5, [r4, #784]	; 0x310
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006c5a:	f8a4 5318 	strh.w	r5, [r4, #792]	; 0x318
        : x(x), y(y), width(width), height(height)
 8006c5e:	f8c4 531c 	str.w	r5, [r4, #796]	; 0x31c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006c62:	f504 704a 	add.w	r0, r4, #808	; 0x328
 8006c66:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8006c6a:	f010 fe31 	bl	80178d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        setXY(x, y);
 8006c6e:	462a      	mov	r2, r5
 8006c70:	4629      	mov	r1, r5
 8006c72:	4640      	mov	r0, r8
 8006c74:	f7fc fde4 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8006c78:	4640      	mov	r0, r8
 8006c7a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006c7e:	f7fc fd5f 	bl	8003740 <_ZN8touchgfx8Drawable8setWidthEs>
        this->color = color;
 8006c82:	f04f 4b7f 	mov.w	fp, #4278190080	; 0xff000000
        setHeight(height);
 8006c86:	4640      	mov	r0, r8
 8006c88:	21f0      	movs	r1, #240	; 0xf0
 8006c8a:	f7fc fd5b 	bl	8003744 <_ZN8touchgfx8Drawable9setHeightEs>
    image1.setXY(0, 0);
 8006c8e:	462a      	mov	r2, r5
 8006c90:	4629      	mov	r1, r5
 8006c92:	4650      	mov	r0, sl
 8006c94:	f8c4 b068 	str.w	fp, [r4, #104]	; 0x68
 8006c98:	f7fc fdd2 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 8006c9c:	a908      	add	r1, sp, #32
 8006c9e:	4650      	mov	r0, sl
 8006ca0:	f8ad 5020 	strh.w	r5, [sp, #32]
 8006ca4:	f010 fc9d 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    circleProgress1.setXY(18, 68);
 8006ca8:	4630      	mov	r0, r6
 8006caa:	2244      	movs	r2, #68	; 0x44
 8006cac:	2112      	movs	r1, #18
 8006cae:	f7fc fdc7 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    circleProgress1.setProgressIndicatorPosition(0, 0, 104, 104);
 8006cb2:	2368      	movs	r3, #104	; 0x68
 8006cb4:	9300      	str	r3, [sp, #0]
 8006cb6:	462a      	mov	r2, r5
 8006cb8:	4629      	mov	r1, r5
 8006cba:	4630      	mov	r0, r6
 8006cbc:	f00a fdf5 	bl	80118aa <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>
    circleProgress1.setRange(0, 100);
 8006cc0:	462b      	mov	r3, r5
 8006cc2:	9500      	str	r5, [sp, #0]
 8006cc4:	4629      	mov	r1, r5
 8006cc6:	4630      	mov	r0, r6
 8006cc8:	2264      	movs	r2, #100	; 0x64
 8006cca:	f00a ff25 	bl	8011b18 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    circleProgress1.setCenter(52, 52);
 8006cce:	2234      	movs	r2, #52	; 0x34
 8006cd0:	4611      	mov	r1, r2
 8006cd2:	4630      	mov	r0, r6
 8006cd4:	f00a fd90 	bl	80117f8 <_ZN8touchgfx14CircleProgress9setCenterEii>
    circleProgress1.setRadius(50);
 8006cd8:	4630      	mov	r0, r6
 8006cda:	2132      	movs	r1, #50	; 0x32
 8006cdc:	f00a fda0 	bl	8011820 <_ZN8touchgfx14CircleProgress9setRadiusEi>
    circleProgress1.setLineWidth(0);
 8006ce0:	4629      	mov	r1, r5
 8006ce2:	4630      	mov	r0, r6
 8006ce4:	f00a fda6 	bl	8011834 <_ZN8touchgfx14CircleProgress12setLineWidthEi>
    circleProgress1.setStartEndAngle(0, 360);
 8006ce8:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8006cec:	4629      	mov	r1, r5
 8006cee:	4630      	mov	r0, r6
 8006cf0:	f00a fe24 	bl	801193c <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
 8006cf4:	230b      	movs	r3, #11
    circleProgress1.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_FULL_ID));
 8006cf6:	a908      	add	r1, sp, #32
 8006cf8:	4630      	mov	r0, r6
 8006cfa:	f8ad 3020 	strh.w	r3, [sp, #32]
 8006cfe:	f00a ffd0 	bl	8011ca2 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
 8006d02:	230d      	movs	r3, #13
    circleProgress1Painter.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_FILL_MEDIUM_CIRCLE_INDICATOR_FILL_FULL_ID));
 8006d04:	ee18 0a10 	vmov	r0, s16
 8006d08:	a908      	add	r1, sp, #32
 8006d0a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8006d0e:	f00c fe07 	bl	8013920 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>
    circleProgress1.setPainter(circleProgress1Painter);
 8006d12:	ee18 1a10 	vmov	r1, s16
 8006d16:	4630      	mov	r0, r6
 8006d18:	f00a fda1 	bl	801185e <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>
    circleProgress1.setValue(60);
 8006d1c:	4630      	mov	r0, r6
 8006d1e:	213c      	movs	r1, #60	; 0x3c
 8006d20:	f00a fdf0 	bl	8011904 <_ZN8touchgfx14CircleProgress8setValueEi>
    textProgress1.setXY(28, 107);
 8006d24:	4638      	mov	r0, r7
 8006d26:	226b      	movs	r2, #107	; 0x6b
 8006d28:	211c      	movs	r1, #28
 8006d2a:	f7fc fd89 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    textProgress1.setProgressIndicatorPosition(0, 0, 84, 34);
 8006d2e:	2322      	movs	r3, #34	; 0x22
 8006d30:	9300      	str	r3, [sp, #0]
 8006d32:	462a      	mov	r2, r5
 8006d34:	4629      	mov	r1, r5
 8006d36:	4638      	mov	r0, r7
 8006d38:	2354      	movs	r3, #84	; 0x54
 8006d3a:	f00a fce9 	bl	8011710 <_ZN8touchgfx12TextProgress28setProgressIndicatorPositionEssss>
    textProgress1.setRange(0, 100);
 8006d3e:	2264      	movs	r2, #100	; 0x64
 8006d40:	462b      	mov	r3, r5
 8006d42:	9500      	str	r5, [sp, #0]
 8006d44:	4629      	mov	r1, r5
 8006d46:	4638      	mov	r0, r7
 8006d48:	f00a fee6 	bl	8011b18 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    textProgress1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8006d4c:	4659      	mov	r1, fp
 8006d4e:	4638      	mov	r0, r7
 8006d50:	f00a fc0c 	bl	801156c <_ZN8touchgfx12TextProgress8setColorENS_9colortypeE>
    textProgress1.setNumberOfDecimals(0);
 8006d54:	4629      	mov	r1, r5
 8006d56:	4638      	mov	r0, r7
 8006d58:	f00a fc0e 	bl	8011578 <_ZN8touchgfx12TextProgress19setNumberOfDecimalsEt>
 8006d5c:	4b2a      	ldr	r3, [pc, #168]	; (8006e08 <_ZN19ProgressBarViewBaseC1Ev+0x29c>)
 8006d5e:	9308      	str	r3, [sp, #32]
    textProgress1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KOIW));
 8006d60:	a908      	add	r1, sp, #32
 8006d62:	2312      	movs	r3, #18
 8006d64:	4638      	mov	r0, r7
 8006d66:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006d6a:	f00a fc63 	bl	8011634 <_ZN8touchgfx12TextProgress12setTypedTextERKNS_9TypedTextE>
 8006d6e:	230c      	movs	r3, #12
    textProgress1.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_TEXT_PROGRESS_BG_SQUARE_ID));
 8006d70:	a908      	add	r1, sp, #32
 8006d72:	4638      	mov	r0, r7
 8006d74:	f8ad 3020 	strh.w	r3, [sp, #32]
 8006d78:	f00a ff93 	bl	8011ca2 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    textProgress1.setValue(0);
 8006d7c:	4629      	mov	r1, r5
 8006d7e:	4638      	mov	r0, r7
 8006d80:	f00a fc64 	bl	801164c <_ZN8touchgfx12TextProgress8setValueEi>
    textArea1.setXY(130, 88);
 8006d84:	2258      	movs	r2, #88	; 0x58
 8006d86:	4648      	mov	r0, r9
 8006d88:	2182      	movs	r1, #130	; 0x82
 8006d8a:	f7fc fd59 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 8006d8e:	f8a4 5314 	strh.w	r5, [r4, #788]	; 0x314
        boundingArea = calculateBoundingArea();
 8006d92:	ad04      	add	r5, sp, #16
 8006d94:	4649      	mov	r1, r9
 8006d96:	4628      	mov	r0, r5
        this->color = color;
 8006d98:	f8c4 b310 	str.w	fp, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 8006d9c:	f00f fd58 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006da0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006da4:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 8006da8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006dac:	4b16      	ldr	r3, [pc, #88]	; (8006e08 <_ZN19ProgressBarViewBaseC1Ev+0x29c>)
 8006dae:	9308      	str	r3, [sp, #32]
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I9XH));
 8006db0:	a908      	add	r1, sp, #32
 8006db2:	2311      	movs	r3, #17
 8006db4:	4648      	mov	r0, r9
 8006db6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006dba:	f010 f88f 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006dbe:	1d20      	adds	r0, r4, #4
 8006dc0:	4641      	mov	r1, r8
 8006dc2:	9003      	str	r0, [sp, #12]
 8006dc4:	f00b f84a 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006dc8:	9803      	ldr	r0, [sp, #12]
 8006dca:	4651      	mov	r1, sl
 8006dcc:	f00b f846 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006dd0:	9803      	ldr	r0, [sp, #12]
 8006dd2:	4631      	mov	r1, r6
 8006dd4:	f00b f842 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006dd8:	9803      	ldr	r0, [sp, #12]
 8006dda:	4639      	mov	r1, r7
 8006ddc:	f00b f83e 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006de0:	9803      	ldr	r0, [sp, #12]
 8006de2:	4649      	mov	r1, r9
 8006de4:	f00b f83a 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006de8:	4620      	mov	r0, r4
 8006dea:	b00b      	add	sp, #44	; 0x2c
 8006dec:	ecbd 8b02 	vpop	{d8}
 8006df0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006df4:	08031154 	.word	0x08031154
 8006df8:	08034824 	.word	0x08034824
 8006dfc:	08034a04 	.word	0x08034a04
 8006e00:	08033c40 	.word	0x08033c40
 8006e04:	08034764 	.word	0x08034764
 8006e08:	0802f844 	.word	0x0802f844

08006e0c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8006e0c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8006e0e:	4770      	bx	lr

08006e10 <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
     * @see setScaleX, setScaleY, getScaleY
     */
    virtual int getScaleX() const
    {
        return xScale;
    }
 8006e10:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8006e12:	4770      	bx	lr

08006e14 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
     * @see setScaleY, setScaleX, getScaleX
     */
    virtual int getScaleY() const
    {
        return yScale;
    }
 8006e14:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8006e16:	4770      	bx	lr

08006e18 <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8006e18:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 8006e1c:	4770      	bx	lr

08006e1e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8006e1e:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8006e20:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 8006e22:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8006e24:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8006e28:	4362      	muls	r2, r4
 8006e2a:	4361      	muls	r1, r4
    }
 8006e2c:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8006e30:	4718      	bx	r3

08006e32 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * scale;
 8006e32:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8006e36:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 8006e38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8006e3c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * scale;
 8006e40:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8006e44:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8006e48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e4c:	db17      	blt.n	8006e7e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return int(fs + 0.5f);
 8006e4e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006e52:	ee30 0a07 	vadd.f32	s0, s0, s14
 8006e56:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8006e5a:	ee17 1a10 	vmov	r1, s14
        const float fs = f * scale;
 8006e5e:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8006e62:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8006e66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e6a:	db1c      	blt.n	8006ea6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return int(fs + 0.5f);
 8006e6c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8006e70:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8006e74:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8006e78:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8006e7c:	4718      	bx	r3
        }
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 8006e7e:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8006e82:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006e86:	ee17 2a10 	vmov	r2, s14
 8006e8a:	ee30 0a66 	vsub.f32	s0, s0, s13
 8006e8e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006e92:	ee30 0a26 	vadd.f32	s0, s0, s13
 8006e96:	1e51      	subs	r1, r2, #1
 8006e98:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8006e9c:	ee10 2a10 	vmov	r2, s0
 8006ea0:	440a      	add	r2, r1
 8006ea2:	4611      	mov	r1, r2
 8006ea4:	e7db      	b.n	8006e5e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 8006ea6:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8006eaa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006eae:	ee17 2a90 	vmov	r2, s15
 8006eb2:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8006eb6:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8006eba:	ee70 0a87 	vadd.f32	s1, s1, s14
 8006ebe:	3a01      	subs	r2, #1
 8006ec0:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8006ec4:	ee10 ca90 	vmov	ip, s1
 8006ec8:	4494      	add	ip, r2
 8006eca:	4662      	mov	r2, ip
 8006ecc:	e7d6      	b.n	8006e7c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08006ece <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8006ece:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8006ed0:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8006ed2:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8006ed4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8006ed8:	4362      	muls	r2, r4
    }
 8006eda:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8006ede:	4718      	bx	r3

08006ee0 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * scale;
 8006ee0:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8006ee4:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 8006ee6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8006eea:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * scale;
 8006eee:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8006ef2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8006ef6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006efa:	db08      	blt.n	8006f0e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return int(fs + 0.5f);
 8006efc:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8006f00:	ee30 0a27 	vadd.f32	s0, s0, s15
 8006f04:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8006f08:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8006f0c:	4718      	bx	r3
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 8006f0e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8006f12:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006f16:	ee17 2a90 	vmov	r2, s15
 8006f1a:	ee30 0a47 	vsub.f32	s0, s0, s14
 8006f1e:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8006f22:	ee30 0a07 	vadd.f32	s0, s0, s14
 8006f26:	3a01      	subs	r2, #1
 8006f28:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8006f2c:	ee10 ca10 	vmov	ip, s0
 8006f30:	4494      	add	ip, r2
 8006f32:	4662      	mov	r2, ip
 8006f34:	e7ea      	b.n	8006f0c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

08006f36 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 8006f36:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8006f38:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 8006f3a:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8006f3c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8006f40:	4362      	muls	r2, r4
 8006f42:	4361      	muls	r1, r4
    }
 8006f44:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8006f48:	4718      	bx	r3

08006f4a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * scale;
 8006f4a:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8006f4e:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 8006f50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8006f54:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * scale;
 8006f58:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8006f5c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8006f60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006f64:	db17      	blt.n	8006f96 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return int(fs + 0.5f);
 8006f66:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006f6a:	ee30 0a07 	vadd.f32	s0, s0, s14
 8006f6e:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8006f72:	ee17 1a10 	vmov	r1, s14
        const float fs = f * scale;
 8006f76:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8006f7a:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8006f7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006f82:	db1c      	blt.n	8006fbe <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return int(fs + 0.5f);
 8006f84:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8006f88:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8006f8c:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8006f90:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8006f94:	4718      	bx	r3
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 8006f96:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8006f9a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006f9e:	ee17 2a10 	vmov	r2, s14
 8006fa2:	ee30 0a66 	vsub.f32	s0, s0, s13
 8006fa6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006faa:	ee30 0a26 	vadd.f32	s0, s0, s13
 8006fae:	1e51      	subs	r1, r2, #1
 8006fb0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8006fb4:	ee10 2a10 	vmov	r2, s0
 8006fb8:	440a      	add	r2, r1
 8006fba:	4611      	mov	r1, r2
 8006fbc:	e7db      	b.n	8006f76 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8006fbe:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8006fc2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006fc6:	ee17 2a90 	vmov	r2, s15
 8006fca:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8006fce:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8006fd2:	ee70 0a87 	vadd.f32	s1, s1, s14
 8006fd6:	3a01      	subs	r2, #1
 8006fd8:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8006fdc:	ee10 ca90 	vmov	ip, s1
 8006fe0:	4494      	add	ip, r2
 8006fe2:	4662      	mov	r2, ip
 8006fe4:	e7d6      	b.n	8006f94 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08006fe6 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8006fe6:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8006fe8:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8006fea:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8006fec:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8006ff0:	4362      	muls	r2, r4
    }
 8006ff2:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8006ff6:	4718      	bx	r3

08006ff8 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * scale;
 8006ff8:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8006ffc:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 8006ffe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8007002:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * scale;
 8007006:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 800700a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800700e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007012:	db08      	blt.n	8007026 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return int(fs + 0.5f);
 8007014:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8007018:	ee30 0a27 	vadd.f32	s0, s0, s15
 800701c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8007020:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8007024:	4718      	bx	r3
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 8007026:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800702a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800702e:	ee17 2a90 	vmov	r2, s15
 8007032:	ee30 0a47 	vsub.f32	s0, s0, s14
 8007036:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800703a:	ee30 0a07 	vadd.f32	s0, s0, s14
 800703e:	3a01      	subs	r2, #1
 8007040:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8007044:	ee10 ca10 	vmov	ip, s0
 8007048:	4494      	add	ip, r2
 800704a:	4662      	mov	r2, ip
 800704c:	e7ea      	b.n	8007024 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

0800704e <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 800704e:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 8007052:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8007054:	2b00      	cmp	r3, #0
 8007056:	db07      	blt.n	8007068 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8007058:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800705c:	fb93 f0f2 	sdiv	r0, r3, r2
 8007060:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8007064:	1040      	asrs	r0, r0, #1
 8007066:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8007068:	f06f 0001 	mvn.w	r0, #1
 800706c:	fb00 2003 	mla	r0, r0, r3, r2
 8007070:	3801      	subs	r0, #1
 8007072:	fb90 f0f2 	sdiv	r0, r0, r2
 8007076:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800707a:	1040      	asrs	r0, r0, #1
 800707c:	4240      	negs	r0, r0
    }
 800707e:	4770      	bx	lr

08007080 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 8007080:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 8007084:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8007088:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 800708c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8007090:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8007094:	4770      	bx	lr

08007096 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 8007096:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 800709a:	4770      	bx	lr

0800709c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 800709c:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 80070a0:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80070a2:	2b00      	cmp	r3, #0
 80070a4:	db07      	blt.n	80070b6 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80070a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80070aa:	fb93 f0f2 	sdiv	r0, r3, r2
 80070ae:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80070b2:	1040      	asrs	r0, r0, #1
 80070b4:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80070b6:	f06f 0001 	mvn.w	r0, #1
 80070ba:	fb00 2003 	mla	r0, r0, r3, r2
 80070be:	3801      	subs	r0, #1
 80070c0:	fb90 f0f2 	sdiv	r0, r0, r2
 80070c4:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80070c8:	1040      	asrs	r0, r0, #1
 80070ca:	4240      	negs	r0, r0
    }
 80070cc:	4770      	bx	lr

080070ce <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 80070ce:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 80070d2:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80070d6:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 80070da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80070de:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80070e2:	4770      	bx	lr

080070e4 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 80070e4:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 80070e8:	4770      	bx	lr

080070ea <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 80070ea:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 80070ee:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80070f0:	2b00      	cmp	r3, #0
 80070f2:	db07      	blt.n	8007104 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80070f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80070f8:	fb93 f0f2 	sdiv	r0, r3, r2
 80070fc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8007100:	1040      	asrs	r0, r0, #1
 8007102:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8007104:	f06f 0001 	mvn.w	r0, #1
 8007108:	fb00 2003 	mla	r0, r0, r3, r2
 800710c:	3801      	subs	r0, #1
 800710e:	fb90 f0f2 	sdiv	r0, r0, r2
 8007112:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8007116:	1040      	asrs	r0, r0, #1
 8007118:	4240      	negs	r0, r0
    }
 800711a:	4770      	bx	lr

0800711c <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 800711c:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8007120:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8007124:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8007128:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800712c:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8007130:	4770      	bx	lr

08007132 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 8007132:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 8007136:	4770      	bx	lr

08007138 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 8007138:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 800713c:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 800713e:	2b00      	cmp	r3, #0
 8007140:	db07      	blt.n	8007152 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8007142:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8007146:	fb93 f0f2 	sdiv	r0, r3, r2
 800714a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800714e:	1040      	asrs	r0, r0, #1
 8007150:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8007152:	f06f 0001 	mvn.w	r0, #1
 8007156:	fb00 2003 	mla	r0, r0, r3, r2
 800715a:	3801      	subs	r0, #1
 800715c:	fb90 f0f2 	sdiv	r0, r0, r2
 8007160:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8007164:	1040      	asrs	r0, r0, #1
 8007166:	4240      	negs	r0, r0
    }
 8007168:	4770      	bx	lr

0800716a <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 800716a:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 800716e:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8007172:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8007176:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800717a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800717e:	4770      	bx	lr

08007180 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 8007180:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 8007184:	4770      	bx	lr

08007186 <_ZNK8touchgfx15StaticDataGraph12indexToXAxisEii>:
    virtual int16_t deleteIndex(int index);

    virtual int indexToXAxis(const int /*valueScaled*/, const int labelScaled) const
    {
        return labelScaled;
    }
 8007186:	4610      	mov	r0, r2
 8007188:	4770      	bx	lr

0800718a <_ZNK8touchgfx15StaticDataGraph16indexToScreenXQ5Es>:

    virtual bool xScreenRangeToIndexRange(int16_t xMin, int16_t xMax, int16_t& indexMin, int16_t& indexMax) const;

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(xValues[index]);
 800718a:	f8d0 213c 	ldr.w	r2, [r0, #316]	; 0x13c
 800718e:	6803      	ldr	r3, [r0, #0]
 8007190:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8007194:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8007198:	4718      	bx	r3

0800719a <_ZNK8touchgfx15StaticDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[index]);
 800719a:	f8d0 2140 	ldr.w	r2, [r0, #320]	; 0x140
 800719e:	6803      	ldr	r3, [r0, #0]
 80071a0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80071a4:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 80071a8:	4718      	bx	r3

080071aa <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    virtual AbstractPainter& getPainter() const;

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80071aa:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80071ae:	4770      	bx	lr

080071b0 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80071b0:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80071b4:	4770      	bx	lr

080071b6 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 80071b6:	6301      	str	r1, [r0, #48]	; 0x30
    }
 80071b8:	4770      	bx	lr

080071ba <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 80071ba:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80071bc:	4770      	bx	lr

080071be <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 80071be:	2001      	movs	r0, #1
 80071c0:	4770      	bx	lr

080071c2 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    /**
     * Protected function to prevent users from setting a painter.
     *
     * @param [in] painter The painter.
     */
    virtual void setPainter(AbstractPainter& painter){};
 80071c2:	4770      	bx	lr

080071c4 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 80071c4:	4770      	bx	lr

080071c6 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 80071c6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80071c8:	b118      	cbz	r0, 80071d2 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 80071ca:	6803      	ldr	r3, [r0, #0]
 80071cc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80071d0:	4718      	bx	r3
    }
 80071d2:	4770      	bx	lr

080071d4 <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 80071d4:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80071d6:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 80071da:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 80071de:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80071e2:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
 80071e6:	8044      	strh	r4, [r0, #2]
 80071e8:	4421      	add	r1, r4
 80071ea:	1a52      	subs	r2, r2, r1
 80071ec:	2100      	movs	r1, #0
 80071ee:	8001      	strh	r1, [r0, #0]
 80071f0:	8085      	strh	r5, [r0, #4]
 80071f2:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 80071f4:	bd30      	pop	{r4, r5, pc}

080071f6 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 80071f6:	b510      	push	{r4, lr}
 80071f8:	8042      	strh	r2, [r0, #2]
 80071fa:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 80071fe:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8007202:	8004      	strh	r4, [r0, #0]
 8007204:	8082      	strh	r2, [r0, #4]
 8007206:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8007208:	bd10      	pop	{r4, pc}

0800720a <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 800720a:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 800720c:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 800720e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8007212:	4718      	bx	r3

08007214 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8007214:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8007216:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8007218:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800721c:	4718      	bx	r3

0800721e <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 800721e:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8007222:	4770      	bx	lr

08007224 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8007224:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8007228:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 800722c:	4403      	add	r3, r0
 800722e:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8007232:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8007234:	b200      	sxth	r0, r0
 8007236:	4770      	bx	lr

08007238 <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8007238:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 800723c:	4770      	bx	lr

0800723e <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 800723e:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8007242:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8007246:	4403      	add	r3, r0
 8007248:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 800724c:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 800724e:	b200      	sxth	r0, r0
 8007250:	4770      	bx	lr

08007252 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8007252:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8007254:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8007256:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800725a:	4611      	mov	r1, r2
 800725c:	4718      	bx	r3

0800725e <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 800725e:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8007262:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8007264:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8007268:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 800726a:	186c      	adds	r4, r5, r1
 800726c:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8007270:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8007274:	80c2      	strh	r2, [r0, #6]
 8007276:	1b09      	subs	r1, r1, r4
 8007278:	2400      	movs	r4, #0
 800727a:	8044      	strh	r4, [r0, #2]
 800727c:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 800727e:	bd30      	pop	{r4, r5, pc}

08007280 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8007280:	8002      	strh	r2, [r0, #0]
 8007282:	8083      	strh	r3, [r0, #4]
 8007284:	f9bd 2000 	ldrsh.w	r2, [sp]
 8007288:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800728c:	8042      	strh	r2, [r0, #2]
 800728e:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8007290:	4770      	bx	lr

08007292 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8007292:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8007294:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8007296:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800729a:	4718      	bx	r3

0800729c <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 800729c:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 800729e:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 80072a0:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80072a4:	4718      	bx	r3

080072a6 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 80072a6:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 80072aa:	4770      	bx	lr

080072ac <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 80072ac:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 80072b0:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 80072b4:	4403      	add	r3, r0
 80072b6:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 80072ba:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 80072bc:	b200      	sxth	r0, r0
 80072be:	4770      	bx	lr

080072c0 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 80072c0:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 80072c4:	4770      	bx	lr

080072c6 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80072c6:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 80072ca:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 80072ce:	4403      	add	r3, r0
 80072d0:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 80072d4:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 80072d6:	b200      	sxth	r0, r0
 80072d8:	4770      	bx	lr

080072da <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 80072da:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 80072dc:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 80072de:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 80072e2:	4611      	mov	r1, r2
 80072e4:	4718      	bx	r3

080072e6 <_ZN22ReactanceGraphViewBaseD1Ev>:

class ReactanceGraphViewBase : public touchgfx::View<ReactanceGraphPresenter>
{
public:
    ReactanceGraphViewBase();
    virtual ~ReactanceGraphViewBase() {}
 80072e6:	4770      	bx	lr

080072e8 <_ZN22ReactanceGraphViewBase13PlotReactanceEv>:
     * Virtual Action Handlers
     */
    virtual void PlotReactance()
    {
        // Override and implement this function in ReactanceGraph
    }
 80072e8:	4770      	bx	lr

080072ea <_ZN22ReactanceGraphViewBase11setupScreenEv>:
{

    //Interaction2
    //When screen transition begins call virtual function
    //Call PlotReactance
    PlotReactance();
 80072ea:	6803      	ldr	r3, [r0, #0]
 80072ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80072ee:	4718      	bx	r3

080072f0 <_ZN8touchgfx8CallbackI22ReactanceGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80072f0:	4770      	bx	lr

080072f2 <_ZN8touchgfx5GraphILs26EED1Ev>:
 * The Graph will show a graph of data points, drawn from lower x valut to highest x value.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class Graph : public GraphData
 80072f2:	4770      	bx	lr

080072f4 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 80072f4:	4770      	bx	lr

080072f6 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 80072f6:	4770      	bx	lr

080072f8 <_ZN8touchgfx8CallbackI22ReactanceGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80072f8:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80072fa:	68c2      	ldr	r2, [r0, #12]
 80072fc:	6844      	ldr	r4, [r0, #4]
 80072fe:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007300:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8007302:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007306:	07d2      	lsls	r2, r2, #31
 8007308:	bf48      	it	mi
 800730a:	5962      	ldrmi	r2, [r4, r5]
 800730c:	689b      	ldr	r3, [r3, #8]
    }
 800730e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8007310:	bf48      	it	mi
 8007312:	58d3      	ldrmi	r3, [r2, r3]
 8007314:	4718      	bx	r3

08007316 <_ZNK8touchgfx8CallbackI22ReactanceGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8007316:	6843      	ldr	r3, [r0, #4]
 8007318:	b12b      	cbz	r3, 8007326 <_ZNK8touchgfx8CallbackI22ReactanceGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800731a:	6883      	ldr	r3, [r0, #8]
 800731c:	b92b      	cbnz	r3, 800732a <_ZNK8touchgfx8CallbackI22ReactanceGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800731e:	68c0      	ldr	r0, [r0, #12]
 8007320:	f000 0001 	and.w	r0, r0, #1
 8007324:	4770      	bx	lr
 8007326:	4618      	mov	r0, r3
 8007328:	4770      	bx	lr
 800732a:	2001      	movs	r0, #1
    }
 800732c:	4770      	bx	lr

0800732e <_ZN8touchgfx17GraphElementGridXD0Ev>:
 800732e:	b510      	push	{r4, lr}
 8007330:	2144      	movs	r1, #68	; 0x44
 8007332:	4604      	mov	r4, r0
 8007334:	f023 fef9 	bl	802b12a <_ZdlPvj>
 8007338:	4620      	mov	r0, r4
 800733a:	bd10      	pop	{r4, pc}

0800733c <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 800733c:	b510      	push	{r4, lr}
 800733e:	2144      	movs	r1, #68	; 0x44
 8007340:	4604      	mov	r4, r0
 8007342:	f023 fef2 	bl	802b12a <_ZdlPvj>
 8007346:	4620      	mov	r0, r4
 8007348:	bd10      	pop	{r4, pc}

0800734a <_ZN8touchgfx5GraphILs26EED0Ev>:
 800734a:	b510      	push	{r4, lr}
 800734c:	f44f 7105 	mov.w	r1, #532	; 0x214
 8007350:	4604      	mov	r4, r0
 8007352:	f023 feea 	bl	802b12a <_ZdlPvj>
 8007356:	4620      	mov	r0, r4
 8007358:	bd10      	pop	{r4, pc}

0800735a <_ZN8touchgfx8CallbackI22ReactanceGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800735a:	b510      	push	{r4, lr}
 800735c:	2110      	movs	r1, #16
 800735e:	4604      	mov	r4, r0
 8007360:	f023 fee3 	bl	802b12a <_ZdlPvj>
 8007364:	4620      	mov	r0, r4
 8007366:	bd10      	pop	{r4, pc}

08007368 <_ZN22ReactanceGraphViewBaseD0Ev>:
    virtual ~ReactanceGraphViewBase() {}
 8007368:	b510      	push	{r4, lr}
 800736a:	f241 71b8 	movw	r1, #6072	; 0x17b8
 800736e:	4604      	mov	r4, r0
 8007370:	f023 fedb 	bl	802b12a <_ZdlPvj>
 8007374:	4620      	mov	r0, r4
 8007376:	bd10      	pop	{r4, pc}

08007378 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8007378:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800737c:	b10b      	cbz	r3, 8007382 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 800737e:	f00a bd29 	b.w	8011dd4 <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8007382:	4770      	bx	lr

08007384 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8007384:	b513      	push	{r0, r1, r4, lr}
 8007386:	4603      	mov	r3, r0
 8007388:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 800738a:	e9d3 140d 	ldrd	r1, r4, [r3, #52]	; 0x34
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 800738e:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8007390:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8007392:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8007396:	4798      	blx	r3
 8007398:	9901      	ldr	r1, [sp, #4]
 800739a:	4602      	mov	r2, r0
 800739c:	4620      	mov	r0, r4
    }
 800739e:	b002      	add	sp, #8
 80073a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 80073a4:	f00d be24 	b.w	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

080073a8 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 80073a8:	b513      	push	{r0, r1, r4, lr}
 80073aa:	4603      	mov	r3, r0
 80073ac:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 80073ae:	e9d3 140d 	ldrd	r1, r4, [r3, #52]	; 0x34
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 80073b2:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 80073b4:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 80073b6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80073ba:	4798      	blx	r3
 80073bc:	9901      	ldr	r1, [sp, #4]
 80073be:	4602      	mov	r2, r0
 80073c0:	4620      	mov	r0, r4
    }
 80073c2:	b002      	add	sp, #8
 80073c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 80073c8:	f00d be12 	b.w	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

080073cc <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 80073cc:	2900      	cmp	r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 80073ce:	b508      	push	{r3, lr}
        assert(index >= 0 && index < usedCapacity);
 80073d0:	db03      	blt.n	80073da <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0xe>
 80073d2:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 80073d6:	428b      	cmp	r3, r1
 80073d8:	dc06      	bgt.n	80073e8 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0x1c>
 80073da:	4b06      	ldr	r3, [pc, #24]	; (80073f4 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0x28>)
 80073dc:	4a06      	ldr	r2, [pc, #24]	; (80073f8 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0x2c>)
 80073de:	4807      	ldr	r0, [pc, #28]	; (80073fc <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0x30>)
 80073e0:	f240 61eb 	movw	r1, #1771	; 0x6eb
 80073e4:	f024 fdee 	bl	802bfc4 <__assert_func>
        return yValues[index];
 80073e8:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
    }
 80073ec:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80073f0:	bd08      	pop	{r3, pc}
 80073f2:	bf00      	nop
 80073f4:	08031180 	.word	0x08031180
 80073f8:	080311a3 	.word	0x080311a3
 80073fc:	080311f1 	.word	0x080311f1

08007400 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8007400:	2900      	cmp	r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8007402:	b508      	push	{r3, lr}
        assert(index >= 0 && index < usedCapacity);
 8007404:	db03      	blt.n	800740e <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0xe>
 8007406:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800740a:	428b      	cmp	r3, r1
 800740c:	dc06      	bgt.n	800741c <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0x1c>
 800740e:	4b06      	ldr	r3, [pc, #24]	; (8007428 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0x28>)
 8007410:	4a06      	ldr	r2, [pc, #24]	; (800742c <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0x2c>)
 8007412:	4807      	ldr	r0, [pc, #28]	; (8007430 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0x30>)
 8007414:	f240 61db 	movw	r1, #1755	; 0x6db
 8007418:	f024 fdd4 	bl	802bfc4 <__assert_func>
        return xValues[index];
 800741c:	f8d0 313c 	ldr.w	r3, [r0, #316]	; 0x13c
    }
 8007420:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8007424:	bd08      	pop	{r3, pc}
 8007426:	bf00      	nop
 8007428:	08031180 	.word	0x08031180
 800742c:	0803124e 	.word	0x0803124e
 8007430:	080311f1 	.word	0x080311f1

08007434 <_ZN22ReactanceGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ReactanceGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ReturnToList2)
 8007434:	3098      	adds	r0, #152	; 0x98
 8007436:	4288      	cmp	r0, r1
{
 8007438:	b508      	push	{r3, lr}
    if (&src == &ReturnToList2)
 800743a:	d105      	bne.n	8007448 <_ZN22ReactanceGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800743c:	f011 ff8c 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When ReturnToList2 clicked change screen to DataDisplayList
        //Go to DataDisplayList with no screen transition
        application().gotoDataDisplayListScreenNoTransition();
    }
}
 8007440:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoDataDisplayListScreenNoTransition();
 8007444:	f7fd bba4 	b.w	8004b90 <_ZN23FrontendApplicationBase37gotoDataDisplayListScreenNoTransitionEv>
}
 8007448:	bd08      	pop	{r3, pc}

0800744a <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 800744a:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 800744c:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 800744e:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8007450:	f013 f928 	bl	801a6a4 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8007454:	2800      	cmp	r0, #0
 8007456:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv(int(factor1), int(factor2), int(divisor)));
 800745a:	9901      	ldr	r1, [sp, #4]
 800745c:	462a      	mov	r2, r5
 800745e:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8007462:	db04      	blt.n	800746e <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv(int(factor1), int(factor2), int(divisor)));
 8007464:	f013 f93d 	bl	801a6e2 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8007468:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 800746a:	b003      	add	sp, #12
 800746c:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv(int(factor1), int(factor2), int(divisor)));
 800746e:	f013 f938 	bl	801a6e2 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8007472:	1a20      	subs	r0, r4, r0
 8007474:	e7f9      	b.n	800746a <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08007476 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8007476:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8007478:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 800747c:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8007480:	1963      	adds	r3, r4, r5
 8007482:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8007486:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8007488:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 800748c:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 800748e:	b22d      	sxth	r5, r5
 8007490:	1ad2      	subs	r2, r2, r3
 8007492:	1e69      	subs	r1, r5, #1
 8007494:	1af0      	subs	r0, r6, r3
 8007496:	f7ff ffd8 	bl	800744a <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 800749a:	442c      	add	r4, r5
 800749c:	3c01      	subs	r4, #1
    }
 800749e:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 80074a2:	bd70      	pop	{r4, r5, r6, pc}

080074a4 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 80074a4:	b538      	push	{r3, r4, r5, lr}
 80074a6:	4604      	mov	r4, r0
 80074a8:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80074aa:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 80074ae:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 80074b2:	440b      	add	r3, r1
 80074b4:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80074b8:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80074bc:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80074be:	b209      	sxth	r1, r1
 80074c0:	1b52      	subs	r2, r2, r5
 80074c2:	3901      	subs	r1, #1
 80074c4:	1b40      	subs	r0, r0, r5
 80074c6:	f7ff ffc0 	bl	800744a <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 80074ca:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 80074ce:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 80074d2:	bd38      	pop	{r3, r4, r5, pc}

080074d4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 80074d4:	b510      	push	{r4, lr}
 80074d6:	4604      	mov	r4, r0
        : CanvasWidget()
 80074d8:	f00d f91e 	bl	8014718 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TypedText(TYPED_TEXT_INVALID)), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 80074dc:	4a0b      	ldr	r2, [pc, #44]	; (800750c <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 80074de:	6022      	str	r2, [r4, #0]
        : color(col)
 80074e0:	2300      	movs	r3, #0
 80074e2:	2201      	movs	r2, #1
 80074e4:	e9c4 230d 	strd	r2, r3, [r4, #52]	; 0x34
 80074e8:	4a09      	ldr	r2, [pc, #36]	; (8007510 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x3c>)
 80074ea:	63e2      	str	r2, [r4, #60]	; 0x3c
 80074ec:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80074f0:	f8a4 2040 	strh.w	r2, [r4, #64]	; 0x40
 80074f4:	222e      	movs	r2, #46	; 0x2e
 80074f6:	6323      	str	r3, [r4, #48]	; 0x30
 80074f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80074fc:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 8007500:	f8a4 2048 	strh.w	r2, [r4, #72]	; 0x48
 8007504:	64e3      	str	r3, [r4, #76]	; 0x4c
    {
    }
 8007506:	4620      	mov	r0, r4
 8007508:	bd10      	pop	{r4, pc}
 800750a:	bf00      	nop
 800750c:	080345ac 	.word	0x080345ac
 8007510:	0802f844 	.word	0x0802f844

08007514 <_ZN22ReactanceGraphViewBaseC1Ev>:
ReactanceGraphViewBase::ReactanceGraphViewBase() :
 8007514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007518:	ed2d 8b08 	vpush	{d8-d11}
 800751c:	4604      	mov	r4, r0
 800751e:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &ReactanceGraphViewBase::buttonCallbackHandler)
 8007520:	46a3      	mov	fp, r4
 8007522:	2600      	movs	r6, #0
 8007524:	f013 fa88 	bl	801aa38 <_ZN8touchgfx6ScreenC1Ev>
 8007528:	4beb      	ldr	r3, [pc, #940]	; (80078d8 <_ZN22ReactanceGraphViewBaseC1Ev+0x3c4>)
 800752a:	63e6      	str	r6, [r4, #60]	; 0x3c
 800752c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007530:	4631      	mov	r1, r6
 8007532:	2226      	movs	r2, #38	; 0x26
 8007534:	4658      	mov	r0, fp
 8007536:	f024 fecb 	bl	802c2d0 <memset>
 800753a:	4658      	mov	r0, fp
 800753c:	f7fc faf6 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8007540:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007544:	25ff      	movs	r5, #255	; 0xff
 8007546:	4be5      	ldr	r3, [pc, #916]	; (80078dc <_ZN22ReactanceGraphViewBaseC1Ev+0x3c8>)
 8007548:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800754a:	2226      	movs	r2, #38	; 0x26
 800754c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007550:	4631      	mov	r1, r6
 8007552:	f884 5066 	strb.w	r5, [r4, #102]	; 0x66
 8007556:	66a6      	str	r6, [r4, #104]	; 0x68
 8007558:	4650      	mov	r0, sl
 800755a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800755e:	f024 feb7 	bl	802c2d0 <memset>
 8007562:	4650      	mov	r0, sl
 8007564:	f7fc fae2 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8007568:	4bdd      	ldr	r3, [pc, #884]	; (80078e0 <_ZN22ReactanceGraphViewBaseC1Ev+0x3cc>)
 800756a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800756c:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8007570:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007574:	a90c      	add	r1, sp, #48	; 0x30
        : Widget(), bitmap(bmp), alpha(255)
 8007576:	f884 5094 	strb.w	r5, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800757a:	4650      	mov	r0, sl
 800757c:	f010 f831 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007580:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8007584:	f104 05d4 	add.w	r5, r4, #212	; 0xd4
 8007588:	4618      	mov	r0, r3
 800758a:	ee08 3a10 	vmov	s16, r3
 800758e:	f010 f801 	bl	8017594 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : AbstractDataGraph(capacity), xValues(xvalues), yValues(yvalues)
 8007592:	211a      	movs	r1, #26
 8007594:	4628      	mov	r0, r5
 8007596:	f00d fcb9 	bl	8014f0c <_ZN8touchgfx17AbstractDataGraphC1Es>
 800759a:	4bd2      	ldr	r3, [pc, #840]	; (80078e4 <_ZN22ReactanceGraphViewBaseC1Ev+0x3d0>)
 800759c:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
{
public:
    Graph()
        : GraphData(CAPACITY, xValues, yValues)
 80075a0:	f504 7306 	add.w	r3, r4, #536	; 0x218
 80075a4:	f8c4 3210 	str.w	r3, [r4, #528]	; 0x210
 80075a8:	f504 7320 	add.w	r3, r4, #640	; 0x280
        StaticDataGraph::setGraphRangeX(0, capacity - 1);
 80075ac:	2219      	movs	r2, #25
 80075ae:	4631      	mov	r1, r6
        : AbstractDataGraph(capacity), xValues(xvalues), yValues(yvalues)
 80075b0:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
        StaticDataGraph::setGraphRangeX(0, capacity - 1);
 80075b4:	4628      	mov	r0, r5
 80075b6:	f7ff fc32 	bl	8006e1e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 80075ba:	4bcb      	ldr	r3, [pc, #812]	; (80078e8 <_ZN22ReactanceGraphViewBaseC1Ev+0x3d4>)
 80075bc:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 80075c0:	f504 733a 	add.w	r3, r4, #744	; 0x2e8
 80075c4:	4618      	mov	r0, r3
 80075c6:	ee08 3a90 	vmov	s17, r3
 80075ca:	f00d f8a5 	bl	8014718 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 80075ce:	4bc7      	ldr	r3, [pc, #796]	; (80078ec <_ZN22ReactanceGraphViewBaseC1Ev+0x3d8>)
 80075d0:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 80075d4:	f04f 0302 	mov.w	r3, #2
 80075d8:	f884 3316 	strb.w	r3, [r4, #790]	; 0x316
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), painterColor(0)
 80075dc:	f504 7346 	add.w	r3, r4, #792	; 0x318
 80075e0:	4618      	mov	r0, r3
 80075e2:	ee0b 3a10 	vmov	s22, r3
 80075e6:	f7ff fa8b 	bl	8006b00 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80075ea:	4bc1      	ldr	r3, [pc, #772]	; (80078f0 <_ZN22ReactanceGraphViewBaseC1Ev+0x3dc>)
 80075ec:	f8c4 3318 	str.w	r3, [r4, #792]	; 0x318
 80075f0:	f504 734c 	add.w	r3, r4, #816	; 0x330
     *
     * @param  color The color.
     */
    void setColor(colortype color)
    {
        painterColor = color;
 80075f4:	f8c4 632c 	str.w	r6, [r4, #812]	; 0x32c
        : CanvasWidget()
 80075f8:	4618      	mov	r0, r3
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 80075fa:	2701      	movs	r7, #1
 80075fc:	ee09 3a10 	vmov	s18, r3
        : CanvasWidget()
 8007600:	f00d f88a 	bl	8014718 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8007604:	230a      	movs	r3, #10
 8007606:	e9c4 73d9 	strd	r7, r3, [r4, #868]	; 0x364
class GraphElementGridX : public GraphElementGridBase
 800760a:	4bba      	ldr	r3, [pc, #744]	; (80078f4 <_ZN22ReactanceGraphViewBaseC1Ev+0x3e0>)
 800760c:	f8c4 3330 	str.w	r3, [r4, #816]	; 0x330
 8007610:	f504 735d 	add.w	r3, r4, #884	; 0x374
 8007614:	f8c4 6360 	str.w	r6, [r4, #864]	; 0x360
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8007618:	f884 736c 	strb.w	r7, [r4, #876]	; 0x36c
 800761c:	f8c4 6370 	str.w	r6, [r4, #880]	; 0x370
        : CanvasWidget()
 8007620:	4618      	mov	r0, r3
 8007622:	ee09 3a90 	vmov	s19, r3
 8007626:	f00d f877 	bl	8014718 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 800762a:	230a      	movs	r3, #10
 800762c:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
class GraphElementGridY : public GraphElementGridBase
 8007630:	4bb1      	ldr	r3, [pc, #708]	; (80078f8 <_ZN22ReactanceGraphViewBaseC1Ev+0x3e4>)
 8007632:	f8c4 3374 	str.w	r3, [r4, #884]	; 0x374
 8007636:	f504 736e 	add.w	r3, r4, #952	; 0x3b8
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 800763a:	e9c4 67e9 	strd	r6, r7, [r4, #932]	; 0x3a4
 800763e:	f884 73b0 	strb.w	r7, [r4, #944]	; 0x3b0
 8007642:	f8c4 63b4 	str.w	r6, [r4, #948]	; 0x3b4

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 8007646:	4618      	mov	r0, r3
 8007648:	ee0a 3a10 	vmov	s20, r3
 800764c:	f7ff ff42 	bl	80074d4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8007650:	4baa      	ldr	r3, [pc, #680]	; (80078fc <_ZN22ReactanceGraphViewBaseC1Ev+0x3e8>)
 8007652:	f8c4 33b8 	str.w	r3, [r4, #952]	; 0x3b8
 8007656:	f504 6381 	add.w	r3, r4, #1032	; 0x408

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 800765a:	4618      	mov	r0, r3
 800765c:	ee0a 3a90 	vmov	s21, r3
 8007660:	f504 698b 	add.w	r9, r4, #1112	; 0x458
 8007664:	f7ff ff36 	bl	80074d4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8007668:	4ba5      	ldr	r3, [pc, #660]	; (8007900 <_ZN22ReactanceGraphViewBaseC1Ev+0x3ec>)
 800766a:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 800766e:	4648      	mov	r0, r9
 8007670:	f504 6894 	add.w	r8, r4, #1184	; 0x4a0
 8007674:	f7fe ffe4 	bl	8006640 <_ZN8touchgfx8TextAreaC1Ev>
 8007678:	4640      	mov	r0, r8
 800767a:	f7fe ffe1 	bl	8006640 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800767e:	4ba1      	ldr	r3, [pc, #644]	; (8007904 <_ZN22ReactanceGraphViewBaseC1Ev+0x3f0>)
 8007680:	f8c4 34e8 	str.w	r3, [r4, #1256]	; 0x4e8
 8007684:	4ba0      	ldr	r3, [pc, #640]	; (8007908 <_ZN22ReactanceGraphViewBaseC1Ev+0x3f4>)
 8007686:	f8c4 34f0 	str.w	r3, [r4, #1264]	; 0x4f0
 800768a:	f8c4 64f4 	str.w	r6, [r4, #1268]	; 0x4f4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800768e:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8007692:	f504 609f 	add.w	r0, r4, #1272	; 0x4f8
 8007696:	f8c4 44ec 	str.w	r4, [r4, #1260]	; 0x4ec
 800769a:	f010 f919 	bl	80178d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 800769e:	23f0      	movs	r3, #240	; 0xf0
 80076a0:	4632      	mov	r2, r6
 80076a2:	4631      	mov	r1, r6
 80076a4:	9300      	str	r3, [sp, #0]
 80076a6:	4658      	mov	r0, fp
 80076a8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80076ac:	f7fd f984 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80076b0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80076b4:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 80076b6:	4632      	mov	r2, r6
 80076b8:	4631      	mov	r1, r6
 80076ba:	4650      	mov	r0, sl
 80076bc:	f7fc f8c0 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 80076c0:	a90c      	add	r1, sp, #48	; 0x30
 80076c2:	4650      	mov	r0, sl
 80076c4:	f8ad 6030 	strh.w	r6, [sp, #48]	; 0x30
 80076c8:	f00f ff8b 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    ReturnToList2.setXY(130, 180);
 80076cc:	ee18 0a10 	vmov	r0, s16
 80076d0:	22b4      	movs	r2, #180	; 0xb4
 80076d2:	2182      	movs	r1, #130	; 0x82
 80076d4:	f7fc f8b4 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 80076d8:	f04f 0303 	mov.w	r3, #3
 80076dc:	f04f 0204 	mov.w	r2, #4
 80076e0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80076e4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ReturnToList2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID));
 80076e8:	ab0c      	add	r3, sp, #48	; 0x30
 80076ea:	f04f 020a 	mov.w	r2, #10
 80076ee:	ee18 0a10 	vmov	r0, s16
 80076f2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80076f6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80076fa:	9300      	str	r3, [sp, #0]
 80076fc:	aa0a      	add	r2, sp, #40	; 0x28
 80076fe:	ab0b      	add	r3, sp, #44	; 0x2c
 8007700:	a909      	add	r1, sp, #36	; 0x24
 8007702:	f00f fea4 	bl	801744e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8007706:	4b81      	ldr	r3, [pc, #516]	; (800790c <_ZN22ReactanceGraphViewBaseC1Ev+0x3f8>)
 8007708:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
    ReturnToList2.setAction(buttonCallback);
 800770c:	f504 639d 	add.w	r3, r4, #1256	; 0x4e8
 8007710:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    ReactanceGraph.setScaleX(1);
 8007714:	4632      	mov	r2, r6
 8007716:	4639      	mov	r1, r7
 8007718:	4628      	mov	r0, r5
 800771a:	f00d fc71 	bl	8015000 <_ZN8touchgfx15StaticDataGraph9setScaleXEib>
    ReactanceGraph.setScaleY(1000);
 800771e:	4632      	mov	r2, r6
 8007720:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007724:	4628      	mov	r0, r5
 8007726:	f00d fc8f 	bl	8015048 <_ZN8touchgfx15StaticDataGraph9setScaleYEib>
    ReactanceGraph.setPosition(13, 12, 295, 173);
 800772a:	23ad      	movs	r3, #173	; 0xad
 800772c:	9300      	str	r3, [sp, #0]
 800772e:	220c      	movs	r2, #12
 8007730:	f240 1327 	movw	r3, #295	; 0x127
 8007734:	210d      	movs	r1, #13
 8007736:	4628      	mov	r0, r5
 8007738:	f7fd f93e 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
    ReactanceGraph.setGraphAreaMargin(20, 40, 10, 20);
 800773c:	2114      	movs	r1, #20
 800773e:	9100      	str	r1, [sp, #0]
 8007740:	230a      	movs	r3, #10
 8007742:	2228      	movs	r2, #40	; 0x28
 8007744:	4628      	mov	r0, r5
 8007746:	f00d fb92 	bl	8014e6e <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    ReactanceGraph.setGraphAreaPadding(0, 0, 0, 0);
 800774a:	4633      	mov	r3, r6
 800774c:	4632      	mov	r2, r6
 800774e:	4631      	mov	r1, r6
 8007750:	9600      	str	r6, [sp, #0]
 8007752:	4628      	mov	r0, r5
 8007754:	f00d fa8b 	bl	8014c6e <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    ReactanceGraph.setGraphRangeX(0, 32);
 8007758:	4631      	mov	r1, r6
 800775a:	2220      	movs	r2, #32
 800775c:	4628      	mov	r0, r5
 800775e:	f7ff fb5e 	bl	8006e1e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    ReactanceGraph.setGraphRangeY(-50, 250);
 8007762:	22fa      	movs	r2, #250	; 0xfa
 8007764:	f06f 0131 	mvn.w	r1, #49	; 0x31
 8007768:	4628      	mov	r0, r5
 800776a:	f7ff fbe4 	bl	8006f36 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800776e:	463a      	mov	r2, r7
 8007770:	e9d4 10d9 	ldrd	r1, r0, [r4, #868]	; 0x364
 8007774:	f00d fc3c 	bl	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8007778:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 800777c:	f8c4 2360 	str.w	r2, [r4, #864]	; 0x360
        gridInterval = abs(interval);
 8007780:	2204      	movs	r2, #4
    ReactanceGraph.addGraphElement(ReactanceGraphMajorXAxisGrid);
 8007782:	ee19 1a10 	vmov	r1, s18
        dataScale = scale;
 8007786:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
        gridInterval = abs(interval);
 800778a:	f8c4 2368 	str.w	r2, [r4, #872]	; 0x368
        lineWidth = width;
 800778e:	f884 736c 	strb.w	r7, [r4, #876]	; 0x36c
 8007792:	4628      	mov	r0, r5
 8007794:	f00d fa76 	bl	8014c84 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8007798:	e9d4 10ea 	ldrd	r1, r0, [r4, #936]	; 0x3a8
 800779c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80077a0:	f00d fc26 	bl	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 80077a4:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        dataScale = scale;
 80077a8:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
        color = newColor;
 80077ac:	f8c4 23a4 	str.w	r2, [r4, #932]	; 0x3a4
        gridInterval = abs(interval);
 80077b0:	f246 12a8 	movw	r2, #25000	; 0x61a8
    ReactanceGraph.addGraphElement(ReactanceGraphMajorYAxisGrid);
 80077b4:	ee19 1a90 	vmov	r1, s19
 80077b8:	f8c4 23ac 	str.w	r2, [r4, #940]	; 0x3ac
        lineWidth = width;
 80077bc:	f884 73b0 	strb.w	r7, [r4, #944]	; 0x3b0
 80077c0:	4628      	mov	r0, r5
        dataScale = scale;
 80077c2:	f8c4 63a8 	str.w	r6, [r4, #936]	; 0x3a8
 80077c6:	f00d fa5d 	bl	8014c84 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80077ca:	463a      	mov	r2, r7
 80077cc:	e9d4 10fb 	ldrd	r1, r0, [r4, #1004]	; 0x3ec
 80077d0:	f00d fc0e 	bl	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80077d4:	2305      	movs	r3, #5
        dataScale = scale;
 80077d6:	f8c4 73ec 	str.w	r7, [r4, #1004]	; 0x3ec
        labelInterval = abs(interval);
 80077da:	f8c4 33f0 	str.w	r3, [r4, #1008]	; 0x3f0
        color = newColor;
 80077de:	4f4c      	ldr	r7, [pc, #304]	; (8007910 <_ZN22ReactanceGraphViewBaseC1Ev+0x3fc>)
 80077e0:	f8c4 73e8 	str.w	r7, [r4, #1000]	; 0x3e8
class TypedText
 80077e4:	f04f 0303 	mov.w	r3, #3
 80077e8:	f8a4 33f8 	strh.w	r3, [r4, #1016]	; 0x3f8
    ReactanceGraph.addBottomElement(ReactanceGraphMajorXAxisLabel);
 80077ec:	ee1a 1a10 	vmov	r1, s20
 80077f0:	4628      	mov	r0, r5
 80077f2:	f00d fa6b 	bl	8014ccc <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80077f6:	f8d4 143c 	ldr.w	r1, [r4, #1084]	; 0x43c
 80077fa:	f8d4 0440 	ldr.w	r0, [r4, #1088]	; 0x440
 80077fe:	4632      	mov	r2, r6
 8007800:	f00d fbf6 	bl	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8007804:	f246 12a8 	movw	r2, #25000	; 0x61a8
        labelDecimals = decimals;
 8007808:	f04f 0303 	mov.w	r3, #3
        labelInterval = abs(interval);
 800780c:	f8c4 2440 	str.w	r2, [r4, #1088]	; 0x440
 8007810:	f04f 0202 	mov.w	r2, #2
 8007814:	f8a4 2448 	strh.w	r2, [r4, #1096]	; 0x448
    ReactanceGraph.addLeftElement(ReactanceGraphMajorYAxisLabel);
 8007818:	ee1a 1a90 	vmov	r1, s21
        labelDecimals = decimals;
 800781c:	f8a4 344e 	strh.w	r3, [r4, #1102]	; 0x44e
 8007820:	4628      	mov	r0, r5
        dataScale = scale;
 8007822:	f8c4 643c 	str.w	r6, [r4, #1084]	; 0x43c
 8007826:	f8c4 7438 	str.w	r7, [r4, #1080]	; 0x438
 800782a:	f00d fa3d 	bl	8014ca8 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 800782e:	4b39      	ldr	r3, [pc, #228]	; (8007914 <_ZN22ReactanceGraphViewBaseC1Ev+0x400>)
 8007830:	f8c4 332c 	str.w	r3, [r4, #812]	; 0x32c
    ReactanceGraphLine1.setPainter(ReactanceGraphLine1Painter);
 8007834:	ee1b 1a10 	vmov	r1, s22
 8007838:	ee18 0a90 	vmov	r0, s17
 800783c:	f00c fe68 	bl	8014510 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 8007840:	f04f 0303 	mov.w	r3, #3
    ReactanceGraph.addGraphElement(ReactanceGraphLine1);
 8007844:	ee18 1a90 	vmov	r1, s17
 8007848:	f884 3316 	strb.w	r3, [r4, #790]	; 0x316
 800784c:	4628      	mov	r0, r5
 800784e:	f00d fa19 	bl	8014c84 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        const float fs = f * scale;
 8007852:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007856:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8007918 <_ZN22ReactanceGraphViewBaseC1Ev+0x404>
 800785a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800785e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007862:	eef4 7ac7 	vcmpe.f32	s15, s14
 8007866:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800786a:	f2c0 8568 	blt.w	800833e <_ZN22ReactanceGraphViewBaseC1Ev+0xe2a>
            return int(fs + 0.5f);
 800786e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007872:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007876:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800787a:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800787e:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007882:	ed9f 7a26 	vldr	s14, [pc, #152]	; 800791c <_ZN22ReactanceGraphViewBaseC1Ev+0x408>
 8007886:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800788a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800788e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007896:	f2c0 8567 	blt.w	8008368 <_ZN22ReactanceGraphViewBaseC1Ev+0xe54>
            return int(fs + 0.5f);
 800789a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800789e:	ee77 7a87 	vadd.f32	s15, s15, s14
 80078a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80078a6:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80078aa:	4628      	mov	r0, r5
 80078ac:	f00d fbf0 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80078b0:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 80078b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        if (fs >= 0)
 80078b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80078bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80078c0:	f2c0 8567 	blt.w	8008392 <_ZN22ReactanceGraphViewBaseC1Ev+0xe7e>
            return int(fs + 0.5f);
 80078c4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80078c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80078cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80078d0:	ee17 1a90 	vmov	r1, s15
 80078d4:	e03a      	b.n	800794c <_ZN22ReactanceGraphViewBaseC1Ev+0x438>
 80078d6:	bf00      	nop
 80078d8:	08031570 	.word	0x08031570
 80078dc:	08034824 	.word	0x08034824
 80078e0:	08034a04 	.word	0x08034a04
 80078e4:	08033ff0 	.word	0x08033ff0
 80078e8:	0803141c 	.word	0x0803141c
 80078ec:	080343e0 	.word	0x080343e0
 80078f0:	08033ce4 	.word	0x08033ce4
 80078f4:	080312a4 	.word	0x080312a4
 80078f8:	08031360 	.word	0x08031360
 80078fc:	08034464 	.word	0x08034464
 8007900:	08034508 	.word	0x08034508
 8007904:	08031558 	.word	0x08031558
 8007908:	08007435 	.word	0x08007435
 800790c:	0016000f 	.word	0x0016000f
 8007910:	ff001a36 	.word	0xff001a36
 8007914:	ff1497c5 	.word	0xff1497c5
 8007918:	00000000 	.word	0x00000000
 800791c:	c18d3d71 	.word	0xc18d3d71
 8007920:	430dc4dd 	.word	0x430dc4dd
 8007924:	4356a354 	.word	0x4356a354
 8007928:	42d652f2 	.word	0x42d652f2
 800792c:	430a97cf 	.word	0x430a97cf
 8007930:	432571aa 	.word	0x432571aa
 8007934:	3f2a7efa 	.word	0x3f2a7efa
 8007938:	c19428f6 	.word	0xc19428f6
 800793c:	42f3e1cb 	.word	0x42f3e1cb
 8007940:	42c08dd3 	.word	0x42c08dd3
 8007944:	42abd4fe 	.word	0x42abd4fe
 8007948:	43642419 	.word	0x43642419
        const float fs = f * scale;
 800794c:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007950:	ed1f 7a0d 	vldr	s14, [pc, #-52]	; 8007920 <_ZN22ReactanceGraphViewBaseC1Ev+0x40c>
 8007954:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007958:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800795c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007960:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007964:	f2c0 852a 	blt.w	80083bc <_ZN22ReactanceGraphViewBaseC1Ev+0xea8>
            return int(fs + 0.5f);
 8007968:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800796c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007970:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007974:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007978:	4628      	mov	r0, r5
 800797a:	f00d fb89 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800797e:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007982:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007986:	ee77 7aa7 	vadd.f32	s15, s15, s15
        if (fs >= 0)
 800798a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800798e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007992:	f2c0 8528 	blt.w	80083e6 <_ZN22ReactanceGraphViewBaseC1Ev+0xed2>
            return int(fs + 0.5f);
 8007996:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800799a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800799e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80079a2:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80079a6:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 80079aa:	ed1f 7a22 	vldr	s14, [pc, #-136]	; 8007924 <_ZN22ReactanceGraphViewBaseC1Ev+0x410>
 80079ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80079b2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80079b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80079ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80079be:	f2c0 8527 	blt.w	8008410 <_ZN22ReactanceGraphViewBaseC1Ev+0xefc>
            return int(fs + 0.5f);
 80079c2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80079c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80079ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80079ce:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80079d2:	4628      	mov	r0, r5
 80079d4:	f00d fb5c 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80079d8:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 80079dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80079e0:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 80079e4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80079e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80079ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80079f0:	f2c0 8523 	blt.w	800843a <_ZN22ReactanceGraphViewBaseC1Ev+0xf26>
            return int(fs + 0.5f);
 80079f4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80079f8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80079fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a00:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007a04:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007a08:	ed1f 7a39 	vldr	s14, [pc, #-228]	; 8007928 <_ZN22ReactanceGraphViewBaseC1Ev+0x414>
 8007a0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a10:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007a14:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a1c:	f2c0 8522 	blt.w	8008464 <_ZN22ReactanceGraphViewBaseC1Ev+0xf50>
            return int(fs + 0.5f);
 8007a20:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007a24:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007a28:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a2c:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007a30:	4628      	mov	r0, r5
 8007a32:	f00d fb2d 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007a36:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007a3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a3e:	eeb1 7a04 	vmov.f32	s14, #20	; 0x40a00000  5.0
 8007a42:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007a46:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a4e:	f2c0 851e 	blt.w	800848e <_ZN22ReactanceGraphViewBaseC1Ev+0xf7a>
            return int(fs + 0.5f);
 8007a52:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007a56:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007a5a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a5e:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007a62:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007a66:	ed1f 7a4f 	vldr	s14, [pc, #-316]	; 800792c <_ZN22ReactanceGraphViewBaseC1Ev+0x418>
 8007a6a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a6e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007a72:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a7a:	f2c0 851d 	blt.w	80084b8 <_ZN22ReactanceGraphViewBaseC1Ev+0xfa4>
            return int(fs + 0.5f);
 8007a7e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007a82:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007a86:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a8a:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007a8e:	4628      	mov	r0, r5
 8007a90:	f00d fafe 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007a94:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007a98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a9c:	eeb1 7a08 	vmov.f32	s14, #24	; 0x40c00000  6.0
 8007aa0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007aa4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007aa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007aac:	f2c0 8519 	blt.w	80084e2 <_ZN22ReactanceGraphViewBaseC1Ev+0xfce>
            return int(fs + 0.5f);
 8007ab0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007ab4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007ab8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007abc:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007ac0:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007ac4:	ed1f 7a66 	vldr	s14, [pc, #-408]	; 8007930 <_ZN22ReactanceGraphViewBaseC1Ev+0x41c>
 8007ac8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007acc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ad0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ad4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ad8:	f2c0 8518 	blt.w	800850c <_ZN22ReactanceGraphViewBaseC1Ev+0xff8>
            return int(fs + 0.5f);
 8007adc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007ae0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007ae4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ae8:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007aec:	4628      	mov	r0, r5
 8007aee:	f00d facf 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007af2:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007af6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007afa:	eeb1 7a0c 	vmov.f32	s14, #28	; 0x40e00000  7.0
 8007afe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007b02:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007b06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b0a:	f2c0 8514 	blt.w	8008536 <_ZN22ReactanceGraphViewBaseC1Ev+0x1022>
            return int(fs + 0.5f);
 8007b0e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007b12:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007b16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b1a:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007b1e:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007b22:	ed1f 7a7c 	vldr	s14, [pc, #-496]	; 8007934 <_ZN22ReactanceGraphViewBaseC1Ev+0x420>
 8007b26:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007b2a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007b2e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007b32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b36:	f2c0 8513 	blt.w	8008560 <_ZN22ReactanceGraphViewBaseC1Ev+0x104c>
            return int(fs + 0.5f);
 8007b3a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007b3e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007b42:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b46:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007b4a:	4628      	mov	r0, r5
 8007b4c:	f00d faa0 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007b50:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007b54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007b58:	eeb2 7a02 	vmov.f32	s14, #34	; 0x41100000  9.0
 8007b5c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007b60:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007b64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b68:	f2c0 850f 	blt.w	800858a <_ZN22ReactanceGraphViewBaseC1Ev+0x1076>
            return int(fs + 0.5f);
 8007b6c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007b70:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007b74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b78:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007b7c:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007b80:	ed1f 7a93 	vldr	s14, [pc, #-588]	; 8007938 <_ZN22ReactanceGraphViewBaseC1Ev+0x424>
 8007b84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007b88:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007b8c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007b90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b94:	f2c0 850e 	blt.w	80085b4 <_ZN22ReactanceGraphViewBaseC1Ev+0x10a0>
            return int(fs + 0.5f);
 8007b98:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007b9c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007ba0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ba4:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007ba8:	4628      	mov	r0, r5
 8007baa:	f00d fa71 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007bae:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007bb2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007bb6:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8007bba:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007bbe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007bc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007bc6:	f2c0 850a 	blt.w	80085de <_ZN22ReactanceGraphViewBaseC1Ev+0x10ca>
            return int(fs + 0.5f);
 8007bca:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007bce:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007bd2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007bd6:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007bda:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007bde:	ed1f 7aa9 	vldr	s14, [pc, #-676]	; 800793c <_ZN22ReactanceGraphViewBaseC1Ev+0x428>
 8007be2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007be6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007bea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007bee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007bf2:	f2c0 8509 	blt.w	8008608 <_ZN22ReactanceGraphViewBaseC1Ev+0x10f4>
            return int(fs + 0.5f);
 8007bf6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007bfa:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007bfe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c02:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007c06:	4628      	mov	r0, r5
 8007c08:	f00d fa42 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007c0c:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007c10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c14:	eeb2 7a06 	vmov.f32	s14, #38	; 0x41300000  11.0
 8007c18:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007c1c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007c20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c24:	f2c0 8505 	blt.w	8008632 <_ZN22ReactanceGraphViewBaseC1Ev+0x111e>
            return int(fs + 0.5f);
 8007c28:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007c2c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007c30:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c34:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007c38:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007c3c:	ed1f 7ac0 	vldr	s14, [pc, #-768]	; 8007940 <_ZN22ReactanceGraphViewBaseC1Ev+0x42c>
 8007c40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c44:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007c48:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007c4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c50:	f2c0 8504 	blt.w	800865c <_ZN22ReactanceGraphViewBaseC1Ev+0x1148>
            return int(fs + 0.5f);
 8007c54:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007c58:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007c5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c60:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007c64:	4628      	mov	r0, r5
 8007c66:	f00d fa13 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007c6a:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007c6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c72:	eeb2 7a08 	vmov.f32	s14, #40	; 0x41400000  12.0
 8007c76:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007c7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007c7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c82:	f2c0 8503 	blt.w	800868c <_ZN22ReactanceGraphViewBaseC1Ev+0x1178>
            return int(fs + 0.5f);
 8007c86:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007c8a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007c8e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c92:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007c96:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007c9a:	ed1f 7ad6 	vldr	s14, [pc, #-856]	; 8007944 <_ZN22ReactanceGraphViewBaseC1Ev+0x430>
 8007c9e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ca2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ca6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007cae:	f2c0 8502 	blt.w	80086b6 <_ZN22ReactanceGraphViewBaseC1Ev+0x11a2>
            return int(fs + 0.5f);
 8007cb2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007cb6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007cba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007cbe:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007cc2:	4628      	mov	r0, r5
 8007cc4:	f00d f9e4 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007cc8:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007ccc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007cd0:	eeb2 7a0c 	vmov.f32	s14, #44	; 0x41600000  14.0
 8007cd4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007cd8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007cdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ce0:	f2c0 84fe 	blt.w	80086e0 <_ZN22ReactanceGraphViewBaseC1Ev+0x11cc>
            return int(fs + 0.5f);
 8007ce4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007ce8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007cec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007cf0:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007cf4:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007cf8:	ed1f 7aed 	vldr	s14, [pc, #-948]	; 8007948 <_ZN22ReactanceGraphViewBaseC1Ev+0x434>
 8007cfc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d00:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d04:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d0c:	f2c0 84fd 	blt.w	800870a <_ZN22ReactanceGraphViewBaseC1Ev+0x11f6>
            return int(fs + 0.5f);
 8007d10:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007d14:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d1c:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007d20:	4628      	mov	r0, r5
 8007d22:	f00d f9b5 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007d26:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007d2a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d2e:	eeb2 7a0e 	vmov.f32	s14, #46	; 0x41700000  15.0
 8007d32:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d36:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d3e:	f2c0 84f9 	blt.w	8008734 <_ZN22ReactanceGraphViewBaseC1Ev+0x1220>
            return int(fs + 0.5f);
 8007d42:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007d46:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d4a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d4e:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007d52:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007d56:	ed9f 7af1 	vldr	s14, [pc, #964]	; 800811c <_ZN22ReactanceGraphViewBaseC1Ev+0xc08>
 8007d5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d5e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d62:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d6a:	f2c0 84f8 	blt.w	800875e <_ZN22ReactanceGraphViewBaseC1Ev+0x124a>
            return int(fs + 0.5f);
 8007d6e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007d72:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d7a:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007d7e:	4628      	mov	r0, r5
 8007d80:	f00d f986 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007d84:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007d88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d8c:	eeb3 7a00 	vmov.f32	s14, #48	; 0x41800000  16.0
 8007d90:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d94:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d9c:	f2c0 84f4 	blt.w	8008788 <_ZN22ReactanceGraphViewBaseC1Ev+0x1274>
            return int(fs + 0.5f);
 8007da0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007da4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007da8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007dac:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007db0:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007db4:	ed9f 7ada 	vldr	s14, [pc, #872]	; 8008120 <_ZN22ReactanceGraphViewBaseC1Ev+0xc0c>
 8007db8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007dbc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007dc0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007dc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007dc8:	f2c0 84f3 	blt.w	80087b2 <_ZN22ReactanceGraphViewBaseC1Ev+0x129e>
            return int(fs + 0.5f);
 8007dcc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007dd0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007dd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007dd8:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007ddc:	4628      	mov	r0, r5
 8007dde:	f00d f957 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007de2:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007de6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007dea:	eeb3 7a01 	vmov.f32	s14, #49	; 0x41880000  17.0
 8007dee:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007df2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007df6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007dfa:	f2c0 84ef 	blt.w	80087dc <_ZN22ReactanceGraphViewBaseC1Ev+0x12c8>
            return int(fs + 0.5f);
 8007dfe:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007e02:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e0a:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007e0e:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007e12:	ed9f 7ac4 	vldr	s14, [pc, #784]	; 8008124 <_ZN22ReactanceGraphViewBaseC1Ev+0xc10>
 8007e16:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007e1a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007e1e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007e22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e26:	f2c0 84ee 	blt.w	8008806 <_ZN22ReactanceGraphViewBaseC1Ev+0x12f2>
            return int(fs + 0.5f);
 8007e2a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007e2e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e36:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007e3a:	4628      	mov	r0, r5
 8007e3c:	f00d f928 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007e40:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007e44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007e48:	eeb3 7a02 	vmov.f32	s14, #50	; 0x41900000  18.0
 8007e4c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007e50:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007e54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e58:	f2c0 84ea 	blt.w	8008830 <_ZN22ReactanceGraphViewBaseC1Ev+0x131c>
            return int(fs + 0.5f);
 8007e5c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007e60:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e64:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e68:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007e6c:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007e70:	ed9f 7aad 	vldr	s14, [pc, #692]	; 8008128 <_ZN22ReactanceGraphViewBaseC1Ev+0xc14>
 8007e74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007e78:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007e7c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007e80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e84:	f2c0 84e9 	blt.w	800885a <_ZN22ReactanceGraphViewBaseC1Ev+0x1346>
            return int(fs + 0.5f);
 8007e88:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007e8c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e90:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e94:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007e98:	4628      	mov	r0, r5
 8007e9a:	f00d f8f9 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007e9e:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007ea2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ea6:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 8007eaa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007eae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007eb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007eb6:	f2c0 84e5 	blt.w	8008884 <_ZN22ReactanceGraphViewBaseC1Ev+0x1370>
            return int(fs + 0.5f);
 8007eba:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007ebe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007ec2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ec6:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007eca:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007ece:	ed9f 7a97 	vldr	s14, [pc, #604]	; 800812c <_ZN22ReactanceGraphViewBaseC1Ev+0xc18>
 8007ed2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ed6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007eda:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ede:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ee2:	f2c0 84e4 	blt.w	80088ae <_ZN22ReactanceGraphViewBaseC1Ev+0x139a>
            return int(fs + 0.5f);
 8007ee6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007eea:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007eee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ef2:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007ef6:	4628      	mov	r0, r5
 8007ef8:	f00d f8ca 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007efc:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007f00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f04:	eeb3 7a05 	vmov.f32	s14, #53	; 0x41a80000  21.0
 8007f08:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f0c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f14:	f2c0 84e0 	blt.w	80088d8 <_ZN22ReactanceGraphViewBaseC1Ev+0x13c4>
            return int(fs + 0.5f);
 8007f18:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007f1c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007f20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f24:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007f28:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007f2c:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8008130 <_ZN22ReactanceGraphViewBaseC1Ev+0xc1c>
 8007f30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f34:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f38:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f40:	f2c0 84df 	blt.w	8008902 <_ZN22ReactanceGraphViewBaseC1Ev+0x13ee>
            return int(fs + 0.5f);
 8007f44:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007f48:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007f4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f50:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007f54:	4628      	mov	r0, r5
 8007f56:	f00d f89b 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007f5a:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007f5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f62:	eeb3 7a06 	vmov.f32	s14, #54	; 0x41b00000  22.0
 8007f66:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f6a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f72:	f2c0 84db 	blt.w	800892c <_ZN22ReactanceGraphViewBaseC1Ev+0x1418>
            return int(fs + 0.5f);
 8007f76:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007f7a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007f7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f82:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007f86:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007f8a:	ed9f 7a6a 	vldr	s14, [pc, #424]	; 8008134 <_ZN22ReactanceGraphViewBaseC1Ev+0xc20>
 8007f8e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f92:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f96:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f9e:	f2c0 84da 	blt.w	8008956 <_ZN22ReactanceGraphViewBaseC1Ev+0x1442>
            return int(fs + 0.5f);
 8007fa2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007fa6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007faa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007fae:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007fb2:	4628      	mov	r0, r5
 8007fb4:	f00d f86c 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007fb8:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007fbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007fc0:	eeb3 7a07 	vmov.f32	s14, #55	; 0x41b80000  23.0
 8007fc4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007fc8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007fcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007fd0:	f2c0 84d6 	blt.w	8008980 <_ZN22ReactanceGraphViewBaseC1Ev+0x146c>
            return int(fs + 0.5f);
 8007fd4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007fd8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007fdc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007fe0:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007fe4:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007fe8:	ed9f 7a53 	vldr	s14, [pc, #332]	; 8008138 <_ZN22ReactanceGraphViewBaseC1Ev+0xc24>
 8007fec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ff0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ff4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ff8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ffc:	f2c0 84d5 	blt.w	80089aa <_ZN22ReactanceGraphViewBaseC1Ev+0x1496>
            return int(fs + 0.5f);
 8008000:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008004:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008008:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800800c:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8008010:	4628      	mov	r0, r5
 8008012:	f00d f83d 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8008016:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 800801a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800801e:	eeb3 7a09 	vmov.f32	s14, #57	; 0x41c80000  25.0
 8008022:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008026:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800802a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800802e:	f2c0 84d1 	blt.w	80089d4 <_ZN22ReactanceGraphViewBaseC1Ev+0x14c0>
            return int(fs + 0.5f);
 8008032:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008036:	ee77 7a87 	vadd.f32	s15, s15, s14
 800803a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800803e:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8008042:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8008046:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 800813c <_ZN22ReactanceGraphViewBaseC1Ev+0xc28>
 800804a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800804e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008052:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008056:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800805a:	f2c0 84d0 	blt.w	80089fe <_ZN22ReactanceGraphViewBaseC1Ev+0x14ea>
            return int(fs + 0.5f);
 800805e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008062:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008066:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800806a:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800806e:	4628      	mov	r0, r5
 8008070:	f00d f80e 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8008074:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8008078:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800807c:	eeb3 7a0a 	vmov.f32	s14, #58	; 0x41d00000  26.0
 8008080:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008084:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008088:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800808c:	f2c0 84cc 	blt.w	8008a28 <_ZN22ReactanceGraphViewBaseC1Ev+0x1514>
            return int(fs + 0.5f);
 8008090:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008094:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008098:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800809c:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80080a0:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 80080a4:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8008140 <_ZN22ReactanceGraphViewBaseC1Ev+0xc2c>
 80080a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80080ac:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80080b0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80080b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80080b8:	f2c0 84cb 	blt.w	8008a52 <_ZN22ReactanceGraphViewBaseC1Ev+0x153e>
            return int(fs + 0.5f);
 80080bc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80080c0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80080c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80080c8:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80080cc:	4628      	mov	r0, r5
 80080ce:	f00c ffdf 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80080d2:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 80080d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80080da:	eeb3 7a0b 	vmov.f32	s14, #59	; 0x41d80000  27.0
 80080de:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80080e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80080e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80080ea:	f2c0 84c7 	blt.w	8008a7c <_ZN22ReactanceGraphViewBaseC1Ev+0x1568>
            return int(fs + 0.5f);
 80080ee:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80080f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80080f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80080fa:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80080fe:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8008102:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8008144 <_ZN22ReactanceGraphViewBaseC1Ev+0xc30>
 8008106:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800810a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800810e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008112:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008116:	f2c0 84c6 	blt.w	8008aa6 <_ZN22ReactanceGraphViewBaseC1Ev+0x1592>
 800811a:	e01b      	b.n	8008154 <_ZN22ReactanceGraphViewBaseC1Ev+0xc40>
 800811c:	43392e14 	.word	0x43392e14
 8008120:	41dcc49c 	.word	0x41dcc49c
 8008124:	428b9fbe 	.word	0x428b9fbe
 8008128:	42abe1cb 	.word	0x42abe1cb
 800812c:	c19a76c9 	.word	0xc19a76c9
 8008130:	4295deb8 	.word	0x4295deb8
 8008134:	435d48b4 	.word	0x435d48b4
 8008138:	430ccf9e 	.word	0x430ccf9e
 800813c:	42d9851f 	.word	0x42d9851f
 8008140:	4335076d 	.word	0x4335076d
 8008144:	42737df4 	.word	0x42737df4
 8008148:	c234cdd3 	.word	0xc234cdd3
 800814c:	42a58b44 	.word	0x42a58b44
 8008150:	42f69eb8 	.word	0x42f69eb8
            return int(fs + 0.5f);
 8008154:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008158:	ee77 7a87 	vadd.f32	s15, s15, s14
 800815c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008160:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8008164:	4628      	mov	r0, r5
 8008166:	f00c ff93 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800816a:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 800816e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008172:	eeb3 7a0c 	vmov.f32	s14, #60	; 0x41e00000  28.0
 8008176:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800817a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800817e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008182:	f2c0 84a5 	blt.w	8008ad0 <_ZN22ReactanceGraphViewBaseC1Ev+0x15bc>
            return int(fs + 0.5f);
 8008186:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800818a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800818e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008192:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8008196:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 800819a:	ed1f 7a15 	vldr	s14, [pc, #-84]	; 8008148 <_ZN22ReactanceGraphViewBaseC1Ev+0xc34>
 800819e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80081a2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80081a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80081aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80081ae:	f2c0 84a4 	blt.w	8008afa <_ZN22ReactanceGraphViewBaseC1Ev+0x15e6>
            return int(fs + 0.5f);
 80081b2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80081b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80081ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80081be:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80081c2:	4628      	mov	r0, r5
 80081c4:	f00c ff64 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80081c8:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 80081cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80081d0:	eeb3 7a0e 	vmov.f32	s14, #62	; 0x41f00000  30.0
 80081d4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80081d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80081dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80081e0:	f2c0 84a0 	blt.w	8008b24 <_ZN22ReactanceGraphViewBaseC1Ev+0x1610>
            return int(fs + 0.5f);
 80081e4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80081e8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80081ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80081f0:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80081f4:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 80081f8:	ed1f 7a2c 	vldr	s14, [pc, #-176]	; 800814c <_ZN22ReactanceGraphViewBaseC1Ev+0xc38>
 80081fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008200:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008204:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008208:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800820c:	f2c0 849f 	blt.w	8008b4e <_ZN22ReactanceGraphViewBaseC1Ev+0x163a>
            return int(fs + 0.5f);
 8008210:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008214:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008218:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800821c:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8008220:	4628      	mov	r0, r5
 8008222:	f00c ff35 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8008226:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 800822a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800822e:	eeb3 7a0f 	vmov.f32	s14, #63	; 0x41f80000  31.0
 8008232:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008236:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800823a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800823e:	f2c0 849b 	blt.w	8008b78 <_ZN22ReactanceGraphViewBaseC1Ev+0x1664>
            return int(fs + 0.5f);
 8008242:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008246:	ee77 7a87 	vadd.f32	s15, s15, s14
 800824a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800824e:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8008252:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8008256:	ed1f 7a42 	vldr	s14, [pc, #-264]	; 8008150 <_ZN22ReactanceGraphViewBaseC1Ev+0xc3c>
 800825a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800825e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008262:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008266:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800826a:	f2c0 849a 	blt.w	8008ba2 <_ZN22ReactanceGraphViewBaseC1Ev+0x168e>
            return int(fs + 0.5f);
 800826e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008272:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008276:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800827a:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800827e:	4628      	mov	r0, r5
 8008280:	f00c ff06 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
    textArea1.setXY(243, 185);
 8008284:	22b9      	movs	r2, #185	; 0xb9
 8008286:	4648      	mov	r0, r9
 8008288:	21f3      	movs	r1, #243	; 0xf3
 800828a:	f7fb fad9 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 800828e:	ae04      	add	r6, sp, #16
        linespace = space;
 8008290:	2700      	movs	r7, #0
        this->color = color;
 8008292:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008296:	f8c4 3488 	str.w	r3, [r4, #1160]	; 0x488
        boundingArea = calculateBoundingArea();
 800829a:	4649      	mov	r1, r9
 800829c:	4630      	mov	r0, r6
        linespace = space;
 800829e:	f8a4 748c 	strh.w	r7, [r4, #1164]	; 0x48c
        boundingArea = calculateBoundingArea();
 80082a2:	f00e fad5 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80082a6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80082aa:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 80082ae:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        : typedTextId(id)
 80082b2:	4bf5      	ldr	r3, [pc, #980]	; (8008688 <_ZN22ReactanceGraphViewBaseC1Ev+0x1174>)
 80082b4:	930c      	str	r3, [sp, #48]	; 0x30
 80082b6:	2201      	movs	r2, #1
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W9FP));
 80082b8:	a90c      	add	r1, sp, #48	; 0x30
 80082ba:	4648      	mov	r0, r9
 80082bc:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80082c0:	f00e fe0c 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea1_1.setXY(13, 12);
 80082c4:	220c      	movs	r2, #12
 80082c6:	4640      	mov	r0, r8
 80082c8:	210d      	movs	r1, #13
 80082ca:	f7fb fab9 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80082ce:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80082d2:	f8c4 34d0 	str.w	r3, [r4, #1232]	; 0x4d0
        boundingArea = calculateBoundingArea();
 80082d6:	4641      	mov	r1, r8
 80082d8:	4630      	mov	r0, r6
        linespace = space;
 80082da:	f8a4 74d4 	strh.w	r7, [r4, #1236]	; 0x4d4
        boundingArea = calculateBoundingArea();
 80082de:	f00e fab7 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80082e2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80082e6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80082ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80082ee:	4be6      	ldr	r3, [pc, #920]	; (8008688 <_ZN22ReactanceGraphViewBaseC1Ev+0x1174>)
 80082f0:	930c      	str	r3, [sp, #48]	; 0x30
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9KIH));
 80082f2:	a90c      	add	r1, sp, #48	; 0x30
 80082f4:	4640      	mov	r0, r8
 80082f6:	f8ad 7034 	strh.w	r7, [sp, #52]	; 0x34
 80082fa:	f00e fdef 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80082fe:	1d20      	adds	r0, r4, #4
 8008300:	4659      	mov	r1, fp
 8008302:	9003      	str	r0, [sp, #12]
 8008304:	f009 fdaa 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008308:	9803      	ldr	r0, [sp, #12]
 800830a:	4651      	mov	r1, sl
 800830c:	f009 fda6 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008310:	ee18 1a10 	vmov	r1, s16
 8008314:	9803      	ldr	r0, [sp, #12]
 8008316:	f009 fda1 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800831a:	9803      	ldr	r0, [sp, #12]
 800831c:	4629      	mov	r1, r5
 800831e:	f009 fd9d 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008322:	9803      	ldr	r0, [sp, #12]
 8008324:	4649      	mov	r1, r9
 8008326:	f009 fd99 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800832a:	9803      	ldr	r0, [sp, #12]
 800832c:	4641      	mov	r1, r8
 800832e:	f009 fd95 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008332:	4620      	mov	r0, r4
 8008334:	b00f      	add	sp, #60	; 0x3c
 8008336:	ecbd 8b08 	vpop	{d8-d11}
 800833a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 800833e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008342:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008346:	ee17 3a10 	vmov	r3, s14
 800834a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800834e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008352:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008356:	1e59      	subs	r1, r3, #1
 8008358:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800835c:	ee17 3a90 	vmov	r3, s15
 8008360:	440b      	add	r3, r1
 8008362:	4619      	mov	r1, r3
 8008364:	f7ff ba8b 	b.w	800787e <_ZN22ReactanceGraphViewBaseC1Ev+0x36a>
 8008368:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800836c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008370:	ee17 3a10 	vmov	r3, s14
 8008374:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008378:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800837c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008380:	1e5a      	subs	r2, r3, #1
 8008382:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008386:	ee17 3a90 	vmov	r3, s15
 800838a:	4413      	add	r3, r2
 800838c:	461a      	mov	r2, r3
 800838e:	f7ff ba8c 	b.w	80078aa <_ZN22ReactanceGraphViewBaseC1Ev+0x396>
 8008392:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008396:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800839a:	ee17 3a10 	vmov	r3, s14
 800839e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80083a2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80083a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80083aa:	1e59      	subs	r1, r3, #1
 80083ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80083b0:	ee17 3a90 	vmov	r3, s15
 80083b4:	440b      	add	r3, r1
 80083b6:	4619      	mov	r1, r3
 80083b8:	f7ff bac8 	b.w	800794c <_ZN22ReactanceGraphViewBaseC1Ev+0x438>
 80083bc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80083c0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80083c4:	ee17 3a10 	vmov	r3, s14
 80083c8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80083cc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80083d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80083d4:	1e5a      	subs	r2, r3, #1
 80083d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80083da:	ee17 3a90 	vmov	r3, s15
 80083de:	4413      	add	r3, r2
 80083e0:	461a      	mov	r2, r3
 80083e2:	f7ff bac9 	b.w	8007978 <_ZN22ReactanceGraphViewBaseC1Ev+0x464>
 80083e6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80083ea:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80083ee:	ee17 3a10 	vmov	r3, s14
 80083f2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80083f6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80083fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80083fe:	1e59      	subs	r1, r3, #1
 8008400:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008404:	ee17 3a90 	vmov	r3, s15
 8008408:	440b      	add	r3, r1
 800840a:	4619      	mov	r1, r3
 800840c:	f7ff bacb 	b.w	80079a6 <_ZN22ReactanceGraphViewBaseC1Ev+0x492>
 8008410:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008414:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008418:	ee17 3a10 	vmov	r3, s14
 800841c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008420:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008424:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008428:	1e5a      	subs	r2, r3, #1
 800842a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800842e:	ee17 3a90 	vmov	r3, s15
 8008432:	4413      	add	r3, r2
 8008434:	461a      	mov	r2, r3
 8008436:	f7ff bacc 	b.w	80079d2 <_ZN22ReactanceGraphViewBaseC1Ev+0x4be>
 800843a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800843e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008442:	ee17 3a10 	vmov	r3, s14
 8008446:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800844a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800844e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008452:	1e59      	subs	r1, r3, #1
 8008454:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008458:	ee17 3a90 	vmov	r3, s15
 800845c:	440b      	add	r3, r1
 800845e:	4619      	mov	r1, r3
 8008460:	f7ff bad0 	b.w	8007a04 <_ZN22ReactanceGraphViewBaseC1Ev+0x4f0>
 8008464:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008468:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800846c:	ee17 3a10 	vmov	r3, s14
 8008470:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008474:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008478:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800847c:	1e5a      	subs	r2, r3, #1
 800847e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008482:	ee17 3a90 	vmov	r3, s15
 8008486:	4413      	add	r3, r2
 8008488:	461a      	mov	r2, r3
 800848a:	f7ff bad1 	b.w	8007a30 <_ZN22ReactanceGraphViewBaseC1Ev+0x51c>
 800848e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008492:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008496:	ee17 3a10 	vmov	r3, s14
 800849a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800849e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80084a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80084a6:	1e59      	subs	r1, r3, #1
 80084a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80084ac:	ee17 3a90 	vmov	r3, s15
 80084b0:	440b      	add	r3, r1
 80084b2:	4619      	mov	r1, r3
 80084b4:	f7ff bad5 	b.w	8007a62 <_ZN22ReactanceGraphViewBaseC1Ev+0x54e>
 80084b8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80084bc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80084c0:	ee17 3a10 	vmov	r3, s14
 80084c4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80084c8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80084cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80084d0:	1e5a      	subs	r2, r3, #1
 80084d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80084d6:	ee17 3a90 	vmov	r3, s15
 80084da:	4413      	add	r3, r2
 80084dc:	461a      	mov	r2, r3
 80084de:	f7ff bad6 	b.w	8007a8e <_ZN22ReactanceGraphViewBaseC1Ev+0x57a>
 80084e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80084e6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80084ea:	ee17 3a10 	vmov	r3, s14
 80084ee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80084f2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80084f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80084fa:	1e59      	subs	r1, r3, #1
 80084fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008500:	ee17 3a90 	vmov	r3, s15
 8008504:	440b      	add	r3, r1
 8008506:	4619      	mov	r1, r3
 8008508:	f7ff bada 	b.w	8007ac0 <_ZN22ReactanceGraphViewBaseC1Ev+0x5ac>
 800850c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008510:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008514:	ee17 3a10 	vmov	r3, s14
 8008518:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800851c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008520:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008524:	1e5a      	subs	r2, r3, #1
 8008526:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800852a:	ee17 3a90 	vmov	r3, s15
 800852e:	4413      	add	r3, r2
 8008530:	461a      	mov	r2, r3
 8008532:	f7ff badb 	b.w	8007aec <_ZN22ReactanceGraphViewBaseC1Ev+0x5d8>
 8008536:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800853a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800853e:	ee17 3a10 	vmov	r3, s14
 8008542:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008546:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800854a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800854e:	1e59      	subs	r1, r3, #1
 8008550:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008554:	ee17 3a90 	vmov	r3, s15
 8008558:	440b      	add	r3, r1
 800855a:	4619      	mov	r1, r3
 800855c:	f7ff badf 	b.w	8007b1e <_ZN22ReactanceGraphViewBaseC1Ev+0x60a>
 8008560:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008564:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008568:	ee17 3a10 	vmov	r3, s14
 800856c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008570:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008574:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008578:	1e5a      	subs	r2, r3, #1
 800857a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800857e:	ee17 3a90 	vmov	r3, s15
 8008582:	4413      	add	r3, r2
 8008584:	461a      	mov	r2, r3
 8008586:	f7ff bae0 	b.w	8007b4a <_ZN22ReactanceGraphViewBaseC1Ev+0x636>
 800858a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800858e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008592:	ee17 3a10 	vmov	r3, s14
 8008596:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800859a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800859e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80085a2:	1e59      	subs	r1, r3, #1
 80085a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085a8:	ee17 3a90 	vmov	r3, s15
 80085ac:	440b      	add	r3, r1
 80085ae:	4619      	mov	r1, r3
 80085b0:	f7ff bae4 	b.w	8007b7c <_ZN22ReactanceGraphViewBaseC1Ev+0x668>
 80085b4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80085b8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80085bc:	ee17 3a10 	vmov	r3, s14
 80085c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80085c4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80085c8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80085cc:	1e5a      	subs	r2, r3, #1
 80085ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085d2:	ee17 3a90 	vmov	r3, s15
 80085d6:	4413      	add	r3, r2
 80085d8:	461a      	mov	r2, r3
 80085da:	f7ff bae5 	b.w	8007ba8 <_ZN22ReactanceGraphViewBaseC1Ev+0x694>
 80085de:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80085e2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80085e6:	ee17 3a10 	vmov	r3, s14
 80085ea:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80085ee:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80085f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80085f6:	1e59      	subs	r1, r3, #1
 80085f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085fc:	ee17 3a90 	vmov	r3, s15
 8008600:	440b      	add	r3, r1
 8008602:	4619      	mov	r1, r3
 8008604:	f7ff bae9 	b.w	8007bda <_ZN22ReactanceGraphViewBaseC1Ev+0x6c6>
 8008608:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800860c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008610:	ee17 3a10 	vmov	r3, s14
 8008614:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008618:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800861c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008620:	1e5a      	subs	r2, r3, #1
 8008622:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008626:	ee17 3a90 	vmov	r3, s15
 800862a:	4413      	add	r3, r2
 800862c:	461a      	mov	r2, r3
 800862e:	f7ff baea 	b.w	8007c06 <_ZN22ReactanceGraphViewBaseC1Ev+0x6f2>
 8008632:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008636:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800863a:	ee17 3a10 	vmov	r3, s14
 800863e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008642:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008646:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800864a:	1e59      	subs	r1, r3, #1
 800864c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008650:	ee17 3a90 	vmov	r3, s15
 8008654:	440b      	add	r3, r1
 8008656:	4619      	mov	r1, r3
 8008658:	f7ff baee 	b.w	8007c38 <_ZN22ReactanceGraphViewBaseC1Ev+0x724>
 800865c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008660:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008664:	ee17 3a10 	vmov	r3, s14
 8008668:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800866c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008670:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008674:	1e5a      	subs	r2, r3, #1
 8008676:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800867a:	ee17 3a90 	vmov	r3, s15
 800867e:	4413      	add	r3, r2
 8008680:	461a      	mov	r2, r3
 8008682:	f7ff baef 	b.w	8007c64 <_ZN22ReactanceGraphViewBaseC1Ev+0x750>
 8008686:	bf00      	nop
 8008688:	0802f844 	.word	0x0802f844
 800868c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008690:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008694:	ee17 3a10 	vmov	r3, s14
 8008698:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800869c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80086a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80086a4:	1e59      	subs	r1, r3, #1
 80086a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80086aa:	ee17 3a90 	vmov	r3, s15
 80086ae:	440b      	add	r3, r1
 80086b0:	4619      	mov	r1, r3
 80086b2:	f7ff baf0 	b.w	8007c96 <_ZN22ReactanceGraphViewBaseC1Ev+0x782>
 80086b6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80086ba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80086be:	ee17 3a10 	vmov	r3, s14
 80086c2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80086c6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80086ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80086ce:	1e5a      	subs	r2, r3, #1
 80086d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80086d4:	ee17 3a90 	vmov	r3, s15
 80086d8:	4413      	add	r3, r2
 80086da:	461a      	mov	r2, r3
 80086dc:	f7ff baf1 	b.w	8007cc2 <_ZN22ReactanceGraphViewBaseC1Ev+0x7ae>
 80086e0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80086e4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80086e8:	ee17 3a10 	vmov	r3, s14
 80086ec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80086f0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80086f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80086f8:	1e59      	subs	r1, r3, #1
 80086fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80086fe:	ee17 3a90 	vmov	r3, s15
 8008702:	440b      	add	r3, r1
 8008704:	4619      	mov	r1, r3
 8008706:	f7ff baf5 	b.w	8007cf4 <_ZN22ReactanceGraphViewBaseC1Ev+0x7e0>
 800870a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800870e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008712:	ee17 3a10 	vmov	r3, s14
 8008716:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800871a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800871e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008722:	1e5a      	subs	r2, r3, #1
 8008724:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008728:	ee17 3a90 	vmov	r3, s15
 800872c:	4413      	add	r3, r2
 800872e:	461a      	mov	r2, r3
 8008730:	f7ff baf6 	b.w	8007d20 <_ZN22ReactanceGraphViewBaseC1Ev+0x80c>
 8008734:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008738:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800873c:	ee17 3a10 	vmov	r3, s14
 8008740:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008744:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008748:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800874c:	1e59      	subs	r1, r3, #1
 800874e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008752:	ee17 3a90 	vmov	r3, s15
 8008756:	440b      	add	r3, r1
 8008758:	4619      	mov	r1, r3
 800875a:	f7ff bafa 	b.w	8007d52 <_ZN22ReactanceGraphViewBaseC1Ev+0x83e>
 800875e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008762:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008766:	ee17 3a10 	vmov	r3, s14
 800876a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800876e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008772:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008776:	1e5a      	subs	r2, r3, #1
 8008778:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800877c:	ee17 3a90 	vmov	r3, s15
 8008780:	4413      	add	r3, r2
 8008782:	461a      	mov	r2, r3
 8008784:	f7ff bafb 	b.w	8007d7e <_ZN22ReactanceGraphViewBaseC1Ev+0x86a>
 8008788:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800878c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008790:	ee17 3a10 	vmov	r3, s14
 8008794:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008798:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800879c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80087a0:	1e59      	subs	r1, r3, #1
 80087a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087a6:	ee17 3a90 	vmov	r3, s15
 80087aa:	440b      	add	r3, r1
 80087ac:	4619      	mov	r1, r3
 80087ae:	f7ff baff 	b.w	8007db0 <_ZN22ReactanceGraphViewBaseC1Ev+0x89c>
 80087b2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80087b6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80087ba:	ee17 3a10 	vmov	r3, s14
 80087be:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80087c2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80087c6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80087ca:	1e5a      	subs	r2, r3, #1
 80087cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087d0:	ee17 3a90 	vmov	r3, s15
 80087d4:	4413      	add	r3, r2
 80087d6:	461a      	mov	r2, r3
 80087d8:	f7ff bb00 	b.w	8007ddc <_ZN22ReactanceGraphViewBaseC1Ev+0x8c8>
 80087dc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80087e0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80087e4:	ee17 3a10 	vmov	r3, s14
 80087e8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80087ec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80087f0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80087f4:	1e59      	subs	r1, r3, #1
 80087f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087fa:	ee17 3a90 	vmov	r3, s15
 80087fe:	440b      	add	r3, r1
 8008800:	4619      	mov	r1, r3
 8008802:	f7ff bb04 	b.w	8007e0e <_ZN22ReactanceGraphViewBaseC1Ev+0x8fa>
 8008806:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800880a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800880e:	ee17 3a10 	vmov	r3, s14
 8008812:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008816:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800881a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800881e:	1e5a      	subs	r2, r3, #1
 8008820:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008824:	ee17 3a90 	vmov	r3, s15
 8008828:	4413      	add	r3, r2
 800882a:	461a      	mov	r2, r3
 800882c:	f7ff bb05 	b.w	8007e3a <_ZN22ReactanceGraphViewBaseC1Ev+0x926>
 8008830:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008834:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008838:	ee17 3a10 	vmov	r3, s14
 800883c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008840:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008844:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008848:	1e59      	subs	r1, r3, #1
 800884a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800884e:	ee17 3a90 	vmov	r3, s15
 8008852:	440b      	add	r3, r1
 8008854:	4619      	mov	r1, r3
 8008856:	f7ff bb09 	b.w	8007e6c <_ZN22ReactanceGraphViewBaseC1Ev+0x958>
 800885a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800885e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008862:	ee17 3a10 	vmov	r3, s14
 8008866:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800886a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800886e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008872:	1e5a      	subs	r2, r3, #1
 8008874:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008878:	ee17 3a90 	vmov	r3, s15
 800887c:	4413      	add	r3, r2
 800887e:	461a      	mov	r2, r3
 8008880:	f7ff bb0a 	b.w	8007e98 <_ZN22ReactanceGraphViewBaseC1Ev+0x984>
 8008884:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008888:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800888c:	ee17 3a10 	vmov	r3, s14
 8008890:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008894:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008898:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800889c:	1e59      	subs	r1, r3, #1
 800889e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80088a2:	ee17 3a90 	vmov	r3, s15
 80088a6:	440b      	add	r3, r1
 80088a8:	4619      	mov	r1, r3
 80088aa:	f7ff bb0e 	b.w	8007eca <_ZN22ReactanceGraphViewBaseC1Ev+0x9b6>
 80088ae:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80088b2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80088b6:	ee17 3a10 	vmov	r3, s14
 80088ba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80088be:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80088c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80088c6:	1e5a      	subs	r2, r3, #1
 80088c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80088cc:	ee17 3a90 	vmov	r3, s15
 80088d0:	4413      	add	r3, r2
 80088d2:	461a      	mov	r2, r3
 80088d4:	f7ff bb0f 	b.w	8007ef6 <_ZN22ReactanceGraphViewBaseC1Ev+0x9e2>
 80088d8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80088dc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80088e0:	ee17 3a10 	vmov	r3, s14
 80088e4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80088e8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80088ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80088f0:	1e59      	subs	r1, r3, #1
 80088f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80088f6:	ee17 3a90 	vmov	r3, s15
 80088fa:	440b      	add	r3, r1
 80088fc:	4619      	mov	r1, r3
 80088fe:	f7ff bb13 	b.w	8007f28 <_ZN22ReactanceGraphViewBaseC1Ev+0xa14>
 8008902:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008906:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800890a:	ee17 3a10 	vmov	r3, s14
 800890e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008912:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008916:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800891a:	1e5a      	subs	r2, r3, #1
 800891c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008920:	ee17 3a90 	vmov	r3, s15
 8008924:	4413      	add	r3, r2
 8008926:	461a      	mov	r2, r3
 8008928:	f7ff bb14 	b.w	8007f54 <_ZN22ReactanceGraphViewBaseC1Ev+0xa40>
 800892c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008930:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008934:	ee17 3a10 	vmov	r3, s14
 8008938:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800893c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008940:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008944:	1e59      	subs	r1, r3, #1
 8008946:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800894a:	ee17 3a90 	vmov	r3, s15
 800894e:	440b      	add	r3, r1
 8008950:	4619      	mov	r1, r3
 8008952:	f7ff bb18 	b.w	8007f86 <_ZN22ReactanceGraphViewBaseC1Ev+0xa72>
 8008956:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800895a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800895e:	ee17 3a10 	vmov	r3, s14
 8008962:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008966:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800896a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800896e:	1e5a      	subs	r2, r3, #1
 8008970:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008974:	ee17 3a90 	vmov	r3, s15
 8008978:	4413      	add	r3, r2
 800897a:	461a      	mov	r2, r3
 800897c:	f7ff bb19 	b.w	8007fb2 <_ZN22ReactanceGraphViewBaseC1Ev+0xa9e>
 8008980:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008984:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008988:	ee17 3a10 	vmov	r3, s14
 800898c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008990:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008994:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008998:	1e59      	subs	r1, r3, #1
 800899a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800899e:	ee17 3a90 	vmov	r3, s15
 80089a2:	440b      	add	r3, r1
 80089a4:	4619      	mov	r1, r3
 80089a6:	f7ff bb1d 	b.w	8007fe4 <_ZN22ReactanceGraphViewBaseC1Ev+0xad0>
 80089aa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80089ae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80089b2:	ee17 3a10 	vmov	r3, s14
 80089b6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80089ba:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80089be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80089c2:	1e5a      	subs	r2, r3, #1
 80089c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80089c8:	ee17 3a90 	vmov	r3, s15
 80089cc:	4413      	add	r3, r2
 80089ce:	461a      	mov	r2, r3
 80089d0:	f7ff bb1e 	b.w	8008010 <_ZN22ReactanceGraphViewBaseC1Ev+0xafc>
 80089d4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80089d8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80089dc:	ee17 3a10 	vmov	r3, s14
 80089e0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80089e4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80089e8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80089ec:	1e59      	subs	r1, r3, #1
 80089ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80089f2:	ee17 3a90 	vmov	r3, s15
 80089f6:	440b      	add	r3, r1
 80089f8:	4619      	mov	r1, r3
 80089fa:	f7ff bb22 	b.w	8008042 <_ZN22ReactanceGraphViewBaseC1Ev+0xb2e>
 80089fe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a02:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008a06:	ee17 3a10 	vmov	r3, s14
 8008a0a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008a0e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008a12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008a16:	1e5a      	subs	r2, r3, #1
 8008a18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a1c:	ee17 3a90 	vmov	r3, s15
 8008a20:	4413      	add	r3, r2
 8008a22:	461a      	mov	r2, r3
 8008a24:	f7ff bb23 	b.w	800806e <_ZN22ReactanceGraphViewBaseC1Ev+0xb5a>
 8008a28:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a2c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008a30:	ee17 3a10 	vmov	r3, s14
 8008a34:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008a38:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008a3c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008a40:	1e59      	subs	r1, r3, #1
 8008a42:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a46:	ee17 3a90 	vmov	r3, s15
 8008a4a:	440b      	add	r3, r1
 8008a4c:	4619      	mov	r1, r3
 8008a4e:	f7ff bb27 	b.w	80080a0 <_ZN22ReactanceGraphViewBaseC1Ev+0xb8c>
 8008a52:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a56:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008a5a:	ee17 3a10 	vmov	r3, s14
 8008a5e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008a62:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008a66:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008a6a:	1e5a      	subs	r2, r3, #1
 8008a6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a70:	ee17 3a90 	vmov	r3, s15
 8008a74:	4413      	add	r3, r2
 8008a76:	461a      	mov	r2, r3
 8008a78:	f7ff bb28 	b.w	80080cc <_ZN22ReactanceGraphViewBaseC1Ev+0xbb8>
 8008a7c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a80:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008a84:	ee17 3a10 	vmov	r3, s14
 8008a88:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008a8c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008a90:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008a94:	1e59      	subs	r1, r3, #1
 8008a96:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a9a:	ee17 3a90 	vmov	r3, s15
 8008a9e:	440b      	add	r3, r1
 8008aa0:	4619      	mov	r1, r3
 8008aa2:	f7ff bb2c 	b.w	80080fe <_ZN22ReactanceGraphViewBaseC1Ev+0xbea>
 8008aa6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008aaa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008aae:	ee17 3a10 	vmov	r3, s14
 8008ab2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008ab6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008aba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008abe:	1e5a      	subs	r2, r3, #1
 8008ac0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008ac4:	ee17 3a90 	vmov	r3, s15
 8008ac8:	4413      	add	r3, r2
 8008aca:	461a      	mov	r2, r3
 8008acc:	f7ff bb4a 	b.w	8008164 <_ZN22ReactanceGraphViewBaseC1Ev+0xc50>
 8008ad0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008ad4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008ad8:	ee17 3a10 	vmov	r3, s14
 8008adc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008ae0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008ae4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008ae8:	1e59      	subs	r1, r3, #1
 8008aea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008aee:	ee17 3a90 	vmov	r3, s15
 8008af2:	440b      	add	r3, r1
 8008af4:	4619      	mov	r1, r3
 8008af6:	f7ff bb4e 	b.w	8008196 <_ZN22ReactanceGraphViewBaseC1Ev+0xc82>
 8008afa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008afe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008b02:	ee17 3a10 	vmov	r3, s14
 8008b06:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008b0a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008b0e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008b12:	1e5a      	subs	r2, r3, #1
 8008b14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b18:	ee17 3a90 	vmov	r3, s15
 8008b1c:	4413      	add	r3, r2
 8008b1e:	461a      	mov	r2, r3
 8008b20:	f7ff bb4f 	b.w	80081c2 <_ZN22ReactanceGraphViewBaseC1Ev+0xcae>
 8008b24:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008b28:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008b2c:	ee17 3a10 	vmov	r3, s14
 8008b30:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008b34:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008b38:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008b3c:	1e59      	subs	r1, r3, #1
 8008b3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b42:	ee17 3a90 	vmov	r3, s15
 8008b46:	440b      	add	r3, r1
 8008b48:	4619      	mov	r1, r3
 8008b4a:	f7ff bb53 	b.w	80081f4 <_ZN22ReactanceGraphViewBaseC1Ev+0xce0>
 8008b4e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008b52:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008b56:	ee17 3a10 	vmov	r3, s14
 8008b5a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008b5e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008b62:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008b66:	1e5a      	subs	r2, r3, #1
 8008b68:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b6c:	ee17 3a90 	vmov	r3, s15
 8008b70:	4413      	add	r3, r2
 8008b72:	461a      	mov	r2, r3
 8008b74:	f7ff bb54 	b.w	8008220 <_ZN22ReactanceGraphViewBaseC1Ev+0xd0c>
 8008b78:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008b7c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008b80:	ee17 3a10 	vmov	r3, s14
 8008b84:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008b88:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008b8c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008b90:	1e59      	subs	r1, r3, #1
 8008b92:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b96:	ee17 3a90 	vmov	r3, s15
 8008b9a:	440b      	add	r3, r1
 8008b9c:	4619      	mov	r1, r3
 8008b9e:	f7ff bb58 	b.w	8008252 <_ZN22ReactanceGraphViewBaseC1Ev+0xd3e>
 8008ba2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008ba6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008baa:	ee17 3a10 	vmov	r3, s14
 8008bae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008bb2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008bb6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008bba:	1e5a      	subs	r2, r3, #1
 8008bbc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008bc0:	ee17 3a90 	vmov	r3, s15
 8008bc4:	4413      	add	r3, r2
 8008bc6:	461a      	mov	r2, r3
 8008bc8:	f7ff bb59 	b.w	800827e <_ZN22ReactanceGraphViewBaseC1Ev+0xd6a>

08008bcc <_ZN23ResistanceGraphViewBaseD1Ev>:

class ResistanceGraphViewBase : public touchgfx::View<ResistanceGraphPresenter>
{
public:
    ResistanceGraphViewBase();
    virtual ~ResistanceGraphViewBase() {}
 8008bcc:	4770      	bx	lr

08008bce <_ZN23ResistanceGraphViewBase14PlotResistanceEv>:
     * Virtual Action Handlers
     */
    virtual void PlotResistance()
    {
        // Override and implement this function in ResistanceGraph
    }
 8008bce:	4770      	bx	lr

08008bd0 <_ZN23ResistanceGraphViewBase11setupScreenEv>:
{

    //Interaction2
    //When screen transition begins call virtual function
    //Call PlotResistance
    PlotResistance();
 8008bd0:	6803      	ldr	r3, [r0, #0]
 8008bd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008bd4:	4718      	bx	r3

08008bd6 <_ZN8touchgfx8CallbackI23ResistanceGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008bd6:	4770      	bx	lr

08008bd8 <_ZN8touchgfx8CallbackI23ResistanceGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008bd8:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8008bda:	68c2      	ldr	r2, [r0, #12]
 8008bdc:	6844      	ldr	r4, [r0, #4]
 8008bde:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008be0:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8008be2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008be6:	07d2      	lsls	r2, r2, #31
 8008be8:	bf48      	it	mi
 8008bea:	5962      	ldrmi	r2, [r4, r5]
 8008bec:	689b      	ldr	r3, [r3, #8]
    }
 8008bee:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8008bf0:	bf48      	it	mi
 8008bf2:	58d3      	ldrmi	r3, [r2, r3]
 8008bf4:	4718      	bx	r3

08008bf6 <_ZNK8touchgfx8CallbackI23ResistanceGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8008bf6:	6843      	ldr	r3, [r0, #4]
 8008bf8:	b12b      	cbz	r3, 8008c06 <_ZNK8touchgfx8CallbackI23ResistanceGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008bfa:	6883      	ldr	r3, [r0, #8]
 8008bfc:	b92b      	cbnz	r3, 8008c0a <_ZNK8touchgfx8CallbackI23ResistanceGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008bfe:	68c0      	ldr	r0, [r0, #12]
 8008c00:	f000 0001 	and.w	r0, r0, #1
 8008c04:	4770      	bx	lr
 8008c06:	4618      	mov	r0, r3
 8008c08:	4770      	bx	lr
 8008c0a:	2001      	movs	r0, #1
    }
 8008c0c:	4770      	bx	lr

08008c0e <_ZN8touchgfx8CallbackI23ResistanceGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008c0e:	b510      	push	{r4, lr}
 8008c10:	2110      	movs	r1, #16
 8008c12:	4604      	mov	r4, r0
 8008c14:	f022 fa89 	bl	802b12a <_ZdlPvj>
 8008c18:	4620      	mov	r0, r4
 8008c1a:	bd10      	pop	{r4, pc}

08008c1c <_ZN23ResistanceGraphViewBaseD0Ev>:
    virtual ~ResistanceGraphViewBase() {}
 8008c1c:	b510      	push	{r4, lr}
 8008c1e:	f241 71b8 	movw	r1, #6072	; 0x17b8
 8008c22:	4604      	mov	r4, r0
 8008c24:	f022 fa81 	bl	802b12a <_ZdlPvj>
 8008c28:	4620      	mov	r0, r4
 8008c2a:	bd10      	pop	{r4, pc}

08008c2c <_ZN23ResistanceGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ResistanceGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ReturnToList)
 8008c2c:	f200 401c 	addw	r0, r0, #1052	; 0x41c
 8008c30:	4288      	cmp	r0, r1
{
 8008c32:	b508      	push	{r3, lr}
    if (&src == &ReturnToList)
 8008c34:	d105      	bne.n	8008c42 <_ZN23ResistanceGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008c36:	f010 fb8f 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When ReturnToList clicked change screen to DataDisplayList
        //Go to DataDisplayList with screen transition towards East
        application().gotoDataDisplayListScreenSlideTransitionEast();
    }
}
 8008c3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoDataDisplayListScreenSlideTransitionEast();
 8008c3e:	f7fb bf97 	b.w	8004b70 <_ZN23FrontendApplicationBase44gotoDataDisplayListScreenSlideTransitionEastEv>
}
 8008c42:	bd08      	pop	{r3, pc}

08008c44 <_ZN23ResistanceGraphViewBaseC1Ev>:
ResistanceGraphViewBase::ResistanceGraphViewBase() :
 8008c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c48:	ed2d 8b08 	vpush	{d8-d11}
 8008c4c:	4604      	mov	r4, r0
 8008c4e:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &ResistanceGraphViewBase::buttonCallbackHandler)
 8008c50:	46a1      	mov	r9, r4
 8008c52:	2600      	movs	r6, #0
 8008c54:	f011 fef0 	bl	801aa38 <_ZN8touchgfx6ScreenC1Ev>
 8008c58:	4bec      	ldr	r3, [pc, #944]	; (800900c <_ZN23ResistanceGraphViewBaseC1Ev+0x3c8>)
 8008c5a:	63e6      	str	r6, [r4, #60]	; 0x3c
 8008c5c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8008c60:	4631      	mov	r1, r6
 8008c62:	2226      	movs	r2, #38	; 0x26
 8008c64:	4648      	mov	r0, r9
 8008c66:	f023 fb33 	bl	802c2d0 <memset>
 8008c6a:	4648      	mov	r0, r9
 8008c6c:	f7fa ff5e 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8008c70:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8008c74:	25ff      	movs	r5, #255	; 0xff
 8008c76:	4be6      	ldr	r3, [pc, #920]	; (8009010 <_ZN23ResistanceGraphViewBaseC1Ev+0x3cc>)
 8008c78:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008c7a:	2226      	movs	r2, #38	; 0x26
 8008c7c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008c80:	4631      	mov	r1, r6
 8008c82:	f884 5066 	strb.w	r5, [r4, #102]	; 0x66
 8008c86:	66a6      	str	r6, [r4, #104]	; 0x68
 8008c88:	4658      	mov	r0, fp
 8008c8a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008c8e:	f023 fb1f 	bl	802c2d0 <memset>
 8008c92:	4658      	mov	r0, fp
 8008c94:	f7fa ff4a 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 8008c98:	4bde      	ldr	r3, [pc, #888]	; (8009014 <_ZN23ResistanceGraphViewBaseC1Ev+0x3d0>)
 8008c9a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008c9c:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8008ca0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008ca4:	f884 5094 	strb.w	r5, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008ca8:	a90c      	add	r1, sp, #48	; 0x30
 8008caa:	f104 0598 	add.w	r5, r4, #152	; 0x98
 8008cae:	4658      	mov	r0, fp
 8008cb0:	f00e fc97 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : AbstractDataGraph(capacity), xValues(xvalues), yValues(yvalues)
 8008cb4:	211a      	movs	r1, #26
 8008cb6:	4628      	mov	r0, r5
 8008cb8:	f00c f928 	bl	8014f0c <_ZN8touchgfx17AbstractDataGraphC1Es>
 8008cbc:	4bd6      	ldr	r3, [pc, #856]	; (8009018 <_ZN23ResistanceGraphViewBaseC1Ev+0x3d4>)
 8008cbe:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008cc2:	f504 73ee 	add.w	r3, r4, #476	; 0x1dc
 8008cc6:	f8c4 31d4 	str.w	r3, [r4, #468]	; 0x1d4
 8008cca:	f504 7311 	add.w	r3, r4, #580	; 0x244
        StaticDataGraph::setGraphRangeX(0, capacity - 1);
 8008cce:	2219      	movs	r2, #25
 8008cd0:	4631      	mov	r1, r6
        : AbstractDataGraph(capacity), xValues(xvalues), yValues(yvalues)
 8008cd2:	f8c4 31d8 	str.w	r3, [r4, #472]	; 0x1d8
        StaticDataGraph::setGraphRangeX(0, capacity - 1);
 8008cd6:	4628      	mov	r0, r5
 8008cd8:	f7fe f8a1 	bl	8006e1e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8008cdc:	4bcf      	ldr	r3, [pc, #828]	; (800901c <_ZN23ResistanceGraphViewBaseC1Ev+0x3d8>)
 8008cde:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008ce2:	f504 732b 	add.w	r3, r4, #684	; 0x2ac
        : CanvasWidget()
 8008ce6:	4618      	mov	r0, r3
 8008ce8:	ee08 3a90 	vmov	s17, r3
 8008cec:	f00b fd14 	bl	8014718 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 8008cf0:	4bcb      	ldr	r3, [pc, #812]	; (8009020 <_ZN23ResistanceGraphViewBaseC1Ev+0x3dc>)
 8008cf2:	f8c4 32ac 	str.w	r3, [r4, #684]	; 0x2ac
 8008cf6:	2302      	movs	r3, #2
 8008cf8:	f884 32da 	strb.w	r3, [r4, #730]	; 0x2da
        : AbstractPainterRGB565(), painterColor(0)
 8008cfc:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8008d00:	4618      	mov	r0, r3
 8008d02:	ee0b 3a10 	vmov	s22, r3
 8008d06:	f7fd fefb 	bl	8006b00 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008d0a:	4bc6      	ldr	r3, [pc, #792]	; (8009024 <_ZN23ResistanceGraphViewBaseC1Ev+0x3e0>)
 8008d0c:	f8c4 32dc 	str.w	r3, [r4, #732]	; 0x2dc
 8008d10:	f504 733d 	add.w	r3, r4, #756	; 0x2f4
        painterColor = color;
 8008d14:	f8c4 62f0 	str.w	r6, [r4, #752]	; 0x2f0
        : CanvasWidget()
 8008d18:	4618      	mov	r0, r3
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8008d1a:	f04f 0801 	mov.w	r8, #1
 8008d1e:	ee09 3a10 	vmov	s18, r3
        : CanvasWidget()
 8008d22:	f00b fcf9 	bl	8014718 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8008d26:	230a      	movs	r3, #10
 8008d28:	e9c4 83ca 	strd	r8, r3, [r4, #808]	; 0x328
class GraphElementGridX : public GraphElementGridBase
 8008d2c:	4bbe      	ldr	r3, [pc, #760]	; (8009028 <_ZN23ResistanceGraphViewBaseC1Ev+0x3e4>)
 8008d2e:	f8c4 32f4 	str.w	r3, [r4, #756]	; 0x2f4
 8008d32:	f504 734e 	add.w	r3, r4, #824	; 0x338
 8008d36:	f8c4 6324 	str.w	r6, [r4, #804]	; 0x324
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8008d3a:	f884 8330 	strb.w	r8, [r4, #816]	; 0x330
 8008d3e:	f8c4 6334 	str.w	r6, [r4, #820]	; 0x334
        : CanvasWidget()
 8008d42:	4618      	mov	r0, r3
 8008d44:	ee09 3a90 	vmov	s19, r3
 8008d48:	f00b fce6 	bl	8014718 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8008d4c:	230a      	movs	r3, #10
 8008d4e:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
class GraphElementGridY : public GraphElementGridBase
 8008d52:	4bb6      	ldr	r3, [pc, #728]	; (800902c <_ZN23ResistanceGraphViewBaseC1Ev+0x3e8>)
 8008d54:	f8c4 3338 	str.w	r3, [r4, #824]	; 0x338
 8008d58:	f504 735f 	add.w	r3, r4, #892	; 0x37c
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8008d5c:	e9c4 68da 	strd	r6, r8, [r4, #872]	; 0x368
 8008d60:	f884 8374 	strb.w	r8, [r4, #884]	; 0x374
 8008d64:	f8c4 6378 	str.w	r6, [r4, #888]	; 0x378
class GraphLabelsX : public GraphLabelsBase
 8008d68:	4618      	mov	r0, r3
 8008d6a:	ee0a 3a10 	vmov	s20, r3
 8008d6e:	f7fe fbb1 	bl	80074d4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8008d72:	4baf      	ldr	r3, [pc, #700]	; (8009030 <_ZN23ResistanceGraphViewBaseC1Ev+0x3ec>)
 8008d74:	f8c4 337c 	str.w	r3, [r4, #892]	; 0x37c
 8008d78:	f504 7373 	add.w	r3, r4, #972	; 0x3cc
class GraphLabelsY : public GraphLabelsBase
 8008d7c:	4618      	mov	r0, r3
 8008d7e:	ee0a 3a90 	vmov	s21, r3
 8008d82:	f7fe fba7 	bl	80074d4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8008d86:	4bab      	ldr	r3, [pc, #684]	; (8009034 <_ZN23ResistanceGraphViewBaseC1Ev+0x3f0>)
 8008d88:	f8c4 33cc 	str.w	r3, [r4, #972]	; 0x3cc
 8008d8c:	f204 431c 	addw	r3, r4, #1052	; 0x41c
 8008d90:	4618      	mov	r0, r3
 8008d92:	f504 6a8b 	add.w	sl, r4, #1112	; 0x458
 8008d96:	ee08 3a10 	vmov	s16, r3
 8008d9a:	f504 6794 	add.w	r7, r4, #1184	; 0x4a0
 8008d9e:	f00e fbf9 	bl	8017594 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8008da2:	4650      	mov	r0, sl
 8008da4:	f7fd fc4c 	bl	8006640 <_ZN8touchgfx8TextAreaC1Ev>
 8008da8:	4638      	mov	r0, r7
 8008daa:	f7fd fc49 	bl	8006640 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8008dae:	4ba2      	ldr	r3, [pc, #648]	; (8009038 <_ZN23ResistanceGraphViewBaseC1Ev+0x3f4>)
 8008db0:	f8c4 34e8 	str.w	r3, [r4, #1256]	; 0x4e8
 8008db4:	4ba1      	ldr	r3, [pc, #644]	; (800903c <_ZN23ResistanceGraphViewBaseC1Ev+0x3f8>)
 8008db6:	f8c4 34f0 	str.w	r3, [r4, #1264]	; 0x4f0
 8008dba:	f8c4 64f4 	str.w	r6, [r4, #1268]	; 0x4f4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008dbe:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8008dc2:	f504 609f 	add.w	r0, r4, #1272	; 0x4f8
 8008dc6:	f8c4 44ec 	str.w	r4, [r4, #1260]	; 0x4ec
 8008dca:	f00e fd81 	bl	80178d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8008dce:	23f0      	movs	r3, #240	; 0xf0
 8008dd0:	4632      	mov	r2, r6
 8008dd2:	4631      	mov	r1, r6
 8008dd4:	9300      	str	r3, [sp, #0]
 8008dd6:	4648      	mov	r0, r9
 8008dd8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008ddc:	f7fb fdec 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8008de0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008de4:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 8008de6:	4632      	mov	r2, r6
 8008de8:	4631      	mov	r1, r6
 8008dea:	4658      	mov	r0, fp
 8008dec:	f7fa fd28 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 8008df0:	a90c      	add	r1, sp, #48	; 0x30
 8008df2:	4658      	mov	r0, fp
 8008df4:	f8ad 6030 	strh.w	r6, [sp, #48]	; 0x30
 8008df8:	f00e fbf3 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    ResistanceGraph.setScaleX(1);
 8008dfc:	4632      	mov	r2, r6
 8008dfe:	4641      	mov	r1, r8
 8008e00:	4628      	mov	r0, r5
 8008e02:	f00c f8fd 	bl	8015000 <_ZN8touchgfx15StaticDataGraph9setScaleXEib>
    ResistanceGraph.setScaleY(1000);
 8008e06:	4632      	mov	r2, r6
 8008e08:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008e0c:	4628      	mov	r0, r5
 8008e0e:	f00c f91b 	bl	8015048 <_ZN8touchgfx15StaticDataGraph9setScaleYEib>
    ResistanceGraph.setPosition(13, 12, 295, 173);
 8008e12:	23ad      	movs	r3, #173	; 0xad
 8008e14:	9300      	str	r3, [sp, #0]
 8008e16:	220c      	movs	r2, #12
 8008e18:	f240 1327 	movw	r3, #295	; 0x127
 8008e1c:	210d      	movs	r1, #13
 8008e1e:	4628      	mov	r0, r5
 8008e20:	f7fb fdca 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
    ResistanceGraph.setGraphAreaMargin(20, 40, 10, 20);
 8008e24:	2114      	movs	r1, #20
 8008e26:	9100      	str	r1, [sp, #0]
 8008e28:	230a      	movs	r3, #10
 8008e2a:	2228      	movs	r2, #40	; 0x28
 8008e2c:	4628      	mov	r0, r5
 8008e2e:	f00c f81e 	bl	8014e6e <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    ResistanceGraph.setGraphAreaPadding(0, 0, 0, 0);
 8008e32:	4633      	mov	r3, r6
 8008e34:	4632      	mov	r2, r6
 8008e36:	4631      	mov	r1, r6
 8008e38:	9600      	str	r6, [sp, #0]
 8008e3a:	4628      	mov	r0, r5
 8008e3c:	f00b ff17 	bl	8014c6e <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    ResistanceGraph.setGraphRangeX(0, 32);
 8008e40:	4631      	mov	r1, r6
 8008e42:	2220      	movs	r2, #32
 8008e44:	4628      	mov	r0, r5
 8008e46:	f7fd ffea 	bl	8006e1e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    ResistanceGraph.setGraphRangeY(-50, 250);
 8008e4a:	22fa      	movs	r2, #250	; 0xfa
 8008e4c:	f06f 0131 	mvn.w	r1, #49	; 0x31
 8008e50:	4628      	mov	r0, r5
 8008e52:	f7fe f870 	bl	8006f36 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8008e56:	4642      	mov	r2, r8
 8008e58:	e9d4 10ca 	ldrd	r1, r0, [r4, #808]	; 0x328
 8008e5c:	f00c f8c8 	bl	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8008e60:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008e64:	f8c4 3324 	str.w	r3, [r4, #804]	; 0x324
        gridInterval = abs(interval);
 8008e68:	2304      	movs	r3, #4
 8008e6a:	f8c4 332c 	str.w	r3, [r4, #812]	; 0x32c
    ResistanceGraph.addGraphElement(ResistanceGraphMajorXAxisGrid);
 8008e6e:	ee19 1a10 	vmov	r1, s18
        dataScale = scale;
 8008e72:	f8c4 8328 	str.w	r8, [r4, #808]	; 0x328
        lineWidth = width;
 8008e76:	f884 8330 	strb.w	r8, [r4, #816]	; 0x330
 8008e7a:	4628      	mov	r0, r5
 8008e7c:	f00b ff02 	bl	8014c84 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8008e80:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8008e84:	e9d4 10db 	ldrd	r1, r0, [r4, #876]	; 0x36c
 8008e88:	f00c f8b2 	bl	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8008e8c:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8008e90:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008e94:	e9c4 36da 	strd	r3, r6, [r4, #872]	; 0x368
        gridInterval = abs(interval);
 8008e98:	f246 13a8 	movw	r3, #25000	; 0x61a8
 8008e9c:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
    ResistanceGraph.addGraphElement(ResistanceGraphMajorYAxisGrid);
 8008ea0:	ee19 1a90 	vmov	r1, s19
        lineWidth = width;
 8008ea4:	f884 8374 	strb.w	r8, [r4, #884]	; 0x374
 8008ea8:	4628      	mov	r0, r5
 8008eaa:	f00b feeb 	bl	8014c84 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8008eae:	4642      	mov	r2, r8
 8008eb0:	e9d4 10ec 	ldrd	r1, r0, [r4, #944]	; 0x3b0
 8008eb4:	f00c f89c 	bl	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8008eb8:	2305      	movs	r3, #5
        dataScale = scale;
 8008eba:	f8c4 83b0 	str.w	r8, [r4, #944]	; 0x3b0
        labelInterval = abs(interval);
 8008ebe:	f8c4 33b4 	str.w	r3, [r4, #948]	; 0x3b4
        color = newColor;
 8008ec2:	f8df 818c 	ldr.w	r8, [pc, #396]	; 8009050 <_ZN23ResistanceGraphViewBaseC1Ev+0x40c>
 8008ec6:	f8c4 83ac 	str.w	r8, [r4, #940]	; 0x3ac
class TypedText
 8008eca:	2306      	movs	r3, #6
 8008ecc:	f8a4 33bc 	strh.w	r3, [r4, #956]	; 0x3bc
    ResistanceGraph.addBottomElement(ResistanceGraphMajorXAxisLabel);
 8008ed0:	ee1a 1a10 	vmov	r1, s20
 8008ed4:	4628      	mov	r0, r5
 8008ed6:	f00b fef9 	bl	8014ccc <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8008eda:	4632      	mov	r2, r6
 8008edc:	f8d4 1400 	ldr.w	r1, [r4, #1024]	; 0x400
 8008ee0:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8008ee4:	f00c f884 	bl	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8008ee8:	f246 13a8 	movw	r3, #25000	; 0x61a8
        dataScale = scale;
 8008eec:	f8c4 6400 	str.w	r6, [r4, #1024]	; 0x400
        labelInterval = abs(interval);
 8008ef0:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
        labelDecimals = decimals;
 8008ef4:	2603      	movs	r6, #3
 8008ef6:	230d      	movs	r3, #13
    ResistanceGraph.addLeftElement(ResistanceGraphMajorYAxisLabel);
 8008ef8:	ee1a 1a90 	vmov	r1, s21
 8008efc:	f8a4 340c 	strh.w	r3, [r4, #1036]	; 0x40c
 8008f00:	4628      	mov	r0, r5
 8008f02:	f8a4 6412 	strh.w	r6, [r4, #1042]	; 0x412
 8008f06:	f8c4 83fc 	str.w	r8, [r4, #1020]	; 0x3fc
 8008f0a:	f00b fecd 	bl	8014ca8 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 8008f0e:	4b4c      	ldr	r3, [pc, #304]	; (8009040 <_ZN23ResistanceGraphViewBaseC1Ev+0x3fc>)
 8008f10:	f8c4 32f0 	str.w	r3, [r4, #752]	; 0x2f0
    ResistanceGraphLine1.setPainter(ResistanceGraphLine1Painter);
 8008f14:	ee1b 1a10 	vmov	r1, s22
 8008f18:	ee18 0a90 	vmov	r0, s17
 8008f1c:	f00b faf8 	bl	8014510 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    ResistanceGraph.addGraphElement(ResistanceGraphLine1);
 8008f20:	ee18 1a90 	vmov	r1, s17
        lineWidth = width;
 8008f24:	f884 62da 	strb.w	r6, [r4, #730]	; 0x2da
 8008f28:	4628      	mov	r0, r5
 8008f2a:	f00b feab 	bl	8014c84 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        const float fs = f * scale;
 8008f2e:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8008f32:	ed9f 7a44 	vldr	s14, [pc, #272]	; 8009044 <_ZN23ResistanceGraphViewBaseC1Ev+0x400>
 8008f36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008f3a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008f3e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8008f42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f46:	f2c0 858e 	blt.w	8009a66 <_ZN23ResistanceGraphViewBaseC1Ev+0xe22>
            return int(fs + 0.5f);
 8008f4a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008f4e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008f52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008f56:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8008f5a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8008f5e:	ed9f 7a3a 	vldr	s14, [pc, #232]	; 8009048 <_ZN23ResistanceGraphViewBaseC1Ev+0x404>
 8008f62:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008f66:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008f6a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008f6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f72:	f2c0 858d 	blt.w	8009a90 <_ZN23ResistanceGraphViewBaseC1Ev+0xe4c>
            return int(fs + 0.5f);
 8008f76:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008f7a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008f7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008f82:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8008f86:	4628      	mov	r0, r5
 8008f88:	f00c f882 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8008f8c:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8008f90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        if (fs >= 0)
 8008f94:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008f98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f9c:	f2c0 858d 	blt.w	8009aba <_ZN23ResistanceGraphViewBaseC1Ev+0xe76>
            return int(fs + 0.5f);
 8008fa0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008fa4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008fa8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008fac:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8008fb0:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8008fb4:	ed9f 7a25 	vldr	s14, [pc, #148]	; 800904c <_ZN23ResistanceGraphViewBaseC1Ev+0x408>
 8008fb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008fbc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008fc0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008fc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008fc8:	f2c0 858c 	blt.w	8009ae4 <_ZN23ResistanceGraphViewBaseC1Ev+0xea0>
            return int(fs + 0.5f);
 8008fcc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008fd0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008fd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008fd8:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8008fdc:	4628      	mov	r0, r5
 8008fde:	f00c f857 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8008fe2:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8008fe6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008fea:	ee77 7aa7 	vadd.f32	s15, s15, s15
        if (fs >= 0)
 8008fee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008ff2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008ff6:	f2c0 858a 	blt.w	8009b0e <_ZN23ResistanceGraphViewBaseC1Ev+0xeca>
            return int(fs + 0.5f);
 8008ffa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008ffe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009002:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009006:	ee17 1a90 	vmov	r1, s15
 800900a:	e039      	b.n	8009080 <_ZN23ResistanceGraphViewBaseC1Ev+0x43c>
 800900c:	080315c0 	.word	0x080315c0
 8009010:	08034824 	.word	0x08034824
 8009014:	08034a04 	.word	0x08034a04
 8009018:	08033ff0 	.word	0x08033ff0
 800901c:	0803141c 	.word	0x0803141c
 8009020:	080343e0 	.word	0x080343e0
 8009024:	08033ce4 	.word	0x08033ce4
 8009028:	080312a4 	.word	0x080312a4
 800902c:	08031360 	.word	0x08031360
 8009030:	08034464 	.word	0x08034464
 8009034:	08034508 	.word	0x08034508
 8009038:	080315a8 	.word	0x080315a8
 800903c:	08008c2d 	.word	0x08008c2d
 8009040:	ff1497c5 	.word	0xff1497c5
 8009044:	00000000 	.word	0x00000000
 8009048:	c18d3d71 	.word	0xc18d3d71
 800904c:	430dc4dd 	.word	0x430dc4dd
 8009050:	ff001a36 	.word	0xff001a36
 8009054:	4356a354 	.word	0x4356a354
 8009058:	42d652f2 	.word	0x42d652f2
 800905c:	430a97cf 	.word	0x430a97cf
 8009060:	432571aa 	.word	0x432571aa
 8009064:	3f2a7efa 	.word	0x3f2a7efa
 8009068:	c19428f6 	.word	0xc19428f6
 800906c:	42f3e1cb 	.word	0x42f3e1cb
 8009070:	42c08dd3 	.word	0x42c08dd3
 8009074:	42abd4fe 	.word	0x42abd4fe
 8009078:	43642419 	.word	0x43642419
 800907c:	43392e14 	.word	0x43392e14
        const float fs = f * scale;
 8009080:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009084:	ed1f 7a0d 	vldr	s14, [pc, #-52]	; 8009054 <_ZN23ResistanceGraphViewBaseC1Ev+0x410>
 8009088:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800908c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009090:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009094:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009098:	f2c0 854e 	blt.w	8009b38 <_ZN23ResistanceGraphViewBaseC1Ev+0xef4>
            return int(fs + 0.5f);
 800909c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80090a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80090a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80090a8:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80090ac:	4628      	mov	r0, r5
 80090ae:	f00b ffef 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80090b2:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80090b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80090ba:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 80090be:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80090c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80090c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80090ca:	f2c0 854a 	blt.w	8009b62 <_ZN23ResistanceGraphViewBaseC1Ev+0xf1e>
            return int(fs + 0.5f);
 80090ce:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80090d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80090d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80090da:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80090de:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80090e2:	ed1f 7a23 	vldr	s14, [pc, #-140]	; 8009058 <_ZN23ResistanceGraphViewBaseC1Ev+0x414>
 80090e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80090ea:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80090ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80090f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80090f6:	f2c0 8549 	blt.w	8009b8c <_ZN23ResistanceGraphViewBaseC1Ev+0xf48>
            return int(fs + 0.5f);
 80090fa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80090fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009102:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009106:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800910a:	4628      	mov	r0, r5
 800910c:	f00b ffc0 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009110:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009114:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009118:	eeb1 7a04 	vmov.f32	s14, #20	; 0x40a00000  5.0
 800911c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009120:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009124:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009128:	f2c0 8545 	blt.w	8009bb6 <_ZN23ResistanceGraphViewBaseC1Ev+0xf72>
            return int(fs + 0.5f);
 800912c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009130:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009134:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009138:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800913c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009140:	ed1f 7a3a 	vldr	s14, [pc, #-232]	; 800905c <_ZN23ResistanceGraphViewBaseC1Ev+0x418>
 8009144:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009148:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800914c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009150:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009154:	f2c0 8544 	blt.w	8009be0 <_ZN23ResistanceGraphViewBaseC1Ev+0xf9c>
            return int(fs + 0.5f);
 8009158:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800915c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009160:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009164:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009168:	4628      	mov	r0, r5
 800916a:	f00b ff91 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800916e:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009172:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009176:	eeb1 7a08 	vmov.f32	s14, #24	; 0x40c00000  6.0
 800917a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800917e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009182:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009186:	f2c0 8540 	blt.w	8009c0a <_ZN23ResistanceGraphViewBaseC1Ev+0xfc6>
            return int(fs + 0.5f);
 800918a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800918e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009192:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009196:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800919a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800919e:	ed1f 7a50 	vldr	s14, [pc, #-320]	; 8009060 <_ZN23ResistanceGraphViewBaseC1Ev+0x41c>
 80091a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80091a6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80091aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80091ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80091b2:	f2c0 853f 	blt.w	8009c34 <_ZN23ResistanceGraphViewBaseC1Ev+0xff0>
            return int(fs + 0.5f);
 80091b6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80091ba:	ee77 7a87 	vadd.f32	s15, s15, s14
 80091be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80091c2:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80091c6:	4628      	mov	r0, r5
 80091c8:	f00b ff62 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80091cc:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80091d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80091d4:	eeb1 7a0c 	vmov.f32	s14, #28	; 0x40e00000  7.0
 80091d8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80091dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80091e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80091e4:	f2c0 853b 	blt.w	8009c5e <_ZN23ResistanceGraphViewBaseC1Ev+0x101a>
            return int(fs + 0.5f);
 80091e8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80091ec:	ee77 7a87 	vadd.f32	s15, s15, s14
 80091f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80091f4:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80091f8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80091fc:	ed1f 7a67 	vldr	s14, [pc, #-412]	; 8009064 <_ZN23ResistanceGraphViewBaseC1Ev+0x420>
 8009200:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009204:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009208:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800920c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009210:	f2c0 853a 	blt.w	8009c88 <_ZN23ResistanceGraphViewBaseC1Ev+0x1044>
            return int(fs + 0.5f);
 8009214:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009218:	ee77 7a87 	vadd.f32	s15, s15, s14
 800921c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009220:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009224:	4628      	mov	r0, r5
 8009226:	f00b ff33 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800922a:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 800922e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009232:	eeb2 7a02 	vmov.f32	s14, #34	; 0x41100000  9.0
 8009236:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800923a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800923e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009242:	f2c0 8536 	blt.w	8009cb2 <_ZN23ResistanceGraphViewBaseC1Ev+0x106e>
            return int(fs + 0.5f);
 8009246:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800924a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800924e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009252:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009256:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800925a:	ed1f 7a7d 	vldr	s14, [pc, #-500]	; 8009068 <_ZN23ResistanceGraphViewBaseC1Ev+0x424>
 800925e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009262:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009266:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800926a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800926e:	f2c0 8535 	blt.w	8009cdc <_ZN23ResistanceGraphViewBaseC1Ev+0x1098>
            return int(fs + 0.5f);
 8009272:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009276:	ee77 7a87 	vadd.f32	s15, s15, s14
 800927a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800927e:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009282:	4628      	mov	r0, r5
 8009284:	f00b ff04 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009288:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 800928c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009290:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8009294:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009298:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800929c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80092a0:	f2c0 8531 	blt.w	8009d06 <_ZN23ResistanceGraphViewBaseC1Ev+0x10c2>
            return int(fs + 0.5f);
 80092a4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80092a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80092ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80092b0:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80092b4:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80092b8:	ed1f 7a94 	vldr	s14, [pc, #-592]	; 800906c <_ZN23ResistanceGraphViewBaseC1Ev+0x428>
 80092bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80092c0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80092c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80092c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80092cc:	f2c0 8530 	blt.w	8009d30 <_ZN23ResistanceGraphViewBaseC1Ev+0x10ec>
            return int(fs + 0.5f);
 80092d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80092d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80092d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80092dc:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80092e0:	4628      	mov	r0, r5
 80092e2:	f00b fed5 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80092e6:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80092ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80092ee:	eeb2 7a06 	vmov.f32	s14, #38	; 0x41300000  11.0
 80092f2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80092f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80092fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80092fe:	f2c0 8531 	blt.w	8009d64 <_ZN23ResistanceGraphViewBaseC1Ev+0x1120>
            return int(fs + 0.5f);
 8009302:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009306:	ee77 7a87 	vadd.f32	s15, s15, s14
 800930a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800930e:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009312:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009316:	ed1f 7aaa 	vldr	s14, [pc, #-680]	; 8009070 <_ZN23ResistanceGraphViewBaseC1Ev+0x42c>
 800931a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800931e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009322:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800932a:	f2c0 8530 	blt.w	8009d8e <_ZN23ResistanceGraphViewBaseC1Ev+0x114a>
            return int(fs + 0.5f);
 800932e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009332:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009336:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800933a:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800933e:	4628      	mov	r0, r5
 8009340:	f00b fea6 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009344:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009348:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800934c:	eeb2 7a08 	vmov.f32	s14, #40	; 0x41400000  12.0
 8009350:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009354:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009358:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800935c:	f2c0 852c 	blt.w	8009db8 <_ZN23ResistanceGraphViewBaseC1Ev+0x1174>
            return int(fs + 0.5f);
 8009360:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009364:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009368:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800936c:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009370:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009374:	ed1f 7ac1 	vldr	s14, [pc, #-772]	; 8009074 <_ZN23ResistanceGraphViewBaseC1Ev+0x430>
 8009378:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800937c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009380:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009384:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009388:	f2c0 852b 	blt.w	8009de2 <_ZN23ResistanceGraphViewBaseC1Ev+0x119e>
            return int(fs + 0.5f);
 800938c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009390:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009394:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009398:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800939c:	4628      	mov	r0, r5
 800939e:	f00b fe77 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80093a2:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80093a6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80093aa:	eeb2 7a0c 	vmov.f32	s14, #44	; 0x41600000  14.0
 80093ae:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80093b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80093b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80093ba:	f2c0 8527 	blt.w	8009e0c <_ZN23ResistanceGraphViewBaseC1Ev+0x11c8>
            return int(fs + 0.5f);
 80093be:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80093c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80093c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80093ca:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80093ce:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80093d2:	ed1f 7ad7 	vldr	s14, [pc, #-860]	; 8009078 <_ZN23ResistanceGraphViewBaseC1Ev+0x434>
 80093d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80093da:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80093de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80093e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80093e6:	f2c0 8526 	blt.w	8009e36 <_ZN23ResistanceGraphViewBaseC1Ev+0x11f2>
            return int(fs + 0.5f);
 80093ea:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80093ee:	ee77 7a87 	vadd.f32	s15, s15, s14
 80093f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80093f6:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80093fa:	4628      	mov	r0, r5
 80093fc:	f00b fe48 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009400:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009404:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009408:	eeb2 7a0e 	vmov.f32	s14, #46	; 0x41700000  15.0
 800940c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009410:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009418:	f2c0 8522 	blt.w	8009e60 <_ZN23ResistanceGraphViewBaseC1Ev+0x121c>
            return int(fs + 0.5f);
 800941c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009420:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009424:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009428:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800942c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009430:	ed1f 7aee 	vldr	s14, [pc, #-952]	; 800907c <_ZN23ResistanceGraphViewBaseC1Ev+0x438>
 8009434:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009438:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800943c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009440:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009444:	f2c0 8521 	blt.w	8009e8a <_ZN23ResistanceGraphViewBaseC1Ev+0x1246>
            return int(fs + 0.5f);
 8009448:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800944c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009450:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009454:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009458:	4628      	mov	r0, r5
 800945a:	f00b fe19 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800945e:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009462:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009466:	eeb3 7a00 	vmov.f32	s14, #48	; 0x41800000  16.0
 800946a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800946e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009472:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009476:	f2c0 851d 	blt.w	8009eb4 <_ZN23ResistanceGraphViewBaseC1Ev+0x1270>
            return int(fs + 0.5f);
 800947a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800947e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009482:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009486:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800948a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800948e:	ed9f 7af1 	vldr	s14, [pc, #964]	; 8009854 <_ZN23ResistanceGraphViewBaseC1Ev+0xc10>
 8009492:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009496:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800949a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800949e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80094a2:	f2c0 851c 	blt.w	8009ede <_ZN23ResistanceGraphViewBaseC1Ev+0x129a>
            return int(fs + 0.5f);
 80094a6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80094aa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80094ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80094b2:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80094b6:	4628      	mov	r0, r5
 80094b8:	f00b fdea 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80094bc:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80094c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80094c4:	eeb3 7a01 	vmov.f32	s14, #49	; 0x41880000  17.0
 80094c8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80094cc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80094d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80094d4:	f2c0 8518 	blt.w	8009f08 <_ZN23ResistanceGraphViewBaseC1Ev+0x12c4>
            return int(fs + 0.5f);
 80094d8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80094dc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80094e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80094e4:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80094e8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80094ec:	ed9f 7ada 	vldr	s14, [pc, #872]	; 8009858 <_ZN23ResistanceGraphViewBaseC1Ev+0xc14>
 80094f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80094f4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80094f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80094fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009500:	f2c0 8517 	blt.w	8009f32 <_ZN23ResistanceGraphViewBaseC1Ev+0x12ee>
            return int(fs + 0.5f);
 8009504:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009508:	ee77 7a87 	vadd.f32	s15, s15, s14
 800950c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009510:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009514:	4628      	mov	r0, r5
 8009516:	f00b fdbb 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800951a:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 800951e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009522:	eeb3 7a02 	vmov.f32	s14, #50	; 0x41900000  18.0
 8009526:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800952a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800952e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009532:	f2c0 8513 	blt.w	8009f5c <_ZN23ResistanceGraphViewBaseC1Ev+0x1318>
            return int(fs + 0.5f);
 8009536:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800953a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800953e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009542:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009546:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800954a:	ed9f 7ac4 	vldr	s14, [pc, #784]	; 800985c <_ZN23ResistanceGraphViewBaseC1Ev+0xc18>
 800954e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009552:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009556:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800955a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800955e:	f2c0 8512 	blt.w	8009f86 <_ZN23ResistanceGraphViewBaseC1Ev+0x1342>
            return int(fs + 0.5f);
 8009562:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009566:	ee77 7a87 	vadd.f32	s15, s15, s14
 800956a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800956e:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009572:	4628      	mov	r0, r5
 8009574:	f00b fd8c 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009578:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 800957c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009580:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 8009584:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009588:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800958c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009590:	f2c0 850e 	blt.w	8009fb0 <_ZN23ResistanceGraphViewBaseC1Ev+0x136c>
            return int(fs + 0.5f);
 8009594:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009598:	ee77 7a87 	vadd.f32	s15, s15, s14
 800959c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80095a0:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80095a4:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80095a8:	ed9f 7aad 	vldr	s14, [pc, #692]	; 8009860 <_ZN23ResistanceGraphViewBaseC1Ev+0xc1c>
 80095ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80095b0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80095b4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80095b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80095bc:	f2c0 850d 	blt.w	8009fda <_ZN23ResistanceGraphViewBaseC1Ev+0x1396>
            return int(fs + 0.5f);
 80095c0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80095c4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80095c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80095cc:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80095d0:	4628      	mov	r0, r5
 80095d2:	f00b fd5d 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80095d6:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80095da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80095de:	eeb3 7a05 	vmov.f32	s14, #53	; 0x41a80000  21.0
 80095e2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80095e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80095ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80095ee:	f2c0 8509 	blt.w	800a004 <_ZN23ResistanceGraphViewBaseC1Ev+0x13c0>
            return int(fs + 0.5f);
 80095f2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80095f6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80095fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80095fe:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009602:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009606:	ed9f 7a97 	vldr	s14, [pc, #604]	; 8009864 <_ZN23ResistanceGraphViewBaseC1Ev+0xc20>
 800960a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800960e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009612:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009616:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800961a:	f2c0 8508 	blt.w	800a02e <_ZN23ResistanceGraphViewBaseC1Ev+0x13ea>
            return int(fs + 0.5f);
 800961e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009622:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009626:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800962a:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800962e:	4628      	mov	r0, r5
 8009630:	f00b fd2e 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009634:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009638:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800963c:	eeb3 7a06 	vmov.f32	s14, #54	; 0x41b00000  22.0
 8009640:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009644:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800964c:	f2c0 8504 	blt.w	800a058 <_ZN23ResistanceGraphViewBaseC1Ev+0x1414>
            return int(fs + 0.5f);
 8009650:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009654:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009658:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800965c:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009660:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009664:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8009868 <_ZN23ResistanceGraphViewBaseC1Ev+0xc24>
 8009668:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800966c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009670:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009678:	f2c0 8503 	blt.w	800a082 <_ZN23ResistanceGraphViewBaseC1Ev+0x143e>
            return int(fs + 0.5f);
 800967c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009680:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009684:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009688:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800968c:	4628      	mov	r0, r5
 800968e:	f00b fcff 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009692:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009696:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800969a:	eeb3 7a07 	vmov.f32	s14, #55	; 0x41b80000  23.0
 800969e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80096a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80096a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80096aa:	f2c0 84ff 	blt.w	800a0ac <_ZN23ResistanceGraphViewBaseC1Ev+0x1468>
            return int(fs + 0.5f);
 80096ae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80096b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80096b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80096ba:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80096be:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80096c2:	ed9f 7a6a 	vldr	s14, [pc, #424]	; 800986c <_ZN23ResistanceGraphViewBaseC1Ev+0xc28>
 80096c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80096ca:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80096ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80096d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80096d6:	f2c0 84fe 	blt.w	800a0d6 <_ZN23ResistanceGraphViewBaseC1Ev+0x1492>
            return int(fs + 0.5f);
 80096da:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80096de:	ee77 7a87 	vadd.f32	s15, s15, s14
 80096e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80096e6:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80096ea:	4628      	mov	r0, r5
 80096ec:	f00b fcd0 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80096f0:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80096f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80096f8:	eeb3 7a09 	vmov.f32	s14, #57	; 0x41c80000  25.0
 80096fc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009700:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009704:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009708:	f2c0 84fa 	blt.w	800a100 <_ZN23ResistanceGraphViewBaseC1Ev+0x14bc>
            return int(fs + 0.5f);
 800970c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009710:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009714:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009718:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800971c:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009720:	ed9f 7a53 	vldr	s14, [pc, #332]	; 8009870 <_ZN23ResistanceGraphViewBaseC1Ev+0xc2c>
 8009724:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009728:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800972c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009730:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009734:	f2c0 84f9 	blt.w	800a12a <_ZN23ResistanceGraphViewBaseC1Ev+0x14e6>
            return int(fs + 0.5f);
 8009738:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800973c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009740:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009744:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009748:	4628      	mov	r0, r5
 800974a:	f00b fca1 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800974e:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009752:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009756:	eeb3 7a0a 	vmov.f32	s14, #58	; 0x41d00000  26.0
 800975a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800975e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009766:	f2c0 84f5 	blt.w	800a154 <_ZN23ResistanceGraphViewBaseC1Ev+0x1510>
            return int(fs + 0.5f);
 800976a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800976e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009772:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009776:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800977a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800977e:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 8009874 <_ZN23ResistanceGraphViewBaseC1Ev+0xc30>
 8009782:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009786:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800978a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800978e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009792:	f2c0 84f4 	blt.w	800a17e <_ZN23ResistanceGraphViewBaseC1Ev+0x153a>
            return int(fs + 0.5f);
 8009796:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800979a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800979e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80097a2:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80097a6:	4628      	mov	r0, r5
 80097a8:	f00b fc72 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80097ac:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80097b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80097b4:	eeb3 7a0b 	vmov.f32	s14, #59	; 0x41d80000  27.0
 80097b8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80097bc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80097c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80097c4:	f2c0 84f0 	blt.w	800a1a8 <_ZN23ResistanceGraphViewBaseC1Ev+0x1564>
            return int(fs + 0.5f);
 80097c8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80097cc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80097d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80097d4:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80097d8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80097dc:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8009878 <_ZN23ResistanceGraphViewBaseC1Ev+0xc34>
 80097e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80097e4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80097e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80097ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80097f0:	f2c0 84ef 	blt.w	800a1d2 <_ZN23ResistanceGraphViewBaseC1Ev+0x158e>
            return int(fs + 0.5f);
 80097f4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80097f8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80097fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009800:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009804:	4628      	mov	r0, r5
 8009806:	f00b fc43 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800980a:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 800980e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009812:	eeb3 7a0c 	vmov.f32	s14, #60	; 0x41e00000  28.0
 8009816:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800981a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800981e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009822:	f2c0 84eb 	blt.w	800a1fc <_ZN23ResistanceGraphViewBaseC1Ev+0x15b8>
            return int(fs + 0.5f);
 8009826:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800982a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800982e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009832:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009836:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800983a:	ed9f 7a10 	vldr	s14, [pc, #64]	; 800987c <_ZN23ResistanceGraphViewBaseC1Ev+0xc38>
 800983e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009842:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009846:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800984a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800984e:	f2c0 84ea 	blt.w	800a226 <_ZN23ResistanceGraphViewBaseC1Ev+0x15e2>
 8009852:	e019      	b.n	8009888 <_ZN23ResistanceGraphViewBaseC1Ev+0xc44>
 8009854:	41dcc49c 	.word	0x41dcc49c
 8009858:	428b9fbe 	.word	0x428b9fbe
 800985c:	42abe1cb 	.word	0x42abe1cb
 8009860:	c19a76c9 	.word	0xc19a76c9
 8009864:	4295deb8 	.word	0x4295deb8
 8009868:	435d48b4 	.word	0x435d48b4
 800986c:	430ccf9e 	.word	0x430ccf9e
 8009870:	42d9851f 	.word	0x42d9851f
 8009874:	4335076d 	.word	0x4335076d
 8009878:	42737df4 	.word	0x42737df4
 800987c:	c234cdd3 	.word	0xc234cdd3
 8009880:	42a58b44 	.word	0x42a58b44
 8009884:	42f69eb8 	.word	0x42f69eb8
            return int(fs + 0.5f);
 8009888:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800988c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009890:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009894:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009898:	4628      	mov	r0, r5
 800989a:	f00b fbf9 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800989e:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80098a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80098a6:	eeb3 7a0e 	vmov.f32	s14, #62	; 0x41f00000  30.0
 80098aa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80098ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80098b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80098b6:	f2c0 84cb 	blt.w	800a250 <_ZN23ResistanceGraphViewBaseC1Ev+0x160c>
            return int(fs + 0.5f);
 80098ba:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80098be:	ee77 7a87 	vadd.f32	s15, s15, s14
 80098c2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80098c6:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80098ca:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80098ce:	ed1f 7a14 	vldr	s14, [pc, #-80]	; 8009880 <_ZN23ResistanceGraphViewBaseC1Ev+0xc3c>
 80098d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80098d6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80098da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80098de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80098e2:	f2c0 84ca 	blt.w	800a27a <_ZN23ResistanceGraphViewBaseC1Ev+0x1636>
            return int(fs + 0.5f);
 80098e6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80098ea:	ee77 7a87 	vadd.f32	s15, s15, s14
 80098ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80098f2:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80098f6:	4628      	mov	r0, r5
 80098f8:	f00b fbca 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80098fc:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009900:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009904:	eeb3 7a0f 	vmov.f32	s14, #63	; 0x41f80000  31.0
 8009908:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800990c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009910:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009914:	f2c0 84c6 	blt.w	800a2a4 <_ZN23ResistanceGraphViewBaseC1Ev+0x1660>
            return int(fs + 0.5f);
 8009918:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800991c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009920:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009924:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009928:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800992c:	ed1f 7a2b 	vldr	s14, [pc, #-172]	; 8009884 <_ZN23ResistanceGraphViewBaseC1Ev+0xc40>
 8009930:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009934:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009938:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800993c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009940:	f2c0 84c5 	blt.w	800a2ce <_ZN23ResistanceGraphViewBaseC1Ev+0x168a>
            return int(fs + 0.5f);
 8009944:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009948:	ee77 7a87 	vadd.f32	s15, s15, s14
 800994c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009950:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009954:	4628      	mov	r0, r5
 8009956:	f00b fb9b 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
    ReturnToList.setXY(130, 180);
 800995a:	ee18 0a10 	vmov	r0, s16
 800995e:	22b4      	movs	r2, #180	; 0xb4
 8009960:	2182      	movs	r1, #130	; 0x82
 8009962:	f7f9 ff6d 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 8009966:	2303      	movs	r3, #3
 8009968:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800996c:	f04f 0304 	mov.w	r3, #4
    ReturnToList.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID));
 8009970:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8009974:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009978:	230a      	movs	r3, #10
 800997a:	ee18 0a10 	vmov	r0, s16
 800997e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009982:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8009986:	aa0a      	add	r2, sp, #40	; 0x28
 8009988:	ab0b      	add	r3, sp, #44	; 0x2c
 800998a:	a909      	add	r1, sp, #36	; 0x24
 800998c:	f8cd 8000 	str.w	r8, [sp]
 8009990:	f00d fd5d 	bl	801744e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8009994:	4bf1      	ldr	r3, [pc, #964]	; (8009d5c <_ZN23ResistanceGraphViewBaseC1Ev+0x1118>)
 8009996:	f8c4 3454 	str.w	r3, [r4, #1108]	; 0x454
    ReturnToList.setAction(buttonCallback);
 800999a:	f504 639d 	add.w	r3, r4, #1256	; 0x4e8
 800999e:	f8c4 3444 	str.w	r3, [r4, #1092]	; 0x444
    textArea1.setXY(243, 185);
 80099a2:	4650      	mov	r0, sl
 80099a4:	22b9      	movs	r2, #185	; 0xb9
 80099a6:	21f3      	movs	r1, #243	; 0xf3
 80099a8:	f7f9 ff4a 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 80099ac:	ae04      	add	r6, sp, #16
        this->color = color;
 80099ae:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        linespace = space;
 80099b2:	f04f 0200 	mov.w	r2, #0
        this->color = color;
 80099b6:	f8c4 3488 	str.w	r3, [r4, #1160]	; 0x488
        linespace = space;
 80099ba:	f8a4 248c 	strh.w	r2, [r4, #1164]	; 0x48c
        boundingArea = calculateBoundingArea();
 80099be:	4651      	mov	r1, sl
 80099c0:	4630      	mov	r0, r6
 80099c2:	f00c ff45 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80099c6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80099ca:	f10a 0c3c 	add.w	ip, sl, #60	; 0x3c
 80099ce:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        : typedTextId(id)
 80099d2:	4be3      	ldr	r3, [pc, #908]	; (8009d60 <_ZN23ResistanceGraphViewBaseC1Ev+0x111c>)
 80099d4:	930c      	str	r3, [sp, #48]	; 0x30
 80099d6:	2205      	movs	r2, #5
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4YA4));
 80099d8:	4641      	mov	r1, r8
 80099da:	4650      	mov	r0, sl
 80099dc:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80099e0:	f00d fa7c 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea1_1.setXY(13, 12);
 80099e4:	4638      	mov	r0, r7
 80099e6:	220c      	movs	r2, #12
 80099e8:	210d      	movs	r1, #13
 80099ea:	f7f9 ff29 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80099ee:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        linespace = space;
 80099f2:	f04f 0200 	mov.w	r2, #0
        this->color = color;
 80099f6:	f8c4 34d0 	str.w	r3, [r4, #1232]	; 0x4d0
        linespace = space;
 80099fa:	f8a4 24d4 	strh.w	r2, [r4, #1236]	; 0x4d4
        boundingArea = calculateBoundingArea();
 80099fe:	4639      	mov	r1, r7
 8009a00:	4630      	mov	r0, r6
 8009a02:	f00c ff25 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009a06:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8009a0a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8009a0e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009a12:	4bd3      	ldr	r3, [pc, #844]	; (8009d60 <_ZN23ResistanceGraphViewBaseC1Ev+0x111c>)
 8009a14:	930c      	str	r3, [sp, #48]	; 0x30
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X8L));
 8009a16:	4641      	mov	r1, r8
 8009a18:	f04f 0304 	mov.w	r3, #4
 8009a1c:	4638      	mov	r0, r7
 8009a1e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8009a22:	f00d fa5b 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009a26:	1d20      	adds	r0, r4, #4
 8009a28:	4649      	mov	r1, r9
 8009a2a:	9003      	str	r0, [sp, #12]
 8009a2c:	f008 fa16 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009a30:	9803      	ldr	r0, [sp, #12]
 8009a32:	4659      	mov	r1, fp
 8009a34:	f008 fa12 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009a38:	9803      	ldr	r0, [sp, #12]
 8009a3a:	4629      	mov	r1, r5
 8009a3c:	f008 fa0e 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009a40:	ee18 1a10 	vmov	r1, s16
 8009a44:	9803      	ldr	r0, [sp, #12]
 8009a46:	f008 fa09 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009a4a:	9803      	ldr	r0, [sp, #12]
 8009a4c:	4651      	mov	r1, sl
 8009a4e:	f008 fa05 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009a52:	9803      	ldr	r0, [sp, #12]
 8009a54:	4639      	mov	r1, r7
 8009a56:	f008 fa01 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009a5a:	4620      	mov	r0, r4
 8009a5c:	b00f      	add	sp, #60	; 0x3c
 8009a5e:	ecbd 8b08 	vpop	{d8-d11}
 8009a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 8009a66:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009a6a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009a6e:	ee17 3a10 	vmov	r3, s14
 8009a72:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009a76:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009a7a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009a7e:	1e59      	subs	r1, r3, #1
 8009a80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a84:	ee17 3a90 	vmov	r3, s15
 8009a88:	440b      	add	r3, r1
 8009a8a:	4619      	mov	r1, r3
 8009a8c:	f7ff ba65 	b.w	8008f5a <_ZN23ResistanceGraphViewBaseC1Ev+0x316>
 8009a90:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009a94:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009a98:	ee17 3a10 	vmov	r3, s14
 8009a9c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009aa0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009aa4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009aa8:	1e5a      	subs	r2, r3, #1
 8009aaa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009aae:	ee17 3a90 	vmov	r3, s15
 8009ab2:	4413      	add	r3, r2
 8009ab4:	461a      	mov	r2, r3
 8009ab6:	f7ff ba66 	b.w	8008f86 <_ZN23ResistanceGraphViewBaseC1Ev+0x342>
 8009aba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009abe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009ac2:	ee17 3a10 	vmov	r3, s14
 8009ac6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009aca:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009ace:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ad2:	1e59      	subs	r1, r3, #1
 8009ad4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ad8:	ee17 3a90 	vmov	r3, s15
 8009adc:	440b      	add	r3, r1
 8009ade:	4619      	mov	r1, r3
 8009ae0:	f7ff ba66 	b.w	8008fb0 <_ZN23ResistanceGraphViewBaseC1Ev+0x36c>
 8009ae4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009ae8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009aec:	ee17 3a10 	vmov	r3, s14
 8009af0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009af4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009af8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009afc:	1e5a      	subs	r2, r3, #1
 8009afe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b02:	ee17 3a90 	vmov	r3, s15
 8009b06:	4413      	add	r3, r2
 8009b08:	461a      	mov	r2, r3
 8009b0a:	f7ff ba67 	b.w	8008fdc <_ZN23ResistanceGraphViewBaseC1Ev+0x398>
 8009b0e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009b12:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009b16:	ee17 3a10 	vmov	r3, s14
 8009b1a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009b1e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009b22:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009b26:	1e59      	subs	r1, r3, #1
 8009b28:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b2c:	ee17 3a90 	vmov	r3, s15
 8009b30:	440b      	add	r3, r1
 8009b32:	4619      	mov	r1, r3
 8009b34:	f7ff baa4 	b.w	8009080 <_ZN23ResistanceGraphViewBaseC1Ev+0x43c>
 8009b38:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009b3c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009b40:	ee17 3a10 	vmov	r3, s14
 8009b44:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009b48:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009b4c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009b50:	1e5a      	subs	r2, r3, #1
 8009b52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b56:	ee17 3a90 	vmov	r3, s15
 8009b5a:	4413      	add	r3, r2
 8009b5c:	461a      	mov	r2, r3
 8009b5e:	f7ff baa5 	b.w	80090ac <_ZN23ResistanceGraphViewBaseC1Ev+0x468>
 8009b62:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009b66:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009b6a:	ee17 3a10 	vmov	r3, s14
 8009b6e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009b72:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009b76:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009b7a:	1e59      	subs	r1, r3, #1
 8009b7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b80:	ee17 3a90 	vmov	r3, s15
 8009b84:	440b      	add	r3, r1
 8009b86:	4619      	mov	r1, r3
 8009b88:	f7ff baa9 	b.w	80090de <_ZN23ResistanceGraphViewBaseC1Ev+0x49a>
 8009b8c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009b90:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009b94:	ee17 3a10 	vmov	r3, s14
 8009b98:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009b9c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009ba0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ba4:	1e5a      	subs	r2, r3, #1
 8009ba6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009baa:	ee17 3a90 	vmov	r3, s15
 8009bae:	4413      	add	r3, r2
 8009bb0:	461a      	mov	r2, r3
 8009bb2:	f7ff baaa 	b.w	800910a <_ZN23ResistanceGraphViewBaseC1Ev+0x4c6>
 8009bb6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009bba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009bbe:	ee17 3a10 	vmov	r3, s14
 8009bc2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009bc6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009bca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009bce:	1e59      	subs	r1, r3, #1
 8009bd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009bd4:	ee17 3a90 	vmov	r3, s15
 8009bd8:	440b      	add	r3, r1
 8009bda:	4619      	mov	r1, r3
 8009bdc:	f7ff baae 	b.w	800913c <_ZN23ResistanceGraphViewBaseC1Ev+0x4f8>
 8009be0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009be4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009be8:	ee17 3a10 	vmov	r3, s14
 8009bec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009bf0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009bf4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009bf8:	1e5a      	subs	r2, r3, #1
 8009bfa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009bfe:	ee17 3a90 	vmov	r3, s15
 8009c02:	4413      	add	r3, r2
 8009c04:	461a      	mov	r2, r3
 8009c06:	f7ff baaf 	b.w	8009168 <_ZN23ResistanceGraphViewBaseC1Ev+0x524>
 8009c0a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009c0e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009c12:	ee17 3a10 	vmov	r3, s14
 8009c16:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009c1a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009c1e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009c22:	1e59      	subs	r1, r3, #1
 8009c24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c28:	ee17 3a90 	vmov	r3, s15
 8009c2c:	440b      	add	r3, r1
 8009c2e:	4619      	mov	r1, r3
 8009c30:	f7ff bab3 	b.w	800919a <_ZN23ResistanceGraphViewBaseC1Ev+0x556>
 8009c34:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009c38:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009c3c:	ee17 3a10 	vmov	r3, s14
 8009c40:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009c44:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009c48:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009c4c:	1e5a      	subs	r2, r3, #1
 8009c4e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c52:	ee17 3a90 	vmov	r3, s15
 8009c56:	4413      	add	r3, r2
 8009c58:	461a      	mov	r2, r3
 8009c5a:	f7ff bab4 	b.w	80091c6 <_ZN23ResistanceGraphViewBaseC1Ev+0x582>
 8009c5e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009c62:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009c66:	ee17 3a10 	vmov	r3, s14
 8009c6a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009c6e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009c72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009c76:	1e59      	subs	r1, r3, #1
 8009c78:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c7c:	ee17 3a90 	vmov	r3, s15
 8009c80:	440b      	add	r3, r1
 8009c82:	4619      	mov	r1, r3
 8009c84:	f7ff bab8 	b.w	80091f8 <_ZN23ResistanceGraphViewBaseC1Ev+0x5b4>
 8009c88:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009c8c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009c90:	ee17 3a10 	vmov	r3, s14
 8009c94:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009c98:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009c9c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ca0:	1e5a      	subs	r2, r3, #1
 8009ca2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ca6:	ee17 3a90 	vmov	r3, s15
 8009caa:	4413      	add	r3, r2
 8009cac:	461a      	mov	r2, r3
 8009cae:	f7ff bab9 	b.w	8009224 <_ZN23ResistanceGraphViewBaseC1Ev+0x5e0>
 8009cb2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009cb6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009cba:	ee17 3a10 	vmov	r3, s14
 8009cbe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009cc2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009cc6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009cca:	1e59      	subs	r1, r3, #1
 8009ccc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009cd0:	ee17 3a90 	vmov	r3, s15
 8009cd4:	440b      	add	r3, r1
 8009cd6:	4619      	mov	r1, r3
 8009cd8:	f7ff babd 	b.w	8009256 <_ZN23ResistanceGraphViewBaseC1Ev+0x612>
 8009cdc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009ce0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009ce4:	ee17 3a10 	vmov	r3, s14
 8009ce8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009cec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009cf0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009cf4:	1e5a      	subs	r2, r3, #1
 8009cf6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009cfa:	ee17 3a90 	vmov	r3, s15
 8009cfe:	4413      	add	r3, r2
 8009d00:	461a      	mov	r2, r3
 8009d02:	f7ff babe 	b.w	8009282 <_ZN23ResistanceGraphViewBaseC1Ev+0x63e>
 8009d06:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009d0a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009d0e:	ee17 3a10 	vmov	r3, s14
 8009d12:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009d16:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009d1a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d1e:	1e59      	subs	r1, r3, #1
 8009d20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d24:	ee17 3a90 	vmov	r3, s15
 8009d28:	440b      	add	r3, r1
 8009d2a:	4619      	mov	r1, r3
 8009d2c:	f7ff bac2 	b.w	80092b4 <_ZN23ResistanceGraphViewBaseC1Ev+0x670>
 8009d30:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009d34:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009d38:	ee17 3a10 	vmov	r3, s14
 8009d3c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009d40:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009d44:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d48:	1e5a      	subs	r2, r3, #1
 8009d4a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d4e:	ee17 3a90 	vmov	r3, s15
 8009d52:	4413      	add	r3, r2
 8009d54:	461a      	mov	r2, r3
 8009d56:	f7ff bac3 	b.w	80092e0 <_ZN23ResistanceGraphViewBaseC1Ev+0x69c>
 8009d5a:	bf00      	nop
 8009d5c:	0016000f 	.word	0x0016000f
 8009d60:	0802f844 	.word	0x0802f844
 8009d64:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009d68:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009d6c:	ee17 3a10 	vmov	r3, s14
 8009d70:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009d74:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009d78:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d7c:	1e59      	subs	r1, r3, #1
 8009d7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d82:	ee17 3a90 	vmov	r3, s15
 8009d86:	440b      	add	r3, r1
 8009d88:	4619      	mov	r1, r3
 8009d8a:	f7ff bac2 	b.w	8009312 <_ZN23ResistanceGraphViewBaseC1Ev+0x6ce>
 8009d8e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009d92:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009d96:	ee17 3a10 	vmov	r3, s14
 8009d9a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009d9e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009da2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009da6:	1e5a      	subs	r2, r3, #1
 8009da8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009dac:	ee17 3a90 	vmov	r3, s15
 8009db0:	4413      	add	r3, r2
 8009db2:	461a      	mov	r2, r3
 8009db4:	f7ff bac3 	b.w	800933e <_ZN23ResistanceGraphViewBaseC1Ev+0x6fa>
 8009db8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009dbc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009dc0:	ee17 3a10 	vmov	r3, s14
 8009dc4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009dc8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009dcc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009dd0:	1e59      	subs	r1, r3, #1
 8009dd2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009dd6:	ee17 3a90 	vmov	r3, s15
 8009dda:	440b      	add	r3, r1
 8009ddc:	4619      	mov	r1, r3
 8009dde:	f7ff bac7 	b.w	8009370 <_ZN23ResistanceGraphViewBaseC1Ev+0x72c>
 8009de2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009de6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009dea:	ee17 3a10 	vmov	r3, s14
 8009dee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009df2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009df6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009dfa:	1e5a      	subs	r2, r3, #1
 8009dfc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e00:	ee17 3a90 	vmov	r3, s15
 8009e04:	4413      	add	r3, r2
 8009e06:	461a      	mov	r2, r3
 8009e08:	f7ff bac8 	b.w	800939c <_ZN23ResistanceGraphViewBaseC1Ev+0x758>
 8009e0c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009e10:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009e14:	ee17 3a10 	vmov	r3, s14
 8009e18:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009e1c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009e20:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009e24:	1e59      	subs	r1, r3, #1
 8009e26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e2a:	ee17 3a90 	vmov	r3, s15
 8009e2e:	440b      	add	r3, r1
 8009e30:	4619      	mov	r1, r3
 8009e32:	f7ff bacc 	b.w	80093ce <_ZN23ResistanceGraphViewBaseC1Ev+0x78a>
 8009e36:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009e3a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009e3e:	ee17 3a10 	vmov	r3, s14
 8009e42:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009e46:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009e4a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009e4e:	1e5a      	subs	r2, r3, #1
 8009e50:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e54:	ee17 3a90 	vmov	r3, s15
 8009e58:	4413      	add	r3, r2
 8009e5a:	461a      	mov	r2, r3
 8009e5c:	f7ff bacd 	b.w	80093fa <_ZN23ResistanceGraphViewBaseC1Ev+0x7b6>
 8009e60:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009e64:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009e68:	ee17 3a10 	vmov	r3, s14
 8009e6c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009e70:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009e74:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009e78:	1e59      	subs	r1, r3, #1
 8009e7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e7e:	ee17 3a90 	vmov	r3, s15
 8009e82:	440b      	add	r3, r1
 8009e84:	4619      	mov	r1, r3
 8009e86:	f7ff bad1 	b.w	800942c <_ZN23ResistanceGraphViewBaseC1Ev+0x7e8>
 8009e8a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009e8e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009e92:	ee17 3a10 	vmov	r3, s14
 8009e96:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009e9a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009e9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ea2:	1e5a      	subs	r2, r3, #1
 8009ea4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ea8:	ee17 3a90 	vmov	r3, s15
 8009eac:	4413      	add	r3, r2
 8009eae:	461a      	mov	r2, r3
 8009eb0:	f7ff bad2 	b.w	8009458 <_ZN23ResistanceGraphViewBaseC1Ev+0x814>
 8009eb4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009eb8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009ebc:	ee17 3a10 	vmov	r3, s14
 8009ec0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009ec4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009ec8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ecc:	1e59      	subs	r1, r3, #1
 8009ece:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ed2:	ee17 3a90 	vmov	r3, s15
 8009ed6:	440b      	add	r3, r1
 8009ed8:	4619      	mov	r1, r3
 8009eda:	f7ff bad6 	b.w	800948a <_ZN23ResistanceGraphViewBaseC1Ev+0x846>
 8009ede:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009ee2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009ee6:	ee17 3a10 	vmov	r3, s14
 8009eea:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009eee:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009ef2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ef6:	1e5a      	subs	r2, r3, #1
 8009ef8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009efc:	ee17 3a90 	vmov	r3, s15
 8009f00:	4413      	add	r3, r2
 8009f02:	461a      	mov	r2, r3
 8009f04:	f7ff bad7 	b.w	80094b6 <_ZN23ResistanceGraphViewBaseC1Ev+0x872>
 8009f08:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009f0c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009f10:	ee17 3a10 	vmov	r3, s14
 8009f14:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009f18:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009f1c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f20:	1e59      	subs	r1, r3, #1
 8009f22:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f26:	ee17 3a90 	vmov	r3, s15
 8009f2a:	440b      	add	r3, r1
 8009f2c:	4619      	mov	r1, r3
 8009f2e:	f7ff badb 	b.w	80094e8 <_ZN23ResistanceGraphViewBaseC1Ev+0x8a4>
 8009f32:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009f36:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009f3a:	ee17 3a10 	vmov	r3, s14
 8009f3e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009f42:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009f46:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f4a:	1e5a      	subs	r2, r3, #1
 8009f4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f50:	ee17 3a90 	vmov	r3, s15
 8009f54:	4413      	add	r3, r2
 8009f56:	461a      	mov	r2, r3
 8009f58:	f7ff badc 	b.w	8009514 <_ZN23ResistanceGraphViewBaseC1Ev+0x8d0>
 8009f5c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009f60:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009f64:	ee17 3a10 	vmov	r3, s14
 8009f68:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009f6c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009f70:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f74:	1e59      	subs	r1, r3, #1
 8009f76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f7a:	ee17 3a90 	vmov	r3, s15
 8009f7e:	440b      	add	r3, r1
 8009f80:	4619      	mov	r1, r3
 8009f82:	f7ff bae0 	b.w	8009546 <_ZN23ResistanceGraphViewBaseC1Ev+0x902>
 8009f86:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009f8a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009f8e:	ee17 3a10 	vmov	r3, s14
 8009f92:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009f96:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009f9a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f9e:	1e5a      	subs	r2, r3, #1
 8009fa0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009fa4:	ee17 3a90 	vmov	r3, s15
 8009fa8:	4413      	add	r3, r2
 8009faa:	461a      	mov	r2, r3
 8009fac:	f7ff bae1 	b.w	8009572 <_ZN23ResistanceGraphViewBaseC1Ev+0x92e>
 8009fb0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009fb4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009fb8:	ee17 3a10 	vmov	r3, s14
 8009fbc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009fc0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009fc4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009fc8:	1e59      	subs	r1, r3, #1
 8009fca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009fce:	ee17 3a90 	vmov	r3, s15
 8009fd2:	440b      	add	r3, r1
 8009fd4:	4619      	mov	r1, r3
 8009fd6:	f7ff bae5 	b.w	80095a4 <_ZN23ResistanceGraphViewBaseC1Ev+0x960>
 8009fda:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009fde:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009fe2:	ee17 3a10 	vmov	r3, s14
 8009fe6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009fea:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009fee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ff2:	1e5a      	subs	r2, r3, #1
 8009ff4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ff8:	ee17 3a90 	vmov	r3, s15
 8009ffc:	4413      	add	r3, r2
 8009ffe:	461a      	mov	r2, r3
 800a000:	f7ff bae6 	b.w	80095d0 <_ZN23ResistanceGraphViewBaseC1Ev+0x98c>
 800a004:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a008:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a00c:	ee17 3a10 	vmov	r3, s14
 800a010:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a014:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a018:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a01c:	1e59      	subs	r1, r3, #1
 800a01e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a022:	ee17 3a90 	vmov	r3, s15
 800a026:	440b      	add	r3, r1
 800a028:	4619      	mov	r1, r3
 800a02a:	f7ff baea 	b.w	8009602 <_ZN23ResistanceGraphViewBaseC1Ev+0x9be>
 800a02e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a032:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a036:	ee17 3a10 	vmov	r3, s14
 800a03a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a03e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a042:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a046:	1e5a      	subs	r2, r3, #1
 800a048:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a04c:	ee17 3a90 	vmov	r3, s15
 800a050:	4413      	add	r3, r2
 800a052:	461a      	mov	r2, r3
 800a054:	f7ff baeb 	b.w	800962e <_ZN23ResistanceGraphViewBaseC1Ev+0x9ea>
 800a058:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a05c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a060:	ee17 3a10 	vmov	r3, s14
 800a064:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a068:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a06c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a070:	1e59      	subs	r1, r3, #1
 800a072:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a076:	ee17 3a90 	vmov	r3, s15
 800a07a:	440b      	add	r3, r1
 800a07c:	4619      	mov	r1, r3
 800a07e:	f7ff baef 	b.w	8009660 <_ZN23ResistanceGraphViewBaseC1Ev+0xa1c>
 800a082:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a086:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a08a:	ee17 3a10 	vmov	r3, s14
 800a08e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a092:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a096:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a09a:	1e5a      	subs	r2, r3, #1
 800a09c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a0a0:	ee17 3a90 	vmov	r3, s15
 800a0a4:	4413      	add	r3, r2
 800a0a6:	461a      	mov	r2, r3
 800a0a8:	f7ff baf0 	b.w	800968c <_ZN23ResistanceGraphViewBaseC1Ev+0xa48>
 800a0ac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a0b0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a0b4:	ee17 3a10 	vmov	r3, s14
 800a0b8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a0bc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a0c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a0c4:	1e59      	subs	r1, r3, #1
 800a0c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a0ca:	ee17 3a90 	vmov	r3, s15
 800a0ce:	440b      	add	r3, r1
 800a0d0:	4619      	mov	r1, r3
 800a0d2:	f7ff baf4 	b.w	80096be <_ZN23ResistanceGraphViewBaseC1Ev+0xa7a>
 800a0d6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a0da:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a0de:	ee17 3a10 	vmov	r3, s14
 800a0e2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a0e6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a0ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a0ee:	1e5a      	subs	r2, r3, #1
 800a0f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a0f4:	ee17 3a90 	vmov	r3, s15
 800a0f8:	4413      	add	r3, r2
 800a0fa:	461a      	mov	r2, r3
 800a0fc:	f7ff baf5 	b.w	80096ea <_ZN23ResistanceGraphViewBaseC1Ev+0xaa6>
 800a100:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a104:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a108:	ee17 3a10 	vmov	r3, s14
 800a10c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a110:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a114:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a118:	1e59      	subs	r1, r3, #1
 800a11a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a11e:	ee17 3a90 	vmov	r3, s15
 800a122:	440b      	add	r3, r1
 800a124:	4619      	mov	r1, r3
 800a126:	f7ff baf9 	b.w	800971c <_ZN23ResistanceGraphViewBaseC1Ev+0xad8>
 800a12a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a12e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a132:	ee17 3a10 	vmov	r3, s14
 800a136:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a13a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a13e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a142:	1e5a      	subs	r2, r3, #1
 800a144:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a148:	ee17 3a90 	vmov	r3, s15
 800a14c:	4413      	add	r3, r2
 800a14e:	461a      	mov	r2, r3
 800a150:	f7ff bafa 	b.w	8009748 <_ZN23ResistanceGraphViewBaseC1Ev+0xb04>
 800a154:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a158:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a15c:	ee17 3a10 	vmov	r3, s14
 800a160:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a164:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a168:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a16c:	1e59      	subs	r1, r3, #1
 800a16e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a172:	ee17 3a90 	vmov	r3, s15
 800a176:	440b      	add	r3, r1
 800a178:	4619      	mov	r1, r3
 800a17a:	f7ff bafe 	b.w	800977a <_ZN23ResistanceGraphViewBaseC1Ev+0xb36>
 800a17e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a182:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a186:	ee17 3a10 	vmov	r3, s14
 800a18a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a18e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a192:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a196:	1e5a      	subs	r2, r3, #1
 800a198:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a19c:	ee17 3a90 	vmov	r3, s15
 800a1a0:	4413      	add	r3, r2
 800a1a2:	461a      	mov	r2, r3
 800a1a4:	f7ff baff 	b.w	80097a6 <_ZN23ResistanceGraphViewBaseC1Ev+0xb62>
 800a1a8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a1ac:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a1b0:	ee17 3a10 	vmov	r3, s14
 800a1b4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a1b8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a1bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a1c0:	1e59      	subs	r1, r3, #1
 800a1c2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a1c6:	ee17 3a90 	vmov	r3, s15
 800a1ca:	440b      	add	r3, r1
 800a1cc:	4619      	mov	r1, r3
 800a1ce:	f7ff bb03 	b.w	80097d8 <_ZN23ResistanceGraphViewBaseC1Ev+0xb94>
 800a1d2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a1d6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a1da:	ee17 3a10 	vmov	r3, s14
 800a1de:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a1e2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a1e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a1ea:	1e5a      	subs	r2, r3, #1
 800a1ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a1f0:	ee17 3a90 	vmov	r3, s15
 800a1f4:	4413      	add	r3, r2
 800a1f6:	461a      	mov	r2, r3
 800a1f8:	f7ff bb04 	b.w	8009804 <_ZN23ResistanceGraphViewBaseC1Ev+0xbc0>
 800a1fc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a200:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a204:	ee17 3a10 	vmov	r3, s14
 800a208:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a20c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a210:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a214:	1e59      	subs	r1, r3, #1
 800a216:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a21a:	ee17 3a90 	vmov	r3, s15
 800a21e:	440b      	add	r3, r1
 800a220:	4619      	mov	r1, r3
 800a222:	f7ff bb08 	b.w	8009836 <_ZN23ResistanceGraphViewBaseC1Ev+0xbf2>
 800a226:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a22a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a22e:	ee17 3a10 	vmov	r3, s14
 800a232:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a236:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a23a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a23e:	1e5a      	subs	r2, r3, #1
 800a240:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a244:	ee17 3a90 	vmov	r3, s15
 800a248:	4413      	add	r3, r2
 800a24a:	461a      	mov	r2, r3
 800a24c:	f7ff bb24 	b.w	8009898 <_ZN23ResistanceGraphViewBaseC1Ev+0xc54>
 800a250:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a254:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a258:	ee17 3a10 	vmov	r3, s14
 800a25c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a260:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a264:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a268:	1e59      	subs	r1, r3, #1
 800a26a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a26e:	ee17 3a90 	vmov	r3, s15
 800a272:	440b      	add	r3, r1
 800a274:	4619      	mov	r1, r3
 800a276:	f7ff bb28 	b.w	80098ca <_ZN23ResistanceGraphViewBaseC1Ev+0xc86>
 800a27a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a27e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a282:	ee17 3a10 	vmov	r3, s14
 800a286:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a28a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a28e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a292:	1e5a      	subs	r2, r3, #1
 800a294:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a298:	ee17 3a90 	vmov	r3, s15
 800a29c:	4413      	add	r3, r2
 800a29e:	461a      	mov	r2, r3
 800a2a0:	f7ff bb29 	b.w	80098f6 <_ZN23ResistanceGraphViewBaseC1Ev+0xcb2>
 800a2a4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a2a8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a2ac:	ee17 3a10 	vmov	r3, s14
 800a2b0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a2b4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a2b8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a2bc:	1e59      	subs	r1, r3, #1
 800a2be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a2c2:	ee17 3a90 	vmov	r3, s15
 800a2c6:	440b      	add	r3, r1
 800a2c8:	4619      	mov	r1, r3
 800a2ca:	f7ff bb2d 	b.w	8009928 <_ZN23ResistanceGraphViewBaseC1Ev+0xce4>
 800a2ce:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a2d2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a2d6:	ee17 3a10 	vmov	r3, s14
 800a2da:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a2de:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a2e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a2e6:	1e5a      	subs	r2, r3, #1
 800a2e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a2ec:	ee17 3a90 	vmov	r3, s15
 800a2f0:	4413      	add	r3, r2
 800a2f2:	461a      	mov	r2, r3
 800a2f4:	f7ff bb2e 	b.w	8009954 <_ZN23ResistanceGraphViewBaseC1Ev+0xd10>

0800a2f8 <_ZN24StartMeasurementViewBaseD1Ev>:

class StartMeasurementViewBase : public touchgfx::View<StartMeasurementPresenter>
{
public:
    StartMeasurementViewBase();
    virtual ~StartMeasurementViewBase() {}
 800a2f8:	4770      	bx	lr

0800a2fa <_ZN24StartMeasurementViewBase16StartMeasurementEv>:
     * Virtual Action Handlers
     */
    virtual void StartMeasurement()
    {
        // Override and implement this function in StartMeasurement
    }
 800a2fa:	4770      	bx	lr

0800a2fc <_ZN24StartMeasurementViewBase11setupScreenEv>:
}

void StartMeasurementViewBase::setupScreen()
{

}
 800a2fc:	4770      	bx	lr

0800a2fe <_ZN8touchgfx8CallbackI24StartMeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a2fe:	4770      	bx	lr

0800a300 <_ZN8touchgfx8CallbackI24StartMeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800a300:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800a302:	68c2      	ldr	r2, [r0, #12]
 800a304:	6844      	ldr	r4, [r0, #4]
 800a306:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800a308:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800a30a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a30e:	07d2      	lsls	r2, r2, #31
 800a310:	bf48      	it	mi
 800a312:	5962      	ldrmi	r2, [r4, r5]
 800a314:	689b      	ldr	r3, [r3, #8]
    }
 800a316:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800a318:	bf48      	it	mi
 800a31a:	58d3      	ldrmi	r3, [r2, r3]
 800a31c:	4718      	bx	r3

0800a31e <_ZNK8touchgfx8CallbackI24StartMeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800a31e:	6843      	ldr	r3, [r0, #4]
 800a320:	b12b      	cbz	r3, 800a32e <_ZNK8touchgfx8CallbackI24StartMeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800a322:	6883      	ldr	r3, [r0, #8]
 800a324:	b92b      	cbnz	r3, 800a332 <_ZNK8touchgfx8CallbackI24StartMeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800a326:	68c0      	ldr	r0, [r0, #12]
 800a328:	f000 0001 	and.w	r0, r0, #1
 800a32c:	4770      	bx	lr
 800a32e:	4618      	mov	r0, r3
 800a330:	4770      	bx	lr
 800a332:	2001      	movs	r0, #1
    }
 800a334:	4770      	bx	lr

0800a336 <_ZN8touchgfx8CallbackI24StartMeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a336:	b510      	push	{r4, lr}
 800a338:	2110      	movs	r1, #16
 800a33a:	4604      	mov	r4, r0
 800a33c:	f020 fef5 	bl	802b12a <_ZdlPvj>
 800a340:	4620      	mov	r0, r4
 800a342:	bd10      	pop	{r4, pc}

0800a344 <_ZN24StartMeasurementViewBaseD0Ev>:
    virtual ~StartMeasurementViewBase() {}
 800a344:	b510      	push	{r4, lr}
 800a346:	f44f 7194 	mov.w	r1, #296	; 0x128
 800a34a:	4604      	mov	r4, r0
 800a34c:	f020 feed 	bl	802b12a <_ZdlPvj>
 800a350:	4620      	mov	r0, r4
 800a352:	bd10      	pop	{r4, pc}

0800a354 <_ZN24StartMeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void StartMeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
 800a354:	f100 0298 	add.w	r2, r0, #152	; 0x98
 800a358:	428a      	cmp	r2, r1
{
 800a35a:	b508      	push	{r3, lr}
    if (&src == &toggleButton1)
 800a35c:	d108      	bne.n	800a370 <_ZN24StartMeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1c>
    {
        //Interaction1
        //When toggleButton1 clicked call virtual function
        //Call StartMeasurement
        StartMeasurement();
 800a35e:	6803      	ldr	r3, [r0, #0]
 800a360:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a362:	4798      	blx	r3

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800a364:	f00e fff8 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When Interaction1 completed change screen to ProgressBar
        //Go to ProgressBar with screen transition towards North
        application().gotoProgressBarScreenSlideTransitionNorth();
    }
}
 800a368:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoProgressBarScreenSlideTransitionNorth();
 800a36c:	f7fa bbe0 	b.w	8004b30 <_ZN23FrontendApplicationBase41gotoProgressBarScreenSlideTransitionNorthEv>
}
 800a370:	bd08      	pop	{r3, pc}
	...

0800a374 <_ZN24StartMeasurementViewBaseC1Ev>:
StartMeasurementViewBase::StartMeasurementViewBase() :
 800a374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a378:	4604      	mov	r4, r0
 800a37a:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &StartMeasurementViewBase::buttonCallbackHandler)
 800a37c:	4626      	mov	r6, r4
 800a37e:	2500      	movs	r5, #0
 800a380:	f010 fb5a 	bl	801aa38 <_ZN8touchgfx6ScreenC1Ev>
 800a384:	4b69      	ldr	r3, [pc, #420]	; (800a52c <_ZN24StartMeasurementViewBaseC1Ev+0x1b8>)
 800a386:	63e5      	str	r5, [r4, #60]	; 0x3c
 800a388:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800a38c:	4629      	mov	r1, r5
 800a38e:	2226      	movs	r2, #38	; 0x26
 800a390:	4630      	mov	r0, r6
 800a392:	f021 ff9d 	bl	802c2d0 <memset>
 800a396:	4630      	mov	r0, r6
 800a398:	f7f9 fbc8 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 800a39c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800a3a0:	4b63      	ldr	r3, [pc, #396]	; (800a530 <_ZN24StartMeasurementViewBaseC1Ev+0x1bc>)
 800a3a2:	6423      	str	r3, [r4, #64]	; 0x40
 800a3a4:	27ff      	movs	r7, #255	; 0xff
 800a3a6:	f64f 79ff 	movw	r9, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800a3aa:	2226      	movs	r2, #38	; 0x26
 800a3ac:	4629      	mov	r1, r5
 800a3ae:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 800a3b2:	66a5      	str	r5, [r4, #104]	; 0x68
 800a3b4:	4640      	mov	r0, r8
 800a3b6:	f8ad 9020 	strh.w	r9, [sp, #32]
 800a3ba:	f021 ff89 	bl	802c2d0 <memset>
 800a3be:	4640      	mov	r0, r8
 800a3c0:	f7f9 fbb4 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 800a3c4:	4b5b      	ldr	r3, [pc, #364]	; (800a534 <_ZN24StartMeasurementViewBaseC1Ev+0x1c0>)
 800a3c6:	66e3      	str	r3, [r4, #108]	; 0x6c
 800a3c8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800a3cc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800a3d0:	f104 0a98 	add.w	sl, r4, #152	; 0x98
 800a3d4:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800a3d8:	a908      	add	r1, sp, #32
 800a3da:	4640      	mov	r0, r8
 800a3dc:	f00d f901 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), action(), pressed(false)
 800a3e0:	4629      	mov	r1, r5
 800a3e2:	2226      	movs	r2, #38	; 0x26
 800a3e4:	4650      	mov	r0, sl
 800a3e6:	f021 ff73 	bl	802c2d0 <memset>
 800a3ea:	4650      	mov	r0, sl
 800a3ec:	f7f9 fb9e 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 800a3f0:	2301      	movs	r3, #1
 800a3f2:	f104 07d0 	add.w	r7, r4, #208	; 0xd0
 800a3f6:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 800a3fa:	4b4f      	ldr	r3, [pc, #316]	; (800a538 <_ZN24StartMeasurementViewBaseC1Ev+0x1c4>)
 800a3fc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800a400:	4629      	mov	r1, r5
 800a402:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 800a406:	f884 50c4 	strb.w	r5, [r4, #196]	; 0xc4
 800a40a:	f8a4 90c6 	strh.w	r9, [r4, #198]	; 0xc6
 800a40e:	f8a4 90c8 	strh.w	r9, [r4, #200]	; 0xc8
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 800a412:	f884 90ca 	strb.w	r9, [r4, #202]	; 0xca
 800a416:	f8a4 90cc 	strh.w	r9, [r4, #204]	; 0xcc
 800a41a:	2226      	movs	r2, #38	; 0x26
 800a41c:	4638      	mov	r0, r7
 800a41e:	f021 ff57 	bl	802c2d0 <memset>
 800a422:	4638      	mov	r0, r7
 800a424:	f7f9 fb82 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 800a428:	4b44      	ldr	r3, [pc, #272]	; (800a53c <_ZN24StartMeasurementViewBaseC1Ev+0x1c8>)
 800a42a:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
 800a42e:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 800a432:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
        : x(x), y(y), width(width), height(height)
 800a436:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 800a43a:	e9c4 3544 	strd	r3, r5, [r4, #272]	; 0x110
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800a43e:	4b40      	ldr	r3, [pc, #256]	; (800a540 <_ZN24StartMeasurementViewBaseC1Ev+0x1cc>)
 800a440:	f8df b104 	ldr.w	fp, [pc, #260]	; 800a548 <_ZN24StartMeasurementViewBaseC1Ev+0x1d4>
 800a444:	f8a4 90fc 	strh.w	r9, [r4, #252]	; 0xfc
 800a448:	e9c4 3446 	strd	r3, r4, [r4, #280]	; 0x118
 800a44c:	4b3d      	ldr	r3, [pc, #244]	; (800a544 <_ZN24StartMeasurementViewBaseC1Ev+0x1d0>)
        : color(col)
 800a44e:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 800a452:	e9c4 3548 	strd	r3, r5, [r4, #288]	; 0x120
        setXY(x, y);
 800a456:	462a      	mov	r2, r5
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800a458:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
        : x(x), y(y), width(width), height(height)
 800a45c:	f8c4 510c 	str.w	r5, [r4, #268]	; 0x10c
 800a460:	4629      	mov	r1, r5
 800a462:	4630      	mov	r0, r6
 800a464:	f8c4 b0f8 	str.w	fp, [r4, #248]	; 0xf8
 800a468:	f7f9 f9ea 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800a46c:	4630      	mov	r0, r6
 800a46e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800a472:	f7f9 f965 	bl	8003740 <_ZN8touchgfx8Drawable8setWidthEs>
        this->color = color;
 800a476:	f04f 497f 	mov.w	r9, #4278190080	; 0xff000000
        setHeight(height);
 800a47a:	4630      	mov	r0, r6
 800a47c:	21f0      	movs	r1, #240	; 0xf0
 800a47e:	f7f9 f961 	bl	8003744 <_ZN8touchgfx8Drawable9setHeightEs>
    image1.setXY(0, 0);
 800a482:	462a      	mov	r2, r5
 800a484:	4629      	mov	r1, r5
 800a486:	4640      	mov	r0, r8
 800a488:	f8c4 9068 	str.w	r9, [r4, #104]	; 0x68
 800a48c:	f7f9 f9d8 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 800a490:	a908      	add	r1, sp, #32
 800a492:	4640      	mov	r0, r8
 800a494:	f8ad 5020 	strh.w	r5, [sp, #32]
 800a498:	f00d f8a3 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    toggleButton1.setXY(96, 82);
 800a49c:	4650      	mov	r0, sl
 800a49e:	2252      	movs	r2, #82	; 0x52
 800a4a0:	2160      	movs	r1, #96	; 0x60
 800a4a2:	f7f9 f9cd 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 800a4a6:	2310      	movs	r3, #16
 800a4a8:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a4ac:	2311      	movs	r3, #17
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
 800a4ae:	f8a4 30cc 	strh.w	r3, [r4, #204]	; 0xcc
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800a4b2:	aa08      	add	r2, sp, #32
 800a4b4:	a907      	add	r1, sp, #28
 800a4b6:	4650      	mov	r0, sl
 800a4b8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a4bc:	f00c fd68 	bl	8016f90 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.setAction(buttonCallback);
 800a4c0:	f504 738c 	add.w	r3, r4, #280	; 0x118
        action = &callback;
 800a4c4:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    textArea1.setXY(58, 134);
 800a4c8:	2286      	movs	r2, #134	; 0x86
 800a4ca:	4638      	mov	r0, r7
 800a4cc:	213a      	movs	r1, #58	; 0x3a
 800a4ce:	f7f9 f9b7 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 800a4d2:	f8a4 5104 	strh.w	r5, [r4, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 800a4d6:	ad02      	add	r5, sp, #8
 800a4d8:	4639      	mov	r1, r7
 800a4da:	4628      	mov	r0, r5
        this->color = color;
 800a4dc:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
        boundingArea = calculateBoundingArea();
 800a4e0:	f00c f9b6 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a4e4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a4e8:	f504 7386 	add.w	r3, r4, #268	; 0x10c
 800a4ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a4f0:	2313      	movs	r3, #19
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9NT));
 800a4f2:	a908      	add	r1, sp, #32
 800a4f4:	4638      	mov	r0, r7
 800a4f6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a4fa:	f8cd b020 	str.w	fp, [sp, #32]
 800a4fe:	f00c fced 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a502:	1d20      	adds	r0, r4, #4
 800a504:	4631      	mov	r1, r6
 800a506:	9001      	str	r0, [sp, #4]
 800a508:	f007 fca8 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a50c:	9801      	ldr	r0, [sp, #4]
 800a50e:	4641      	mov	r1, r8
 800a510:	f007 fca4 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a514:	9801      	ldr	r0, [sp, #4]
 800a516:	4651      	mov	r1, sl
 800a518:	f007 fca0 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a51c:	9801      	ldr	r0, [sp, #4]
 800a51e:	4639      	mov	r1, r7
 800a520:	f007 fc9c 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a524:	4620      	mov	r0, r4
 800a526:	b00b      	add	sp, #44	; 0x2c
 800a528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a52c:	08031610 	.word	0x08031610
 800a530:	08034824 	.word	0x08034824
 800a534:	08034a04 	.word	0x08034a04
 800a538:	08034680 	.word	0x08034680
 800a53c:	08034764 	.word	0x08034764
 800a540:	080315f8 	.word	0x080315f8
 800a544:	0800a355 	.word	0x0800a355
 800a548:	0802f844 	.word	0x0802f844

0800a54c <_ZN17StartPageViewBaseD1Ev>:

class StartPageViewBase : public touchgfx::View<StartPagePresenter>
{
public:
    StartPageViewBase();
    virtual ~StartPageViewBase() {}
 800a54c:	4770      	bx	lr

0800a54e <_ZN17StartPageViewBase11setupScreenEv>:
}

void StartPageViewBase::setupScreen()
{

}
 800a54e:	4770      	bx	lr

0800a550 <_ZN8touchgfx8CallbackI17StartPageViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a550:	4770      	bx	lr

0800a552 <_ZN8touchgfx8CallbackI17StartPageViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800a552:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800a554:	68c2      	ldr	r2, [r0, #12]
 800a556:	6844      	ldr	r4, [r0, #4]
 800a558:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800a55a:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800a55c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a560:	07d2      	lsls	r2, r2, #31
 800a562:	bf48      	it	mi
 800a564:	5962      	ldrmi	r2, [r4, r5]
 800a566:	689b      	ldr	r3, [r3, #8]
    }
 800a568:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800a56a:	bf48      	it	mi
 800a56c:	58d3      	ldrmi	r3, [r2, r3]
 800a56e:	4718      	bx	r3

0800a570 <_ZNK8touchgfx8CallbackI17StartPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800a570:	6843      	ldr	r3, [r0, #4]
 800a572:	b12b      	cbz	r3, 800a580 <_ZNK8touchgfx8CallbackI17StartPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800a574:	6883      	ldr	r3, [r0, #8]
 800a576:	b92b      	cbnz	r3, 800a584 <_ZNK8touchgfx8CallbackI17StartPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800a578:	68c0      	ldr	r0, [r0, #12]
 800a57a:	f000 0001 	and.w	r0, r0, #1
 800a57e:	4770      	bx	lr
 800a580:	4618      	mov	r0, r3
 800a582:	4770      	bx	lr
 800a584:	2001      	movs	r0, #1
    }
 800a586:	4770      	bx	lr

0800a588 <_ZN8touchgfx8CallbackI17StartPageViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a588:	b510      	push	{r4, lr}
 800a58a:	2110      	movs	r1, #16
 800a58c:	4604      	mov	r4, r0
 800a58e:	f020 fdcc 	bl	802b12a <_ZdlPvj>
 800a592:	4620      	mov	r0, r4
 800a594:	bd10      	pop	{r4, pc}

0800a596 <_ZN17StartPageViewBaseD0Ev>:
 800a596:	b510      	push	{r4, lr}
 800a598:	f44f 71ba 	mov.w	r1, #372	; 0x174
 800a59c:	4604      	mov	r4, r0
 800a59e:	f020 fdc4 	bl	802b12a <_ZdlPvj>
 800a5a2:	4620      	mov	r0, r4
 800a5a4:	bd10      	pop	{r4, pc}

0800a5a6 <_ZN17StartPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void StartPageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &HomeButton)
 800a5a6:	f500 7094 	add.w	r0, r0, #296	; 0x128
 800a5aa:	4288      	cmp	r0, r1
{
 800a5ac:	b508      	push	{r3, lr}
    if (&src == &HomeButton)
 800a5ae:	d105      	bne.n	800a5bc <_ZN17StartPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800a5b0:	f00e fed2 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When HomeButton clicked change screen to InstructionPage1
        //Go to InstructionPage1 with screen transition towards North
        application().gotoInstructionPage1ScreenSlideTransitionNorth();
    }
}
 800a5b4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoInstructionPage1ScreenSlideTransitionNorth();
 800a5b8:	f7fa ba5a 	b.w	8004a70 <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionNorthEv>
}
 800a5bc:	bd08      	pop	{r3, pc}
	...

0800a5c0 <_ZN17StartPageViewBaseC1Ev>:
StartPageViewBase::StartPageViewBase() :
 800a5c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a5c4:	4604      	mov	r4, r0
 800a5c6:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &StartPageViewBase::buttonCallbackHandler)
 800a5c8:	4626      	mov	r6, r4
 800a5ca:	2500      	movs	r5, #0
 800a5cc:	f010 fa34 	bl	801aa38 <_ZN8touchgfx6ScreenC1Ev>
 800a5d0:	4b68      	ldr	r3, [pc, #416]	; (800a774 <_ZN17StartPageViewBaseC1Ev+0x1b4>)
 800a5d2:	63e5      	str	r5, [r4, #60]	; 0x3c
 800a5d4:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800a5d8:	4629      	mov	r1, r5
 800a5da:	2226      	movs	r2, #38	; 0x26
 800a5dc:	4630      	mov	r0, r6
 800a5de:	f021 fe77 	bl	802c2d0 <memset>
 800a5e2:	4630      	mov	r0, r6
 800a5e4:	f7f9 faa2 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 800a5e8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800a5ec:	27ff      	movs	r7, #255	; 0xff
 800a5ee:	4b62      	ldr	r3, [pc, #392]	; (800a778 <_ZN17StartPageViewBaseC1Ev+0x1b8>)
 800a5f0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800a5f2:	2226      	movs	r2, #38	; 0x26
 800a5f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a5f8:	4629      	mov	r1, r5
 800a5fa:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
        : color(col)
 800a5fe:	66a5      	str	r5, [r4, #104]	; 0x68
 800a600:	4640      	mov	r0, r8
 800a602:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800a606:	f021 fe63 	bl	802c2d0 <memset>
 800a60a:	4640      	mov	r0, r8
 800a60c:	f7f9 fa8e 	bl	8003b2c <_ZN8touchgfx6WidgetC1Ev>
 800a610:	4b5a      	ldr	r3, [pc, #360]	; (800a77c <_ZN17StartPageViewBaseC1Ev+0x1bc>)
 800a612:	66e3      	str	r3, [r4, #108]	; 0x6c
 800a614:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
 800a618:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800a61c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800a620:	af0c      	add	r7, sp, #48	; 0x30
 800a622:	4639      	mov	r1, r7
 800a624:	f104 0a98 	add.w	sl, r4, #152	; 0x98
 800a628:	4640      	mov	r0, r8
 800a62a:	f00c ffda 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a62e:	f104 09e0 	add.w	r9, r4, #224	; 0xe0
 800a632:	4650      	mov	r0, sl
 800a634:	f7fc f804 	bl	8006640 <_ZN8touchgfx8TextAreaC1Ev>
 800a638:	f504 7b94 	add.w	fp, r4, #296	; 0x128
 800a63c:	4648      	mov	r0, r9
 800a63e:	f7fb ffff 	bl	8006640 <_ZN8touchgfx8TextAreaC1Ev>
 800a642:	4658      	mov	r0, fp
 800a644:	f00c ffa6 	bl	8017594 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800a648:	4a4d      	ldr	r2, [pc, #308]	; (800a780 <_ZN17StartPageViewBaseC1Ev+0x1c0>)
 800a64a:	e9c4 2459 	strd	r2, r4, [r4, #356]	; 0x164
 800a64e:	4a4d      	ldr	r2, [pc, #308]	; (800a784 <_ZN17StartPageViewBaseC1Ev+0x1c4>)
        setXY(x, y);
 800a650:	4629      	mov	r1, r5
 800a652:	e9c4 255b 	strd	r2, r5, [r4, #364]	; 0x16c
 800a656:	4630      	mov	r0, r6
 800a658:	462a      	mov	r2, r5
 800a65a:	f7f9 f8f1 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800a65e:	4630      	mov	r0, r6
 800a660:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800a664:	f7f9 f86c 	bl	8003740 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800a668:	4630      	mov	r0, r6
 800a66a:	21f0      	movs	r1, #240	; 0xf0
 800a66c:	f7f9 f86a 	bl	8003744 <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 800a670:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 800a674:	66a2      	str	r2, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 800a676:	4629      	mov	r1, r5
 800a678:	462a      	mov	r2, r5
 800a67a:	4640      	mov	r0, r8
 800a67c:	f7f9 f8e0 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 800a680:	4639      	mov	r1, r7
 800a682:	4640      	mov	r0, r8
 800a684:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 800a688:	f00c ffab 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textArea1.setXY(14, 59);
 800a68c:	4650      	mov	r0, sl
 800a68e:	223b      	movs	r2, #59	; 0x3b
 800a690:	210e      	movs	r1, #14
 800a692:	f7f9 f8d5 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 800a696:	4a3c      	ldr	r2, [pc, #240]	; (800a788 <_ZN17StartPageViewBaseC1Ev+0x1c8>)
 800a698:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
        linespace = space;
 800a69c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800a6a0:	4651      	mov	r1, sl
 800a6a2:	a804      	add	r0, sp, #16
 800a6a4:	f00c f8d4 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a6a8:	ab04      	add	r3, sp, #16
 800a6aa:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800a6ae:	f104 0cd4 	add.w	ip, r4, #212	; 0xd4
 800a6b2:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 800a6b6:	4b35      	ldr	r3, [pc, #212]	; (800a78c <_ZN17StartPageViewBaseC1Ev+0x1cc>)
 800a6b8:	930c      	str	r3, [sp, #48]	; 0x30
 800a6ba:	221a      	movs	r2, #26
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DZRR));
 800a6bc:	4639      	mov	r1, r7
 800a6be:	4650      	mov	r0, sl
 800a6c0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800a6c4:	f00c fc0a 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2.setXY(71, 108);
 800a6c8:	4648      	mov	r0, r9
 800a6ca:	226c      	movs	r2, #108	; 0x6c
 800a6cc:	2147      	movs	r1, #71	; 0x47
 800a6ce:	f7f9 f8b7 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 800a6d2:	4a2f      	ldr	r2, [pc, #188]	; (800a790 <_ZN17StartPageViewBaseC1Ev+0x1d0>)
 800a6d4:	f8c4 2110 	str.w	r2, [r4, #272]	; 0x110
        linespace = space;
 800a6d8:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800a6dc:	4649      	mov	r1, r9
 800a6de:	a804      	add	r0, sp, #16
 800a6e0:	f00c f8b6 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a6e4:	ab04      	add	r3, sp, #16
 800a6e6:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800a6ea:	f504 758e 	add.w	r5, r4, #284	; 0x11c
 800a6ee:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800a6f2:	4b26      	ldr	r3, [pc, #152]	; (800a78c <_ZN17StartPageViewBaseC1Ev+0x1cc>)
 800a6f4:	930c      	str	r3, [sp, #48]	; 0x30
 800a6f6:	2219      	movs	r2, #25
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IDTO));
 800a6f8:	4639      	mov	r1, r7
 800a6fa:	4648      	mov	r0, r9
 800a6fc:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800a700:	f00c fbec 	bl	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    HomeButton.setXY(130, 165);
 800a704:	4658      	mov	r0, fp
 800a706:	22a5      	movs	r2, #165	; 0xa5
 800a708:	2182      	movs	r1, #130	; 0x82
 800a70a:	f7f9 f899 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 800a70e:	2203      	movs	r2, #3
 800a710:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800a714:	2204      	movs	r2, #4
 800a716:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800a71a:	2209      	movs	r2, #9
 800a71c:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800a720:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
    HomeButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID));
 800a724:	ab0b      	add	r3, sp, #44	; 0x2c
 800a726:	aa0a      	add	r2, sp, #40	; 0x28
 800a728:	a909      	add	r1, sp, #36	; 0x24
 800a72a:	4658      	mov	r0, fp
 800a72c:	9700      	str	r7, [sp, #0]
 800a72e:	f00c fe8e 	bl	801744e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800a732:	4b18      	ldr	r3, [pc, #96]	; (800a794 <_ZN17StartPageViewBaseC1Ev+0x1d4>)
 800a734:	f8c4 3160 	str.w	r3, [r4, #352]	; 0x160
    HomeButton.setAction(buttonCallback);
 800a738:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 800a73c:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 800a740:	1d20      	adds	r0, r4, #4
 800a742:	4631      	mov	r1, r6
 800a744:	9003      	str	r0, [sp, #12]
 800a746:	f007 fb89 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a74a:	9803      	ldr	r0, [sp, #12]
 800a74c:	4641      	mov	r1, r8
 800a74e:	f007 fb85 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a752:	9803      	ldr	r0, [sp, #12]
 800a754:	4651      	mov	r1, sl
 800a756:	f007 fb81 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a75a:	9803      	ldr	r0, [sp, #12]
 800a75c:	4649      	mov	r1, r9
 800a75e:	f007 fb7d 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a762:	9803      	ldr	r0, [sp, #12]
 800a764:	4659      	mov	r1, fp
 800a766:	f007 fb79 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a76a:	4620      	mov	r0, r4
 800a76c:	b00f      	add	sp, #60	; 0x3c
 800a76e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a772:	bf00      	nop
 800a774:	08031660 	.word	0x08031660
 800a778:	08034824 	.word	0x08034824
 800a77c:	08034a04 	.word	0x08034a04
 800a780:	08031648 	.word	0x08031648
 800a784:	0800a5a7 	.word	0x0800a5a7
 800a788:	ff0482af 	.word	0xff0482af
 800a78c:	0802f844 	.word	0x0802f844
 800a790:	ff005a78 	.word	0xff005a78
 800a794:	0010000f 	.word	0x0010000f

0800a798 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_VLADIMIR_TTF_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_VLADIMIR_TTF_40_4bpp();

touchgfx::GeneratedFont& getFont_VLADIMIR_TTF_40_4bpp()
{
    static touchgfx::GeneratedFont VLADIMIR_TTF_40_4bpp(glyphs_VLADIMIR_TTF_40_4bpp, 12, 40, 12, 4, 1, 8, 12, unicodes_VLADIMIR_TTF_40_4bpp, kerning_VLADIMIR_TTF_40_4bpp, 63, 0, 0, 0);
 800a798:	4770      	bx	lr
	...

0800a79c <_Z28getFont_VLADIMIR_TTF_40_4bppv>:
{
 800a79c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont VLADIMIR_TTF_40_4bpp(glyphs_VLADIMIR_TTF_40_4bpp, 12, 40, 12, 4, 1, 8, 12, unicodes_VLADIMIR_TTF_40_4bpp, kerning_VLADIMIR_TTF_40_4bpp, 63, 0, 0, 0);
 800a79e:	4d16      	ldr	r5, [pc, #88]	; (800a7f8 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x5c>)
 800a7a0:	782c      	ldrb	r4, [r5, #0]
 800a7a2:	f3bf 8f5b 	dmb	ish
 800a7a6:	f014 0401 	ands.w	r4, r4, #1
{
 800a7aa:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont VLADIMIR_TTF_40_4bpp(glyphs_VLADIMIR_TTF_40_4bpp, 12, 40, 12, 4, 1, 8, 12, unicodes_VLADIMIR_TTF_40_4bpp, kerning_VLADIMIR_TTF_40_4bpp, 63, 0, 0, 0);
 800a7ac:	d120      	bne.n	800a7f0 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x54>
 800a7ae:	4628      	mov	r0, r5
 800a7b0:	f020 fcbd 	bl	802b12e <__cxa_guard_acquire>
 800a7b4:	b1e0      	cbz	r0, 800a7f0 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x54>
 800a7b6:	233f      	movs	r3, #63	; 0x3f
 800a7b8:	9307      	str	r3, [sp, #28]
 800a7ba:	4b10      	ldr	r3, [pc, #64]	; (800a7fc <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x60>)
 800a7bc:	9306      	str	r3, [sp, #24]
 800a7be:	4b10      	ldr	r3, [pc, #64]	; (800a800 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x64>)
 800a7c0:	9305      	str	r3, [sp, #20]
 800a7c2:	220c      	movs	r2, #12
 800a7c4:	2308      	movs	r3, #8
 800a7c6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a7ca:	2101      	movs	r1, #1
 800a7cc:	2304      	movs	r3, #4
 800a7ce:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a7d2:	9200      	str	r2, [sp, #0]
 800a7d4:	490b      	ldr	r1, [pc, #44]	; (800a804 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x68>)
 800a7d6:	480c      	ldr	r0, [pc, #48]	; (800a808 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x6c>)
 800a7d8:	9408      	str	r4, [sp, #32]
 800a7da:	2328      	movs	r3, #40	; 0x28
 800a7dc:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800a7e0:	f7fb fc14 	bl	800600c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a7e4:	4809      	ldr	r0, [pc, #36]	; (800a80c <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x70>)
 800a7e6:	f021 fc0b 	bl	802c000 <atexit>
 800a7ea:	4628      	mov	r0, r5
 800a7ec:	f020 fcab 	bl	802b146 <__cxa_guard_release>
    return VLADIMIR_TTF_40_4bpp;
}
 800a7f0:	4805      	ldr	r0, [pc, #20]	; (800a808 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x6c>)
 800a7f2:	b00d      	add	sp, #52	; 0x34
 800a7f4:	bd30      	pop	{r4, r5, pc}
 800a7f6:	bf00      	nop
 800a7f8:	2000d208 	.word	0x2000d208
 800a7fc:	0804c6a8 	.word	0x0804c6a8
 800a800:	0804c704 	.word	0x0804c704
 800a804:	0804be24 	.word	0x0804be24
 800a808:	2000d20c 	.word	0x2000d20c
 800a80c:	0800a799 	.word	0x0800a799

0800a810 <__tcf_0>:

touchgfx::GeneratedFont& getFont_arialbd_14_4bpp();

touchgfx::GeneratedFont& getFont_arialbd_14_4bpp()
{
    static touchgfx::GeneratedFont arialbd_14_4bpp(glyphs_arialbd_14_4bpp, 32, 14, 3, 4, 1, 0, 1, unicodes_arialbd_14_4bpp, kerning_arialbd_14_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a810:	4770      	bx	lr
	...

0800a814 <_Z23getFont_arialbd_14_4bppv>:
{
 800a814:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbd_14_4bpp(glyphs_arialbd_14_4bpp, 32, 14, 3, 4, 1, 0, 1, unicodes_arialbd_14_4bpp, kerning_arialbd_14_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a816:	4d16      	ldr	r5, [pc, #88]	; (800a870 <_Z23getFont_arialbd_14_4bppv+0x5c>)
 800a818:	782c      	ldrb	r4, [r5, #0]
 800a81a:	f3bf 8f5b 	dmb	ish
 800a81e:	f014 0401 	ands.w	r4, r4, #1
{
 800a822:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont arialbd_14_4bpp(glyphs_arialbd_14_4bpp, 32, 14, 3, 4, 1, 0, 1, unicodes_arialbd_14_4bpp, kerning_arialbd_14_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a824:	d121      	bne.n	800a86a <_Z23getFont_arialbd_14_4bppv+0x56>
 800a826:	4628      	mov	r0, r5
 800a828:	f020 fc81 	bl	802b12e <__cxa_guard_acquire>
 800a82c:	b1e8      	cbz	r0, 800a86a <_Z23getFont_arialbd_14_4bppv+0x56>
 800a82e:	4b11      	ldr	r3, [pc, #68]	; (800a874 <_Z23getFont_arialbd_14_4bppv+0x60>)
 800a830:	4911      	ldr	r1, [pc, #68]	; (800a878 <_Z23getFont_arialbd_14_4bppv+0x64>)
 800a832:	4812      	ldr	r0, [pc, #72]	; (800a87c <_Z23getFont_arialbd_14_4bppv+0x68>)
 800a834:	9408      	str	r4, [sp, #32]
 800a836:	e9cd 4309 	strd	r4, r3, [sp, #36]	; 0x24
 800a83a:	233f      	movs	r3, #63	; 0x3f
 800a83c:	9307      	str	r3, [sp, #28]
 800a83e:	4b10      	ldr	r3, [pc, #64]	; (800a880 <_Z23getFont_arialbd_14_4bppv+0x6c>)
 800a840:	9306      	str	r3, [sp, #24]
 800a842:	4b10      	ldr	r3, [pc, #64]	; (800a884 <_Z23getFont_arialbd_14_4bppv+0x70>)
 800a844:	9305      	str	r3, [sp, #20]
 800a846:	2301      	movs	r3, #1
 800a848:	e9cd 4303 	strd	r4, r3, [sp, #12]
 800a84c:	9302      	str	r3, [sp, #8]
 800a84e:	2204      	movs	r2, #4
 800a850:	2303      	movs	r3, #3
 800a852:	e9cd 3200 	strd	r3, r2, [sp]
 800a856:	230e      	movs	r3, #14
 800a858:	2220      	movs	r2, #32
 800a85a:	f7fb fbd7 	bl	800600c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a85e:	480a      	ldr	r0, [pc, #40]	; (800a888 <_Z23getFont_arialbd_14_4bppv+0x74>)
 800a860:	f021 fbce 	bl	802c000 <atexit>
 800a864:	4628      	mov	r0, r5
 800a866:	f020 fc6e 	bl	802b146 <__cxa_guard_release>
    return arialbd_14_4bpp;
}
 800a86a:	4804      	ldr	r0, [pc, #16]	; (800a87c <_Z23getFont_arialbd_14_4bppv+0x68>)
 800a86c:	b00d      	add	sp, #52	; 0x34
 800a86e:	bd30      	pop	{r4, r5, pc}
 800a870:	2000d234 	.word	0x2000d234
 800a874:	08031ac4 	.word	0x08031ac4
 800a878:	0804becc 	.word	0x0804becc
 800a87c:	2000d238 	.word	0x2000d238
 800a880:	0804c6ac 	.word	0x0804c6ac
 800a884:	0804c708 	.word	0x0804c708
 800a888:	0800a811 	.word	0x0800a811

0800a88c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_arialbi_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_arialbi_10_4bpp();

touchgfx::GeneratedFont& getFont_arialbi_10_4bpp()
{
    static touchgfx::GeneratedFont arialbi_10_4bpp(glyphs_arialbi_10_4bpp, 23, 10, 2, 4, 1, 1, 1, unicodes_arialbi_10_4bpp, kerning_arialbi_10_4bpp, 63, 0, 0, 0);
 800a88c:	4770      	bx	lr
	...

0800a890 <_Z23getFont_arialbi_10_4bppv>:
{
 800a890:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbi_10_4bpp(glyphs_arialbi_10_4bpp, 23, 10, 2, 4, 1, 1, 1, unicodes_arialbi_10_4bpp, kerning_arialbi_10_4bpp, 63, 0, 0, 0);
 800a892:	4d16      	ldr	r5, [pc, #88]	; (800a8ec <_Z23getFont_arialbi_10_4bppv+0x5c>)
 800a894:	782c      	ldrb	r4, [r5, #0]
 800a896:	f3bf 8f5b 	dmb	ish
 800a89a:	f014 0401 	ands.w	r4, r4, #1
{
 800a89e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont arialbi_10_4bpp(glyphs_arialbi_10_4bpp, 23, 10, 2, 4, 1, 1, 1, unicodes_arialbi_10_4bpp, kerning_arialbi_10_4bpp, 63, 0, 0, 0);
 800a8a0:	d120      	bne.n	800a8e4 <_Z23getFont_arialbi_10_4bppv+0x54>
 800a8a2:	4628      	mov	r0, r5
 800a8a4:	f020 fc43 	bl	802b12e <__cxa_guard_acquire>
 800a8a8:	b1e0      	cbz	r0, 800a8e4 <_Z23getFont_arialbi_10_4bppv+0x54>
 800a8aa:	233f      	movs	r3, #63	; 0x3f
 800a8ac:	9307      	str	r3, [sp, #28]
 800a8ae:	4b10      	ldr	r3, [pc, #64]	; (800a8f0 <_Z23getFont_arialbi_10_4bppv+0x60>)
 800a8b0:	9306      	str	r3, [sp, #24]
 800a8b2:	4b10      	ldr	r3, [pc, #64]	; (800a8f4 <_Z23getFont_arialbi_10_4bppv+0x64>)
 800a8b4:	9305      	str	r3, [sp, #20]
 800a8b6:	2301      	movs	r3, #1
 800a8b8:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800a8bc:	9302      	str	r3, [sp, #8]
 800a8be:	2204      	movs	r2, #4
 800a8c0:	2302      	movs	r3, #2
 800a8c2:	e9cd 3200 	strd	r3, r2, [sp]
 800a8c6:	490c      	ldr	r1, [pc, #48]	; (800a8f8 <_Z23getFont_arialbi_10_4bppv+0x68>)
 800a8c8:	480c      	ldr	r0, [pc, #48]	; (800a8fc <_Z23getFont_arialbi_10_4bppv+0x6c>)
 800a8ca:	9408      	str	r4, [sp, #32]
 800a8cc:	230a      	movs	r3, #10
 800a8ce:	2217      	movs	r2, #23
 800a8d0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800a8d4:	f7fb fb9a 	bl	800600c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a8d8:	4809      	ldr	r0, [pc, #36]	; (800a900 <_Z23getFont_arialbi_10_4bppv+0x70>)
 800a8da:	f021 fb91 	bl	802c000 <atexit>
 800a8de:	4628      	mov	r0, r5
 800a8e0:	f020 fc31 	bl	802b146 <__cxa_guard_release>
    return arialbi_10_4bpp;
}
 800a8e4:	4805      	ldr	r0, [pc, #20]	; (800a8fc <_Z23getFont_arialbi_10_4bppv+0x6c>)
 800a8e6:	b00d      	add	sp, #52	; 0x34
 800a8e8:	bd30      	pop	{r4, r5, pc}
 800a8ea:	bf00      	nop
 800a8ec:	2000d260 	.word	0x2000d260
 800a8f0:	0804c6d4 	.word	0x0804c6d4
 800a8f4:	0804c70c 	.word	0x0804c70c
 800a8f8:	0804c08c 	.word	0x0804c08c
 800a8fc:	2000d264 	.word	0x2000d264
 800a900:	0800a88d 	.word	0x0800a88d

0800a904 <__tcf_0>:

touchgfx::GeneratedFont& getFont_times_12_4bpp();

touchgfx::GeneratedFont& getFont_times_12_4bpp()
{
    static touchgfx::GeneratedFont times_12_4bpp(glyphs_times_12_4bpp, 37, 12, 3, 4, 1, 0, 2, unicodes_times_12_4bpp, kerning_times_12_4bpp, 63, 0, 0, &times_contextualFormsTable);
 800a904:	4770      	bx	lr
	...

0800a908 <_Z21getFont_times_12_4bppv>:
{
 800a908:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont times_12_4bpp(glyphs_times_12_4bpp, 37, 12, 3, 4, 1, 0, 2, unicodes_times_12_4bpp, kerning_times_12_4bpp, 63, 0, 0, &times_contextualFormsTable);
 800a90a:	4d17      	ldr	r5, [pc, #92]	; (800a968 <_Z21getFont_times_12_4bppv+0x60>)
 800a90c:	782c      	ldrb	r4, [r5, #0]
 800a90e:	f3bf 8f5b 	dmb	ish
 800a912:	f014 0401 	ands.w	r4, r4, #1
{
 800a916:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont times_12_4bpp(glyphs_times_12_4bpp, 37, 12, 3, 4, 1, 0, 2, unicodes_times_12_4bpp, kerning_times_12_4bpp, 63, 0, 0, &times_contextualFormsTable);
 800a918:	d122      	bne.n	800a960 <_Z21getFont_times_12_4bppv+0x58>
 800a91a:	4628      	mov	r0, r5
 800a91c:	f020 fc07 	bl	802b12e <__cxa_guard_acquire>
 800a920:	b1f0      	cbz	r0, 800a960 <_Z21getFont_times_12_4bppv+0x58>
 800a922:	4b12      	ldr	r3, [pc, #72]	; (800a96c <_Z21getFont_times_12_4bppv+0x64>)
 800a924:	4912      	ldr	r1, [pc, #72]	; (800a970 <_Z21getFont_times_12_4bppv+0x68>)
 800a926:	4813      	ldr	r0, [pc, #76]	; (800a974 <_Z21getFont_times_12_4bppv+0x6c>)
 800a928:	9408      	str	r4, [sp, #32]
 800a92a:	e9cd 4309 	strd	r4, r3, [sp, #36]	; 0x24
 800a92e:	233f      	movs	r3, #63	; 0x3f
 800a930:	9307      	str	r3, [sp, #28]
 800a932:	4b11      	ldr	r3, [pc, #68]	; (800a978 <_Z21getFont_times_12_4bppv+0x70>)
 800a934:	9306      	str	r3, [sp, #24]
 800a936:	4b11      	ldr	r3, [pc, #68]	; (800a97c <_Z21getFont_times_12_4bppv+0x74>)
 800a938:	9305      	str	r3, [sp, #20]
 800a93a:	2302      	movs	r3, #2
 800a93c:	e9cd 4303 	strd	r4, r3, [sp, #12]
 800a940:	2201      	movs	r2, #1
 800a942:	2304      	movs	r3, #4
 800a944:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800a948:	2303      	movs	r3, #3
 800a94a:	9300      	str	r3, [sp, #0]
 800a94c:	2225      	movs	r2, #37	; 0x25
 800a94e:	230c      	movs	r3, #12
 800a950:	f7fb fb5c 	bl	800600c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a954:	480a      	ldr	r0, [pc, #40]	; (800a980 <_Z21getFont_times_12_4bppv+0x78>)
 800a956:	f021 fb53 	bl	802c000 <atexit>
 800a95a:	4628      	mov	r0, r5
 800a95c:	f020 fbf3 	bl	802b146 <__cxa_guard_release>
    return times_12_4bpp;
}
 800a960:	4804      	ldr	r0, [pc, #16]	; (800a974 <_Z21getFont_times_12_4bppv+0x6c>)
 800a962:	b00d      	add	sp, #52	; 0x34
 800a964:	bd30      	pop	{r4, r5, pc}
 800a966:	bf00      	nop
 800a968:	2000d28c 	.word	0x2000d28c
 800a96c:	08031f1c 	.word	0x08031f1c
 800a970:	0804c1d0 	.word	0x0804c1d0
 800a974:	2000d290 	.word	0x2000d290
 800a978:	0804c6d8 	.word	0x0804c6d8
 800a97c:	0804c720 	.word	0x0804c720
 800a980:	0800a905 	.word	0x0800a905

0800a984 <__tcf_0>:

touchgfx::GeneratedFont& getFont_timesbd_20_4bpp();

touchgfx::GeneratedFont& getFont_timesbd_20_4bpp()
{
    static touchgfx::GeneratedFont timesbd_20_4bpp(glyphs_timesbd_20_4bpp, 34, 20, 5, 4, 1, 0, 2, unicodes_timesbd_20_4bpp, kerning_timesbd_20_4bpp, 63, 0, 0, &timesbd_contextualFormsTable);
 800a984:	4770      	bx	lr
	...

0800a988 <_Z23getFont_timesbd_20_4bppv>:
{
 800a988:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont timesbd_20_4bpp(glyphs_timesbd_20_4bpp, 34, 20, 5, 4, 1, 0, 2, unicodes_timesbd_20_4bpp, kerning_timesbd_20_4bpp, 63, 0, 0, &timesbd_contextualFormsTable);
 800a98a:	4d17      	ldr	r5, [pc, #92]	; (800a9e8 <_Z23getFont_timesbd_20_4bppv+0x60>)
 800a98c:	782c      	ldrb	r4, [r5, #0]
 800a98e:	f3bf 8f5b 	dmb	ish
 800a992:	f014 0401 	ands.w	r4, r4, #1
{
 800a996:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont timesbd_20_4bpp(glyphs_timesbd_20_4bpp, 34, 20, 5, 4, 1, 0, 2, unicodes_timesbd_20_4bpp, kerning_timesbd_20_4bpp, 63, 0, 0, &timesbd_contextualFormsTable);
 800a998:	d122      	bne.n	800a9e0 <_Z23getFont_timesbd_20_4bppv+0x58>
 800a99a:	4628      	mov	r0, r5
 800a99c:	f020 fbc7 	bl	802b12e <__cxa_guard_acquire>
 800a9a0:	b1f0      	cbz	r0, 800a9e0 <_Z23getFont_timesbd_20_4bppv+0x58>
 800a9a2:	4b12      	ldr	r3, [pc, #72]	; (800a9ec <_Z23getFont_timesbd_20_4bppv+0x64>)
 800a9a4:	4912      	ldr	r1, [pc, #72]	; (800a9f0 <_Z23getFont_timesbd_20_4bppv+0x68>)
 800a9a6:	4813      	ldr	r0, [pc, #76]	; (800a9f4 <_Z23getFont_timesbd_20_4bppv+0x6c>)
 800a9a8:	9408      	str	r4, [sp, #32]
 800a9aa:	e9cd 4309 	strd	r4, r3, [sp, #36]	; 0x24
 800a9ae:	233f      	movs	r3, #63	; 0x3f
 800a9b0:	9307      	str	r3, [sp, #28]
 800a9b2:	4b11      	ldr	r3, [pc, #68]	; (800a9f8 <_Z23getFont_timesbd_20_4bppv+0x70>)
 800a9b4:	9306      	str	r3, [sp, #24]
 800a9b6:	4b11      	ldr	r3, [pc, #68]	; (800a9fc <_Z23getFont_timesbd_20_4bppv+0x74>)
 800a9b8:	9305      	str	r3, [sp, #20]
 800a9ba:	2302      	movs	r3, #2
 800a9bc:	e9cd 4303 	strd	r4, r3, [sp, #12]
 800a9c0:	2201      	movs	r2, #1
 800a9c2:	2304      	movs	r3, #4
 800a9c4:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800a9c8:	2305      	movs	r3, #5
 800a9ca:	9300      	str	r3, [sp, #0]
 800a9cc:	2222      	movs	r2, #34	; 0x22
 800a9ce:	2314      	movs	r3, #20
 800a9d0:	f7fb fb1c 	bl	800600c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a9d4:	480a      	ldr	r0, [pc, #40]	; (800aa00 <_Z23getFont_timesbd_20_4bppv+0x78>)
 800a9d6:	f021 fb13 	bl	802c000 <atexit>
 800a9da:	4628      	mov	r0, r5
 800a9dc:	f020 fbb3 	bl	802b146 <__cxa_guard_release>
    return timesbd_20_4bpp;
}
 800a9e0:	4804      	ldr	r0, [pc, #16]	; (800a9f4 <_Z23getFont_timesbd_20_4bppv+0x6c>)
 800a9e2:	b00d      	add	sp, #52	; 0x34
 800a9e4:	bd30      	pop	{r4, r5, pc}
 800a9e6:	bf00      	nop
 800a9e8:	2000d2b8 	.word	0x2000d2b8
 800a9ec:	08032374 	.word	0x08032374
 800a9f0:	0804c3d8 	.word	0x0804c3d8
 800a9f4:	2000d2bc 	.word	0x2000d2bc
 800a9f8:	0804c6e4 	.word	0x0804c6e4
 800a9fc:	0804c724 	.word	0x0804c724
 800aa00:	0800a985 	.word	0x0800a985

0800aa04 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 15, 10, 2, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800aa04:	4770      	bx	lr
	...

0800aa08 <_Z23getFont_verdana_10_4bppv>:
{
 800aa08:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 15, 10, 2, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800aa0a:	4d16      	ldr	r5, [pc, #88]	; (800aa64 <_Z23getFont_verdana_10_4bppv+0x5c>)
 800aa0c:	782c      	ldrb	r4, [r5, #0]
 800aa0e:	f3bf 8f5b 	dmb	ish
 800aa12:	f014 0401 	ands.w	r4, r4, #1
{
 800aa16:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 15, 10, 2, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800aa18:	d120      	bne.n	800aa5c <_Z23getFont_verdana_10_4bppv+0x54>
 800aa1a:	4628      	mov	r0, r5
 800aa1c:	f020 fb87 	bl	802b12e <__cxa_guard_acquire>
 800aa20:	b1e0      	cbz	r0, 800aa5c <_Z23getFont_verdana_10_4bppv+0x54>
 800aa22:	233f      	movs	r3, #63	; 0x3f
 800aa24:	9307      	str	r3, [sp, #28]
 800aa26:	4b10      	ldr	r3, [pc, #64]	; (800aa68 <_Z23getFont_verdana_10_4bppv+0x60>)
 800aa28:	9306      	str	r3, [sp, #24]
 800aa2a:	4b10      	ldr	r3, [pc, #64]	; (800aa6c <_Z23getFont_verdana_10_4bppv+0x64>)
 800aa2c:	4910      	ldr	r1, [pc, #64]	; (800aa70 <_Z23getFont_verdana_10_4bppv+0x68>)
 800aa2e:	4811      	ldr	r0, [pc, #68]	; (800aa74 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800aa30:	9408      	str	r4, [sp, #32]
 800aa32:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800aa36:	2201      	movs	r2, #1
 800aa38:	2304      	movs	r3, #4
 800aa3a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800aa3e:	2302      	movs	r3, #2
 800aa40:	9300      	str	r3, [sp, #0]
 800aa42:	220f      	movs	r2, #15
 800aa44:	230a      	movs	r3, #10
 800aa46:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800aa4a:	9403      	str	r4, [sp, #12]
 800aa4c:	f7fb fade 	bl	800600c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800aa50:	4809      	ldr	r0, [pc, #36]	; (800aa78 <_Z23getFont_verdana_10_4bppv+0x70>)
 800aa52:	f021 fad5 	bl	802c000 <atexit>
 800aa56:	4628      	mov	r0, r5
 800aa58:	f020 fb75 	bl	802b146 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800aa5c:	4805      	ldr	r0, [pc, #20]	; (800aa74 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800aa5e:	b00d      	add	sp, #52	; 0x34
 800aa60:	bd30      	pop	{r4, r5, pc}
 800aa62:	bf00      	nop
 800aa64:	2000d2e4 	.word	0x2000d2e4
 800aa68:	0804c6f8 	.word	0x0804c6f8
 800aa6c:	0804c728 	.word	0x0804c728
 800aa70:	0804c5b4 	.word	0x0804c5b4
 800aa74:	2000d2e8 	.word	0x2000d2e8
 800aa78:	0800aa05 	.word	0x0800aa05

0800aa7c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800aa7c:	4770      	bx	lr
	...

0800aa80 <_Z23getFont_verdana_20_4bppv>:
{
 800aa80:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800aa82:	4d15      	ldr	r5, [pc, #84]	; (800aad8 <_Z23getFont_verdana_20_4bppv+0x58>)
 800aa84:	782c      	ldrb	r4, [r5, #0]
 800aa86:	f3bf 8f5b 	dmb	ish
 800aa8a:	f014 0401 	ands.w	r4, r4, #1
{
 800aa8e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800aa90:	d11e      	bne.n	800aad0 <_Z23getFont_verdana_20_4bppv+0x50>
 800aa92:	4628      	mov	r0, r5
 800aa94:	f020 fb4b 	bl	802b12e <__cxa_guard_acquire>
 800aa98:	b1d0      	cbz	r0, 800aad0 <_Z23getFont_verdana_20_4bppv+0x50>
 800aa9a:	233f      	movs	r3, #63	; 0x3f
 800aa9c:	9307      	str	r3, [sp, #28]
 800aa9e:	4b0f      	ldr	r3, [pc, #60]	; (800aadc <_Z23getFont_verdana_20_4bppv+0x5c>)
 800aaa0:	9306      	str	r3, [sp, #24]
 800aaa2:	4b0f      	ldr	r3, [pc, #60]	; (800aae0 <_Z23getFont_verdana_20_4bppv+0x60>)
 800aaa4:	490f      	ldr	r1, [pc, #60]	; (800aae4 <_Z23getFont_verdana_20_4bppv+0x64>)
 800aaa6:	4810      	ldr	r0, [pc, #64]	; (800aae8 <_Z23getFont_verdana_20_4bppv+0x68>)
 800aaa8:	9408      	str	r4, [sp, #32]
 800aaaa:	2201      	movs	r2, #1
 800aaac:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800aab0:	2304      	movs	r3, #4
 800aab2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800aab6:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800aaba:	2314      	movs	r3, #20
 800aabc:	9403      	str	r4, [sp, #12]
 800aabe:	9400      	str	r4, [sp, #0]
 800aac0:	f7fb faa4 	bl	800600c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800aac4:	4809      	ldr	r0, [pc, #36]	; (800aaec <_Z23getFont_verdana_20_4bppv+0x6c>)
 800aac6:	f021 fa9b 	bl	802c000 <atexit>
 800aaca:	4628      	mov	r0, r5
 800aacc:	f020 fb3b 	bl	802b146 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 800aad0:	4805      	ldr	r0, [pc, #20]	; (800aae8 <_Z23getFont_verdana_20_4bppv+0x68>)
 800aad2:	b00d      	add	sp, #52	; 0x34
 800aad4:	bd30      	pop	{r4, r5, pc}
 800aad6:	bf00      	nop
 800aad8:	2000d310 	.word	0x2000d310
 800aadc:	0804c6fc 	.word	0x0804c6fc
 800aae0:	0804c72c 	.word	0x0804c72c
 800aae4:	0804c688 	.word	0x0804c688
 800aae8:	2000d314 	.word	0x2000d314
 800aaec:	0800aa7d 	.word	0x0800aa7d

0800aaf0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800aaf0:	4770      	bx	lr
	...

0800aaf4 <_Z23getFont_verdana_40_4bppv>:
{
 800aaf4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800aaf6:	4d15      	ldr	r5, [pc, #84]	; (800ab4c <_Z23getFont_verdana_40_4bppv+0x58>)
 800aaf8:	782c      	ldrb	r4, [r5, #0]
 800aafa:	f3bf 8f5b 	dmb	ish
 800aafe:	f014 0401 	ands.w	r4, r4, #1
{
 800ab02:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800ab04:	d11e      	bne.n	800ab44 <_Z23getFont_verdana_40_4bppv+0x50>
 800ab06:	4628      	mov	r0, r5
 800ab08:	f020 fb11 	bl	802b12e <__cxa_guard_acquire>
 800ab0c:	b1d0      	cbz	r0, 800ab44 <_Z23getFont_verdana_40_4bppv+0x50>
 800ab0e:	233f      	movs	r3, #63	; 0x3f
 800ab10:	9307      	str	r3, [sp, #28]
 800ab12:	4b0f      	ldr	r3, [pc, #60]	; (800ab50 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800ab14:	9306      	str	r3, [sp, #24]
 800ab16:	4b0f      	ldr	r3, [pc, #60]	; (800ab54 <_Z23getFont_verdana_40_4bppv+0x60>)
 800ab18:	490f      	ldr	r1, [pc, #60]	; (800ab58 <_Z23getFont_verdana_40_4bppv+0x64>)
 800ab1a:	4810      	ldr	r0, [pc, #64]	; (800ab5c <_Z23getFont_verdana_40_4bppv+0x68>)
 800ab1c:	9408      	str	r4, [sp, #32]
 800ab1e:	2201      	movs	r2, #1
 800ab20:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800ab24:	2304      	movs	r3, #4
 800ab26:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ab2a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800ab2e:	2328      	movs	r3, #40	; 0x28
 800ab30:	9403      	str	r4, [sp, #12]
 800ab32:	9400      	str	r4, [sp, #0]
 800ab34:	f7fb fa6a 	bl	800600c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800ab38:	4809      	ldr	r0, [pc, #36]	; (800ab60 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800ab3a:	f021 fa61 	bl	802c000 <atexit>
 800ab3e:	4628      	mov	r0, r5
 800ab40:	f020 fb01 	bl	802b146 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800ab44:	4805      	ldr	r0, [pc, #20]	; (800ab5c <_Z23getFont_verdana_40_4bppv+0x68>)
 800ab46:	b00d      	add	sp, #52	; 0x34
 800ab48:	bd30      	pop	{r4, r5, pc}
 800ab4a:	bf00      	nop
 800ab4c:	2000d33c 	.word	0x2000d33c
 800ab50:	0804c700 	.word	0x0804c700
 800ab54:	0804c730 	.word	0x0804c730
 800ab58:	0804c698 	.word	0x0804c698
 800ab5c:	2000d340 	.word	0x2000d340
 800ab60:	0800aaf1 	.word	0x0800aaf1

0800ab64 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800ab64:	2000      	movs	r0, #0
 800ab66:	4770      	bx	lr

0800ab68 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800ab68:	2000      	movs	r0, #0
 800ab6a:	4770      	bx	lr

0800ab6c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800ab6c:	b40e      	push	{r1, r2, r3}
 800ab6e:	b503      	push	{r0, r1, lr}
 800ab70:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800ab72:	2100      	movs	r1, #0
{
 800ab74:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800ab78:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800ab7a:	f00f fac9 	bl	801a110 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800ab7e:	b002      	add	sp, #8
 800ab80:	f85d eb04 	ldr.w	lr, [sp], #4
 800ab84:	b003      	add	sp, #12
 800ab86:	4770      	bx	lr

0800ab88 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800ab88:	b40c      	push	{r2, r3}
 800ab8a:	b507      	push	{r0, r1, r2, lr}
 800ab8c:	ab04      	add	r3, sp, #16
 800ab8e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800ab92:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800ab94:	f00f fabc 	bl	801a110 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800ab98:	b003      	add	sp, #12
 800ab9a:	f85d eb04 	ldr.w	lr, [sp], #4
 800ab9e:	b002      	add	sp, #8
 800aba0:	4770      	bx	lr
	...

0800aba4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800aba4:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800aba6:	b510      	push	{r4, lr}
 800aba8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800abaa:	b373      	cbz	r3, 800ac0a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800abac:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800abae:	b92b      	cbnz	r3, 800abbc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800abb0:	4b18      	ldr	r3, [pc, #96]	; (800ac14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800abb2:	4a19      	ldr	r2, [pc, #100]	; (800ac18 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800abb4:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800abb6:	4819      	ldr	r0, [pc, #100]	; (800ac1c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800abb8:	f021 fa04 	bl	802bfc4 <__assert_func>
            return buffer[pos];
 800abbc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800abbe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800abc2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800abc4:	b30b      	cbz	r3, 800ac0a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800abc6:	f010 fedb 	bl	801b980 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800abca:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800abcc:	2b01      	cmp	r3, #1
 800abce:	d803      	bhi.n	800abd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800abd0:	4b13      	ldr	r3, [pc, #76]	; (800ac20 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800abd2:	4a14      	ldr	r2, [pc, #80]	; (800ac24 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800abd4:	21c5      	movs	r1, #197	; 0xc5
 800abd6:	e7ee      	b.n	800abb6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800abd8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800abda:	1c53      	adds	r3, r2, #1
 800abdc:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800abde:	2b09      	cmp	r3, #9
 800abe0:	4619      	mov	r1, r3
 800abe2:	bf88      	it	hi
 800abe4:	f1a3 010a 	subhi.w	r1, r3, #10
 800abe8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800abec:	f640 103f 	movw	r0, #2367	; 0x93f
 800abf0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800abf2:	4281      	cmp	r1, r0
 800abf4:	d109      	bne.n	800ac0a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800abf6:	2b0a      	cmp	r3, #10
 800abf8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800abfc:	bf28      	it	cs
 800abfe:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800ac00:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800ac04:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800ac06:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800ac08:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800ac0a:	4620      	mov	r0, r4
}
 800ac0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800ac10:	f010 bd9a 	b.w	801b748 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ac14:	08032394 	.word	0x08032394
 800ac18:	0803239d 	.word	0x0803239d
 800ac1c:	08032448 	.word	0x08032448
 800ac20:	08032492 	.word	0x08032492
 800ac24:	080324a0 	.word	0x080324a0

0800ac28 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800ac28:	f010 bd46 	b.w	801b6b8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800ac2c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800ac2c:	b510      	push	{r4, lr}
 800ac2e:	b086      	sub	sp, #24
 800ac30:	ac02      	add	r4, sp, #8
 800ac32:	e884 0006 	stmia.w	r4, {r1, r2}
 800ac36:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800ac38:	ab0a      	add	r3, sp, #40	; 0x28
 800ac3a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800ac3c:	9301      	str	r3, [sp, #4]
 800ac3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ac40:	9300      	str	r3, [sp, #0]
 800ac42:	4621      	mov	r1, r4
 800ac44:	9b08      	ldr	r3, [sp, #32]
 800ac46:	f00d ff11 	bl	8018a6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800ac4a:	b006      	add	sp, #24
 800ac4c:	bd10      	pop	{r4, pc}
	...

0800ac50 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800ac50:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800ac52:	bb18      	cbnz	r0, 800ac9c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800ac54:	4b12      	ldr	r3, [pc, #72]	; (800aca0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800ac56:	4813      	ldr	r0, [pc, #76]	; (800aca4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800ac58:	681b      	ldr	r3, [r3, #0]
 800ac5a:	4913      	ldr	r1, [pc, #76]	; (800aca8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800ac5c:	b1b3      	cbz	r3, 800ac8c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800ac5e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800ac60:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800ac62:	441a      	add	r2, r3
 800ac64:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800ac66:	685a      	ldr	r2, [r3, #4]
 800ac68:	441a      	add	r2, r3
 800ac6a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800ac6c:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800ac6e:	4b0f      	ldr	r3, [pc, #60]	; (800acac <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800ac70:	2200      	movs	r2, #0
 800ac72:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800ac74:	f000 f838 	bl	800ace8 <_ZN17TypedTextDatabase8getFontsEv>
 800ac78:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800ac7a:	f000 f833 	bl	800ace4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800ac7e:	4b0c      	ldr	r3, [pc, #48]	; (800acb0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800ac80:	601c      	str	r4, [r3, #0]
        fonts = f;
 800ac82:	4b0c      	ldr	r3, [pc, #48]	; (800acb4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800ac84:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800ac86:	4b0c      	ldr	r3, [pc, #48]	; (800acb8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800ac88:	8018      	strh	r0, [r3, #0]
    }
}
 800ac8a:	e007      	b.n	800ac9c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800ac8c:	4b0b      	ldr	r3, [pc, #44]	; (800acbc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800ac8e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800ac90:	4b0b      	ldr	r3, [pc, #44]	; (800acc0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800ac92:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800ac94:	4b0b      	ldr	r3, [pc, #44]	; (800acc4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800ac96:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800ac98:	2c00      	cmp	r4, #0
 800ac9a:	d1e8      	bne.n	800ac6e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800ac9c:	bd38      	pop	{r3, r4, r5, pc}
 800ac9e:	bf00      	nop
 800aca0:	2000d368 	.word	0x2000d368
 800aca4:	2000d36c 	.word	0x2000d36c
 800aca8:	2000d370 	.word	0x2000d370
 800acac:	2000d374 	.word	0x2000d374
 800acb0:	2001e230 	.word	0x2001e230
 800acb4:	2001e238 	.word	0x2001e238
 800acb8:	2001e234 	.word	0x2001e234
 800acbc:	0804c7a0 	.word	0x0804c7a0
 800acc0:	0804c734 	.word	0x0804c734
 800acc4:	0804cbe8 	.word	0x0804cbe8

0800acc8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800acc8:	4b04      	ldr	r3, [pc, #16]	; (800acdc <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800acca:	681b      	ldr	r3, [r3, #0]
 800accc:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800acd0:	4b03      	ldr	r3, [pc, #12]	; (800ace0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800acd2:	681b      	ldr	r3, [r3, #0]
}
 800acd4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800acd8:	4770      	bx	lr
 800acda:	bf00      	nop
 800acdc:	2000d370 	.word	0x2000d370
 800ace0:	2000d36c 	.word	0x2000d36c

0800ace4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800ace4:	201b      	movs	r0, #27
 800ace6:	4770      	bx	lr

0800ace8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800ace8:	4800      	ldr	r0, [pc, #0]	; (800acec <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800acea:	4770      	bx	lr
 800acec:	2000d378 	.word	0x2000d378

0800acf0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 7:
        touchgfx_fonts[7] = &(getFont_arialbi_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800acf0:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800acf2:	f7ff fec5 	bl	800aa80 <_Z23getFont_verdana_20_4bppv>
};
 800acf6:	4c0c      	ldr	r4, [pc, #48]	; (800ad28 <_GLOBAL__sub_I_touchgfx_fonts+0x38>)
 800acf8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800acfa:	f7ff fefb 	bl	800aaf4 <_Z23getFont_verdana_40_4bppv>
};
 800acfe:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800ad00:	f7ff fe82 	bl	800aa08 <_Z23getFont_verdana_10_4bppv>
};
 800ad04:	60a0      	str	r0, [r4, #8]
    &(getFont_VLADIMIR_TTF_40_4bpp()),
 800ad06:	f7ff fd49 	bl	800a79c <_Z28getFont_VLADIMIR_TTF_40_4bppv>
};
 800ad0a:	60e0      	str	r0, [r4, #12]
    &(getFont_times_12_4bpp()),
 800ad0c:	f7ff fdfc 	bl	800a908 <_Z21getFont_times_12_4bppv>
};
 800ad10:	6120      	str	r0, [r4, #16]
    &(getFont_timesbd_20_4bpp()),
 800ad12:	f7ff fe39 	bl	800a988 <_Z23getFont_timesbd_20_4bppv>
};
 800ad16:	6160      	str	r0, [r4, #20]
    &(getFont_arialbd_14_4bpp()),
 800ad18:	f7ff fd7c 	bl	800a814 <_Z23getFont_arialbd_14_4bppv>
};
 800ad1c:	61a0      	str	r0, [r4, #24]
    &(getFont_arialbi_10_4bpp())
 800ad1e:	f7ff fdb7 	bl	800a890 <_Z23getFont_arialbi_10_4bppv>
};
 800ad22:	61e0      	str	r0, [r4, #28]
} // namespace TypedTextDatabase
 800ad24:	bd10      	pop	{r4, pc}
 800ad26:	bf00      	nop
 800ad28:	2000d378 	.word	0x2000d378

0800ad2c <_ZN24DataDisplayListPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~DataDisplayListPresenter() {};
 800ad2c:	4770      	bx	lr

0800ad2e <_ZThn4_N24DataDisplayListPresenterD1Ev>:
 800ad2e:	3804      	subs	r0, #4
 800ad30:	4770      	bx	lr

0800ad32 <_ZN24DataDisplayListPresenter10deactivateEv>:
}

void DataDisplayListPresenter::activate()
{

}
 800ad32:	4770      	bx	lr

0800ad34 <_ZN24DataDisplayListPresenterD0Ev>:
 800ad34:	b510      	push	{r4, lr}
 800ad36:	2110      	movs	r1, #16
 800ad38:	4604      	mov	r4, r0
 800ad3a:	f020 f9f6 	bl	802b12a <_ZdlPvj>
 800ad3e:	4620      	mov	r0, r4
 800ad40:	bd10      	pop	{r4, pc}

0800ad42 <_ZThn4_N24DataDisplayListPresenterD0Ev>:
 800ad42:	f1a0 0004 	sub.w	r0, r0, #4
 800ad46:	e7f5      	b.n	800ad34 <_ZN24DataDisplayListPresenterD0Ev>

0800ad48 <_ZN24DataDisplayListPresenterC1ER19DataDisplayListView>:
DataDisplayListPresenter::DataDisplayListPresenter(DataDisplayListView& v)
 800ad48:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800ad4a:	2200      	movs	r2, #0
 800ad4c:	6082      	str	r2, [r0, #8]
    : view(v)
 800ad4e:	4a04      	ldr	r2, [pc, #16]	; (800ad60 <_ZN24DataDisplayListPresenterC1ER19DataDisplayListView+0x18>)
 800ad50:	60c1      	str	r1, [r0, #12]
 800ad52:	f102 0408 	add.w	r4, r2, #8
 800ad56:	3220      	adds	r2, #32
 800ad58:	6004      	str	r4, [r0, #0]
 800ad5a:	6042      	str	r2, [r0, #4]
}
 800ad5c:	bd10      	pop	{r4, pc}
 800ad5e:	bf00      	nop
 800ad60:	08032574 	.word	0x08032574

0800ad64 <_ZN19DataDisplayListViewD1Ev>:

class DataDisplayListView : public DataDisplayListViewBase
{
public:
    DataDisplayListView();
    virtual ~DataDisplayListView() {}
 800ad64:	4770      	bx	lr

0800ad66 <_ZN19DataDisplayListView14tearDownScreenEv>:
}

void DataDisplayListView::tearDownScreen()
{
    DataDisplayListViewBase::tearDownScreen();
}
 800ad66:	4770      	bx	lr

0800ad68 <_ZN19DataDisplayListView11setupScreenEv>:
    DataDisplayListViewBase::setupScreen();
 800ad68:	f7f8 bd17 	b.w	800379a <_ZN23DataDisplayListViewBase11setupScreenEv>

0800ad6c <_ZN19DataDisplayListViewD0Ev>:
 800ad6c:	b510      	push	{r4, lr}
 800ad6e:	f44f 71c0 	mov.w	r1, #384	; 0x180
 800ad72:	4604      	mov	r4, r0
 800ad74:	f020 f9d9 	bl	802b12a <_ZdlPvj>
 800ad78:	4620      	mov	r0, r4
 800ad7a:	bd10      	pop	{r4, pc}

0800ad7c <_ZN19DataDisplayListViewC1Ev>:
DataDisplayListView::DataDisplayListView()
 800ad7c:	b510      	push	{r4, lr}
 800ad7e:	4604      	mov	r4, r0
 800ad80:	f7f8 fdb2 	bl	80038e8 <_ZN23DataDisplayListViewBaseC1Ev>
 800ad84:	4b01      	ldr	r3, [pc, #4]	; (800ad8c <_ZN19DataDisplayListViewC1Ev+0x10>)
 800ad86:	6023      	str	r3, [r4, #0]
}
 800ad88:	4620      	mov	r0, r4
 800ad8a:	bd10      	pop	{r4, pc}
 800ad8c:	080325a4 	.word	0x080325a4

0800ad90 <_ZN18DataSavedPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~DataSavedPresenter() {};
 800ad90:	4770      	bx	lr

0800ad92 <_ZThn4_N18DataSavedPresenterD1Ev>:
 800ad92:	3804      	subs	r0, #4
 800ad94:	4770      	bx	lr

0800ad96 <_ZN18DataSavedPresenter10deactivateEv>:
}

void DataSavedPresenter::activate()
{

}
 800ad96:	4770      	bx	lr

0800ad98 <_ZN18DataSavedPresenterD0Ev>:
 800ad98:	b510      	push	{r4, lr}
 800ad9a:	2110      	movs	r1, #16
 800ad9c:	4604      	mov	r4, r0
 800ad9e:	f020 f9c4 	bl	802b12a <_ZdlPvj>
 800ada2:	4620      	mov	r0, r4
 800ada4:	bd10      	pop	{r4, pc}

0800ada6 <_ZThn4_N18DataSavedPresenterD0Ev>:
 800ada6:	f1a0 0004 	sub.w	r0, r0, #4
 800adaa:	e7f5      	b.n	800ad98 <_ZN18DataSavedPresenterD0Ev>

0800adac <_ZN18DataSavedPresenterC1ER13DataSavedView>:
DataSavedPresenter::DataSavedPresenter(DataSavedView& v)
 800adac:	b510      	push	{r4, lr}
 800adae:	2200      	movs	r2, #0
 800adb0:	6082      	str	r2, [r0, #8]
    : view(v)
 800adb2:	4a04      	ldr	r2, [pc, #16]	; (800adc4 <_ZN18DataSavedPresenterC1ER13DataSavedView+0x18>)
 800adb4:	60c1      	str	r1, [r0, #12]
 800adb6:	f102 0408 	add.w	r4, r2, #8
 800adba:	3220      	adds	r2, #32
 800adbc:	6004      	str	r4, [r0, #0]
 800adbe:	6042      	str	r2, [r0, #4]
}
 800adc0:	bd10      	pop	{r4, pc}
 800adc2:	bf00      	nop
 800adc4:	080325d0 	.word	0x080325d0

0800adc8 <_ZN18DataSavedPresenter14DSendPresenterEv>:
{

}

void DataSavedPresenter::DSendPresenter(){
	model-> DataSaveStart();
 800adc8:	6880      	ldr	r0, [r0, #8]
 800adca:	f000 b937 	b.w	800b03c <_ZN5Model13DataSaveStartEv>

0800adce <_ZN13DataSavedViewD1Ev>:

class DataSavedView : public DataSavedViewBase
{
public:
    DataSavedView();
    virtual ~DataSavedView() {}
 800adce:	4770      	bx	lr

0800add0 <_ZN13DataSavedView14tearDownScreenEv>:
}

void DataSavedView::tearDownScreen()
{
    DataSavedViewBase::tearDownScreen();
}
 800add0:	4770      	bx	lr

0800add2 <_ZN13DataSavedView11setupScreenEv>:
    DataSavedViewBase::setupScreen();
 800add2:	f7f8 be6b 	b.w	8003aac <_ZN17DataSavedViewBase11setupScreenEv>

0800add6 <_ZN13DataSavedView15handleTickEventEv>:


void DataSavedView::handleTickEvent(){
	presenter->DSendPresenter();
 800add6:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800add8:	f7ff bff6 	b.w	800adc8 <_ZN18DataSavedPresenter14DSendPresenterEv>

0800addc <_ZN13DataSavedViewD0Ev>:
 800addc:	b510      	push	{r4, lr}
 800adde:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800ade2:	4604      	mov	r4, r0
 800ade4:	f020 f9a1 	bl	802b12a <_ZdlPvj>
 800ade8:	4620      	mov	r0, r4
 800adea:	bd10      	pop	{r4, pc}

0800adec <_ZN13DataSavedViewC1Ev>:
DataSavedView::DataSavedView()
 800adec:	b510      	push	{r4, lr}
 800adee:	4604      	mov	r4, r0
 800adf0:	f7f8 fec8 	bl	8003b84 <_ZN17DataSavedViewBaseC1Ev>
 800adf4:	4b01      	ldr	r3, [pc, #4]	; (800adfc <_ZN13DataSavedViewC1Ev+0x10>)
 800adf6:	6023      	str	r3, [r4, #0]
}
 800adf8:	4620      	mov	r0, r4
 800adfa:	bd10      	pop	{r4, pc}
 800adfc:	08032600 	.word	0x08032600

0800ae00 <_ZN19FinishPagePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~FinishPagePresenter() {};
 800ae00:	4770      	bx	lr

0800ae02 <_ZThn4_N19FinishPagePresenterD1Ev>:
 800ae02:	3804      	subs	r0, #4
 800ae04:	4770      	bx	lr

0800ae06 <_ZN19FinishPagePresenter10deactivateEv>:
}

void FinishPagePresenter::activate()
{

}
 800ae06:	4770      	bx	lr

0800ae08 <_ZN19FinishPagePresenterD0Ev>:
 800ae08:	b510      	push	{r4, lr}
 800ae0a:	2110      	movs	r1, #16
 800ae0c:	4604      	mov	r4, r0
 800ae0e:	f020 f98c 	bl	802b12a <_ZdlPvj>
 800ae12:	4620      	mov	r0, r4
 800ae14:	bd10      	pop	{r4, pc}

0800ae16 <_ZThn4_N19FinishPagePresenterD0Ev>:
 800ae16:	f1a0 0004 	sub.w	r0, r0, #4
 800ae1a:	e7f5      	b.n	800ae08 <_ZN19FinishPagePresenterD0Ev>

0800ae1c <_ZN19FinishPagePresenterC1ER14FinishPageView>:
FinishPagePresenter::FinishPagePresenter(FinishPageView& v)
 800ae1c:	b510      	push	{r4, lr}
 800ae1e:	2200      	movs	r2, #0
 800ae20:	6082      	str	r2, [r0, #8]
    : view(v)
 800ae22:	4a04      	ldr	r2, [pc, #16]	; (800ae34 <_ZN19FinishPagePresenterC1ER14FinishPageView+0x18>)
 800ae24:	60c1      	str	r1, [r0, #12]
 800ae26:	f102 0408 	add.w	r4, r2, #8
 800ae2a:	3220      	adds	r2, #32
 800ae2c:	6004      	str	r4, [r0, #0]
 800ae2e:	6042      	str	r2, [r0, #4]
}
 800ae30:	bd10      	pop	{r4, pc}
 800ae32:	bf00      	nop
 800ae34:	0803262c 	.word	0x0803262c

0800ae38 <_ZN14FinishPageViewD1Ev>:

class FinishPageView : public FinishPageViewBase
{
public:
    FinishPageView();
    virtual ~FinishPageView() {}
 800ae38:	4770      	bx	lr

0800ae3a <_ZN14FinishPageView14tearDownScreenEv>:
}

void FinishPageView::tearDownScreen()
{
    FinishPageViewBase::tearDownScreen();
}
 800ae3a:	4770      	bx	lr

0800ae3c <_ZN14FinishPageView11setupScreenEv>:
    FinishPageViewBase::setupScreen();
 800ae3c:	f7f8 bf8c 	b.w	8003d58 <_ZN18FinishPageViewBase11setupScreenEv>

0800ae40 <_ZN14FinishPageViewD0Ev>:
 800ae40:	b510      	push	{r4, lr}
 800ae42:	f44f 71c0 	mov.w	r1, #384	; 0x180
 800ae46:	4604      	mov	r4, r0
 800ae48:	f020 f96f 	bl	802b12a <_ZdlPvj>
 800ae4c:	4620      	mov	r0, r4
 800ae4e:	bd10      	pop	{r4, pc}

0800ae50 <_ZN14FinishPageViewC1Ev>:
FinishPageView::FinishPageView()
 800ae50:	b510      	push	{r4, lr}
 800ae52:	4604      	mov	r4, r0
 800ae54:	f7f8 ffcc 	bl	8003df0 <_ZN18FinishPageViewBaseC1Ev>
 800ae58:	4b01      	ldr	r3, [pc, #4]	; (800ae60 <_ZN14FinishPageViewC1Ev+0x10>)
 800ae5a:	6023      	str	r3, [r4, #0]
}
 800ae5c:	4620      	mov	r0, r4
 800ae5e:	bd10      	pop	{r4, pc}
 800ae60:	0803265c 	.word	0x0803265c

0800ae64 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800ae64:	4770      	bx	lr

0800ae66 <_ZN19FrontendApplicationD0Ev>:
 800ae66:	b510      	push	{r4, lr}
 800ae68:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800ae6c:	4604      	mov	r4, r0
 800ae6e:	f020 f95c 	bl	802b12a <_ZdlPvj>
 800ae72:	4620      	mov	r0, r4
 800ae74:	bd10      	pop	{r4, pc}

0800ae76 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800ae76:	b510      	push	{r4, lr}
 800ae78:	4604      	mov	r4, r0
    {
        model.tick();
 800ae7a:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 800ae7e:	f000 f8a8 	bl	800afd2 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800ae82:	4620      	mov	r0, r4
    }
 800ae84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800ae88:	f00e b94e 	b.w	8019128 <_ZN8touchgfx11Application15handleTickEventEv>

0800ae8c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800ae8c:	b510      	push	{r4, lr}
 800ae8e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800ae90:	f7f9 fdae 	bl	80049f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800ae94:	4b01      	ldr	r3, [pc, #4]	; (800ae9c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800ae96:	6023      	str	r3, [r4, #0]
{

}
 800ae98:	4620      	mov	r0, r4
 800ae9a:	bd10      	pop	{r4, pc}
 800ae9c:	08032694 	.word	0x08032694

0800aea0 <_ZN25InstructionPage1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~InstructionPage1Presenter() {};
 800aea0:	4770      	bx	lr

0800aea2 <_ZThn4_N25InstructionPage1PresenterD1Ev>:
 800aea2:	3804      	subs	r0, #4
 800aea4:	4770      	bx	lr

0800aea6 <_ZN25InstructionPage1Presenter10deactivateEv>:
}

void InstructionPage1Presenter::activate()
{

}
 800aea6:	4770      	bx	lr

0800aea8 <_ZN25InstructionPage1PresenterD0Ev>:
 800aea8:	b510      	push	{r4, lr}
 800aeaa:	2110      	movs	r1, #16
 800aeac:	4604      	mov	r4, r0
 800aeae:	f020 f93c 	bl	802b12a <_ZdlPvj>
 800aeb2:	4620      	mov	r0, r4
 800aeb4:	bd10      	pop	{r4, pc}

0800aeb6 <_ZThn4_N25InstructionPage1PresenterD0Ev>:
 800aeb6:	f1a0 0004 	sub.w	r0, r0, #4
 800aeba:	e7f5      	b.n	800aea8 <_ZN25InstructionPage1PresenterD0Ev>

0800aebc <_ZN25InstructionPage1PresenterC1ER20InstructionPage1View>:
InstructionPage1Presenter::InstructionPage1Presenter(InstructionPage1View& v)
 800aebc:	b510      	push	{r4, lr}
 800aebe:	2200      	movs	r2, #0
 800aec0:	6082      	str	r2, [r0, #8]
    : view(v)
 800aec2:	4a04      	ldr	r2, [pc, #16]	; (800aed4 <_ZN25InstructionPage1PresenterC1ER20InstructionPage1View+0x18>)
 800aec4:	60c1      	str	r1, [r0, #12]
 800aec6:	f102 0408 	add.w	r4, r2, #8
 800aeca:	3220      	adds	r2, #32
 800aecc:	6004      	str	r4, [r0, #0]
 800aece:	6042      	str	r2, [r0, #4]
}
 800aed0:	bd10      	pop	{r4, pc}
 800aed2:	bf00      	nop
 800aed4:	080326d8 	.word	0x080326d8

0800aed8 <_ZN20InstructionPage1ViewD1Ev>:

class InstructionPage1View : public InstructionPage1ViewBase
{
public:
    InstructionPage1View();
    virtual ~InstructionPage1View() {}
 800aed8:	4770      	bx	lr

0800aeda <_ZN20InstructionPage1View14tearDownScreenEv>:
}

void InstructionPage1View::tearDownScreen()
{
    InstructionPage1ViewBase::tearDownScreen();
}
 800aeda:	4770      	bx	lr

0800aedc <_ZN20InstructionPage1View11setupScreenEv>:
    InstructionPage1ViewBase::setupScreen();
 800aedc:	f7fb b8c1 	b.w	8006062 <_ZN24InstructionPage1ViewBase11setupScreenEv>

0800aee0 <_ZN20InstructionPage1ViewD0Ev>:
 800aee0:	b510      	push	{r4, lr}
 800aee2:	f44f 71b0 	mov.w	r1, #352	; 0x160
 800aee6:	4604      	mov	r4, r0
 800aee8:	f020 f91f 	bl	802b12a <_ZdlPvj>
 800aeec:	4620      	mov	r0, r4
 800aeee:	bd10      	pop	{r4, pc}

0800aef0 <_ZN20InstructionPage1ViewC1Ev>:
InstructionPage1View::InstructionPage1View()
 800aef0:	b510      	push	{r4, lr}
 800aef2:	4604      	mov	r4, r0
 800aef4:	f7fb f902 	bl	80060fc <_ZN24InstructionPage1ViewBaseC1Ev>
 800aef8:	4b01      	ldr	r3, [pc, #4]	; (800af00 <_ZN20InstructionPage1ViewC1Ev+0x10>)
 800aefa:	6023      	str	r3, [r4, #0]
}
 800aefc:	4620      	mov	r0, r4
 800aefe:	bd10      	pop	{r4, pc}
 800af00:	08032708 	.word	0x08032708

0800af04 <_ZN25InstructionPage2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~InstructionPage2Presenter() {};
 800af04:	4770      	bx	lr

0800af06 <_ZThn4_N25InstructionPage2PresenterD1Ev>:
 800af06:	3804      	subs	r0, #4
 800af08:	4770      	bx	lr

0800af0a <_ZN25InstructionPage2Presenter10deactivateEv>:
}

void InstructionPage2Presenter::activate()
{

}
 800af0a:	4770      	bx	lr

0800af0c <_ZN25InstructionPage2PresenterD0Ev>:
 800af0c:	b510      	push	{r4, lr}
 800af0e:	2110      	movs	r1, #16
 800af10:	4604      	mov	r4, r0
 800af12:	f020 f90a 	bl	802b12a <_ZdlPvj>
 800af16:	4620      	mov	r0, r4
 800af18:	bd10      	pop	{r4, pc}

0800af1a <_ZThn4_N25InstructionPage2PresenterD0Ev>:
 800af1a:	f1a0 0004 	sub.w	r0, r0, #4
 800af1e:	e7f5      	b.n	800af0c <_ZN25InstructionPage2PresenterD0Ev>

0800af20 <_ZN25InstructionPage2PresenterC1ER20InstructionPage2View>:
InstructionPage2Presenter::InstructionPage2Presenter(InstructionPage2View& v)
 800af20:	b510      	push	{r4, lr}
 800af22:	2200      	movs	r2, #0
 800af24:	6082      	str	r2, [r0, #8]
    : view(v)
 800af26:	4a04      	ldr	r2, [pc, #16]	; (800af38 <_ZN25InstructionPage2PresenterC1ER20InstructionPage2View+0x18>)
 800af28:	60c1      	str	r1, [r0, #12]
 800af2a:	f102 0408 	add.w	r4, r2, #8
 800af2e:	3220      	adds	r2, #32
 800af30:	6004      	str	r4, [r0, #0]
 800af32:	6042      	str	r2, [r0, #4]
}
 800af34:	bd10      	pop	{r4, pc}
 800af36:	bf00      	nop
 800af38:	08032734 	.word	0x08032734

0800af3c <_ZN20InstructionPage2ViewD1Ev>:

class InstructionPage2View : public InstructionPage2ViewBase
{
public:
    InstructionPage2View();
    virtual ~InstructionPage2View() {}
 800af3c:	4770      	bx	lr

0800af3e <_ZN20InstructionPage2View14tearDownScreenEv>:
}

void InstructionPage2View::tearDownScreen()
{
    InstructionPage2ViewBase::tearDownScreen();
}
 800af3e:	4770      	bx	lr

0800af40 <_ZN20InstructionPage2View11setupScreenEv>:
    InstructionPage2ViewBase::setupScreen();
 800af40:	f7fb b9d3 	b.w	80062ea <_ZN24InstructionPage2ViewBase11setupScreenEv>

0800af44 <_ZN20InstructionPage2ViewD0Ev>:
 800af44:	b510      	push	{r4, lr}
 800af46:	f44f 71ce 	mov.w	r1, #412	; 0x19c
 800af4a:	4604      	mov	r4, r0
 800af4c:	f020 f8ed 	bl	802b12a <_ZdlPvj>
 800af50:	4620      	mov	r0, r4
 800af52:	bd10      	pop	{r4, pc}

0800af54 <_ZN20InstructionPage2ViewC1Ev>:
InstructionPage2View::InstructionPage2View()
 800af54:	b510      	push	{r4, lr}
 800af56:	4604      	mov	r4, r0
 800af58:	f7fb fa0a 	bl	8006370 <_ZN24InstructionPage2ViewBaseC1Ev>
 800af5c:	4b01      	ldr	r3, [pc, #4]	; (800af64 <_ZN20InstructionPage2ViewC1Ev+0x10>)
 800af5e:	6023      	str	r3, [r4, #0]
}
 800af60:	4620      	mov	r0, r4
 800af62:	bd10      	pop	{r4, pc}
 800af64:	08032764 	.word	0x08032764

0800af68 <_ZN18KnownPagePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~KnownPagePresenter() {};
 800af68:	4770      	bx	lr

0800af6a <_ZThn4_N18KnownPagePresenterD1Ev>:
 800af6a:	3804      	subs	r0, #4
 800af6c:	4770      	bx	lr

0800af6e <_ZN18KnownPagePresenter10deactivateEv>:
}

void KnownPagePresenter::activate()
{

}
 800af6e:	4770      	bx	lr

0800af70 <_ZN18KnownPagePresenterD0Ev>:
 800af70:	b510      	push	{r4, lr}
 800af72:	2110      	movs	r1, #16
 800af74:	4604      	mov	r4, r0
 800af76:	f020 f8d8 	bl	802b12a <_ZdlPvj>
 800af7a:	4620      	mov	r0, r4
 800af7c:	bd10      	pop	{r4, pc}

0800af7e <_ZThn4_N18KnownPagePresenterD0Ev>:
 800af7e:	f1a0 0004 	sub.w	r0, r0, #4
 800af82:	e7f5      	b.n	800af70 <_ZN18KnownPagePresenterD0Ev>

0800af84 <_ZN18KnownPagePresenterC1ER13KnownPageView>:
KnownPagePresenter::KnownPagePresenter(KnownPageView& v)
 800af84:	b510      	push	{r4, lr}
 800af86:	2200      	movs	r2, #0
 800af88:	6082      	str	r2, [r0, #8]
    : view(v)
 800af8a:	4a04      	ldr	r2, [pc, #16]	; (800af9c <_ZN18KnownPagePresenterC1ER13KnownPageView+0x18>)
 800af8c:	60c1      	str	r1, [r0, #12]
 800af8e:	f102 0408 	add.w	r4, r2, #8
 800af92:	3220      	adds	r2, #32
 800af94:	6004      	str	r4, [r0, #0]
 800af96:	6042      	str	r2, [r0, #4]
}
 800af98:	bd10      	pop	{r4, pc}
 800af9a:	bf00      	nop
 800af9c:	08032790 	.word	0x08032790

0800afa0 <_ZN13KnownPageViewD1Ev>:

class KnownPageView : public KnownPageViewBase
{
public:
    KnownPageView();
    virtual ~KnownPageView() {}
 800afa0:	4770      	bx	lr

0800afa2 <_ZN13KnownPageView14tearDownScreenEv>:
}

void KnownPageView::tearDownScreen()
{
    KnownPageViewBase::tearDownScreen();
}
 800afa2:	4770      	bx	lr

0800afa4 <_ZN13KnownPageView11setupScreenEv>:
    KnownPageViewBase::setupScreen();
 800afa4:	f7fb bb0a 	b.w	80065bc <_ZN17KnownPageViewBase11setupScreenEv>

0800afa8 <_ZN13KnownPageViewD0Ev>:
 800afa8:	b510      	push	{r4, lr}
 800afaa:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
 800afae:	4604      	mov	r4, r0
 800afb0:	f020 f8bb 	bl	802b12a <_ZdlPvj>
 800afb4:	4620      	mov	r0, r4
 800afb6:	bd10      	pop	{r4, pc}

0800afb8 <_ZN13KnownPageViewC1Ev>:
KnownPageView::KnownPageView()
 800afb8:	b510      	push	{r4, lr}
 800afba:	4604      	mov	r4, r0
 800afbc:	f7fb fb62 	bl	8006684 <_ZN17KnownPageViewBaseC1Ev>
 800afc0:	4b01      	ldr	r3, [pc, #4]	; (800afc8 <_ZN13KnownPageViewC1Ev+0x10>)
 800afc2:	6023      	str	r3, [r4, #0]
}
 800afc4:	4620      	mov	r0, r4
 800afc6:	bd10      	pop	{r4, pc}
 800afc8:	080327c0 	.word	0x080327c0

0800afcc <_ZN5ModelC1Ev>:
     extern osMessageQueueId_t SaveDataCheckHandle;
     extern osMessageQueueId_t SaveDataEndHandle;
    // extern osMessageQueueId_t SaveDataCheckHandle;

}
 Model::Model() : modelListener(0)
 800afcc:	2200      	movs	r2, #0
 800afce:	6002      	str	r2, [r0, #0]
{
   // messageQ = xQueueGenericCreate(1, 1, 0);
}
 800afd0:	4770      	bx	lr

0800afd2 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800afd2:	4770      	bx	lr

0800afd4 <_ZN5Model15CallmeasurementEv>:

void Model::Callmeasurement()
{
	osMessageQueuePut(CallMeasurementHandle, &counter,0, 20);
 800afd4:	4803      	ldr	r0, [pc, #12]	; (800afe4 <_ZN5Model15CallmeasurementEv+0x10>)
 800afd6:	4904      	ldr	r1, [pc, #16]	; (800afe8 <_ZN5Model15CallmeasurementEv+0x14>)
 800afd8:	6800      	ldr	r0, [r0, #0]
 800afda:	2314      	movs	r3, #20
 800afdc:	2200      	movs	r2, #0
 800afde:	f004 b96f 	b.w	800f2c0 <osMessageQueuePut>
 800afe2:	bf00      	nop
 800afe4:	20002b70 	.word	0x20002b70
 800afe8:	20000020 	.word	0x20000020

0800afec <_ZN5Model13ProgressCheckEv>:

}

void Model::ProgressCheck()
{
 800afec:	b510      	push	{r4, lr}
	osMessageQueueGet(ProgressBarHandle, &Progress,0, osWaitForever);
 800afee:	480f      	ldr	r0, [pc, #60]	; (800b02c <_ZN5Model13ProgressCheckEv+0x40>)
 800aff0:	4c0f      	ldr	r4, [pc, #60]	; (800b030 <_ZN5Model13ProgressCheckEv+0x44>)
 800aff2:	6800      	ldr	r0, [r0, #0]
 800aff4:	f04f 33ff 	mov.w	r3, #4294967295
 800aff8:	2200      	movs	r2, #0
 800affa:	4621      	mov	r1, r4
 800affc:	f004 f9a2 	bl	800f344 <osMessageQueueGet>
	ProgressUpdate=((float)Progress-5)/25*100;
 800b000:	ed94 7a00 	vldr	s14, [r4]
 800b004:	4b0b      	ldr	r3, [pc, #44]	; (800b034 <_ZN5Model13ProgressCheckEv+0x48>)
 800b006:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b00a:	eef1 7a04 	vmov.f32	s15, #20	; 0x40a00000  5.0
 800b00e:	ee37 7a67 	vsub.f32	s14, s14, s15
 800b012:	eef3 6a09 	vmov.f32	s13, #57	; 0x41c80000  25.0
 800b016:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800b01a:	ed9f 7a07 	vldr	s14, [pc, #28]	; 800b038 <_ZN5Model13ProgressCheckEv+0x4c>
 800b01e:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b022:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b026:	edc3 7a00 	vstr	s15, [r3]
}
 800b02a:	bd10      	pop	{r4, pc}
 800b02c:	20002b88 	.word	0x20002b88
 800b030:	2000d398 	.word	0x2000d398
 800b034:	2000d39c 	.word	0x2000d39c
 800b038:	42c80000 	.word	0x42c80000

0800b03c <_ZN5Model13DataSaveStartEv>:

void Model::DataSaveStart(){
	osMessageQueuePut(SaveDataCheckHandle, &DSflag, 0, 20);
 800b03c:	4803      	ldr	r0, [pc, #12]	; (800b04c <_ZN5Model13DataSaveStartEv+0x10>)
 800b03e:	4904      	ldr	r1, [pc, #16]	; (800b050 <_ZN5Model13DataSaveStartEv+0x14>)
 800b040:	6800      	ldr	r0, [r0, #0]
 800b042:	2314      	movs	r3, #20
 800b044:	2200      	movs	r2, #0
 800b046:	f004 b93b 	b.w	800f2c0 <osMessageQueuePut>
 800b04a:	bf00      	nop
 800b04c:	20002c84 	.word	0x20002c84
 800b050:	2000001c 	.word	0x2000001c

0800b054 <_ZN15PIPagePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~PIPagePresenter() {};
 800b054:	4770      	bx	lr

0800b056 <_ZThn4_N15PIPagePresenterD1Ev>:
 800b056:	3804      	subs	r0, #4
 800b058:	4770      	bx	lr

0800b05a <_ZN15PIPagePresenter10deactivateEv>:
}

void PIPagePresenter::activate()
{

}
 800b05a:	4770      	bx	lr

0800b05c <_ZN15PIPagePresenterD0Ev>:
 800b05c:	b510      	push	{r4, lr}
 800b05e:	2110      	movs	r1, #16
 800b060:	4604      	mov	r4, r0
 800b062:	f020 f862 	bl	802b12a <_ZdlPvj>
 800b066:	4620      	mov	r0, r4
 800b068:	bd10      	pop	{r4, pc}

0800b06a <_ZThn4_N15PIPagePresenterD0Ev>:
 800b06a:	f1a0 0004 	sub.w	r0, r0, #4
 800b06e:	e7f5      	b.n	800b05c <_ZN15PIPagePresenterD0Ev>

0800b070 <_ZN15PIPagePresenterC1ER10PIPageView>:
PIPagePresenter::PIPagePresenter(PIPageView& v)
 800b070:	b510      	push	{r4, lr}
 800b072:	2200      	movs	r2, #0
 800b074:	6082      	str	r2, [r0, #8]
    : view(v)
 800b076:	4a04      	ldr	r2, [pc, #16]	; (800b088 <_ZN15PIPagePresenterC1ER10PIPageView+0x18>)
 800b078:	60c1      	str	r1, [r0, #12]
 800b07a:	f102 0408 	add.w	r4, r2, #8
 800b07e:	3220      	adds	r2, #32
 800b080:	6004      	str	r4, [r0, #0]
 800b082:	6042      	str	r2, [r0, #4]
}
 800b084:	bd10      	pop	{r4, pc}
 800b086:	bf00      	nop
 800b088:	080327f0 	.word	0x080327f0

0800b08c <_ZN10PIPageViewD1Ev>:

class PIPageView : public PIPageViewBase
{
public:
    PIPageView();
    virtual ~PIPageView() {}
 800b08c:	4770      	bx	lr

0800b08e <_ZN10PIPageView14tearDownScreenEv>:
}

void PIPageView::tearDownScreen()
{
    PIPageViewBase::tearDownScreen();
}
 800b08e:	4770      	bx	lr

0800b090 <_ZN10PIPageView11setupScreenEv>:
    PIPageViewBase::setupScreen();
 800b090:	f7fb bc09 	b.w	80068a6 <_ZN14PIPageViewBase11setupScreenEv>

0800b094 <_ZN10PIPageViewD0Ev>:
 800b094:	b510      	push	{r4, lr}
 800b096:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800b09a:	4604      	mov	r4, r0
 800b09c:	f020 f845 	bl	802b12a <_ZdlPvj>
 800b0a0:	4620      	mov	r0, r4
 800b0a2:	bd10      	pop	{r4, pc}

0800b0a4 <_ZN10PIPageViewC1Ev>:
PIPageView::PIPageView()
 800b0a4:	b510      	push	{r4, lr}
 800b0a6:	4604      	mov	r4, r0
 800b0a8:	f7fb fc34 	bl	8006914 <_ZN14PIPageViewBaseC1Ev>
 800b0ac:	4b01      	ldr	r3, [pc, #4]	; (800b0b4 <_ZN10PIPageViewC1Ev+0x10>)
 800b0ae:	6023      	str	r3, [r4, #0]
}
 800b0b0:	4620      	mov	r0, r4
 800b0b2:	bd10      	pop	{r4, pc}
 800b0b4:	08032820 	.word	0x08032820

0800b0b8 <_ZN20ProgressBarPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ProgressBarPresenter() {};
 800b0b8:	4770      	bx	lr

0800b0ba <_ZThn4_N20ProgressBarPresenterD1Ev>:
 800b0ba:	3804      	subs	r0, #4
 800b0bc:	4770      	bx	lr

0800b0be <_ZN20ProgressBarPresenter10deactivateEv>:
}

void ProgressBarPresenter::activate()
{

}
 800b0be:	4770      	bx	lr

0800b0c0 <_ZN20ProgressBarPresenterD0Ev>:
 800b0c0:	b510      	push	{r4, lr}
 800b0c2:	2110      	movs	r1, #16
 800b0c4:	4604      	mov	r4, r0
 800b0c6:	f020 f830 	bl	802b12a <_ZdlPvj>
 800b0ca:	4620      	mov	r0, r4
 800b0cc:	bd10      	pop	{r4, pc}

0800b0ce <_ZThn4_N20ProgressBarPresenterD0Ev>:
 800b0ce:	f1a0 0004 	sub.w	r0, r0, #4
 800b0d2:	e7f5      	b.n	800b0c0 <_ZN20ProgressBarPresenterD0Ev>

0800b0d4 <_ZN20ProgressBarPresenterC1ER15ProgressBarView>:
ProgressBarPresenter::ProgressBarPresenter(ProgressBarView& v)
 800b0d4:	b510      	push	{r4, lr}
 800b0d6:	2200      	movs	r2, #0
 800b0d8:	6082      	str	r2, [r0, #8]
    : view(v)
 800b0da:	4a04      	ldr	r2, [pc, #16]	; (800b0ec <_ZN20ProgressBarPresenterC1ER15ProgressBarView+0x18>)
 800b0dc:	60c1      	str	r1, [r0, #12]
 800b0de:	f102 0408 	add.w	r4, r2, #8
 800b0e2:	3220      	adds	r2, #32
 800b0e4:	6004      	str	r4, [r0, #0]
 800b0e6:	6042      	str	r2, [r0, #4]
}
 800b0e8:	bd10      	pop	{r4, pc}
 800b0ea:	bf00      	nop
 800b0ec:	0803284c 	.word	0x0803284c

0800b0f0 <_ZN20ProgressBarPresenter17ProgressPresenterEv>:
{

}

void ProgressBarPresenter::ProgressPresenter(){
	model->ProgressCheck();
 800b0f0:	6880      	ldr	r0, [r0, #8]
 800b0f2:	f7ff bf7b 	b.w	800afec <_ZN5Model13ProgressCheckEv>

0800b0f6 <_ZN15ProgressBarViewD1Ev>:

class ProgressBarView : public ProgressBarViewBase
{
public:
    ProgressBarView();
    virtual ~ProgressBarView() {}
 800b0f6:	4770      	bx	lr

0800b0f8 <_ZN15ProgressBarView14tearDownScreenEv>:
}

void ProgressBarView::tearDownScreen()
{
    ProgressBarViewBase::tearDownScreen();
}
 800b0f8:	4770      	bx	lr

0800b0fa <_ZN15ProgressBarView11setupScreenEv>:
    ProgressBarViewBase::setupScreen();
 800b0fa:	f7fb bcee 	b.w	8006ada <_ZN19ProgressBarViewBase11setupScreenEv>

0800b0fe <_ZN15ProgressBarViewD0Ev>:
 800b0fe:	b510      	push	{r4, lr}
 800b100:	f241 51e8 	movw	r1, #5608	; 0x15e8
 800b104:	4604      	mov	r4, r0
 800b106:	f020 f810 	bl	802b12a <_ZdlPvj>
 800b10a:	4620      	mov	r0, r4
 800b10c:	bd10      	pop	{r4, pc}
	...

0800b110 <_ZN15ProgressBarView15handleTickEventEv>:

extern int ProgressUpdate;
void ProgressBarView::handleTickEvent(){
 800b110:	b538      	push	{r3, r4, r5, lr}
  presenter->ProgressPresenter();
  circleProgress1.setValue(ProgressUpdate);
 800b112:	4d0c      	ldr	r5, [pc, #48]	; (800b144 <_ZN15ProgressBarView15handleTickEventEv+0x34>)
void ProgressBarView::handleTickEvent(){
 800b114:	4604      	mov	r4, r0
  presenter->ProgressPresenter();
 800b116:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800b118:	f7ff ffea 	bl	800b0f0 <_ZN20ProgressBarPresenter17ProgressPresenterEv>
  circleProgress1.setValue(ProgressUpdate);
 800b11c:	6829      	ldr	r1, [r5, #0]
 800b11e:	f104 0098 	add.w	r0, r4, #152	; 0x98
 800b122:	f006 fbef 	bl	8011904 <_ZN8touchgfx14CircleProgress8setValueEi>
  textProgress1.setValue(ProgressUpdate);
 800b126:	6829      	ldr	r1, [r5, #0]
 800b128:	f504 70e6 	add.w	r0, r4, #460	; 0x1cc
 800b12c:	f006 fa8e 	bl	801164c <_ZN8touchgfx12TextProgress8setValueEi>
  if(ProgressUpdate==100){
 800b130:	682b      	ldr	r3, [r5, #0]
 800b132:	2b64      	cmp	r3, #100	; 0x64
 800b134:	d105      	bne.n	800b142 <_ZN15ProgressBarView15handleTickEventEv+0x32>
 800b136:	f00e f90f 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
	  application().gotoDataDisplayListScreenSlideTransitionNorth();
  }
}
 800b13a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	  application().gotoDataDisplayListScreenSlideTransitionNorth();
 800b13e:	f7f9 bd07 	b.w	8004b50 <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionNorthEv>
}
 800b142:	bd38      	pop	{r3, r4, r5, pc}
 800b144:	2000d39c 	.word	0x2000d39c

0800b148 <_ZN15ProgressBarViewC1Ev>:
ProgressBarView::ProgressBarView()
 800b148:	b510      	push	{r4, lr}
 800b14a:	4604      	mov	r4, r0
 800b14c:	f7fb fd0e 	bl	8006b6c <_ZN19ProgressBarViewBaseC1Ev>
 800b150:	4b01      	ldr	r3, [pc, #4]	; (800b158 <_ZN15ProgressBarViewC1Ev+0x10>)
 800b152:	6023      	str	r3, [r4, #0]
}
 800b154:	4620      	mov	r0, r4
 800b156:	bd10      	pop	{r4, pc}
 800b158:	0803287c 	.word	0x0803287c

0800b15c <_ZN23ReactanceGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ReactanceGraphPresenter() {};
 800b15c:	4770      	bx	lr

0800b15e <_ZThn4_N23ReactanceGraphPresenterD1Ev>:
 800b15e:	3804      	subs	r0, #4
 800b160:	4770      	bx	lr

0800b162 <_ZN23ReactanceGraphPresenter10deactivateEv>:
}

void ReactanceGraphPresenter::activate()
{

}
 800b162:	4770      	bx	lr

0800b164 <_ZN23ReactanceGraphPresenterD0Ev>:
 800b164:	b510      	push	{r4, lr}
 800b166:	2110      	movs	r1, #16
 800b168:	4604      	mov	r4, r0
 800b16a:	f01f ffde 	bl	802b12a <_ZdlPvj>
 800b16e:	4620      	mov	r0, r4
 800b170:	bd10      	pop	{r4, pc}

0800b172 <_ZThn4_N23ReactanceGraphPresenterD0Ev>:
 800b172:	f1a0 0004 	sub.w	r0, r0, #4
 800b176:	e7f5      	b.n	800b164 <_ZN23ReactanceGraphPresenterD0Ev>

0800b178 <_ZN23ReactanceGraphPresenterC1ER18ReactanceGraphView>:
ReactanceGraphPresenter::ReactanceGraphPresenter(ReactanceGraphView& v)
 800b178:	b510      	push	{r4, lr}
 800b17a:	2200      	movs	r2, #0
 800b17c:	6082      	str	r2, [r0, #8]
    : view(v)
 800b17e:	4a04      	ldr	r2, [pc, #16]	; (800b190 <_ZN23ReactanceGraphPresenterC1ER18ReactanceGraphView+0x18>)
 800b180:	60c1      	str	r1, [r0, #12]
 800b182:	f102 0408 	add.w	r4, r2, #8
 800b186:	3220      	adds	r2, #32
 800b188:	6004      	str	r4, [r0, #0]
 800b18a:	6042      	str	r2, [r0, #4]
}
 800b18c:	bd10      	pop	{r4, pc}
 800b18e:	bf00      	nop
 800b190:	080328a8 	.word	0x080328a8

0800b194 <_ZN18ReactanceGraphViewD1Ev>:

class ReactanceGraphView : public ReactanceGraphViewBase
{
public:
    ReactanceGraphView();
    virtual ~ReactanceGraphView() {}
 800b194:	4770      	bx	lr

0800b196 <_ZN18ReactanceGraphView14tearDownScreenEv>:
}

void ReactanceGraphView::tearDownScreen()
{
    ReactanceGraphViewBase::tearDownScreen();
}
 800b196:	4770      	bx	lr

0800b198 <_ZN18ReactanceGraphView11setupScreenEv>:
    ReactanceGraphViewBase::setupScreen();
 800b198:	f7fc b8a7 	b.w	80072ea <_ZN22ReactanceGraphViewBase11setupScreenEv>

0800b19c <_ZN18ReactanceGraphView13PlotReactanceEv>:

extern float Reactance[31];
int m=5;

void ReactanceGraphView::PlotReactance(){
 800b19c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


	//	presenter->RGraphPresenter();
		ReactanceGraph.clear();
 800b19e:	f100 06d4 	add.w	r6, r0, #212	; 0xd4
void ReactanceGraphView::PlotReactance(){
 800b1a2:	ed2d 8b02 	vpush	{d8}
		for(m=5;m<31;m++){
 800b1a6:	4d33      	ldr	r5, [pc, #204]	; (800b274 <_ZN18ReactanceGraphView13PlotReactanceEv+0xd8>)
			ReactanceGraph.addDataPoint((float)m,(float)Reactance[m]);
 800b1a8:	4f33      	ldr	r7, [pc, #204]	; (800b278 <_ZN18ReactanceGraphView13PlotReactanceEv+0xdc>)
void ReactanceGraphView::PlotReactance(){
 800b1aa:	4604      	mov	r4, r0
		ReactanceGraph.clear();
 800b1ac:	4630      	mov	r0, r6
 800b1ae:	f009 fb53 	bl	8014858 <_ZN8touchgfx17AbstractDataGraph5clearEv>
		for(m=5;m<31;m++){
 800b1b2:	2305      	movs	r3, #5
 800b1b4:	602b      	str	r3, [r5, #0]
 800b1b6:	eeb7 8a08 	vmov.f32	s16, #120	; 0x3fc00000  1.5
            return int(fs + 0.5f);
 800b1ba:	eef6 8a00 	vmov.f32	s17, #96	; 0x3f000000  0.5
 800b1be:	682b      	ldr	r3, [r5, #0]
 800b1c0:	2b1e      	cmp	r3, #30
 800b1c2:	dc54      	bgt.n	800b26e <_ZN18ReactanceGraphView13PlotReactanceEv+0xd2>
        const float fs = f * scale;
 800b1c4:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
			ReactanceGraph.addDataPoint((float)m,(float)Reactance[m]);
 800b1c8:	ee07 3a10 	vmov	s14, r3
 800b1cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b1d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b1d4:	eb07 0283 	add.w	r2, r7, r3, lsl #2
 800b1d8:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b1dc:	edd2 6a00 	vldr	s13, [r2]
        if (fs >= 0)
 800b1e0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b1e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b1e8:	db1d      	blt.n	800b226 <_ZN18ReactanceGraphView13PlotReactanceEv+0x8a>
            return int(fs + 0.5f);
 800b1ea:	ee77 7aa8 	vadd.f32	s15, s15, s17
 800b1ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b1f2:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800b1f6:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 800b1fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b1fe:	ee67 7aa6 	vmul.f32	s15, s15, s13
        if (fs >= 0)
 800b202:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b206:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b20a:	db1e      	blt.n	800b24a <_ZN18ReactanceGraphView13PlotReactanceEv+0xae>
            return int(fs + 0.5f);
 800b20c:	ee77 7aa8 	vadd.f32	s15, s15, s17
 800b210:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b214:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800b218:	4630      	mov	r0, r6
 800b21a:	f009 ff39 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
		for(m=5;m<31;m++){
 800b21e:	682b      	ldr	r3, [r5, #0]
 800b220:	3301      	adds	r3, #1
 800b222:	602b      	str	r3, [r5, #0]
 800b224:	e7cb      	b.n	800b1be <_ZN18ReactanceGraphView13PlotReactanceEv+0x22>
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 800b226:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800b22a:	eeb8 6ac7 	vcvt.f32.s32	s12, s14
 800b22e:	ee17 3a10 	vmov	r3, s14
 800b232:	ee77 7ac6 	vsub.f32	s15, s15, s12
 800b236:	1e59      	subs	r1, r3, #1
 800b238:	ee77 7a88 	vadd.f32	s15, s15, s16
 800b23c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b240:	ee17 3a90 	vmov	r3, s15
 800b244:	440b      	add	r3, r1
 800b246:	4619      	mov	r1, r3
 800b248:	e7d5      	b.n	800b1f6 <_ZN18ReactanceGraphView13PlotReactanceEv+0x5a>
 800b24a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800b24e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800b252:	ee17 3a10 	vmov	r3, s14
 800b256:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800b25a:	1e5a      	subs	r2, r3, #1
 800b25c:	ee77 7a88 	vadd.f32	s15, s15, s16
 800b260:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b264:	ee17 3a90 	vmov	r3, s15
 800b268:	4413      	add	r3, r2
 800b26a:	461a      	mov	r2, r3
 800b26c:	e7d4      	b.n	800b218 <_ZN18ReactanceGraphView13PlotReactanceEv+0x7c>
		}
}
 800b26e:	ecbd 8b02 	vpop	{d8}
 800b272:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b274:	20000024 	.word	0x20000024
 800b278:	20002b8c 	.word	0x20002b8c

0800b27c <_ZN18ReactanceGraphViewD0Ev>:
 800b27c:	b510      	push	{r4, lr}
 800b27e:	f241 71b8 	movw	r1, #6072	; 0x17b8
 800b282:	4604      	mov	r4, r0
 800b284:	f01f ff51 	bl	802b12a <_ZdlPvj>
 800b288:	4620      	mov	r0, r4
 800b28a:	bd10      	pop	{r4, pc}

0800b28c <_ZN18ReactanceGraphViewC1Ev>:
ReactanceGraphView::ReactanceGraphView()
 800b28c:	b510      	push	{r4, lr}
 800b28e:	4604      	mov	r4, r0
 800b290:	f7fc f940 	bl	8007514 <_ZN22ReactanceGraphViewBaseC1Ev>
 800b294:	4b01      	ldr	r3, [pc, #4]	; (800b29c <_ZN18ReactanceGraphViewC1Ev+0x10>)
 800b296:	6023      	str	r3, [r4, #0]
}
 800b298:	4620      	mov	r0, r4
 800b29a:	bd10      	pop	{r4, pc}
 800b29c:	080328d8 	.word	0x080328d8

0800b2a0 <_ZN24ResistanceGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ResistanceGraphPresenter() {};
 800b2a0:	4770      	bx	lr

0800b2a2 <_ZThn4_N24ResistanceGraphPresenterD1Ev>:
 800b2a2:	3804      	subs	r0, #4
 800b2a4:	4770      	bx	lr

0800b2a6 <_ZN24ResistanceGraphPresenter10deactivateEv>:
}

void ResistanceGraphPresenter::activate()
{

}
 800b2a6:	4770      	bx	lr

0800b2a8 <_ZN24ResistanceGraphPresenterD0Ev>:
 800b2a8:	b510      	push	{r4, lr}
 800b2aa:	2110      	movs	r1, #16
 800b2ac:	4604      	mov	r4, r0
 800b2ae:	f01f ff3c 	bl	802b12a <_ZdlPvj>
 800b2b2:	4620      	mov	r0, r4
 800b2b4:	bd10      	pop	{r4, pc}

0800b2b6 <_ZThn4_N24ResistanceGraphPresenterD0Ev>:
 800b2b6:	f1a0 0004 	sub.w	r0, r0, #4
 800b2ba:	e7f5      	b.n	800b2a8 <_ZN24ResistanceGraphPresenterD0Ev>

0800b2bc <_ZN24ResistanceGraphPresenterC1ER19ResistanceGraphView>:
ResistanceGraphPresenter::ResistanceGraphPresenter(ResistanceGraphView& v)
 800b2bc:	b510      	push	{r4, lr}
 800b2be:	2200      	movs	r2, #0
 800b2c0:	6082      	str	r2, [r0, #8]
    : view(v)
 800b2c2:	4a04      	ldr	r2, [pc, #16]	; (800b2d4 <_ZN24ResistanceGraphPresenterC1ER19ResistanceGraphView+0x18>)
 800b2c4:	60c1      	str	r1, [r0, #12]
 800b2c6:	f102 0408 	add.w	r4, r2, #8
 800b2ca:	3220      	adds	r2, #32
 800b2cc:	6004      	str	r4, [r0, #0]
 800b2ce:	6042      	str	r2, [r0, #4]
}
 800b2d0:	bd10      	pop	{r4, pc}
 800b2d2:	bf00      	nop
 800b2d4:	08032908 	.word	0x08032908

0800b2d8 <_ZN19ResistanceGraphViewD1Ev>:

class ResistanceGraphView : public ResistanceGraphViewBase
{
public:
    ResistanceGraphView();
    virtual ~ResistanceGraphView() {}
 800b2d8:	4770      	bx	lr

0800b2da <_ZN19ResistanceGraphView14tearDownScreenEv>:
}

void ResistanceGraphView::tearDownScreen()
{
    ResistanceGraphViewBase::tearDownScreen();
}
 800b2da:	4770      	bx	lr

0800b2dc <_ZN19ResistanceGraphView11setupScreenEv>:
    ResistanceGraphViewBase::setupScreen();
 800b2dc:	f7fd bc78 	b.w	8008bd0 <_ZN23ResistanceGraphViewBase11setupScreenEv>

0800b2e0 <_ZN19ResistanceGraphView14PlotResistanceEv>:

extern float Resistance[31];
int n=5;

void ResistanceGraphView::PlotResistance(){
 800b2e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

//	presenter->RGraphPresenter();
	ResistanceGraph.clear();
 800b2e2:	f100 0698 	add.w	r6, r0, #152	; 0x98
void ResistanceGraphView::PlotResistance(){
 800b2e6:	ed2d 8b02 	vpush	{d8}
	for(n=5;n<31;n++){
 800b2ea:	4d33      	ldr	r5, [pc, #204]	; (800b3b8 <_ZN19ResistanceGraphView14PlotResistanceEv+0xd8>)
		ResistanceGraph.addDataPoint((float)n,(float)Resistance[n]);
 800b2ec:	4f33      	ldr	r7, [pc, #204]	; (800b3bc <_ZN19ResistanceGraphView14PlotResistanceEv+0xdc>)
void ResistanceGraphView::PlotResistance(){
 800b2ee:	4604      	mov	r4, r0
	ResistanceGraph.clear();
 800b2f0:	4630      	mov	r0, r6
 800b2f2:	f009 fab1 	bl	8014858 <_ZN8touchgfx17AbstractDataGraph5clearEv>
	for(n=5;n<31;n++){
 800b2f6:	2305      	movs	r3, #5
 800b2f8:	602b      	str	r3, [r5, #0]
 800b2fa:	eeb7 8a08 	vmov.f32	s16, #120	; 0x3fc00000  1.5
            return int(fs + 0.5f);
 800b2fe:	eef6 8a00 	vmov.f32	s17, #96	; 0x3f000000  0.5
 800b302:	682b      	ldr	r3, [r5, #0]
 800b304:	2b1e      	cmp	r3, #30
 800b306:	dc54      	bgt.n	800b3b2 <_ZN19ResistanceGraphView14PlotResistanceEv+0xd2>
        const float fs = f * scale;
 800b308:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
		ResistanceGraph.addDataPoint((float)n,(float)Resistance[n]);
 800b30c:	ee07 3a10 	vmov	s14, r3
 800b310:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b314:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b318:	eb07 0283 	add.w	r2, r7, r3, lsl #2
 800b31c:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b320:	edd2 6a00 	vldr	s13, [r2]
        if (fs >= 0)
 800b324:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b32c:	db1d      	blt.n	800b36a <_ZN19ResistanceGraphView14PlotResistanceEv+0x8a>
            return int(fs + 0.5f);
 800b32e:	ee77 7aa8 	vadd.f32	s15, s15, s17
 800b332:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b336:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800b33a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800b33e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b342:	ee67 7aa6 	vmul.f32	s15, s15, s13
        if (fs >= 0)
 800b346:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b34a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b34e:	db1e      	blt.n	800b38e <_ZN19ResistanceGraphView14PlotResistanceEv+0xae>
            return int(fs + 0.5f);
 800b350:	ee77 7aa8 	vadd.f32	s15, s15, s17
 800b354:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b358:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800b35c:	4630      	mov	r0, r6
 800b35e:	f009 fe97 	bl	8015090 <_ZN8touchgfx9GraphData8addValueEii>
	for(n=5;n<31;n++){
 800b362:	682b      	ldr	r3, [r5, #0]
 800b364:	3301      	adds	r3, #1
 800b366:	602b      	str	r3, [r5, #0]
 800b368:	e7cb      	b.n	800b302 <_ZN19ResistanceGraphView14PlotResistanceEv+0x22>
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 800b36a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800b36e:	eeb8 6ac7 	vcvt.f32.s32	s12, s14
 800b372:	ee17 3a10 	vmov	r3, s14
 800b376:	ee77 7ac6 	vsub.f32	s15, s15, s12
 800b37a:	1e59      	subs	r1, r3, #1
 800b37c:	ee77 7a88 	vadd.f32	s15, s15, s16
 800b380:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b384:	ee17 3a90 	vmov	r3, s15
 800b388:	440b      	add	r3, r1
 800b38a:	4619      	mov	r1, r3
 800b38c:	e7d5      	b.n	800b33a <_ZN19ResistanceGraphView14PlotResistanceEv+0x5a>
 800b38e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800b392:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800b396:	ee17 3a10 	vmov	r3, s14
 800b39a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800b39e:	1e5a      	subs	r2, r3, #1
 800b3a0:	ee77 7a88 	vadd.f32	s15, s15, s16
 800b3a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b3a8:	ee17 3a90 	vmov	r3, s15
 800b3ac:	4413      	add	r3, r2
 800b3ae:	461a      	mov	r2, r3
 800b3b0:	e7d4      	b.n	800b35c <_ZN19ResistanceGraphView14PlotResistanceEv+0x7c>
	}
}
 800b3b2:	ecbd 8b02 	vpop	{d8}
 800b3b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b3b8:	20000028 	.word	0x20000028
 800b3bc:	20002c08 	.word	0x20002c08

0800b3c0 <_ZN19ResistanceGraphViewD0Ev>:
 800b3c0:	b510      	push	{r4, lr}
 800b3c2:	f241 71b8 	movw	r1, #6072	; 0x17b8
 800b3c6:	4604      	mov	r4, r0
 800b3c8:	f01f feaf 	bl	802b12a <_ZdlPvj>
 800b3cc:	4620      	mov	r0, r4
 800b3ce:	bd10      	pop	{r4, pc}

0800b3d0 <_ZN19ResistanceGraphViewC1Ev>:
ResistanceGraphView::ResistanceGraphView()
 800b3d0:	b510      	push	{r4, lr}
 800b3d2:	4604      	mov	r4, r0
 800b3d4:	f7fd fc36 	bl	8008c44 <_ZN23ResistanceGraphViewBaseC1Ev>
 800b3d8:	4b01      	ldr	r3, [pc, #4]	; (800b3e0 <_ZN19ResistanceGraphViewC1Ev+0x10>)
 800b3da:	6023      	str	r3, [r4, #0]
}
 800b3dc:	4620      	mov	r0, r4
 800b3de:	bd10      	pop	{r4, pc}
 800b3e0:	08032938 	.word	0x08032938

0800b3e4 <_ZN25StartMeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartMeasurementPresenter() {};
 800b3e4:	4770      	bx	lr

0800b3e6 <_ZThn4_N25StartMeasurementPresenterD1Ev>:
 800b3e6:	3804      	subs	r0, #4
 800b3e8:	4770      	bx	lr

0800b3ea <_ZN25StartMeasurementPresenter10deactivateEv>:
}

void StartMeasurementPresenter::activate()
{

}
 800b3ea:	4770      	bx	lr

0800b3ec <_ZN25StartMeasurementPresenterD0Ev>:
 800b3ec:	b510      	push	{r4, lr}
 800b3ee:	2110      	movs	r1, #16
 800b3f0:	4604      	mov	r4, r0
 800b3f2:	f01f fe9a 	bl	802b12a <_ZdlPvj>
 800b3f6:	4620      	mov	r0, r4
 800b3f8:	bd10      	pop	{r4, pc}

0800b3fa <_ZThn4_N25StartMeasurementPresenterD0Ev>:
 800b3fa:	f1a0 0004 	sub.w	r0, r0, #4
 800b3fe:	e7f5      	b.n	800b3ec <_ZN25StartMeasurementPresenterD0Ev>

0800b400 <_ZN25StartMeasurementPresenterC1ER20StartMeasurementView>:
StartMeasurementPresenter::StartMeasurementPresenter(StartMeasurementView& v)
 800b400:	b510      	push	{r4, lr}
 800b402:	2200      	movs	r2, #0
 800b404:	6082      	str	r2, [r0, #8]
    : view(v)
 800b406:	4a04      	ldr	r2, [pc, #16]	; (800b418 <_ZN25StartMeasurementPresenterC1ER20StartMeasurementView+0x18>)
 800b408:	60c1      	str	r1, [r0, #12]
 800b40a:	f102 0408 	add.w	r4, r2, #8
 800b40e:	3220      	adds	r2, #32
 800b410:	6004      	str	r4, [r0, #0]
 800b412:	6042      	str	r2, [r0, #4]
}
 800b414:	bd10      	pop	{r4, pc}
 800b416:	bf00      	nop
 800b418:	08032968 	.word	0x08032968

0800b41c <_ZN25StartMeasurementPresenter11SMpresenterEv>:
{

}

void StartMeasurementPresenter::SMpresenter(){
	model->Callmeasurement();
 800b41c:	6880      	ldr	r0, [r0, #8]
 800b41e:	f7ff bdd9 	b.w	800afd4 <_ZN5Model15CallmeasurementEv>

0800b422 <_ZN20StartMeasurementViewD1Ev>:

class StartMeasurementView : public StartMeasurementViewBase
{
public:
    StartMeasurementView();
    virtual ~StartMeasurementView() {}
 800b422:	4770      	bx	lr

0800b424 <_ZN20StartMeasurementView14tearDownScreenEv>:
}

void StartMeasurementView::tearDownScreen()
{
    StartMeasurementViewBase::tearDownScreen();
}
 800b424:	4770      	bx	lr

0800b426 <_ZN20StartMeasurementView11setupScreenEv>:
    StartMeasurementViewBase::setupScreen();
 800b426:	f7fe bf69 	b.w	800a2fc <_ZN24StartMeasurementViewBase11setupScreenEv>

0800b42a <_ZN20StartMeasurementView16StartMeasurementEv>:

void StartMeasurementView::StartMeasurement()
{
  presenter->SMpresenter();
 800b42a:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800b42c:	f7ff bff6 	b.w	800b41c <_ZN25StartMeasurementPresenter11SMpresenterEv>

0800b430 <_ZN20StartMeasurementViewD0Ev>:
 800b430:	b510      	push	{r4, lr}
 800b432:	f44f 7194 	mov.w	r1, #296	; 0x128
 800b436:	4604      	mov	r4, r0
 800b438:	f01f fe77 	bl	802b12a <_ZdlPvj>
 800b43c:	4620      	mov	r0, r4
 800b43e:	bd10      	pop	{r4, pc}

0800b440 <_ZN20StartMeasurementViewC1Ev>:
StartMeasurementView::StartMeasurementView()
 800b440:	b510      	push	{r4, lr}
 800b442:	4604      	mov	r4, r0
 800b444:	f7fe ff96 	bl	800a374 <_ZN24StartMeasurementViewBaseC1Ev>
 800b448:	4b01      	ldr	r3, [pc, #4]	; (800b450 <_ZN20StartMeasurementViewC1Ev+0x10>)
 800b44a:	6023      	str	r3, [r4, #0]
}
 800b44c:	4620      	mov	r0, r4
 800b44e:	bd10      	pop	{r4, pc}
 800b450:	08032998 	.word	0x08032998

0800b454 <_ZN18StartPagePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartPagePresenter() {};
 800b454:	4770      	bx	lr

0800b456 <_ZThn4_N18StartPagePresenterD1Ev>:
 800b456:	3804      	subs	r0, #4
 800b458:	4770      	bx	lr

0800b45a <_ZN18StartPagePresenter10deactivateEv>:
}

void StartPagePresenter::activate()
{

}
 800b45a:	4770      	bx	lr

0800b45c <_ZN18StartPagePresenterD0Ev>:
 800b45c:	b510      	push	{r4, lr}
 800b45e:	2110      	movs	r1, #16
 800b460:	4604      	mov	r4, r0
 800b462:	f01f fe62 	bl	802b12a <_ZdlPvj>
 800b466:	4620      	mov	r0, r4
 800b468:	bd10      	pop	{r4, pc}

0800b46a <_ZThn4_N18StartPagePresenterD0Ev>:
 800b46a:	f1a0 0004 	sub.w	r0, r0, #4
 800b46e:	e7f5      	b.n	800b45c <_ZN18StartPagePresenterD0Ev>

0800b470 <_ZN18StartPagePresenterC1ER13StartPageView>:
StartPagePresenter::StartPagePresenter(StartPageView& v)
 800b470:	b510      	push	{r4, lr}
 800b472:	2200      	movs	r2, #0
 800b474:	6082      	str	r2, [r0, #8]
    : view(v)
 800b476:	4a04      	ldr	r2, [pc, #16]	; (800b488 <_ZN18StartPagePresenterC1ER13StartPageView+0x18>)
 800b478:	60c1      	str	r1, [r0, #12]
 800b47a:	f102 0408 	add.w	r4, r2, #8
 800b47e:	3220      	adds	r2, #32
 800b480:	6004      	str	r4, [r0, #0]
 800b482:	6042      	str	r2, [r0, #4]
}
 800b484:	bd10      	pop	{r4, pc}
 800b486:	bf00      	nop
 800b488:	080329c8 	.word	0x080329c8

0800b48c <_ZN13StartPageViewD1Ev>:

class StartPageView : public StartPageViewBase
{
public:
    StartPageView();
    virtual ~StartPageView() {}
 800b48c:	4770      	bx	lr

0800b48e <_ZN13StartPageView14tearDownScreenEv>:
}

void StartPageView::tearDownScreen()
{
    StartPageViewBase::tearDownScreen();
}
 800b48e:	4770      	bx	lr

0800b490 <_ZN13StartPageView11setupScreenEv>:
    StartPageViewBase::setupScreen();
 800b490:	f7ff b85d 	b.w	800a54e <_ZN17StartPageViewBase11setupScreenEv>

0800b494 <_ZN13StartPageViewD0Ev>:
 800b494:	b510      	push	{r4, lr}
 800b496:	f44f 71ba 	mov.w	r1, #372	; 0x174
 800b49a:	4604      	mov	r4, r0
 800b49c:	f01f fe45 	bl	802b12a <_ZdlPvj>
 800b4a0:	4620      	mov	r0, r4
 800b4a2:	bd10      	pop	{r4, pc}

0800b4a4 <_ZN13StartPageViewC1Ev>:
StartPageView::StartPageView()
 800b4a4:	b510      	push	{r4, lr}
 800b4a6:	4604      	mov	r4, r0
 800b4a8:	f7ff f88a 	bl	800a5c0 <_ZN17StartPageViewBaseC1Ev>
 800b4ac:	4b01      	ldr	r3, [pc, #4]	; (800b4b4 <_ZN13StartPageViewC1Ev+0x10>)
 800b4ae:	6023      	str	r3, [r4, #0]
}
 800b4b0:	4620      	mov	r0, r4
 800b4b2:	bd10      	pop	{r4, pc}
 800b4b4:	080329f8 	.word	0x080329f8

0800b4b8 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800b4b8:	20f0      	movs	r0, #240	; 0xf0
 800b4ba:	4770      	bx	lr

0800b4bc <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800b4bc:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800b4c0:	4770      	bx	lr

0800b4c2 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800b4c2:	2029      	movs	r0, #41	; 0x29
 800b4c4:	f7f7 b8d6 	b.w	8002674 <LCD_IO_WriteReg>

0800b4c8 <ili9341_DisplayOff>:
 800b4c8:	2028      	movs	r0, #40	; 0x28
 800b4ca:	f7f7 b8d3 	b.w	8002674 <LCD_IO_WriteReg>

0800b4ce <ili9341_Init>:
{
 800b4ce:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b4d0:	f7f7 f8a4 	bl	800261c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800b4d4:	20ca      	movs	r0, #202	; 0xca
 800b4d6:	f7f7 f8cd 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b4da:	20c3      	movs	r0, #195	; 0xc3
 800b4dc:	f7f7 f8ae 	bl	800263c <LCD_IO_WriteData>
 800b4e0:	2008      	movs	r0, #8
 800b4e2:	f7f7 f8ab 	bl	800263c <LCD_IO_WriteData>
 800b4e6:	2050      	movs	r0, #80	; 0x50
 800b4e8:	f7f7 f8a8 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b4ec:	20cf      	movs	r0, #207	; 0xcf
 800b4ee:	f7f7 f8c1 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b4f2:	2000      	movs	r0, #0
 800b4f4:	f7f7 f8a2 	bl	800263c <LCD_IO_WriteData>
 800b4f8:	20c1      	movs	r0, #193	; 0xc1
 800b4fa:	f7f7 f89f 	bl	800263c <LCD_IO_WriteData>
 800b4fe:	2030      	movs	r0, #48	; 0x30
 800b500:	f7f7 f89c 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b504:	20ed      	movs	r0, #237	; 0xed
 800b506:	f7f7 f8b5 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b50a:	2064      	movs	r0, #100	; 0x64
 800b50c:	f7f7 f896 	bl	800263c <LCD_IO_WriteData>
 800b510:	2003      	movs	r0, #3
 800b512:	f7f7 f893 	bl	800263c <LCD_IO_WriteData>
 800b516:	2012      	movs	r0, #18
 800b518:	f7f7 f890 	bl	800263c <LCD_IO_WriteData>
 800b51c:	2081      	movs	r0, #129	; 0x81
 800b51e:	f7f7 f88d 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b522:	20e8      	movs	r0, #232	; 0xe8
 800b524:	f7f7 f8a6 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b528:	2085      	movs	r0, #133	; 0x85
 800b52a:	f7f7 f887 	bl	800263c <LCD_IO_WriteData>
 800b52e:	2000      	movs	r0, #0
 800b530:	f7f7 f884 	bl	800263c <LCD_IO_WriteData>
 800b534:	2078      	movs	r0, #120	; 0x78
 800b536:	f7f7 f881 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b53a:	20cb      	movs	r0, #203	; 0xcb
 800b53c:	f7f7 f89a 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b540:	2039      	movs	r0, #57	; 0x39
 800b542:	f7f7 f87b 	bl	800263c <LCD_IO_WriteData>
 800b546:	202c      	movs	r0, #44	; 0x2c
 800b548:	f7f7 f878 	bl	800263c <LCD_IO_WriteData>
 800b54c:	2000      	movs	r0, #0
 800b54e:	f7f7 f875 	bl	800263c <LCD_IO_WriteData>
 800b552:	2034      	movs	r0, #52	; 0x34
 800b554:	f7f7 f872 	bl	800263c <LCD_IO_WriteData>
 800b558:	2002      	movs	r0, #2
 800b55a:	f7f7 f86f 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b55e:	20f7      	movs	r0, #247	; 0xf7
 800b560:	f7f7 f888 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b564:	2020      	movs	r0, #32
 800b566:	f7f7 f869 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b56a:	20ea      	movs	r0, #234	; 0xea
 800b56c:	f7f7 f882 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b570:	2000      	movs	r0, #0
 800b572:	f7f7 f863 	bl	800263c <LCD_IO_WriteData>
 800b576:	2000      	movs	r0, #0
 800b578:	f7f7 f860 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b57c:	20b1      	movs	r0, #177	; 0xb1
 800b57e:	f7f7 f879 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b582:	2000      	movs	r0, #0
 800b584:	f7f7 f85a 	bl	800263c <LCD_IO_WriteData>
 800b588:	201b      	movs	r0, #27
 800b58a:	f7f7 f857 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b58e:	20b6      	movs	r0, #182	; 0xb6
 800b590:	f7f7 f870 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b594:	200a      	movs	r0, #10
 800b596:	f7f7 f851 	bl	800263c <LCD_IO_WriteData>
 800b59a:	20a2      	movs	r0, #162	; 0xa2
 800b59c:	f7f7 f84e 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5a0:	20c0      	movs	r0, #192	; 0xc0
 800b5a2:	f7f7 f867 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5a6:	2010      	movs	r0, #16
 800b5a8:	f7f7 f848 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5ac:	20c1      	movs	r0, #193	; 0xc1
 800b5ae:	f7f7 f861 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5b2:	2010      	movs	r0, #16
 800b5b4:	f7f7 f842 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5b8:	20c5      	movs	r0, #197	; 0xc5
 800b5ba:	f7f7 f85b 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5be:	2045      	movs	r0, #69	; 0x45
 800b5c0:	f7f7 f83c 	bl	800263c <LCD_IO_WriteData>
 800b5c4:	2015      	movs	r0, #21
 800b5c6:	f7f7 f839 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5ca:	20c7      	movs	r0, #199	; 0xc7
 800b5cc:	f7f7 f852 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5d0:	2090      	movs	r0, #144	; 0x90
 800b5d2:	f7f7 f833 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5d6:	2036      	movs	r0, #54	; 0x36
 800b5d8:	f7f7 f84c 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5dc:	20c8      	movs	r0, #200	; 0xc8
 800b5de:	f7f7 f82d 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5e2:	20f2      	movs	r0, #242	; 0xf2
 800b5e4:	f7f7 f846 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5e8:	2000      	movs	r0, #0
 800b5ea:	f7f7 f827 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5ee:	20b0      	movs	r0, #176	; 0xb0
 800b5f0:	f7f7 f840 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5f4:	20c2      	movs	r0, #194	; 0xc2
 800b5f6:	f7f7 f821 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5fa:	20b6      	movs	r0, #182	; 0xb6
 800b5fc:	f7f7 f83a 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b600:	200a      	movs	r0, #10
 800b602:	f7f7 f81b 	bl	800263c <LCD_IO_WriteData>
 800b606:	20a7      	movs	r0, #167	; 0xa7
 800b608:	f7f7 f818 	bl	800263c <LCD_IO_WriteData>
 800b60c:	2027      	movs	r0, #39	; 0x27
 800b60e:	f7f7 f815 	bl	800263c <LCD_IO_WriteData>
 800b612:	2004      	movs	r0, #4
 800b614:	f7f7 f812 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b618:	202a      	movs	r0, #42	; 0x2a
 800b61a:	f7f7 f82b 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b61e:	2000      	movs	r0, #0
 800b620:	f7f7 f80c 	bl	800263c <LCD_IO_WriteData>
 800b624:	2000      	movs	r0, #0
 800b626:	f7f7 f809 	bl	800263c <LCD_IO_WriteData>
 800b62a:	2000      	movs	r0, #0
 800b62c:	f7f7 f806 	bl	800263c <LCD_IO_WriteData>
 800b630:	20ef      	movs	r0, #239	; 0xef
 800b632:	f7f7 f803 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b636:	202b      	movs	r0, #43	; 0x2b
 800b638:	f7f7 f81c 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b63c:	2000      	movs	r0, #0
 800b63e:	f7f6 fffd 	bl	800263c <LCD_IO_WriteData>
 800b642:	2000      	movs	r0, #0
 800b644:	f7f6 fffa 	bl	800263c <LCD_IO_WriteData>
 800b648:	2001      	movs	r0, #1
 800b64a:	f7f6 fff7 	bl	800263c <LCD_IO_WriteData>
 800b64e:	203f      	movs	r0, #63	; 0x3f
 800b650:	f7f6 fff4 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b654:	20f6      	movs	r0, #246	; 0xf6
 800b656:	f7f7 f80d 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b65a:	2001      	movs	r0, #1
 800b65c:	f7f6 ffee 	bl	800263c <LCD_IO_WriteData>
 800b660:	2000      	movs	r0, #0
 800b662:	f7f6 ffeb 	bl	800263c <LCD_IO_WriteData>
 800b666:	2006      	movs	r0, #6
 800b668:	f7f6 ffe8 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b66c:	202c      	movs	r0, #44	; 0x2c
 800b66e:	f7f7 f801 	bl	8002674 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b672:	20c8      	movs	r0, #200	; 0xc8
 800b674:	f7f7 f84c 	bl	8002710 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b678:	2026      	movs	r0, #38	; 0x26
 800b67a:	f7f6 fffb 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b67e:	2001      	movs	r0, #1
 800b680:	f7f6 ffdc 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b684:	20e0      	movs	r0, #224	; 0xe0
 800b686:	f7f6 fff5 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b68a:	200f      	movs	r0, #15
 800b68c:	f7f6 ffd6 	bl	800263c <LCD_IO_WriteData>
 800b690:	2029      	movs	r0, #41	; 0x29
 800b692:	f7f6 ffd3 	bl	800263c <LCD_IO_WriteData>
 800b696:	2024      	movs	r0, #36	; 0x24
 800b698:	f7f6 ffd0 	bl	800263c <LCD_IO_WriteData>
 800b69c:	200c      	movs	r0, #12
 800b69e:	f7f6 ffcd 	bl	800263c <LCD_IO_WriteData>
 800b6a2:	200e      	movs	r0, #14
 800b6a4:	f7f6 ffca 	bl	800263c <LCD_IO_WriteData>
 800b6a8:	2009      	movs	r0, #9
 800b6aa:	f7f6 ffc7 	bl	800263c <LCD_IO_WriteData>
 800b6ae:	204e      	movs	r0, #78	; 0x4e
 800b6b0:	f7f6 ffc4 	bl	800263c <LCD_IO_WriteData>
 800b6b4:	2078      	movs	r0, #120	; 0x78
 800b6b6:	f7f6 ffc1 	bl	800263c <LCD_IO_WriteData>
 800b6ba:	203c      	movs	r0, #60	; 0x3c
 800b6bc:	f7f6 ffbe 	bl	800263c <LCD_IO_WriteData>
 800b6c0:	2009      	movs	r0, #9
 800b6c2:	f7f6 ffbb 	bl	800263c <LCD_IO_WriteData>
 800b6c6:	2013      	movs	r0, #19
 800b6c8:	f7f6 ffb8 	bl	800263c <LCD_IO_WriteData>
 800b6cc:	2005      	movs	r0, #5
 800b6ce:	f7f6 ffb5 	bl	800263c <LCD_IO_WriteData>
 800b6d2:	2017      	movs	r0, #23
 800b6d4:	f7f6 ffb2 	bl	800263c <LCD_IO_WriteData>
 800b6d8:	2011      	movs	r0, #17
 800b6da:	f7f6 ffaf 	bl	800263c <LCD_IO_WriteData>
 800b6de:	2000      	movs	r0, #0
 800b6e0:	f7f6 ffac 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b6e4:	20e1      	movs	r0, #225	; 0xe1
 800b6e6:	f7f6 ffc5 	bl	8002674 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b6ea:	2000      	movs	r0, #0
 800b6ec:	f7f6 ffa6 	bl	800263c <LCD_IO_WriteData>
 800b6f0:	2016      	movs	r0, #22
 800b6f2:	f7f6 ffa3 	bl	800263c <LCD_IO_WriteData>
 800b6f6:	201b      	movs	r0, #27
 800b6f8:	f7f6 ffa0 	bl	800263c <LCD_IO_WriteData>
 800b6fc:	2004      	movs	r0, #4
 800b6fe:	f7f6 ff9d 	bl	800263c <LCD_IO_WriteData>
 800b702:	2011      	movs	r0, #17
 800b704:	f7f6 ff9a 	bl	800263c <LCD_IO_WriteData>
 800b708:	2007      	movs	r0, #7
 800b70a:	f7f6 ff97 	bl	800263c <LCD_IO_WriteData>
 800b70e:	2031      	movs	r0, #49	; 0x31
 800b710:	f7f6 ff94 	bl	800263c <LCD_IO_WriteData>
 800b714:	2033      	movs	r0, #51	; 0x33
 800b716:	f7f6 ff91 	bl	800263c <LCD_IO_WriteData>
 800b71a:	2042      	movs	r0, #66	; 0x42
 800b71c:	f7f6 ff8e 	bl	800263c <LCD_IO_WriteData>
 800b720:	2005      	movs	r0, #5
 800b722:	f7f6 ff8b 	bl	800263c <LCD_IO_WriteData>
 800b726:	200c      	movs	r0, #12
 800b728:	f7f6 ff88 	bl	800263c <LCD_IO_WriteData>
 800b72c:	200a      	movs	r0, #10
 800b72e:	f7f6 ff85 	bl	800263c <LCD_IO_WriteData>
 800b732:	2028      	movs	r0, #40	; 0x28
 800b734:	f7f6 ff82 	bl	800263c <LCD_IO_WriteData>
 800b738:	202f      	movs	r0, #47	; 0x2f
 800b73a:	f7f6 ff7f 	bl	800263c <LCD_IO_WriteData>
 800b73e:	200f      	movs	r0, #15
 800b740:	f7f6 ff7c 	bl	800263c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b744:	2011      	movs	r0, #17
 800b746:	f7f6 ff95 	bl	8002674 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b74a:	20c8      	movs	r0, #200	; 0xc8
 800b74c:	f7f6 ffe0 	bl	8002710 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b750:	2029      	movs	r0, #41	; 0x29
 800b752:	f7f6 ff8f 	bl	8002674 <LCD_IO_WriteReg>
}
 800b756:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800b75a:	202c      	movs	r0, #44	; 0x2c
 800b75c:	f7f6 bf8a 	b.w	8002674 <LCD_IO_WriteReg>

0800b760 <ili9341_ReadID>:
{
 800b760:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b762:	f7f6 ff5b 	bl	800261c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800b766:	2103      	movs	r1, #3
 800b768:	20d3      	movs	r0, #211	; 0xd3
 800b76a:	f7f6 ff9f 	bl	80026ac <LCD_IO_ReadData>
}
 800b76e:	b280      	uxth	r0, r0
 800b770:	bd08      	pop	{r3, pc}

0800b772 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800b772:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b774:	b2c4      	uxtb	r4, r0
 800b776:	2202      	movs	r2, #2
 800b778:	2103      	movs	r1, #3
 800b77a:	4620      	mov	r0, r4
 800b77c:	f7f6 ff04 	bl	8002588 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 800b780:	200a      	movs	r0, #10
 800b782:	f7f6 ff49 	bl	8002618 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b786:	4620      	mov	r0, r4
 800b788:	2200      	movs	r2, #0
 800b78a:	2103      	movs	r1, #3
 800b78c:	f7f6 fefc 	bl	8002588 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 800b790:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b794:	2002      	movs	r0, #2
 800b796:	f7f6 bf3f 	b.w	8002618 <IOE_Delay>

0800b79a <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 800b79a:	b538      	push	{r3, r4, r5, lr}
 800b79c:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b79e:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 800b7a0:	f7f6 fef0 	bl	8002584 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b7a4:	2100      	movs	r1, #0
 800b7a6:	4620      	mov	r0, r4
 800b7a8:	f7f6 ff06 	bl	80025b8 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b7ac:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b7ae:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b7b0:	4620      	mov	r0, r4
 800b7b2:	f7f6 ff01 	bl	80025b8 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b7b6:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 800b7ba:	b280      	uxth	r0, r0
 800b7bc:	bd38      	pop	{r3, r4, r5, pc}

0800b7be <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800b7be:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800b7c0:	b2c4      	uxtb	r4, r0
 800b7c2:	2140      	movs	r1, #64	; 0x40
 800b7c4:	4620      	mov	r0, r4
 800b7c6:	f7f6 fef7 	bl	80025b8 <IOE_Read>
  
  if(state > 0)
 800b7ca:	0603      	lsls	r3, r0, #24
 800b7cc:	d507      	bpl.n	800b7de <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800b7ce:	214c      	movs	r1, #76	; 0x4c
 800b7d0:	4620      	mov	r0, r4
 800b7d2:	f7f6 fef1 	bl	80025b8 <IOE_Read>
    {
      ret = 1;
 800b7d6:	3800      	subs	r0, #0
 800b7d8:	bf18      	it	ne
 800b7da:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 800b7dc:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b7de:	2201      	movs	r2, #1
 800b7e0:	214b      	movs	r1, #75	; 0x4b
 800b7e2:	4620      	mov	r0, r4
 800b7e4:	f7f6 fed0 	bl	8002588 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b7e8:	4620      	mov	r0, r4
 800b7ea:	2200      	movs	r2, #0
 800b7ec:	214b      	movs	r1, #75	; 0x4b
 800b7ee:	f7f6 fecb 	bl	8002588 <IOE_Write>
  uint8_t ret = 0;
 800b7f2:	2000      	movs	r0, #0
 800b7f4:	e7f2      	b.n	800b7dc <stmpe811_TS_DetectTouch+0x1e>

0800b7f6 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800b7f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b7f8:	2304      	movs	r3, #4
 800b7fa:	b2c4      	uxtb	r4, r0
{
 800b7fc:	460e      	mov	r6, r1
 800b7fe:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b800:	21d7      	movs	r1, #215	; 0xd7
 800b802:	eb0d 0203 	add.w	r2, sp, r3
 800b806:	4620      	mov	r0, r4
 800b808:	f7f6 fef0 	bl	80025ec <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800b80c:	9b01      	ldr	r3, [sp, #4]
 800b80e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b810:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b812:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b816:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b818:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b81a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b81c:	2201      	movs	r2, #1
 800b81e:	214b      	movs	r1, #75	; 0x4b
 800b820:	f7f6 feb2 	bl	8002588 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b824:	2200      	movs	r2, #0
 800b826:	214b      	movs	r1, #75	; 0x4b
 800b828:	4620      	mov	r0, r4
 800b82a:	f7f6 fead 	bl	8002588 <IOE_Write>
}
 800b82e:	b002      	add	sp, #8
 800b830:	bd70      	pop	{r4, r5, r6, pc}
	...

0800b834 <stmpe811_Init>:
{
 800b834:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800b836:	4b0a      	ldr	r3, [pc, #40]	; (800b860 <stmpe811_Init+0x2c>)
 800b838:	781a      	ldrb	r2, [r3, #0]
 800b83a:	4290      	cmp	r0, r2
{
 800b83c:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800b83e:	d00d      	beq.n	800b85c <stmpe811_Init+0x28>
 800b840:	7859      	ldrb	r1, [r3, #1]
 800b842:	4288      	cmp	r0, r1
 800b844:	d00a      	beq.n	800b85c <stmpe811_Init+0x28>
 800b846:	b10a      	cbz	r2, 800b84c <stmpe811_Init+0x18>
 800b848:	b941      	cbnz	r1, 800b85c <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800b84a:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 800b84c:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 800b84e:	f7f6 fe99 	bl	8002584 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800b852:	4620      	mov	r0, r4
}
 800b854:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 800b858:	f7ff bf8b 	b.w	800b772 <stmpe811_Reset>
}
 800b85c:	bd10      	pop	{r4, pc}
 800b85e:	bf00      	nop
 800b860:	2000d3a0 	.word	0x2000d3a0

0800b864 <stmpe811_EnableGlobalIT>:
{
 800b864:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b866:	b2c4      	uxtb	r4, r0
 800b868:	2109      	movs	r1, #9
 800b86a:	4620      	mov	r0, r4
 800b86c:	f7f6 fea4 	bl	80025b8 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800b870:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b874:	b2c2      	uxtb	r2, r0
 800b876:	2109      	movs	r1, #9
 800b878:	4620      	mov	r0, r4
}
 800b87a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b87e:	f7f6 be83 	b.w	8002588 <IOE_Write>

0800b882 <stmpe811_DisableGlobalIT>:
{
 800b882:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b884:	b2c4      	uxtb	r4, r0
 800b886:	2109      	movs	r1, #9
 800b888:	4620      	mov	r0, r4
 800b88a:	f7f6 fe95 	bl	80025b8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b88e:	2109      	movs	r1, #9
 800b890:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800b894:	4620      	mov	r0, r4
}
 800b896:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b89a:	f7f6 be75 	b.w	8002588 <IOE_Write>

0800b89e <stmpe811_EnableITSource>:
{
 800b89e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b8a0:	b2c4      	uxtb	r4, r0
{
 800b8a2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b8a4:	4620      	mov	r0, r4
 800b8a6:	210a      	movs	r1, #10
 800b8a8:	f7f6 fe86 	bl	80025b8 <IOE_Read>
  tmp |= Source; 
 800b8ac:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b8ae:	b2c2      	uxtb	r2, r0
 800b8b0:	210a      	movs	r1, #10
 800b8b2:	4620      	mov	r0, r4
}
 800b8b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b8b8:	f7f6 be66 	b.w	8002588 <IOE_Write>

0800b8bc <stmpe811_TS_EnableIT>:
{
 800b8bc:	b507      	push	{r0, r1, r2, lr}
 800b8be:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 800b8c0:	f7f6 fe61 	bl	8002586 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 800b8c4:	9801      	ldr	r0, [sp, #4]
 800b8c6:	211f      	movs	r1, #31
 800b8c8:	f7ff ffe9 	bl	800b89e <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 800b8cc:	9801      	ldr	r0, [sp, #4]
}
 800b8ce:	b003      	add	sp, #12
 800b8d0:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 800b8d4:	f7ff bfc6 	b.w	800b864 <stmpe811_EnableGlobalIT>

0800b8d8 <stmpe811_DisableITSource>:
{
 800b8d8:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b8da:	b2c4      	uxtb	r4, r0
{
 800b8dc:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b8de:	4620      	mov	r0, r4
 800b8e0:	210a      	movs	r1, #10
 800b8e2:	f7f6 fe69 	bl	80025b8 <IOE_Read>
  tmp &= ~Source; 
 800b8e6:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b8ea:	b2c2      	uxtb	r2, r0
 800b8ec:	210a      	movs	r1, #10
 800b8ee:	4620      	mov	r0, r4
}
 800b8f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b8f4:	f7f6 be48 	b.w	8002588 <IOE_Write>

0800b8f8 <stmpe811_TS_DisableIT>:
{
 800b8f8:	b510      	push	{r4, lr}
 800b8fa:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 800b8fc:	f7ff ffc1 	bl	800b882 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800b900:	4620      	mov	r0, r4
 800b902:	211f      	movs	r1, #31
}
 800b904:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800b908:	f7ff bfe6 	b.w	800b8d8 <stmpe811_DisableITSource>

0800b90c <stmpe811_ReadGITStatus>:
{
 800b90c:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b90e:	b2c0      	uxtb	r0, r0
{
 800b910:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b912:	210b      	movs	r1, #11
 800b914:	f7f6 fe50 	bl	80025b8 <IOE_Read>
}
 800b918:	4020      	ands	r0, r4
 800b91a:	bd10      	pop	{r4, pc}

0800b91c <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 800b91c:	211f      	movs	r1, #31
 800b91e:	f7ff bff5 	b.w	800b90c <stmpe811_ReadGITStatus>

0800b922 <stmpe811_ClearGlobalIT>:
{
 800b922:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800b924:	b2c0      	uxtb	r0, r0
 800b926:	210b      	movs	r1, #11
 800b928:	f7f6 be2e 	b.w	8002588 <IOE_Write>

0800b92c <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 800b92c:	211f      	movs	r1, #31
 800b92e:	f7ff bff8 	b.w	800b922 <stmpe811_ClearGlobalIT>

0800b932 <stmpe811_IO_EnableAF>:
{
 800b932:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b934:	b2c4      	uxtb	r4, r0
{
 800b936:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b938:	4620      	mov	r0, r4
 800b93a:	2117      	movs	r1, #23
 800b93c:	f7f6 fe3c 	bl	80025b8 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 800b940:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b944:	b2c2      	uxtb	r2, r0
 800b946:	2117      	movs	r1, #23
 800b948:	4620      	mov	r0, r4
}
 800b94a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b94e:	f7f6 be1b 	b.w	8002588 <IOE_Write>

0800b952 <stmpe811_TS_Start>:
{
 800b952:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b954:	b2c4      	uxtb	r4, r0
{
 800b956:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b958:	2104      	movs	r1, #4
 800b95a:	4620      	mov	r0, r4
 800b95c:	f7f6 fe2c 	bl	80025b8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b960:	2104      	movs	r1, #4
 800b962:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b966:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b968:	4620      	mov	r0, r4
 800b96a:	f7f6 fe0d 	bl	8002588 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800b96e:	4630      	mov	r0, r6
 800b970:	21f0      	movs	r1, #240	; 0xf0
 800b972:	f7ff ffde 	bl	800b932 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b976:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800b97a:	4620      	mov	r0, r4
 800b97c:	2104      	movs	r1, #4
 800b97e:	f7f6 fe03 	bl	8002588 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800b982:	2249      	movs	r2, #73	; 0x49
 800b984:	2120      	movs	r1, #32
 800b986:	4620      	mov	r0, r4
 800b988:	f7f6 fdfe 	bl	8002588 <IOE_Write>
  IOE_Delay(2); 
 800b98c:	2002      	movs	r0, #2
 800b98e:	f7f6 fe43 	bl	8002618 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800b992:	4620      	mov	r0, r4
 800b994:	2201      	movs	r2, #1
 800b996:	2121      	movs	r1, #33	; 0x21
 800b998:	f7f6 fdf6 	bl	8002588 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800b99c:	4620      	mov	r0, r4
 800b99e:	229a      	movs	r2, #154	; 0x9a
 800b9a0:	2141      	movs	r1, #65	; 0x41
 800b9a2:	f7f6 fdf1 	bl	8002588 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800b9a6:	4620      	mov	r0, r4
 800b9a8:	2201      	movs	r2, #1
 800b9aa:	214a      	movs	r1, #74	; 0x4a
 800b9ac:	f7f6 fdec 	bl	8002588 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b9b0:	4620      	mov	r0, r4
 800b9b2:	2201      	movs	r2, #1
 800b9b4:	214b      	movs	r1, #75	; 0x4b
 800b9b6:	f7f6 fde7 	bl	8002588 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b9ba:	4620      	mov	r0, r4
 800b9bc:	2200      	movs	r2, #0
 800b9be:	214b      	movs	r1, #75	; 0x4b
 800b9c0:	f7f6 fde2 	bl	8002588 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800b9c4:	4620      	mov	r0, r4
 800b9c6:	2201      	movs	r2, #1
 800b9c8:	2156      	movs	r1, #86	; 0x56
 800b9ca:	f7f6 fddd 	bl	8002588 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800b9ce:	4620      	mov	r0, r4
 800b9d0:	2201      	movs	r2, #1
 800b9d2:	2158      	movs	r1, #88	; 0x58
 800b9d4:	f7f6 fdd8 	bl	8002588 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800b9d8:	4620      	mov	r0, r4
 800b9da:	2201      	movs	r2, #1
 800b9dc:	2140      	movs	r1, #64	; 0x40
 800b9de:	f7f6 fdd3 	bl	8002588 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800b9e2:	4620      	mov	r0, r4
 800b9e4:	22ff      	movs	r2, #255	; 0xff
 800b9e6:	210b      	movs	r1, #11
 800b9e8:	f7f6 fdce 	bl	8002588 <IOE_Write>
}
 800b9ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 800b9f0:	2002      	movs	r0, #2
 800b9f2:	f7f6 be11 	b.w	8002618 <IOE_Delay>
	...

0800b9f8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b9f8:	4b05      	ldr	r3, [pc, #20]	; (800ba10 <SystemInit+0x18>)
 800b9fa:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800b9fe:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800ba02:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800ba06:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800ba0a:	609a      	str	r2, [r3, #8]
#endif
}
 800ba0c:	4770      	bx	lr
 800ba0e:	bf00      	nop
 800ba10:	e000ed00 	.word	0xe000ed00

0800ba14 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800ba14:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800ba16:	4b0b      	ldr	r3, [pc, #44]	; (800ba44 <HAL_Init+0x30>)
 800ba18:	681a      	ldr	r2, [r3, #0]
 800ba1a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ba1e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800ba20:	681a      	ldr	r2, [r3, #0]
 800ba22:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ba26:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800ba28:	681a      	ldr	r2, [r3, #0]
 800ba2a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ba2e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800ba30:	2003      	movs	r0, #3
 800ba32:	f000 fb11 	bl	800c058 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800ba36:	2000      	movs	r0, #0
 800ba38:	f7f7 fd60 	bl	80034fc <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800ba3c:	f7f7 f980 	bl	8002d40 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800ba40:	2000      	movs	r0, #0
 800ba42:	bd08      	pop	{r3, pc}
 800ba44:	40023c00 	.word	0x40023c00

0800ba48 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800ba48:	4a03      	ldr	r2, [pc, #12]	; (800ba58 <HAL_IncTick+0x10>)
 800ba4a:	4b04      	ldr	r3, [pc, #16]	; (800ba5c <HAL_IncTick+0x14>)
 800ba4c:	6811      	ldr	r1, [r2, #0]
 800ba4e:	781b      	ldrb	r3, [r3, #0]
 800ba50:	440b      	add	r3, r1
 800ba52:	6013      	str	r3, [r2, #0]
}
 800ba54:	4770      	bx	lr
 800ba56:	bf00      	nop
 800ba58:	2000d3a4 	.word	0x2000d3a4
 800ba5c:	20000090 	.word	0x20000090

0800ba60 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800ba60:	4b01      	ldr	r3, [pc, #4]	; (800ba68 <HAL_GetTick+0x8>)
 800ba62:	6818      	ldr	r0, [r3, #0]
}
 800ba64:	4770      	bx	lr
 800ba66:	bf00      	nop
 800ba68:	2000d3a4 	.word	0x2000d3a4

0800ba6c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800ba6c:	b538      	push	{r3, r4, r5, lr}
 800ba6e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800ba70:	f7ff fff6 	bl	800ba60 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800ba74:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800ba76:	bf1c      	itt	ne
 800ba78:	4b05      	ldrne	r3, [pc, #20]	; (800ba90 <HAL_Delay+0x24>)
 800ba7a:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800ba7c:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800ba7e:	bf18      	it	ne
 800ba80:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800ba82:	f7ff ffed 	bl	800ba60 <HAL_GetTick>
 800ba86:	1b43      	subs	r3, r0, r5
 800ba88:	42a3      	cmp	r3, r4
 800ba8a:	d3fa      	bcc.n	800ba82 <HAL_Delay+0x16>
  {
  }
}
 800ba8c:	bd38      	pop	{r3, r4, r5, pc}
 800ba8e:	bf00      	nop
 800ba90:	20000090 	.word	0x20000090

0800ba94 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 800ba94:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 800ba96:	4604      	mov	r4, r0
 800ba98:	2800      	cmp	r0, #0
 800ba9a:	f000 809b 	beq.w	800bbd4 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 800ba9e:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800baa0:	b925      	cbnz	r5, 800baac <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 800baa2:	f7f7 f96d 	bl	8002d80 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 800baa6:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 800baa8:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800baac:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800baae:	06db      	lsls	r3, r3, #27
 800bab0:	f100 808e 	bmi.w	800bbd0 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 800bab4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bab6:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800baba:	f023 0302 	bic.w	r3, r3, #2
 800babe:	f043 0302 	orr.w	r3, r3, #2
 800bac2:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 800bac4:	4b44      	ldr	r3, [pc, #272]	; (800bbd8 <HAL_ADC_Init+0x144>)
 800bac6:	685a      	ldr	r2, [r3, #4]
 800bac8:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 800bacc:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800bace:	685a      	ldr	r2, [r3, #4]
 800bad0:	6861      	ldr	r1, [r4, #4]
 800bad2:	430a      	orrs	r2, r1
 800bad4:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800bad6:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800bad8:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800bada:	685a      	ldr	r2, [r3, #4]
 800badc:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800bae0:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800bae2:	685a      	ldr	r2, [r3, #4]
 800bae4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800bae8:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800baea:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800baec:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800baee:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800baf2:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800baf4:	685a      	ldr	r2, [r3, #4]
 800baf6:	430a      	orrs	r2, r1
 800baf8:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800bafa:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800bafc:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800bafe:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800bb02:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800bb04:	689a      	ldr	r2, [r3, #8]
 800bb06:	430a      	orrs	r2, r1
 800bb08:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800bb0a:	4934      	ldr	r1, [pc, #208]	; (800bbdc <HAL_ADC_Init+0x148>)
 800bb0c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800bb0e:	428a      	cmp	r2, r1
 800bb10:	d052      	beq.n	800bbb8 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800bb12:	6899      	ldr	r1, [r3, #8]
 800bb14:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 800bb18:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800bb1a:	6899      	ldr	r1, [r3, #8]
 800bb1c:	430a      	orrs	r2, r1
 800bb1e:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800bb20:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800bb22:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800bb24:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800bb28:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800bb2a:	689a      	ldr	r2, [r3, #8]
 800bb2c:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800bb2e:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800bb30:	689a      	ldr	r2, [r3, #8]
 800bb32:	f022 0202 	bic.w	r2, r2, #2
 800bb36:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 800bb38:	689a      	ldr	r2, [r3, #8]
 800bb3a:	7e21      	ldrb	r1, [r4, #24]
 800bb3c:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 800bb40:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 800bb42:	f894 2020 	ldrb.w	r2, [r4, #32]
 800bb46:	2a00      	cmp	r2, #0
 800bb48:	d03e      	beq.n	800bbc8 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800bb4a:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800bb4c:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800bb4e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800bb52:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 800bb54:	685a      	ldr	r2, [r3, #4]
 800bb56:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800bb5a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800bb5c:	685a      	ldr	r2, [r3, #4]
 800bb5e:	3901      	subs	r1, #1
 800bb60:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800bb64:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800bb66:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800bb68:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800bb6a:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800bb6e:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800bb70:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800bb72:	3901      	subs	r1, #1
 800bb74:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 800bb78:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800bb7a:	689a      	ldr	r2, [r3, #8]
 800bb7c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800bb80:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800bb82:	689a      	ldr	r2, [r3, #8]
 800bb84:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 800bb88:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 800bb8c:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800bb8e:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800bb90:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800bb92:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bb96:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800bb98:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800bb9a:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800bb9c:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 800bba0:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800bba2:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 800bba4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bba6:	f023 0303 	bic.w	r3, r3, #3
 800bbaa:	f043 0301 	orr.w	r3, r3, #1
 800bbae:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 800bbb0:	2300      	movs	r3, #0
 800bbb2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 800bbb6:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800bbb8:	689a      	ldr	r2, [r3, #8]
 800bbba:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800bbbe:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800bbc0:	689a      	ldr	r2, [r3, #8]
 800bbc2:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800bbc6:	e7b2      	b.n	800bb2e <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800bbc8:	685a      	ldr	r2, [r3, #4]
 800bbca:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800bbce:	e7c9      	b.n	800bb64 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 800bbd0:	2001      	movs	r0, #1
 800bbd2:	e7ed      	b.n	800bbb0 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 800bbd4:	2001      	movs	r0, #1
 800bbd6:	e7ee      	b.n	800bbb6 <HAL_ADC_Init+0x122>
 800bbd8:	40012300 	.word	0x40012300
 800bbdc:	0f000001 	.word	0x0f000001

0800bbe0 <HAL_ADC_Start>:
{
 800bbe0:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 800bbe2:	2300      	movs	r3, #0
 800bbe4:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800bbe6:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800bbea:	2b01      	cmp	r3, #1
 800bbec:	d060      	beq.n	800bcb0 <HAL_ADC_Start+0xd0>
 800bbee:	2301      	movs	r3, #1
 800bbf0:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800bbf4:	6803      	ldr	r3, [r0, #0]
 800bbf6:	689a      	ldr	r2, [r3, #8]
 800bbf8:	07d2      	lsls	r2, r2, #31
 800bbfa:	d505      	bpl.n	800bc08 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 800bbfc:	689a      	ldr	r2, [r3, #8]
 800bbfe:	07d1      	lsls	r1, r2, #31
 800bc00:	d414      	bmi.n	800bc2c <HAL_ADC_Start+0x4c>
  return HAL_OK;
 800bc02:	2000      	movs	r0, #0
}
 800bc04:	b002      	add	sp, #8
 800bc06:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 800bc08:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800bc0a:	492a      	ldr	r1, [pc, #168]	; (800bcb4 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 800bc0c:	f042 0201 	orr.w	r2, r2, #1
 800bc10:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800bc12:	4a29      	ldr	r2, [pc, #164]	; (800bcb8 <HAL_ADC_Start+0xd8>)
 800bc14:	6812      	ldr	r2, [r2, #0]
 800bc16:	fbb2 f2f1 	udiv	r2, r2, r1
 800bc1a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 800bc1e:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 800bc20:	9a01      	ldr	r2, [sp, #4]
 800bc22:	2a00      	cmp	r2, #0
 800bc24:	d0ea      	beq.n	800bbfc <HAL_ADC_Start+0x1c>
      counter--;
 800bc26:	9a01      	ldr	r2, [sp, #4]
 800bc28:	3a01      	subs	r2, #1
 800bc2a:	e7f8      	b.n	800bc1e <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 800bc2c:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800bc2e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800bc32:	f022 0201 	bic.w	r2, r2, #1
 800bc36:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800bc3a:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 800bc3c:	685a      	ldr	r2, [r3, #4]
 800bc3e:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 800bc40:	bf41      	itttt	mi
 800bc42:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 800bc44:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 800bc48:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 800bc4c:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800bc4e:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800bc50:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 800bc54:	bf1c      	itt	ne
 800bc56:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 800bc58:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 800bc5c:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 800bc5e:	2200      	movs	r2, #0
 800bc60:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800bc64:	f06f 0222 	mvn.w	r2, #34	; 0x22
 800bc68:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 800bc6a:	4a14      	ldr	r2, [pc, #80]	; (800bcbc <HAL_ADC_Start+0xdc>)
 800bc6c:	6851      	ldr	r1, [r2, #4]
 800bc6e:	f011 0f1f 	tst.w	r1, #31
 800bc72:	4913      	ldr	r1, [pc, #76]	; (800bcc0 <HAL_ADC_Start+0xe0>)
 800bc74:	d119      	bne.n	800bcaa <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 800bc76:	428b      	cmp	r3, r1
 800bc78:	d007      	beq.n	800bc8a <HAL_ADC_Start+0xaa>
 800bc7a:	f501 7180 	add.w	r1, r1, #256	; 0x100
 800bc7e:	428b      	cmp	r3, r1
 800bc80:	d10c      	bne.n	800bc9c <HAL_ADC_Start+0xbc>
 800bc82:	6852      	ldr	r2, [r2, #4]
 800bc84:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800bc88:	d1bb      	bne.n	800bc02 <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800bc8a:	6898      	ldr	r0, [r3, #8]
 800bc8c:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 800bc90:	d1b7      	bne.n	800bc02 <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800bc92:	689a      	ldr	r2, [r3, #8]
 800bc94:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800bc98:	609a      	str	r2, [r3, #8]
 800bc9a:	e7b3      	b.n	800bc04 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800bc9c:	4909      	ldr	r1, [pc, #36]	; (800bcc4 <HAL_ADC_Start+0xe4>)
 800bc9e:	428b      	cmp	r3, r1
 800bca0:	d1af      	bne.n	800bc02 <HAL_ADC_Start+0x22>
 800bca2:	6852      	ldr	r2, [r2, #4]
 800bca4:	f012 0f10 	tst.w	r2, #16
 800bca8:	e7ee      	b.n	800bc88 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800bcaa:	428b      	cmp	r3, r1
 800bcac:	d1a9      	bne.n	800bc02 <HAL_ADC_Start+0x22>
 800bcae:	e7ec      	b.n	800bc8a <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 800bcb0:	2002      	movs	r0, #2
 800bcb2:	e7a7      	b.n	800bc04 <HAL_ADC_Start+0x24>
 800bcb4:	000f4240 	.word	0x000f4240
 800bcb8:	2000008c 	.word	0x2000008c
 800bcbc:	40012300 	.word	0x40012300
 800bcc0:	40012000 	.word	0x40012000
 800bcc4:	40012200 	.word	0x40012200

0800bcc8 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800bcc8:	6803      	ldr	r3, [r0, #0]
 800bcca:	689a      	ldr	r2, [r3, #8]
 800bccc:	0552      	lsls	r2, r2, #21
{
 800bcce:	b570      	push	{r4, r5, r6, lr}
 800bcd0:	4604      	mov	r4, r0
 800bcd2:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800bcd4:	d50b      	bpl.n	800bcee <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 800bcd6:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800bcd8:	05de      	lsls	r6, r3, #23
 800bcda:	d508      	bpl.n	800bcee <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800bcdc:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800bcde:	f043 0320 	orr.w	r3, r3, #32
 800bce2:	6403      	str	r3, [r0, #64]	; 0x40
    __HAL_UNLOCK(hadc);
 800bce4:	2300      	movs	r3, #0
 800bce6:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    return HAL_ERROR;
 800bcea:	2001      	movs	r0, #1
}
 800bcec:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 800bcee:	f7ff feb7 	bl	800ba60 <HAL_GetTick>
 800bcf2:	4606      	mov	r6, r0
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800bcf4:	6823      	ldr	r3, [r4, #0]
 800bcf6:	681a      	ldr	r2, [r3, #0]
 800bcf8:	0791      	lsls	r1, r2, #30
 800bcfa:	d50c      	bpl.n	800bd16 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 800bcfc:	f06f 0212 	mvn.w	r2, #18
 800bd00:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800bd02:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800bd04:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bd08:	6422      	str	r2, [r4, #64]	; 0x40
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800bd0a:	689a      	ldr	r2, [r3, #8]
 800bd0c:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 800bd10:	d013      	beq.n	800bd3a <HAL_ADC_PollForConversion+0x72>
  return HAL_OK;
 800bd12:	2000      	movs	r0, #0
 800bd14:	e7ea      	b.n	800bcec <HAL_ADC_PollForConversion+0x24>
    if(Timeout != HAL_MAX_DELAY)
 800bd16:	1c68      	adds	r0, r5, #1
 800bd18:	d0ed      	beq.n	800bcf6 <HAL_ADC_PollForConversion+0x2e>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 800bd1a:	b945      	cbnz	r5, 800bd2e <HAL_ADC_PollForConversion+0x66>
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 800bd1c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bd1e:	f043 0304 	orr.w	r3, r3, #4
 800bd22:	6423      	str	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hadc);
 800bd24:	2300      	movs	r3, #0
 800bd26:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_TIMEOUT;
 800bd2a:	2003      	movs	r0, #3
 800bd2c:	e7de      	b.n	800bcec <HAL_ADC_PollForConversion+0x24>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 800bd2e:	f7ff fe97 	bl	800ba60 <HAL_GetTick>
 800bd32:	1b80      	subs	r0, r0, r6
 800bd34:	42a8      	cmp	r0, r5
 800bd36:	d9dd      	bls.n	800bcf4 <HAL_ADC_PollForConversion+0x2c>
 800bd38:	e7f0      	b.n	800bd1c <HAL_ADC_PollForConversion+0x54>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800bd3a:	7e20      	ldrb	r0, [r4, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800bd3c:	2800      	cmp	r0, #0
 800bd3e:	d1e8      	bne.n	800bd12 <HAL_ADC_PollForConversion+0x4a>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800bd40:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800bd42:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 800bd46:	d002      	beq.n	800bd4e <HAL_ADC_PollForConversion+0x86>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 800bd48:	689b      	ldr	r3, [r3, #8]
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800bd4a:	055a      	lsls	r2, r3, #21
 800bd4c:	d4e1      	bmi.n	800bd12 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 800bd4e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bd50:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800bd54:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800bd56:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bd58:	04db      	lsls	r3, r3, #19
 800bd5a:	d4da      	bmi.n	800bd12 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800bd5c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bd5e:	f043 0301 	orr.w	r3, r3, #1
 800bd62:	6423      	str	r3, [r4, #64]	; 0x40
 800bd64:	e7c2      	b.n	800bcec <HAL_ADC_PollForConversion+0x24>
	...

0800bd68 <HAL_ADC_Start_DMA>:
{
 800bd68:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bd6a:	4613      	mov	r3, r2
  __IO uint32_t counter = 0U;
 800bd6c:	2200      	movs	r2, #0
 800bd6e:	9201      	str	r2, [sp, #4]
  __HAL_LOCK(hadc);
 800bd70:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800bd74:	2a01      	cmp	r2, #1
{
 800bd76:	4604      	mov	r4, r0
  __HAL_LOCK(hadc);
 800bd78:	d076      	beq.n	800be68 <HAL_ADC_Start_DMA+0x100>
 800bd7a:	2201      	movs	r2, #1
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800bd7c:	6805      	ldr	r5, [r0, #0]
  __HAL_LOCK(hadc);
 800bd7e:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800bd82:	68aa      	ldr	r2, [r5, #8]
 800bd84:	07d2      	lsls	r2, r2, #31
 800bd86:	d505      	bpl.n	800bd94 <HAL_ADC_Start_DMA+0x2c>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 800bd88:	68aa      	ldr	r2, [r5, #8]
 800bd8a:	07d0      	lsls	r0, r2, #31
 800bd8c:	d415      	bmi.n	800bdba <HAL_ADC_Start_DMA+0x52>
  return HAL_OK;
 800bd8e:	2000      	movs	r0, #0
}
 800bd90:	b003      	add	sp, #12
 800bd92:	bd30      	pop	{r4, r5, pc}
    __HAL_ADC_ENABLE(hadc);
 800bd94:	68aa      	ldr	r2, [r5, #8]
 800bd96:	f042 0201 	orr.w	r2, r2, #1
 800bd9a:	60aa      	str	r2, [r5, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800bd9c:	4a33      	ldr	r2, [pc, #204]	; (800be6c <HAL_ADC_Start_DMA+0x104>)
 800bd9e:	6810      	ldr	r0, [r2, #0]
 800bda0:	4a33      	ldr	r2, [pc, #204]	; (800be70 <HAL_ADC_Start_DMA+0x108>)
 800bda2:	fbb0 f0f2 	udiv	r0, r0, r2
 800bda6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800bdaa:	9001      	str	r0, [sp, #4]
    while(counter != 0U)
 800bdac:	9a01      	ldr	r2, [sp, #4]
 800bdae:	2a00      	cmp	r2, #0
 800bdb0:	d0ea      	beq.n	800bd88 <HAL_ADC_Start_DMA+0x20>
      counter--;
 800bdb2:	9a01      	ldr	r2, [sp, #4]
 800bdb4:	3a01      	subs	r2, #1
 800bdb6:	9201      	str	r2, [sp, #4]
 800bdb8:	e7f8      	b.n	800bdac <HAL_ADC_Start_DMA+0x44>
    ADC_STATE_CLR_SET(hadc->State,
 800bdba:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800bdbc:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 800bdc0:	f020 0001 	bic.w	r0, r0, #1
 800bdc4:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 800bdc8:	6420      	str	r0, [r4, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 800bdca:	686a      	ldr	r2, [r5, #4]
 800bdcc:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 800bdce:	bf41      	itttt	mi
 800bdd0:	6c20      	ldrmi	r0, [r4, #64]	; 0x40
 800bdd2:	f420 5040 	bicmi.w	r0, r0, #12288	; 0x3000
 800bdd6:	f440 5080 	orrmi.w	r0, r0, #4096	; 0x1000
 800bdda:	6420      	strmi	r0, [r4, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800bddc:	6c22      	ldr	r2, [r4, #64]	; 0x40
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 800bdde:	6ba0      	ldr	r0, [r4, #56]	; 0x38
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800bde0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 800bde4:	bf1c      	itt	ne
 800bde6:	6c62      	ldrne	r2, [r4, #68]	; 0x44
 800bde8:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 800bdec:	6462      	str	r2, [r4, #68]	; 0x44
    __HAL_UNLOCK(hadc);   
 800bdee:	2200      	movs	r2, #0
 800bdf0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 800bdf4:	4a1f      	ldr	r2, [pc, #124]	; (800be74 <HAL_ADC_Start_DMA+0x10c>)
 800bdf6:	63c2      	str	r2, [r0, #60]	; 0x3c
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 800bdf8:	4a1f      	ldr	r2, [pc, #124]	; (800be78 <HAL_ADC_Start_DMA+0x110>)
 800bdfa:	6402      	str	r2, [r0, #64]	; 0x40
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 800bdfc:	4a1f      	ldr	r2, [pc, #124]	; (800be7c <HAL_ADC_Start_DMA+0x114>)
 800bdfe:	64c2      	str	r2, [r0, #76]	; 0x4c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800be00:	f06f 0222 	mvn.w	r2, #34	; 0x22
 800be04:	602a      	str	r2, [r5, #0]
    __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 800be06:	686a      	ldr	r2, [r5, #4]
 800be08:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800be0c:	606a      	str	r2, [r5, #4]
    hadc->Instance->CR2 |= ADC_CR2_DMA;
 800be0e:	68aa      	ldr	r2, [r5, #8]
 800be10:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800be14:	60aa      	str	r2, [r5, #8]
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 800be16:	460a      	mov	r2, r1
 800be18:	f105 014c 	add.w	r1, r5, #76	; 0x4c
 800be1c:	f000 fa14 	bl	800c248 <HAL_DMA_Start_IT>
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 800be20:	4a17      	ldr	r2, [pc, #92]	; (800be80 <HAL_ADC_Start_DMA+0x118>)
 800be22:	4918      	ldr	r1, [pc, #96]	; (800be84 <HAL_ADC_Start_DMA+0x11c>)
 800be24:	6853      	ldr	r3, [r2, #4]
 800be26:	f013 0f1f 	tst.w	r3, #31
 800be2a:	6823      	ldr	r3, [r4, #0]
 800be2c:	d119      	bne.n	800be62 <HAL_ADC_Start_DMA+0xfa>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 800be2e:	428b      	cmp	r3, r1
 800be30:	d007      	beq.n	800be42 <HAL_ADC_Start_DMA+0xda>
 800be32:	f501 7180 	add.w	r1, r1, #256	; 0x100
 800be36:	428b      	cmp	r3, r1
 800be38:	d10c      	bne.n	800be54 <HAL_ADC_Start_DMA+0xec>
 800be3a:	6852      	ldr	r2, [r2, #4]
 800be3c:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800be40:	d1a5      	bne.n	800bd8e <HAL_ADC_Start_DMA+0x26>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800be42:	6898      	ldr	r0, [r3, #8]
 800be44:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 800be48:	d1a1      	bne.n	800bd8e <HAL_ADC_Start_DMA+0x26>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800be4a:	689a      	ldr	r2, [r3, #8]
 800be4c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800be50:	609a      	str	r2, [r3, #8]
 800be52:	e79d      	b.n	800bd90 <HAL_ADC_Start_DMA+0x28>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800be54:	490c      	ldr	r1, [pc, #48]	; (800be88 <HAL_ADC_Start_DMA+0x120>)
 800be56:	428b      	cmp	r3, r1
 800be58:	d199      	bne.n	800bd8e <HAL_ADC_Start_DMA+0x26>
 800be5a:	6852      	ldr	r2, [r2, #4]
 800be5c:	f012 0f10 	tst.w	r2, #16
 800be60:	e7ee      	b.n	800be40 <HAL_ADC_Start_DMA+0xd8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800be62:	428b      	cmp	r3, r1
 800be64:	d193      	bne.n	800bd8e <HAL_ADC_Start_DMA+0x26>
 800be66:	e7ec      	b.n	800be42 <HAL_ADC_Start_DMA+0xda>
  __HAL_LOCK(hadc);
 800be68:	2002      	movs	r0, #2
 800be6a:	e791      	b.n	800bd90 <HAL_ADC_Start_DMA+0x28>
 800be6c:	2000008c 	.word	0x2000008c
 800be70:	000f4240 	.word	0x000f4240
 800be74:	0800beb5 	.word	0x0800beb5
 800be78:	0800be93 	.word	0x0800be93
 800be7c:	0800be9f 	.word	0x0800be9f
 800be80:	40012300 	.word	0x40012300
 800be84:	40012000 	.word	0x40012000
 800be88:	40012200 	.word	0x40012200

0800be8c <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 800be8c:	6803      	ldr	r3, [r0, #0]
 800be8e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 800be90:	4770      	bx	lr

0800be92 <ADC_DMAHalfConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
{
 800be92:	b508      	push	{r3, lr}
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
   /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 800be94:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800be96:	f7f6 fc45 	bl	8002724 <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 800be9a:	bd08      	pop	{r3, pc}

0800be9c <HAL_ADC_ErrorCallback>:
 800be9c:	4770      	bx	lr

0800be9e <ADC_DMAError>:
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
{
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 800be9e:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800bea0:	b508      	push	{r3, lr}
  hadc->State= HAL_ADC_STATE_ERROR_DMA;
 800bea2:	2340      	movs	r3, #64	; 0x40
 800bea4:	6403      	str	r3, [r0, #64]	; 0x40
  /* Set ADC error code to DMA error */
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 800bea6:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800bea8:	f043 0304 	orr.w	r3, r3, #4
 800beac:	6443      	str	r3, [r0, #68]	; 0x44
   /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 800beae:	f7ff fff5 	bl	800be9c <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 800beb2:	bd08      	pop	{r3, pc}

0800beb4 <ADC_DMAConvCplt>:
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 800beb4:	6b83      	ldr	r3, [r0, #56]	; 0x38
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 800beb6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800beb8:	f012 0f50 	tst.w	r2, #80	; 0x50
{
 800bebc:	b510      	push	{r4, lr}
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800bebe:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 800bec0:	d123      	bne.n	800bf0a <ADC_DMAConvCplt+0x56>
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800bec2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bec6:	641a      	str	r2, [r3, #64]	; 0x40
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800bec8:	681a      	ldr	r2, [r3, #0]
 800beca:	6891      	ldr	r1, [r2, #8]
 800becc:	f011 5f40 	tst.w	r1, #805306368	; 0x30000000
 800bed0:	d117      	bne.n	800bf02 <ADC_DMAConvCplt+0x4e>
 800bed2:	7e19      	ldrb	r1, [r3, #24]
 800bed4:	b9a9      	cbnz	r1, 800bf02 <ADC_DMAConvCplt+0x4e>
       (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 800bed6:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
       (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800bed8:	f411 0f70 	tst.w	r1, #15728640	; 0xf00000
 800bedc:	d002      	beq.n	800bee4 <ADC_DMAConvCplt+0x30>
        HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 800bede:	6891      	ldr	r1, [r2, #8]
       (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 800bee0:	0548      	lsls	r0, r1, #21
 800bee2:	d40e      	bmi.n	800bf02 <ADC_DMAConvCplt+0x4e>
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 800bee4:	6851      	ldr	r1, [r2, #4]
 800bee6:	f021 0120 	bic.w	r1, r1, #32
 800beea:	6051      	str	r1, [r2, #4]
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 800beec:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800beee:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800bef2:	641a      	str	r2, [r3, #64]	; 0x40
      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800bef4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800bef6:	04d1      	lsls	r1, r2, #19
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800bef8:	bf5e      	ittt	pl
 800befa:	6c1a      	ldrpl	r2, [r3, #64]	; 0x40
 800befc:	f042 0201 	orrpl.w	r2, r2, #1
 800bf00:	641a      	strpl	r2, [r3, #64]	; 0x40
    HAL_ADC_ConvCpltCallback(hadc);
 800bf02:	4618      	mov	r0, r3
 800bf04:	f7f6 fc10 	bl	8002728 <HAL_ADC_ConvCpltCallback>
}
 800bf08:	bd10      	pop	{r4, pc}
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 800bf0a:	06d2      	lsls	r2, r2, #27
 800bf0c:	d503      	bpl.n	800bf16 <ADC_DMAConvCplt+0x62>
      HAL_ADC_ErrorCallback(hadc);
 800bf0e:	4618      	mov	r0, r3
 800bf10:	f7ff ffc4 	bl	800be9c <HAL_ADC_ErrorCallback>
 800bf14:	e7f8      	b.n	800bf08 <ADC_DMAConvCplt+0x54>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 800bf16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
}
 800bf18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      hadc->DMA_Handle->XferErrorCallback(hdma);
 800bf1c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800bf1e:	4718      	bx	r3

0800bf20 <HAL_ADC_ConfigChannel>:
{
 800bf20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 800bf22:	2300      	movs	r3, #0
 800bf24:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800bf26:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800bf2a:	2b01      	cmp	r3, #1
 800bf2c:	d069      	beq.n	800c002 <HAL_ADC_ConfigChannel+0xe2>
 800bf2e:	2301      	movs	r3, #1
 800bf30:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 800bf34:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800bf36:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800bf38:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 800bf3a:	2d09      	cmp	r5, #9
 800bf3c:	b2ac      	uxth	r4, r5
 800bf3e:	d934      	bls.n	800bfaa <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800bf40:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 800bf44:	68df      	ldr	r7, [r3, #12]
 800bf46:	3a1e      	subs	r2, #30
 800bf48:	f04f 0c07 	mov.w	ip, #7
 800bf4c:	fa0c fc02 	lsl.w	ip, ip, r2
 800bf50:	ea27 070c 	bic.w	r7, r7, ip
 800bf54:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800bf56:	68df      	ldr	r7, [r3, #12]
 800bf58:	fa06 f202 	lsl.w	r2, r6, r2
 800bf5c:	433a      	orrs	r2, r7
 800bf5e:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 800bf60:	6849      	ldr	r1, [r1, #4]
 800bf62:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800bf64:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 800bf68:	d82f      	bhi.n	800bfca <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800bf6a:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800bf6c:	3a05      	subs	r2, #5
 800bf6e:	261f      	movs	r6, #31
 800bf70:	4096      	lsls	r6, r2
 800bf72:	ea21 0106 	bic.w	r1, r1, r6
 800bf76:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 800bf78:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800bf7a:	fa04 f202 	lsl.w	r2, r4, r2
 800bf7e:	430a      	orrs	r2, r1
 800bf80:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800bf82:	4a30      	ldr	r2, [pc, #192]	; (800c044 <HAL_ADC_ConfigChannel+0x124>)
 800bf84:	4293      	cmp	r3, r2
 800bf86:	d10a      	bne.n	800bf9e <HAL_ADC_ConfigChannel+0x7e>
 800bf88:	2d12      	cmp	r5, #18
 800bf8a:	d13c      	bne.n	800c006 <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 800bf8c:	4b2e      	ldr	r3, [pc, #184]	; (800c048 <HAL_ADC_ConfigChannel+0x128>)
 800bf8e:	685a      	ldr	r2, [r3, #4]
 800bf90:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 800bf94:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 800bf96:	685a      	ldr	r2, [r3, #4]
 800bf98:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800bf9c:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 800bf9e:	2300      	movs	r3, #0
 800bfa0:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 800bfa4:	4618      	mov	r0, r3
}
 800bfa6:	b003      	add	sp, #12
 800bfa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 800bfaa:	691f      	ldr	r7, [r3, #16]
 800bfac:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800bfb0:	f04f 0c07 	mov.w	ip, #7
 800bfb4:	fa0c fc02 	lsl.w	ip, ip, r2
 800bfb8:	ea27 070c 	bic.w	r7, r7, ip
 800bfbc:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800bfbe:	691f      	ldr	r7, [r3, #16]
 800bfc0:	fa06 f202 	lsl.w	r2, r6, r2
 800bfc4:	433a      	orrs	r2, r7
 800bfc6:	611a      	str	r2, [r3, #16]
 800bfc8:	e7ca      	b.n	800bf60 <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 800bfca:	290c      	cmp	r1, #12
 800bfcc:	f04f 011f 	mov.w	r1, #31
 800bfd0:	d80b      	bhi.n	800bfea <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800bfd2:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800bfd4:	3a23      	subs	r2, #35	; 0x23
 800bfd6:	4091      	lsls	r1, r2
 800bfd8:	ea26 0101 	bic.w	r1, r6, r1
 800bfdc:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800bfde:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800bfe0:	fa04 f202 	lsl.w	r2, r4, r2
 800bfe4:	430a      	orrs	r2, r1
 800bfe6:	631a      	str	r2, [r3, #48]	; 0x30
 800bfe8:	e7cb      	b.n	800bf82 <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800bfea:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800bfec:	3a41      	subs	r2, #65	; 0x41
 800bfee:	4091      	lsls	r1, r2
 800bff0:	ea26 0101 	bic.w	r1, r6, r1
 800bff4:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800bff6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800bff8:	fa04 f202 	lsl.w	r2, r4, r2
 800bffc:	430a      	orrs	r2, r1
 800bffe:	62da      	str	r2, [r3, #44]	; 0x2c
 800c000:	e7bf      	b.n	800bf82 <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800c002:	2002      	movs	r0, #2
 800c004:	e7cf      	b.n	800bfa6 <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800c006:	4b11      	ldr	r3, [pc, #68]	; (800c04c <HAL_ADC_ConfigChannel+0x12c>)
 800c008:	429d      	cmp	r5, r3
 800c00a:	d001      	beq.n	800c010 <HAL_ADC_ConfigChannel+0xf0>
 800c00c:	2d11      	cmp	r5, #17
 800c00e:	d1c6      	bne.n	800bf9e <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800c010:	4b0d      	ldr	r3, [pc, #52]	; (800c048 <HAL_ADC_ConfigChannel+0x128>)
 800c012:	685a      	ldr	r2, [r3, #4]
 800c014:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 800c018:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 800c01a:	685a      	ldr	r2, [r3, #4]
 800c01c:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800c020:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800c022:	4b0a      	ldr	r3, [pc, #40]	; (800c04c <HAL_ADC_ConfigChannel+0x12c>)
 800c024:	429d      	cmp	r5, r3
 800c026:	d1ba      	bne.n	800bf9e <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800c028:	4b09      	ldr	r3, [pc, #36]	; (800c050 <HAL_ADC_ConfigChannel+0x130>)
 800c02a:	4a0a      	ldr	r2, [pc, #40]	; (800c054 <HAL_ADC_ConfigChannel+0x134>)
 800c02c:	681b      	ldr	r3, [r3, #0]
 800c02e:	fbb3 f3f2 	udiv	r3, r3, r2
 800c032:	220a      	movs	r2, #10
 800c034:	4353      	muls	r3, r2
        counter--;
 800c036:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 800c038:	9b01      	ldr	r3, [sp, #4]
 800c03a:	2b00      	cmp	r3, #0
 800c03c:	d0af      	beq.n	800bf9e <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 800c03e:	9b01      	ldr	r3, [sp, #4]
 800c040:	3b01      	subs	r3, #1
 800c042:	e7f8      	b.n	800c036 <HAL_ADC_ConfigChannel+0x116>
 800c044:	40012000 	.word	0x40012000
 800c048:	40012300 	.word	0x40012300
 800c04c:	10000012 	.word	0x10000012
 800c050:	2000008c 	.word	0x2000008c
 800c054:	000f4240 	.word	0x000f4240

0800c058 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800c058:	4907      	ldr	r1, [pc, #28]	; (800c078 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800c05a:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800c05c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800c060:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800c062:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800c064:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800c068:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800c06a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800c06c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800c070:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800c074:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800c076:	4770      	bx	lr
 800c078:	e000ed00 	.word	0xe000ed00

0800c07c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800c07c:	4b16      	ldr	r3, [pc, #88]	; (800c0d8 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800c07e:	b530      	push	{r4, r5, lr}
 800c080:	68dc      	ldr	r4, [r3, #12]
 800c082:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800c086:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800c08a:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800c08c:	2d04      	cmp	r5, #4
 800c08e:	bf28      	it	cs
 800c090:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800c092:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800c094:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800c098:	bf8c      	ite	hi
 800c09a:	3c03      	subhi	r4, #3
 800c09c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800c09e:	fa03 f505 	lsl.w	r5, r3, r5
 800c0a2:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800c0a6:	40a3      	lsls	r3, r4
 800c0a8:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800c0ac:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800c0ae:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800c0b0:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0b4:	bfac      	ite	ge
 800c0b6:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0ba:	4a08      	ldrlt	r2, [pc, #32]	; (800c0dc <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0bc:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0c0:	bfb8      	it	lt
 800c0c2:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0c6:	b2db      	uxtb	r3, r3
 800c0c8:	bfaa      	itet	ge
 800c0ca:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0ce:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0d0:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800c0d4:	bd30      	pop	{r4, r5, pc}
 800c0d6:	bf00      	nop
 800c0d8:	e000ed00 	.word	0xe000ed00
 800c0dc:	e000ed14 	.word	0xe000ed14

0800c0e0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800c0e0:	2800      	cmp	r0, #0
 800c0e2:	db08      	blt.n	800c0f6 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800c0e4:	0942      	lsrs	r2, r0, #5
 800c0e6:	2301      	movs	r3, #1
 800c0e8:	f000 001f 	and.w	r0, r0, #31
 800c0ec:	fa03 f000 	lsl.w	r0, r3, r0
 800c0f0:	4b01      	ldr	r3, [pc, #4]	; (800c0f8 <HAL_NVIC_EnableIRQ+0x18>)
 800c0f2:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800c0f6:	4770      	bx	lr
 800c0f8:	e000e100 	.word	0xe000e100

0800c0fc <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800c0fc:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800c0fe:	4604      	mov	r4, r0
 800c100:	b150      	cbz	r0, 800c118 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800c102:	7943      	ldrb	r3, [r0, #5]
 800c104:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c108:	b913      	cbnz	r3, 800c110 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800c10a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800c10c:	f7f6 fee0 	bl	8002ed0 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800c110:	2301      	movs	r3, #1
 800c112:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800c114:	2000      	movs	r0, #0
}
 800c116:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800c118:	2001      	movs	r0, #1
 800c11a:	e7fc      	b.n	800c116 <HAL_CRC_Init+0x1a>

0800c11c <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800c11c:	6803      	ldr	r3, [r0, #0]
{
 800c11e:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800c120:	4c08      	ldr	r4, [pc, #32]	; (800c144 <DMA_CalcBaseAndBitshift+0x28>)
{
 800c122:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800c124:	b2d9      	uxtb	r1, r3
 800c126:	3910      	subs	r1, #16
 800c128:	2018      	movs	r0, #24
 800c12a:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800c12e:	5c20      	ldrb	r0, [r4, r0]
 800c130:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800c132:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 800c136:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 800c13a:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800c13c:	bf88      	it	hi
 800c13e:	3004      	addhi	r0, #4
 800c140:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 800c142:	bd10      	pop	{r4, pc}
 800c144:	08032a3c 	.word	0x08032a3c

0800c148 <HAL_DMA_Init>:
{
 800c148:	b570      	push	{r4, r5, r6, lr}
 800c14a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800c14c:	f7ff fc88 	bl	800ba60 <HAL_GetTick>
 800c150:	4605      	mov	r5, r0
  if(hdma == NULL)
 800c152:	2c00      	cmp	r4, #0
 800c154:	d073      	beq.n	800c23e <HAL_DMA_Init+0xf6>
  __HAL_UNLOCK(hdma);
 800c156:	2300      	movs	r3, #0
 800c158:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 800c15c:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 800c15e:	2302      	movs	r3, #2
 800c160:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 800c164:	6813      	ldr	r3, [r2, #0]
 800c166:	f023 0301 	bic.w	r3, r3, #1
 800c16a:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800c16c:	6821      	ldr	r1, [r4, #0]
 800c16e:	680b      	ldr	r3, [r1, #0]
 800c170:	07d8      	lsls	r0, r3, #31
 800c172:	d42f      	bmi.n	800c1d4 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 800c174:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800c176:	4d33      	ldr	r5, [pc, #204]	; (800c244 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800c178:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800c17a:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800c17c:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 800c180:	4313      	orrs	r3, r2
 800c182:	68e2      	ldr	r2, [r4, #12]
 800c184:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800c186:	6922      	ldr	r2, [r4, #16]
 800c188:	4313      	orrs	r3, r2
 800c18a:	6962      	ldr	r2, [r4, #20]
 800c18c:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800c18e:	69e2      	ldr	r2, [r4, #28]
 800c190:	4303      	orrs	r3, r0
 800c192:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 800c194:	6a22      	ldr	r2, [r4, #32]
 800c196:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800c198:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c19a:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800c19c:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800c1a0:	bf02      	ittt	eq
 800c1a2:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800c1a6:	4335      	orreq	r5, r6
 800c1a8:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 800c1aa:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 800c1ac:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800c1ae:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800c1b0:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 800c1b4:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800c1b8:	d133      	bne.n	800c222 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 800c1ba:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800c1bc:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 800c1be:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800c1c0:	b37d      	cbz	r5, 800c222 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800c1c2:	b990      	cbnz	r0, 800c1ea <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 800c1c4:	2a01      	cmp	r2, #1
 800c1c6:	d021      	beq.n	800c20c <HAL_DMA_Init+0xc4>
 800c1c8:	f032 0202 	bics.w	r2, r2, #2
 800c1cc:	d129      	bne.n	800c222 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800c1ce:	01ea      	lsls	r2, r5, #7
 800c1d0:	d527      	bpl.n	800c222 <HAL_DMA_Init+0xda>
 800c1d2:	e01e      	b.n	800c212 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800c1d4:	f7ff fc44 	bl	800ba60 <HAL_GetTick>
 800c1d8:	1b40      	subs	r0, r0, r5
 800c1da:	2805      	cmp	r0, #5
 800c1dc:	d9c6      	bls.n	800c16c <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800c1de:	2320      	movs	r3, #32
 800c1e0:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800c1e2:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 800c1e4:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 800c1e8:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800c1ea:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 800c1ee:	d114      	bne.n	800c21a <HAL_DMA_Init+0xd2>
    switch (tmp)
 800c1f0:	2a03      	cmp	r2, #3
 800c1f2:	d816      	bhi.n	800c222 <HAL_DMA_Init+0xda>
 800c1f4:	a001      	add	r0, pc, #4	; (adr r0, 800c1fc <HAL_DMA_Init+0xb4>)
 800c1f6:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800c1fa:	bf00      	nop
 800c1fc:	0800c213 	.word	0x0800c213
 800c200:	0800c1cf 	.word	0x0800c1cf
 800c204:	0800c213 	.word	0x0800c213
 800c208:	0800c20d 	.word	0x0800c20d
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800c20c:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 800c210:	d107      	bne.n	800c222 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800c212:	2340      	movs	r3, #64	; 0x40
 800c214:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800c216:	2001      	movs	r0, #1
 800c218:	e7e4      	b.n	800c1e4 <HAL_DMA_Init+0x9c>
    switch (tmp)
 800c21a:	2a02      	cmp	r2, #2
 800c21c:	d9f9      	bls.n	800c212 <HAL_DMA_Init+0xca>
 800c21e:	2a03      	cmp	r2, #3
 800c220:	d0d5      	beq.n	800c1ce <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 800c222:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800c224:	4620      	mov	r0, r4
 800c226:	f7ff ff79 	bl	800c11c <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800c22a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800c22c:	233f      	movs	r3, #63	; 0x3f
 800c22e:	4093      	lsls	r3, r2
 800c230:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800c232:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 800c234:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800c236:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 800c238:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 800c23c:	e7d4      	b.n	800c1e8 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 800c23e:	2001      	movs	r0, #1
 800c240:	e7d2      	b.n	800c1e8 <HAL_DMA_Init+0xa0>
 800c242:	bf00      	nop
 800c244:	f010803f 	.word	0xf010803f

0800c248 <HAL_DMA_Start_IT>:
{
 800c248:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma);
 800c24a:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800c24e:	6d86      	ldr	r6, [r0, #88]	; 0x58
  __HAL_LOCK(hdma);
 800c250:	2c01      	cmp	r4, #1
 800c252:	d031      	beq.n	800c2b8 <HAL_DMA_Start_IT+0x70>
 800c254:	2401      	movs	r4, #1
 800c256:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 800c25a:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
 800c25e:	2c01      	cmp	r4, #1
 800c260:	f04f 0500 	mov.w	r5, #0
 800c264:	f04f 0402 	mov.w	r4, #2
 800c268:	d124      	bne.n	800c2b4 <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 800c26a:	f880 4035 	strb.w	r4, [r0, #53]	; 0x35
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 800c26e:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800c270:	6545      	str	r5, [r0, #84]	; 0x54
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 800c272:	6825      	ldr	r5, [r4, #0]
 800c274:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
 800c278:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 800c27a:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 800c27c:	6883      	ldr	r3, [r0, #8]
 800c27e:	2b40      	cmp	r3, #64	; 0x40
    hdma->Instance->PAR = DstAddress;
 800c280:	bf0e      	itee	eq
 800c282:	60a2      	streq	r2, [r4, #8]
    hdma->Instance->PAR = SrcAddress;
 800c284:	60a1      	strne	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 800c286:	60e2      	strne	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800c288:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
    hdma->Instance->M0AR = SrcAddress;
 800c28a:	bf08      	it	eq
 800c28c:	60e1      	streq	r1, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800c28e:	233f      	movs	r3, #63	; 0x3f
 800c290:	4093      	lsls	r3, r2
 800c292:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 800c294:	6823      	ldr	r3, [r4, #0]
 800c296:	f043 0316 	orr.w	r3, r3, #22
 800c29a:	6023      	str	r3, [r4, #0]
    if(hdma->XferHalfCpltCallback != NULL)
 800c29c:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800c29e:	b11b      	cbz	r3, 800c2a8 <HAL_DMA_Start_IT+0x60>
      hdma->Instance->CR  |= DMA_IT_HT;
 800c2a0:	6823      	ldr	r3, [r4, #0]
 800c2a2:	f043 0308 	orr.w	r3, r3, #8
 800c2a6:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 800c2a8:	6823      	ldr	r3, [r4, #0]
 800c2aa:	f043 0301 	orr.w	r3, r3, #1
 800c2ae:	6023      	str	r3, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800c2b0:	2000      	movs	r0, #0
}
 800c2b2:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_UNLOCK(hdma);	  
 800c2b4:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  __HAL_LOCK(hdma);
 800c2b8:	2002      	movs	r0, #2
 800c2ba:	e7fa      	b.n	800c2b2 <HAL_DMA_Start_IT+0x6a>

0800c2bc <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800c2bc:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800c2c0:	2b02      	cmp	r3, #2
 800c2c2:	d003      	beq.n	800c2cc <HAL_DMA_Abort_IT+0x10>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800c2c4:	2380      	movs	r3, #128	; 0x80
 800c2c6:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800c2c8:	2001      	movs	r0, #1
 800c2ca:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 800c2cc:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800c2ce:	2305      	movs	r3, #5
 800c2d0:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800c2d4:	6813      	ldr	r3, [r2, #0]
 800c2d6:	f023 0301 	bic.w	r3, r3, #1
 800c2da:	6013      	str	r3, [r2, #0]
  return HAL_OK;
 800c2dc:	2000      	movs	r0, #0
}
 800c2de:	4770      	bx	lr

0800c2e0 <HAL_DMA_IRQHandler>:
{
 800c2e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t count = 0U;
 800c2e2:	2300      	movs	r3, #0
 800c2e4:	9301      	str	r3, [sp, #4]
  uint32_t timeout = SystemCoreClock / 9600U;
 800c2e6:	4b5c      	ldr	r3, [pc, #368]	; (800c458 <HAL_DMA_IRQHandler+0x178>)
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800c2e8:	6d85      	ldr	r5, [r0, #88]	; 0x58
  uint32_t timeout = SystemCoreClock / 9600U;
 800c2ea:	681f      	ldr	r7, [r3, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800c2ec:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  tmpisr = regs->ISR;
 800c2ee:	682e      	ldr	r6, [r5, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800c2f0:	2208      	movs	r2, #8
 800c2f2:	409a      	lsls	r2, r3
 800c2f4:	4232      	tst	r2, r6
{
 800c2f6:	4604      	mov	r4, r0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800c2f8:	d00c      	beq.n	800c314 <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 800c2fa:	6801      	ldr	r1, [r0, #0]
 800c2fc:	6808      	ldr	r0, [r1, #0]
 800c2fe:	0740      	lsls	r0, r0, #29
 800c300:	d508      	bpl.n	800c314 <HAL_DMA_IRQHandler+0x34>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 800c302:	6808      	ldr	r0, [r1, #0]
 800c304:	f020 0004 	bic.w	r0, r0, #4
 800c308:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 800c30a:	60aa      	str	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 800c30c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800c30e:	f042 0201 	orr.w	r2, r2, #1
 800c312:	6562      	str	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 800c314:	2201      	movs	r2, #1
 800c316:	409a      	lsls	r2, r3
 800c318:	4232      	tst	r2, r6
 800c31a:	d008      	beq.n	800c32e <HAL_DMA_IRQHandler+0x4e>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 800c31c:	6821      	ldr	r1, [r4, #0]
 800c31e:	6949      	ldr	r1, [r1, #20]
 800c320:	0609      	lsls	r1, r1, #24
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 800c322:	bf41      	itttt	mi
 800c324:	60aa      	strmi	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 800c326:	6d62      	ldrmi	r2, [r4, #84]	; 0x54
 800c328:	f042 0202 	orrmi.w	r2, r2, #2
 800c32c:	6562      	strmi	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 800c32e:	2204      	movs	r2, #4
 800c330:	409a      	lsls	r2, r3
 800c332:	4232      	tst	r2, r6
 800c334:	d008      	beq.n	800c348 <HAL_DMA_IRQHandler+0x68>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 800c336:	6821      	ldr	r1, [r4, #0]
 800c338:	6809      	ldr	r1, [r1, #0]
 800c33a:	0788      	lsls	r0, r1, #30
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 800c33c:	bf41      	itttt	mi
 800c33e:	60aa      	strmi	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 800c340:	6d62      	ldrmi	r2, [r4, #84]	; 0x54
 800c342:	f042 0204 	orrmi.w	r2, r2, #4
 800c346:	6562      	strmi	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 800c348:	2210      	movs	r2, #16
 800c34a:	409a      	lsls	r2, r3
 800c34c:	4232      	tst	r2, r6
 800c34e:	d010      	beq.n	800c372 <HAL_DMA_IRQHandler+0x92>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 800c350:	6823      	ldr	r3, [r4, #0]
 800c352:	6819      	ldr	r1, [r3, #0]
 800c354:	0709      	lsls	r1, r1, #28
 800c356:	d50c      	bpl.n	800c372 <HAL_DMA_IRQHandler+0x92>
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 800c358:	60aa      	str	r2, [r5, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800c35a:	681a      	ldr	r2, [r3, #0]
 800c35c:	0350      	lsls	r0, r2, #13
 800c35e:	d537      	bpl.n	800c3d0 <HAL_DMA_IRQHandler+0xf0>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800c360:	681b      	ldr	r3, [r3, #0]
 800c362:	0319      	lsls	r1, r3, #12
 800c364:	d401      	bmi.n	800c36a <HAL_DMA_IRQHandler+0x8a>
        if(hdma->XferHalfCpltCallback != NULL)
 800c366:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c368:	e000      	b.n	800c36c <HAL_DMA_IRQHandler+0x8c>
          if(hdma->XferM1HalfCpltCallback != NULL)
 800c36a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
        if(hdma->XferHalfCpltCallback != NULL)
 800c36c:	b10b      	cbz	r3, 800c372 <HAL_DMA_IRQHandler+0x92>
          hdma->XferHalfCpltCallback(hdma);
 800c36e:	4620      	mov	r0, r4
 800c370:	4798      	blx	r3
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 800c372:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 800c374:	2220      	movs	r2, #32
 800c376:	408a      	lsls	r2, r1
 800c378:	4232      	tst	r2, r6
 800c37a:	d03a      	beq.n	800c3f2 <HAL_DMA_IRQHandler+0x112>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 800c37c:	6823      	ldr	r3, [r4, #0]
 800c37e:	6818      	ldr	r0, [r3, #0]
 800c380:	06c6      	lsls	r6, r0, #27
 800c382:	d536      	bpl.n	800c3f2 <HAL_DMA_IRQHandler+0x112>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 800c384:	60aa      	str	r2, [r5, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 800c386:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 800c38a:	2a05      	cmp	r2, #5
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800c38c:	681a      	ldr	r2, [r3, #0]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 800c38e:	d127      	bne.n	800c3e0 <HAL_DMA_IRQHandler+0x100>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800c390:	f022 0216 	bic.w	r2, r2, #22
 800c394:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 800c396:	695a      	ldr	r2, [r3, #20]
 800c398:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800c39c:	615a      	str	r2, [r3, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800c39e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c3a0:	b90a      	cbnz	r2, 800c3a6 <HAL_DMA_IRQHandler+0xc6>
 800c3a2:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800c3a4:	b11a      	cbz	r2, 800c3ae <HAL_DMA_IRQHandler+0xce>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800c3a6:	681a      	ldr	r2, [r3, #0]
 800c3a8:	f022 0208 	bic.w	r2, r2, #8
 800c3ac:	601a      	str	r2, [r3, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 800c3ae:	233f      	movs	r3, #63	; 0x3f
 800c3b0:	408b      	lsls	r3, r1
 800c3b2:	60ab      	str	r3, [r5, #8]
        __HAL_UNLOCK(hdma);
 800c3b4:	2300      	movs	r3, #0
 800c3b6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_READY;
 800c3ba:	2301      	movs	r3, #1
 800c3bc:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        if(hdma->XferAbortCallback != NULL)
 800c3c0:	6d23      	ldr	r3, [r4, #80]	; 0x50
    if(hdma->XferErrorCallback != NULL)
 800c3c2:	2b00      	cmp	r3, #0
 800c3c4:	d045      	beq.n	800c452 <HAL_DMA_IRQHandler+0x172>
      hdma->XferErrorCallback(hdma);
 800c3c6:	4620      	mov	r0, r4
}
 800c3c8:	b003      	add	sp, #12
 800c3ca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 800c3ce:	4718      	bx	r3
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800c3d0:	681a      	ldr	r2, [r3, #0]
 800c3d2:	05d2      	lsls	r2, r2, #23
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800c3d4:	bf5e      	ittt	pl
 800c3d6:	681a      	ldrpl	r2, [r3, #0]
 800c3d8:	f022 0208 	bicpl.w	r2, r2, #8
 800c3dc:	601a      	strpl	r2, [r3, #0]
 800c3de:	e7c2      	b.n	800c366 <HAL_DMA_IRQHandler+0x86>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800c3e0:	0350      	lsls	r0, r2, #13
 800c3e2:	d527      	bpl.n	800c434 <HAL_DMA_IRQHandler+0x154>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800c3e4:	681b      	ldr	r3, [r3, #0]
 800c3e6:	0319      	lsls	r1, r3, #12
 800c3e8:	d431      	bmi.n	800c44e <HAL_DMA_IRQHandler+0x16e>
          if(hdma->XferM1CpltCallback != NULL)
 800c3ea:	6c63      	ldr	r3, [r4, #68]	; 0x44
        if(hdma->XferCpltCallback != NULL)
 800c3ec:	b10b      	cbz	r3, 800c3f2 <HAL_DMA_IRQHandler+0x112>
          hdma->XferCpltCallback(hdma);
 800c3ee:	4620      	mov	r0, r4
 800c3f0:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 800c3f2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c3f4:	b36b      	cbz	r3, 800c452 <HAL_DMA_IRQHandler+0x172>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 800c3f6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c3f8:	07da      	lsls	r2, r3, #31
 800c3fa:	d519      	bpl.n	800c430 <HAL_DMA_IRQHandler+0x150>
      __HAL_DMA_DISABLE(hdma);
 800c3fc:	6822      	ldr	r2, [r4, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 800c3fe:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 800c402:	fbb7 f7f3 	udiv	r7, r7, r3
      hdma->State = HAL_DMA_STATE_ABORT;
 800c406:	2305      	movs	r3, #5
 800c408:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
 800c40c:	6813      	ldr	r3, [r2, #0]
 800c40e:	f023 0301 	bic.w	r3, r3, #1
 800c412:	6013      	str	r3, [r2, #0]
        if (++count > timeout)
 800c414:	9b01      	ldr	r3, [sp, #4]
 800c416:	3301      	adds	r3, #1
 800c418:	42bb      	cmp	r3, r7
 800c41a:	9301      	str	r3, [sp, #4]
 800c41c:	d802      	bhi.n	800c424 <HAL_DMA_IRQHandler+0x144>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 800c41e:	6813      	ldr	r3, [r2, #0]
 800c420:	07db      	lsls	r3, r3, #31
 800c422:	d4f7      	bmi.n	800c414 <HAL_DMA_IRQHandler+0x134>
      __HAL_UNLOCK(hdma);
 800c424:	2300      	movs	r3, #0
 800c426:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
      hdma->State = HAL_DMA_STATE_READY;
 800c42a:	2301      	movs	r3, #1
 800c42c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    if(hdma->XferErrorCallback != NULL)
 800c430:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800c432:	e7c6      	b.n	800c3c2 <HAL_DMA_IRQHandler+0xe2>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800c434:	681a      	ldr	r2, [r3, #0]
 800c436:	f412 7280 	ands.w	r2, r2, #256	; 0x100
 800c43a:	d108      	bne.n	800c44e <HAL_DMA_IRQHandler+0x16e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 800c43c:	6819      	ldr	r1, [r3, #0]
 800c43e:	f021 0110 	bic.w	r1, r1, #16
 800c442:	6019      	str	r1, [r3, #0]
          hdma->State = HAL_DMA_STATE_READY;
 800c444:	2301      	movs	r3, #1
          __HAL_UNLOCK(hdma);
 800c446:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
          hdma->State = HAL_DMA_STATE_READY;
 800c44a:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        if(hdma->XferCpltCallback != NULL)
 800c44e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c450:	e7cc      	b.n	800c3ec <HAL_DMA_IRQHandler+0x10c>
}
 800c452:	b003      	add	sp, #12
 800c454:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c456:	bf00      	nop
 800c458:	2000008c 	.word	0x2000008c

0800c45c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800c45c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 800c45e:	4604      	mov	r4, r0
 800c460:	b330      	cbz	r0, 800c4b0 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 800c462:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800c466:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c46a:	b91b      	cbnz	r3, 800c474 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800c46c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800c470:	f7f6 fd46 	bl	8002f00 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800c474:	6822      	ldr	r2, [r4, #0]
 800c476:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800c478:	2302      	movs	r3, #2
 800c47a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800c47e:	6813      	ldr	r3, [r2, #0]
 800c480:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c484:	430b      	orrs	r3, r1
 800c486:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800c488:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800c48a:	68a1      	ldr	r1, [r4, #8]
 800c48c:	f023 0307 	bic.w	r3, r3, #7
 800c490:	430b      	orrs	r3, r1
 800c492:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800c494:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c496:	68e1      	ldr	r1, [r4, #12]
 800c498:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800c49c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800c4a0:	430b      	orrs	r3, r1
 800c4a2:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800c4a4:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800c4a6:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800c4a8:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800c4aa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800c4ae:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800c4b0:	2001      	movs	r0, #1
 800c4b2:	e7fc      	b.n	800c4ae <HAL_DMA2D_Init+0x52>

0800c4b4 <HAL_DMA2D_LineEventCallback>:
 800c4b4:	4770      	bx	lr

0800c4b6 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800c4b6:	4770      	bx	lr

0800c4b8 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800c4b8:	6803      	ldr	r3, [r0, #0]
{
 800c4ba:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800c4bc:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800c4be:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800c4c0:	07f2      	lsls	r2, r6, #31
{
 800c4c2:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800c4c4:	d514      	bpl.n	800c4f0 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800c4c6:	05e9      	lsls	r1, r5, #23
 800c4c8:	d512      	bpl.n	800c4f0 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800c4ca:	681a      	ldr	r2, [r3, #0]
 800c4cc:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800c4d0:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800c4d2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800c4d4:	f042 0201 	orr.w	r2, r2, #1
 800c4d8:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800c4da:	2201      	movs	r2, #1
 800c4dc:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c4de:	2304      	movs	r3, #4
 800c4e0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800c4e4:	2300      	movs	r3, #0
 800c4e6:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800c4ea:	6943      	ldr	r3, [r0, #20]
 800c4ec:	b103      	cbz	r3, 800c4f0 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800c4ee:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800c4f0:	06b2      	lsls	r2, r6, #26
 800c4f2:	d516      	bpl.n	800c522 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 800c4f4:	04ab      	lsls	r3, r5, #18
 800c4f6:	d514      	bpl.n	800c522 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800c4f8:	6823      	ldr	r3, [r4, #0]
 800c4fa:	681a      	ldr	r2, [r3, #0]
 800c4fc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c500:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800c502:	2220      	movs	r2, #32
 800c504:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800c506:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c508:	f043 0302 	orr.w	r3, r3, #2
 800c50c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c50e:	2304      	movs	r3, #4
 800c510:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800c514:	2300      	movs	r3, #0
 800c516:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800c51a:	6963      	ldr	r3, [r4, #20]
 800c51c:	b10b      	cbz	r3, 800c522 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800c51e:	4620      	mov	r0, r4
 800c520:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800c522:	0730      	lsls	r0, r6, #28
 800c524:	d516      	bpl.n	800c554 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800c526:	0529      	lsls	r1, r5, #20
 800c528:	d514      	bpl.n	800c554 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800c52a:	6823      	ldr	r3, [r4, #0]
 800c52c:	681a      	ldr	r2, [r3, #0]
 800c52e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800c532:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800c534:	2208      	movs	r2, #8
 800c536:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800c538:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c53a:	f043 0304 	orr.w	r3, r3, #4
 800c53e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c540:	2304      	movs	r3, #4
 800c542:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800c546:	2300      	movs	r3, #0
 800c548:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800c54c:	6963      	ldr	r3, [r4, #20]
 800c54e:	b10b      	cbz	r3, 800c554 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800c550:	4620      	mov	r0, r4
 800c552:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800c554:	0772      	lsls	r2, r6, #29
 800c556:	d50b      	bpl.n	800c570 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800c558:	056b      	lsls	r3, r5, #21
 800c55a:	d509      	bpl.n	800c570 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800c55c:	6823      	ldr	r3, [r4, #0]
 800c55e:	681a      	ldr	r2, [r3, #0]
 800c560:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c564:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800c566:	2204      	movs	r2, #4
 800c568:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800c56a:	4620      	mov	r0, r4
 800c56c:	f7ff ffa2 	bl	800c4b4 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800c570:	07b0      	lsls	r0, r6, #30
 800c572:	d514      	bpl.n	800c59e <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800c574:	05a9      	lsls	r1, r5, #22
 800c576:	d512      	bpl.n	800c59e <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800c578:	6823      	ldr	r3, [r4, #0]
 800c57a:	681a      	ldr	r2, [r3, #0]
 800c57c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800c580:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800c582:	2202      	movs	r2, #2
 800c584:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800c586:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c588:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800c58a:	2301      	movs	r3, #1
 800c58c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800c590:	2300      	movs	r3, #0
 800c592:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 800c596:	6923      	ldr	r3, [r4, #16]
 800c598:	b10b      	cbz	r3, 800c59e <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800c59a:	4620      	mov	r0, r4
 800c59c:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800c59e:	06f2      	lsls	r2, r6, #27
 800c5a0:	d513      	bpl.n	800c5ca <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800c5a2:	04eb      	lsls	r3, r5, #19
 800c5a4:	d511      	bpl.n	800c5ca <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800c5a6:	6823      	ldr	r3, [r4, #0]
 800c5a8:	681a      	ldr	r2, [r3, #0]
 800c5aa:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800c5ae:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800c5b0:	2210      	movs	r2, #16
 800c5b2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800c5b4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c5b6:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800c5b8:	2301      	movs	r3, #1
 800c5ba:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800c5be:	2300      	movs	r3, #0
 800c5c0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800c5c4:	4620      	mov	r0, r4
 800c5c6:	f7ff ff76 	bl	800c4b6 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800c5ca:	bd70      	pop	{r4, r5, r6, pc}

0800c5cc <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800c5cc:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800c5ce:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800c5d2:	2b01      	cmp	r3, #1
 800c5d4:	f04f 0302 	mov.w	r3, #2
 800c5d8:	d02b      	beq.n	800c632 <HAL_DMA2D_ConfigLayer+0x66>
 800c5da:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800c5dc:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800c5e0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800c5e4:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800c5e8:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800c5ec:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800c5ee:	4f18      	ldr	r7, [pc, #96]	; (800c650 <HAL_DMA2D_ConfigLayer+0x84>)
 800c5f0:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c5f4:	3c09      	subs	r4, #9
 800c5f6:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800c5f8:	bf9c      	itt	ls
 800c5fa:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800c5fe:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800c600:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c604:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800c606:	bf88      	it	hi
 800c608:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 800c60c:	b999      	cbnz	r1, 800c636 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c60e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800c610:	4039      	ands	r1, r7
 800c612:	430a      	orrs	r2, r1
 800c614:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c616:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800c618:	6982      	ldr	r2, [r0, #24]
 800c61a:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c61c:	d803      	bhi.n	800c626 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 800c61e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800c620:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 800c624:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800c626:	2301      	movs	r3, #1
 800c628:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800c62c:	2300      	movs	r3, #0
 800c62e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800c632:	4618      	mov	r0, r3

  return HAL_OK;
}
 800c634:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800c636:	69d9      	ldr	r1, [r3, #28]
 800c638:	4039      	ands	r1, r7
 800c63a:	430a      	orrs	r2, r1
 800c63c:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800c63e:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c640:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800c642:	6992      	ldr	r2, [r2, #24]
 800c644:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800c646:	bf9c      	itt	ls
 800c648:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800c64c:	621d      	strls	r5, [r3, #32]
 800c64e:	e7ea      	b.n	800c626 <HAL_DMA2D_ConfigLayer+0x5a>
 800c650:	00fcfff0 	.word	0x00fcfff0

0800c654 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800c654:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800c658:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800c81c <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800c65c:	4a6d      	ldr	r2, [pc, #436]	; (800c814 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c65e:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 800c820 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800c662:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800c664:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800c666:	2401      	movs	r4, #1
 800c668:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800c66a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800c66e:	43ac      	bics	r4, r5
 800c670:	f040 80b7 	bne.w	800c7e2 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800c674:	684c      	ldr	r4, [r1, #4]
 800c676:	f024 0c10 	bic.w	ip, r4, #16
 800c67a:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c67e:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800c680:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c684:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800c688:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c68a:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800c68e:	d811      	bhi.n	800c6b4 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 800c690:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c692:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 800c696:	68cf      	ldr	r7, [r1, #12]
 800c698:	fa07 f70e 	lsl.w	r7, r7, lr
 800c69c:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 800c6a0:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800c6a2:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800c6a4:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800c6a8:	f3c4 1700 	ubfx	r7, r4, #4, #1
 800c6ac:	409f      	lsls	r7, r3
 800c6ae:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 800c6b2:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 800c6b4:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800c6b6:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800c6ba:	688f      	ldr	r7, [r1, #8]
 800c6bc:	fa07 f70e 	lsl.w	r7, r7, lr
 800c6c0:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800c6c4:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 800c6c8:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800c6ca:	d116      	bne.n	800c6fa <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 800c6cc:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800c6d0:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800c6d4:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800c6d8:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800c6dc:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800c6e0:	f04f 0c0f 	mov.w	ip, #15
 800c6e4:	fa0c fc0b 	lsl.w	ip, ip, fp
 800c6e8:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800c6ec:	690f      	ldr	r7, [r1, #16]
 800c6ee:	fa07 f70b 	lsl.w	r7, r7, fp
 800c6f2:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 800c6f6:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 800c6fa:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800c6fc:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800c6fe:	f004 0703 	and.w	r7, r4, #3
 800c702:	fa07 f70e 	lsl.w	r7, r7, lr
 800c706:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 800c708:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800c70a:	00e5      	lsls	r5, r4, #3
 800c70c:	d569      	bpl.n	800c7e2 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800c70e:	f04f 0b00 	mov.w	fp, #0
 800c712:	f8cd b004 	str.w	fp, [sp, #4]
 800c716:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c71a:	4d3f      	ldr	r5, [pc, #252]	; (800c818 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800c71c:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 800c720:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 800c724:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800c728:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 800c72c:	9701      	str	r7, [sp, #4]
 800c72e:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800c730:	f023 0703 	bic.w	r7, r3, #3
 800c734:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 800c738:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800c73c:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800c740:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800c744:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800c748:	f04f 0c0f 	mov.w	ip, #15
 800c74c:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c750:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800c752:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c756:	d04b      	beq.n	800c7f0 <HAL_GPIO_Init+0x19c>
 800c758:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c75c:	42a8      	cmp	r0, r5
 800c75e:	d049      	beq.n	800c7f4 <HAL_GPIO_Init+0x1a0>
 800c760:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c764:	42a8      	cmp	r0, r5
 800c766:	d047      	beq.n	800c7f8 <HAL_GPIO_Init+0x1a4>
 800c768:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c76c:	42a8      	cmp	r0, r5
 800c76e:	d045      	beq.n	800c7fc <HAL_GPIO_Init+0x1a8>
 800c770:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c774:	42a8      	cmp	r0, r5
 800c776:	d043      	beq.n	800c800 <HAL_GPIO_Init+0x1ac>
 800c778:	4548      	cmp	r0, r9
 800c77a:	d043      	beq.n	800c804 <HAL_GPIO_Init+0x1b0>
 800c77c:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 800c780:	42a8      	cmp	r0, r5
 800c782:	d041      	beq.n	800c808 <HAL_GPIO_Init+0x1b4>
 800c784:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c788:	42a8      	cmp	r0, r5
 800c78a:	d03f      	beq.n	800c80c <HAL_GPIO_Init+0x1b8>
 800c78c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c790:	42a8      	cmp	r0, r5
 800c792:	d03d      	beq.n	800c810 <HAL_GPIO_Init+0x1bc>
 800c794:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c798:	42a8      	cmp	r0, r5
 800c79a:	bf0c      	ite	eq
 800c79c:	2509      	moveq	r5, #9
 800c79e:	250a      	movne	r5, #10
 800c7a0:	fa05 f50e 	lsl.w	r5, r5, lr
 800c7a4:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 800c7a8:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 800c7aa:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800c7ac:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800c7ae:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 800c7b2:	bf0c      	ite	eq
 800c7b4:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800c7b6:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 800c7b8:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 800c7ba:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800c7bc:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800c7c0:	bf0c      	ite	eq
 800c7c2:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800c7c4:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 800c7c6:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800c7c8:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800c7ca:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800c7ce:	bf0c      	ite	eq
 800c7d0:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800c7d2:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 800c7d4:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 800c7d6:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800c7d8:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 800c7da:	bf54      	ite	pl
 800c7dc:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 800c7de:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 800c7e0:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800c7e2:	3301      	adds	r3, #1
 800c7e4:	2b10      	cmp	r3, #16
 800c7e6:	f47f af3d 	bne.w	800c664 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 800c7ea:	b003      	add	sp, #12
 800c7ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c7f0:	465d      	mov	r5, fp
 800c7f2:	e7d5      	b.n	800c7a0 <HAL_GPIO_Init+0x14c>
 800c7f4:	2501      	movs	r5, #1
 800c7f6:	e7d3      	b.n	800c7a0 <HAL_GPIO_Init+0x14c>
 800c7f8:	2502      	movs	r5, #2
 800c7fa:	e7d1      	b.n	800c7a0 <HAL_GPIO_Init+0x14c>
 800c7fc:	2503      	movs	r5, #3
 800c7fe:	e7cf      	b.n	800c7a0 <HAL_GPIO_Init+0x14c>
 800c800:	2504      	movs	r5, #4
 800c802:	e7cd      	b.n	800c7a0 <HAL_GPIO_Init+0x14c>
 800c804:	2505      	movs	r5, #5
 800c806:	e7cb      	b.n	800c7a0 <HAL_GPIO_Init+0x14c>
 800c808:	2506      	movs	r5, #6
 800c80a:	e7c9      	b.n	800c7a0 <HAL_GPIO_Init+0x14c>
 800c80c:	2507      	movs	r5, #7
 800c80e:	e7c7      	b.n	800c7a0 <HAL_GPIO_Init+0x14c>
 800c810:	2508      	movs	r5, #8
 800c812:	e7c5      	b.n	800c7a0 <HAL_GPIO_Init+0x14c>
 800c814:	40013c00 	.word	0x40013c00
 800c818:	40020000 	.word	0x40020000
 800c81c:	40023800 	.word	0x40023800
 800c820:	40021400 	.word	0x40021400

0800c824 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800c824:	b10a      	cbz	r2, 800c82a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800c826:	6181      	str	r1, [r0, #24]
  }
}
 800c828:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800c82a:	0409      	lsls	r1, r1, #16
 800c82c:	e7fb      	b.n	800c826 <HAL_GPIO_WritePin+0x2>

0800c82e <HAL_GPIO_TogglePin>:
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->ODR & GPIO_Pin) == GPIO_Pin)
 800c82e:	6943      	ldr	r3, [r0, #20]
 800c830:	ea31 0303 	bics.w	r3, r1, r3
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 800c834:	bf08      	it	eq
 800c836:	0409      	lsleq	r1, r1, #16
  }
  else
  {
    GPIOx->BSRR = GPIO_Pin;
 800c838:	6181      	str	r1, [r0, #24]
  }
}
 800c83a:	4770      	bx	lr

0800c83c <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c83c:	6801      	ldr	r1, [r0, #0]
 800c83e:	694b      	ldr	r3, [r1, #20]
 800c840:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800c844:	f04f 0200 	mov.w	r2, #0
 800c848:	d010      	beq.n	800c86c <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c84a:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800c84e:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800c850:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c852:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c854:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c858:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c85c:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800c85e:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c862:	f043 0304 	orr.w	r3, r3, #4
 800c866:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800c868:	2001      	movs	r0, #1
 800c86a:	4770      	bx	lr
  }
  return HAL_OK;
 800c86c:	4618      	mov	r0, r3
}
 800c86e:	4770      	bx	lr

0800c870 <I2C_WaitOnFlagUntilTimeout>:
{
 800c870:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800c874:	4606      	mov	r6, r0
 800c876:	460f      	mov	r7, r1
 800c878:	4691      	mov	r9, r2
 800c87a:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c87c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800c880:	6833      	ldr	r3, [r6, #0]
 800c882:	f1ba 0f01 	cmp.w	sl, #1
 800c886:	bf0c      	ite	eq
 800c888:	695c      	ldreq	r4, [r3, #20]
 800c88a:	699c      	ldrne	r4, [r3, #24]
 800c88c:	ea27 0404 	bic.w	r4, r7, r4
 800c890:	b2a4      	uxth	r4, r4
 800c892:	fab4 f484 	clz	r4, r4
 800c896:	0964      	lsrs	r4, r4, #5
 800c898:	45a1      	cmp	r9, r4
 800c89a:	d001      	beq.n	800c8a0 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800c89c:	2000      	movs	r0, #0
 800c89e:	e017      	b.n	800c8d0 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800c8a0:	1c6a      	adds	r2, r5, #1
 800c8a2:	d0ee      	beq.n	800c882 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c8a4:	f7ff f8dc 	bl	800ba60 <HAL_GetTick>
 800c8a8:	9b08      	ldr	r3, [sp, #32]
 800c8aa:	1ac0      	subs	r0, r0, r3
 800c8ac:	42a8      	cmp	r0, r5
 800c8ae:	d801      	bhi.n	800c8b4 <I2C_WaitOnFlagUntilTimeout+0x44>
 800c8b0:	2d00      	cmp	r5, #0
 800c8b2:	d1e5      	bne.n	800c880 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c8b4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c8b6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c8b8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c8ba:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c8be:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c8c2:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c8c4:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c8c8:	f042 0220 	orr.w	r2, r2, #32
 800c8cc:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 800c8ce:	2001      	movs	r0, #1
}
 800c8d0:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800c8d4 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800c8d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c8d8:	4604      	mov	r4, r0
 800c8da:	460f      	mov	r7, r1
 800c8dc:	4616      	mov	r6, r2
 800c8de:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c8e0:	6825      	ldr	r5, [r4, #0]
 800c8e2:	6968      	ldr	r0, [r5, #20]
 800c8e4:	ea27 0000 	bic.w	r0, r7, r0
 800c8e8:	b280      	uxth	r0, r0
 800c8ea:	b1b8      	cbz	r0, 800c91c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c8ec:	696b      	ldr	r3, [r5, #20]
 800c8ee:	055a      	lsls	r2, r3, #21
 800c8f0:	d516      	bpl.n	800c920 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c8f2:	682b      	ldr	r3, [r5, #0]
 800c8f4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c8f8:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c8fa:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800c8fe:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800c900:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c902:	2300      	movs	r3, #0
 800c904:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c906:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c90a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c90e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c910:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c914:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c916:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800c91a:	2001      	movs	r0, #1
}
 800c91c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800c920:	1c73      	adds	r3, r6, #1
 800c922:	d0de      	beq.n	800c8e2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c924:	f7ff f89c 	bl	800ba60 <HAL_GetTick>
 800c928:	eba0 0008 	sub.w	r0, r0, r8
 800c92c:	42b0      	cmp	r0, r6
 800c92e:	d801      	bhi.n	800c934 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 800c930:	2e00      	cmp	r6, #0
 800c932:	d1d5      	bne.n	800c8e0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c934:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c936:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c938:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c93a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c93e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c942:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c944:	f042 0220 	orr.w	r2, r2, #32
 800c948:	e7e4      	b.n	800c914 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800c94a <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800c94a:	b570      	push	{r4, r5, r6, lr}
 800c94c:	4604      	mov	r4, r0
 800c94e:	460d      	mov	r5, r1
 800c950:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c952:	6821      	ldr	r1, [r4, #0]
 800c954:	694b      	ldr	r3, [r1, #20]
 800c956:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800c95a:	d001      	beq.n	800c960 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800c95c:	2000      	movs	r0, #0
 800c95e:	e010      	b.n	800c982 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c960:	694a      	ldr	r2, [r1, #20]
 800c962:	06d2      	lsls	r2, r2, #27
 800c964:	d50e      	bpl.n	800c984 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c966:	f06f 0210 	mvn.w	r2, #16
 800c96a:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800c96c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c96e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c970:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c974:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800c978:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c97a:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c97c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 800c980:	2001      	movs	r0, #1
}
 800c982:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c984:	f7ff f86c 	bl	800ba60 <HAL_GetTick>
 800c988:	1b80      	subs	r0, r0, r6
 800c98a:	42a8      	cmp	r0, r5
 800c98c:	d801      	bhi.n	800c992 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800c98e:	2d00      	cmp	r5, #0
 800c990:	d1df      	bne.n	800c952 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c992:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800c994:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c996:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c998:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c99c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c9a0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c9a2:	f042 0220 	orr.w	r2, r2, #32
 800c9a6:	e7e8      	b.n	800c97a <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800c9a8 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800c9a8:	b570      	push	{r4, r5, r6, lr}
 800c9aa:	4604      	mov	r4, r0
 800c9ac:	460d      	mov	r5, r1
 800c9ae:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c9b0:	6823      	ldr	r3, [r4, #0]
 800c9b2:	695b      	ldr	r3, [r3, #20]
 800c9b4:	075b      	lsls	r3, r3, #29
 800c9b6:	d501      	bpl.n	800c9bc <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800c9b8:	2000      	movs	r0, #0
}
 800c9ba:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800c9bc:	4620      	mov	r0, r4
 800c9be:	f7ff ff3d 	bl	800c83c <I2C_IsAcknowledgeFailed>
 800c9c2:	b9a8      	cbnz	r0, 800c9f0 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800c9c4:	1c6a      	adds	r2, r5, #1
 800c9c6:	d0f3      	beq.n	800c9b0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c9c8:	f7ff f84a 	bl	800ba60 <HAL_GetTick>
 800c9cc:	1b80      	subs	r0, r0, r6
 800c9ce:	42a8      	cmp	r0, r5
 800c9d0:	d801      	bhi.n	800c9d6 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800c9d2:	2d00      	cmp	r5, #0
 800c9d4:	d1ec      	bne.n	800c9b0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c9d6:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c9d8:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c9da:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c9dc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c9e0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c9e4:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c9e6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c9ea:	f042 0220 	orr.w	r2, r2, #32
 800c9ee:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800c9f0:	2001      	movs	r0, #1
 800c9f2:	e7e2      	b.n	800c9ba <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800c9f4 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800c9f4:	b570      	push	{r4, r5, r6, lr}
 800c9f6:	4604      	mov	r4, r0
 800c9f8:	460d      	mov	r5, r1
 800c9fa:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c9fc:	6823      	ldr	r3, [r4, #0]
 800c9fe:	695b      	ldr	r3, [r3, #20]
 800ca00:	061b      	lsls	r3, r3, #24
 800ca02:	d501      	bpl.n	800ca08 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800ca04:	2000      	movs	r0, #0
}
 800ca06:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800ca08:	4620      	mov	r0, r4
 800ca0a:	f7ff ff17 	bl	800c83c <I2C_IsAcknowledgeFailed>
 800ca0e:	b9a8      	cbnz	r0, 800ca3c <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800ca10:	1c6a      	adds	r2, r5, #1
 800ca12:	d0f3      	beq.n	800c9fc <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ca14:	f7ff f824 	bl	800ba60 <HAL_GetTick>
 800ca18:	1b80      	subs	r0, r0, r6
 800ca1a:	42a8      	cmp	r0, r5
 800ca1c:	d801      	bhi.n	800ca22 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800ca1e:	2d00      	cmp	r5, #0
 800ca20:	d1ec      	bne.n	800c9fc <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800ca22:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800ca24:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800ca26:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800ca28:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ca2c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ca30:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ca32:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ca36:	f042 0220 	orr.w	r2, r2, #32
 800ca3a:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800ca3c:	2001      	movs	r0, #1
 800ca3e:	e7e2      	b.n	800ca06 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

0800ca40 <I2C_RequestMemoryWrite>:
{
 800ca40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ca44:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ca46:	6802      	ldr	r2, [r0, #0]
{
 800ca48:	b085      	sub	sp, #20
 800ca4a:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800ca4e:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ca50:	6813      	ldr	r3, [r2, #0]
 800ca52:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ca56:	6013      	str	r3, [r2, #0]
{
 800ca58:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ca5a:	463b      	mov	r3, r7
 800ca5c:	f8cd 8000 	str.w	r8, [sp]
 800ca60:	2200      	movs	r2, #0
 800ca62:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800ca66:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ca68:	f7ff ff02 	bl	800c870 <I2C_WaitOnFlagUntilTimeout>
 800ca6c:	6823      	ldr	r3, [r4, #0]
 800ca6e:	b138      	cbz	r0, 800ca80 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800ca70:	681b      	ldr	r3, [r3, #0]
 800ca72:	05db      	lsls	r3, r3, #23
 800ca74:	d502      	bpl.n	800ca7c <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800ca76:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ca7a:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800ca7c:	2003      	movs	r0, #3
 800ca7e:	e00a      	b.n	800ca96 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800ca80:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800ca84:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800ca86:	4919      	ldr	r1, [pc, #100]	; (800caec <I2C_RequestMemoryWrite+0xac>)
 800ca88:	4643      	mov	r3, r8
 800ca8a:	463a      	mov	r2, r7
 800ca8c:	4620      	mov	r0, r4
 800ca8e:	f7ff ff21 	bl	800c8d4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800ca92:	b118      	cbz	r0, 800ca9c <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800ca94:	2001      	movs	r0, #1
}
 800ca96:	b005      	add	sp, #20
 800ca98:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ca9c:	6823      	ldr	r3, [r4, #0]
 800ca9e:	9003      	str	r0, [sp, #12]
 800caa0:	695a      	ldr	r2, [r3, #20]
 800caa2:	9203      	str	r2, [sp, #12]
 800caa4:	699b      	ldr	r3, [r3, #24]
 800caa6:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800caa8:	4642      	mov	r2, r8
 800caaa:	4639      	mov	r1, r7
 800caac:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800caae:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cab0:	f7ff ffa0 	bl	800c9f4 <I2C_WaitOnTXEFlagUntilTimeout>
 800cab4:	b140      	cbz	r0, 800cac8 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800cab6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cab8:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800caba:	bf01      	itttt	eq
 800cabc:	6822      	ldreq	r2, [r4, #0]
 800cabe:	6813      	ldreq	r3, [r2, #0]
 800cac0:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800cac4:	6013      	streq	r3, [r2, #0]
 800cac6:	e7e5      	b.n	800ca94 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800cac8:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cacc:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800cace:	d102      	bne.n	800cad6 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800cad0:	b2ed      	uxtb	r5, r5
 800cad2:	611d      	str	r5, [r3, #16]
 800cad4:	e7df      	b.n	800ca96 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800cad6:	0a2a      	lsrs	r2, r5, #8
 800cad8:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cada:	4639      	mov	r1, r7
 800cadc:	4642      	mov	r2, r8
 800cade:	4620      	mov	r0, r4
 800cae0:	f7ff ff88 	bl	800c9f4 <I2C_WaitOnTXEFlagUntilTimeout>
 800cae4:	2800      	cmp	r0, #0
 800cae6:	d1e6      	bne.n	800cab6 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800cae8:	6823      	ldr	r3, [r4, #0]
 800caea:	e7f1      	b.n	800cad0 <I2C_RequestMemoryWrite+0x90>
 800caec:	00010002 	.word	0x00010002

0800caf0 <I2C_RequestMemoryRead>:
{
 800caf0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800caf4:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800caf6:	6803      	ldr	r3, [r0, #0]
{
 800caf8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cafa:	681a      	ldr	r2, [r3, #0]
 800cafc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800cb00:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800cb02:	681a      	ldr	r2, [r3, #0]
{
 800cb04:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800cb08:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800cb0c:	601a      	str	r2, [r3, #0]
{
 800cb0e:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800cb10:	463b      	mov	r3, r7
 800cb12:	f8cd 8000 	str.w	r8, [sp]
 800cb16:	2200      	movs	r2, #0
 800cb18:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800cb1c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800cb1e:	f7ff fea7 	bl	800c870 <I2C_WaitOnFlagUntilTimeout>
 800cb22:	6823      	ldr	r3, [r4, #0]
 800cb24:	b148      	cbz	r0, 800cb3a <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800cb26:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800cb28:	05db      	lsls	r3, r3, #23
 800cb2a:	d502      	bpl.n	800cb32 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800cb2c:	f44f 7300 	mov.w	r3, #512	; 0x200
 800cb30:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800cb32:	2003      	movs	r0, #3
}
 800cb34:	b004      	add	sp, #16
 800cb36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800cb3a:	fa5f f986 	uxtb.w	r9, r6
 800cb3e:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800cb42:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800cb44:	492a      	ldr	r1, [pc, #168]	; (800cbf0 <I2C_RequestMemoryRead+0x100>)
 800cb46:	4643      	mov	r3, r8
 800cb48:	463a      	mov	r2, r7
 800cb4a:	4620      	mov	r0, r4
 800cb4c:	f7ff fec2 	bl	800c8d4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800cb50:	b108      	cbz	r0, 800cb56 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800cb52:	2001      	movs	r0, #1
 800cb54:	e7ee      	b.n	800cb34 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cb56:	6823      	ldr	r3, [r4, #0]
 800cb58:	9003      	str	r0, [sp, #12]
 800cb5a:	695a      	ldr	r2, [r3, #20]
 800cb5c:	9203      	str	r2, [sp, #12]
 800cb5e:	699b      	ldr	r3, [r3, #24]
 800cb60:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cb62:	4642      	mov	r2, r8
 800cb64:	4639      	mov	r1, r7
 800cb66:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cb68:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cb6a:	f7ff ff43 	bl	800c9f4 <I2C_WaitOnTXEFlagUntilTimeout>
 800cb6e:	b140      	cbz	r0, 800cb82 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800cb70:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cb72:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cb74:	bf01      	itttt	eq
 800cb76:	6822      	ldreq	r2, [r4, #0]
 800cb78:	6813      	ldreq	r3, [r2, #0]
 800cb7a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800cb7e:	6013      	streq	r3, [r2, #0]
 800cb80:	e7e7      	b.n	800cb52 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800cb82:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cb86:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800cb88:	d11a      	bne.n	800cbc0 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800cb8a:	b2ed      	uxtb	r5, r5
 800cb8c:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cb8e:	4642      	mov	r2, r8
 800cb90:	4639      	mov	r1, r7
 800cb92:	4620      	mov	r0, r4
 800cb94:	f7ff ff2e 	bl	800c9f4 <I2C_WaitOnTXEFlagUntilTimeout>
 800cb98:	2800      	cmp	r0, #0
 800cb9a:	d1e9      	bne.n	800cb70 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800cb9c:	6822      	ldr	r2, [r4, #0]
 800cb9e:	6813      	ldr	r3, [r2, #0]
 800cba0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800cba4:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800cba6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800cbaa:	4602      	mov	r2, r0
 800cbac:	f8cd 8000 	str.w	r8, [sp]
 800cbb0:	463b      	mov	r3, r7
 800cbb2:	4620      	mov	r0, r4
 800cbb4:	f7ff fe5c 	bl	800c870 <I2C_WaitOnFlagUntilTimeout>
 800cbb8:	6822      	ldr	r2, [r4, #0]
 800cbba:	b160      	cbz	r0, 800cbd6 <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800cbbc:	6813      	ldr	r3, [r2, #0]
 800cbbe:	e7b3      	b.n	800cb28 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800cbc0:	0a2a      	lsrs	r2, r5, #8
 800cbc2:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cbc4:	4639      	mov	r1, r7
 800cbc6:	4642      	mov	r2, r8
 800cbc8:	4620      	mov	r0, r4
 800cbca:	f7ff ff13 	bl	800c9f4 <I2C_WaitOnTXEFlagUntilTimeout>
 800cbce:	2800      	cmp	r0, #0
 800cbd0:	d1ce      	bne.n	800cb70 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800cbd2:	6823      	ldr	r3, [r4, #0]
 800cbd4:	e7d9      	b.n	800cb8a <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800cbd6:	f049 0301 	orr.w	r3, r9, #1
 800cbda:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800cbdc:	4904      	ldr	r1, [pc, #16]	; (800cbf0 <I2C_RequestMemoryRead+0x100>)
 800cbde:	4643      	mov	r3, r8
 800cbe0:	463a      	mov	r2, r7
 800cbe2:	4620      	mov	r0, r4
 800cbe4:	f7ff fe76 	bl	800c8d4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800cbe8:	3800      	subs	r0, #0
 800cbea:	bf18      	it	ne
 800cbec:	2001      	movne	r0, #1
 800cbee:	e7a1      	b.n	800cb34 <I2C_RequestMemoryRead+0x44>
 800cbf0:	00010002 	.word	0x00010002

0800cbf4 <HAL_I2C_Init>:
{
 800cbf4:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800cbf6:	4604      	mov	r4, r0
 800cbf8:	b908      	cbnz	r0, 800cbfe <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800cbfa:	2001      	movs	r0, #1
}
 800cbfc:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800cbfe:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cc02:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800cc06:	b91b      	cbnz	r3, 800cc10 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800cc08:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800cc0c:	f7f6 f99a 	bl	8002f44 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800cc10:	2324      	movs	r3, #36	; 0x24
 800cc12:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800cc16:	6823      	ldr	r3, [r4, #0]
 800cc18:	681a      	ldr	r2, [r3, #0]
 800cc1a:	f022 0201 	bic.w	r2, r2, #1
 800cc1e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800cc20:	681a      	ldr	r2, [r3, #0]
 800cc22:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800cc26:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800cc28:	681a      	ldr	r2, [r3, #0]
 800cc2a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800cc2e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800cc30:	f000 fe6e 	bl	800d910 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800cc34:	4b3f      	ldr	r3, [pc, #252]	; (800cd34 <HAL_I2C_Init+0x140>)
 800cc36:	6865      	ldr	r5, [r4, #4]
 800cc38:	429d      	cmp	r5, r3
 800cc3a:	bf94      	ite	ls
 800cc3c:	4b3e      	ldrls	r3, [pc, #248]	; (800cd38 <HAL_I2C_Init+0x144>)
 800cc3e:	4b3f      	ldrhi	r3, [pc, #252]	; (800cd3c <HAL_I2C_Init+0x148>)
 800cc40:	4298      	cmp	r0, r3
 800cc42:	bf8c      	ite	hi
 800cc44:	2300      	movhi	r3, #0
 800cc46:	2301      	movls	r3, #1
 800cc48:	2b00      	cmp	r3, #0
 800cc4a:	d1d6      	bne.n	800cbfa <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800cc4c:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800cc4e:	4e39      	ldr	r6, [pc, #228]	; (800cd34 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800cc50:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800cc52:	493b      	ldr	r1, [pc, #236]	; (800cd40 <HAL_I2C_Init+0x14c>)
 800cc54:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800cc58:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800cc5c:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800cc5e:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800cc60:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800cc62:	bf88      	it	hi
 800cc64:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 800cc68:	6a13      	ldr	r3, [r2, #32]
 800cc6a:	bf88      	it	hi
 800cc6c:	4371      	mulhi	r1, r6
 800cc6e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800cc72:	bf84      	itt	hi
 800cc74:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800cc78:	fbb1 f1f6 	udivhi	r1, r1, r6
 800cc7c:	3101      	adds	r1, #1
 800cc7e:	4319      	orrs	r1, r3
 800cc80:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800cc82:	69d1      	ldr	r1, [r2, #28]
 800cc84:	1e43      	subs	r3, r0, #1
 800cc86:	482b      	ldr	r0, [pc, #172]	; (800cd34 <HAL_I2C_Init+0x140>)
 800cc88:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800cc8c:	4285      	cmp	r5, r0
 800cc8e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800cc92:	d832      	bhi.n	800ccfa <HAL_I2C_Init+0x106>
 800cc94:	006d      	lsls	r5, r5, #1
 800cc96:	f640 70fc 	movw	r0, #4092	; 0xffc
 800cc9a:	fbb3 f3f5 	udiv	r3, r3, r5
 800cc9e:	3301      	adds	r3, #1
 800cca0:	4203      	tst	r3, r0
 800cca2:	d042      	beq.n	800cd2a <HAL_I2C_Init+0x136>
 800cca4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800cca8:	430b      	orrs	r3, r1
 800ccaa:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800ccac:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800ccb0:	6811      	ldr	r1, [r2, #0]
 800ccb2:	4303      	orrs	r3, r0
 800ccb4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800ccb8:	430b      	orrs	r3, r1
 800ccba:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800ccbc:	6891      	ldr	r1, [r2, #8]
 800ccbe:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800ccc2:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800ccc6:	4303      	orrs	r3, r0
 800ccc8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800cccc:	430b      	orrs	r3, r1
 800ccce:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800ccd0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800ccd4:	68d1      	ldr	r1, [r2, #12]
 800ccd6:	4303      	orrs	r3, r0
 800ccd8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800ccdc:	430b      	orrs	r3, r1
 800ccde:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800cce0:	6813      	ldr	r3, [r2, #0]
 800cce2:	f043 0301 	orr.w	r3, r3, #1
 800cce6:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cce8:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800ccea:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ccec:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800ccee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800ccf2:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800ccf4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800ccf8:	e780      	b.n	800cbfc <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800ccfa:	68a0      	ldr	r0, [r4, #8]
 800ccfc:	b950      	cbnz	r0, 800cd14 <HAL_I2C_Init+0x120>
 800ccfe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800cd02:	fbb3 f3f5 	udiv	r3, r3, r5
 800cd06:	3301      	adds	r3, #1
 800cd08:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800cd0c:	b17b      	cbz	r3, 800cd2e <HAL_I2C_Init+0x13a>
 800cd0e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800cd12:	e7c9      	b.n	800cca8 <HAL_I2C_Init+0xb4>
 800cd14:	2019      	movs	r0, #25
 800cd16:	4345      	muls	r5, r0
 800cd18:	fbb3 f3f5 	udiv	r3, r3, r5
 800cd1c:	3301      	adds	r3, #1
 800cd1e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800cd22:	b123      	cbz	r3, 800cd2e <HAL_I2C_Init+0x13a>
 800cd24:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800cd28:	e7be      	b.n	800cca8 <HAL_I2C_Init+0xb4>
 800cd2a:	2304      	movs	r3, #4
 800cd2c:	e7bc      	b.n	800cca8 <HAL_I2C_Init+0xb4>
 800cd2e:	2301      	movs	r3, #1
 800cd30:	e7ba      	b.n	800cca8 <HAL_I2C_Init+0xb4>
 800cd32:	bf00      	nop
 800cd34:	000186a0 	.word	0x000186a0
 800cd38:	001e847f 	.word	0x001e847f
 800cd3c:	003d08ff 	.word	0x003d08ff
 800cd40:	000f4240 	.word	0x000f4240

0800cd44 <HAL_I2C_Mem_Write>:
{
 800cd44:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800cd48:	4604      	mov	r4, r0
 800cd4a:	4699      	mov	r9, r3
 800cd4c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800cd4e:	460f      	mov	r7, r1
 800cd50:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800cd52:	f7fe fe85 	bl	800ba60 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800cd56:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800cd5a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800cd5c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800cd5e:	d003      	beq.n	800cd68 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800cd60:	2002      	movs	r0, #2
}
 800cd62:	b003      	add	sp, #12
 800cd64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800cd68:	9000      	str	r0, [sp, #0]
 800cd6a:	493c      	ldr	r1, [pc, #240]	; (800ce5c <HAL_I2C_Mem_Write+0x118>)
 800cd6c:	2319      	movs	r3, #25
 800cd6e:	2201      	movs	r2, #1
 800cd70:	4620      	mov	r0, r4
 800cd72:	f7ff fd7d 	bl	800c870 <I2C_WaitOnFlagUntilTimeout>
 800cd76:	2800      	cmp	r0, #0
 800cd78:	d1f2      	bne.n	800cd60 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800cd7a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800cd7e:	2b01      	cmp	r3, #1
 800cd80:	d0ee      	beq.n	800cd60 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cd82:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800cd84:	2301      	movs	r3, #1
 800cd86:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cd8a:	6803      	ldr	r3, [r0, #0]
 800cd8c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800cd8e:	bf5e      	ittt	pl
 800cd90:	6803      	ldrpl	r3, [r0, #0]
 800cd92:	f043 0301 	orrpl.w	r3, r3, #1
 800cd96:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800cd98:	6803      	ldr	r3, [r0, #0]
 800cd9a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800cd9e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800cda0:	2321      	movs	r3, #33	; 0x21
 800cda2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800cda6:	2340      	movs	r3, #64	; 0x40
 800cda8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cdac:	2300      	movs	r3, #0
 800cdae:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800cdb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cdb2:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800cdb4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800cdb8:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800cdba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cdbc:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800cdbe:	4b28      	ldr	r3, [pc, #160]	; (800ce60 <HAL_I2C_Mem_Write+0x11c>)
 800cdc0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800cdc2:	e9cd 6500 	strd	r6, r5, [sp]
 800cdc6:	464b      	mov	r3, r9
 800cdc8:	4642      	mov	r2, r8
 800cdca:	4639      	mov	r1, r7
 800cdcc:	4620      	mov	r0, r4
 800cdce:	f7ff fe37 	bl	800ca40 <I2C_RequestMemoryWrite>
 800cdd2:	2800      	cmp	r0, #0
 800cdd4:	d02a      	beq.n	800ce2c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800cdd6:	2001      	movs	r0, #1
 800cdd8:	e7c3      	b.n	800cd62 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800cdda:	f7ff fe0b 	bl	800c9f4 <I2C_WaitOnTXEFlagUntilTimeout>
 800cdde:	b140      	cbz	r0, 800cdf2 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800cde0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cde2:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cde4:	bf01      	itttt	eq
 800cde6:	6822      	ldreq	r2, [r4, #0]
 800cde8:	6813      	ldreq	r3, [r2, #0]
 800cdea:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800cdee:	6013      	streq	r3, [r2, #0]
 800cdf0:	e7f1      	b.n	800cdd6 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cdf2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cdf4:	6827      	ldr	r7, [r4, #0]
 800cdf6:	461a      	mov	r2, r3
 800cdf8:	f812 1b01 	ldrb.w	r1, [r2], #1
 800cdfc:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800cdfe:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ce00:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800ce02:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800ce04:	3a01      	subs	r2, #1
 800ce06:	b292      	uxth	r2, r2
 800ce08:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ce0a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800ce0c:	1e48      	subs	r0, r1, #1
 800ce0e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ce10:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800ce12:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ce14:	d50a      	bpl.n	800ce2c <HAL_I2C_Mem_Write+0xe8>
 800ce16:	b148      	cbz	r0, 800ce2c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ce18:	785a      	ldrb	r2, [r3, #1]
 800ce1a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800ce1c:	3302      	adds	r3, #2
 800ce1e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ce20:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ce22:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800ce24:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800ce26:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800ce28:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800ce2a:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800ce2c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800ce2e:	462a      	mov	r2, r5
 800ce30:	4631      	mov	r1, r6
 800ce32:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800ce34:	2b00      	cmp	r3, #0
 800ce36:	d1d0      	bne.n	800cdda <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800ce38:	f7ff fdb6 	bl	800c9a8 <I2C_WaitOnBTFFlagUntilTimeout>
 800ce3c:	2800      	cmp	r0, #0
 800ce3e:	d1cf      	bne.n	800cde0 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ce40:	6822      	ldr	r2, [r4, #0]
 800ce42:	6813      	ldr	r3, [r2, #0]
 800ce44:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800ce48:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ce4a:	2320      	movs	r3, #32
 800ce4c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800ce50:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ce54:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800ce58:	e783      	b.n	800cd62 <HAL_I2C_Mem_Write+0x1e>
 800ce5a:	bf00      	nop
 800ce5c:	00100002 	.word	0x00100002
 800ce60:	ffff0000 	.word	0xffff0000

0800ce64 <HAL_I2C_Mem_Read>:
{
 800ce64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce68:	4604      	mov	r4, r0
 800ce6a:	b087      	sub	sp, #28
 800ce6c:	4699      	mov	r9, r3
 800ce6e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800ce70:	460d      	mov	r5, r1
 800ce72:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800ce74:	f7fe fdf4 	bl	800ba60 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ce78:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800ce7c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800ce7e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ce80:	d004      	beq.n	800ce8c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800ce82:	2502      	movs	r5, #2
}
 800ce84:	4628      	mov	r0, r5
 800ce86:	b007      	add	sp, #28
 800ce88:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800ce8c:	9000      	str	r0, [sp, #0]
 800ce8e:	4976      	ldr	r1, [pc, #472]	; (800d068 <HAL_I2C_Mem_Read+0x204>)
 800ce90:	2319      	movs	r3, #25
 800ce92:	2201      	movs	r2, #1
 800ce94:	4620      	mov	r0, r4
 800ce96:	f7ff fceb 	bl	800c870 <I2C_WaitOnFlagUntilTimeout>
 800ce9a:	2800      	cmp	r0, #0
 800ce9c:	d1f1      	bne.n	800ce82 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800ce9e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800cea2:	2b01      	cmp	r3, #1
 800cea4:	d0ed      	beq.n	800ce82 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cea6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800cea8:	2301      	movs	r3, #1
 800ceaa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800ceae:	6803      	ldr	r3, [r0, #0]
 800ceb0:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800ceb2:	bf5e      	ittt	pl
 800ceb4:	6803      	ldrpl	r3, [r0, #0]
 800ceb6:	f043 0301 	orrpl.w	r3, r3, #1
 800ceba:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800cebc:	6803      	ldr	r3, [r0, #0]
 800cebe:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800cec2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800cec4:	2322      	movs	r3, #34	; 0x22
 800cec6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800ceca:	2340      	movs	r3, #64	; 0x40
 800cecc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ced0:	2300      	movs	r3, #0
 800ced2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800ced4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ced6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800ced8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800cedc:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800cede:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cee0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800cee2:	4b62      	ldr	r3, [pc, #392]	; (800d06c <HAL_I2C_Mem_Read+0x208>)
 800cee4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800cee6:	4629      	mov	r1, r5
 800cee8:	e9cd 7600 	strd	r7, r6, [sp]
 800ceec:	464b      	mov	r3, r9
 800ceee:	4642      	mov	r2, r8
 800cef0:	4620      	mov	r0, r4
 800cef2:	f7ff fdfd 	bl	800caf0 <I2C_RequestMemoryRead>
 800cef6:	4605      	mov	r5, r0
 800cef8:	b108      	cbz	r0, 800cefe <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800cefa:	2501      	movs	r5, #1
 800cefc:	e7c2      	b.n	800ce84 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800cefe:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cf00:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800cf02:	b9b2      	cbnz	r2, 800cf32 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cf04:	9002      	str	r0, [sp, #8]
 800cf06:	695a      	ldr	r2, [r3, #20]
 800cf08:	9202      	str	r2, [sp, #8]
 800cf0a:	699a      	ldr	r2, [r3, #24]
 800cf0c:	9202      	str	r2, [sp, #8]
 800cf0e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cf10:	681a      	ldr	r2, [r3, #0]
 800cf12:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800cf16:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cf18:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800d070 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800cf1c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800cf1e:	2b00      	cmp	r3, #0
 800cf20:	d12c      	bne.n	800cf7c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800cf22:	2220      	movs	r2, #32
 800cf24:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800cf28:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800cf2c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800cf30:	e7a8      	b.n	800ce84 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800cf32:	2a01      	cmp	r2, #1
 800cf34:	d10a      	bne.n	800cf4c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cf36:	681a      	ldr	r2, [r3, #0]
 800cf38:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800cf3c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cf3e:	9003      	str	r0, [sp, #12]
 800cf40:	695a      	ldr	r2, [r3, #20]
 800cf42:	9203      	str	r2, [sp, #12]
 800cf44:	699a      	ldr	r2, [r3, #24]
 800cf46:	9203      	str	r2, [sp, #12]
 800cf48:	9a03      	ldr	r2, [sp, #12]
 800cf4a:	e7e1      	b.n	800cf10 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800cf4c:	2a02      	cmp	r2, #2
 800cf4e:	d10e      	bne.n	800cf6e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cf50:	681a      	ldr	r2, [r3, #0]
 800cf52:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800cf56:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800cf58:	681a      	ldr	r2, [r3, #0]
 800cf5a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800cf5e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cf60:	9004      	str	r0, [sp, #16]
 800cf62:	695a      	ldr	r2, [r3, #20]
 800cf64:	9204      	str	r2, [sp, #16]
 800cf66:	699b      	ldr	r3, [r3, #24]
 800cf68:	9304      	str	r3, [sp, #16]
 800cf6a:	9b04      	ldr	r3, [sp, #16]
 800cf6c:	e7d4      	b.n	800cf18 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cf6e:	9005      	str	r0, [sp, #20]
 800cf70:	695a      	ldr	r2, [r3, #20]
 800cf72:	9205      	str	r2, [sp, #20]
 800cf74:	699b      	ldr	r3, [r3, #24]
 800cf76:	9305      	str	r3, [sp, #20]
 800cf78:	9b05      	ldr	r3, [sp, #20]
 800cf7a:	e7cd      	b.n	800cf18 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800cf7c:	2b03      	cmp	r3, #3
 800cf7e:	d856      	bhi.n	800d02e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800cf80:	2b01      	cmp	r3, #1
 800cf82:	d115      	bne.n	800cfb0 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800cf84:	4632      	mov	r2, r6
 800cf86:	4639      	mov	r1, r7
 800cf88:	4620      	mov	r0, r4
 800cf8a:	f7ff fcde 	bl	800c94a <I2C_WaitOnRXNEFlagUntilTimeout>
 800cf8e:	2800      	cmp	r0, #0
 800cf90:	d1b3      	bne.n	800cefa <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cf92:	6823      	ldr	r3, [r4, #0]
 800cf94:	691a      	ldr	r2, [r3, #16]
 800cf96:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cf98:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800cf9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cf9c:	3301      	adds	r3, #1
 800cf9e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800cfa0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800cfa2:	3b01      	subs	r3, #1
 800cfa4:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800cfa6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cfa8:	3b01      	subs	r3, #1
 800cfaa:	b29b      	uxth	r3, r3
 800cfac:	8563      	strh	r3, [r4, #42]	; 0x2a
 800cfae:	e7b5      	b.n	800cf1c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800cfb0:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cfb2:	9600      	str	r6, [sp, #0]
 800cfb4:	463b      	mov	r3, r7
 800cfb6:	f04f 0200 	mov.w	r2, #0
 800cfba:	4641      	mov	r1, r8
 800cfbc:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800cfbe:	d119      	bne.n	800cff4 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cfc0:	f7ff fc56 	bl	800c870 <I2C_WaitOnFlagUntilTimeout>
 800cfc4:	2800      	cmp	r0, #0
 800cfc6:	d198      	bne.n	800cefa <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cfc8:	6823      	ldr	r3, [r4, #0]
 800cfca:	681a      	ldr	r2, [r3, #0]
 800cfcc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800cfd0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cfd2:	691a      	ldr	r2, [r3, #16]
 800cfd4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cfd6:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800cfd8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cfda:	1c53      	adds	r3, r2, #1
 800cfdc:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800cfde:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800cfe0:	3b01      	subs	r3, #1
 800cfe2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800cfe4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cfe6:	3b01      	subs	r3, #1
 800cfe8:	b29b      	uxth	r3, r3
 800cfea:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cfec:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cfee:	691b      	ldr	r3, [r3, #16]
 800cff0:	7053      	strb	r3, [r2, #1]
 800cff2:	e7d2      	b.n	800cf9a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cff4:	f7ff fc3c 	bl	800c870 <I2C_WaitOnFlagUntilTimeout>
 800cff8:	2800      	cmp	r0, #0
 800cffa:	f47f af7e 	bne.w	800cefa <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cffe:	6823      	ldr	r3, [r4, #0]
 800d000:	681a      	ldr	r2, [r3, #0]
 800d002:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d006:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d008:	691a      	ldr	r2, [r3, #16]
 800d00a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d00c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800d00e:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800d010:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800d012:	3301      	adds	r3, #1
 800d014:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800d016:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800d018:	3b01      	subs	r3, #1
 800d01a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800d01c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d01e:	3b01      	subs	r3, #1
 800d020:	b29b      	uxth	r3, r3
 800d022:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800d024:	4602      	mov	r2, r0
 800d026:	463b      	mov	r3, r7
 800d028:	4641      	mov	r1, r8
 800d02a:	4620      	mov	r0, r4
 800d02c:	e7c8      	b.n	800cfc0 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800d02e:	4632      	mov	r2, r6
 800d030:	4639      	mov	r1, r7
 800d032:	4620      	mov	r0, r4
 800d034:	f7ff fc89 	bl	800c94a <I2C_WaitOnRXNEFlagUntilTimeout>
 800d038:	2800      	cmp	r0, #0
 800d03a:	f47f af5e 	bne.w	800cefa <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d03e:	6823      	ldr	r3, [r4, #0]
 800d040:	691a      	ldr	r2, [r3, #16]
 800d042:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d044:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800d046:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d048:	1c53      	adds	r3, r2, #1
 800d04a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800d04c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800d04e:	3b01      	subs	r3, #1
 800d050:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800d052:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d054:	3b01      	subs	r3, #1
 800d056:	b29b      	uxth	r3, r3
 800d058:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800d05a:	6823      	ldr	r3, [r4, #0]
 800d05c:	6959      	ldr	r1, [r3, #20]
 800d05e:	0749      	lsls	r1, r1, #29
 800d060:	f57f af5c 	bpl.w	800cf1c <HAL_I2C_Mem_Read+0xb8>
 800d064:	e7c3      	b.n	800cfee <HAL_I2C_Mem_Read+0x18a>
 800d066:	bf00      	nop
 800d068:	00100002 	.word	0x00100002
 800d06c:	ffff0000 	.word	0xffff0000
 800d070:	00010004 	.word	0x00010004

0800d074 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 800d074:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d076:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d07a:	2b20      	cmp	r3, #32
 800d07c:	b2dc      	uxtb	r4, r3
 800d07e:	d116      	bne.n	800d0ae <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d080:	2324      	movs	r3, #36	; 0x24
 800d082:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800d086:	6803      	ldr	r3, [r0, #0]
 800d088:	681a      	ldr	r2, [r3, #0]
 800d08a:	f022 0201 	bic.w	r2, r2, #1
 800d08e:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800d090:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800d092:	f022 0210 	bic.w	r2, r2, #16
 800d096:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 800d098:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800d09a:	4311      	orrs	r1, r2
 800d09c:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 800d09e:	681a      	ldr	r2, [r3, #0]
 800d0a0:	f042 0201 	orr.w	r2, r2, #1
 800d0a4:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800d0a6:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 800d0aa:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800d0ac:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800d0ae:	2002      	movs	r0, #2
 800d0b0:	e7fc      	b.n	800d0ac <HAL_I2CEx_ConfigAnalogFilter+0x38>

0800d0b2 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800d0b2:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d0b4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d0b8:	2b20      	cmp	r3, #32
 800d0ba:	b2dc      	uxtb	r4, r3
 800d0bc:	d116      	bne.n	800d0ec <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800d0be:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d0c0:	2324      	movs	r3, #36	; 0x24
 800d0c2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d0c6:	6813      	ldr	r3, [r2, #0]
 800d0c8:	f023 0301 	bic.w	r3, r3, #1
 800d0cc:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 800d0ce:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 800d0d0:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 800d0d4:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800d0d6:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 800d0d8:	b29b      	uxth	r3, r3
 800d0da:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 800d0dc:	6813      	ldr	r3, [r2, #0]
 800d0de:	f043 0301 	orr.w	r3, r3, #1
 800d0e2:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800d0e4:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 800d0e8:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800d0ea:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 800d0ec:	2002      	movs	r0, #2
 800d0ee:	e7fc      	b.n	800d0ea <HAL_I2CEx_ConfigDigitalFilter+0x38>

0800d0f0 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d0f0:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d0f2:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d0f6:	01d2      	lsls	r2, r2, #7
 800d0f8:	3284      	adds	r2, #132	; 0x84
 800d0fa:	1883      	adds	r3, r0, r2
{
 800d0fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d100:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d102:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d104:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800d106:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d10a:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800d10e:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d110:	68c5      	ldr	r5, [r0, #12]
 800d112:	f10c 0701 	add.w	r7, ip, #1
 800d116:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d11a:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d11e:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d120:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d122:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800d126:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d128:	68c5      	ldr	r5, [r0, #12]
 800d12a:	68ce      	ldr	r6, [r1, #12]
 800d12c:	f3c5 050a 	ubfx	r5, r5, #0, #11
 800d130:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800d132:	689d      	ldr	r5, [r3, #8]
 800d134:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800d138:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d13a:	68c7      	ldr	r7, [r0, #12]
 800d13c:	688d      	ldr	r5, [r1, #8]
 800d13e:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800d142:	3501      	adds	r5, #1
 800d144:	443d      	add	r5, r7
 800d146:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800d14a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d14c:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d14e:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d150:	f025 0507 	bic.w	r5, r5, #7
 800d154:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800d156:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d15a:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800d15c:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800d15e:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800d162:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800d166:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800d16a:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800d16e:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800d172:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800d176:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800d17a:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800d17c:	695d      	ldr	r5, [r3, #20]
 800d17e:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800d182:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800d184:	694d      	ldr	r5, [r1, #20]
 800d186:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800d188:	69dd      	ldr	r5, [r3, #28]
 800d18a:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800d18e:	f025 0507 	bic.w	r5, r5, #7
 800d192:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800d194:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800d198:	433d      	orrs	r5, r7
 800d19a:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d19c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d19e:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d1a0:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d1a4:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d1a6:	b31e      	cbz	r6, 800d1f0 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800d1a8:	2e01      	cmp	r6, #1
 800d1aa:	d023      	beq.n	800d1f4 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800d1ac:	1eb5      	subs	r5, r6, #2
 800d1ae:	2d02      	cmp	r5, #2
 800d1b0:	d922      	bls.n	800d1f8 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800d1b2:	2e07      	cmp	r6, #7
 800d1b4:	bf0c      	ite	eq
 800d1b6:	2502      	moveq	r5, #2
 800d1b8:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800d1ba:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800d1bc:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 800d1c0:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d1c2:	eba4 040c 	sub.w	r4, r4, ip
 800d1c6:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d1c8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d1ca:	436c      	muls	r4, r5
 800d1cc:	436e      	muls	r6, r5
 800d1ce:	3403      	adds	r4, #3
 800d1d0:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800d1d4:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800d1d6:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800d1d8:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 800d1dc:	f024 0407 	bic.w	r4, r4, #7
 800d1e0:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d1e2:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800d1e4:	5883      	ldr	r3, [r0, r2]
 800d1e6:	f043 0301 	orr.w	r3, r3, #1
 800d1ea:	5083      	str	r3, [r0, r2]
}
 800d1ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800d1f0:	2504      	movs	r5, #4
 800d1f2:	e7e2      	b.n	800d1ba <LTDC_SetConfig+0xca>
    tmp = 3U;
 800d1f4:	2503      	movs	r5, #3
 800d1f6:	e7e0      	b.n	800d1ba <LTDC_SetConfig+0xca>
    tmp = 2U;
 800d1f8:	2502      	movs	r5, #2
 800d1fa:	e7de      	b.n	800d1ba <LTDC_SetConfig+0xca>

0800d1fc <HAL_LTDC_Init>:
{
 800d1fc:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800d1fe:	4604      	mov	r4, r0
 800d200:	2800      	cmp	r0, #0
 800d202:	d063      	beq.n	800d2cc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800d204:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800d208:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d20c:	b91b      	cbnz	r3, 800d216 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800d20e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800d212:	f7f5 fef3 	bl	8002ffc <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d216:	2302      	movs	r3, #2
 800d218:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d21c:	6823      	ldr	r3, [r4, #0]
 800d21e:	699a      	ldr	r2, [r3, #24]
 800d220:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800d224:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d226:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800d22a:	4302      	orrs	r2, r0
 800d22c:	68e0      	ldr	r0, [r4, #12]
 800d22e:	6999      	ldr	r1, [r3, #24]
 800d230:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d232:	6920      	ldr	r0, [r4, #16]
 800d234:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d236:	430a      	orrs	r2, r1
 800d238:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d23a:	689a      	ldr	r2, [r3, #8]
 800d23c:	4924      	ldr	r1, [pc, #144]	; (800d2d0 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800d23e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d240:	400a      	ands	r2, r1
 800d242:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800d244:	689a      	ldr	r2, [r3, #8]
 800d246:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d24a:	69a0      	ldr	r0, [r4, #24]
 800d24c:	4302      	orrs	r2, r0
 800d24e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d250:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800d252:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d254:	400a      	ands	r2, r1
 800d256:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800d258:	68da      	ldr	r2, [r3, #12]
 800d25a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d25e:	6a20      	ldr	r0, [r4, #32]
 800d260:	4302      	orrs	r2, r0
 800d262:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d264:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800d266:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d268:	400a      	ands	r2, r1
 800d26a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800d26c:	691a      	ldr	r2, [r3, #16]
 800d26e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d272:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d274:	4302      	orrs	r2, r0
 800d276:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d278:	695a      	ldr	r2, [r3, #20]
 800d27a:	4011      	ands	r1, r2
 800d27c:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800d27e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800d280:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800d282:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800d286:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d288:	430a      	orrs	r2, r1
 800d28a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d28c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800d28e:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800d292:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d296:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800d29a:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800d29c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800d29e:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800d2a2:	430a      	orrs	r2, r1
 800d2a4:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800d2a8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d2ac:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800d2ae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d2b0:	f042 0206 	orr.w	r2, r2, #6
 800d2b4:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800d2b6:	699a      	ldr	r2, [r3, #24]
 800d2b8:	f042 0201 	orr.w	r2, r2, #1
 800d2bc:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d2be:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800d2c0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d2c2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800d2c6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800d2ca:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800d2cc:	2001      	movs	r0, #1
 800d2ce:	e7fc      	b.n	800d2ca <HAL_LTDC_Init+0xce>
 800d2d0:	f000f800 	.word	0xf000f800

0800d2d4 <HAL_LTDC_ErrorCallback>:
 800d2d4:	4770      	bx	lr

0800d2d6 <HAL_LTDC_ReloadEventCallback>:
 800d2d6:	4770      	bx	lr

0800d2d8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d2d8:	6803      	ldr	r3, [r0, #0]
{
 800d2da:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d2dc:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800d2de:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d2e0:	0772      	lsls	r2, r6, #29
{
 800d2e2:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d2e4:	d514      	bpl.n	800d310 <HAL_LTDC_IRQHandler+0x38>
 800d2e6:	0769      	lsls	r1, r5, #29
 800d2e8:	d512      	bpl.n	800d310 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800d2ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d2ec:	f022 0204 	bic.w	r2, r2, #4
 800d2f0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800d2f2:	2204      	movs	r2, #4
 800d2f4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800d2f6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800d2fa:	f043 0301 	orr.w	r3, r3, #1
 800d2fe:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800d302:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d304:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d308:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d30c:	f7ff ffe2 	bl	800d2d4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800d310:	07b2      	lsls	r2, r6, #30
 800d312:	d516      	bpl.n	800d342 <HAL_LTDC_IRQHandler+0x6a>
 800d314:	07ab      	lsls	r3, r5, #30
 800d316:	d514      	bpl.n	800d342 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800d318:	6823      	ldr	r3, [r4, #0]
 800d31a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d31c:	f022 0202 	bic.w	r2, r2, #2
 800d320:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800d322:	2202      	movs	r2, #2
 800d324:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800d326:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d32a:	4313      	orrs	r3, r2
 800d32c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d330:	2304      	movs	r3, #4
 800d332:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d336:	2300      	movs	r3, #0
 800d338:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d33c:	4620      	mov	r0, r4
 800d33e:	f7ff ffc9 	bl	800d2d4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800d342:	07f0      	lsls	r0, r6, #31
 800d344:	d510      	bpl.n	800d368 <HAL_LTDC_IRQHandler+0x90>
 800d346:	07e9      	lsls	r1, r5, #31
 800d348:	d50e      	bpl.n	800d368 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d34a:	6823      	ldr	r3, [r4, #0]
 800d34c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d34e:	f022 0201 	bic.w	r2, r2, #1
 800d352:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800d354:	2201      	movs	r2, #1
 800d356:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d358:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d35a:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d35e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800d362:	4620      	mov	r0, r4
 800d364:	f7f4 fc0e 	bl	8001b84 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800d368:	0732      	lsls	r2, r6, #28
 800d36a:	d511      	bpl.n	800d390 <HAL_LTDC_IRQHandler+0xb8>
 800d36c:	072b      	lsls	r3, r5, #28
 800d36e:	d50f      	bpl.n	800d390 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d370:	6823      	ldr	r3, [r4, #0]
 800d372:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d374:	f022 0208 	bic.w	r2, r2, #8
 800d378:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d37a:	2208      	movs	r2, #8
 800d37c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800d37e:	2301      	movs	r3, #1
 800d380:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d384:	2300      	movs	r3, #0
 800d386:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800d38a:	4620      	mov	r0, r4
 800d38c:	f7ff ffa3 	bl	800d2d6 <HAL_LTDC_ReloadEventCallback>
}
 800d390:	bd70      	pop	{r4, r5, r6, pc}

0800d392 <HAL_LTDC_ConfigLayer>:
{
 800d392:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800d396:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d39a:	2b01      	cmp	r3, #1
{
 800d39c:	4606      	mov	r6, r0
 800d39e:	460f      	mov	r7, r1
 800d3a0:	4694      	mov	ip, r2
 800d3a2:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800d3a6:	d01f      	beq.n	800d3e8 <HAL_LTDC_ConfigLayer+0x56>
 800d3a8:	f04f 0801 	mov.w	r8, #1
 800d3ac:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d3b0:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d3b4:	2434      	movs	r4, #52	; 0x34
 800d3b6:	460d      	mov	r5, r1
 800d3b8:	fb04 6402 	mla	r4, r4, r2, r6
 800d3bc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d3be:	3438      	adds	r4, #56	; 0x38
 800d3c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d3c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d3c4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d3c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d3c8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d3ca:	682b      	ldr	r3, [r5, #0]
 800d3cc:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800d3ce:	4630      	mov	r0, r6
 800d3d0:	4662      	mov	r2, ip
 800d3d2:	4639      	mov	r1, r7
 800d3d4:	f7ff fe8c 	bl	800d0f0 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d3d8:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800d3da:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d3dc:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800d3e0:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d3e4:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800d3e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d3ec <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800d3ec:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d3f0:	2b01      	cmp	r3, #1
 800d3f2:	f04f 0302 	mov.w	r3, #2
 800d3f6:	d012      	beq.n	800d41e <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d3f8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d3fc:	6803      	ldr	r3, [r0, #0]
 800d3fe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d400:	f022 0201 	bic.w	r2, r2, #1
 800d404:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d406:	4a07      	ldr	r2, [pc, #28]	; (800d424 <HAL_LTDC_ProgramLineEvent+0x38>)
 800d408:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d40a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d40c:	f042 0201 	orr.w	r2, r2, #1
 800d410:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800d412:	2301      	movs	r3, #1
 800d414:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d418:	2300      	movs	r3, #0
 800d41a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 800d41e:	4618      	mov	r0, r3
}
 800d420:	4770      	bx	lr
 800d422:	bf00      	nop
 800d424:	40016800 	.word	0x40016800

0800d428 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800d428:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800d42c:	4604      	mov	r4, r0
 800d42e:	b340      	cbz	r0, 800d482 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800d430:	6803      	ldr	r3, [r0, #0]
 800d432:	07dd      	lsls	r5, r3, #31
 800d434:	d410      	bmi.n	800d458 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800d436:	6823      	ldr	r3, [r4, #0]
 800d438:	0798      	lsls	r0, r3, #30
 800d43a:	d45e      	bmi.n	800d4fa <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800d43c:	6823      	ldr	r3, [r4, #0]
 800d43e:	071a      	lsls	r2, r3, #28
 800d440:	f100 80a0 	bmi.w	800d584 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800d444:	6823      	ldr	r3, [r4, #0]
 800d446:	075b      	lsls	r3, r3, #29
 800d448:	f100 80c0 	bmi.w	800d5cc <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800d44c:	69a0      	ldr	r0, [r4, #24]
 800d44e:	2800      	cmp	r0, #0
 800d450:	f040 8128 	bne.w	800d6a4 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800d454:	2000      	movs	r0, #0
 800d456:	e02b      	b.n	800d4b0 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800d458:	4b8f      	ldr	r3, [pc, #572]	; (800d698 <HAL_RCC_OscConfig+0x270>)
 800d45a:	689a      	ldr	r2, [r3, #8]
 800d45c:	f002 020c 	and.w	r2, r2, #12
 800d460:	2a04      	cmp	r2, #4
 800d462:	d007      	beq.n	800d474 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800d464:	689a      	ldr	r2, [r3, #8]
 800d466:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800d46a:	2a08      	cmp	r2, #8
 800d46c:	d10b      	bne.n	800d486 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800d46e:	685a      	ldr	r2, [r3, #4]
 800d470:	0251      	lsls	r1, r2, #9
 800d472:	d508      	bpl.n	800d486 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800d474:	4b88      	ldr	r3, [pc, #544]	; (800d698 <HAL_RCC_OscConfig+0x270>)
 800d476:	681b      	ldr	r3, [r3, #0]
 800d478:	039a      	lsls	r2, r3, #14
 800d47a:	d5dc      	bpl.n	800d436 <HAL_RCC_OscConfig+0xe>
 800d47c:	6863      	ldr	r3, [r4, #4]
 800d47e:	2b00      	cmp	r3, #0
 800d480:	d1d9      	bne.n	800d436 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800d482:	2001      	movs	r0, #1
 800d484:	e014      	b.n	800d4b0 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d486:	6862      	ldr	r2, [r4, #4]
 800d488:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800d48c:	d113      	bne.n	800d4b6 <HAL_RCC_OscConfig+0x8e>
 800d48e:	681a      	ldr	r2, [r3, #0]
 800d490:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800d494:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800d496:	f7fe fae3 	bl	800ba60 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800d49a:	4e7f      	ldr	r6, [pc, #508]	; (800d698 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800d49c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800d49e:	6833      	ldr	r3, [r6, #0]
 800d4a0:	039b      	lsls	r3, r3, #14
 800d4a2:	d4c8      	bmi.n	800d436 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800d4a4:	f7fe fadc 	bl	800ba60 <HAL_GetTick>
 800d4a8:	1b40      	subs	r0, r0, r5
 800d4aa:	2864      	cmp	r0, #100	; 0x64
 800d4ac:	d9f7      	bls.n	800d49e <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800d4ae:	2003      	movs	r0, #3
}
 800d4b0:	b002      	add	sp, #8
 800d4b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d4b6:	4d78      	ldr	r5, [pc, #480]	; (800d698 <HAL_RCC_OscConfig+0x270>)
 800d4b8:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800d4bc:	682b      	ldr	r3, [r5, #0]
 800d4be:	d107      	bne.n	800d4d0 <HAL_RCC_OscConfig+0xa8>
 800d4c0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800d4c4:	602b      	str	r3, [r5, #0]
 800d4c6:	682b      	ldr	r3, [r5, #0]
 800d4c8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800d4cc:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800d4ce:	e7e2      	b.n	800d496 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d4d0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800d4d4:	602b      	str	r3, [r5, #0]
 800d4d6:	682b      	ldr	r3, [r5, #0]
 800d4d8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800d4dc:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800d4de:	2a00      	cmp	r2, #0
 800d4e0:	d1d9      	bne.n	800d496 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800d4e2:	f7fe fabd 	bl	800ba60 <HAL_GetTick>
 800d4e6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800d4e8:	682b      	ldr	r3, [r5, #0]
 800d4ea:	039f      	lsls	r7, r3, #14
 800d4ec:	d5a3      	bpl.n	800d436 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800d4ee:	f7fe fab7 	bl	800ba60 <HAL_GetTick>
 800d4f2:	1b80      	subs	r0, r0, r6
 800d4f4:	2864      	cmp	r0, #100	; 0x64
 800d4f6:	d9f7      	bls.n	800d4e8 <HAL_RCC_OscConfig+0xc0>
 800d4f8:	e7d9      	b.n	800d4ae <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800d4fa:	4b67      	ldr	r3, [pc, #412]	; (800d698 <HAL_RCC_OscConfig+0x270>)
 800d4fc:	689a      	ldr	r2, [r3, #8]
 800d4fe:	f012 0f0c 	tst.w	r2, #12
 800d502:	d007      	beq.n	800d514 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800d504:	689a      	ldr	r2, [r3, #8]
 800d506:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800d50a:	2a08      	cmp	r2, #8
 800d50c:	d111      	bne.n	800d532 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800d50e:	685b      	ldr	r3, [r3, #4]
 800d510:	025e      	lsls	r6, r3, #9
 800d512:	d40e      	bmi.n	800d532 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800d514:	4a60      	ldr	r2, [pc, #384]	; (800d698 <HAL_RCC_OscConfig+0x270>)
 800d516:	6813      	ldr	r3, [r2, #0]
 800d518:	079d      	lsls	r5, r3, #30
 800d51a:	d502      	bpl.n	800d522 <HAL_RCC_OscConfig+0xfa>
 800d51c:	68e3      	ldr	r3, [r4, #12]
 800d51e:	2b01      	cmp	r3, #1
 800d520:	d1af      	bne.n	800d482 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800d522:	6813      	ldr	r3, [r2, #0]
 800d524:	6921      	ldr	r1, [r4, #16]
 800d526:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800d52a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800d52e:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800d530:	e784      	b.n	800d43c <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800d532:	68e2      	ldr	r2, [r4, #12]
 800d534:	4b59      	ldr	r3, [pc, #356]	; (800d69c <HAL_RCC_OscConfig+0x274>)
 800d536:	b1b2      	cbz	r2, 800d566 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800d538:	2201      	movs	r2, #1
 800d53a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800d53c:	f7fe fa90 	bl	800ba60 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d540:	4d55      	ldr	r5, [pc, #340]	; (800d698 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800d542:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d544:	682b      	ldr	r3, [r5, #0]
 800d546:	0798      	lsls	r0, r3, #30
 800d548:	d507      	bpl.n	800d55a <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800d54a:	682b      	ldr	r3, [r5, #0]
 800d54c:	6922      	ldr	r2, [r4, #16]
 800d54e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800d552:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800d556:	602b      	str	r3, [r5, #0]
 800d558:	e770      	b.n	800d43c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800d55a:	f7fe fa81 	bl	800ba60 <HAL_GetTick>
 800d55e:	1b80      	subs	r0, r0, r6
 800d560:	2802      	cmp	r0, #2
 800d562:	d9ef      	bls.n	800d544 <HAL_RCC_OscConfig+0x11c>
 800d564:	e7a3      	b.n	800d4ae <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800d566:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800d568:	f7fe fa7a 	bl	800ba60 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800d56c:	4e4a      	ldr	r6, [pc, #296]	; (800d698 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800d56e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800d570:	6833      	ldr	r3, [r6, #0]
 800d572:	0799      	lsls	r1, r3, #30
 800d574:	f57f af62 	bpl.w	800d43c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800d578:	f7fe fa72 	bl	800ba60 <HAL_GetTick>
 800d57c:	1b40      	subs	r0, r0, r5
 800d57e:	2802      	cmp	r0, #2
 800d580:	d9f6      	bls.n	800d570 <HAL_RCC_OscConfig+0x148>
 800d582:	e794      	b.n	800d4ae <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800d584:	6962      	ldr	r2, [r4, #20]
 800d586:	4b45      	ldr	r3, [pc, #276]	; (800d69c <HAL_RCC_OscConfig+0x274>)
 800d588:	b182      	cbz	r2, 800d5ac <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800d58a:	2201      	movs	r2, #1
 800d58c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800d590:	f7fe fa66 	bl	800ba60 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800d594:	4e40      	ldr	r6, [pc, #256]	; (800d698 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800d596:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800d598:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800d59a:	079f      	lsls	r7, r3, #30
 800d59c:	f53f af52 	bmi.w	800d444 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800d5a0:	f7fe fa5e 	bl	800ba60 <HAL_GetTick>
 800d5a4:	1b40      	subs	r0, r0, r5
 800d5a6:	2802      	cmp	r0, #2
 800d5a8:	d9f6      	bls.n	800d598 <HAL_RCC_OscConfig+0x170>
 800d5aa:	e780      	b.n	800d4ae <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800d5ac:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800d5b0:	f7fe fa56 	bl	800ba60 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800d5b4:	4e38      	ldr	r6, [pc, #224]	; (800d698 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800d5b6:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800d5b8:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800d5ba:	0798      	lsls	r0, r3, #30
 800d5bc:	f57f af42 	bpl.w	800d444 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800d5c0:	f7fe fa4e 	bl	800ba60 <HAL_GetTick>
 800d5c4:	1b40      	subs	r0, r0, r5
 800d5c6:	2802      	cmp	r0, #2
 800d5c8:	d9f6      	bls.n	800d5b8 <HAL_RCC_OscConfig+0x190>
 800d5ca:	e770      	b.n	800d4ae <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800d5cc:	4b32      	ldr	r3, [pc, #200]	; (800d698 <HAL_RCC_OscConfig+0x270>)
 800d5ce:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800d5d0:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800d5d4:	d128      	bne.n	800d628 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800d5d6:	9201      	str	r2, [sp, #4]
 800d5d8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800d5da:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800d5de:	641a      	str	r2, [r3, #64]	; 0x40
 800d5e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d5e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800d5e6:	9301      	str	r3, [sp, #4]
 800d5e8:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800d5ea:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800d5ec:	4d2c      	ldr	r5, [pc, #176]	; (800d6a0 <HAL_RCC_OscConfig+0x278>)
 800d5ee:	682b      	ldr	r3, [r5, #0]
 800d5f0:	05d9      	lsls	r1, r3, #23
 800d5f2:	d51b      	bpl.n	800d62c <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800d5f4:	68a3      	ldr	r3, [r4, #8]
 800d5f6:	4d28      	ldr	r5, [pc, #160]	; (800d698 <HAL_RCC_OscConfig+0x270>)
 800d5f8:	2b01      	cmp	r3, #1
 800d5fa:	d127      	bne.n	800d64c <HAL_RCC_OscConfig+0x224>
 800d5fc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d5fe:	f043 0301 	orr.w	r3, r3, #1
 800d602:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800d604:	f7fe fa2c 	bl	800ba60 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800d608:	4e23      	ldr	r6, [pc, #140]	; (800d698 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800d60a:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d60c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800d610:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800d612:	079b      	lsls	r3, r3, #30
 800d614:	d539      	bpl.n	800d68a <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800d616:	2f00      	cmp	r7, #0
 800d618:	f43f af18 	beq.w	800d44c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800d61c:	4a1e      	ldr	r2, [pc, #120]	; (800d698 <HAL_RCC_OscConfig+0x270>)
 800d61e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800d620:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800d624:	6413      	str	r3, [r2, #64]	; 0x40
 800d626:	e711      	b.n	800d44c <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800d628:	2700      	movs	r7, #0
 800d62a:	e7df      	b.n	800d5ec <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800d62c:	682b      	ldr	r3, [r5, #0]
 800d62e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800d632:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800d634:	f7fe fa14 	bl	800ba60 <HAL_GetTick>
 800d638:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800d63a:	682b      	ldr	r3, [r5, #0]
 800d63c:	05da      	lsls	r2, r3, #23
 800d63e:	d4d9      	bmi.n	800d5f4 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800d640:	f7fe fa0e 	bl	800ba60 <HAL_GetTick>
 800d644:	1b80      	subs	r0, r0, r6
 800d646:	2802      	cmp	r0, #2
 800d648:	d9f7      	bls.n	800d63a <HAL_RCC_OscConfig+0x212>
 800d64a:	e730      	b.n	800d4ae <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800d64c:	2b05      	cmp	r3, #5
 800d64e:	d104      	bne.n	800d65a <HAL_RCC_OscConfig+0x232>
 800d650:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d652:	f043 0304 	orr.w	r3, r3, #4
 800d656:	672b      	str	r3, [r5, #112]	; 0x70
 800d658:	e7d0      	b.n	800d5fc <HAL_RCC_OscConfig+0x1d4>
 800d65a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800d65c:	f022 0201 	bic.w	r2, r2, #1
 800d660:	672a      	str	r2, [r5, #112]	; 0x70
 800d662:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800d664:	f022 0204 	bic.w	r2, r2, #4
 800d668:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800d66a:	2b00      	cmp	r3, #0
 800d66c:	d1ca      	bne.n	800d604 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 800d66e:	f7fe f9f7 	bl	800ba60 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d672:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800d676:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800d678:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d67a:	0798      	lsls	r0, r3, #30
 800d67c:	d5cb      	bpl.n	800d616 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d67e:	f7fe f9ef 	bl	800ba60 <HAL_GetTick>
 800d682:	1b80      	subs	r0, r0, r6
 800d684:	4540      	cmp	r0, r8
 800d686:	d9f7      	bls.n	800d678 <HAL_RCC_OscConfig+0x250>
 800d688:	e711      	b.n	800d4ae <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d68a:	f7fe f9e9 	bl	800ba60 <HAL_GetTick>
 800d68e:	1b40      	subs	r0, r0, r5
 800d690:	4540      	cmp	r0, r8
 800d692:	d9bd      	bls.n	800d610 <HAL_RCC_OscConfig+0x1e8>
 800d694:	e70b      	b.n	800d4ae <HAL_RCC_OscConfig+0x86>
 800d696:	bf00      	nop
 800d698:	40023800 	.word	0x40023800
 800d69c:	42470000 	.word	0x42470000
 800d6a0:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800d6a4:	4d33      	ldr	r5, [pc, #204]	; (800d774 <HAL_RCC_OscConfig+0x34c>)
 800d6a6:	68ab      	ldr	r3, [r5, #8]
 800d6a8:	f003 030c 	and.w	r3, r3, #12
 800d6ac:	2b08      	cmp	r3, #8
 800d6ae:	d03d      	beq.n	800d72c <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800d6b0:	4b31      	ldr	r3, [pc, #196]	; (800d778 <HAL_RCC_OscConfig+0x350>)
 800d6b2:	2200      	movs	r2, #0
 800d6b4:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800d6b6:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800d6b8:	d12b      	bne.n	800d712 <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 800d6ba:	f7fe f9d1 	bl	800ba60 <HAL_GetTick>
 800d6be:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800d6c0:	682b      	ldr	r3, [r5, #0]
 800d6c2:	0199      	lsls	r1, r3, #6
 800d6c4:	d41f      	bmi.n	800d706 <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800d6c6:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800d6ca:	4313      	orrs	r3, r2
 800d6cc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d6ce:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800d6d2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d6d4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d6d8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d6da:	0852      	lsrs	r2, r2, #1
 800d6dc:	3a01      	subs	r2, #1
 800d6de:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800d6e2:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800d6e4:	4b24      	ldr	r3, [pc, #144]	; (800d778 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d6e6:	4d23      	ldr	r5, [pc, #140]	; (800d774 <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 800d6e8:	2201      	movs	r2, #1
 800d6ea:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 800d6ec:	f7fe f9b8 	bl	800ba60 <HAL_GetTick>
 800d6f0:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d6f2:	682b      	ldr	r3, [r5, #0]
 800d6f4:	019a      	lsls	r2, r3, #6
 800d6f6:	f53f aead 	bmi.w	800d454 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800d6fa:	f7fe f9b1 	bl	800ba60 <HAL_GetTick>
 800d6fe:	1b00      	subs	r0, r0, r4
 800d700:	2802      	cmp	r0, #2
 800d702:	d9f6      	bls.n	800d6f2 <HAL_RCC_OscConfig+0x2ca>
 800d704:	e6d3      	b.n	800d4ae <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800d706:	f7fe f9ab 	bl	800ba60 <HAL_GetTick>
 800d70a:	1b80      	subs	r0, r0, r6
 800d70c:	2802      	cmp	r0, #2
 800d70e:	d9d7      	bls.n	800d6c0 <HAL_RCC_OscConfig+0x298>
 800d710:	e6cd      	b.n	800d4ae <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800d712:	f7fe f9a5 	bl	800ba60 <HAL_GetTick>
 800d716:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800d718:	682b      	ldr	r3, [r5, #0]
 800d71a:	019b      	lsls	r3, r3, #6
 800d71c:	f57f ae9a 	bpl.w	800d454 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800d720:	f7fe f99e 	bl	800ba60 <HAL_GetTick>
 800d724:	1b00      	subs	r0, r0, r4
 800d726:	2802      	cmp	r0, #2
 800d728:	d9f6      	bls.n	800d718 <HAL_RCC_OscConfig+0x2f0>
 800d72a:	e6c0      	b.n	800d4ae <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800d72c:	2801      	cmp	r0, #1
 800d72e:	f43f aebf 	beq.w	800d4b0 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800d732:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800d734:	69e2      	ldr	r2, [r4, #28]
 800d736:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 800d73a:	4291      	cmp	r1, r2
 800d73c:	f47f aea1 	bne.w	800d482 <HAL_RCC_OscConfig+0x5a>
 800d740:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800d742:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800d746:	428a      	cmp	r2, r1
 800d748:	f47f ae9b 	bne.w	800d482 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800d74c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d74e:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800d752:	401a      	ands	r2, r3
 800d754:	428a      	cmp	r2, r1
 800d756:	f47f ae94 	bne.w	800d482 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800d75a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800d75c:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800d760:	428a      	cmp	r2, r1
 800d762:	f47f ae8e 	bne.w	800d482 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800d766:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 800d768:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800d76c:	4293      	cmp	r3, r2
 800d76e:	f43f ae71 	beq.w	800d454 <HAL_RCC_OscConfig+0x2c>
 800d772:	e686      	b.n	800d482 <HAL_RCC_OscConfig+0x5a>
 800d774:	40023800 	.word	0x40023800
 800d778:	42470000 	.word	0x42470000

0800d77c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800d77c:	4913      	ldr	r1, [pc, #76]	; (800d7cc <HAL_RCC_GetSysClockFreq+0x50>)
{
 800d77e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800d780:	688b      	ldr	r3, [r1, #8]
 800d782:	f003 030c 	and.w	r3, r3, #12
 800d786:	2b04      	cmp	r3, #4
 800d788:	d01c      	beq.n	800d7c4 <HAL_RCC_GetSysClockFreq+0x48>
 800d78a:	2b08      	cmp	r3, #8
 800d78c:	d11c      	bne.n	800d7c8 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800d78e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800d790:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d792:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800d794:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d798:	bf14      	ite	ne
 800d79a:	480d      	ldrne	r0, [pc, #52]	; (800d7d0 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d79c:	480d      	ldreq	r0, [pc, #52]	; (800d7d4 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d79e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800d7a2:	bf18      	it	ne
 800d7a4:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800d7a6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d7aa:	fba1 0100 	umull	r0, r1, r1, r0
 800d7ae:	f7f3 fadb 	bl	8000d68 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800d7b2:	4b06      	ldr	r3, [pc, #24]	; (800d7cc <HAL_RCC_GetSysClockFreq+0x50>)
 800d7b4:	685b      	ldr	r3, [r3, #4]
 800d7b6:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800d7ba:	3301      	adds	r3, #1
 800d7bc:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800d7be:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800d7c2:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800d7c4:	4802      	ldr	r0, [pc, #8]	; (800d7d0 <HAL_RCC_GetSysClockFreq+0x54>)
 800d7c6:	e7fc      	b.n	800d7c2 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800d7c8:	4802      	ldr	r0, [pc, #8]	; (800d7d4 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800d7ca:	e7fa      	b.n	800d7c2 <HAL_RCC_GetSysClockFreq+0x46>
 800d7cc:	40023800 	.word	0x40023800
 800d7d0:	007a1200 	.word	0x007a1200
 800d7d4:	00f42400 	.word	0x00f42400

0800d7d8 <HAL_RCC_ClockConfig>:
{
 800d7d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d7dc:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800d7de:	4604      	mov	r4, r0
 800d7e0:	b910      	cbnz	r0, 800d7e8 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800d7e2:	2001      	movs	r0, #1
}
 800d7e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800d7e8:	4b44      	ldr	r3, [pc, #272]	; (800d8fc <HAL_RCC_ClockConfig+0x124>)
 800d7ea:	681a      	ldr	r2, [r3, #0]
 800d7ec:	f002 020f 	and.w	r2, r2, #15
 800d7f0:	428a      	cmp	r2, r1
 800d7f2:	d328      	bcc.n	800d846 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800d7f4:	6822      	ldr	r2, [r4, #0]
 800d7f6:	0797      	lsls	r7, r2, #30
 800d7f8:	d42d      	bmi.n	800d856 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800d7fa:	07d0      	lsls	r0, r2, #31
 800d7fc:	d441      	bmi.n	800d882 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800d7fe:	4b3f      	ldr	r3, [pc, #252]	; (800d8fc <HAL_RCC_ClockConfig+0x124>)
 800d800:	681a      	ldr	r2, [r3, #0]
 800d802:	f002 020f 	and.w	r2, r2, #15
 800d806:	42aa      	cmp	r2, r5
 800d808:	d866      	bhi.n	800d8d8 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800d80a:	6822      	ldr	r2, [r4, #0]
 800d80c:	0751      	lsls	r1, r2, #29
 800d80e:	d46c      	bmi.n	800d8ea <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800d810:	0713      	lsls	r3, r2, #28
 800d812:	d507      	bpl.n	800d824 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800d814:	4a3a      	ldr	r2, [pc, #232]	; (800d900 <HAL_RCC_ClockConfig+0x128>)
 800d816:	6921      	ldr	r1, [r4, #16]
 800d818:	6893      	ldr	r3, [r2, #8]
 800d81a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800d81e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800d822:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800d824:	f7ff ffaa 	bl	800d77c <HAL_RCC_GetSysClockFreq>
 800d828:	4b35      	ldr	r3, [pc, #212]	; (800d900 <HAL_RCC_ClockConfig+0x128>)
 800d82a:	4a36      	ldr	r2, [pc, #216]	; (800d904 <HAL_RCC_ClockConfig+0x12c>)
 800d82c:	689b      	ldr	r3, [r3, #8]
 800d82e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800d832:	5cd3      	ldrb	r3, [r2, r3]
 800d834:	40d8      	lsrs	r0, r3
 800d836:	4b34      	ldr	r3, [pc, #208]	; (800d908 <HAL_RCC_ClockConfig+0x130>)
 800d838:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800d83a:	4b34      	ldr	r3, [pc, #208]	; (800d90c <HAL_RCC_ClockConfig+0x134>)
 800d83c:	6818      	ldr	r0, [r3, #0]
 800d83e:	f7f5 fe5d 	bl	80034fc <HAL_InitTick>
  return HAL_OK;
 800d842:	2000      	movs	r0, #0
 800d844:	e7ce      	b.n	800d7e4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800d846:	b2ca      	uxtb	r2, r1
 800d848:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800d84a:	681b      	ldr	r3, [r3, #0]
 800d84c:	f003 030f 	and.w	r3, r3, #15
 800d850:	428b      	cmp	r3, r1
 800d852:	d1c6      	bne.n	800d7e2 <HAL_RCC_ClockConfig+0xa>
 800d854:	e7ce      	b.n	800d7f4 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800d856:	4b2a      	ldr	r3, [pc, #168]	; (800d900 <HAL_RCC_ClockConfig+0x128>)
 800d858:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800d85c:	bf1e      	ittt	ne
 800d85e:	6899      	ldrne	r1, [r3, #8]
 800d860:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800d864:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800d866:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800d868:	bf42      	ittt	mi
 800d86a:	6899      	ldrmi	r1, [r3, #8]
 800d86c:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 800d870:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800d872:	4923      	ldr	r1, [pc, #140]	; (800d900 <HAL_RCC_ClockConfig+0x128>)
 800d874:	68a0      	ldr	r0, [r4, #8]
 800d876:	688b      	ldr	r3, [r1, #8]
 800d878:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800d87c:	4303      	orrs	r3, r0
 800d87e:	608b      	str	r3, [r1, #8]
 800d880:	e7bb      	b.n	800d7fa <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800d882:	6862      	ldr	r2, [r4, #4]
 800d884:	4b1e      	ldr	r3, [pc, #120]	; (800d900 <HAL_RCC_ClockConfig+0x128>)
 800d886:	2a01      	cmp	r2, #1
 800d888:	d11c      	bne.n	800d8c4 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800d88a:	681b      	ldr	r3, [r3, #0]
 800d88c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d890:	d0a7      	beq.n	800d7e2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800d892:	4e1b      	ldr	r6, [pc, #108]	; (800d900 <HAL_RCC_ClockConfig+0x128>)
 800d894:	68b3      	ldr	r3, [r6, #8]
 800d896:	f023 0303 	bic.w	r3, r3, #3
 800d89a:	4313      	orrs	r3, r2
 800d89c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800d89e:	f7fe f8df 	bl	800ba60 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800d8a2:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800d8a6:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800d8a8:	68b3      	ldr	r3, [r6, #8]
 800d8aa:	6862      	ldr	r2, [r4, #4]
 800d8ac:	f003 030c 	and.w	r3, r3, #12
 800d8b0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800d8b4:	d0a3      	beq.n	800d7fe <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800d8b6:	f7fe f8d3 	bl	800ba60 <HAL_GetTick>
 800d8ba:	1bc0      	subs	r0, r0, r7
 800d8bc:	4540      	cmp	r0, r8
 800d8be:	d9f3      	bls.n	800d8a8 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 800d8c0:	2003      	movs	r0, #3
 800d8c2:	e78f      	b.n	800d7e4 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800d8c4:	1e91      	subs	r1, r2, #2
 800d8c6:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d8c8:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800d8ca:	d802      	bhi.n	800d8d2 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d8cc:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800d8d0:	e7de      	b.n	800d890 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d8d2:	f013 0f02 	tst.w	r3, #2
 800d8d6:	e7db      	b.n	800d890 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800d8d8:	b2ea      	uxtb	r2, r5
 800d8da:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800d8dc:	681b      	ldr	r3, [r3, #0]
 800d8de:	f003 030f 	and.w	r3, r3, #15
 800d8e2:	42ab      	cmp	r3, r5
 800d8e4:	f47f af7d 	bne.w	800d7e2 <HAL_RCC_ClockConfig+0xa>
 800d8e8:	e78f      	b.n	800d80a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800d8ea:	4905      	ldr	r1, [pc, #20]	; (800d900 <HAL_RCC_ClockConfig+0x128>)
 800d8ec:	68e0      	ldr	r0, [r4, #12]
 800d8ee:	688b      	ldr	r3, [r1, #8]
 800d8f0:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800d8f4:	4303      	orrs	r3, r0
 800d8f6:	608b      	str	r3, [r1, #8]
 800d8f8:	e78a      	b.n	800d810 <HAL_RCC_ClockConfig+0x38>
 800d8fa:	bf00      	nop
 800d8fc:	40023c00 	.word	0x40023c00
 800d900:	40023800 	.word	0x40023800
 800d904:	08032a24 	.word	0x08032a24
 800d908:	2000008c 	.word	0x2000008c
 800d90c:	20000094 	.word	0x20000094

0800d910 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800d910:	4b04      	ldr	r3, [pc, #16]	; (800d924 <HAL_RCC_GetPCLK1Freq+0x14>)
 800d912:	4a05      	ldr	r2, [pc, #20]	; (800d928 <HAL_RCC_GetPCLK1Freq+0x18>)
 800d914:	689b      	ldr	r3, [r3, #8]
 800d916:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800d91a:	5cd3      	ldrb	r3, [r2, r3]
 800d91c:	4a03      	ldr	r2, [pc, #12]	; (800d92c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800d91e:	6810      	ldr	r0, [r2, #0]
}
 800d920:	40d8      	lsrs	r0, r3
 800d922:	4770      	bx	lr
 800d924:	40023800 	.word	0x40023800
 800d928:	08032a34 	.word	0x08032a34
 800d92c:	2000008c 	.word	0x2000008c

0800d930 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800d930:	4b04      	ldr	r3, [pc, #16]	; (800d944 <HAL_RCC_GetPCLK2Freq+0x14>)
 800d932:	4a05      	ldr	r2, [pc, #20]	; (800d948 <HAL_RCC_GetPCLK2Freq+0x18>)
 800d934:	689b      	ldr	r3, [r3, #8]
 800d936:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800d93a:	5cd3      	ldrb	r3, [r2, r3]
 800d93c:	4a03      	ldr	r2, [pc, #12]	; (800d94c <HAL_RCC_GetPCLK2Freq+0x1c>)
 800d93e:	6810      	ldr	r0, [r2, #0]
}
 800d940:	40d8      	lsrs	r0, r3
 800d942:	4770      	bx	lr
 800d944:	40023800 	.word	0x40023800
 800d948:	08032a34 	.word	0x08032a34
 800d94c:	2000008c 	.word	0x2000008c

0800d950 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800d950:	230f      	movs	r3, #15
 800d952:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800d954:	4b0b      	ldr	r3, [pc, #44]	; (800d984 <HAL_RCC_GetClockConfig+0x34>)
 800d956:	689a      	ldr	r2, [r3, #8]
 800d958:	f002 0203 	and.w	r2, r2, #3
 800d95c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800d95e:	689a      	ldr	r2, [r3, #8]
 800d960:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800d964:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800d966:	689a      	ldr	r2, [r3, #8]
 800d968:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800d96c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800d96e:	689b      	ldr	r3, [r3, #8]
 800d970:	08db      	lsrs	r3, r3, #3
 800d972:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800d976:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800d978:	4b03      	ldr	r3, [pc, #12]	; (800d988 <HAL_RCC_GetClockConfig+0x38>)
 800d97a:	681b      	ldr	r3, [r3, #0]
 800d97c:	f003 030f 	and.w	r3, r3, #15
 800d980:	600b      	str	r3, [r1, #0]
}
 800d982:	4770      	bx	lr
 800d984:	40023800 	.word	0x40023800
 800d988:	40023c00 	.word	0x40023c00

0800d98c <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800d98c:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800d98e:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800d992:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d994:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800d996:	f040 808c 	bne.w	800dab2 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800d99a:	6823      	ldr	r3, [r4, #0]
 800d99c:	f013 0f0c 	tst.w	r3, #12
 800d9a0:	d045      	beq.n	800da2e <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800d9a2:	4b8b      	ldr	r3, [pc, #556]	; (800dbd0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800d9a4:	4d8b      	ldr	r5, [pc, #556]	; (800dbd4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 800d9a6:	2200      	movs	r2, #0
 800d9a8:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800d9aa:	f7fe f859 	bl	800ba60 <HAL_GetTick>
 800d9ae:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800d9b0:	682b      	ldr	r3, [r5, #0]
 800d9b2:	009f      	lsls	r7, r3, #2
 800d9b4:	f100 80cf 	bmi.w	800db56 <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800d9b8:	6821      	ldr	r1, [r4, #0]
 800d9ba:	074e      	lsls	r6, r1, #29
 800d9bc:	d515      	bpl.n	800d9ea <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800d9be:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800d9c2:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800d9c6:	061b      	lsls	r3, r3, #24
 800d9c8:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800d9cc:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800d9d0:	4313      	orrs	r3, r2
 800d9d2:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800d9d6:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 800d9da:	6a22      	ldr	r2, [r4, #32]
 800d9dc:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800d9e0:	3a01      	subs	r2, #1
 800d9e2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800d9e6:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800d9ea:	070d      	lsls	r5, r1, #28
 800d9ec:	d514      	bpl.n	800da18 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800d9ee:	4a79      	ldr	r2, [pc, #484]	; (800dbd4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800d9f0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800d9f2:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800d9f6:	6920      	ldr	r0, [r4, #16]
 800d9f8:	071b      	lsls	r3, r3, #28
 800d9fa:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800d9fe:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800da02:	430b      	orrs	r3, r1
 800da04:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800da08:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800da0c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800da0e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800da12:	430b      	orrs	r3, r1
 800da14:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800da18:	4b6d      	ldr	r3, [pc, #436]	; (800dbd0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800da1a:	4e6e      	ldr	r6, [pc, #440]	; (800dbd4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 800da1c:	2201      	movs	r2, #1
 800da1e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800da20:	f7fe f81e 	bl	800ba60 <HAL_GetTick>
 800da24:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800da26:	6833      	ldr	r3, [r6, #0]
 800da28:	0098      	lsls	r0, r3, #2
 800da2a:	f140 809b 	bpl.w	800db64 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800da2e:	6823      	ldr	r3, [r4, #0]
 800da30:	069b      	lsls	r3, r3, #26
 800da32:	d533      	bpl.n	800da9c <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800da34:	2300      	movs	r3, #0
 800da36:	9301      	str	r3, [sp, #4]
 800da38:	4b66      	ldr	r3, [pc, #408]	; (800dbd4 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800da3a:	4d67      	ldr	r5, [pc, #412]	; (800dbd8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800da3c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800da3e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800da42:	641a      	str	r2, [r3, #64]	; 0x40
 800da44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800da46:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800da4a:	9301      	str	r3, [sp, #4]
 800da4c:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800da4e:	682b      	ldr	r3, [r5, #0]
 800da50:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800da54:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800da56:	f7fe f803 	bl	800ba60 <HAL_GetTick>
 800da5a:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 800da5c:	682b      	ldr	r3, [r5, #0]
 800da5e:	05d9      	lsls	r1, r3, #23
 800da60:	f140 8087 	bpl.w	800db72 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800da64:	4d5b      	ldr	r5, [pc, #364]	; (800dbd4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800da66:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800da68:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800da6c:	f040 8088 	bne.w	800db80 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800da70:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800da72:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800da76:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800da7a:	4a56      	ldr	r2, [pc, #344]	; (800dbd4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800da7c:	f040 80a4 	bne.w	800dbc8 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 800da80:	6891      	ldr	r1, [r2, #8]
 800da82:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800da86:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800da8a:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800da8e:	4301      	orrs	r1, r0
 800da90:	6091      	str	r1, [r2, #8]
 800da92:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800da94:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800da98:	430b      	orrs	r3, r1
 800da9a:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800da9c:	6820      	ldr	r0, [r4, #0]
 800da9e:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800daa2:	bf1f      	itttt	ne
 800daa4:	4b4d      	ldrne	r3, [pc, #308]	; (800dbdc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800daa6:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 800daaa:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800daae:	2000      	movne	r0, #0
 800dab0:	e04f      	b.n	800db52 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 800dab2:	4b47      	ldr	r3, [pc, #284]	; (800dbd0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800dab4:	4e47      	ldr	r6, [pc, #284]	; (800dbd4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 800dab6:	2200      	movs	r2, #0
 800dab8:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800daba:	f7fd ffd1 	bl	800ba60 <HAL_GetTick>
 800dabe:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800dac0:	6833      	ldr	r3, [r6, #0]
 800dac2:	011f      	lsls	r7, r3, #4
 800dac4:	d43f      	bmi.n	800db46 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800dac6:	6821      	ldr	r1, [r4, #0]
 800dac8:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800daca:	bf41      	itttt	mi
 800dacc:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800dad0:	071b      	lslmi	r3, r3, #28
 800dad2:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800dad6:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800dada:	0788      	lsls	r0, r1, #30
 800dadc:	d515      	bpl.n	800db0a <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800dade:	4a3d      	ldr	r2, [pc, #244]	; (800dbd4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800dae0:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800dae2:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800dae6:	6865      	ldr	r5, [r4, #4]
 800dae8:	061b      	lsls	r3, r3, #24
 800daea:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800daee:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800daf2:	4303      	orrs	r3, r0
 800daf4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800daf8:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800dafc:	69e3      	ldr	r3, [r4, #28]
 800dafe:	f020 001f 	bic.w	r0, r0, #31
 800db02:	3b01      	subs	r3, #1
 800db04:	4303      	orrs	r3, r0
 800db06:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800db0a:	0649      	lsls	r1, r1, #25
 800db0c:	d50a      	bpl.n	800db24 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800db0e:	68e3      	ldr	r3, [r4, #12]
 800db10:	6862      	ldr	r2, [r4, #4]
 800db12:	061b      	lsls	r3, r3, #24
 800db14:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800db18:	68a2      	ldr	r2, [r4, #8]
 800db1a:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800db1e:	4a2d      	ldr	r2, [pc, #180]	; (800dbd4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800db20:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800db24:	4b2a      	ldr	r3, [pc, #168]	; (800dbd0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800db26:	4e2b      	ldr	r6, [pc, #172]	; (800dbd4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 800db28:	2201      	movs	r2, #1
 800db2a:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800db2c:	f7fd ff98 	bl	800ba60 <HAL_GetTick>
 800db30:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800db32:	6833      	ldr	r3, [r6, #0]
 800db34:	011a      	lsls	r2, r3, #4
 800db36:	f53f af30 	bmi.w	800d99a <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800db3a:	f7fd ff91 	bl	800ba60 <HAL_GetTick>
 800db3e:	1b40      	subs	r0, r0, r5
 800db40:	2802      	cmp	r0, #2
 800db42:	d9f6      	bls.n	800db32 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 800db44:	e004      	b.n	800db50 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800db46:	f7fd ff8b 	bl	800ba60 <HAL_GetTick>
 800db4a:	1b40      	subs	r0, r0, r5
 800db4c:	2802      	cmp	r0, #2
 800db4e:	d9b7      	bls.n	800dac0 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 800db50:	2003      	movs	r0, #3
}
 800db52:	b003      	add	sp, #12
 800db54:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800db56:	f7fd ff83 	bl	800ba60 <HAL_GetTick>
 800db5a:	1b80      	subs	r0, r0, r6
 800db5c:	2802      	cmp	r0, #2
 800db5e:	f67f af27 	bls.w	800d9b0 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800db62:	e7f5      	b.n	800db50 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800db64:	f7fd ff7c 	bl	800ba60 <HAL_GetTick>
 800db68:	1b40      	subs	r0, r0, r5
 800db6a:	2802      	cmp	r0, #2
 800db6c:	f67f af5b 	bls.w	800da26 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800db70:	e7ee      	b.n	800db50 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800db72:	f7fd ff75 	bl	800ba60 <HAL_GetTick>
 800db76:	1b80      	subs	r0, r0, r6
 800db78:	2802      	cmp	r0, #2
 800db7a:	f67f af6f 	bls.w	800da5c <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800db7e:	e7e7      	b.n	800db50 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800db80:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800db82:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800db86:	4293      	cmp	r3, r2
 800db88:	f43f af72 	beq.w	800da70 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800db8c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800db8e:	4a10      	ldr	r2, [pc, #64]	; (800dbd0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 800db90:	2101      	movs	r1, #1
 800db92:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800db96:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800db9a:	2100      	movs	r1, #0
 800db9c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800dba0:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800dba2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800dba4:	07da      	lsls	r2, r3, #31
 800dba6:	f57f af63 	bpl.w	800da70 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 800dbaa:	f7fd ff59 	bl	800ba60 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dbae:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800dbb2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dbb4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800dbb6:	079b      	lsls	r3, r3, #30
 800dbb8:	f53f af5a 	bmi.w	800da70 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dbbc:	f7fd ff50 	bl	800ba60 <HAL_GetTick>
 800dbc0:	1b80      	subs	r0, r0, r6
 800dbc2:	42b8      	cmp	r0, r7
 800dbc4:	d9f6      	bls.n	800dbb4 <HAL_RCCEx_PeriphCLKConfig+0x228>
 800dbc6:	e7c3      	b.n	800db50 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800dbc8:	6891      	ldr	r1, [r2, #8]
 800dbca:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800dbce:	e75f      	b.n	800da90 <HAL_RCCEx_PeriphCLKConfig+0x104>
 800dbd0:	42470000 	.word	0x42470000
 800dbd4:	40023800 	.word	0x40023800
 800dbd8:	40007000 	.word	0x40007000
 800dbdc:	42471000 	.word	0x42471000

0800dbe0 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 800dbe0:	b538      	push	{r3, r4, r5, lr}
 800dbe2:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 800dbe4:	4604      	mov	r4, r0
 800dbe6:	b1c8      	cbz	r0, 800dc1c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 800dbe8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800dbec:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800dbf0:	b91b      	cbnz	r3, 800dbfa <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800dbf2:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800dbf6:	f7f5 fc15 	bl	8003424 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800dbfa:	2302      	movs	r3, #2
 800dbfc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800dc00:	1d21      	adds	r1, r4, #4
 800dc02:	6820      	ldr	r0, [r4, #0]
 800dc04:	f001 f8ce 	bl	800eda4 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 800dc08:	6862      	ldr	r2, [r4, #4]
 800dc0a:	6820      	ldr	r0, [r4, #0]
 800dc0c:	4629      	mov	r1, r5
 800dc0e:	f001 f8ff 	bl	800ee10 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800dc12:	2301      	movs	r3, #1
 800dc14:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 800dc18:	2000      	movs	r0, #0
}
 800dc1a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800dc1c:	2001      	movs	r0, #1
 800dc1e:	e7fc      	b.n	800dc1a <HAL_SDRAM_Init+0x3a>

0800dc20 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800dc20:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800dc22:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800dc26:	2b02      	cmp	r3, #2
{
 800dc28:	4604      	mov	r4, r0
 800dc2a:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800dc2c:	b2d8      	uxtb	r0, r3
 800dc2e:	d00d      	beq.n	800dc4c <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800dc30:	2302      	movs	r3, #2
 800dc32:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800dc36:	6820      	ldr	r0, [r4, #0]
 800dc38:	f001 f926 	bl	800ee88 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800dc3c:	682b      	ldr	r3, [r5, #0]
 800dc3e:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800dc40:	bf0c      	ite	eq
 800dc42:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 800dc44:	2301      	movne	r3, #1
 800dc46:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 800dc4a:	2000      	movs	r0, #0
}
 800dc4c:	bd38      	pop	{r3, r4, r5, pc}

0800dc4e <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800dc4e:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800dc50:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800dc54:	2b02      	cmp	r3, #2
{
 800dc56:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800dc58:	b2d8      	uxtb	r0, r3
 800dc5a:	d009      	beq.n	800dc70 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800dc5c:	2302      	movs	r3, #2
 800dc5e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800dc62:	6820      	ldr	r0, [r4, #0]
 800dc64:	f001 f937 	bl	800eed6 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800dc68:	2301      	movs	r3, #1
 800dc6a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 800dc6e:	2000      	movs	r0, #0
}
 800dc70:	bd10      	pop	{r4, pc}

0800dc72 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800dc72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dc74:	4604      	mov	r4, r0
 800dc76:	460e      	mov	r6, r1
 800dc78:	4615      	mov	r5, r2
 800dc7a:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800dc7c:	6822      	ldr	r2, [r4, #0]
 800dc7e:	6893      	ldr	r3, [r2, #8]
 800dc80:	ea36 0303 	bics.w	r3, r6, r3
 800dc84:	d001      	beq.n	800dc8a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800dc86:	2000      	movs	r0, #0
 800dc88:	e02d      	b.n	800dce6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 800dc8a:	1c6b      	adds	r3, r5, #1
 800dc8c:	d0f7      	beq.n	800dc7e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 800dc8e:	f7fd fee7 	bl	800ba60 <HAL_GetTick>
 800dc92:	1bc0      	subs	r0, r0, r7
 800dc94:	4285      	cmp	r5, r0
 800dc96:	d8f1      	bhi.n	800dc7c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800dc98:	6823      	ldr	r3, [r4, #0]
 800dc9a:	685a      	ldr	r2, [r3, #4]
 800dc9c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800dca0:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800dca2:	6862      	ldr	r2, [r4, #4]
 800dca4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800dca8:	d10a      	bne.n	800dcc0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 800dcaa:	68a2      	ldr	r2, [r4, #8]
 800dcac:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800dcb0:	d002      	beq.n	800dcb8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800dcb2:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800dcb6:	d103      	bne.n	800dcc0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 800dcb8:	681a      	ldr	r2, [r3, #0]
 800dcba:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800dcbe:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800dcc0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800dcc2:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800dcc6:	d107      	bne.n	800dcd8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 800dcc8:	681a      	ldr	r2, [r3, #0]
 800dcca:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800dcce:	601a      	str	r2, [r3, #0]
 800dcd0:	681a      	ldr	r2, [r3, #0]
 800dcd2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800dcd6:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800dcd8:	2301      	movs	r3, #1
 800dcda:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800dcde:	2300      	movs	r3, #0
 800dce0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800dce4:	2003      	movs	r0, #3
}
 800dce6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800dce8 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800dce8:	b538      	push	{r3, r4, r5, lr}
 800dcea:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800dcec:	6842      	ldr	r2, [r0, #4]
 800dcee:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800dcf2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800dcf4:	d11f      	bne.n	800dd36 <SPI_EndRxTransaction+0x4e>
 800dcf6:	6882      	ldr	r2, [r0, #8]
 800dcf8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800dcfc:	d002      	beq.n	800dd04 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800dcfe:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800dd02:	d107      	bne.n	800dd14 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 800dd04:	6825      	ldr	r5, [r4, #0]
 800dd06:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800dd08:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 800dd0c:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 800dd10:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800dd12:	d007      	beq.n	800dd24 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800dd14:	460a      	mov	r2, r1
 800dd16:	2180      	movs	r1, #128	; 0x80
 800dd18:	4620      	mov	r0, r4
 800dd1a:	f7ff ffaa 	bl	800dc72 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800dd1e:	b920      	cbnz	r0, 800dd2a <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800dd20:	2000      	movs	r0, #0
}
 800dd22:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800dd24:	460a      	mov	r2, r1
 800dd26:	2101      	movs	r1, #1
 800dd28:	e7f6      	b.n	800dd18 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800dd2a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800dd2c:	f043 0320 	orr.w	r3, r3, #32
 800dd30:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800dd32:	2003      	movs	r0, #3
 800dd34:	e7f5      	b.n	800dd22 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800dd36:	460a      	mov	r2, r1
 800dd38:	2101      	movs	r1, #1
 800dd3a:	e7ee      	b.n	800dd1a <SPI_EndRxTransaction+0x32>

0800dd3c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800dd3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd3e:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800dd40:	4a12      	ldr	r2, [pc, #72]	; (800dd8c <SPI_EndRxTxTransaction+0x50>)
 800dd42:	6815      	ldr	r5, [r2, #0]
 800dd44:	4a12      	ldr	r2, [pc, #72]	; (800dd90 <SPI_EndRxTxTransaction+0x54>)
 800dd46:	fbb5 f5f2 	udiv	r5, r5, r2
 800dd4a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800dd4e:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800dd50:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800dd52:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800dd54:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800dd58:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800dd5a:	d10b      	bne.n	800dd74 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800dd5c:	460a      	mov	r2, r1
 800dd5e:	2180      	movs	r1, #128	; 0x80
 800dd60:	f7ff ff87 	bl	800dc72 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800dd64:	b178      	cbz	r0, 800dd86 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800dd66:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800dd68:	f043 0320 	orr.w	r3, r3, #32
 800dd6c:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800dd6e:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800dd70:	b003      	add	sp, #12
 800dd72:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 800dd74:	9b01      	ldr	r3, [sp, #4]
 800dd76:	b133      	cbz	r3, 800dd86 <SPI_EndRxTxTransaction+0x4a>
      count--;
 800dd78:	9b01      	ldr	r3, [sp, #4]
 800dd7a:	3b01      	subs	r3, #1
 800dd7c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800dd7e:	6823      	ldr	r3, [r4, #0]
 800dd80:	689b      	ldr	r3, [r3, #8]
 800dd82:	061b      	lsls	r3, r3, #24
 800dd84:	d4f6      	bmi.n	800dd74 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 800dd86:	2000      	movs	r0, #0
 800dd88:	e7f2      	b.n	800dd70 <SPI_EndRxTxTransaction+0x34>
 800dd8a:	bf00      	nop
 800dd8c:	2000008c 	.word	0x2000008c
 800dd90:	016e3600 	.word	0x016e3600

0800dd94 <HAL_SPI_Init>:
{
 800dd94:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800dd96:	4604      	mov	r4, r0
 800dd98:	2800      	cmp	r0, #0
 800dd9a:	d036      	beq.n	800de0a <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800dd9c:	2300      	movs	r3, #0
 800dd9e:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800dda0:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 800dda4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800dda8:	b91b      	cbnz	r3, 800ddb2 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 800ddaa:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800ddae:	f7f5 f9eb 	bl	8003188 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800ddb2:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 800ddb4:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800ddb6:	2302      	movs	r3, #2
 800ddb8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800ddbc:	680b      	ldr	r3, [r1, #0]
 800ddbe:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ddc2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 800ddc4:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 800ddc8:	4303      	orrs	r3, r0
 800ddca:	68e0      	ldr	r0, [r4, #12]
 800ddcc:	4303      	orrs	r3, r0
 800ddce:	6920      	ldr	r0, [r4, #16]
 800ddd0:	4303      	orrs	r3, r0
 800ddd2:	6960      	ldr	r0, [r4, #20]
 800ddd4:	4303      	orrs	r3, r0
 800ddd6:	69e0      	ldr	r0, [r4, #28]
 800ddd8:	4303      	orrs	r3, r0
 800ddda:	6a20      	ldr	r0, [r4, #32]
 800dddc:	4303      	orrs	r3, r0
 800ddde:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800dde0:	4303      	orrs	r3, r0
 800dde2:	f402 7000 	and.w	r0, r2, #512	; 0x200
 800dde6:	4303      	orrs	r3, r0
 800dde8:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 800ddea:	0c12      	lsrs	r2, r2, #16
 800ddec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ddee:	f002 0204 	and.w	r2, r2, #4
 800ddf2:	431a      	orrs	r2, r3
 800ddf4:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800ddf6:	69cb      	ldr	r3, [r1, #28]
 800ddf8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800ddfc:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800ddfe:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800de00:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800de02:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800de04:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 800de08:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800de0a:	2001      	movs	r0, #1
 800de0c:	e7fc      	b.n	800de08 <HAL_SPI_Init+0x74>

0800de0e <HAL_SPI_Transmit>:
{
 800de0e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800de12:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 800de14:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 800de18:	2b01      	cmp	r3, #1
{
 800de1a:	4604      	mov	r4, r0
 800de1c:	460d      	mov	r5, r1
 800de1e:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 800de20:	f000 809d 	beq.w	800df5e <HAL_SPI_Transmit+0x150>
 800de24:	2301      	movs	r3, #1
 800de26:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800de2a:	f7fd fe19 	bl	800ba60 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800de2e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800de32:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800de34:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800de36:	b2d8      	uxtb	r0, r3
 800de38:	f040 808f 	bne.w	800df5a <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 800de3c:	2d00      	cmp	r5, #0
 800de3e:	d05a      	beq.n	800def6 <HAL_SPI_Transmit+0xe8>
 800de40:	2f00      	cmp	r7, #0
 800de42:	d058      	beq.n	800def6 <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800de44:	2303      	movs	r3, #3
 800de46:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800de4a:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800de4c:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800de4e:	2300      	movs	r3, #0
 800de50:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 800de52:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 800de56:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800de58:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 800de5a:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 800de5c:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 800de5e:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 800de60:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800de62:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 800de66:	bf08      	it	eq
 800de68:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800de6a:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 800de6c:	bf04      	itt	eq
 800de6e:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 800de72:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800de74:	681a      	ldr	r2, [r3, #0]
 800de76:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800de78:	bf5e      	ittt	pl
 800de7a:	681a      	ldrpl	r2, [r3, #0]
 800de7c:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 800de80:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800de82:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800de86:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800de88:	d141      	bne.n	800df0e <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800de8a:	b10a      	cbz	r2, 800de90 <HAL_SPI_Transmit+0x82>
 800de8c:	2f01      	cmp	r7, #1
 800de8e:	d107      	bne.n	800dea0 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800de90:	f835 2b02 	ldrh.w	r2, [r5], #2
 800de94:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800de96:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800de98:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800de9a:	3b01      	subs	r3, #1
 800de9c:	b29b      	uxth	r3, r3
 800de9e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800dea0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800dea2:	b29b      	uxth	r3, r3
 800dea4:	b9a3      	cbnz	r3, 800ded0 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800dea6:	4642      	mov	r2, r8
 800dea8:	4631      	mov	r1, r6
 800deaa:	4620      	mov	r0, r4
 800deac:	f7ff ff46 	bl	800dd3c <SPI_EndRxTxTransaction>
 800deb0:	2800      	cmp	r0, #0
 800deb2:	d14f      	bne.n	800df54 <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800deb4:	68a3      	ldr	r3, [r4, #8]
 800deb6:	b933      	cbnz	r3, 800dec6 <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800deb8:	9301      	str	r3, [sp, #4]
 800deba:	6823      	ldr	r3, [r4, #0]
 800debc:	68da      	ldr	r2, [r3, #12]
 800debe:	9201      	str	r2, [sp, #4]
 800dec0:	689b      	ldr	r3, [r3, #8]
 800dec2:	9301      	str	r3, [sp, #4]
 800dec4:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800dec6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800dec8:	3800      	subs	r0, #0
 800deca:	bf18      	it	ne
 800decc:	2001      	movne	r0, #1
error:
 800dece:	e012      	b.n	800def6 <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ded0:	6822      	ldr	r2, [r4, #0]
 800ded2:	6893      	ldr	r3, [r2, #8]
 800ded4:	0798      	lsls	r0, r3, #30
 800ded6:	d505      	bpl.n	800dee4 <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ded8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800deda:	f833 1b02 	ldrh.w	r1, [r3], #2
 800dede:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800dee0:	6323      	str	r3, [r4, #48]	; 0x30
 800dee2:	e7d9      	b.n	800de98 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800dee4:	f7fd fdbc 	bl	800ba60 <HAL_GetTick>
 800dee8:	eba0 0008 	sub.w	r0, r0, r8
 800deec:	42b0      	cmp	r0, r6
 800deee:	d30b      	bcc.n	800df08 <HAL_SPI_Transmit+0xfa>
 800def0:	1c71      	adds	r1, r6, #1
 800def2:	d0d5      	beq.n	800dea0 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 800def4:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800def6:	2301      	movs	r3, #1
 800def8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800defc:	2300      	movs	r3, #0
 800defe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800df02:	b002      	add	sp, #8
 800df04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800df08:	2e00      	cmp	r6, #0
 800df0a:	d1c9      	bne.n	800dea0 <HAL_SPI_Transmit+0x92>
 800df0c:	e7f2      	b.n	800def4 <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800df0e:	b10a      	cbz	r2, 800df14 <HAL_SPI_Transmit+0x106>
 800df10:	2f01      	cmp	r7, #1
 800df12:	d108      	bne.n	800df26 <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800df14:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800df16:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800df18:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800df1a:	3301      	adds	r3, #1
 800df1c:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800df1e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800df20:	3b01      	subs	r3, #1
 800df22:	b29b      	uxth	r3, r3
 800df24:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800df26:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800df28:	b29b      	uxth	r3, r3
 800df2a:	2b00      	cmp	r3, #0
 800df2c:	d0bb      	beq.n	800dea6 <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800df2e:	6823      	ldr	r3, [r4, #0]
 800df30:	689a      	ldr	r2, [r3, #8]
 800df32:	0792      	lsls	r2, r2, #30
 800df34:	d502      	bpl.n	800df3c <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800df36:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800df38:	7812      	ldrb	r2, [r2, #0]
 800df3a:	e7ec      	b.n	800df16 <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800df3c:	f7fd fd90 	bl	800ba60 <HAL_GetTick>
 800df40:	eba0 0008 	sub.w	r0, r0, r8
 800df44:	42b0      	cmp	r0, r6
 800df46:	d302      	bcc.n	800df4e <HAL_SPI_Transmit+0x140>
 800df48:	1c73      	adds	r3, r6, #1
 800df4a:	d0ec      	beq.n	800df26 <HAL_SPI_Transmit+0x118>
 800df4c:	e7d2      	b.n	800def4 <HAL_SPI_Transmit+0xe6>
 800df4e:	2e00      	cmp	r6, #0
 800df50:	d1e9      	bne.n	800df26 <HAL_SPI_Transmit+0x118>
 800df52:	e7cf      	b.n	800def4 <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800df54:	2320      	movs	r3, #32
 800df56:	6563      	str	r3, [r4, #84]	; 0x54
 800df58:	e7ac      	b.n	800deb4 <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 800df5a:	2002      	movs	r0, #2
 800df5c:	e7cb      	b.n	800def6 <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 800df5e:	2002      	movs	r0, #2
 800df60:	e7cf      	b.n	800df02 <HAL_SPI_Transmit+0xf4>

0800df62 <HAL_SPI_TransmitReceive>:
{
 800df62:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800df66:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 800df68:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 800df6c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 800df6e:	2b01      	cmp	r3, #1
{
 800df70:	4604      	mov	r4, r0
 800df72:	460d      	mov	r5, r1
 800df74:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 800df76:	f000 80e6 	beq.w	800e146 <HAL_SPI_TransmitReceive+0x1e4>
 800df7a:	2301      	movs	r3, #1
 800df7c:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800df80:	f7fd fd6e 	bl	800ba60 <HAL_GetTick>
  tmp_state           = hspi->State;
 800df84:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800df88:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800df8a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800df8c:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 800df8e:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800df90:	d00a      	beq.n	800dfa8 <HAL_SPI_TransmitReceive+0x46>
 800df92:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800df96:	f040 80d4 	bne.w	800e142 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800df9a:	68a3      	ldr	r3, [r4, #8]
 800df9c:	2b00      	cmp	r3, #0
 800df9e:	f040 80d0 	bne.w	800e142 <HAL_SPI_TransmitReceive+0x1e0>
 800dfa2:	2904      	cmp	r1, #4
 800dfa4:	f040 80cd 	bne.w	800e142 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800dfa8:	2d00      	cmp	r5, #0
 800dfaa:	d040      	beq.n	800e02e <HAL_SPI_TransmitReceive+0xcc>
 800dfac:	f1b9 0f00 	cmp.w	r9, #0
 800dfb0:	d03d      	beq.n	800e02e <HAL_SPI_TransmitReceive+0xcc>
 800dfb2:	2e00      	cmp	r6, #0
 800dfb4:	d03b      	beq.n	800e02e <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800dfb6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800dfba:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800dfbe:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800dfc0:	bf1c      	itt	ne
 800dfc2:	2305      	movne	r3, #5
 800dfc4:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800dfc8:	2300      	movs	r3, #0
 800dfca:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800dfcc:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800dfd0:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800dfd2:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800dfd4:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800dfd6:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800dfd8:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800dfda:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 800dfdc:	bf58      	it	pl
 800dfde:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800dfe0:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 800dfe2:	bf58      	it	pl
 800dfe4:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 800dfe8:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 800dfea:	bf58      	it	pl
 800dfec:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800dfee:	68e1      	ldr	r1, [r4, #12]
 800dff0:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800dff4:	d152      	bne.n	800e09c <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800dff6:	b10a      	cbz	r2, 800dffc <HAL_SPI_TransmitReceive+0x9a>
 800dff8:	2e01      	cmp	r6, #1
 800dffa:	d107      	bne.n	800e00c <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800dffc:	f835 2b02 	ldrh.w	r2, [r5], #2
 800e000:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800e002:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e004:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e006:	3b01      	subs	r3, #1
 800e008:	b29b      	uxth	r3, r3
 800e00a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800e00c:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e00e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e010:	b29b      	uxth	r3, r3
 800e012:	b973      	cbnz	r3, 800e032 <HAL_SPI_TransmitReceive+0xd0>
 800e014:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e016:	b29b      	uxth	r3, r3
 800e018:	b95b      	cbnz	r3, 800e032 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800e01a:	4642      	mov	r2, r8
 800e01c:	4639      	mov	r1, r7
 800e01e:	4620      	mov	r0, r4
 800e020:	f7ff fe8c 	bl	800dd3c <SPI_EndRxTxTransaction>
 800e024:	2800      	cmp	r0, #0
 800e026:	f000 8081 	beq.w	800e12c <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e02a:	2320      	movs	r3, #32
 800e02c:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800e02e:	2001      	movs	r0, #1
 800e030:	e02b      	b.n	800e08a <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e032:	6821      	ldr	r1, [r4, #0]
 800e034:	688b      	ldr	r3, [r1, #8]
 800e036:	079e      	lsls	r6, r3, #30
 800e038:	d50d      	bpl.n	800e056 <HAL_SPI_TransmitReceive+0xf4>
 800e03a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e03c:	b29b      	uxth	r3, r3
 800e03e:	b153      	cbz	r3, 800e056 <HAL_SPI_TransmitReceive+0xf4>
 800e040:	b14d      	cbz	r5, 800e056 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e042:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e044:	f833 2b02 	ldrh.w	r2, [r3], #2
 800e048:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e04a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e04c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e04e:	3b01      	subs	r3, #1
 800e050:	b29b      	uxth	r3, r3
 800e052:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e054:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e056:	688a      	ldr	r2, [r1, #8]
 800e058:	f012 0201 	ands.w	r2, r2, #1
 800e05c:	d00c      	beq.n	800e078 <HAL_SPI_TransmitReceive+0x116>
 800e05e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e060:	b29b      	uxth	r3, r3
 800e062:	b14b      	cbz	r3, 800e078 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e064:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e066:	68c9      	ldr	r1, [r1, #12]
 800e068:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e06c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e06e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e070:	3b01      	subs	r3, #1
 800e072:	b29b      	uxth	r3, r3
 800e074:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e076:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800e078:	f7fd fcf2 	bl	800ba60 <HAL_GetTick>
 800e07c:	eba0 0008 	sub.w	r0, r0, r8
 800e080:	42b8      	cmp	r0, r7
 800e082:	d3c4      	bcc.n	800e00e <HAL_SPI_TransmitReceive+0xac>
 800e084:	1c78      	adds	r0, r7, #1
 800e086:	d0c2      	beq.n	800e00e <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 800e088:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800e08a:	2301      	movs	r3, #1
 800e08c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e090:	2300      	movs	r3, #0
 800e092:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e096:	b003      	add	sp, #12
 800e098:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e09c:	b10a      	cbz	r2, 800e0a2 <HAL_SPI_TransmitReceive+0x140>
 800e09e:	2e01      	cmp	r6, #1
 800e0a0:	d108      	bne.n	800e0b4 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e0a2:	782a      	ldrb	r2, [r5, #0]
 800e0a4:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e0a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e0a8:	3301      	adds	r3, #1
 800e0aa:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e0ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e0ae:	3b01      	subs	r3, #1
 800e0b0:	b29b      	uxth	r3, r3
 800e0b2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800e0b4:	2501      	movs	r5, #1
 800e0b6:	e02d      	b.n	800e114 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e0b8:	6822      	ldr	r2, [r4, #0]
 800e0ba:	6893      	ldr	r3, [r2, #8]
 800e0bc:	0799      	lsls	r1, r3, #30
 800e0be:	d50e      	bpl.n	800e0de <HAL_SPI_TransmitReceive+0x17c>
 800e0c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e0c2:	b29b      	uxth	r3, r3
 800e0c4:	b15b      	cbz	r3, 800e0de <HAL_SPI_TransmitReceive+0x17c>
 800e0c6:	b155      	cbz	r5, 800e0de <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e0c8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e0ca:	781b      	ldrb	r3, [r3, #0]
 800e0cc:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800e0ce:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e0d0:	3301      	adds	r3, #1
 800e0d2:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e0d4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e0d6:	3b01      	subs	r3, #1
 800e0d8:	b29b      	uxth	r3, r3
 800e0da:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e0dc:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e0de:	6822      	ldr	r2, [r4, #0]
 800e0e0:	6891      	ldr	r1, [r2, #8]
 800e0e2:	f011 0101 	ands.w	r1, r1, #1
 800e0e6:	d00d      	beq.n	800e104 <HAL_SPI_TransmitReceive+0x1a2>
 800e0e8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e0ea:	b29b      	uxth	r3, r3
 800e0ec:	b153      	cbz	r3, 800e104 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e0ee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e0f0:	68d2      	ldr	r2, [r2, #12]
 800e0f2:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800e0f4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e0f6:	3301      	adds	r3, #1
 800e0f8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e0fa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e0fc:	3b01      	subs	r3, #1
 800e0fe:	b29b      	uxth	r3, r3
 800e100:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e102:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e104:	f7fd fcac 	bl	800ba60 <HAL_GetTick>
 800e108:	eba0 0008 	sub.w	r0, r0, r8
 800e10c:	42b8      	cmp	r0, r7
 800e10e:	d30a      	bcc.n	800e126 <HAL_SPI_TransmitReceive+0x1c4>
 800e110:	1c7b      	adds	r3, r7, #1
 800e112:	d1b9      	bne.n	800e088 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e114:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e116:	b29b      	uxth	r3, r3
 800e118:	2b00      	cmp	r3, #0
 800e11a:	d1cd      	bne.n	800e0b8 <HAL_SPI_TransmitReceive+0x156>
 800e11c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e11e:	b29b      	uxth	r3, r3
 800e120:	2b00      	cmp	r3, #0
 800e122:	d1c9      	bne.n	800e0b8 <HAL_SPI_TransmitReceive+0x156>
 800e124:	e779      	b.n	800e01a <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e126:	2f00      	cmp	r7, #0
 800e128:	d1f4      	bne.n	800e114 <HAL_SPI_TransmitReceive+0x1b2>
 800e12a:	e7ad      	b.n	800e088 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e12c:	68a3      	ldr	r3, [r4, #8]
 800e12e:	2b00      	cmp	r3, #0
 800e130:	d1ab      	bne.n	800e08a <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e132:	6823      	ldr	r3, [r4, #0]
 800e134:	9001      	str	r0, [sp, #4]
 800e136:	68da      	ldr	r2, [r3, #12]
 800e138:	9201      	str	r2, [sp, #4]
 800e13a:	689b      	ldr	r3, [r3, #8]
 800e13c:	9301      	str	r3, [sp, #4]
 800e13e:	9b01      	ldr	r3, [sp, #4]
 800e140:	e7a3      	b.n	800e08a <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 800e142:	2002      	movs	r0, #2
 800e144:	e7a1      	b.n	800e08a <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 800e146:	2002      	movs	r0, #2
 800e148:	e7a5      	b.n	800e096 <HAL_SPI_TransmitReceive+0x134>

0800e14a <HAL_SPI_Receive>:
{
 800e14a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e14e:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800e150:	6843      	ldr	r3, [r0, #4]
 800e152:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 800e156:	4604      	mov	r4, r0
 800e158:	4689      	mov	r9, r1
 800e15a:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800e15c:	d10c      	bne.n	800e178 <HAL_SPI_Receive+0x2e>
 800e15e:	6883      	ldr	r3, [r0, #8]
 800e160:	b953      	cbnz	r3, 800e178 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800e162:	2304      	movs	r3, #4
 800e164:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800e168:	4613      	mov	r3, r2
 800e16a:	9500      	str	r5, [sp, #0]
 800e16c:	460a      	mov	r2, r1
 800e16e:	f7ff fef8 	bl	800df62 <HAL_SPI_TransmitReceive>
}
 800e172:	b003      	add	sp, #12
 800e174:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 800e178:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800e17c:	2b01      	cmp	r3, #1
 800e17e:	f000 8084 	beq.w	800e28a <HAL_SPI_Receive+0x140>
 800e182:	2301      	movs	r3, #1
 800e184:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e188:	f7fd fc6a 	bl	800ba60 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800e18c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800e190:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800e192:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800e194:	b2d8      	uxtb	r0, r3
 800e196:	d176      	bne.n	800e286 <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 800e198:	f1b9 0f00 	cmp.w	r9, #0
 800e19c:	d05a      	beq.n	800e254 <HAL_SPI_Receive+0x10a>
 800e19e:	2f00      	cmp	r7, #0
 800e1a0:	d058      	beq.n	800e254 <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e1a2:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800e1a4:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800e1a8:	2304      	movs	r3, #4
 800e1aa:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e1ae:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 800e1b0:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e1b2:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e1b4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 800e1b8:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800e1ba:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 800e1bc:	bf08      	it	eq
 800e1be:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800e1c0:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 800e1c2:	bf08      	it	eq
 800e1c4:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 800e1c8:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 800e1cc:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 800e1ce:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 800e1d0:	bf08      	it	eq
 800e1d2:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e1d4:	681a      	ldr	r2, [r3, #0]
 800e1d6:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800e1d8:	bf5e      	ittt	pl
 800e1da:	681a      	ldrpl	r2, [r3, #0]
 800e1dc:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 800e1e0:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800e1e2:	68e3      	ldr	r3, [r4, #12]
 800e1e4:	b1f3      	cbz	r3, 800e224 <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 800e1e6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e1e8:	b29b      	uxth	r3, r3
 800e1ea:	b1fb      	cbz	r3, 800e22c <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800e1ec:	6823      	ldr	r3, [r4, #0]
 800e1ee:	689a      	ldr	r2, [r3, #8]
 800e1f0:	07d2      	lsls	r2, r2, #31
 800e1f2:	d539      	bpl.n	800e268 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e1f4:	68da      	ldr	r2, [r3, #12]
 800e1f6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e1f8:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e1fc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e1fe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e200:	3b01      	subs	r3, #1
 800e202:	b29b      	uxth	r3, r3
 800e204:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800e206:	e7ee      	b.n	800e1e6 <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800e208:	6823      	ldr	r3, [r4, #0]
 800e20a:	689a      	ldr	r2, [r3, #8]
 800e20c:	07d0      	lsls	r0, r2, #31
 800e20e:	d518      	bpl.n	800e242 <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800e210:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e212:	7b1b      	ldrb	r3, [r3, #12]
 800e214:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800e216:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e218:	3301      	adds	r3, #1
 800e21a:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e21c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e21e:	3b01      	subs	r3, #1
 800e220:	b29b      	uxth	r3, r3
 800e222:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800e224:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e226:	b29b      	uxth	r3, r3
 800e228:	2b00      	cmp	r3, #0
 800e22a:	d1ed      	bne.n	800e208 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800e22c:	4642      	mov	r2, r8
 800e22e:	4629      	mov	r1, r5
 800e230:	4620      	mov	r0, r4
 800e232:	f7ff fd59 	bl	800dce8 <SPI_EndRxTransaction>
 800e236:	bb18      	cbnz	r0, 800e280 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e238:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800e23a:	3800      	subs	r0, #0
 800e23c:	bf18      	it	ne
 800e23e:	2001      	movne	r0, #1
error :
 800e240:	e008      	b.n	800e254 <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e242:	f7fd fc0d 	bl	800ba60 <HAL_GetTick>
 800e246:	eba0 0008 	sub.w	r0, r0, r8
 800e24a:	42a8      	cmp	r0, r5
 800e24c:	d309      	bcc.n	800e262 <HAL_SPI_Receive+0x118>
 800e24e:	1c69      	adds	r1, r5, #1
 800e250:	d0e8      	beq.n	800e224 <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 800e252:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800e254:	2301      	movs	r3, #1
 800e256:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e25a:	2300      	movs	r3, #0
 800e25c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 800e260:	e787      	b.n	800e172 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e262:	2d00      	cmp	r5, #0
 800e264:	d1de      	bne.n	800e224 <HAL_SPI_Receive+0xda>
 800e266:	e7f4      	b.n	800e252 <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e268:	f7fd fbfa 	bl	800ba60 <HAL_GetTick>
 800e26c:	eba0 0008 	sub.w	r0, r0, r8
 800e270:	42a8      	cmp	r0, r5
 800e272:	d302      	bcc.n	800e27a <HAL_SPI_Receive+0x130>
 800e274:	1c6b      	adds	r3, r5, #1
 800e276:	d0b6      	beq.n	800e1e6 <HAL_SPI_Receive+0x9c>
 800e278:	e7eb      	b.n	800e252 <HAL_SPI_Receive+0x108>
 800e27a:	2d00      	cmp	r5, #0
 800e27c:	d1b3      	bne.n	800e1e6 <HAL_SPI_Receive+0x9c>
 800e27e:	e7e8      	b.n	800e252 <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e280:	2320      	movs	r3, #32
 800e282:	6563      	str	r3, [r4, #84]	; 0x54
 800e284:	e7d8      	b.n	800e238 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 800e286:	2002      	movs	r0, #2
 800e288:	e7e4      	b.n	800e254 <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 800e28a:	2002      	movs	r0, #2
 800e28c:	e771      	b.n	800e172 <HAL_SPI_Receive+0x28>
	...

0800e290 <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800e290:	6a03      	ldr	r3, [r0, #32]
 800e292:	f023 0301 	bic.w	r3, r3, #1
 800e296:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800e298:	6a03      	ldr	r3, [r0, #32]
{
 800e29a:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800e29c:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800e29e:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800e2a0:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800e2a2:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800e2a6:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800e2a8:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800e2aa:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 800e2ae:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800e2b0:	4d0e      	ldr	r5, [pc, #56]	; (800e2ec <TIM_OC1_SetConfig+0x5c>)
 800e2b2:	42a8      	cmp	r0, r5
 800e2b4:	d002      	beq.n	800e2bc <TIM_OC1_SetConfig+0x2c>
 800e2b6:	4e0e      	ldr	r6, [pc, #56]	; (800e2f0 <TIM_OC1_SetConfig+0x60>)
 800e2b8:	42b0      	cmp	r0, r6
 800e2ba:	d110      	bne.n	800e2de <TIM_OC1_SetConfig+0x4e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 800e2bc:	68ce      	ldr	r6, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800e2be:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 800e2c2:	4333      	orrs	r3, r6
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e2c4:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800e2c6:	f023 0304 	bic.w	r3, r3, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e2ca:	d002      	beq.n	800e2d2 <TIM_OC1_SetConfig+0x42>
 800e2cc:	4d08      	ldr	r5, [pc, #32]	; (800e2f0 <TIM_OC1_SetConfig+0x60>)
 800e2ce:	42a8      	cmp	r0, r5
 800e2d0:	d105      	bne.n	800e2de <TIM_OC1_SetConfig+0x4e>
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800e2d2:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800e2d6:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800e2da:	4335      	orrs	r5, r6
 800e2dc:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800e2de:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800e2e0:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800e2e2:	684a      	ldr	r2, [r1, #4]
 800e2e4:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800e2e6:	6203      	str	r3, [r0, #32]
}
 800e2e8:	bd70      	pop	{r4, r5, r6, pc}
 800e2ea:	bf00      	nop
 800e2ec:	40010000 	.word	0x40010000
 800e2f0:	40010400 	.word	0x40010400

0800e2f4 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800e2f4:	6a03      	ldr	r3, [r0, #32]
 800e2f6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800e2fa:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800e2fc:	6a03      	ldr	r3, [r0, #32]
{
 800e2fe:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800e300:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800e302:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800e304:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800e306:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800e30a:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800e30c:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800e30e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800e312:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800e316:	4d11      	ldr	r5, [pc, #68]	; (800e35c <TIM_OC3_SetConfig+0x68>)
 800e318:	42a8      	cmp	r0, r5
 800e31a:	d003      	beq.n	800e324 <TIM_OC3_SetConfig+0x30>
 800e31c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e320:	42a8      	cmp	r0, r5
 800e322:	d114      	bne.n	800e34e <TIM_OC3_SetConfig+0x5a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800e324:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800e326:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800e32a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e32e:	4d0b      	ldr	r5, [pc, #44]	; (800e35c <TIM_OC3_SetConfig+0x68>)
 800e330:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800e332:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e336:	d003      	beq.n	800e340 <TIM_OC3_SetConfig+0x4c>
 800e338:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e33c:	42a8      	cmp	r0, r5
 800e33e:	d106      	bne.n	800e34e <TIM_OC3_SetConfig+0x5a>
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800e340:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800e344:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800e348:	4335      	orrs	r5, r6
 800e34a:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800e34e:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800e350:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800e352:	684a      	ldr	r2, [r1, #4]
 800e354:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800e356:	6203      	str	r3, [r0, #32]
}
 800e358:	bd70      	pop	{r4, r5, r6, pc}
 800e35a:	bf00      	nop
 800e35c:	40010000 	.word	0x40010000

0800e360 <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800e360:	6a03      	ldr	r3, [r0, #32]
 800e362:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800e366:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800e368:	6a03      	ldr	r3, [r0, #32]
{
 800e36a:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800e36c:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800e36e:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800e370:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800e372:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800e376:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800e37a:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800e37c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800e380:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e384:	4d08      	ldr	r5, [pc, #32]	; (800e3a8 <TIM_OC4_SetConfig+0x48>)
 800e386:	42a8      	cmp	r0, r5
 800e388:	d003      	beq.n	800e392 <TIM_OC4_SetConfig+0x32>
 800e38a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e38e:	42a8      	cmp	r0, r5
 800e390:	d104      	bne.n	800e39c <TIM_OC4_SetConfig+0x3c>

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800e392:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800e394:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800e398:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800e39c:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800e39e:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800e3a0:	684a      	ldr	r2, [r1, #4]
 800e3a2:	6402      	str	r2, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800e3a4:	6203      	str	r3, [r0, #32]
}
 800e3a6:	bd30      	pop	{r4, r5, pc}
 800e3a8:	40010000 	.word	0x40010000

0800e3ac <HAL_TIM_Base_Start>:
  htim->State = HAL_TIM_STATE_BUSY;
 800e3ac:	2302      	movs	r3, #2
 800e3ae:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800e3b2:	6803      	ldr	r3, [r0, #0]
 800e3b4:	689a      	ldr	r2, [r3, #8]
 800e3b6:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800e3ba:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 800e3bc:	bf1e      	ittt	ne
 800e3be:	681a      	ldrne	r2, [r3, #0]
 800e3c0:	f042 0201 	orrne.w	r2, r2, #1
 800e3c4:	601a      	strne	r2, [r3, #0]
  htim->State = HAL_TIM_STATE_READY;
 800e3c6:	2301      	movs	r3, #1
 800e3c8:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
}
 800e3cc:	2000      	movs	r0, #0
 800e3ce:	4770      	bx	lr

0800e3d0 <HAL_TIM_Base_Start_IT>:
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800e3d0:	6803      	ldr	r3, [r0, #0]
 800e3d2:	68da      	ldr	r2, [r3, #12]
 800e3d4:	f042 0201 	orr.w	r2, r2, #1
 800e3d8:	60da      	str	r2, [r3, #12]
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800e3da:	689a      	ldr	r2, [r3, #8]
 800e3dc:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800e3e0:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 800e3e2:	bf1e      	ittt	ne
 800e3e4:	681a      	ldrne	r2, [r3, #0]
 800e3e6:	f042 0201 	orrne.w	r2, r2, #1
 800e3ea:	601a      	strne	r2, [r3, #0]
}
 800e3ec:	2000      	movs	r0, #0
 800e3ee:	4770      	bx	lr

0800e3f0 <HAL_TIM_OC_DelayElapsedCallback>:
 800e3f0:	4770      	bx	lr

0800e3f2 <HAL_TIM_IC_CaptureCallback>:
 800e3f2:	4770      	bx	lr

0800e3f4 <HAL_TIM_PWM_PulseFinishedCallback>:
 800e3f4:	4770      	bx	lr

0800e3f6 <HAL_TIM_TriggerCallback>:
 800e3f6:	4770      	bx	lr

0800e3f8 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800e3f8:	6803      	ldr	r3, [r0, #0]
 800e3fa:	691a      	ldr	r2, [r3, #16]
 800e3fc:	0791      	lsls	r1, r2, #30
{
 800e3fe:	b510      	push	{r4, lr}
 800e400:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800e402:	d50e      	bpl.n	800e422 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800e404:	68da      	ldr	r2, [r3, #12]
 800e406:	0792      	lsls	r2, r2, #30
 800e408:	d50b      	bpl.n	800e422 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800e40a:	f06f 0202 	mvn.w	r2, #2
 800e40e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800e410:	2201      	movs	r2, #1
 800e412:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800e414:	699b      	ldr	r3, [r3, #24]
 800e416:	079b      	lsls	r3, r3, #30
 800e418:	d077      	beq.n	800e50a <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 800e41a:	f7ff ffea 	bl	800e3f2 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e41e:	2300      	movs	r3, #0
 800e420:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800e422:	6823      	ldr	r3, [r4, #0]
 800e424:	691a      	ldr	r2, [r3, #16]
 800e426:	0750      	lsls	r0, r2, #29
 800e428:	d510      	bpl.n	800e44c <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800e42a:	68da      	ldr	r2, [r3, #12]
 800e42c:	0751      	lsls	r1, r2, #29
 800e42e:	d50d      	bpl.n	800e44c <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800e430:	f06f 0204 	mvn.w	r2, #4
 800e434:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800e436:	2202      	movs	r2, #2
 800e438:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800e43a:	699b      	ldr	r3, [r3, #24]
 800e43c:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800e440:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800e442:	d068      	beq.n	800e516 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800e444:	f7ff ffd5 	bl	800e3f2 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e448:	2300      	movs	r3, #0
 800e44a:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800e44c:	6823      	ldr	r3, [r4, #0]
 800e44e:	691a      	ldr	r2, [r3, #16]
 800e450:	0712      	lsls	r2, r2, #28
 800e452:	d50f      	bpl.n	800e474 <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800e454:	68da      	ldr	r2, [r3, #12]
 800e456:	0710      	lsls	r0, r2, #28
 800e458:	d50c      	bpl.n	800e474 <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800e45a:	f06f 0208 	mvn.w	r2, #8
 800e45e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800e460:	2204      	movs	r2, #4
 800e462:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800e464:	69db      	ldr	r3, [r3, #28]
 800e466:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800e468:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800e46a:	d05a      	beq.n	800e522 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800e46c:	f7ff ffc1 	bl	800e3f2 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e470:	2300      	movs	r3, #0
 800e472:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800e474:	6823      	ldr	r3, [r4, #0]
 800e476:	691a      	ldr	r2, [r3, #16]
 800e478:	06d2      	lsls	r2, r2, #27
 800e47a:	d510      	bpl.n	800e49e <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800e47c:	68da      	ldr	r2, [r3, #12]
 800e47e:	06d0      	lsls	r0, r2, #27
 800e480:	d50d      	bpl.n	800e49e <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800e482:	f06f 0210 	mvn.w	r2, #16
 800e486:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800e488:	2208      	movs	r2, #8
 800e48a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800e48c:	69db      	ldr	r3, [r3, #28]
 800e48e:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800e492:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800e494:	d04b      	beq.n	800e52e <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800e496:	f7ff ffac 	bl	800e3f2 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e49a:	2300      	movs	r3, #0
 800e49c:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800e49e:	6823      	ldr	r3, [r4, #0]
 800e4a0:	691a      	ldr	r2, [r3, #16]
 800e4a2:	07d1      	lsls	r1, r2, #31
 800e4a4:	d508      	bpl.n	800e4b8 <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800e4a6:	68da      	ldr	r2, [r3, #12]
 800e4a8:	07d2      	lsls	r2, r2, #31
 800e4aa:	d505      	bpl.n	800e4b8 <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800e4ac:	f06f 0201 	mvn.w	r2, #1
 800e4b0:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800e4b2:	4620      	mov	r0, r4
 800e4b4:	f7f4 fc38 	bl	8002d28 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800e4b8:	6823      	ldr	r3, [r4, #0]
 800e4ba:	691a      	ldr	r2, [r3, #16]
 800e4bc:	0610      	lsls	r0, r2, #24
 800e4be:	d508      	bpl.n	800e4d2 <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800e4c0:	68da      	ldr	r2, [r3, #12]
 800e4c2:	0611      	lsls	r1, r2, #24
 800e4c4:	d505      	bpl.n	800e4d2 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800e4c6:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800e4ca:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800e4cc:	4620      	mov	r0, r4
 800e4ce:	f000 fab8 	bl	800ea42 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800e4d2:	6823      	ldr	r3, [r4, #0]
 800e4d4:	691a      	ldr	r2, [r3, #16]
 800e4d6:	0652      	lsls	r2, r2, #25
 800e4d8:	d508      	bpl.n	800e4ec <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800e4da:	68da      	ldr	r2, [r3, #12]
 800e4dc:	0650      	lsls	r0, r2, #25
 800e4de:	d505      	bpl.n	800e4ec <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800e4e0:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800e4e4:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800e4e6:	4620      	mov	r0, r4
 800e4e8:	f7ff ff85 	bl	800e3f6 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800e4ec:	6823      	ldr	r3, [r4, #0]
 800e4ee:	691a      	ldr	r2, [r3, #16]
 800e4f0:	0691      	lsls	r1, r2, #26
 800e4f2:	d522      	bpl.n	800e53a <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800e4f4:	68da      	ldr	r2, [r3, #12]
 800e4f6:	0692      	lsls	r2, r2, #26
 800e4f8:	d51f      	bpl.n	800e53a <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800e4fa:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800e4fe:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800e500:	611a      	str	r2, [r3, #16]
}
 800e502:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800e506:	f000 ba9b 	b.w	800ea40 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800e50a:	f7ff ff71 	bl	800e3f0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e50e:	4620      	mov	r0, r4
 800e510:	f7ff ff70 	bl	800e3f4 <HAL_TIM_PWM_PulseFinishedCallback>
 800e514:	e783      	b.n	800e41e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e516:	f7ff ff6b 	bl	800e3f0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e51a:	4620      	mov	r0, r4
 800e51c:	f7ff ff6a 	bl	800e3f4 <HAL_TIM_PWM_PulseFinishedCallback>
 800e520:	e792      	b.n	800e448 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e522:	f7ff ff65 	bl	800e3f0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e526:	4620      	mov	r0, r4
 800e528:	f7ff ff64 	bl	800e3f4 <HAL_TIM_PWM_PulseFinishedCallback>
 800e52c:	e7a0      	b.n	800e470 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e52e:	f7ff ff5f 	bl	800e3f0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e532:	4620      	mov	r0, r4
 800e534:	f7ff ff5e 	bl	800e3f4 <HAL_TIM_PWM_PulseFinishedCallback>
 800e538:	e7af      	b.n	800e49a <HAL_TIM_IRQHandler+0xa2>
}
 800e53a:	bd10      	pop	{r4, pc}

0800e53c <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800e53c:	4a30      	ldr	r2, [pc, #192]	; (800e600 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800e53e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800e540:	4290      	cmp	r0, r2
 800e542:	d012      	beq.n	800e56a <TIM_Base_SetConfig+0x2e>
 800e544:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800e548:	d00f      	beq.n	800e56a <TIM_Base_SetConfig+0x2e>
 800e54a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800e54e:	4290      	cmp	r0, r2
 800e550:	d00b      	beq.n	800e56a <TIM_Base_SetConfig+0x2e>
 800e552:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e556:	4290      	cmp	r0, r2
 800e558:	d007      	beq.n	800e56a <TIM_Base_SetConfig+0x2e>
 800e55a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e55e:	4290      	cmp	r0, r2
 800e560:	d003      	beq.n	800e56a <TIM_Base_SetConfig+0x2e>
 800e562:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800e566:	4290      	cmp	r0, r2
 800e568:	d119      	bne.n	800e59e <TIM_Base_SetConfig+0x62>
    tmpcr1 |= Structure->CounterMode;
 800e56a:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800e56c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800e570:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800e572:	4a23      	ldr	r2, [pc, #140]	; (800e600 <TIM_Base_SetConfig+0xc4>)
 800e574:	4290      	cmp	r0, r2
 800e576:	d029      	beq.n	800e5cc <TIM_Base_SetConfig+0x90>
 800e578:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800e57c:	d026      	beq.n	800e5cc <TIM_Base_SetConfig+0x90>
 800e57e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800e582:	4290      	cmp	r0, r2
 800e584:	d022      	beq.n	800e5cc <TIM_Base_SetConfig+0x90>
 800e586:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e58a:	4290      	cmp	r0, r2
 800e58c:	d01e      	beq.n	800e5cc <TIM_Base_SetConfig+0x90>
 800e58e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e592:	4290      	cmp	r0, r2
 800e594:	d01a      	beq.n	800e5cc <TIM_Base_SetConfig+0x90>
 800e596:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800e59a:	4290      	cmp	r0, r2
 800e59c:	d016      	beq.n	800e5cc <TIM_Base_SetConfig+0x90>
 800e59e:	4a19      	ldr	r2, [pc, #100]	; (800e604 <TIM_Base_SetConfig+0xc8>)
 800e5a0:	4290      	cmp	r0, r2
 800e5a2:	d013      	beq.n	800e5cc <TIM_Base_SetConfig+0x90>
 800e5a4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e5a8:	4290      	cmp	r0, r2
 800e5aa:	d00f      	beq.n	800e5cc <TIM_Base_SetConfig+0x90>
 800e5ac:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e5b0:	4290      	cmp	r0, r2
 800e5b2:	d00b      	beq.n	800e5cc <TIM_Base_SetConfig+0x90>
 800e5b4:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800e5b8:	4290      	cmp	r0, r2
 800e5ba:	d007      	beq.n	800e5cc <TIM_Base_SetConfig+0x90>
 800e5bc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e5c0:	4290      	cmp	r0, r2
 800e5c2:	d003      	beq.n	800e5cc <TIM_Base_SetConfig+0x90>
 800e5c4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e5c8:	4290      	cmp	r0, r2
 800e5ca:	d103      	bne.n	800e5d4 <TIM_Base_SetConfig+0x98>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800e5cc:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800e5ce:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800e5d2:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800e5d4:	694a      	ldr	r2, [r1, #20]
 800e5d6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800e5da:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 800e5dc:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800e5de:	688b      	ldr	r3, [r1, #8]
 800e5e0:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800e5e2:	680b      	ldr	r3, [r1, #0]
 800e5e4:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800e5e6:	4b06      	ldr	r3, [pc, #24]	; (800e600 <TIM_Base_SetConfig+0xc4>)
 800e5e8:	4298      	cmp	r0, r3
 800e5ea:	d003      	beq.n	800e5f4 <TIM_Base_SetConfig+0xb8>
 800e5ec:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800e5f0:	4298      	cmp	r0, r3
 800e5f2:	d101      	bne.n	800e5f8 <TIM_Base_SetConfig+0xbc>
    TIMx->RCR = Structure->RepetitionCounter;
 800e5f4:	690b      	ldr	r3, [r1, #16]
 800e5f6:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 800e5f8:	2301      	movs	r3, #1
 800e5fa:	6143      	str	r3, [r0, #20]
}
 800e5fc:	4770      	bx	lr
 800e5fe:	bf00      	nop
 800e600:	40010000 	.word	0x40010000
 800e604:	40014000 	.word	0x40014000

0800e608 <HAL_TIM_Base_Init>:
{
 800e608:	b510      	push	{r4, lr}
  if (htim == NULL)
 800e60a:	4604      	mov	r4, r0
 800e60c:	b1a0      	cbz	r0, 800e638 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 800e60e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800e612:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e616:	b91b      	cbnz	r3, 800e620 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800e618:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800e61c:	f7f4 fdea 	bl	80031f4 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800e620:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800e622:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800e624:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800e628:	1d21      	adds	r1, r4, #4
 800e62a:	f7ff ff87 	bl	800e53c <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 800e62e:	2301      	movs	r3, #1
 800e630:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800e634:	2000      	movs	r0, #0
}
 800e636:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800e638:	2001      	movs	r0, #1
 800e63a:	e7fc      	b.n	800e636 <HAL_TIM_Base_Init+0x2e>

0800e63c <HAL_TIM_OC_Init>:
{
 800e63c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800e63e:	4604      	mov	r4, r0
 800e640:	b1a0      	cbz	r0, 800e66c <HAL_TIM_OC_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 800e642:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800e646:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e64a:	b91b      	cbnz	r3, 800e654 <HAL_TIM_OC_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800e64c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_OC_MspInit(htim);
 800e650:	f7f4 fe10 	bl	8003274 <HAL_TIM_OC_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800e654:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance,  &htim->Init);
 800e656:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800e658:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance,  &htim->Init);
 800e65c:	1d21      	adds	r1, r4, #4
 800e65e:	f7ff ff6d 	bl	800e53c <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 800e662:	2301      	movs	r3, #1
 800e664:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800e668:	2000      	movs	r0, #0
}
 800e66a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800e66c:	2001      	movs	r0, #1
 800e66e:	e7fc      	b.n	800e66a <HAL_TIM_OC_Init+0x2e>

0800e670 <HAL_TIM_PWM_Init>:
{
 800e670:	b510      	push	{r4, lr}
  if (htim == NULL)
 800e672:	4604      	mov	r4, r0
 800e674:	b1a0      	cbz	r0, 800e6a0 <HAL_TIM_PWM_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 800e676:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800e67a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e67e:	b91b      	cbnz	r3, 800e688 <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800e680:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800e684:	f7f4 fdce 	bl	8003224 <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800e688:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800e68a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800e68c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800e690:	1d21      	adds	r1, r4, #4
 800e692:	f7ff ff53 	bl	800e53c <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 800e696:	2301      	movs	r3, #1
 800e698:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800e69c:	2000      	movs	r0, #0
}
 800e69e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800e6a0:	2001      	movs	r0, #1
 800e6a2:	e7fc      	b.n	800e69e <HAL_TIM_PWM_Init+0x2e>

0800e6a4 <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800e6a4:	6a03      	ldr	r3, [r0, #32]
 800e6a6:	f023 0310 	bic.w	r3, r3, #16
 800e6aa:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 800e6ac:	6a03      	ldr	r3, [r0, #32]
{
 800e6ae:	b570      	push	{r4, r5, r6, lr}
  tmpcr2 =  TIMx->CR2;
 800e6b0:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 800e6b2:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800e6b4:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800e6b6:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800e6ba:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800e6be:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800e6c0:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800e6c4:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800e6c8:	4d10      	ldr	r5, [pc, #64]	; (800e70c <TIM_OC2_SetConfig+0x68>)
 800e6ca:	42a8      	cmp	r0, r5
 800e6cc:	d003      	beq.n	800e6d6 <TIM_OC2_SetConfig+0x32>
 800e6ce:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e6d2:	42a8      	cmp	r0, r5
 800e6d4:	d114      	bne.n	800e700 <TIM_OC2_SetConfig+0x5c>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800e6d6:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800e6d8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800e6dc:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e6e0:	4d0a      	ldr	r5, [pc, #40]	; (800e70c <TIM_OC2_SetConfig+0x68>)
 800e6e2:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800e6e4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e6e8:	d003      	beq.n	800e6f2 <TIM_OC2_SetConfig+0x4e>
 800e6ea:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e6ee:	42a8      	cmp	r0, r5
 800e6f0:	d106      	bne.n	800e700 <TIM_OC2_SetConfig+0x5c>
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800e6f2:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800e6f6:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800e6fa:	4335      	orrs	r5, r6
 800e6fc:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 800e700:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 800e702:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800e704:	684a      	ldr	r2, [r1, #4]
 800e706:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800e708:	6203      	str	r3, [r0, #32]
}
 800e70a:	bd70      	pop	{r4, r5, r6, pc}
 800e70c:	40010000 	.word	0x40010000

0800e710 <HAL_TIM_OC_ConfigChannel>:
{
 800e710:	b510      	push	{r4, lr}
  __HAL_LOCK(htim);
 800e712:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800e716:	2b01      	cmp	r3, #1
{
 800e718:	4604      	mov	r4, r0
 800e71a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 800e71e:	d010      	beq.n	800e742 <HAL_TIM_OC_ConfigChannel+0x32>
 800e720:	2301      	movs	r3, #1
  switch (Channel)
 800e722:	2a08      	cmp	r2, #8
  __HAL_LOCK(htim);
 800e724:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_BUSY;
 800e728:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  switch (Channel)
 800e72c:	d018      	beq.n	800e760 <HAL_TIM_OC_ConfigChannel+0x50>
 800e72e:	d809      	bhi.n	800e744 <HAL_TIM_OC_ConfigChannel+0x34>
 800e730:	b172      	cbz	r2, 800e750 <HAL_TIM_OC_ConfigChannel+0x40>
 800e732:	2a04      	cmp	r2, #4
 800e734:	d010      	beq.n	800e758 <HAL_TIM_OC_ConfigChannel+0x48>
  htim->State = HAL_TIM_STATE_READY;
 800e736:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 800e738:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 800e73a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800e73e:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 800e742:	bd10      	pop	{r4, pc}
  switch (Channel)
 800e744:	2a0c      	cmp	r2, #12
 800e746:	d1f6      	bne.n	800e736 <HAL_TIM_OC_ConfigChannel+0x26>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800e748:	6820      	ldr	r0, [r4, #0]
 800e74a:	f7ff fe09 	bl	800e360 <TIM_OC4_SetConfig>
      break;
 800e74e:	e7f2      	b.n	800e736 <HAL_TIM_OC_ConfigChannel+0x26>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800e750:	6820      	ldr	r0, [r4, #0]
 800e752:	f7ff fd9d 	bl	800e290 <TIM_OC1_SetConfig>
      break;
 800e756:	e7ee      	b.n	800e736 <HAL_TIM_OC_ConfigChannel+0x26>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800e758:	6820      	ldr	r0, [r4, #0]
 800e75a:	f7ff ffa3 	bl	800e6a4 <TIM_OC2_SetConfig>
      break;
 800e75e:	e7ea      	b.n	800e736 <HAL_TIM_OC_ConfigChannel+0x26>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800e760:	6820      	ldr	r0, [r4, #0]
 800e762:	f7ff fdc7 	bl	800e2f4 <TIM_OC3_SetConfig>
      break;
 800e766:	e7e6      	b.n	800e736 <HAL_TIM_OC_ConfigChannel+0x26>

0800e768 <HAL_TIM_PWM_ConfigChannel>:
{
 800e768:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 800e76a:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800e76e:	2b01      	cmp	r3, #1
{
 800e770:	4604      	mov	r4, r0
 800e772:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 800e776:	d010      	beq.n	800e79a <HAL_TIM_PWM_ConfigChannel+0x32>
 800e778:	2301      	movs	r3, #1
  switch (Channel)
 800e77a:	2a08      	cmp	r2, #8
  __HAL_LOCK(htim);
 800e77c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_BUSY;
 800e780:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  switch (Channel)
 800e784:	d03f      	beq.n	800e806 <HAL_TIM_PWM_ConfigChannel+0x9e>
 800e786:	d809      	bhi.n	800e79c <HAL_TIM_PWM_ConfigChannel+0x34>
 800e788:	b1da      	cbz	r2, 800e7c2 <HAL_TIM_PWM_ConfigChannel+0x5a>
 800e78a:	2a04      	cmp	r2, #4
 800e78c:	d02a      	beq.n	800e7e4 <HAL_TIM_PWM_ConfigChannel+0x7c>
  htim->State = HAL_TIM_STATE_READY;
 800e78e:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 800e790:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 800e792:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800e796:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 800e79a:	bd38      	pop	{r3, r4, r5, pc}
  switch (Channel)
 800e79c:	2a0c      	cmp	r2, #12
 800e79e:	d1f6      	bne.n	800e78e <HAL_TIM_PWM_ConfigChannel+0x26>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800e7a0:	6820      	ldr	r0, [r4, #0]
 800e7a2:	f7ff fddd 	bl	800e360 <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800e7a6:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800e7a8:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800e7aa:	69da      	ldr	r2, [r3, #28]
 800e7ac:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800e7b0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800e7b2:	69da      	ldr	r2, [r3, #28]
 800e7b4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800e7b8:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800e7ba:	69da      	ldr	r2, [r3, #28]
 800e7bc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800e7c0:	e030      	b.n	800e824 <HAL_TIM_PWM_ConfigChannel+0xbc>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800e7c2:	6820      	ldr	r0, [r4, #0]
 800e7c4:	f7ff fd64 	bl	800e290 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800e7c8:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800e7ca:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800e7cc:	699a      	ldr	r2, [r3, #24]
 800e7ce:	f042 0208 	orr.w	r2, r2, #8
 800e7d2:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800e7d4:	699a      	ldr	r2, [r3, #24]
 800e7d6:	f022 0204 	bic.w	r2, r2, #4
 800e7da:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800e7dc:	699a      	ldr	r2, [r3, #24]
 800e7de:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800e7e0:	619a      	str	r2, [r3, #24]
      break;
 800e7e2:	e7d4      	b.n	800e78e <HAL_TIM_PWM_ConfigChannel+0x26>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800e7e4:	6820      	ldr	r0, [r4, #0]
 800e7e6:	f7ff ff5d 	bl	800e6a4 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800e7ea:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800e7ec:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800e7ee:	699a      	ldr	r2, [r3, #24]
 800e7f0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800e7f4:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800e7f6:	699a      	ldr	r2, [r3, #24]
 800e7f8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800e7fc:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800e7fe:	699a      	ldr	r2, [r3, #24]
 800e800:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800e804:	e7ec      	b.n	800e7e0 <HAL_TIM_PWM_ConfigChannel+0x78>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800e806:	6820      	ldr	r0, [r4, #0]
 800e808:	f7ff fd74 	bl	800e2f4 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800e80c:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800e80e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800e810:	69da      	ldr	r2, [r3, #28]
 800e812:	f042 0208 	orr.w	r2, r2, #8
 800e816:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800e818:	69da      	ldr	r2, [r3, #28]
 800e81a:	f022 0204 	bic.w	r2, r2, #4
 800e81e:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800e820:	69da      	ldr	r2, [r3, #28]
 800e822:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800e824:	61da      	str	r2, [r3, #28]
      break;
 800e826:	e7b2      	b.n	800e78e <HAL_TIM_PWM_ConfigChannel+0x26>

0800e828 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 800e828:	b510      	push	{r4, lr}
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800e82a:	6884      	ldr	r4, [r0, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e82c:	4311      	orrs	r1, r2
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800e82e:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e832:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
 800e836:	4323      	orrs	r3, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800e838:	6083      	str	r3, [r0, #8]
}
 800e83a:	bd10      	pop	{r4, pc}

0800e83c <HAL_TIM_ConfigClockSource>:
{
 800e83c:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(htim);
 800e83e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800e842:	2b01      	cmp	r3, #1
{
 800e844:	4604      	mov	r4, r0
 800e846:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 800e84a:	d027      	beq.n	800e89c <HAL_TIM_ConfigClockSource+0x60>
  htim->State = HAL_TIM_STATE_BUSY;
 800e84c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  __HAL_LOCK(htim);
 800e850:	2301      	movs	r3, #1
  tmpsmcr = htim->Instance->SMCR;
 800e852:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(htim);
 800e854:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800e858:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800e85a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800e85e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800e862:	6083      	str	r3, [r0, #8]
  switch (sClockSourceConfig->ClockSource)
 800e864:	680b      	ldr	r3, [r1, #0]
 800e866:	2b60      	cmp	r3, #96	; 0x60
 800e868:	d04d      	beq.n	800e906 <HAL_TIM_ConfigClockSource+0xca>
 800e86a:	d832      	bhi.n	800e8d2 <HAL_TIM_ConfigClockSource+0x96>
 800e86c:	2b40      	cmp	r3, #64	; 0x40
 800e86e:	d062      	beq.n	800e936 <HAL_TIM_ConfigClockSource+0xfa>
 800e870:	d815      	bhi.n	800e89e <HAL_TIM_ConfigClockSource+0x62>
 800e872:	2b20      	cmp	r3, #32
 800e874:	d003      	beq.n	800e87e <HAL_TIM_ConfigClockSource+0x42>
 800e876:	d809      	bhi.n	800e88c <HAL_TIM_ConfigClockSource+0x50>
 800e878:	f033 0210 	bics.w	r2, r3, #16
 800e87c:	d108      	bne.n	800e890 <HAL_TIM_ConfigClockSource+0x54>
  tmpsmcr = TIMx->SMCR;
 800e87e:	6882      	ldr	r2, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800e880:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800e884:	4313      	orrs	r3, r2
 800e886:	f043 0307 	orr.w	r3, r3, #7
 800e88a:	e020      	b.n	800e8ce <HAL_TIM_ConfigClockSource+0x92>
  switch (sClockSourceConfig->ClockSource)
 800e88c:	2b30      	cmp	r3, #48	; 0x30
 800e88e:	d0f6      	beq.n	800e87e <HAL_TIM_ConfigClockSource+0x42>
  htim->State = HAL_TIM_STATE_READY;
 800e890:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 800e892:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 800e894:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800e898:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 800e89c:	bd70      	pop	{r4, r5, r6, pc}
  switch (sClockSourceConfig->ClockSource)
 800e89e:	2b50      	cmp	r3, #80	; 0x50
 800e8a0:	d1f6      	bne.n	800e890 <HAL_TIM_ConfigClockSource+0x54>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800e8a2:	684a      	ldr	r2, [r1, #4]
 800e8a4:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 800e8a6:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800e8a8:	6a05      	ldr	r5, [r0, #32]
 800e8aa:	f025 0501 	bic.w	r5, r5, #1
 800e8ae:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 800e8b0:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800e8b2:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800e8b6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800e8ba:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 800e8be:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 800e8c0:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 800e8c2:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800e8c4:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800e8c6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800e8ca:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  TIMx->SMCR = tmpsmcr;
 800e8ce:	6083      	str	r3, [r0, #8]
}
 800e8d0:	e7de      	b.n	800e890 <HAL_TIM_ConfigClockSource+0x54>
  switch (sClockSourceConfig->ClockSource)
 800e8d2:	2b70      	cmp	r3, #112	; 0x70
 800e8d4:	d00c      	beq.n	800e8f0 <HAL_TIM_ConfigClockSource+0xb4>
 800e8d6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800e8da:	d1d9      	bne.n	800e890 <HAL_TIM_ConfigClockSource+0x54>
      TIM_ETR_SetConfig(htim->Instance,
 800e8dc:	68cb      	ldr	r3, [r1, #12]
 800e8de:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 800e8e2:	f7ff ffa1 	bl	800e828 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800e8e6:	6822      	ldr	r2, [r4, #0]
 800e8e8:	6893      	ldr	r3, [r2, #8]
 800e8ea:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800e8ee:	e008      	b.n	800e902 <HAL_TIM_ConfigClockSource+0xc6>
      TIM_ETR_SetConfig(htim->Instance,
 800e8f0:	68cb      	ldr	r3, [r1, #12]
 800e8f2:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 800e8f6:	f7ff ff97 	bl	800e828 <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 800e8fa:	6822      	ldr	r2, [r4, #0]
 800e8fc:	6893      	ldr	r3, [r2, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800e8fe:	f043 0377 	orr.w	r3, r3, #119	; 0x77
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800e902:	6093      	str	r3, [r2, #8]
      break;
 800e904:	e7c4      	b.n	800e890 <HAL_TIM_ConfigClockSource+0x54>
      TIM_TI2_ConfigInputStage(htim->Instance,
 800e906:	684d      	ldr	r5, [r1, #4]
 800e908:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800e90a:	6a01      	ldr	r1, [r0, #32]
 800e90c:	f021 0110 	bic.w	r1, r1, #16
 800e910:	6201      	str	r1, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 800e912:	6982      	ldr	r2, [r0, #24]
  tmpccer = TIMx->CCER;
 800e914:	6a03      	ldr	r3, [r0, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800e916:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800e91a:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800e91e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800e922:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800e926:	6182      	str	r2, [r0, #24]
  TIMx->CCER = tmpccer;
 800e928:	6203      	str	r3, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800e92a:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800e92c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800e930:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  TIMx->SMCR = tmpsmcr;
 800e934:	e7cb      	b.n	800e8ce <HAL_TIM_ConfigClockSource+0x92>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800e936:	684a      	ldr	r2, [r1, #4]
 800e938:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 800e93a:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800e93c:	6a05      	ldr	r5, [r0, #32]
 800e93e:	f025 0501 	bic.w	r5, r5, #1
 800e942:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 800e944:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800e946:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800e94a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800e94e:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 800e952:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 800e954:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 800e956:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800e958:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800e95a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800e95e:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  TIMx->SMCR = tmpsmcr;
 800e962:	e7b4      	b.n	800e8ce <HAL_TIM_ConfigClockSource+0x92>

0800e964 <TIM_CCxChannelCmd>:
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 800e964:	6a03      	ldr	r3, [r0, #32]
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800e966:	f001 011f 	and.w	r1, r1, #31
{
 800e96a:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800e96c:	2401      	movs	r4, #1
 800e96e:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 800e970:	ea23 0304 	bic.w	r3, r3, r4
 800e974:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800e976:	6a03      	ldr	r3, [r0, #32]
 800e978:	408a      	lsls	r2, r1
 800e97a:	431a      	orrs	r2, r3
 800e97c:	6202      	str	r2, [r0, #32]
}
 800e97e:	bd10      	pop	{r4, pc}

0800e980 <HAL_TIM_OC_Start>:
{
 800e980:	b510      	push	{r4, lr}
 800e982:	4604      	mov	r4, r0
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 800e984:	2201      	movs	r2, #1
 800e986:	6800      	ldr	r0, [r0, #0]
 800e988:	f7ff ffec 	bl	800e964 <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 800e98c:	6823      	ldr	r3, [r4, #0]
 800e98e:	4a0b      	ldr	r2, [pc, #44]	; (800e9bc <HAL_TIM_OC_Start+0x3c>)
 800e990:	4293      	cmp	r3, r2
 800e992:	d003      	beq.n	800e99c <HAL_TIM_OC_Start+0x1c>
 800e994:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e998:	4293      	cmp	r3, r2
 800e99a:	d103      	bne.n	800e9a4 <HAL_TIM_OC_Start+0x24>
    __HAL_TIM_MOE_ENABLE(htim);
 800e99c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800e99e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800e9a2:	645a      	str	r2, [r3, #68]	; 0x44
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800e9a4:	689a      	ldr	r2, [r3, #8]
 800e9a6:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800e9aa:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 800e9ac:	bf1e      	ittt	ne
 800e9ae:	681a      	ldrne	r2, [r3, #0]
 800e9b0:	f042 0201 	orrne.w	r2, r2, #1
 800e9b4:	601a      	strne	r2, [r3, #0]
}
 800e9b6:	2000      	movs	r0, #0
 800e9b8:	bd10      	pop	{r4, pc}
 800e9ba:	bf00      	nop
 800e9bc:	40010000 	.word	0x40010000

0800e9c0 <HAL_TIM_PWM_Start>:
 800e9c0:	f7ff bfde 	b.w	800e980 <HAL_TIM_OC_Start>

0800e9c4 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 800e9c4:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800e9c6:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800e9ca:	2b01      	cmp	r3, #1
 800e9cc:	f04f 0302 	mov.w	r3, #2
 800e9d0:	d032      	beq.n	800ea38 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800e9d2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800e9d6:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800e9d8:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 800e9da:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 800e9dc:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800e9de:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800e9e2:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800e9e4:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800e9e6:	4c15      	ldr	r4, [pc, #84]	; (800ea3c <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 800e9e8:	42a3      	cmp	r3, r4
 800e9ea:	d01a      	beq.n	800ea22 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800e9ec:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800e9f0:	d017      	beq.n	800ea22 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800e9f2:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 800e9f6:	42a3      	cmp	r3, r4
 800e9f8:	d013      	beq.n	800ea22 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800e9fa:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800e9fe:	42a3      	cmp	r3, r4
 800ea00:	d00f      	beq.n	800ea22 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ea02:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ea06:	42a3      	cmp	r3, r4
 800ea08:	d00b      	beq.n	800ea22 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ea0a:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 800ea0e:	42a3      	cmp	r3, r4
 800ea10:	d007      	beq.n	800ea22 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ea12:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 800ea16:	42a3      	cmp	r3, r4
 800ea18:	d003      	beq.n	800ea22 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ea1a:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800ea1e:	42a3      	cmp	r3, r4
 800ea20:	d104      	bne.n	800ea2c <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800ea22:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800ea24:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800ea28:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800ea2a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800ea2c:	2301      	movs	r3, #1
 800ea2e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800ea32:	2300      	movs	r3, #0
 800ea34:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 800ea38:	4618      	mov	r0, r3

  return HAL_OK;
}
 800ea3a:	bd30      	pop	{r4, r5, pc}
 800ea3c:	40010000 	.word	0x40010000

0800ea40 <HAL_TIMEx_CommutCallback>:
 800ea40:	4770      	bx	lr

0800ea42 <HAL_TIMEx_BreakCallback>:
 800ea42:	4770      	bx	lr

0800ea44 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800ea44:	6803      	ldr	r3, [r0, #0]
 800ea46:	68da      	ldr	r2, [r3, #12]
 800ea48:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800ea4c:	60da      	str	r2, [r3, #12]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800ea4e:	695a      	ldr	r2, [r3, #20]
 800ea50:	f022 0201 	bic.w	r2, r2, #1
 800ea54:	615a      	str	r2, [r3, #20]

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800ea56:	2320      	movs	r3, #32
 800ea58:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
}
 800ea5c:	4770      	bx	lr
	...

0800ea60 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800ea60:	b538      	push	{r3, r4, r5, lr}
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800ea62:	6803      	ldr	r3, [r0, #0]
 800ea64:	68c1      	ldr	r1, [r0, #12]
 800ea66:	691a      	ldr	r2, [r3, #16]
{
 800ea68:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800ea6a:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 800ea6e:	430a      	orrs	r2, r1
 800ea70:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800ea72:	6925      	ldr	r5, [r4, #16]
 800ea74:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1,
 800ea76:	68d9      	ldr	r1, [r3, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800ea78:	69c0      	ldr	r0, [r0, #28]
 800ea7a:	432a      	orrs	r2, r5
 800ea7c:	6965      	ldr	r5, [r4, #20]
  MODIFY_REG(huart->Instance->CR1,
 800ea7e:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800ea82:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1,
 800ea84:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800ea88:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1,
 800ea8a:	430a      	orrs	r2, r1
 800ea8c:	60da      	str	r2, [r3, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800ea8e:	695a      	ldr	r2, [r3, #20]
 800ea90:	69a1      	ldr	r1, [r4, #24]
 800ea92:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800ea96:	430a      	orrs	r2, r1

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800ea98:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800ea9c:	615a      	str	r2, [r3, #20]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800ea9e:	4a25      	ldr	r2, [pc, #148]	; (800eb34 <UART_SetConfig+0xd4>)
 800eaa0:	d128      	bne.n	800eaf4 <UART_SetConfig+0x94>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800eaa2:	4293      	cmp	r3, r2
 800eaa4:	d003      	beq.n	800eaae <UART_SetConfig+0x4e>
 800eaa6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800eaaa:	4293      	cmp	r3, r2
 800eaac:	d11f      	bne.n	800eaee <UART_SetConfig+0x8e>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 800eaae:	f7fe ff3f 	bl	800d930 <HAL_RCC_GetPCLK2Freq>
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800eab2:	6862      	ldr	r2, [r4, #4]
 800eab4:	2119      	movs	r1, #25
 800eab6:	1892      	adds	r2, r2, r2
 800eab8:	f04f 0300 	mov.w	r3, #0
 800eabc:	415b      	adcs	r3, r3
 800eabe:	fba0 0101 	umull	r0, r1, r0, r1
 800eac2:	f7f2 f951 	bl	8000d68 <__aeabi_uldivmod>
 800eac6:	2164      	movs	r1, #100	; 0x64
 800eac8:	fbb0 f5f1 	udiv	r5, r0, r1
 800eacc:	fb01 0315 	mls	r3, r1, r5, r0
 800ead0:	00db      	lsls	r3, r3, #3
 800ead2:	3332      	adds	r3, #50	; 0x32
 800ead4:	fbb3 f3f1 	udiv	r3, r3, r1
 800ead8:	f003 0207 	and.w	r2, r3, #7
 800eadc:	005b      	lsls	r3, r3, #1
 800eade:	6821      	ldr	r1, [r4, #0]
 800eae0:	eb02 1205 	add.w	r2, r2, r5, lsl #4
 800eae4:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800eae8:	4413      	add	r3, r2
 800eaea:	608b      	str	r3, [r1, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 800eaec:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 800eaee:	f7fe ff0f 	bl	800d910 <HAL_RCC_GetPCLK1Freq>
 800eaf2:	e7de      	b.n	800eab2 <UART_SetConfig+0x52>
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800eaf4:	4293      	cmp	r3, r2
 800eaf6:	d002      	beq.n	800eafe <UART_SetConfig+0x9e>
 800eaf8:	4a0f      	ldr	r2, [pc, #60]	; (800eb38 <UART_SetConfig+0xd8>)
 800eafa:	4293      	cmp	r3, r2
 800eafc:	d117      	bne.n	800eb2e <UART_SetConfig+0xce>
      pclk = HAL_RCC_GetPCLK2Freq();
 800eafe:	f7fe ff17 	bl	800d930 <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800eb02:	6863      	ldr	r3, [r4, #4]
 800eb04:	2119      	movs	r1, #25
 800eb06:	009a      	lsls	r2, r3, #2
 800eb08:	fba0 0101 	umull	r0, r1, r0, r1
 800eb0c:	0f9b      	lsrs	r3, r3, #30
 800eb0e:	f7f2 f92b 	bl	8000d68 <__aeabi_uldivmod>
 800eb12:	2264      	movs	r2, #100	; 0x64
 800eb14:	fbb0 f1f2 	udiv	r1, r0, r2
 800eb18:	fb02 0311 	mls	r3, r2, r1, r0
 800eb1c:	6824      	ldr	r4, [r4, #0]
 800eb1e:	011b      	lsls	r3, r3, #4
 800eb20:	3332      	adds	r3, #50	; 0x32
 800eb22:	fbb3 f3f2 	udiv	r3, r3, r2
 800eb26:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 800eb2a:	60a3      	str	r3, [r4, #8]
}
 800eb2c:	e7de      	b.n	800eaec <UART_SetConfig+0x8c>
      pclk = HAL_RCC_GetPCLK1Freq();
 800eb2e:	f7fe feef 	bl	800d910 <HAL_RCC_GetPCLK1Freq>
 800eb32:	e7e6      	b.n	800eb02 <UART_SetConfig+0xa2>
 800eb34:	40011000 	.word	0x40011000
 800eb38:	40011400 	.word	0x40011400

0800eb3c <HAL_UART_Init>:
{
 800eb3c:	b510      	push	{r4, lr}
  if (huart == NULL)
 800eb3e:	4604      	mov	r4, r0
 800eb40:	b340      	cbz	r0, 800eb94 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 800eb42:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800eb46:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800eb4a:	b91b      	cbnz	r3, 800eb54 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 800eb4c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_UART_MspInit(huart);
 800eb50:	f7f4 fbfe 	bl	8003350 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 800eb54:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800eb56:	2324      	movs	r3, #36	; 0x24
 800eb58:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UART_DISABLE(huart);
 800eb5c:	68d3      	ldr	r3, [r2, #12]
 800eb5e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800eb62:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 800eb64:	4620      	mov	r0, r4
 800eb66:	f7ff ff7b 	bl	800ea60 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800eb6a:	6823      	ldr	r3, [r4, #0]
 800eb6c:	691a      	ldr	r2, [r3, #16]
 800eb6e:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800eb72:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800eb74:	695a      	ldr	r2, [r3, #20]
 800eb76:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800eb7a:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 800eb7c:	68da      	ldr	r2, [r3, #12]
 800eb7e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800eb82:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800eb84:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800eb86:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800eb88:	63e0      	str	r0, [r4, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 800eb8a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 800eb8e:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
}
 800eb92:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800eb94:	2001      	movs	r0, #1
 800eb96:	e7fc      	b.n	800eb92 <HAL_UART_Init+0x56>

0800eb98 <HAL_UART_Transmit_IT>:
  if (huart->gState == HAL_UART_STATE_READY)
 800eb98:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800eb9c:	2b20      	cmp	r3, #32
 800eb9e:	d118      	bne.n	800ebd2 <HAL_UART_Transmit_IT+0x3a>
    if ((pData == NULL) || (Size == 0U))
 800eba0:	b1a9      	cbz	r1, 800ebce <HAL_UART_Transmit_IT+0x36>
 800eba2:	b1a2      	cbz	r2, 800ebce <HAL_UART_Transmit_IT+0x36>
    __HAL_LOCK(huart);
 800eba4:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800eba8:	2b01      	cmp	r3, #1
 800ebaa:	d012      	beq.n	800ebd2 <HAL_UART_Transmit_IT+0x3a>
    huart->TxXferCount = Size;
 800ebac:	84c2      	strh	r2, [r0, #38]	; 0x26
    huart->pTxBuffPtr = pData;
 800ebae:	6201      	str	r1, [r0, #32]
    huart->TxXferSize = Size;
 800ebb0:	8482      	strh	r2, [r0, #36]	; 0x24
    __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 800ebb2:	6801      	ldr	r1, [r0, #0]
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ebb4:	2300      	movs	r3, #0
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800ebb6:	2221      	movs	r2, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ebb8:	63c3      	str	r3, [r0, #60]	; 0x3c
    __HAL_UNLOCK(huart);
 800ebba:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800ebbe:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
    __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 800ebc2:	68ca      	ldr	r2, [r1, #12]
 800ebc4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800ebc8:	60ca      	str	r2, [r1, #12]
    return HAL_OK;
 800ebca:	4618      	mov	r0, r3
 800ebcc:	4770      	bx	lr
      return HAL_ERROR;
 800ebce:	2001      	movs	r0, #1
 800ebd0:	4770      	bx	lr
    return HAL_BUSY;
 800ebd2:	2002      	movs	r0, #2
}
 800ebd4:	4770      	bx	lr

0800ebd6 <HAL_UART_RxCpltCallback>:
 800ebd6:	4770      	bx	lr

0800ebd8 <UART_Receive_IT.isra.0>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800ebd8:	f890 303a 	ldrb.w	r3, [r0, #58]	; 0x3a
 800ebdc:	2b22      	cmp	r3, #34	; 0x22
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
 800ebde:	b510      	push	{r4, lr}
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800ebe0:	d124      	bne.n	800ec2c <UART_Receive_IT.isra.0+0x54>
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800ebe2:	6881      	ldr	r1, [r0, #8]
      if (huart->Init.Parity == UART_PARITY_NONE)
 800ebe4:	6904      	ldr	r4, [r0, #16]
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 800ebe6:	6802      	ldr	r2, [r0, #0]
      tmp = (uint16_t *) huart->pRxBuffPtr;
 800ebe8:	6a83      	ldr	r3, [r0, #40]	; 0x28
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800ebea:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 800ebee:	d122      	bne.n	800ec36 <UART_Receive_IT.isra.0+0x5e>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 800ebf0:	6852      	ldr	r2, [r2, #4]
      if (huart->Init.Parity == UART_PARITY_NONE)
 800ebf2:	b9e4      	cbnz	r4, 800ec2e <UART_Receive_IT.isra.0+0x56>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 800ebf4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800ebf8:	f823 2b02 	strh.w	r2, [r3], #2
        huart->pRxBuffPtr += 1U;
 800ebfc:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 800ebfe:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ec00:	3b01      	subs	r3, #1
 800ec02:	b29b      	uxth	r3, r3
 800ec04:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800ec06:	b98b      	cbnz	r3, 800ec2c <UART_Receive_IT.isra.0+0x54>
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 800ec08:	6803      	ldr	r3, [r0, #0]
 800ec0a:	68da      	ldr	r2, [r3, #12]
 800ec0c:	f022 0220 	bic.w	r2, r2, #32
 800ec10:	60da      	str	r2, [r3, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 800ec12:	68da      	ldr	r2, [r3, #12]
 800ec14:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800ec18:	60da      	str	r2, [r3, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 800ec1a:	695a      	ldr	r2, [r3, #20]
 800ec1c:	f022 0201 	bic.w	r2, r2, #1
 800ec20:	615a      	str	r2, [r3, #20]
      huart->RxState = HAL_UART_STATE_READY;
 800ec22:	2320      	movs	r3, #32
 800ec24:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
      HAL_UART_RxCpltCallback(huart);
 800ec28:	f7ff ffd5 	bl	800ebd6 <HAL_UART_RxCpltCallback>
}
 800ec2c:	bd10      	pop	{r4, pc}
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 800ec2e:	b2d2      	uxtb	r2, r2
 800ec30:	f823 2b01 	strh.w	r2, [r3], #1
 800ec34:	e7e2      	b.n	800ebfc <UART_Receive_IT.isra.0+0x24>
        huart->pRxBuffPtr += 1U;
 800ec36:	1c59      	adds	r1, r3, #1
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 800ec38:	6852      	ldr	r2, [r2, #4]
 800ec3a:	6281      	str	r1, [r0, #40]	; 0x28
      if (huart->Init.Parity == UART_PARITY_NONE)
 800ec3c:	b90c      	cbnz	r4, 800ec42 <UART_Receive_IT.isra.0+0x6a>
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 800ec3e:	701a      	strb	r2, [r3, #0]
 800ec40:	e7dd      	b.n	800ebfe <UART_Receive_IT.isra.0+0x26>
 800ec42:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800ec46:	e7fa      	b.n	800ec3e <UART_Receive_IT.isra.0+0x66>

0800ec48 <HAL_UART_ErrorCallback>:
 800ec48:	4770      	bx	lr
	...

0800ec4c <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 800ec4c:	6803      	ldr	r3, [r0, #0]
 800ec4e:	681a      	ldr	r2, [r3, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 800ec50:	68d9      	ldr	r1, [r3, #12]
{
 800ec52:	b570      	push	{r4, r5, r6, lr}
  if (errorflags == RESET)
 800ec54:	0716      	lsls	r6, r2, #28
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 800ec56:	695d      	ldr	r5, [r3, #20]
{
 800ec58:	4604      	mov	r4, r0
  if (errorflags == RESET)
 800ec5a:	d107      	bne.n	800ec6c <HAL_UART_IRQHandler+0x20>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 800ec5c:	0696      	lsls	r6, r2, #26
 800ec5e:	d55c      	bpl.n	800ed1a <HAL_UART_IRQHandler+0xce>
 800ec60:	068d      	lsls	r5, r1, #26
 800ec62:	d55a      	bpl.n	800ed1a <HAL_UART_IRQHandler+0xce>
}
 800ec64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      UART_Receive_IT(huart);
 800ec68:	f7ff bfb6 	b.w	800ebd8 <UART_Receive_IT.isra.0>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 800ec6c:	f005 0001 	and.w	r0, r5, #1
 800ec70:	f401 7590 	and.w	r5, r1, #288	; 0x120
 800ec74:	4305      	orrs	r5, r0
 800ec76:	d050      	beq.n	800ed1a <HAL_UART_IRQHandler+0xce>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 800ec78:	07d6      	lsls	r6, r2, #31
 800ec7a:	d505      	bpl.n	800ec88 <HAL_UART_IRQHandler+0x3c>
 800ec7c:	05cd      	lsls	r5, r1, #23
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 800ec7e:	bf42      	ittt	mi
 800ec80:	6be3      	ldrmi	r3, [r4, #60]	; 0x3c
 800ec82:	f043 0301 	orrmi.w	r3, r3, #1
 800ec86:	63e3      	strmi	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 800ec88:	0753      	lsls	r3, r2, #29
 800ec8a:	d504      	bpl.n	800ec96 <HAL_UART_IRQHandler+0x4a>
 800ec8c:	b118      	cbz	r0, 800ec96 <HAL_UART_IRQHandler+0x4a>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 800ec8e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ec90:	f043 0302 	orr.w	r3, r3, #2
 800ec94:	63e3      	str	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 800ec96:	0796      	lsls	r6, r2, #30
 800ec98:	d504      	bpl.n	800eca4 <HAL_UART_IRQHandler+0x58>
 800ec9a:	b118      	cbz	r0, 800eca4 <HAL_UART_IRQHandler+0x58>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 800ec9c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ec9e:	f043 0304 	orr.w	r3, r3, #4
 800eca2:	63e3      	str	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 800eca4:	0715      	lsls	r5, r2, #28
 800eca6:	d507      	bpl.n	800ecb8 <HAL_UART_IRQHandler+0x6c>
 800eca8:	f001 0320 	and.w	r3, r1, #32
 800ecac:	4303      	orrs	r3, r0
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 800ecae:	bf1e      	ittt	ne
 800ecb0:	6be3      	ldrne	r3, [r4, #60]	; 0x3c
 800ecb2:	f043 0308 	orrne.w	r3, r3, #8
 800ecb6:	63e3      	strne	r3, [r4, #60]	; 0x3c
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 800ecb8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ecba:	b34b      	cbz	r3, 800ed10 <HAL_UART_IRQHandler+0xc4>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 800ecbc:	0690      	lsls	r0, r2, #26
 800ecbe:	d504      	bpl.n	800ecca <HAL_UART_IRQHandler+0x7e>
 800ecc0:	0689      	lsls	r1, r1, #26
 800ecc2:	d502      	bpl.n	800ecca <HAL_UART_IRQHandler+0x7e>
        UART_Receive_IT(huart);
 800ecc4:	4620      	mov	r0, r4
 800ecc6:	f7ff ff87 	bl	800ebd8 <UART_Receive_IT.isra.0>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 800ecca:	6823      	ldr	r3, [r4, #0]
 800eccc:	695b      	ldr	r3, [r3, #20]
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 800ecce:	6be5      	ldr	r5, [r4, #60]	; 0x3c
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 800ecd0:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 800ecd4:	f005 0508 	and.w	r5, r5, #8
 800ecd8:	431d      	orrs	r5, r3
        UART_EndRxTransfer(huart);
 800ecda:	4620      	mov	r0, r4
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 800ecdc:	d019      	beq.n	800ed12 <HAL_UART_IRQHandler+0xc6>
        UART_EndRxTransfer(huart);
 800ecde:	f7ff feb1 	bl	800ea44 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800ece2:	6823      	ldr	r3, [r4, #0]
 800ece4:	695a      	ldr	r2, [r3, #20]
 800ece6:	0652      	lsls	r2, r2, #25
 800ece8:	d50f      	bpl.n	800ed0a <HAL_UART_IRQHandler+0xbe>
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800ecea:	695a      	ldr	r2, [r3, #20]
          if (huart->hdmarx != NULL)
 800ecec:	6b60      	ldr	r0, [r4, #52]	; 0x34
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800ecee:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ecf2:	615a      	str	r2, [r3, #20]
          if (huart->hdmarx != NULL)
 800ecf4:	b148      	cbz	r0, 800ed0a <HAL_UART_IRQHandler+0xbe>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 800ecf6:	4b26      	ldr	r3, [pc, #152]	; (800ed90 <HAL_UART_IRQHandler+0x144>)
 800ecf8:	6503      	str	r3, [r0, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 800ecfa:	f7fd fadf 	bl	800c2bc <HAL_DMA_Abort_IT>
 800ecfe:	b138      	cbz	r0, 800ed10 <HAL_UART_IRQHandler+0xc4>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 800ed00:	6b60      	ldr	r0, [r4, #52]	; 0x34
}
 800ed02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 800ed06:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ed08:	4718      	bx	r3
            HAL_UART_ErrorCallback(huart);
 800ed0a:	4620      	mov	r0, r4
 800ed0c:	f7ff ff9c 	bl	800ec48 <HAL_UART_ErrorCallback>
}
 800ed10:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 800ed12:	f7ff ff99 	bl	800ec48 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ed16:	63e5      	str	r5, [r4, #60]	; 0x3c
 800ed18:	e7fa      	b.n	800ed10 <HAL_UART_IRQHandler+0xc4>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 800ed1a:	0616      	lsls	r6, r2, #24
 800ed1c:	d528      	bpl.n	800ed70 <HAL_UART_IRQHandler+0x124>
 800ed1e:	060d      	lsls	r5, r1, #24
 800ed20:	d526      	bpl.n	800ed70 <HAL_UART_IRQHandler+0x124>
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 800ed22:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800ed26:	2a21      	cmp	r2, #33	; 0x21
 800ed28:	d1f2      	bne.n	800ed10 <HAL_UART_IRQHandler+0xc4>
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800ed2a:	68a1      	ldr	r1, [r4, #8]
      tmp = (uint16_t *) huart->pTxBuffPtr;
 800ed2c:	6a22      	ldr	r2, [r4, #32]
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800ed2e:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 800ed32:	d118      	bne.n	800ed66 <HAL_UART_IRQHandler+0x11a>
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 800ed34:	8811      	ldrh	r1, [r2, #0]
 800ed36:	f3c1 0108 	ubfx	r1, r1, #0, #9
 800ed3a:	6059      	str	r1, [r3, #4]
      if (huart->Init.Parity == UART_PARITY_NONE)
 800ed3c:	6921      	ldr	r1, [r4, #16]
 800ed3e:	b981      	cbnz	r1, 800ed62 <HAL_UART_IRQHandler+0x116>
        huart->pTxBuffPtr += 2U;
 800ed40:	3202      	adds	r2, #2
        huart->pTxBuffPtr += 1U;
 800ed42:	6222      	str	r2, [r4, #32]
    if (--huart->TxXferCount == 0U)
 800ed44:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 800ed46:	3a01      	subs	r2, #1
 800ed48:	b292      	uxth	r2, r2
 800ed4a:	84e2      	strh	r2, [r4, #38]	; 0x26
 800ed4c:	2a00      	cmp	r2, #0
 800ed4e:	d1df      	bne.n	800ed10 <HAL_UART_IRQHandler+0xc4>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 800ed50:	68da      	ldr	r2, [r3, #12]
 800ed52:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800ed56:	60da      	str	r2, [r3, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 800ed58:	68da      	ldr	r2, [r3, #12]
 800ed5a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800ed5e:	60da      	str	r2, [r3, #12]
 800ed60:	e7d6      	b.n	800ed10 <HAL_UART_IRQHandler+0xc4>
        huart->pTxBuffPtr += 1U;
 800ed62:	3201      	adds	r2, #1
 800ed64:	e7ed      	b.n	800ed42 <HAL_UART_IRQHandler+0xf6>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 800ed66:	1c51      	adds	r1, r2, #1
 800ed68:	6221      	str	r1, [r4, #32]
 800ed6a:	7812      	ldrb	r2, [r2, #0]
 800ed6c:	605a      	str	r2, [r3, #4]
 800ed6e:	e7e9      	b.n	800ed44 <HAL_UART_IRQHandler+0xf8>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 800ed70:	0650      	lsls	r0, r2, #25
 800ed72:	d5cd      	bpl.n	800ed10 <HAL_UART_IRQHandler+0xc4>
 800ed74:	064a      	lsls	r2, r1, #25
 800ed76:	d5cb      	bpl.n	800ed10 <HAL_UART_IRQHandler+0xc4>
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 800ed78:	68da      	ldr	r2, [r3, #12]
 800ed7a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ed7e:	60da      	str	r2, [r3, #12]
  huart->gState = HAL_UART_STATE_READY;
 800ed80:	2320      	movs	r3, #32
 800ed82:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  HAL_UART_TxCpltCallback(huart);
 800ed86:	4620      	mov	r0, r4
 800ed88:	f7f3 fcc4 	bl	8002714 <HAL_UART_TxCpltCallback>
  return HAL_OK;
 800ed8c:	e7c0      	b.n	800ed10 <HAL_UART_IRQHandler+0xc4>
 800ed8e:	bf00      	nop
 800ed90:	0800ed95 	.word	0x0800ed95

0800ed94 <UART_DMAAbortOnError>:
{
 800ed94:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800ed96:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 800ed98:	2300      	movs	r3, #0
 800ed9a:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 800ed9c:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 800ed9e:	f7ff ff53 	bl	800ec48 <HAL_UART_ErrorCallback>
}
 800eda2:	bd08      	pop	{r3, pc}

0800eda4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800eda4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 800eda8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 800edaa:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 800edae:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 800edb2:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 800edb6:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800edba:	6809      	ldr	r1, [r1, #0]
 800edbc:	2901      	cmp	r1, #1
 800edbe:	ea43 0304 	orr.w	r3, r3, r4
 800edc2:	4912      	ldr	r1, [pc, #72]	; (800ee0c <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800edc4:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800edc6:	d00f      	beq.n	800ede8 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800edc8:	431a      	orrs	r2, r3
 800edca:	432a      	orrs	r2, r5
 800edcc:	ea42 0308 	orr.w	r3, r2, r8
 800edd0:	ea43 030e 	orr.w	r3, r3, lr
 800edd4:	ea43 030c 	orr.w	r3, r3, ip
 800edd8:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800edda:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800eddc:	4333      	orrs	r3, r6
 800edde:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800ede0:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800ede2:	2000      	movs	r0, #0
 800ede4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800ede8:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800edea:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800edec:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800edee:	ea45 0208 	orr.w	r2, r5, r8
 800edf2:	ea42 020e 	orr.w	r2, r2, lr
 800edf6:	ea42 020c 	orr.w	r2, r2, ip
 800edfa:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800edfc:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ee00:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800ee02:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ee04:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800ee06:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 800ee08:	6042      	str	r2, [r0, #4]
 800ee0a:	e7ea      	b.n	800ede2 <FMC_SDRAM_Init+0x3e>
 800ee0c:	ffff8000 	.word	0xffff8000

0800ee10 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 800ee10:	68cb      	ldr	r3, [r1, #12]
{
 800ee12:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ee14:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800ee16:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800ee18:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 800ee1a:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 800ee1c:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ee1e:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 800ee22:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 800ee24:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 800ee26:	3b01      	subs	r3, #1
 800ee28:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 800ee2a:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800ee2c:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800ee2e:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 800ee30:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 800ee32:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 800ee34:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800ee38:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800ee3c:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 800ee40:	ea4f 6101 	mov.w	r1, r1, lsl #24
 800ee44:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 800ee48:	d00c      	beq.n	800ee64 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ee4a:	ea43 030c 	orr.w	r3, r3, ip
 800ee4e:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800ee50:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ee52:	4333      	orrs	r3, r6
 800ee54:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800ee56:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ee5a:	430b      	orrs	r3, r1
 800ee5c:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800ee5e:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 800ee60:	2000      	movs	r0, #0
 800ee62:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800ee64:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 800ee66:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800ee6a:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800ee6e:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800ee70:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800ee72:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 800ee76:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800ee78:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800ee7a:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800ee7c:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800ee80:	430a      	orrs	r2, r1
 800ee82:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 800ee84:	60c2      	str	r2, [r0, #12]
 800ee86:	e7eb      	b.n	800ee60 <FMC_SDRAM_Timing_Init+0x50>

0800ee88 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800ee88:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800ee8a:	2300      	movs	r3, #0
 800ee8c:	9301      	str	r3, [sp, #4]
{
 800ee8e:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800ee90:	e9d1 3200 	ldrd	r3, r2, [r1]
 800ee94:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 800ee96:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800ee98:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800ee9c:	688a      	ldr	r2, [r1, #8]
 800ee9e:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800eea0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800eea4:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 800eea6:	9b01      	ldr	r3, [sp, #4]
 800eea8:	6103      	str	r3, [r0, #16]
{
 800eeaa:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800eeac:	f7fc fdd8 	bl	800ba60 <HAL_GetTick>
 800eeb0:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800eeb2:	69a3      	ldr	r3, [r4, #24]
 800eeb4:	f013 0320 	ands.w	r3, r3, #32
 800eeb8:	d101      	bne.n	800eebe <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800eeba:	4618      	mov	r0, r3
 800eebc:	e003      	b.n	800eec6 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800eebe:	1c6b      	adds	r3, r5, #1
 800eec0:	d0f7      	beq.n	800eeb2 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800eec2:	b915      	cbnz	r5, 800eeca <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 800eec4:	2003      	movs	r0, #3
}
 800eec6:	b002      	add	sp, #8
 800eec8:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800eeca:	f7fc fdc9 	bl	800ba60 <HAL_GetTick>
 800eece:	1b80      	subs	r0, r0, r6
 800eed0:	42a8      	cmp	r0, r5
 800eed2:	d9ee      	bls.n	800eeb2 <FMC_SDRAM_SendCommand+0x2a>
 800eed4:	e7f6      	b.n	800eec4 <FMC_SDRAM_SendCommand+0x3c>

0800eed6 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800eed6:	6943      	ldr	r3, [r0, #20]
 800eed8:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800eedc:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800eede:	2000      	movs	r0, #0
 800eee0:	4770      	bx	lr
	...

0800eee4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800eee4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800eee8:	b113      	cbz	r3, 800eef0 <osKernelInitialize+0xc>
    stat = osErrorISR;
 800eeea:	f06f 0005 	mvn.w	r0, #5
 800eeee:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800eef0:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 800eef4:	4b07      	ldr	r3, [pc, #28]	; (800ef14 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 800eef6:	b912      	cbnz	r2, 800eefe <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800eef8:	f3ef 8211 	mrs	r2, BASEPRI
 800eefc:	b112      	cbz	r2, 800ef04 <osKernelInitialize+0x20>
 800eefe:	681a      	ldr	r2, [r3, #0]
 800ef00:	2a02      	cmp	r2, #2
 800ef02:	d0f2      	beq.n	800eeea <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 800ef04:	6818      	ldr	r0, [r3, #0]
 800ef06:	b910      	cbnz	r0, 800ef0e <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800ef08:	2201      	movs	r2, #1
 800ef0a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800ef0c:	4770      	bx	lr
    } else {
      stat = osError;
 800ef0e:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800ef12:	4770      	bx	lr
 800ef14:	2000d668 	.word	0x2000d668

0800ef18 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800ef18:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800ef1a:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800ef1e:	b113      	cbz	r3, 800ef26 <osKernelStart+0xe>
    stat = osErrorISR;
 800ef20:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 800ef24:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800ef26:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 800ef2a:	4b0a      	ldr	r3, [pc, #40]	; (800ef54 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 800ef2c:	b912      	cbnz	r2, 800ef34 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800ef2e:	f3ef 8211 	mrs	r2, BASEPRI
 800ef32:	b112      	cbz	r2, 800ef3a <osKernelStart+0x22>
 800ef34:	681a      	ldr	r2, [r3, #0]
 800ef36:	2a02      	cmp	r2, #2
 800ef38:	d0f2      	beq.n	800ef20 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 800ef3a:	681a      	ldr	r2, [r3, #0]
 800ef3c:	2a01      	cmp	r2, #1
 800ef3e:	d105      	bne.n	800ef4c <osKernelStart+0x34>
      KernelState = osKernelRunning;
 800ef40:	2202      	movs	r2, #2
 800ef42:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 800ef44:	f001 fc6e 	bl	8010824 <vTaskStartScheduler>
      stat = osOK;
 800ef48:	2000      	movs	r0, #0
 800ef4a:	e7eb      	b.n	800ef24 <osKernelStart+0xc>
      stat = osError;
 800ef4c:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800ef50:	e7e8      	b.n	800ef24 <osKernelStart+0xc>
 800ef52:	bf00      	nop
 800ef54:	2000d668 	.word	0x2000d668

0800ef58 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ef58:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef5a:	b087      	sub	sp, #28
 800ef5c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800ef5e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ef60:	460b      	mov	r3, r1
  hTask = NULL;
 800ef62:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800ef64:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800ef68:	bb22      	cbnz	r2, 800efb4 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800ef6a:	f3ef 8210 	mrs	r2, PRIMASK
 800ef6e:	b912      	cbnz	r2, 800ef76 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800ef70:	f3ef 8211 	mrs	r2, BASEPRI
 800ef74:	b11a      	cbz	r2, 800ef7e <osThreadNew+0x26>
 800ef76:	4a22      	ldr	r2, [pc, #136]	; (800f000 <osThreadNew+0xa8>)
 800ef78:	6812      	ldr	r2, [r2, #0]
 800ef7a:	2a02      	cmp	r2, #2
 800ef7c:	d01a      	beq.n	800efb4 <osThreadNew+0x5c>
 800ef7e:	b1c8      	cbz	r0, 800efb4 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800ef80:	2c00      	cmp	r4, #0
 800ef82:	d02f      	beq.n	800efe4 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800ef84:	69a5      	ldr	r5, [r4, #24]
 800ef86:	2d00      	cmp	r5, #0
 800ef88:	bf08      	it	eq
 800ef8a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800ef8c:	1e6a      	subs	r2, r5, #1
 800ef8e:	2a37      	cmp	r2, #55	; 0x37
 800ef90:	46ac      	mov	ip, r5
 800ef92:	d82b      	bhi.n	800efec <osThreadNew+0x94>
 800ef94:	6862      	ldr	r2, [r4, #4]
 800ef96:	07d2      	lsls	r2, r2, #31
 800ef98:	d428      	bmi.n	800efec <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800ef9a:	6966      	ldr	r6, [r4, #20]
 800ef9c:	b16e      	cbz	r6, 800efba <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800ef9e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800efa0:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800efa4:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800efa6:	b157      	cbz	r7, 800efbe <osThreadNew+0x66>
 800efa8:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 800efac:	d902      	bls.n	800efb4 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800efae:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800efb0:	b104      	cbz	r4, 800efb4 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800efb2:	b9ee      	cbnz	r6, 800eff0 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 800efb4:	9805      	ldr	r0, [sp, #20]
}
 800efb6:	b007      	add	sp, #28
 800efb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800efba:	2280      	movs	r2, #128	; 0x80
 800efbc:	e7f0      	b.n	800efa0 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800efbe:	f1be 0f00 	cmp.w	lr, #0
 800efc2:	d1f7      	bne.n	800efb4 <osThreadNew+0x5c>
      if (mem == 0) {
 800efc4:	6924      	ldr	r4, [r4, #16]
 800efc6:	2c00      	cmp	r4, #0
 800efc8:	d1f4      	bne.n	800efb4 <osThreadNew+0x5c>
 800efca:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800efcc:	a905      	add	r1, sp, #20
 800efce:	e9cd c100 	strd	ip, r1, [sp]
 800efd2:	b292      	uxth	r2, r2
 800efd4:	4621      	mov	r1, r4
 800efd6:	f001 fbb3 	bl	8010740 <xTaskCreate>
 800efda:	2801      	cmp	r0, #1
          hTask = NULL;
 800efdc:	bf1c      	itt	ne
 800efde:	2300      	movne	r3, #0
 800efe0:	9305      	strne	r3, [sp, #20]
 800efe2:	e7e7      	b.n	800efb4 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 800efe4:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800efe8:	2280      	movs	r2, #128	; 0x80
 800efea:	e7ef      	b.n	800efcc <osThreadNew+0x74>
        return (NULL);
 800efec:	2000      	movs	r0, #0
 800efee:	e7e2      	b.n	800efb6 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800eff0:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800eff4:	9500      	str	r5, [sp, #0]
 800eff6:	f001 fb6b 	bl	80106d0 <xTaskCreateStatic>
 800effa:	9005      	str	r0, [sp, #20]
 800effc:	e7da      	b.n	800efb4 <osThreadNew+0x5c>
 800effe:	bf00      	nop
 800f000:	2000d668 	.word	0x2000d668

0800f004 <osThreadSuspend>:
  }

  return (stat);
}

osStatus_t osThreadSuspend (osThreadId_t thread_id) {
 800f004:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f006:	f3ef 8305 	mrs	r3, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
 800f00a:	b113      	cbz	r3, 800f012 <osThreadSuspend+0xe>
    stat = osErrorISR;
 800f00c:	f06f 0005 	mvn.w	r0, #5
    stat = osOK;
    vTaskSuspend (hTask);
  }

  return (stat);
}
 800f010:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f012:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800f016:	b913      	cbnz	r3, 800f01e <osThreadSuspend+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f018:	f3ef 8311 	mrs	r3, BASEPRI
 800f01c:	b11b      	cbz	r3, 800f026 <osThreadSuspend+0x22>
 800f01e:	4b06      	ldr	r3, [pc, #24]	; (800f038 <osThreadSuspend+0x34>)
 800f020:	681b      	ldr	r3, [r3, #0]
 800f022:	2b02      	cmp	r3, #2
 800f024:	d0f2      	beq.n	800f00c <osThreadSuspend+0x8>
  else if (hTask == NULL) {
 800f026:	b118      	cbz	r0, 800f030 <osThreadSuspend+0x2c>
    vTaskSuspend (hTask);
 800f028:	f001 fdc8 	bl	8010bbc <vTaskSuspend>
    stat = osOK;
 800f02c:	2000      	movs	r0, #0
 800f02e:	e7ef      	b.n	800f010 <osThreadSuspend+0xc>
    stat = osErrorParameter;
 800f030:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800f034:	e7ec      	b.n	800f010 <osThreadSuspend+0xc>
 800f036:	bf00      	nop
 800f038:	2000d668 	.word	0x2000d668

0800f03c <osThreadResume>:

osStatus_t osThreadResume (osThreadId_t thread_id) {
 800f03c:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f03e:	f3ef 8305 	mrs	r3, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
 800f042:	b113      	cbz	r3, 800f04a <osThreadResume+0xe>
    stat = osErrorISR;
 800f044:	f06f 0005 	mvn.w	r0, #5
    stat = osOK;
    vTaskResume (hTask);
  }

  return (stat);
}
 800f048:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f04a:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800f04e:	b913      	cbnz	r3, 800f056 <osThreadResume+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f050:	f3ef 8311 	mrs	r3, BASEPRI
 800f054:	b11b      	cbz	r3, 800f05e <osThreadResume+0x22>
 800f056:	4b06      	ldr	r3, [pc, #24]	; (800f070 <osThreadResume+0x34>)
 800f058:	681b      	ldr	r3, [r3, #0]
 800f05a:	2b02      	cmp	r3, #2
 800f05c:	d0f2      	beq.n	800f044 <osThreadResume+0x8>
  else if (hTask == NULL) {
 800f05e:	b118      	cbz	r0, 800f068 <osThreadResume+0x2c>
    vTaskResume (hTask);
 800f060:	f001 fb9c 	bl	801079c <vTaskResume>
    stat = osOK;
 800f064:	2000      	movs	r0, #0
 800f066:	e7ef      	b.n	800f048 <osThreadResume+0xc>
    stat = osErrorParameter;
 800f068:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800f06c:	e7ec      	b.n	800f048 <osThreadResume+0xc>
 800f06e:	bf00      	nop
 800f070:	2000d668 	.word	0x2000d668

0800f074 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 800f074:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f076:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f07a:	b113      	cbz	r3, 800f082 <osDelay+0xe>
    stat = osErrorISR;
 800f07c:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800f080:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f082:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800f086:	b913      	cbnz	r3, 800f08e <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f088:	f3ef 8311 	mrs	r3, BASEPRI
 800f08c:	b11b      	cbz	r3, 800f096 <osDelay+0x22>
 800f08e:	4b05      	ldr	r3, [pc, #20]	; (800f0a4 <osDelay+0x30>)
 800f090:	681b      	ldr	r3, [r3, #0]
 800f092:	2b02      	cmp	r3, #2
 800f094:	d0f2      	beq.n	800f07c <osDelay+0x8>
    if (ticks != 0U) {
 800f096:	2800      	cmp	r0, #0
 800f098:	d0f2      	beq.n	800f080 <osDelay+0xc>
      vTaskDelay(ticks);
 800f09a:	f001 fd2b 	bl	8010af4 <vTaskDelay>
    stat = osOK;
 800f09e:	2000      	movs	r0, #0
 800f0a0:	e7ee      	b.n	800f080 <osDelay+0xc>
 800f0a2:	bf00      	nop
 800f0a4:	2000d668 	.word	0x2000d668

0800f0a8 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800f0a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f0aa:	460e      	mov	r6, r1
 800f0ac:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f0ae:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800f0b2:	b11b      	cbz	r3, 800f0bc <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800f0b4:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800f0b6:	4620      	mov	r0, r4
 800f0b8:	b002      	add	sp, #8
 800f0ba:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f0bc:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800f0c0:	b913      	cbnz	r3, 800f0c8 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f0c2:	f3ef 8311 	mrs	r3, BASEPRI
 800f0c6:	b11b      	cbz	r3, 800f0d0 <osSemaphoreNew+0x28>
 800f0c8:	4b21      	ldr	r3, [pc, #132]	; (800f150 <osSemaphoreNew+0xa8>)
 800f0ca:	681b      	ldr	r3, [r3, #0]
 800f0cc:	2b02      	cmp	r3, #2
 800f0ce:	d0f1      	beq.n	800f0b4 <osSemaphoreNew+0xc>
 800f0d0:	2800      	cmp	r0, #0
 800f0d2:	d0ef      	beq.n	800f0b4 <osSemaphoreNew+0xc>
 800f0d4:	42b0      	cmp	r0, r6
 800f0d6:	d3ed      	bcc.n	800f0b4 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 800f0d8:	b1ed      	cbz	r5, 800f116 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800f0da:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 800f0de:	b1c3      	cbz	r3, 800f112 <osSemaphoreNew+0x6a>
 800f0e0:	2a4f      	cmp	r2, #79	; 0x4f
 800f0e2:	d9e7      	bls.n	800f0b4 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800f0e4:	2801      	cmp	r0, #1
 800f0e6:	d129      	bne.n	800f13c <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800f0e8:	2203      	movs	r2, #3
 800f0ea:	9200      	str	r2, [sp, #0]
 800f0ec:	2200      	movs	r2, #0
 800f0ee:	4611      	mov	r1, r2
 800f0f0:	f000 fd29 	bl	800fb46 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 800f0f4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800f0f6:	2800      	cmp	r0, #0
 800f0f8:	d0dc      	beq.n	800f0b4 <osSemaphoreNew+0xc>
 800f0fa:	b1ce      	cbz	r6, 800f130 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800f0fc:	2300      	movs	r3, #0
 800f0fe:	461a      	mov	r2, r3
 800f100:	4619      	mov	r1, r3
 800f102:	f000 fdd5 	bl	800fcb0 <xQueueGenericSend>
 800f106:	2801      	cmp	r0, #1
 800f108:	d012      	beq.n	800f130 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 800f10a:	4620      	mov	r0, r4
 800f10c:	f001 f910 	bl	8010330 <vQueueDelete>
 800f110:	e7d0      	b.n	800f0b4 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800f112:	2a00      	cmp	r2, #0
 800f114:	d1ce      	bne.n	800f0b4 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800f116:	2801      	cmp	r0, #1
 800f118:	d104      	bne.n	800f124 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 800f11a:	2203      	movs	r2, #3
 800f11c:	2100      	movs	r1, #0
 800f11e:	f000 fd60 	bl	800fbe2 <xQueueGenericCreate>
 800f122:	e7e7      	b.n	800f0f4 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800f124:	4631      	mov	r1, r6
 800f126:	f000 fda5 	bl	800fc74 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800f12a:	4604      	mov	r4, r0
 800f12c:	2800      	cmp	r0, #0
 800f12e:	d0c1      	beq.n	800f0b4 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 800f130:	b95d      	cbnz	r5, 800f14a <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 800f132:	4629      	mov	r1, r5
 800f134:	4620      	mov	r0, r4
 800f136:	f001 f8d5 	bl	80102e4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800f13a:	e7bc      	b.n	800f0b6 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800f13c:	461a      	mov	r2, r3
 800f13e:	4631      	mov	r1, r6
 800f140:	f000 fd76 	bl	800fc30 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800f144:	4604      	mov	r4, r0
 800f146:	2800      	cmp	r0, #0
 800f148:	d0b4      	beq.n	800f0b4 <osSemaphoreNew+0xc>
          name = attr->name;
 800f14a:	682d      	ldr	r5, [r5, #0]
 800f14c:	e7f1      	b.n	800f132 <osSemaphoreNew+0x8a>
 800f14e:	bf00      	nop
 800f150:	2000d668 	.word	0x2000d668

0800f154 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800f154:	b513      	push	{r0, r1, r4, lr}
 800f156:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800f158:	b918      	cbnz	r0, 800f162 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 800f15a:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800f15e:	b002      	add	sp, #8
 800f160:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f162:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 800f166:	b163      	cbz	r3, 800f182 <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 800f168:	2c00      	cmp	r4, #0
 800f16a:	d1f6      	bne.n	800f15a <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800f16c:	aa01      	add	r2, sp, #4
 800f16e:	4621      	mov	r1, r4
      yield = pdFALSE;
 800f170:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800f172:	f001 f867 	bl	8010244 <xQueueReceiveFromISR>
 800f176:	2801      	cmp	r0, #1
 800f178:	d113      	bne.n	800f1a2 <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 800f17a:	9b01      	ldr	r3, [sp, #4]
 800f17c:	b9a3      	cbnz	r3, 800f1a8 <osSemaphoreAcquire+0x54>
  stat = osOK;
 800f17e:	2000      	movs	r0, #0
 800f180:	e7ed      	b.n	800f15e <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f182:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800f186:	b913      	cbnz	r3, 800f18e <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f188:	f3ef 8311 	mrs	r3, BASEPRI
 800f18c:	b11b      	cbz	r3, 800f196 <osSemaphoreAcquire+0x42>
 800f18e:	4b0d      	ldr	r3, [pc, #52]	; (800f1c4 <osSemaphoreAcquire+0x70>)
 800f190:	681b      	ldr	r3, [r3, #0]
 800f192:	2b02      	cmp	r3, #2
 800f194:	d0e8      	beq.n	800f168 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800f196:	4621      	mov	r1, r4
 800f198:	f000 ff91 	bl	80100be <xQueueSemaphoreTake>
 800f19c:	2801      	cmp	r0, #1
 800f19e:	d0ee      	beq.n	800f17e <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 800f1a0:	b96c      	cbnz	r4, 800f1be <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 800f1a2:	f06f 0002 	mvn.w	r0, #2
 800f1a6:	e7da      	b.n	800f15e <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 800f1a8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f1ac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f1b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f1b4:	f3bf 8f4f 	dsb	sy
 800f1b8:	f3bf 8f6f 	isb	sy
 800f1bc:	e7df      	b.n	800f17e <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 800f1be:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800f1c2:	e7cc      	b.n	800f15e <osSemaphoreAcquire+0xa>
 800f1c4:	2000d668 	.word	0x2000d668

0800f1c8 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800f1c8:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800f1ca:	b370      	cbz	r0, 800f22a <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f1cc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800f1d0:	b14b      	cbz	r3, 800f1e6 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 800f1d2:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800f1d4:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800f1d6:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800f1d8:	f000 fe7e 	bl	800fed8 <xQueueGiveFromISR>
 800f1dc:	2801      	cmp	r0, #1
 800f1de:	d014      	beq.n	800f20a <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800f1e0:	f06f 0002 	mvn.w	r0, #2
 800f1e4:	e014      	b.n	800f210 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f1e6:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800f1ea:	b913      	cbnz	r3, 800f1f2 <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f1ec:	f3ef 8311 	mrs	r3, BASEPRI
 800f1f0:	b11b      	cbz	r3, 800f1fa <osSemaphoreRelease+0x32>
 800f1f2:	4b0f      	ldr	r3, [pc, #60]	; (800f230 <osSemaphoreRelease+0x68>)
 800f1f4:	681b      	ldr	r3, [r3, #0]
 800f1f6:	2b02      	cmp	r3, #2
 800f1f8:	d0eb      	beq.n	800f1d2 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800f1fa:	2300      	movs	r3, #0
 800f1fc:	461a      	mov	r2, r3
 800f1fe:	4619      	mov	r1, r3
 800f200:	f000 fd56 	bl	800fcb0 <xQueueGenericSend>
 800f204:	2801      	cmp	r0, #1
 800f206:	d002      	beq.n	800f20e <osSemaphoreRelease+0x46>
 800f208:	e7ea      	b.n	800f1e0 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 800f20a:	9b01      	ldr	r3, [sp, #4]
 800f20c:	b913      	cbnz	r3, 800f214 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800f20e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800f210:	b002      	add	sp, #8
 800f212:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800f214:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f218:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f21c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f220:	f3bf 8f4f 	dsb	sy
 800f224:	f3bf 8f6f 	isb	sy
 800f228:	e7f1      	b.n	800f20e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800f22a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800f22e:	e7ef      	b.n	800f210 <osSemaphoreRelease+0x48>
 800f230:	2000d668 	.word	0x2000d668

0800f234 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800f234:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f236:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f238:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800f23c:	b11b      	cbz	r3, 800f246 <osMessageQueueNew+0x12>
  hQueue = NULL;
 800f23e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800f240:	4628      	mov	r0, r5
 800f242:	b002      	add	sp, #8
 800f244:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f246:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800f24a:	b913      	cbnz	r3, 800f252 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f24c:	f3ef 8311 	mrs	r3, BASEPRI
 800f250:	b11b      	cbz	r3, 800f25a <osMessageQueueNew+0x26>
 800f252:	4b1a      	ldr	r3, [pc, #104]	; (800f2bc <osMessageQueueNew+0x88>)
 800f254:	681b      	ldr	r3, [r3, #0]
 800f256:	2b02      	cmp	r3, #2
 800f258:	d0f1      	beq.n	800f23e <osMessageQueueNew+0xa>
 800f25a:	2800      	cmp	r0, #0
 800f25c:	d0ef      	beq.n	800f23e <osMessageQueueNew+0xa>
 800f25e:	2900      	cmp	r1, #0
 800f260:	d0ed      	beq.n	800f23e <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800f262:	b1ec      	cbz	r4, 800f2a0 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800f264:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 800f268:	b193      	cbz	r3, 800f290 <osMessageQueueNew+0x5c>
 800f26a:	2a4f      	cmp	r2, #79	; 0x4f
 800f26c:	d9e7      	bls.n	800f23e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800f26e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800f270:	2a00      	cmp	r2, #0
 800f272:	d0e4      	beq.n	800f23e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800f274:	6966      	ldr	r6, [r4, #20]
 800f276:	fb01 f500 	mul.w	r5, r1, r0
 800f27a:	42ae      	cmp	r6, r5
 800f27c:	d3df      	bcc.n	800f23e <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800f27e:	2500      	movs	r5, #0
 800f280:	9500      	str	r5, [sp, #0]
 800f282:	f000 fc60 	bl	800fb46 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800f286:	4605      	mov	r5, r0
 800f288:	2800      	cmp	r0, #0
 800f28a:	d0d8      	beq.n	800f23e <osMessageQueueNew+0xa>
        name = attr->name;
 800f28c:	6824      	ldr	r4, [r4, #0]
 800f28e:	e00f      	b.n	800f2b0 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800f290:	2a00      	cmp	r2, #0
 800f292:	d1d4      	bne.n	800f23e <osMessageQueueNew+0xa>
 800f294:	6923      	ldr	r3, [r4, #16]
 800f296:	2b00      	cmp	r3, #0
 800f298:	d1d1      	bne.n	800f23e <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800f29a:	6963      	ldr	r3, [r4, #20]
 800f29c:	2b00      	cmp	r3, #0
 800f29e:	d1ce      	bne.n	800f23e <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 800f2a0:	2200      	movs	r2, #0
 800f2a2:	f000 fc9e 	bl	800fbe2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800f2a6:	4605      	mov	r5, r0
 800f2a8:	2800      	cmp	r0, #0
 800f2aa:	d0c8      	beq.n	800f23e <osMessageQueueNew+0xa>
      if (attr != NULL) {
 800f2ac:	2c00      	cmp	r4, #0
 800f2ae:	d1ed      	bne.n	800f28c <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 800f2b0:	4621      	mov	r1, r4
 800f2b2:	4628      	mov	r0, r5
 800f2b4:	f001 f816 	bl	80102e4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800f2b8:	e7c2      	b.n	800f240 <osMessageQueueNew+0xc>
 800f2ba:	bf00      	nop
 800f2bc:	2000d668 	.word	0x2000d668

0800f2c0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800f2c0:	b513      	push	{r0, r1, r4, lr}
 800f2c2:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f2c4:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800f2c8:	b123      	cbz	r3, 800f2d4 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800f2ca:	b9d8      	cbnz	r0, 800f304 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 800f2cc:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800f2d0:	b002      	add	sp, #8
 800f2d2:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f2d4:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800f2d8:	b913      	cbnz	r3, 800f2e0 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f2da:	f3ef 8311 	mrs	r3, BASEPRI
 800f2de:	b11b      	cbz	r3, 800f2e8 <osMessageQueuePut+0x28>
 800f2e0:	4b17      	ldr	r3, [pc, #92]	; (800f340 <osMessageQueuePut+0x80>)
 800f2e2:	681b      	ldr	r3, [r3, #0]
 800f2e4:	2b02      	cmp	r3, #2
 800f2e6:	d0f0      	beq.n	800f2ca <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800f2e8:	2800      	cmp	r0, #0
 800f2ea:	d0ef      	beq.n	800f2cc <osMessageQueuePut+0xc>
 800f2ec:	2900      	cmp	r1, #0
 800f2ee:	d0ed      	beq.n	800f2cc <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800f2f0:	2300      	movs	r3, #0
 800f2f2:	4622      	mov	r2, r4
 800f2f4:	f000 fcdc 	bl	800fcb0 <xQueueGenericSend>
 800f2f8:	2801      	cmp	r0, #1
 800f2fa:	d010      	beq.n	800f31e <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 800f2fc:	b9e4      	cbnz	r4, 800f338 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 800f2fe:	f06f 0002 	mvn.w	r0, #2
 800f302:	e7e5      	b.n	800f2d0 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800f304:	2900      	cmp	r1, #0
 800f306:	d0e1      	beq.n	800f2cc <osMessageQueuePut+0xc>
 800f308:	2c00      	cmp	r4, #0
 800f30a:	d1df      	bne.n	800f2cc <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800f30c:	4623      	mov	r3, r4
 800f30e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800f310:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800f312:	f000 fd80 	bl	800fe16 <xQueueGenericSendFromISR>
 800f316:	2801      	cmp	r0, #1
 800f318:	d1f1      	bne.n	800f2fe <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 800f31a:	9b01      	ldr	r3, [sp, #4]
 800f31c:	b90b      	cbnz	r3, 800f322 <osMessageQueuePut+0x62>
  stat = osOK;
 800f31e:	2000      	movs	r0, #0
 800f320:	e7d6      	b.n	800f2d0 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800f322:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f326:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f32a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f32e:	f3bf 8f4f 	dsb	sy
 800f332:	f3bf 8f6f 	isb	sy
 800f336:	e7f2      	b.n	800f31e <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 800f338:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800f33c:	e7c8      	b.n	800f2d0 <osMessageQueuePut+0x10>
 800f33e:	bf00      	nop
 800f340:	2000d668 	.word	0x2000d668

0800f344 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800f344:	b513      	push	{r0, r1, r4, lr}
 800f346:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f348:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800f34c:	b123      	cbz	r3, 800f358 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800f34e:	b9d0      	cbnz	r0, 800f386 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 800f350:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800f354:	b002      	add	sp, #8
 800f356:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f358:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800f35c:	b913      	cbnz	r3, 800f364 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f35e:	f3ef 8311 	mrs	r3, BASEPRI
 800f362:	b11b      	cbz	r3, 800f36c <osMessageQueueGet+0x28>
 800f364:	4b16      	ldr	r3, [pc, #88]	; (800f3c0 <osMessageQueueGet+0x7c>)
 800f366:	681b      	ldr	r3, [r3, #0]
 800f368:	2b02      	cmp	r3, #2
 800f36a:	d0f0      	beq.n	800f34e <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800f36c:	2800      	cmp	r0, #0
 800f36e:	d0ef      	beq.n	800f350 <osMessageQueueGet+0xc>
 800f370:	2900      	cmp	r1, #0
 800f372:	d0ed      	beq.n	800f350 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800f374:	4622      	mov	r2, r4
 800f376:	f000 fe03 	bl	800ff80 <xQueueReceive>
 800f37a:	2801      	cmp	r0, #1
 800f37c:	d00f      	beq.n	800f39e <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 800f37e:	b9dc      	cbnz	r4, 800f3b8 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 800f380:	f06f 0002 	mvn.w	r0, #2
 800f384:	e7e6      	b.n	800f354 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800f386:	2900      	cmp	r1, #0
 800f388:	d0e2      	beq.n	800f350 <osMessageQueueGet+0xc>
 800f38a:	2c00      	cmp	r4, #0
 800f38c:	d1e0      	bne.n	800f350 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800f38e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800f390:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800f392:	f000 ff57 	bl	8010244 <xQueueReceiveFromISR>
 800f396:	2801      	cmp	r0, #1
 800f398:	d1f2      	bne.n	800f380 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 800f39a:	9b01      	ldr	r3, [sp, #4]
 800f39c:	b90b      	cbnz	r3, 800f3a2 <osMessageQueueGet+0x5e>
  stat = osOK;
 800f39e:	2000      	movs	r0, #0
 800f3a0:	e7d8      	b.n	800f354 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800f3a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f3a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f3aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f3ae:	f3bf 8f4f 	dsb	sy
 800f3b2:	f3bf 8f6f 	isb	sy
 800f3b6:	e7f2      	b.n	800f39e <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800f3b8:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800f3bc:	e7ca      	b.n	800f354 <osMessageQueueGet+0x10>
 800f3be:	bf00      	nop
 800f3c0:	2000d668 	.word	0x2000d668

0800f3c4 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800f3c4:	4b03      	ldr	r3, [pc, #12]	; (800f3d4 <vApplicationGetIdleTaskMemory+0x10>)
 800f3c6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800f3c8:	4b03      	ldr	r3, [pc, #12]	; (800f3d8 <vApplicationGetIdleTaskMemory+0x14>)
 800f3ca:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800f3cc:	2380      	movs	r3, #128	; 0x80
 800f3ce:	6013      	str	r3, [r2, #0]
}
 800f3d0:	4770      	bx	lr
 800f3d2:	bf00      	nop
 800f3d4:	2000d5a8 	.word	0x2000d5a8
 800f3d8:	2000d3a8 	.word	0x2000d3a8

0800f3dc <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800f3dc:	4b03      	ldr	r3, [pc, #12]	; (800f3ec <vApplicationGetTimerTaskMemory+0x10>)
 800f3de:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800f3e0:	4b03      	ldr	r3, [pc, #12]	; (800f3f0 <vApplicationGetTimerTaskMemory+0x14>)
 800f3e2:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800f3e4:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f3e8:	6013      	str	r3, [r2, #0]
}
 800f3ea:	4770      	bx	lr
 800f3ec:	2000da6c 	.word	0x2000da6c
 800f3f0:	2000d66c 	.word	0x2000d66c

0800f3f4 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800f3f4:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800f3f6:	4b0f      	ldr	r3, [pc, #60]	; (800f434 <prvInsertBlockIntoFreeList+0x40>)
 800f3f8:	461a      	mov	r2, r3
 800f3fa:	681b      	ldr	r3, [r3, #0]
 800f3fc:	4283      	cmp	r3, r0
 800f3fe:	d3fb      	bcc.n	800f3f8 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800f400:	6854      	ldr	r4, [r2, #4]
 800f402:	1911      	adds	r1, r2, r4
 800f404:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800f406:	bf01      	itttt	eq
 800f408:	6841      	ldreq	r1, [r0, #4]
 800f40a:	4610      	moveq	r0, r2
 800f40c:	1909      	addeq	r1, r1, r4
 800f40e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800f410:	6844      	ldr	r4, [r0, #4]
 800f412:	1901      	adds	r1, r0, r4
 800f414:	428b      	cmp	r3, r1
 800f416:	d107      	bne.n	800f428 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800f418:	4907      	ldr	r1, [pc, #28]	; (800f438 <prvInsertBlockIntoFreeList+0x44>)
 800f41a:	6809      	ldr	r1, [r1, #0]
 800f41c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800f41e:	bf1f      	itttt	ne
 800f420:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800f422:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800f424:	1909      	addne	r1, r1, r4
 800f426:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800f428:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800f42a:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800f42c:	bf18      	it	ne
 800f42e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f430:	bd10      	pop	{r4, pc}
 800f432:	bf00      	nop
 800f434:	2001db3c 	.word	0x2001db3c
 800f438:	2000db2c 	.word	0x2000db2c

0800f43c <pvPortMalloc>:
{
 800f43c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f440:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800f442:	f001 fa3f 	bl	80108c4 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800f446:	4840      	ldr	r0, [pc, #256]	; (800f548 <pvPortMalloc+0x10c>)
 800f448:	4d40      	ldr	r5, [pc, #256]	; (800f54c <pvPortMalloc+0x110>)
 800f44a:	6803      	ldr	r3, [r0, #0]
 800f44c:	bb0b      	cbnz	r3, 800f492 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800f44e:	4940      	ldr	r1, [pc, #256]	; (800f550 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800f450:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800f452:	bf1f      	itttt	ne
 800f454:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800f456:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800f45a:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 800f45e:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800f460:	bf14      	ite	ne
 800f462:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800f464:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800f468:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800f46a:	4e3a      	ldr	r6, [pc, #232]	; (800f554 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 800f46c:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800f46e:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800f472:	2300      	movs	r3, #0
 800f474:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800f476:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800f478:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800f47c:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800f47e:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800f482:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800f484:	4a34      	ldr	r2, [pc, #208]	; (800f558 <pvPortMalloc+0x11c>)
 800f486:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800f488:	4a34      	ldr	r2, [pc, #208]	; (800f55c <pvPortMalloc+0x120>)
 800f48a:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800f48c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800f490:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800f492:	682f      	ldr	r7, [r5, #0]
 800f494:	4227      	tst	r7, r4
 800f496:	d151      	bne.n	800f53c <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 800f498:	2c00      	cmp	r4, #0
 800f49a:	d042      	beq.n	800f522 <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 800f49c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800f4a0:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800f4a2:	bf1c      	itt	ne
 800f4a4:	f023 0307 	bicne.w	r3, r3, #7
 800f4a8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800f4aa:	2b00      	cmp	r3, #0
 800f4ac:	d046      	beq.n	800f53c <pvPortMalloc+0x100>
 800f4ae:	4c2b      	ldr	r4, [pc, #172]	; (800f55c <pvPortMalloc+0x120>)
 800f4b0:	6826      	ldr	r6, [r4, #0]
 800f4b2:	429e      	cmp	r6, r3
 800f4b4:	d342      	bcc.n	800f53c <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 800f4b6:	4a27      	ldr	r2, [pc, #156]	; (800f554 <pvPortMalloc+0x118>)
 800f4b8:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800f4ba:	6869      	ldr	r1, [r5, #4]
 800f4bc:	4299      	cmp	r1, r3
 800f4be:	d204      	bcs.n	800f4ca <pvPortMalloc+0x8e>
 800f4c0:	f8d5 c000 	ldr.w	ip, [r5]
 800f4c4:	f1bc 0f00 	cmp.w	ip, #0
 800f4c8:	d115      	bne.n	800f4f6 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800f4ca:	6800      	ldr	r0, [r0, #0]
 800f4cc:	42a8      	cmp	r0, r5
 800f4ce:	d035      	beq.n	800f53c <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800f4d0:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800f4d2:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800f4d4:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800f4d8:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800f4da:	2910      	cmp	r1, #16
 800f4dc:	d912      	bls.n	800f504 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800f4de:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800f4e0:	0742      	lsls	r2, r0, #29
 800f4e2:	d00b      	beq.n	800f4fc <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800f4e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4e8:	f383 8811 	msr	BASEPRI, r3
 800f4ec:	f3bf 8f6f 	isb	sy
 800f4f0:	f3bf 8f4f 	dsb	sy
 800f4f4:	e7fe      	b.n	800f4f4 <pvPortMalloc+0xb8>
 800f4f6:	462a      	mov	r2, r5
 800f4f8:	4665      	mov	r5, ip
 800f4fa:	e7de      	b.n	800f4ba <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800f4fc:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800f4fe:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800f500:	f7ff ff78 	bl	800f3f4 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800f504:	4914      	ldr	r1, [pc, #80]	; (800f558 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800f506:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800f508:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800f50a:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800f50c:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800f50e:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 800f510:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800f514:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800f516:	bf38      	it	cc
 800f518:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800f51a:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800f51e:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 800f520:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 800f522:	f001 fa73 	bl	8010a0c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800f526:	0763      	lsls	r3, r4, #29
 800f528:	d00a      	beq.n	800f540 <pvPortMalloc+0x104>
 800f52a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f52e:	f383 8811 	msr	BASEPRI, r3
 800f532:	f3bf 8f6f 	isb	sy
 800f536:	f3bf 8f4f 	dsb	sy
 800f53a:	e7fe      	b.n	800f53a <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 800f53c:	2400      	movs	r4, #0
 800f53e:	e7f0      	b.n	800f522 <pvPortMalloc+0xe6>
}
 800f540:	4620      	mov	r0, r4
 800f542:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f546:	bf00      	nop
 800f548:	2000db2c 	.word	0x2000db2c
 800f54c:	2001db30 	.word	0x2001db30
 800f550:	2000db30 	.word	0x2000db30
 800f554:	2001db3c 	.word	0x2001db3c
 800f558:	2001db38 	.word	0x2001db38
 800f55c:	2001db34 	.word	0x2001db34

0800f560 <vPortFree>:
{
 800f560:	b510      	push	{r4, lr}
	if( pv != NULL )
 800f562:	4604      	mov	r4, r0
 800f564:	b370      	cbz	r0, 800f5c4 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800f566:	4a18      	ldr	r2, [pc, #96]	; (800f5c8 <vPortFree+0x68>)
 800f568:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800f56c:	6812      	ldr	r2, [r2, #0]
 800f56e:	4213      	tst	r3, r2
 800f570:	d108      	bne.n	800f584 <vPortFree+0x24>
 800f572:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f576:	f383 8811 	msr	BASEPRI, r3
 800f57a:	f3bf 8f6f 	isb	sy
 800f57e:	f3bf 8f4f 	dsb	sy
 800f582:	e7fe      	b.n	800f582 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800f584:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800f588:	b141      	cbz	r1, 800f59c <vPortFree+0x3c>
 800f58a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f58e:	f383 8811 	msr	BASEPRI, r3
 800f592:	f3bf 8f6f 	isb	sy
 800f596:	f3bf 8f4f 	dsb	sy
 800f59a:	e7fe      	b.n	800f59a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800f59c:	ea23 0302 	bic.w	r3, r3, r2
 800f5a0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800f5a4:	f001 f98e 	bl	80108c4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800f5a8:	4a08      	ldr	r2, [pc, #32]	; (800f5cc <vPortFree+0x6c>)
 800f5aa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f5ae:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800f5b0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800f5b4:	440b      	add	r3, r1
 800f5b6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800f5b8:	f7ff ff1c 	bl	800f3f4 <prvInsertBlockIntoFreeList>
}
 800f5bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800f5c0:	f001 ba24 	b.w	8010a0c <xTaskResumeAll>
}
 800f5c4:	bd10      	pop	{r4, pc}
 800f5c6:	bf00      	nop
 800f5c8:	2001db30 	.word	0x2001db30
 800f5cc:	2001db34 	.word	0x2001db34

0800f5d0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800f5d0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800f5d4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800f5d8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800f5dc:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800f5de:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800f5e0:	2300      	movs	r3, #0
 800f5e2:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800f5e4:	4770      	bx	lr

0800f5e6 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800f5e6:	2300      	movs	r3, #0
 800f5e8:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800f5ea:	4770      	bx	lr

0800f5ec <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800f5ec:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800f5ee:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800f5f0:	689a      	ldr	r2, [r3, #8]
 800f5f2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800f5f4:	689a      	ldr	r2, [r3, #8]
 800f5f6:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800f5f8:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800f5fa:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800f5fc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800f5fe:	3301      	adds	r3, #1
 800f600:	6003      	str	r3, [r0, #0]
}
 800f602:	4770      	bx	lr

0800f604 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800f604:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800f606:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800f608:	1c63      	adds	r3, r4, #1
 800f60a:	d10a      	bne.n	800f622 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800f60c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800f60e:	685a      	ldr	r2, [r3, #4]
 800f610:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800f612:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800f614:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800f616:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800f618:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800f61a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800f61c:	3301      	adds	r3, #1
 800f61e:	6003      	str	r3, [r0, #0]
}
 800f620:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800f622:	f100 0208 	add.w	r2, r0, #8
 800f626:	4613      	mov	r3, r2
 800f628:	6852      	ldr	r2, [r2, #4]
 800f62a:	6815      	ldr	r5, [r2, #0]
 800f62c:	42a5      	cmp	r5, r4
 800f62e:	d9fa      	bls.n	800f626 <vListInsert+0x22>
 800f630:	e7ed      	b.n	800f60e <vListInsert+0xa>

0800f632 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800f632:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800f636:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800f638:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800f63a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800f63c:	6859      	ldr	r1, [r3, #4]
 800f63e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800f640:	bf08      	it	eq
 800f642:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800f644:	2200      	movs	r2, #0
 800f646:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800f648:	681a      	ldr	r2, [r3, #0]
 800f64a:	3a01      	subs	r2, #1
 800f64c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800f64e:	6818      	ldr	r0, [r3, #0]
}
 800f650:	4770      	bx	lr
	...

0800f654 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800f654:	4808      	ldr	r0, [pc, #32]	; (800f678 <prvPortStartFirstTask+0x24>)
 800f656:	6800      	ldr	r0, [r0, #0]
 800f658:	6800      	ldr	r0, [r0, #0]
 800f65a:	f380 8808 	msr	MSP, r0
 800f65e:	f04f 0000 	mov.w	r0, #0
 800f662:	f380 8814 	msr	CONTROL, r0
 800f666:	b662      	cpsie	i
 800f668:	b661      	cpsie	f
 800f66a:	f3bf 8f4f 	dsb	sy
 800f66e:	f3bf 8f6f 	isb	sy
 800f672:	df00      	svc	0
 800f674:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800f676:	0000      	.short	0x0000
 800f678:	e000ed08 	.word	0xe000ed08

0800f67c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800f67c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800f68c <vPortEnableVFP+0x10>
 800f680:	6801      	ldr	r1, [r0, #0]
 800f682:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800f686:	6001      	str	r1, [r0, #0]
 800f688:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800f68a:	0000      	.short	0x0000
 800f68c:	e000ed88 	.word	0xe000ed88

0800f690 <prvTaskExitError>:
{
 800f690:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800f692:	2300      	movs	r3, #0
 800f694:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800f696:	4b0d      	ldr	r3, [pc, #52]	; (800f6cc <prvTaskExitError+0x3c>)
 800f698:	681b      	ldr	r3, [r3, #0]
 800f69a:	3301      	adds	r3, #1
 800f69c:	d008      	beq.n	800f6b0 <prvTaskExitError+0x20>
 800f69e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6a2:	f383 8811 	msr	BASEPRI, r3
 800f6a6:	f3bf 8f6f 	isb	sy
 800f6aa:	f3bf 8f4f 	dsb	sy
 800f6ae:	e7fe      	b.n	800f6ae <prvTaskExitError+0x1e>
 800f6b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6b4:	f383 8811 	msr	BASEPRI, r3
 800f6b8:	f3bf 8f6f 	isb	sy
 800f6bc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800f6c0:	9b01      	ldr	r3, [sp, #4]
 800f6c2:	2b00      	cmp	r3, #0
 800f6c4:	d0fc      	beq.n	800f6c0 <prvTaskExitError+0x30>
}
 800f6c6:	b002      	add	sp, #8
 800f6c8:	4770      	bx	lr
 800f6ca:	bf00      	nop
 800f6cc:	20000098 	.word	0x20000098

0800f6d0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800f6d0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800f6d4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800f6d8:	4b07      	ldr	r3, [pc, #28]	; (800f6f8 <pxPortInitialiseStack+0x28>)
 800f6da:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800f6de:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800f6e2:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800f6e6:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800f6ea:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800f6ee:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800f6f2:	3844      	subs	r0, #68	; 0x44
 800f6f4:	4770      	bx	lr
 800f6f6:	bf00      	nop
 800f6f8:	0800f691 	.word	0x0800f691
 800f6fc:	00000000 	.word	0x00000000

0800f700 <SVC_Handler>:
	__asm volatile (
 800f700:	4b07      	ldr	r3, [pc, #28]	; (800f720 <pxCurrentTCBConst2>)
 800f702:	6819      	ldr	r1, [r3, #0]
 800f704:	6808      	ldr	r0, [r1, #0]
 800f706:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f70a:	f380 8809 	msr	PSP, r0
 800f70e:	f3bf 8f6f 	isb	sy
 800f712:	f04f 0000 	mov.w	r0, #0
 800f716:	f380 8811 	msr	BASEPRI, r0
 800f71a:	4770      	bx	lr
 800f71c:	f3af 8000 	nop.w

0800f720 <pxCurrentTCBConst2>:
 800f720:	2001db8c 	.word	0x2001db8c

0800f724 <vPortEnterCritical>:
 800f724:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f728:	f383 8811 	msr	BASEPRI, r3
 800f72c:	f3bf 8f6f 	isb	sy
 800f730:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800f734:	4a0a      	ldr	r2, [pc, #40]	; (800f760 <vPortEnterCritical+0x3c>)
 800f736:	6813      	ldr	r3, [r2, #0]
 800f738:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800f73a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800f73c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800f73e:	d10e      	bne.n	800f75e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800f740:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f744:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800f748:	b2db      	uxtb	r3, r3
 800f74a:	b143      	cbz	r3, 800f75e <vPortEnterCritical+0x3a>
 800f74c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f750:	f383 8811 	msr	BASEPRI, r3
 800f754:	f3bf 8f6f 	isb	sy
 800f758:	f3bf 8f4f 	dsb	sy
 800f75c:	e7fe      	b.n	800f75c <vPortEnterCritical+0x38>
}
 800f75e:	4770      	bx	lr
 800f760:	20000098 	.word	0x20000098

0800f764 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800f764:	4a08      	ldr	r2, [pc, #32]	; (800f788 <vPortExitCritical+0x24>)
 800f766:	6813      	ldr	r3, [r2, #0]
 800f768:	b943      	cbnz	r3, 800f77c <vPortExitCritical+0x18>
 800f76a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f76e:	f383 8811 	msr	BASEPRI, r3
 800f772:	f3bf 8f6f 	isb	sy
 800f776:	f3bf 8f4f 	dsb	sy
 800f77a:	e7fe      	b.n	800f77a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800f77c:	3b01      	subs	r3, #1
 800f77e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800f780:	b90b      	cbnz	r3, 800f786 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800f782:	f383 8811 	msr	BASEPRI, r3
}
 800f786:	4770      	bx	lr
 800f788:	20000098 	.word	0x20000098
 800f78c:	00000000 	.word	0x00000000

0800f790 <PendSV_Handler>:
	__asm volatile
 800f790:	f3ef 8009 	mrs	r0, PSP
 800f794:	f3bf 8f6f 	isb	sy
 800f798:	4b15      	ldr	r3, [pc, #84]	; (800f7f0 <pxCurrentTCBConst>)
 800f79a:	681a      	ldr	r2, [r3, #0]
 800f79c:	f01e 0f10 	tst.w	lr, #16
 800f7a0:	bf08      	it	eq
 800f7a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800f7a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7aa:	6010      	str	r0, [r2, #0]
 800f7ac:	e92d 0009 	stmdb	sp!, {r0, r3}
 800f7b0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800f7b4:	f380 8811 	msr	BASEPRI, r0
 800f7b8:	f3bf 8f4f 	dsb	sy
 800f7bc:	f3bf 8f6f 	isb	sy
 800f7c0:	f001 f9bc 	bl	8010b3c <vTaskSwitchContext>
 800f7c4:	f04f 0000 	mov.w	r0, #0
 800f7c8:	f380 8811 	msr	BASEPRI, r0
 800f7cc:	bc09      	pop	{r0, r3}
 800f7ce:	6819      	ldr	r1, [r3, #0]
 800f7d0:	6808      	ldr	r0, [r1, #0]
 800f7d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7d6:	f01e 0f10 	tst.w	lr, #16
 800f7da:	bf08      	it	eq
 800f7dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800f7e0:	f380 8809 	msr	PSP, r0
 800f7e4:	f3bf 8f6f 	isb	sy
 800f7e8:	4770      	bx	lr
 800f7ea:	bf00      	nop
 800f7ec:	f3af 8000 	nop.w

0800f7f0 <pxCurrentTCBConst>:
 800f7f0:	2001db8c 	.word	0x2001db8c

0800f7f4 <SysTick_Handler>:
{
 800f7f4:	b508      	push	{r3, lr}
	__asm volatile
 800f7f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7fa:	f383 8811 	msr	BASEPRI, r3
 800f7fe:	f3bf 8f6f 	isb	sy
 800f802:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800f806:	f001 f86b 	bl	80108e0 <xTaskIncrementTick>
 800f80a:	b128      	cbz	r0, 800f818 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800f80c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f810:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f814:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800f818:	2300      	movs	r3, #0
 800f81a:	f383 8811 	msr	BASEPRI, r3
}
 800f81e:	bd08      	pop	{r3, pc}

0800f820 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800f820:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800f824:	2300      	movs	r3, #0
 800f826:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800f828:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800f82a:	4b05      	ldr	r3, [pc, #20]	; (800f840 <vPortSetupTimerInterrupt+0x20>)
 800f82c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800f830:	681b      	ldr	r3, [r3, #0]
 800f832:	fbb3 f3f1 	udiv	r3, r3, r1
 800f836:	3b01      	subs	r3, #1
 800f838:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800f83a:	2307      	movs	r3, #7
 800f83c:	6113      	str	r3, [r2, #16]
}
 800f83e:	4770      	bx	lr
 800f840:	2000008c 	.word	0x2000008c

0800f844 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800f844:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 800f848:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800f84a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800f84e:	4a3a      	ldr	r2, [pc, #232]	; (800f938 <xPortStartScheduler+0xf4>)
 800f850:	4291      	cmp	r1, r2
 800f852:	d108      	bne.n	800f866 <xPortStartScheduler+0x22>
	__asm volatile
 800f854:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f858:	f383 8811 	msr	BASEPRI, r3
 800f85c:	f3bf 8f6f 	isb	sy
 800f860:	f3bf 8f4f 	dsb	sy
 800f864:	e7fe      	b.n	800f864 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800f866:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800f86a:	4b34      	ldr	r3, [pc, #208]	; (800f93c <xPortStartScheduler+0xf8>)
 800f86c:	429a      	cmp	r2, r3
 800f86e:	d108      	bne.n	800f882 <xPortStartScheduler+0x3e>
 800f870:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f874:	f383 8811 	msr	BASEPRI, r3
 800f878:	f3bf 8f6f 	isb	sy
 800f87c:	f3bf 8f4f 	dsb	sy
 800f880:	e7fe      	b.n	800f880 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800f882:	4b2f      	ldr	r3, [pc, #188]	; (800f940 <xPortStartScheduler+0xfc>)
 800f884:	781a      	ldrb	r2, [r3, #0]
 800f886:	b2d2      	uxtb	r2, r2
 800f888:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800f88a:	22ff      	movs	r2, #255	; 0xff
 800f88c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800f88e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800f890:	4a2c      	ldr	r2, [pc, #176]	; (800f944 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800f892:	b2db      	uxtb	r3, r3
 800f894:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800f898:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800f89c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800f8a0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800f8a2:	4a29      	ldr	r2, [pc, #164]	; (800f948 <xPortStartScheduler+0x104>)
 800f8a4:	2307      	movs	r3, #7
 800f8a6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800f8a8:	2100      	movs	r1, #0
 800f8aa:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800f8ae:	0600      	lsls	r0, r0, #24
 800f8b0:	f103 34ff 	add.w	r4, r3, #4294967295
 800f8b4:	d40c      	bmi.n	800f8d0 <xPortStartScheduler+0x8c>
 800f8b6:	b111      	cbz	r1, 800f8be <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800f8b8:	2b03      	cmp	r3, #3
 800f8ba:	6013      	str	r3, [r2, #0]
 800f8bc:	d011      	beq.n	800f8e2 <xPortStartScheduler+0x9e>
 800f8be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8c2:	f383 8811 	msr	BASEPRI, r3
 800f8c6:	f3bf 8f6f 	isb	sy
 800f8ca:	f3bf 8f4f 	dsb	sy
 800f8ce:	e7fe      	b.n	800f8ce <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800f8d0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800f8d4:	005b      	lsls	r3, r3, #1
 800f8d6:	b2db      	uxtb	r3, r3
 800f8d8:	f88d 3003 	strb.w	r3, [sp, #3]
 800f8dc:	2101      	movs	r1, #1
 800f8de:	4623      	mov	r3, r4
 800f8e0:	e7e3      	b.n	800f8aa <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800f8e2:	f44f 7340 	mov.w	r3, #768	; 0x300
 800f8e6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800f8e8:	9b01      	ldr	r3, [sp, #4]
 800f8ea:	4a15      	ldr	r2, [pc, #84]	; (800f940 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800f8ec:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800f8f0:	b2db      	uxtb	r3, r3
 800f8f2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800f8f4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800f8f8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800f8fc:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800f900:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800f904:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800f908:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800f90c:	f7ff ff88 	bl	800f820 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800f910:	4b0e      	ldr	r3, [pc, #56]	; (800f94c <xPortStartScheduler+0x108>)
 800f912:	2500      	movs	r5, #0
 800f914:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800f916:	f7ff feb1 	bl	800f67c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800f91a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800f91e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800f922:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800f926:	f7ff fe95 	bl	800f654 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800f92a:	f001 f907 	bl	8010b3c <vTaskSwitchContext>
	prvTaskExitError();
 800f92e:	f7ff feaf 	bl	800f690 <prvTaskExitError>
}
 800f932:	4628      	mov	r0, r5
 800f934:	b003      	add	sp, #12
 800f936:	bd30      	pop	{r4, r5, pc}
 800f938:	410fc271 	.word	0x410fc271
 800f93c:	410fc270 	.word	0x410fc270
 800f940:	e000e400 	.word	0xe000e400
 800f944:	2001db44 	.word	0x2001db44
 800f948:	2001db48 	.word	0x2001db48
 800f94c:	20000098 	.word	0x20000098

0800f950 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800f950:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800f954:	2b0f      	cmp	r3, #15
 800f956:	d90e      	bls.n	800f976 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800f958:	4a11      	ldr	r2, [pc, #68]	; (800f9a0 <vPortValidateInterruptPriority+0x50>)
 800f95a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800f95c:	4a11      	ldr	r2, [pc, #68]	; (800f9a4 <vPortValidateInterruptPriority+0x54>)
 800f95e:	7812      	ldrb	r2, [r2, #0]
 800f960:	429a      	cmp	r2, r3
 800f962:	d908      	bls.n	800f976 <vPortValidateInterruptPriority+0x26>
 800f964:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f968:	f383 8811 	msr	BASEPRI, r3
 800f96c:	f3bf 8f6f 	isb	sy
 800f970:	f3bf 8f4f 	dsb	sy
 800f974:	e7fe      	b.n	800f974 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800f976:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f97a:	4a0b      	ldr	r2, [pc, #44]	; (800f9a8 <vPortValidateInterruptPriority+0x58>)
 800f97c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800f980:	6812      	ldr	r2, [r2, #0]
 800f982:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800f986:	4293      	cmp	r3, r2
 800f988:	d908      	bls.n	800f99c <vPortValidateInterruptPriority+0x4c>
 800f98a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f98e:	f383 8811 	msr	BASEPRI, r3
 800f992:	f3bf 8f6f 	isb	sy
 800f996:	f3bf 8f4f 	dsb	sy
 800f99a:	e7fe      	b.n	800f99a <vPortValidateInterruptPriority+0x4a>
	}
 800f99c:	4770      	bx	lr
 800f99e:	bf00      	nop
 800f9a0:	e000e3f0 	.word	0xe000e3f0
 800f9a4:	2001db44 	.word	0x2001db44
 800f9a8:	2001db48 	.word	0x2001db48

0800f9ac <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800f9ac:	b510      	push	{r4, lr}
 800f9ae:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800f9b0:	f7ff feb8 	bl	800f724 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800f9b4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800f9b6:	f7ff fed5 	bl	800f764 <vPortExitCritical>

	return xReturn;
}
 800f9ba:	fab4 f084 	clz	r0, r4
 800f9be:	0940      	lsrs	r0, r0, #5
 800f9c0:	bd10      	pop	{r4, pc}

0800f9c2 <prvCopyDataToQueue>:
{
 800f9c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f9c4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800f9c6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f9c8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800f9ca:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800f9cc:	b952      	cbnz	r2, 800f9e4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f9ce:	6807      	ldr	r7, [r0, #0]
 800f9d0:	bb47      	cbnz	r7, 800fa24 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800f9d2:	6880      	ldr	r0, [r0, #8]
 800f9d4:	f001 fa68 	bl	8010ea8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800f9d8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800f9da:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800f9dc:	3601      	adds	r6, #1
 800f9de:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800f9e0:	4628      	mov	r0, r5
 800f9e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800f9e4:	b965      	cbnz	r5, 800fa00 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f9e6:	6840      	ldr	r0, [r0, #4]
 800f9e8:	f01c fc64 	bl	802c2b4 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f9ec:	6863      	ldr	r3, [r4, #4]
 800f9ee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800f9f0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800f9f2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f9f4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800f9f6:	4293      	cmp	r3, r2
 800f9f8:	d3f0      	bcc.n	800f9dc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800f9fa:	6823      	ldr	r3, [r4, #0]
 800f9fc:	6063      	str	r3, [r4, #4]
 800f9fe:	e7ed      	b.n	800f9dc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800fa00:	68c0      	ldr	r0, [r0, #12]
 800fa02:	f01c fc57 	bl	802c2b4 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800fa06:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800fa08:	68e3      	ldr	r3, [r4, #12]
 800fa0a:	4251      	negs	r1, r2
 800fa0c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800fa0e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800fa10:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800fa12:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800fa14:	bf3e      	ittt	cc
 800fa16:	68a3      	ldrcc	r3, [r4, #8]
 800fa18:	185b      	addcc	r3, r3, r1
 800fa1a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800fa1c:	2d02      	cmp	r5, #2
 800fa1e:	d101      	bne.n	800fa24 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800fa20:	b116      	cbz	r6, 800fa28 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800fa22:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800fa24:	2500      	movs	r5, #0
 800fa26:	e7d9      	b.n	800f9dc <prvCopyDataToQueue+0x1a>
 800fa28:	4635      	mov	r5, r6
 800fa2a:	e7d7      	b.n	800f9dc <prvCopyDataToQueue+0x1a>

0800fa2c <prvCopyDataFromQueue>:
{
 800fa2c:	4603      	mov	r3, r0
 800fa2e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800fa30:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800fa32:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800fa34:	b16a      	cbz	r2, 800fa52 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800fa36:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800fa38:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800fa3a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800fa3c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800fa3e:	bf28      	it	cs
 800fa40:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800fa42:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800fa44:	bf28      	it	cs
 800fa46:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800fa48:	68d9      	ldr	r1, [r3, #12]
}
 800fa4a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800fa4e:	f01c bc31 	b.w	802c2b4 <memcpy>
}
 800fa52:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fa56:	4770      	bx	lr

0800fa58 <prvUnlockQueue>:
{
 800fa58:	b570      	push	{r4, r5, r6, lr}
 800fa5a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800fa5c:	f7ff fe62 	bl	800f724 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800fa60:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fa64:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800fa68:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fa6a:	2d00      	cmp	r5, #0
 800fa6c:	dc14      	bgt.n	800fa98 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800fa6e:	23ff      	movs	r3, #255	; 0xff
 800fa70:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800fa74:	f7ff fe76 	bl	800f764 <vPortExitCritical>
	taskENTER_CRITICAL();
 800fa78:	f7ff fe54 	bl	800f724 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800fa7c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fa80:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800fa84:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800fa86:	2d00      	cmp	r5, #0
 800fa88:	dc12      	bgt.n	800fab0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800fa8a:	23ff      	movs	r3, #255	; 0xff
 800fa8c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800fa90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800fa94:	f7ff be66 	b.w	800f764 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fa98:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fa9a:	2b00      	cmp	r3, #0
 800fa9c:	d0e7      	beq.n	800fa6e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fa9e:	4630      	mov	r0, r6
 800faa0:	f001 f91e 	bl	8010ce0 <xTaskRemoveFromEventList>
 800faa4:	b108      	cbz	r0, 800faaa <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800faa6:	f001 f9a7 	bl	8010df8 <vTaskMissedYield>
			--cTxLock;
 800faaa:	3d01      	subs	r5, #1
 800faac:	b26d      	sxtb	r5, r5
 800faae:	e7dc      	b.n	800fa6a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800fab0:	6923      	ldr	r3, [r4, #16]
 800fab2:	2b00      	cmp	r3, #0
 800fab4:	d0e9      	beq.n	800fa8a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fab6:	4630      	mov	r0, r6
 800fab8:	f001 f912 	bl	8010ce0 <xTaskRemoveFromEventList>
 800fabc:	b108      	cbz	r0, 800fac2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800fabe:	f001 f99b 	bl	8010df8 <vTaskMissedYield>
				--cRxLock;
 800fac2:	3d01      	subs	r5, #1
 800fac4:	b26d      	sxtb	r5, r5
 800fac6:	e7de      	b.n	800fa86 <prvUnlockQueue+0x2e>

0800fac8 <xQueueGenericReset>:
{
 800fac8:	b538      	push	{r3, r4, r5, lr}
 800faca:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800facc:	4604      	mov	r4, r0
 800face:	b940      	cbnz	r0, 800fae2 <xQueueGenericReset+0x1a>
 800fad0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fad4:	f383 8811 	msr	BASEPRI, r3
 800fad8:	f3bf 8f6f 	isb	sy
 800fadc:	f3bf 8f4f 	dsb	sy
 800fae0:	e7fe      	b.n	800fae0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800fae2:	f7ff fe1f 	bl	800f724 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800fae6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800faea:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800faec:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800faee:	434b      	muls	r3, r1
 800faf0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800faf2:	1a5b      	subs	r3, r3, r1
 800faf4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800faf6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800faf8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800fafa:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800fafc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800fafe:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800fb00:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800fb04:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800fb08:	b9a5      	cbnz	r5, 800fb34 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800fb0a:	6923      	ldr	r3, [r4, #16]
 800fb0c:	b173      	cbz	r3, 800fb2c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fb0e:	f104 0010 	add.w	r0, r4, #16
 800fb12:	f001 f8e5 	bl	8010ce0 <xTaskRemoveFromEventList>
 800fb16:	b148      	cbz	r0, 800fb2c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800fb18:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fb1c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fb20:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fb24:	f3bf 8f4f 	dsb	sy
 800fb28:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800fb2c:	f7ff fe1a 	bl	800f764 <vPortExitCritical>
}
 800fb30:	2001      	movs	r0, #1
 800fb32:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800fb34:	f104 0010 	add.w	r0, r4, #16
 800fb38:	f7ff fd4a 	bl	800f5d0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800fb3c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800fb40:	f7ff fd46 	bl	800f5d0 <vListInitialise>
 800fb44:	e7f2      	b.n	800fb2c <xQueueGenericReset+0x64>

0800fb46 <xQueueGenericCreateStatic>:
	{
 800fb46:	b513      	push	{r0, r1, r4, lr}
 800fb48:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800fb4a:	b940      	cbnz	r0, 800fb5e <xQueueGenericCreateStatic+0x18>
 800fb4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb50:	f383 8811 	msr	BASEPRI, r3
 800fb54:	f3bf 8f6f 	isb	sy
 800fb58:	f3bf 8f4f 	dsb	sy
 800fb5c:	e7fe      	b.n	800fb5c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800fb5e:	b943      	cbnz	r3, 800fb72 <xQueueGenericCreateStatic+0x2c>
 800fb60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb64:	f383 8811 	msr	BASEPRI, r3
 800fb68:	f3bf 8f6f 	isb	sy
 800fb6c:	f3bf 8f4f 	dsb	sy
 800fb70:	e7fe      	b.n	800fb70 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800fb72:	b14a      	cbz	r2, 800fb88 <xQueueGenericCreateStatic+0x42>
 800fb74:	b991      	cbnz	r1, 800fb9c <xQueueGenericCreateStatic+0x56>
 800fb76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb7a:	f383 8811 	msr	BASEPRI, r3
 800fb7e:	f3bf 8f6f 	isb	sy
 800fb82:	f3bf 8f4f 	dsb	sy
 800fb86:	e7fe      	b.n	800fb86 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800fb88:	b141      	cbz	r1, 800fb9c <xQueueGenericCreateStatic+0x56>
 800fb8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb8e:	f383 8811 	msr	BASEPRI, r3
 800fb92:	f3bf 8f6f 	isb	sy
 800fb96:	f3bf 8f4f 	dsb	sy
 800fb9a:	e7fe      	b.n	800fb9a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800fb9c:	2350      	movs	r3, #80	; 0x50
 800fb9e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800fba0:	9b01      	ldr	r3, [sp, #4]
 800fba2:	2b50      	cmp	r3, #80	; 0x50
 800fba4:	d008      	beq.n	800fbb8 <xQueueGenericCreateStatic+0x72>
 800fba6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbaa:	f383 8811 	msr	BASEPRI, r3
 800fbae:	f3bf 8f6f 	isb	sy
 800fbb2:	f3bf 8f4f 	dsb	sy
 800fbb6:	e7fe      	b.n	800fbb6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800fbb8:	2900      	cmp	r1, #0
 800fbba:	bf08      	it	eq
 800fbbc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800fbbe:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800fbc0:	6022      	str	r2, [r4, #0]
 800fbc2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800fbc4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800fbc8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800fbcc:	4619      	mov	r1, r3
 800fbce:	4620      	mov	r0, r4
 800fbd0:	f7ff ff7a 	bl	800fac8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800fbd4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800fbd8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800fbdc:	4620      	mov	r0, r4
 800fbde:	b002      	add	sp, #8
 800fbe0:	bd10      	pop	{r4, pc}

0800fbe2 <xQueueGenericCreate>:
	{
 800fbe2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fbe4:	460d      	mov	r5, r1
 800fbe6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800fbe8:	4606      	mov	r6, r0
 800fbea:	b940      	cbnz	r0, 800fbfe <xQueueGenericCreate+0x1c>
 800fbec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbf0:	f383 8811 	msr	BASEPRI, r3
 800fbf4:	f3bf 8f6f 	isb	sy
 800fbf8:	f3bf 8f4f 	dsb	sy
 800fbfc:	e7fe      	b.n	800fbfc <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fbfe:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800fc00:	3050      	adds	r0, #80	; 0x50
 800fc02:	f7ff fc1b 	bl	800f43c <pvPortMalloc>
		if( pxNewQueue != NULL )
 800fc06:	4604      	mov	r4, r0
 800fc08:	b170      	cbz	r0, 800fc28 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800fc0a:	2300      	movs	r3, #0
 800fc0c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800fc10:	b165      	cbz	r5, 800fc2c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800fc12:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800fc16:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800fc1a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800fc1c:	2101      	movs	r1, #1
 800fc1e:	4620      	mov	r0, r4
 800fc20:	f7ff ff52 	bl	800fac8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800fc24:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800fc28:	4620      	mov	r0, r4
 800fc2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fc2c:	4603      	mov	r3, r0
 800fc2e:	e7f2      	b.n	800fc16 <xQueueGenericCreate+0x34>

0800fc30 <xQueueCreateCountingSemaphoreStatic>:
	{
 800fc30:	b513      	push	{r0, r1, r4, lr}
 800fc32:	4613      	mov	r3, r2
 800fc34:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800fc36:	b940      	cbnz	r0, 800fc4a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800fc38:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc3c:	f383 8811 	msr	BASEPRI, r3
 800fc40:	f3bf 8f6f 	isb	sy
 800fc44:	f3bf 8f4f 	dsb	sy
 800fc48:	e7fe      	b.n	800fc48 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800fc4a:	4288      	cmp	r0, r1
 800fc4c:	d208      	bcs.n	800fc60 <xQueueCreateCountingSemaphoreStatic+0x30>
 800fc4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc52:	f383 8811 	msr	BASEPRI, r3
 800fc56:	f3bf 8f6f 	isb	sy
 800fc5a:	f3bf 8f4f 	dsb	sy
 800fc5e:	e7fe      	b.n	800fc5e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800fc60:	2202      	movs	r2, #2
 800fc62:	9200      	str	r2, [sp, #0]
 800fc64:	2200      	movs	r2, #0
 800fc66:	4611      	mov	r1, r2
 800fc68:	f7ff ff6d 	bl	800fb46 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800fc6c:	b100      	cbz	r0, 800fc70 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800fc6e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800fc70:	b002      	add	sp, #8
 800fc72:	bd10      	pop	{r4, pc}

0800fc74 <xQueueCreateCountingSemaphore>:
	{
 800fc74:	b510      	push	{r4, lr}
 800fc76:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800fc78:	b940      	cbnz	r0, 800fc8c <xQueueCreateCountingSemaphore+0x18>
 800fc7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc7e:	f383 8811 	msr	BASEPRI, r3
 800fc82:	f3bf 8f6f 	isb	sy
 800fc86:	f3bf 8f4f 	dsb	sy
 800fc8a:	e7fe      	b.n	800fc8a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800fc8c:	4288      	cmp	r0, r1
 800fc8e:	d208      	bcs.n	800fca2 <xQueueCreateCountingSemaphore+0x2e>
 800fc90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc94:	f383 8811 	msr	BASEPRI, r3
 800fc98:	f3bf 8f6f 	isb	sy
 800fc9c:	f3bf 8f4f 	dsb	sy
 800fca0:	e7fe      	b.n	800fca0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800fca2:	2202      	movs	r2, #2
 800fca4:	2100      	movs	r1, #0
 800fca6:	f7ff ff9c 	bl	800fbe2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800fcaa:	b100      	cbz	r0, 800fcae <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800fcac:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800fcae:	bd10      	pop	{r4, pc}

0800fcb0 <xQueueGenericSend>:
{
 800fcb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fcb4:	b085      	sub	sp, #20
 800fcb6:	4688      	mov	r8, r1
 800fcb8:	9201      	str	r2, [sp, #4]
 800fcba:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800fcbc:	4604      	mov	r4, r0
 800fcbe:	b940      	cbnz	r0, 800fcd2 <xQueueGenericSend+0x22>
 800fcc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcc4:	f383 8811 	msr	BASEPRI, r3
 800fcc8:	f3bf 8f6f 	isb	sy
 800fccc:	f3bf 8f4f 	dsb	sy
 800fcd0:	e7fe      	b.n	800fcd0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800fcd2:	b951      	cbnz	r1, 800fcea <xQueueGenericSend+0x3a>
 800fcd4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800fcd6:	b143      	cbz	r3, 800fcea <xQueueGenericSend+0x3a>
 800fcd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcdc:	f383 8811 	msr	BASEPRI, r3
 800fce0:	f3bf 8f6f 	isb	sy
 800fce4:	f3bf 8f4f 	dsb	sy
 800fce8:	e7fe      	b.n	800fce8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800fcea:	2f02      	cmp	r7, #2
 800fcec:	d10b      	bne.n	800fd06 <xQueueGenericSend+0x56>
 800fcee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fcf0:	2b01      	cmp	r3, #1
 800fcf2:	d008      	beq.n	800fd06 <xQueueGenericSend+0x56>
 800fcf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcf8:	f383 8811 	msr	BASEPRI, r3
 800fcfc:	f3bf 8f6f 	isb	sy
 800fd00:	f3bf 8f4f 	dsb	sy
 800fd04:	e7fe      	b.n	800fd04 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800fd06:	f001 f87d 	bl	8010e04 <xTaskGetSchedulerState>
 800fd0a:	4606      	mov	r6, r0
 800fd0c:	b950      	cbnz	r0, 800fd24 <xQueueGenericSend+0x74>
 800fd0e:	9b01      	ldr	r3, [sp, #4]
 800fd10:	b14b      	cbz	r3, 800fd26 <xQueueGenericSend+0x76>
 800fd12:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd16:	f383 8811 	msr	BASEPRI, r3
 800fd1a:	f3bf 8f6f 	isb	sy
 800fd1e:	f3bf 8f4f 	dsb	sy
 800fd22:	e7fe      	b.n	800fd22 <xQueueGenericSend+0x72>
 800fd24:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800fd26:	f04f 0900 	mov.w	r9, #0
 800fd2a:	e037      	b.n	800fd9c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800fd2c:	9d01      	ldr	r5, [sp, #4]
 800fd2e:	b91d      	cbnz	r5, 800fd38 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800fd30:	f7ff fd18 	bl	800f764 <vPortExitCritical>
			return errQUEUE_FULL;
 800fd34:	2000      	movs	r0, #0
 800fd36:	e052      	b.n	800fdde <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800fd38:	b916      	cbnz	r6, 800fd40 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800fd3a:	a802      	add	r0, sp, #8
 800fd3c:	f001 f814 	bl	8010d68 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800fd40:	f7ff fd10 	bl	800f764 <vPortExitCritical>
		vTaskSuspendAll();
 800fd44:	f000 fdbe 	bl	80108c4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800fd48:	f7ff fcec 	bl	800f724 <vPortEnterCritical>
 800fd4c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800fd50:	2bff      	cmp	r3, #255	; 0xff
 800fd52:	bf08      	it	eq
 800fd54:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800fd58:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800fd5c:	2bff      	cmp	r3, #255	; 0xff
 800fd5e:	bf08      	it	eq
 800fd60:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800fd64:	f7ff fcfe 	bl	800f764 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800fd68:	a901      	add	r1, sp, #4
 800fd6a:	a802      	add	r0, sp, #8
 800fd6c:	f001 f808 	bl	8010d80 <xTaskCheckForTimeOut>
 800fd70:	2800      	cmp	r0, #0
 800fd72:	d14a      	bne.n	800fe0a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800fd74:	f7ff fcd6 	bl	800f724 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800fd78:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800fd7a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fd7c:	429a      	cmp	r2, r3
 800fd7e:	d131      	bne.n	800fde4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800fd80:	f7ff fcf0 	bl	800f764 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800fd84:	9901      	ldr	r1, [sp, #4]
 800fd86:	f104 0010 	add.w	r0, r4, #16
 800fd8a:	f000 ff71 	bl	8010c70 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800fd8e:	4620      	mov	r0, r4
 800fd90:	f7ff fe62 	bl	800fa58 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800fd94:	f000 fe3a 	bl	8010a0c <xTaskResumeAll>
 800fd98:	b360      	cbz	r0, 800fdf4 <xQueueGenericSend+0x144>
 800fd9a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800fd9c:	f7ff fcc2 	bl	800f724 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800fda0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800fda2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fda4:	429a      	cmp	r2, r3
 800fda6:	d301      	bcc.n	800fdac <xQueueGenericSend+0xfc>
 800fda8:	2f02      	cmp	r7, #2
 800fdaa:	d1bf      	bne.n	800fd2c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800fdac:	463a      	mov	r2, r7
 800fdae:	4641      	mov	r1, r8
 800fdb0:	4620      	mov	r0, r4
 800fdb2:	f7ff fe06 	bl	800f9c2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fdb6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fdb8:	b11b      	cbz	r3, 800fdc2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fdba:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800fdbe:	f000 ff8f 	bl	8010ce0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800fdc2:	b148      	cbz	r0, 800fdd8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800fdc4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fdc8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fdcc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fdd0:	f3bf 8f4f 	dsb	sy
 800fdd4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800fdd8:	f7ff fcc4 	bl	800f764 <vPortExitCritical>
				return pdPASS;
 800fddc:	2001      	movs	r0, #1
}
 800fdde:	b005      	add	sp, #20
 800fde0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800fde4:	f7ff fcbe 	bl	800f764 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800fde8:	4620      	mov	r0, r4
 800fdea:	f7ff fe35 	bl	800fa58 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800fdee:	f000 fe0d 	bl	8010a0c <xTaskResumeAll>
 800fdf2:	e7d2      	b.n	800fd9a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800fdf4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fdf8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fdfc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fe00:	f3bf 8f4f 	dsb	sy
 800fe04:	f3bf 8f6f 	isb	sy
 800fe08:	e7c7      	b.n	800fd9a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800fe0a:	4620      	mov	r0, r4
 800fe0c:	f7ff fe24 	bl	800fa58 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800fe10:	f000 fdfc 	bl	8010a0c <xTaskResumeAll>
 800fe14:	e78e      	b.n	800fd34 <xQueueGenericSend+0x84>

0800fe16 <xQueueGenericSendFromISR>:
{
 800fe16:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fe1a:	4689      	mov	r9, r1
 800fe1c:	4690      	mov	r8, r2
 800fe1e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800fe20:	4604      	mov	r4, r0
 800fe22:	b940      	cbnz	r0, 800fe36 <xQueueGenericSendFromISR+0x20>
 800fe24:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe28:	f383 8811 	msr	BASEPRI, r3
 800fe2c:	f3bf 8f6f 	isb	sy
 800fe30:	f3bf 8f4f 	dsb	sy
 800fe34:	e7fe      	b.n	800fe34 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800fe36:	b951      	cbnz	r1, 800fe4e <xQueueGenericSendFromISR+0x38>
 800fe38:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800fe3a:	b143      	cbz	r3, 800fe4e <xQueueGenericSendFromISR+0x38>
 800fe3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe40:	f383 8811 	msr	BASEPRI, r3
 800fe44:	f3bf 8f6f 	isb	sy
 800fe48:	f3bf 8f4f 	dsb	sy
 800fe4c:	e7fe      	b.n	800fe4c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800fe4e:	2f02      	cmp	r7, #2
 800fe50:	d10b      	bne.n	800fe6a <xQueueGenericSendFromISR+0x54>
 800fe52:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fe54:	2b01      	cmp	r3, #1
 800fe56:	d008      	beq.n	800fe6a <xQueueGenericSendFromISR+0x54>
 800fe58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe5c:	f383 8811 	msr	BASEPRI, r3
 800fe60:	f3bf 8f6f 	isb	sy
 800fe64:	f3bf 8f4f 	dsb	sy
 800fe68:	e7fe      	b.n	800fe68 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800fe6a:	f7ff fd71 	bl	800f950 <vPortValidateInterruptPriority>
	__asm volatile
 800fe6e:	f3ef 8611 	mrs	r6, BASEPRI
 800fe72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe76:	f383 8811 	msr	BASEPRI, r3
 800fe7a:	f3bf 8f6f 	isb	sy
 800fe7e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800fe82:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800fe84:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fe86:	429a      	cmp	r2, r3
 800fe88:	d301      	bcc.n	800fe8e <xQueueGenericSendFromISR+0x78>
 800fe8a:	2f02      	cmp	r7, #2
 800fe8c:	d122      	bne.n	800fed4 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800fe8e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800fe92:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 800fe94:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800fe96:	4649      	mov	r1, r9
 800fe98:	4620      	mov	r0, r4
 800fe9a:	f7ff fd92 	bl	800f9c2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800fe9e:	1c6b      	adds	r3, r5, #1
 800fea0:	d113      	bne.n	800feca <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fea2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fea4:	b90b      	cbnz	r3, 800feaa <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 800fea6:	2001      	movs	r0, #1
 800fea8:	e00b      	b.n	800fec2 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800feaa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800feae:	f000 ff17 	bl	8010ce0 <xTaskRemoveFromEventList>
 800feb2:	2800      	cmp	r0, #0
 800feb4:	d0f7      	beq.n	800fea6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 800feb6:	f1b8 0f00 	cmp.w	r8, #0
 800feba:	d0f4      	beq.n	800fea6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800febc:	2001      	movs	r0, #1
 800febe:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800fec2:	f386 8811 	msr	BASEPRI, r6
}
 800fec6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800feca:	3501      	adds	r5, #1
 800fecc:	b26d      	sxtb	r5, r5
 800fece:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800fed2:	e7e8      	b.n	800fea6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 800fed4:	2000      	movs	r0, #0
 800fed6:	e7f4      	b.n	800fec2 <xQueueGenericSendFromISR+0xac>

0800fed8 <xQueueGiveFromISR>:
{
 800fed8:	b570      	push	{r4, r5, r6, lr}
 800feda:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800fedc:	4604      	mov	r4, r0
 800fede:	b940      	cbnz	r0, 800fef2 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800fee0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fee4:	f383 8811 	msr	BASEPRI, r3
 800fee8:	f3bf 8f6f 	isb	sy
 800feec:	f3bf 8f4f 	dsb	sy
 800fef0:	e7fe      	b.n	800fef0 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800fef2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800fef4:	b143      	cbz	r3, 800ff08 <xQueueGiveFromISR+0x30>
 800fef6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fefa:	f383 8811 	msr	BASEPRI, r3
 800fefe:	f3bf 8f6f 	isb	sy
 800ff02:	f3bf 8f4f 	dsb	sy
 800ff06:	e7fe      	b.n	800ff06 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ff08:	6803      	ldr	r3, [r0, #0]
 800ff0a:	b953      	cbnz	r3, 800ff22 <xQueueGiveFromISR+0x4a>
 800ff0c:	6883      	ldr	r3, [r0, #8]
 800ff0e:	b143      	cbz	r3, 800ff22 <xQueueGiveFromISR+0x4a>
 800ff10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff14:	f383 8811 	msr	BASEPRI, r3
 800ff18:	f3bf 8f6f 	isb	sy
 800ff1c:	f3bf 8f4f 	dsb	sy
 800ff20:	e7fe      	b.n	800ff20 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ff22:	f7ff fd15 	bl	800f950 <vPortValidateInterruptPriority>
	__asm volatile
 800ff26:	f3ef 8611 	mrs	r6, BASEPRI
 800ff2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff2e:	f383 8811 	msr	BASEPRI, r3
 800ff32:	f3bf 8f6f 	isb	sy
 800ff36:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ff3a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800ff3c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ff3e:	4293      	cmp	r3, r2
 800ff40:	d91c      	bls.n	800ff7c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ff42:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ff46:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800ff48:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800ff4a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ff4c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800ff4e:	d110      	bne.n	800ff72 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ff50:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ff52:	b90b      	cbnz	r3, 800ff58 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800ff54:	2001      	movs	r0, #1
 800ff56:	e009      	b.n	800ff6c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ff58:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ff5c:	f000 fec0 	bl	8010ce0 <xTaskRemoveFromEventList>
 800ff60:	2800      	cmp	r0, #0
 800ff62:	d0f7      	beq.n	800ff54 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800ff64:	2d00      	cmp	r5, #0
 800ff66:	d0f5      	beq.n	800ff54 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ff68:	2001      	movs	r0, #1
 800ff6a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800ff6c:	f386 8811 	msr	BASEPRI, r6
}
 800ff70:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ff72:	3301      	adds	r3, #1
 800ff74:	b25b      	sxtb	r3, r3
 800ff76:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800ff7a:	e7eb      	b.n	800ff54 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800ff7c:	2000      	movs	r0, #0
 800ff7e:	e7f5      	b.n	800ff6c <xQueueGiveFromISR+0x94>

0800ff80 <xQueueReceive>:
{
 800ff80:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ff84:	460f      	mov	r7, r1
 800ff86:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ff88:	4604      	mov	r4, r0
 800ff8a:	b940      	cbnz	r0, 800ff9e <xQueueReceive+0x1e>
	__asm volatile
 800ff8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff90:	f383 8811 	msr	BASEPRI, r3
 800ff94:	f3bf 8f6f 	isb	sy
 800ff98:	f3bf 8f4f 	dsb	sy
 800ff9c:	e7fe      	b.n	800ff9c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ff9e:	b951      	cbnz	r1, 800ffb6 <xQueueReceive+0x36>
 800ffa0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ffa2:	b143      	cbz	r3, 800ffb6 <xQueueReceive+0x36>
 800ffa4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffa8:	f383 8811 	msr	BASEPRI, r3
 800ffac:	f3bf 8f6f 	isb	sy
 800ffb0:	f3bf 8f4f 	dsb	sy
 800ffb4:	e7fe      	b.n	800ffb4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ffb6:	f000 ff25 	bl	8010e04 <xTaskGetSchedulerState>
 800ffba:	4606      	mov	r6, r0
 800ffbc:	b950      	cbnz	r0, 800ffd4 <xQueueReceive+0x54>
 800ffbe:	9b01      	ldr	r3, [sp, #4]
 800ffc0:	b14b      	cbz	r3, 800ffd6 <xQueueReceive+0x56>
 800ffc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffc6:	f383 8811 	msr	BASEPRI, r3
 800ffca:	f3bf 8f6f 	isb	sy
 800ffce:	f3bf 8f4f 	dsb	sy
 800ffd2:	e7fe      	b.n	800ffd2 <xQueueReceive+0x52>
 800ffd4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800ffd6:	f04f 0800 	mov.w	r8, #0
 800ffda:	e03d      	b.n	8010058 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ffdc:	9d01      	ldr	r5, [sp, #4]
 800ffde:	b91d      	cbnz	r5, 800ffe8 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 800ffe0:	f7ff fbc0 	bl	800f764 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800ffe4:	2000      	movs	r0, #0
 800ffe6:	e056      	b.n	8010096 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800ffe8:	b916      	cbnz	r6, 800fff0 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ffea:	a802      	add	r0, sp, #8
 800ffec:	f000 febc 	bl	8010d68 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800fff0:	f7ff fbb8 	bl	800f764 <vPortExitCritical>
		vTaskSuspendAll();
 800fff4:	f000 fc66 	bl	80108c4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800fff8:	f7ff fb94 	bl	800f724 <vPortEnterCritical>
 800fffc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010000:	2bff      	cmp	r3, #255	; 0xff
 8010002:	bf08      	it	eq
 8010004:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8010008:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 801000c:	2bff      	cmp	r3, #255	; 0xff
 801000e:	bf08      	it	eq
 8010010:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8010014:	f7ff fba6 	bl	800f764 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010018:	a901      	add	r1, sp, #4
 801001a:	a802      	add	r0, sp, #8
 801001c:	f000 feb0 	bl	8010d80 <xTaskCheckForTimeOut>
 8010020:	2800      	cmp	r0, #0
 8010022:	d141      	bne.n	80100a8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8010024:	4620      	mov	r0, r4
 8010026:	f7ff fcc1 	bl	800f9ac <prvIsQueueEmpty>
 801002a:	b3b8      	cbz	r0, 801009c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 801002c:	9901      	ldr	r1, [sp, #4]
 801002e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010032:	f000 fe1d 	bl	8010c70 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8010036:	4620      	mov	r0, r4
 8010038:	f7ff fd0e 	bl	800fa58 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 801003c:	f000 fce6 	bl	8010a0c <xTaskResumeAll>
 8010040:	b948      	cbnz	r0, 8010056 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8010042:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010046:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801004a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801004e:	f3bf 8f4f 	dsb	sy
 8010052:	f3bf 8f6f 	isb	sy
 8010056:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8010058:	f7ff fb64 	bl	800f724 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801005c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 801005e:	2d00      	cmp	r5, #0
 8010060:	d0bc      	beq.n	800ffdc <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8010062:	4639      	mov	r1, r7
 8010064:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8010066:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8010068:	f7ff fce0 	bl	800fa2c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 801006c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801006e:	6923      	ldr	r3, [r4, #16]
 8010070:	b173      	cbz	r3, 8010090 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010072:	f104 0010 	add.w	r0, r4, #16
 8010076:	f000 fe33 	bl	8010ce0 <xTaskRemoveFromEventList>
 801007a:	b148      	cbz	r0, 8010090 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 801007c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010080:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010084:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010088:	f3bf 8f4f 	dsb	sy
 801008c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8010090:	f7ff fb68 	bl	800f764 <vPortExitCritical>
				return pdPASS;
 8010094:	2001      	movs	r0, #1
}
 8010096:	b004      	add	sp, #16
 8010098:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 801009c:	4620      	mov	r0, r4
 801009e:	f7ff fcdb 	bl	800fa58 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80100a2:	f000 fcb3 	bl	8010a0c <xTaskResumeAll>
 80100a6:	e7d6      	b.n	8010056 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 80100a8:	4620      	mov	r0, r4
 80100aa:	f7ff fcd5 	bl	800fa58 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80100ae:	f000 fcad 	bl	8010a0c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80100b2:	4620      	mov	r0, r4
 80100b4:	f7ff fc7a 	bl	800f9ac <prvIsQueueEmpty>
 80100b8:	2800      	cmp	r0, #0
 80100ba:	d0cc      	beq.n	8010056 <xQueueReceive+0xd6>
 80100bc:	e792      	b.n	800ffe4 <xQueueReceive+0x64>

080100be <xQueueSemaphoreTake>:
{
 80100be:	b5f0      	push	{r4, r5, r6, r7, lr}
 80100c0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80100c2:	4604      	mov	r4, r0
{
 80100c4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80100c6:	b940      	cbnz	r0, 80100da <xQueueSemaphoreTake+0x1c>
 80100c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100cc:	f383 8811 	msr	BASEPRI, r3
 80100d0:	f3bf 8f6f 	isb	sy
 80100d4:	f3bf 8f4f 	dsb	sy
 80100d8:	e7fe      	b.n	80100d8 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80100da:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80100dc:	b145      	cbz	r5, 80100f0 <xQueueSemaphoreTake+0x32>
 80100de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100e2:	f383 8811 	msr	BASEPRI, r3
 80100e6:	f3bf 8f6f 	isb	sy
 80100ea:	f3bf 8f4f 	dsb	sy
 80100ee:	e7fe      	b.n	80100ee <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80100f0:	f000 fe88 	bl	8010e04 <xTaskGetSchedulerState>
 80100f4:	4606      	mov	r6, r0
 80100f6:	b950      	cbnz	r0, 801010e <xQueueSemaphoreTake+0x50>
 80100f8:	9b01      	ldr	r3, [sp, #4]
 80100fa:	b15b      	cbz	r3, 8010114 <xQueueSemaphoreTake+0x56>
 80100fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010100:	f383 8811 	msr	BASEPRI, r3
 8010104:	f3bf 8f6f 	isb	sy
 8010108:	f3bf 8f4f 	dsb	sy
 801010c:	e7fe      	b.n	801010c <xQueueSemaphoreTake+0x4e>
 801010e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8010110:	2700      	movs	r7, #0
 8010112:	e053      	b.n	80101bc <xQueueSemaphoreTake+0xfe>
 8010114:	4605      	mov	r5, r0
 8010116:	e7fb      	b.n	8010110 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010118:	9b01      	ldr	r3, [sp, #4]
 801011a:	b963      	cbnz	r3, 8010136 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 801011c:	b145      	cbz	r5, 8010130 <xQueueSemaphoreTake+0x72>
 801011e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010122:	f383 8811 	msr	BASEPRI, r3
 8010126:	f3bf 8f6f 	isb	sy
 801012a:	f3bf 8f4f 	dsb	sy
 801012e:	e7fe      	b.n	801012e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8010130:	f7ff fb18 	bl	800f764 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8010134:	e062      	b.n	80101fc <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8010136:	b916      	cbnz	r6, 801013e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010138:	a802      	add	r0, sp, #8
 801013a:	f000 fe15 	bl	8010d68 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 801013e:	f7ff fb11 	bl	800f764 <vPortExitCritical>
		vTaskSuspendAll();
 8010142:	f000 fbbf 	bl	80108c4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010146:	f7ff faed 	bl	800f724 <vPortEnterCritical>
 801014a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801014e:	2bff      	cmp	r3, #255	; 0xff
 8010150:	bf08      	it	eq
 8010152:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8010156:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 801015a:	2bff      	cmp	r3, #255	; 0xff
 801015c:	bf08      	it	eq
 801015e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8010162:	f7ff faff 	bl	800f764 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010166:	a901      	add	r1, sp, #4
 8010168:	a802      	add	r0, sp, #8
 801016a:	f000 fe09 	bl	8010d80 <xTaskCheckForTimeOut>
 801016e:	2800      	cmp	r0, #0
 8010170:	d14d      	bne.n	801020e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8010172:	4620      	mov	r0, r4
 8010174:	f7ff fc1a 	bl	800f9ac <prvIsQueueEmpty>
 8010178:	2800      	cmp	r0, #0
 801017a:	d042      	beq.n	8010202 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 801017c:	6823      	ldr	r3, [r4, #0]
 801017e:	b93b      	cbnz	r3, 8010190 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8010180:	f7ff fad0 	bl	800f724 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8010184:	68a0      	ldr	r0, [r4, #8]
 8010186:	f000 fe4d 	bl	8010e24 <xTaskPriorityInherit>
 801018a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 801018c:	f7ff faea 	bl	800f764 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010190:	9901      	ldr	r1, [sp, #4]
 8010192:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010196:	f000 fd6b 	bl	8010c70 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 801019a:	4620      	mov	r0, r4
 801019c:	f7ff fc5c 	bl	800fa58 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80101a0:	f000 fc34 	bl	8010a0c <xTaskResumeAll>
 80101a4:	b948      	cbnz	r0, 80101ba <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80101a6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80101aa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80101ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80101b2:	f3bf 8f4f 	dsb	sy
 80101b6:	f3bf 8f6f 	isb	sy
 80101ba:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80101bc:	f7ff fab2 	bl	800f724 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80101c0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80101c2:	2b00      	cmp	r3, #0
 80101c4:	d0a8      	beq.n	8010118 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80101c6:	3b01      	subs	r3, #1
 80101c8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80101ca:	6823      	ldr	r3, [r4, #0]
 80101cc:	b913      	cbnz	r3, 80101d4 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80101ce:	f000 ff01 	bl	8010fd4 <pvTaskIncrementMutexHeldCount>
 80101d2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80101d4:	6923      	ldr	r3, [r4, #16]
 80101d6:	b173      	cbz	r3, 80101f6 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80101d8:	f104 0010 	add.w	r0, r4, #16
 80101dc:	f000 fd80 	bl	8010ce0 <xTaskRemoveFromEventList>
 80101e0:	b148      	cbz	r0, 80101f6 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 80101e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80101e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80101ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80101ee:	f3bf 8f4f 	dsb	sy
 80101f2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80101f6:	f7ff fab5 	bl	800f764 <vPortExitCritical>
				return pdPASS;
 80101fa:	2501      	movs	r5, #1
}
 80101fc:	4628      	mov	r0, r5
 80101fe:	b005      	add	sp, #20
 8010200:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8010202:	4620      	mov	r0, r4
 8010204:	f7ff fc28 	bl	800fa58 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8010208:	f000 fc00 	bl	8010a0c <xTaskResumeAll>
 801020c:	e7d5      	b.n	80101ba <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 801020e:	4620      	mov	r0, r4
 8010210:	f7ff fc22 	bl	800fa58 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8010214:	f000 fbfa 	bl	8010a0c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8010218:	4620      	mov	r0, r4
 801021a:	f7ff fbc7 	bl	800f9ac <prvIsQueueEmpty>
 801021e:	2800      	cmp	r0, #0
 8010220:	d0cb      	beq.n	80101ba <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8010222:	2d00      	cmp	r5, #0
 8010224:	d0ea      	beq.n	80101fc <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8010226:	f7ff fa7d 	bl	800f724 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 801022a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801022c:	b119      	cbz	r1, 8010236 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 801022e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010230:	6819      	ldr	r1, [r3, #0]
 8010232:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8010236:	68a0      	ldr	r0, [r4, #8]
 8010238:	f000 fe7a 	bl	8010f30 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 801023c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 801023e:	f7ff fa91 	bl	800f764 <vPortExitCritical>
 8010242:	e7db      	b.n	80101fc <xQueueSemaphoreTake+0x13e>

08010244 <xQueueReceiveFromISR>:
{
 8010244:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010248:	4689      	mov	r9, r1
 801024a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 801024c:	4605      	mov	r5, r0
 801024e:	b940      	cbnz	r0, 8010262 <xQueueReceiveFromISR+0x1e>
 8010250:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010254:	f383 8811 	msr	BASEPRI, r3
 8010258:	f3bf 8f6f 	isb	sy
 801025c:	f3bf 8f4f 	dsb	sy
 8010260:	e7fe      	b.n	8010260 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010262:	b951      	cbnz	r1, 801027a <xQueueReceiveFromISR+0x36>
 8010264:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010266:	b143      	cbz	r3, 801027a <xQueueReceiveFromISR+0x36>
 8010268:	f04f 0350 	mov.w	r3, #80	; 0x50
 801026c:	f383 8811 	msr	BASEPRI, r3
 8010270:	f3bf 8f6f 	isb	sy
 8010274:	f3bf 8f4f 	dsb	sy
 8010278:	e7fe      	b.n	8010278 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 801027a:	f7ff fb69 	bl	800f950 <vPortValidateInterruptPriority>
	__asm volatile
 801027e:	f3ef 8711 	mrs	r7, BASEPRI
 8010282:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010286:	f383 8811 	msr	BASEPRI, r3
 801028a:	f3bf 8f6f 	isb	sy
 801028e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010292:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010294:	b31c      	cbz	r4, 80102de <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8010296:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 801029a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 801029c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 801029e:	4628      	mov	r0, r5
 80102a0:	f7ff fbc4 	bl	800fa2c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80102a4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80102a6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80102a8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80102aa:	d113      	bne.n	80102d4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80102ac:	692b      	ldr	r3, [r5, #16]
 80102ae:	b90b      	cbnz	r3, 80102b4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80102b0:	2001      	movs	r0, #1
 80102b2:	e00b      	b.n	80102cc <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80102b4:	f105 0010 	add.w	r0, r5, #16
 80102b8:	f000 fd12 	bl	8010ce0 <xTaskRemoveFromEventList>
 80102bc:	2800      	cmp	r0, #0
 80102be:	d0f7      	beq.n	80102b0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80102c0:	f1b8 0f00 	cmp.w	r8, #0
 80102c4:	d0f4      	beq.n	80102b0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80102c6:	2001      	movs	r0, #1
 80102c8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80102cc:	f387 8811 	msr	BASEPRI, r7
}
 80102d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80102d4:	3601      	adds	r6, #1
 80102d6:	b276      	sxtb	r6, r6
 80102d8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80102dc:	e7e8      	b.n	80102b0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80102de:	4620      	mov	r0, r4
 80102e0:	e7f4      	b.n	80102cc <xQueueReceiveFromISR+0x88>
	...

080102e4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80102e4:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80102e6:	4a07      	ldr	r2, [pc, #28]	; (8010304 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80102e8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80102ea:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 80102ee:	b92c      	cbnz	r4, 80102fc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80102f0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80102f4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80102f8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80102fa:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80102fc:	3301      	adds	r3, #1
 80102fe:	2b08      	cmp	r3, #8
 8010300:	d1f3      	bne.n	80102ea <vQueueAddToRegistry+0x6>
 8010302:	e7fa      	b.n	80102fa <vQueueAddToRegistry+0x16>
 8010304:	2001db4c 	.word	0x2001db4c

08010308 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8010308:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801030a:	4a08      	ldr	r2, [pc, #32]	; (801032c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801030c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801030e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8010312:	684c      	ldr	r4, [r1, #4]
 8010314:	4284      	cmp	r4, r0
 8010316:	d104      	bne.n	8010322 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8010318:	2000      	movs	r0, #0
 801031a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 801031e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8010320:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8010322:	3301      	adds	r3, #1
 8010324:	2b08      	cmp	r3, #8
 8010326:	d1f2      	bne.n	801030e <vQueueUnregisterQueue+0x6>
 8010328:	e7fa      	b.n	8010320 <vQueueUnregisterQueue+0x18>
 801032a:	bf00      	nop
 801032c:	2001db4c 	.word	0x2001db4c

08010330 <vQueueDelete>:
{
 8010330:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8010332:	4604      	mov	r4, r0
 8010334:	b940      	cbnz	r0, 8010348 <vQueueDelete+0x18>
	__asm volatile
 8010336:	f04f 0350 	mov.w	r3, #80	; 0x50
 801033a:	f383 8811 	msr	BASEPRI, r3
 801033e:	f3bf 8f6f 	isb	sy
 8010342:	f3bf 8f4f 	dsb	sy
 8010346:	e7fe      	b.n	8010346 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8010348:	f7ff ffde 	bl	8010308 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 801034c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8010350:	b923      	cbnz	r3, 801035c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8010352:	4620      	mov	r0, r4
}
 8010354:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8010358:	f7ff b902 	b.w	800f560 <vPortFree>
}
 801035c:	bd10      	pop	{r4, pc}

0801035e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 801035e:	b570      	push	{r4, r5, r6, lr}
 8010360:	4604      	mov	r4, r0
 8010362:	460d      	mov	r5, r1
 8010364:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8010366:	f7ff f9dd 	bl	800f724 <vPortEnterCritical>
 801036a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801036e:	2bff      	cmp	r3, #255	; 0xff
 8010370:	bf04      	itt	eq
 8010372:	2300      	moveq	r3, #0
 8010374:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010378:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 801037c:	2bff      	cmp	r3, #255	; 0xff
 801037e:	bf04      	itt	eq
 8010380:	2300      	moveq	r3, #0
 8010382:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8010386:	f7ff f9ed 	bl	800f764 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 801038a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801038c:	b92b      	cbnz	r3, 801039a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 801038e:	4632      	mov	r2, r6
 8010390:	4629      	mov	r1, r5
 8010392:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010396:	f000 fc85 	bl	8010ca4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 801039a:	4620      	mov	r0, r4
	}
 801039c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80103a0:	f7ff bb5a 	b.w	800fa58 <prvUnlockQueue>

080103a4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80103a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80103a8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80103aa:	f7ff f9bb 	bl	800f724 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80103ae:	4b30      	ldr	r3, [pc, #192]	; (8010470 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80103b0:	4e30      	ldr	r6, [pc, #192]	; (8010474 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80103b2:	681a      	ldr	r2, [r3, #0]
 80103b4:	4f30      	ldr	r7, [pc, #192]	; (8010478 <prvAddNewTaskToReadyList+0xd4>)
 80103b6:	3201      	adds	r2, #1
 80103b8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80103ba:	6835      	ldr	r5, [r6, #0]
 80103bc:	2d00      	cmp	r5, #0
 80103be:	d14b      	bne.n	8010458 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80103c0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80103c2:	681b      	ldr	r3, [r3, #0]
 80103c4:	2b01      	cmp	r3, #1
 80103c6:	d11f      	bne.n	8010408 <prvAddNewTaskToReadyList+0x64>
 80103c8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80103ca:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80103cc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80103ce:	f7ff f8ff 	bl	800f5d0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80103d2:	2d38      	cmp	r5, #56	; 0x38
 80103d4:	f108 0814 	add.w	r8, r8, #20
 80103d8:	d1f7      	bne.n	80103ca <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80103da:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80104a0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80103de:	4d27      	ldr	r5, [pc, #156]	; (801047c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80103e0:	4640      	mov	r0, r8
 80103e2:	f7ff f8f5 	bl	800f5d0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80103e6:	4628      	mov	r0, r5
 80103e8:	f7ff f8f2 	bl	800f5d0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80103ec:	4824      	ldr	r0, [pc, #144]	; (8010480 <prvAddNewTaskToReadyList+0xdc>)
 80103ee:	f7ff f8ef 	bl	800f5d0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80103f2:	4824      	ldr	r0, [pc, #144]	; (8010484 <prvAddNewTaskToReadyList+0xe0>)
 80103f4:	f7ff f8ec 	bl	800f5d0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80103f8:	4823      	ldr	r0, [pc, #140]	; (8010488 <prvAddNewTaskToReadyList+0xe4>)
 80103fa:	f7ff f8e9 	bl	800f5d0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80103fe:	4b23      	ldr	r3, [pc, #140]	; (801048c <prvAddNewTaskToReadyList+0xe8>)
 8010400:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8010404:	4b22      	ldr	r3, [pc, #136]	; (8010490 <prvAddNewTaskToReadyList+0xec>)
 8010406:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8010408:	4a22      	ldr	r2, [pc, #136]	; (8010494 <prvAddNewTaskToReadyList+0xf0>)
 801040a:	6813      	ldr	r3, [r2, #0]
 801040c:	3301      	adds	r3, #1
 801040e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8010410:	4a21      	ldr	r2, [pc, #132]	; (8010498 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8010412:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8010414:	6811      	ldr	r1, [r2, #0]
 8010416:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010418:	2014      	movs	r0, #20
 801041a:	428b      	cmp	r3, r1
 801041c:	fb00 7003 	mla	r0, r0, r3, r7
 8010420:	f104 0104 	add.w	r1, r4, #4
 8010424:	bf88      	it	hi
 8010426:	6013      	strhi	r3, [r2, #0]
 8010428:	f7ff f8e0 	bl	800f5ec <vListInsertEnd>
	taskEXIT_CRITICAL();
 801042c:	f7ff f99a 	bl	800f764 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8010430:	4b1a      	ldr	r3, [pc, #104]	; (801049c <prvAddNewTaskToReadyList+0xf8>)
 8010432:	681b      	ldr	r3, [r3, #0]
 8010434:	b173      	cbz	r3, 8010454 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8010436:	6833      	ldr	r3, [r6, #0]
 8010438:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801043a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801043c:	429a      	cmp	r2, r3
 801043e:	d209      	bcs.n	8010454 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8010440:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010444:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010448:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801044c:	f3bf 8f4f 	dsb	sy
 8010450:	f3bf 8f6f 	isb	sy
}
 8010454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8010458:	4b10      	ldr	r3, [pc, #64]	; (801049c <prvAddNewTaskToReadyList+0xf8>)
 801045a:	681b      	ldr	r3, [r3, #0]
 801045c:	2b00      	cmp	r3, #0
 801045e:	d1d3      	bne.n	8010408 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8010460:	6833      	ldr	r3, [r6, #0]
 8010462:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8010464:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010466:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8010468:	bf98      	it	ls
 801046a:	6034      	strls	r4, [r6, #0]
 801046c:	e7cc      	b.n	8010408 <prvAddNewTaskToReadyList+0x64>
 801046e:	bf00      	nop
 8010470:	2001dff8 	.word	0x2001dff8
 8010474:	2001db8c 	.word	0x2001db8c
 8010478:	2001db98 	.word	0x2001db98
 801047c:	2001e024 	.word	0x2001e024
 8010480:	2001e040 	.word	0x2001e040
 8010484:	2001e06c 	.word	0x2001e06c
 8010488:	2001e058 	.word	0x2001e058
 801048c:	2001db90 	.word	0x2001db90
 8010490:	2001db94 	.word	0x2001db94
 8010494:	2001e008 	.word	0x2001e008
 8010498:	2001e00c 	.word	0x2001e00c
 801049c:	2001e054 	.word	0x2001e054
 80104a0:	2001e010 	.word	0x2001e010

080104a4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80104a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80104a6:	4b15      	ldr	r3, [pc, #84]	; (80104fc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80104a8:	4e15      	ldr	r6, [pc, #84]	; (8010500 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80104aa:	681d      	ldr	r5, [r3, #0]
{
 80104ac:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80104ae:	6830      	ldr	r0, [r6, #0]
 80104b0:	3004      	adds	r0, #4
{
 80104b2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80104b4:	f7ff f8bd 	bl	800f632 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80104b8:	1c63      	adds	r3, r4, #1
 80104ba:	d107      	bne.n	80104cc <prvAddCurrentTaskToDelayedList+0x28>
 80104bc:	b137      	cbz	r7, 80104cc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80104be:	6831      	ldr	r1, [r6, #0]
 80104c0:	4810      	ldr	r0, [pc, #64]	; (8010504 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80104c2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80104c6:	3104      	adds	r1, #4
 80104c8:	f7ff b890 	b.w	800f5ec <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80104cc:	6833      	ldr	r3, [r6, #0]
 80104ce:	192c      	adds	r4, r5, r4
 80104d0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80104d2:	d307      	bcc.n	80104e4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80104d4:	4b0c      	ldr	r3, [pc, #48]	; (8010508 <prvAddCurrentTaskToDelayedList+0x64>)
 80104d6:	6818      	ldr	r0, [r3, #0]
 80104d8:	6831      	ldr	r1, [r6, #0]
}
 80104da:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80104de:	3104      	adds	r1, #4
 80104e0:	f7ff b890 	b.w	800f604 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80104e4:	4b09      	ldr	r3, [pc, #36]	; (801050c <prvAddCurrentTaskToDelayedList+0x68>)
 80104e6:	6818      	ldr	r0, [r3, #0]
 80104e8:	6831      	ldr	r1, [r6, #0]
 80104ea:	3104      	adds	r1, #4
 80104ec:	f7ff f88a 	bl	800f604 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80104f0:	4b07      	ldr	r3, [pc, #28]	; (8010510 <prvAddCurrentTaskToDelayedList+0x6c>)
 80104f2:	681a      	ldr	r2, [r3, #0]
 80104f4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80104f6:	bf88      	it	hi
 80104f8:	601c      	strhi	r4, [r3, #0]
}
 80104fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80104fc:	2001e080 	.word	0x2001e080
 8010500:	2001db8c 	.word	0x2001db8c
 8010504:	2001e058 	.word	0x2001e058
 8010508:	2001db94 	.word	0x2001db94
 801050c:	2001db90 	.word	0x2001db90
 8010510:	2001e038 	.word	0x2001e038

08010514 <prvTaskIsTaskSuspended>:
		configASSERT( xTask );
 8010514:	b940      	cbnz	r0, 8010528 <prvTaskIsTaskSuspended+0x14>
 8010516:	f04f 0350 	mov.w	r3, #80	; 0x50
 801051a:	f383 8811 	msr	BASEPRI, r3
 801051e:	f3bf 8f6f 	isb	sy
 8010522:	f3bf 8f4f 	dsb	sy
 8010526:	e7fe      	b.n	8010526 <prvTaskIsTaskSuspended+0x12>
		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010528:	6942      	ldr	r2, [r0, #20]
 801052a:	4b06      	ldr	r3, [pc, #24]	; (8010544 <prvTaskIsTaskSuspended+0x30>)
 801052c:	429a      	cmp	r2, r3
 801052e:	d107      	bne.n	8010540 <prvTaskIsTaskSuspended+0x2c>
			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
 8010530:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010532:	4b05      	ldr	r3, [pc, #20]	; (8010548 <prvTaskIsTaskSuspended+0x34>)
 8010534:	4298      	cmp	r0, r3
 8010536:	d003      	beq.n	8010540 <prvTaskIsTaskSuspended+0x2c>
				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The cast is only redundant when NULL is used. */
 8010538:	fab0 f080 	clz	r0, r0
 801053c:	0940      	lsrs	r0, r0, #5
 801053e:	4770      	bx	lr
	BaseType_t xReturn = pdFALSE;
 8010540:	2000      	movs	r0, #0
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 8010542:	4770      	bx	lr
 8010544:	2001e058 	.word	0x2001e058
 8010548:	2001e040 	.word	0x2001e040

0801054c <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801054c:	4a06      	ldr	r2, [pc, #24]	; (8010568 <prvResetNextTaskUnblockTime+0x1c>)
 801054e:	6813      	ldr	r3, [r2, #0]
 8010550:	6819      	ldr	r1, [r3, #0]
 8010552:	4b06      	ldr	r3, [pc, #24]	; (801056c <prvResetNextTaskUnblockTime+0x20>)
 8010554:	b919      	cbnz	r1, 801055e <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8010556:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 801055a:	601a      	str	r2, [r3, #0]
}
 801055c:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801055e:	6812      	ldr	r2, [r2, #0]
 8010560:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8010562:	68d2      	ldr	r2, [r2, #12]
 8010564:	6852      	ldr	r2, [r2, #4]
 8010566:	e7f8      	b.n	801055a <prvResetNextTaskUnblockTime+0xe>
 8010568:	2001db90 	.word	0x2001db90
 801056c:	2001e038 	.word	0x2001e038

08010570 <prvDeleteTCB>:
	{
 8010570:	b510      	push	{r4, lr}
 8010572:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8010574:	3058      	adds	r0, #88	; 0x58
 8010576:	f01c fd65 	bl	802d044 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 801057a:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 801057e:	b93b      	cbnz	r3, 8010590 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8010580:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8010582:	f7fe ffed 	bl	800f560 <vPortFree>
				vPortFree( pxTCB );
 8010586:	4620      	mov	r0, r4
	}
 8010588:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 801058c:	f7fe bfe8 	b.w	800f560 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8010590:	2b01      	cmp	r3, #1
 8010592:	d0f8      	beq.n	8010586 <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8010594:	2b02      	cmp	r3, #2
 8010596:	d008      	beq.n	80105aa <prvDeleteTCB+0x3a>
 8010598:	f04f 0350 	mov.w	r3, #80	; 0x50
 801059c:	f383 8811 	msr	BASEPRI, r3
 80105a0:	f3bf 8f6f 	isb	sy
 80105a4:	f3bf 8f4f 	dsb	sy
 80105a8:	e7fe      	b.n	80105a8 <prvDeleteTCB+0x38>
	}
 80105aa:	bd10      	pop	{r4, pc}

080105ac <prvIdleTask>:
{
 80105ac:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80105ae:	4c13      	ldr	r4, [pc, #76]	; (80105fc <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80105b0:	4f13      	ldr	r7, [pc, #76]	; (8010600 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 80105b2:	4d14      	ldr	r5, [pc, #80]	; (8010604 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80105b4:	6823      	ldr	r3, [r4, #0]
 80105b6:	b973      	cbnz	r3, 80105d6 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80105b8:	4b13      	ldr	r3, [pc, #76]	; (8010608 <prvIdleTask+0x5c>)
 80105ba:	681b      	ldr	r3, [r3, #0]
 80105bc:	2b01      	cmp	r3, #1
 80105be:	d9f8      	bls.n	80105b2 <prvIdleTask+0x6>
				taskYIELD();
 80105c0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80105c4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80105c8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80105cc:	f3bf 8f4f 	dsb	sy
 80105d0:	f3bf 8f6f 	isb	sy
 80105d4:	e7ed      	b.n	80105b2 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80105d6:	f7ff f8a5 	bl	800f724 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80105da:	68fb      	ldr	r3, [r7, #12]
 80105dc:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80105de:	1d30      	adds	r0, r6, #4
 80105e0:	f7ff f827 	bl	800f632 <uxListRemove>
				--uxCurrentNumberOfTasks;
 80105e4:	682b      	ldr	r3, [r5, #0]
 80105e6:	3b01      	subs	r3, #1
 80105e8:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80105ea:	6823      	ldr	r3, [r4, #0]
 80105ec:	3b01      	subs	r3, #1
 80105ee:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80105f0:	f7ff f8b8 	bl	800f764 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80105f4:	4630      	mov	r0, r6
 80105f6:	f7ff ffbb 	bl	8010570 <prvDeleteTCB>
 80105fa:	e7db      	b.n	80105b4 <prvIdleTask+0x8>
 80105fc:	2001dffc 	.word	0x2001dffc
 8010600:	2001e06c 	.word	0x2001e06c
 8010604:	2001dff8 	.word	0x2001dff8
 8010608:	2001db98 	.word	0x2001db98

0801060c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801060c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010610:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8010614:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8010618:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801061a:	4606      	mov	r6, r0
 801061c:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 801061e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8010620:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8010622:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8010624:	f01b fe54 	bl	802c2d0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8010628:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801062a:	f1a9 0904 	sub.w	r9, r9, #4
 801062e:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8010630:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8010634:	2d00      	cmp	r5, #0
 8010636:	d042      	beq.n	80106be <prvInitialiseNewTask.constprop.0+0xb2>
 8010638:	1e6b      	subs	r3, r5, #1
 801063a:	f104 0234 	add.w	r2, r4, #52	; 0x34
 801063e:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8010640:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010644:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8010648:	b108      	cbz	r0, 801064e <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 801064a:	42ab      	cmp	r3, r5
 801064c:	d1f8      	bne.n	8010640 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 801064e:	2300      	movs	r3, #0
 8010650:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8010654:	9d08      	ldr	r5, [sp, #32]
 8010656:	2d37      	cmp	r5, #55	; 0x37
 8010658:	bf28      	it	cs
 801065a:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 801065c:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8010660:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8010662:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8010664:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8010666:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 801066a:	f7fe ffbc 	bl	800f5e6 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801066e:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8010672:	f104 0018 	add.w	r0, r4, #24
 8010676:	f7fe ffb6 	bl	800f5e6 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 801067a:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 801067e:	2260      	movs	r2, #96	; 0x60
 8010680:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8010682:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010684:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8010686:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8010688:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 801068c:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8010690:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8010694:	f01b fe1c 	bl	802c2d0 <memset>
 8010698:	4b0a      	ldr	r3, [pc, #40]	; (80106c4 <prvInitialiseNewTask.constprop.0+0xb8>)
 801069a:	65e3      	str	r3, [r4, #92]	; 0x5c
 801069c:	4b0a      	ldr	r3, [pc, #40]	; (80106c8 <prvInitialiseNewTask.constprop.0+0xbc>)
 801069e:	6623      	str	r3, [r4, #96]	; 0x60
 80106a0:	4b0a      	ldr	r3, [pc, #40]	; (80106cc <prvInitialiseNewTask.constprop.0+0xc0>)
 80106a2:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80106a4:	463a      	mov	r2, r7
 80106a6:	4631      	mov	r1, r6
 80106a8:	4648      	mov	r0, r9
 80106aa:	f7ff f811 	bl	800f6d0 <pxPortInitialiseStack>
 80106ae:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80106b0:	f1b8 0f00 	cmp.w	r8, #0
 80106b4:	d001      	beq.n	80106ba <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80106b6:	f8c8 4000 	str.w	r4, [r8]
}
 80106ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80106be:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80106c2:	e7c7      	b.n	8010654 <prvInitialiseNewTask.constprop.0+0x48>
 80106c4:	08049abc 	.word	0x08049abc
 80106c8:	08049adc 	.word	0x08049adc
 80106cc:	08049a9c 	.word	0x08049a9c

080106d0 <xTaskCreateStatic>:
	{
 80106d0:	b570      	push	{r4, r5, r6, lr}
 80106d2:	b086      	sub	sp, #24
 80106d4:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 80106d8:	b945      	cbnz	r5, 80106ec <xTaskCreateStatic+0x1c>
 80106da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80106de:	f383 8811 	msr	BASEPRI, r3
 80106e2:	f3bf 8f6f 	isb	sy
 80106e6:	f3bf 8f4f 	dsb	sy
 80106ea:	e7fe      	b.n	80106ea <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 80106ec:	b944      	cbnz	r4, 8010700 <xTaskCreateStatic+0x30>
 80106ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80106f2:	f383 8811 	msr	BASEPRI, r3
 80106f6:	f3bf 8f6f 	isb	sy
 80106fa:	f3bf 8f4f 	dsb	sy
 80106fe:	e7fe      	b.n	80106fe <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8010700:	26c0      	movs	r6, #192	; 0xc0
 8010702:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8010704:	9e05      	ldr	r6, [sp, #20]
 8010706:	2ec0      	cmp	r6, #192	; 0xc0
 8010708:	d008      	beq.n	801071c <xTaskCreateStatic+0x4c>
 801070a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801070e:	f383 8811 	msr	BASEPRI, r3
 8010712:	f3bf 8f6f 	isb	sy
 8010716:	f3bf 8f4f 	dsb	sy
 801071a:	e7fe      	b.n	801071a <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 801071c:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 801071e:	2502      	movs	r5, #2
 8010720:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8010724:	ad04      	add	r5, sp, #16
 8010726:	9501      	str	r5, [sp, #4]
 8010728:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801072a:	9402      	str	r4, [sp, #8]
 801072c:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 801072e:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8010730:	f7ff ff6c 	bl	801060c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8010734:	4620      	mov	r0, r4
 8010736:	f7ff fe35 	bl	80103a4 <prvAddNewTaskToReadyList>
	}
 801073a:	9804      	ldr	r0, [sp, #16]
 801073c:	b006      	add	sp, #24
 801073e:	bd70      	pop	{r4, r5, r6, pc}

08010740 <xTaskCreate>:
	{
 8010740:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010744:	4607      	mov	r7, r0
 8010746:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8010748:	0090      	lsls	r0, r2, #2
	{
 801074a:	4688      	mov	r8, r1
 801074c:	4616      	mov	r6, r2
 801074e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8010750:	f7fe fe74 	bl	800f43c <pvPortMalloc>
			if( pxStack != NULL )
 8010754:	4605      	mov	r5, r0
 8010756:	b1e8      	cbz	r0, 8010794 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8010758:	20c0      	movs	r0, #192	; 0xc0
 801075a:	f7fe fe6f 	bl	800f43c <pvPortMalloc>
				if( pxNewTCB != NULL )
 801075e:	4604      	mov	r4, r0
 8010760:	b1a8      	cbz	r0, 801078e <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8010762:	2300      	movs	r3, #0
 8010764:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8010768:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 801076a:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 801076c:	9301      	str	r3, [sp, #4]
 801076e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010770:	9002      	str	r0, [sp, #8]
 8010772:	9300      	str	r3, [sp, #0]
 8010774:	4632      	mov	r2, r6
 8010776:	464b      	mov	r3, r9
 8010778:	4641      	mov	r1, r8
 801077a:	4638      	mov	r0, r7
 801077c:	f7ff ff46 	bl	801060c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8010780:	4620      	mov	r0, r4
 8010782:	f7ff fe0f 	bl	80103a4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8010786:	2001      	movs	r0, #1
	}
 8010788:	b005      	add	sp, #20
 801078a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 801078e:	4628      	mov	r0, r5
 8010790:	f7fe fee6 	bl	800f560 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8010794:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8010798:	e7f6      	b.n	8010788 <xTaskCreate+0x48>
	...

0801079c <vTaskResume>:
	{
 801079c:	b537      	push	{r0, r1, r2, r4, r5, lr}
		configASSERT( xTaskToResume );
 801079e:	4604      	mov	r4, r0
 80107a0:	b940      	cbnz	r0, 80107b4 <vTaskResume+0x18>
 80107a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80107a6:	f383 8811 	msr	BASEPRI, r3
 80107aa:	f3bf 8f6f 	isb	sy
 80107ae:	f3bf 8f4f 	dsb	sy
 80107b2:	e7fe      	b.n	80107b2 <vTaskResume+0x16>
		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
 80107b4:	4d18      	ldr	r5, [pc, #96]	; (8010818 <vTaskResume+0x7c>)
 80107b6:	682b      	ldr	r3, [r5, #0]
 80107b8:	4283      	cmp	r3, r0
 80107ba:	d02b      	beq.n	8010814 <vTaskResume+0x78>
			taskENTER_CRITICAL();
 80107bc:	f7fe ffb2 	bl	800f724 <vPortEnterCritical>
				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
 80107c0:	4620      	mov	r0, r4
 80107c2:	f7ff fea7 	bl	8010514 <prvTaskIsTaskSuspended>
 80107c6:	b300      	cbz	r0, 801080a <vTaskResume+0x6e>
					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
 80107c8:	1d21      	adds	r1, r4, #4
 80107ca:	4608      	mov	r0, r1
 80107cc:	9101      	str	r1, [sp, #4]
 80107ce:	f7fe ff30 	bl	800f632 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80107d2:	4a12      	ldr	r2, [pc, #72]	; (801081c <vTaskResume+0x80>)
 80107d4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80107d6:	6810      	ldr	r0, [r2, #0]
 80107d8:	9901      	ldr	r1, [sp, #4]
 80107da:	4283      	cmp	r3, r0
 80107dc:	bf88      	it	hi
 80107de:	6013      	strhi	r3, [r2, #0]
 80107e0:	4a0f      	ldr	r2, [pc, #60]	; (8010820 <vTaskResume+0x84>)
 80107e2:	2014      	movs	r0, #20
 80107e4:	fb00 2003 	mla	r0, r0, r3, r2
 80107e8:	f7fe ff00 	bl	800f5ec <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80107ec:	682b      	ldr	r3, [r5, #0]
 80107ee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80107f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80107f2:	429a      	cmp	r2, r3
 80107f4:	d309      	bcc.n	801080a <vTaskResume+0x6e>
						taskYIELD_IF_USING_PREEMPTION();
 80107f6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80107fa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80107fe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010802:	f3bf 8f4f 	dsb	sy
 8010806:	f3bf 8f6f 	isb	sy
	}
 801080a:	b003      	add	sp, #12
 801080c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
			taskEXIT_CRITICAL();
 8010810:	f7fe bfa8 	b.w	800f764 <vPortExitCritical>
	}
 8010814:	b003      	add	sp, #12
 8010816:	bd30      	pop	{r4, r5, pc}
 8010818:	2001db8c 	.word	0x2001db8c
 801081c:	2001e00c 	.word	0x2001e00c
 8010820:	2001db98 	.word	0x2001db98

08010824 <vTaskStartScheduler>:
{
 8010824:	b510      	push	{r4, lr}
 8010826:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8010828:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 801082a:	aa07      	add	r2, sp, #28
 801082c:	a906      	add	r1, sp, #24
 801082e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8010830:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8010834:	f7fe fdc6 	bl	800f3c4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8010838:	9b05      	ldr	r3, [sp, #20]
 801083a:	9302      	str	r3, [sp, #8]
 801083c:	9b06      	ldr	r3, [sp, #24]
 801083e:	9a07      	ldr	r2, [sp, #28]
 8010840:	4919      	ldr	r1, [pc, #100]	; (80108a8 <vTaskStartScheduler+0x84>)
 8010842:	481a      	ldr	r0, [pc, #104]	; (80108ac <vTaskStartScheduler+0x88>)
 8010844:	e9cd 4300 	strd	r4, r3, [sp]
 8010848:	4623      	mov	r3, r4
 801084a:	f7ff ff41 	bl	80106d0 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 801084e:	b340      	cbz	r0, 80108a2 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8010850:	f000 fc1e 	bl	8011090 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8010854:	2801      	cmp	r0, #1
 8010856:	d119      	bne.n	801088c <vTaskStartScheduler+0x68>
 8010858:	f04f 0350 	mov.w	r3, #80	; 0x50
 801085c:	f383 8811 	msr	BASEPRI, r3
 8010860:	f3bf 8f6f 	isb	sy
 8010864:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8010868:	4b11      	ldr	r3, [pc, #68]	; (80108b0 <vTaskStartScheduler+0x8c>)
 801086a:	4a12      	ldr	r2, [pc, #72]	; (80108b4 <vTaskStartScheduler+0x90>)
 801086c:	681b      	ldr	r3, [r3, #0]
 801086e:	3358      	adds	r3, #88	; 0x58
 8010870:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8010872:	4b11      	ldr	r3, [pc, #68]	; (80108b8 <vTaskStartScheduler+0x94>)
 8010874:	f04f 32ff 	mov.w	r2, #4294967295
 8010878:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 801087a:	4b10      	ldr	r3, [pc, #64]	; (80108bc <vTaskStartScheduler+0x98>)
 801087c:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 801087e:	4b10      	ldr	r3, [pc, #64]	; (80108c0 <vTaskStartScheduler+0x9c>)
 8010880:	601c      	str	r4, [r3, #0]
}
 8010882:	b008      	add	sp, #32
 8010884:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8010888:	f7fe bfdc 	b.w	800f844 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 801088c:	3001      	adds	r0, #1
 801088e:	d108      	bne.n	80108a2 <vTaskStartScheduler+0x7e>
 8010890:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010894:	f383 8811 	msr	BASEPRI, r3
 8010898:	f3bf 8f6f 	isb	sy
 801089c:	f3bf 8f4f 	dsb	sy
 80108a0:	e7fe      	b.n	80108a0 <vTaskStartScheduler+0x7c>
}
 80108a2:	b008      	add	sp, #32
 80108a4:	bd10      	pop	{r4, pc}
 80108a6:	bf00      	nop
 80108a8:	08032a44 	.word	0x08032a44
 80108ac:	080105ad 	.word	0x080105ad
 80108b0:	2001db8c 	.word	0x2001db8c
 80108b4:	20000114 	.word	0x20000114
 80108b8:	2001e038 	.word	0x2001e038
 80108bc:	2001e054 	.word	0x2001e054
 80108c0:	2001e080 	.word	0x2001e080

080108c4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80108c4:	4a02      	ldr	r2, [pc, #8]	; (80108d0 <vTaskSuspendAll+0xc>)
 80108c6:	6813      	ldr	r3, [r2, #0]
 80108c8:	3301      	adds	r3, #1
 80108ca:	6013      	str	r3, [r2, #0]
}
 80108cc:	4770      	bx	lr
 80108ce:	bf00      	nop
 80108d0:	2001e004 	.word	0x2001e004

080108d4 <xTaskGetTickCount>:
		xTicks = xTickCount;
 80108d4:	4b01      	ldr	r3, [pc, #4]	; (80108dc <xTaskGetTickCount+0x8>)
 80108d6:	6818      	ldr	r0, [r3, #0]
}
 80108d8:	4770      	bx	lr
 80108da:	bf00      	nop
 80108dc:	2001e080 	.word	0x2001e080

080108e0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80108e0:	4b3f      	ldr	r3, [pc, #252]	; (80109e0 <xTaskIncrementTick+0x100>)
 80108e2:	681b      	ldr	r3, [r3, #0]
{
 80108e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80108e8:	2b00      	cmp	r3, #0
 80108ea:	d173      	bne.n	80109d4 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80108ec:	4b3d      	ldr	r3, [pc, #244]	; (80109e4 <xTaskIncrementTick+0x104>)
 80108ee:	681d      	ldr	r5, [r3, #0]
 80108f0:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 80108f2:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80108f4:	b9bd      	cbnz	r5, 8010926 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80108f6:	4b3c      	ldr	r3, [pc, #240]	; (80109e8 <xTaskIncrementTick+0x108>)
 80108f8:	681a      	ldr	r2, [r3, #0]
 80108fa:	6812      	ldr	r2, [r2, #0]
 80108fc:	b142      	cbz	r2, 8010910 <xTaskIncrementTick+0x30>
 80108fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010902:	f383 8811 	msr	BASEPRI, r3
 8010906:	f3bf 8f6f 	isb	sy
 801090a:	f3bf 8f4f 	dsb	sy
 801090e:	e7fe      	b.n	801090e <xTaskIncrementTick+0x2e>
 8010910:	4a36      	ldr	r2, [pc, #216]	; (80109ec <xTaskIncrementTick+0x10c>)
 8010912:	6819      	ldr	r1, [r3, #0]
 8010914:	6810      	ldr	r0, [r2, #0]
 8010916:	6018      	str	r0, [r3, #0]
 8010918:	6011      	str	r1, [r2, #0]
 801091a:	4a35      	ldr	r2, [pc, #212]	; (80109f0 <xTaskIncrementTick+0x110>)
 801091c:	6813      	ldr	r3, [r2, #0]
 801091e:	3301      	adds	r3, #1
 8010920:	6013      	str	r3, [r2, #0]
 8010922:	f7ff fe13 	bl	801054c <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8010926:	4e33      	ldr	r6, [pc, #204]	; (80109f4 <xTaskIncrementTick+0x114>)
 8010928:	4f33      	ldr	r7, [pc, #204]	; (80109f8 <xTaskIncrementTick+0x118>)
 801092a:	6833      	ldr	r3, [r6, #0]
 801092c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8010a04 <xTaskIncrementTick+0x124>
 8010930:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8010932:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8010936:	d911      	bls.n	801095c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8010938:	f8d8 3000 	ldr.w	r3, [r8]
 801093c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801093e:	2214      	movs	r2, #20
 8010940:	4353      	muls	r3, r2
 8010942:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8010944:	2b02      	cmp	r3, #2
 8010946:	bf28      	it	cs
 8010948:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 801094a:	4b2c      	ldr	r3, [pc, #176]	; (80109fc <xTaskIncrementTick+0x11c>)
 801094c:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 801094e:	2b00      	cmp	r3, #0
}
 8010950:	bf0c      	ite	eq
 8010952:	4620      	moveq	r0, r4
 8010954:	2001      	movne	r0, #1
 8010956:	b003      	add	sp, #12
 8010958:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801095c:	f8df 9088 	ldr.w	r9, [pc, #136]	; 80109e8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8010960:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8010a08 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8010964:	f8d9 3000 	ldr.w	r3, [r9]
 8010968:	681b      	ldr	r3, [r3, #0]
 801096a:	b91b      	cbnz	r3, 8010974 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801096c:	f04f 33ff 	mov.w	r3, #4294967295
 8010970:	6033      	str	r3, [r6, #0]
					break;
 8010972:	e7e1      	b.n	8010938 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010974:	f8d9 3000 	ldr.w	r3, [r9]
 8010978:	68db      	ldr	r3, [r3, #12]
 801097a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 801097e:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8010982:	4295      	cmp	r5, r2
 8010984:	d201      	bcs.n	801098a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8010986:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8010988:	e7d6      	b.n	8010938 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801098a:	f10b 0104 	add.w	r1, fp, #4
 801098e:	4608      	mov	r0, r1
 8010990:	9101      	str	r1, [sp, #4]
 8010992:	f7fe fe4e 	bl	800f632 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8010996:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 801099a:	9901      	ldr	r1, [sp, #4]
 801099c:	b122      	cbz	r2, 80109a8 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801099e:	f10b 0018 	add.w	r0, fp, #24
 80109a2:	f7fe fe46 	bl	800f632 <uxListRemove>
 80109a6:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 80109a8:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 80109ac:	f8da 2000 	ldr.w	r2, [sl]
 80109b0:	2314      	movs	r3, #20
 80109b2:	4290      	cmp	r0, r2
 80109b4:	bf88      	it	hi
 80109b6:	f8ca 0000 	strhi.w	r0, [sl]
 80109ba:	fb03 7000 	mla	r0, r3, r0, r7
 80109be:	f7fe fe15 	bl	800f5ec <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80109c2:	f8d8 1000 	ldr.w	r1, [r8]
 80109c6:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 80109ca:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 80109cc:	429a      	cmp	r2, r3
 80109ce:	bf28      	it	cs
 80109d0:	2401      	movcs	r4, #1
 80109d2:	e7c7      	b.n	8010964 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 80109d4:	4a0a      	ldr	r2, [pc, #40]	; (8010a00 <xTaskIncrementTick+0x120>)
 80109d6:	6813      	ldr	r3, [r2, #0]
 80109d8:	3301      	adds	r3, #1
 80109da:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 80109dc:	2400      	movs	r4, #0
 80109de:	e7b4      	b.n	801094a <xTaskIncrementTick+0x6a>
 80109e0:	2001e004 	.word	0x2001e004
 80109e4:	2001e080 	.word	0x2001e080
 80109e8:	2001db90 	.word	0x2001db90
 80109ec:	2001db94 	.word	0x2001db94
 80109f0:	2001e03c 	.word	0x2001e03c
 80109f4:	2001e038 	.word	0x2001e038
 80109f8:	2001db98 	.word	0x2001db98
 80109fc:	2001e084 	.word	0x2001e084
 8010a00:	2001e000 	.word	0x2001e000
 8010a04:	2001db8c 	.word	0x2001db8c
 8010a08:	2001e00c 	.word	0x2001e00c

08010a0c <xTaskResumeAll>:
{
 8010a0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8010a0e:	4c31      	ldr	r4, [pc, #196]	; (8010ad4 <xTaskResumeAll+0xc8>)
 8010a10:	6823      	ldr	r3, [r4, #0]
 8010a12:	b943      	cbnz	r3, 8010a26 <xTaskResumeAll+0x1a>
 8010a14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a18:	f383 8811 	msr	BASEPRI, r3
 8010a1c:	f3bf 8f6f 	isb	sy
 8010a20:	f3bf 8f4f 	dsb	sy
 8010a24:	e7fe      	b.n	8010a24 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8010a26:	f7fe fe7d 	bl	800f724 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8010a2a:	6823      	ldr	r3, [r4, #0]
 8010a2c:	3b01      	subs	r3, #1
 8010a2e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010a30:	6824      	ldr	r4, [r4, #0]
 8010a32:	b12c      	cbz	r4, 8010a40 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8010a34:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8010a36:	f7fe fe95 	bl	800f764 <vPortExitCritical>
}
 8010a3a:	4620      	mov	r0, r4
 8010a3c:	b003      	add	sp, #12
 8010a3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8010a40:	4b25      	ldr	r3, [pc, #148]	; (8010ad8 <xTaskResumeAll+0xcc>)
 8010a42:	681b      	ldr	r3, [r3, #0]
 8010a44:	2b00      	cmp	r3, #0
 8010a46:	d0f5      	beq.n	8010a34 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8010a48:	4d24      	ldr	r5, [pc, #144]	; (8010adc <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8010a4a:	4e25      	ldr	r6, [pc, #148]	; (8010ae0 <xTaskResumeAll+0xd4>)
 8010a4c:	4f25      	ldr	r7, [pc, #148]	; (8010ae4 <xTaskResumeAll+0xd8>)
 8010a4e:	e01e      	b.n	8010a8e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010a50:	68eb      	ldr	r3, [r5, #12]
 8010a52:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8010a54:	f104 0018 	add.w	r0, r4, #24
 8010a58:	f7fe fdeb 	bl	800f632 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8010a5c:	1d21      	adds	r1, r4, #4
 8010a5e:	4608      	mov	r0, r1
 8010a60:	9101      	str	r1, [sp, #4]
 8010a62:	f7fe fde6 	bl	800f632 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8010a66:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010a68:	6832      	ldr	r2, [r6, #0]
 8010a6a:	9901      	ldr	r1, [sp, #4]
 8010a6c:	2014      	movs	r0, #20
 8010a6e:	4293      	cmp	r3, r2
 8010a70:	fb00 7003 	mla	r0, r0, r3, r7
 8010a74:	bf88      	it	hi
 8010a76:	6033      	strhi	r3, [r6, #0]
 8010a78:	f7fe fdb8 	bl	800f5ec <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8010a7c:	4b1a      	ldr	r3, [pc, #104]	; (8010ae8 <xTaskResumeAll+0xdc>)
 8010a7e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010a80:	681b      	ldr	r3, [r3, #0]
 8010a82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a84:	429a      	cmp	r2, r3
 8010a86:	d302      	bcc.n	8010a8e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8010a88:	4b18      	ldr	r3, [pc, #96]	; (8010aec <xTaskResumeAll+0xe0>)
 8010a8a:	2201      	movs	r2, #1
 8010a8c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8010a8e:	682b      	ldr	r3, [r5, #0]
 8010a90:	2b00      	cmp	r3, #0
 8010a92:	d1dd      	bne.n	8010a50 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8010a94:	b10c      	cbz	r4, 8010a9a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8010a96:	f7ff fd59 	bl	801054c <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8010a9a:	4d15      	ldr	r5, [pc, #84]	; (8010af0 <xTaskResumeAll+0xe4>)
 8010a9c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8010a9e:	b144      	cbz	r4, 8010ab2 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8010aa0:	4e12      	ldr	r6, [pc, #72]	; (8010aec <xTaskResumeAll+0xe0>)
 8010aa2:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8010aa4:	f7ff ff1c 	bl	80108e0 <xTaskIncrementTick>
 8010aa8:	b100      	cbz	r0, 8010aac <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8010aaa:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8010aac:	3c01      	subs	r4, #1
 8010aae:	d1f9      	bne.n	8010aa4 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8010ab0:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8010ab2:	4b0e      	ldr	r3, [pc, #56]	; (8010aec <xTaskResumeAll+0xe0>)
 8010ab4:	681b      	ldr	r3, [r3, #0]
 8010ab6:	2b00      	cmp	r3, #0
 8010ab8:	d0bc      	beq.n	8010a34 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8010aba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010abe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010ac2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010ac6:	f3bf 8f4f 	dsb	sy
 8010aca:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8010ace:	2401      	movs	r4, #1
 8010ad0:	e7b1      	b.n	8010a36 <xTaskResumeAll+0x2a>
 8010ad2:	bf00      	nop
 8010ad4:	2001e004 	.word	0x2001e004
 8010ad8:	2001dff8 	.word	0x2001dff8
 8010adc:	2001e040 	.word	0x2001e040
 8010ae0:	2001e00c 	.word	0x2001e00c
 8010ae4:	2001db98 	.word	0x2001db98
 8010ae8:	2001db8c 	.word	0x2001db8c
 8010aec:	2001e084 	.word	0x2001e084
 8010af0:	2001e000 	.word	0x2001e000

08010af4 <vTaskDelay>:
	{
 8010af4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8010af6:	b950      	cbnz	r0, 8010b0e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8010af8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010afc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010b00:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010b04:	f3bf 8f4f 	dsb	sy
 8010b08:	f3bf 8f6f 	isb	sy
	}
 8010b0c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8010b0e:	4b0a      	ldr	r3, [pc, #40]	; (8010b38 <vTaskDelay+0x44>)
 8010b10:	6819      	ldr	r1, [r3, #0]
 8010b12:	b141      	cbz	r1, 8010b26 <vTaskDelay+0x32>
 8010b14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b18:	f383 8811 	msr	BASEPRI, r3
 8010b1c:	f3bf 8f6f 	isb	sy
 8010b20:	f3bf 8f4f 	dsb	sy
 8010b24:	e7fe      	b.n	8010b24 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8010b26:	f7ff fecd 	bl	80108c4 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8010b2a:	f7ff fcbb 	bl	80104a4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8010b2e:	f7ff ff6d 	bl	8010a0c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8010b32:	2800      	cmp	r0, #0
 8010b34:	d0e0      	beq.n	8010af8 <vTaskDelay+0x4>
 8010b36:	e7e9      	b.n	8010b0c <vTaskDelay+0x18>
 8010b38:	2001e004 	.word	0x2001e004

08010b3c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8010b3c:	4b19      	ldr	r3, [pc, #100]	; (8010ba4 <vTaskSwitchContext+0x68>)
 8010b3e:	681a      	ldr	r2, [r3, #0]
 8010b40:	4b19      	ldr	r3, [pc, #100]	; (8010ba8 <vTaskSwitchContext+0x6c>)
{
 8010b42:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8010b44:	b112      	cbz	r2, 8010b4c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8010b46:	2201      	movs	r2, #1
 8010b48:	601a      	str	r2, [r3, #0]
}
 8010b4a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010b4c:	4d17      	ldr	r5, [pc, #92]	; (8010bac <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 8010b4e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010b50:	682a      	ldr	r2, [r5, #0]
 8010b52:	4917      	ldr	r1, [pc, #92]	; (8010bb0 <vTaskSwitchContext+0x74>)
 8010b54:	2614      	movs	r6, #20
 8010b56:	fb06 f302 	mul.w	r3, r6, r2
 8010b5a:	18c8      	adds	r0, r1, r3
 8010b5c:	58cc      	ldr	r4, [r1, r3]
 8010b5e:	b1ac      	cbz	r4, 8010b8c <vTaskSwitchContext+0x50>
 8010b60:	6844      	ldr	r4, [r0, #4]
 8010b62:	3308      	adds	r3, #8
 8010b64:	6864      	ldr	r4, [r4, #4]
 8010b66:	6044      	str	r4, [r0, #4]
 8010b68:	440b      	add	r3, r1
 8010b6a:	429c      	cmp	r4, r3
 8010b6c:	bf04      	itt	eq
 8010b6e:	6863      	ldreq	r3, [r4, #4]
 8010b70:	6043      	streq	r3, [r0, #4]
 8010b72:	2314      	movs	r3, #20
 8010b74:	fb03 1102 	mla	r1, r3, r2, r1
 8010b78:	684b      	ldr	r3, [r1, #4]
 8010b7a:	68d9      	ldr	r1, [r3, #12]
 8010b7c:	4b0d      	ldr	r3, [pc, #52]	; (8010bb4 <vTaskSwitchContext+0x78>)
 8010b7e:	6019      	str	r1, [r3, #0]
 8010b80:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8010b82:	681b      	ldr	r3, [r3, #0]
 8010b84:	4a0c      	ldr	r2, [pc, #48]	; (8010bb8 <vTaskSwitchContext+0x7c>)
 8010b86:	3358      	adds	r3, #88	; 0x58
 8010b88:	6013      	str	r3, [r2, #0]
}
 8010b8a:	e7de      	b.n	8010b4a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010b8c:	b942      	cbnz	r2, 8010ba0 <vTaskSwitchContext+0x64>
 8010b8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b92:	f383 8811 	msr	BASEPRI, r3
 8010b96:	f3bf 8f6f 	isb	sy
 8010b9a:	f3bf 8f4f 	dsb	sy
 8010b9e:	e7fe      	b.n	8010b9e <vTaskSwitchContext+0x62>
 8010ba0:	3a01      	subs	r2, #1
 8010ba2:	e7d8      	b.n	8010b56 <vTaskSwitchContext+0x1a>
 8010ba4:	2001e004 	.word	0x2001e004
 8010ba8:	2001e084 	.word	0x2001e084
 8010bac:	2001e00c 	.word	0x2001e00c
 8010bb0:	2001db98 	.word	0x2001db98
 8010bb4:	2001db8c 	.word	0x2001db8c
 8010bb8:	20000114 	.word	0x20000114

08010bbc <vTaskSuspend>:
	{
 8010bbc:	b570      	push	{r4, r5, r6, lr}
 8010bbe:	4604      	mov	r4, r0
 8010bc0:	4d26      	ldr	r5, [pc, #152]	; (8010c5c <vTaskSuspend+0xa0>)
		taskENTER_CRITICAL();
 8010bc2:	f7fe fdaf 	bl	800f724 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
 8010bc6:	b904      	cbnz	r4, 8010bca <vTaskSuspend+0xe>
 8010bc8:	682c      	ldr	r4, [r5, #0]
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010bca:	1d26      	adds	r6, r4, #4
 8010bcc:	4630      	mov	r0, r6
 8010bce:	f7fe fd30 	bl	800f632 <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8010bd2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8010bd4:	b11b      	cbz	r3, 8010bde <vTaskSuspend+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8010bd6:	f104 0018 	add.w	r0, r4, #24
 8010bda:	f7fe fd2a 	bl	800f632 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
 8010bde:	4631      	mov	r1, r6
 8010be0:	481f      	ldr	r0, [pc, #124]	; (8010c60 <vTaskSuspend+0xa4>)
		if( xSchedulerRunning != pdFALSE )
 8010be2:	4e20      	ldr	r6, [pc, #128]	; (8010c64 <vTaskSuspend+0xa8>)
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
 8010be4:	f7fe fd02 	bl	800f5ec <vListInsertEnd>
				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 8010be8:	f894 30bc 	ldrb.w	r3, [r4, #188]	; 0xbc
 8010bec:	2b01      	cmp	r3, #1
					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8010bee:	bf04      	itt	eq
 8010bf0:	2300      	moveq	r3, #0
 8010bf2:	f884 30bc 	strbeq.w	r3, [r4, #188]	; 0xbc
		taskEXIT_CRITICAL();
 8010bf6:	f7fe fdb5 	bl	800f764 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
 8010bfa:	6833      	ldr	r3, [r6, #0]
 8010bfc:	b12b      	cbz	r3, 8010c0a <vTaskSuspend+0x4e>
			taskENTER_CRITICAL();
 8010bfe:	f7fe fd91 	bl	800f724 <vPortEnterCritical>
				prvResetNextTaskUnblockTime();
 8010c02:	f7ff fca3 	bl	801054c <prvResetNextTaskUnblockTime>
			taskEXIT_CRITICAL();
 8010c06:	f7fe fdad 	bl	800f764 <vPortExitCritical>
		if( pxTCB == pxCurrentTCB )
 8010c0a:	682b      	ldr	r3, [r5, #0]
 8010c0c:	42a3      	cmp	r3, r4
 8010c0e:	d117      	bne.n	8010c40 <vTaskSuspend+0x84>
			if( xSchedulerRunning != pdFALSE )
 8010c10:	6833      	ldr	r3, [r6, #0]
 8010c12:	b1b3      	cbz	r3, 8010c42 <vTaskSuspend+0x86>
				configASSERT( uxSchedulerSuspended == 0 );
 8010c14:	4b14      	ldr	r3, [pc, #80]	; (8010c68 <vTaskSuspend+0xac>)
 8010c16:	681b      	ldr	r3, [r3, #0]
 8010c18:	b143      	cbz	r3, 8010c2c <vTaskSuspend+0x70>
 8010c1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c1e:	f383 8811 	msr	BASEPRI, r3
 8010c22:	f3bf 8f6f 	isb	sy
 8010c26:	f3bf 8f4f 	dsb	sy
 8010c2a:	e7fe      	b.n	8010c2a <vTaskSuspend+0x6e>
				portYIELD_WITHIN_API();
 8010c2c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010c30:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010c34:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010c38:	f3bf 8f4f 	dsb	sy
 8010c3c:	f3bf 8f6f 	isb	sy
	}
 8010c40:	bd70      	pop	{r4, r5, r6, pc}
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Right has no side effect, just volatile. */
 8010c42:	4a07      	ldr	r2, [pc, #28]	; (8010c60 <vTaskSuspend+0xa4>)
 8010c44:	6811      	ldr	r1, [r2, #0]
 8010c46:	4a09      	ldr	r2, [pc, #36]	; (8010c6c <vTaskSuspend+0xb0>)
 8010c48:	6812      	ldr	r2, [r2, #0]
 8010c4a:	4291      	cmp	r1, r2
 8010c4c:	d101      	bne.n	8010c52 <vTaskSuspend+0x96>
					pxCurrentTCB = NULL;
 8010c4e:	602b      	str	r3, [r5, #0]
 8010c50:	e7f6      	b.n	8010c40 <vTaskSuspend+0x84>
	}
 8010c52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					vTaskSwitchContext();
 8010c56:	f7ff bf71 	b.w	8010b3c <vTaskSwitchContext>
 8010c5a:	bf00      	nop
 8010c5c:	2001db8c 	.word	0x2001db8c
 8010c60:	2001e058 	.word	0x2001e058
 8010c64:	2001e054 	.word	0x2001e054
 8010c68:	2001e004 	.word	0x2001e004
 8010c6c:	2001dff8 	.word	0x2001dff8

08010c70 <vTaskPlaceOnEventList>:
{
 8010c70:	b510      	push	{r4, lr}
 8010c72:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8010c74:	b940      	cbnz	r0, 8010c88 <vTaskPlaceOnEventList+0x18>
 8010c76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c7a:	f383 8811 	msr	BASEPRI, r3
 8010c7e:	f3bf 8f6f 	isb	sy
 8010c82:	f3bf 8f4f 	dsb	sy
 8010c86:	e7fe      	b.n	8010c86 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8010c88:	4b05      	ldr	r3, [pc, #20]	; (8010ca0 <vTaskPlaceOnEventList+0x30>)
 8010c8a:	6819      	ldr	r1, [r3, #0]
 8010c8c:	3118      	adds	r1, #24
 8010c8e:	f7fe fcb9 	bl	800f604 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8010c92:	4620      	mov	r0, r4
 8010c94:	2101      	movs	r1, #1
}
 8010c96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8010c9a:	f7ff bc03 	b.w	80104a4 <prvAddCurrentTaskToDelayedList>
 8010c9e:	bf00      	nop
 8010ca0:	2001db8c 	.word	0x2001db8c

08010ca4 <vTaskPlaceOnEventListRestricted>:
	{
 8010ca4:	b538      	push	{r3, r4, r5, lr}
 8010ca6:	460d      	mov	r5, r1
 8010ca8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8010caa:	b940      	cbnz	r0, 8010cbe <vTaskPlaceOnEventListRestricted+0x1a>
 8010cac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010cb0:	f383 8811 	msr	BASEPRI, r3
 8010cb4:	f3bf 8f6f 	isb	sy
 8010cb8:	f3bf 8f4f 	dsb	sy
 8010cbc:	e7fe      	b.n	8010cbc <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8010cbe:	4b07      	ldr	r3, [pc, #28]	; (8010cdc <vTaskPlaceOnEventListRestricted+0x38>)
 8010cc0:	6819      	ldr	r1, [r3, #0]
 8010cc2:	3118      	adds	r1, #24
 8010cc4:	f7fe fc92 	bl	800f5ec <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8010cc8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8010cca:	4621      	mov	r1, r4
 8010ccc:	bf0c      	ite	eq
 8010cce:	4628      	moveq	r0, r5
 8010cd0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8010cd4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8010cd8:	f7ff bbe4 	b.w	80104a4 <prvAddCurrentTaskToDelayedList>
 8010cdc:	2001db8c 	.word	0x2001db8c

08010ce0 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010ce0:	68c3      	ldr	r3, [r0, #12]
{
 8010ce2:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010ce4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8010ce6:	b944      	cbnz	r4, 8010cfa <xTaskRemoveFromEventList+0x1a>
 8010ce8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010cec:	f383 8811 	msr	BASEPRI, r3
 8010cf0:	f3bf 8f6f 	isb	sy
 8010cf4:	f3bf 8f4f 	dsb	sy
 8010cf8:	e7fe      	b.n	8010cf8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8010cfa:	f104 0118 	add.w	r1, r4, #24
 8010cfe:	4608      	mov	r0, r1
 8010d00:	9101      	str	r1, [sp, #4]
 8010d02:	f7fe fc96 	bl	800f632 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010d06:	4b12      	ldr	r3, [pc, #72]	; (8010d50 <xTaskRemoveFromEventList+0x70>)
 8010d08:	9901      	ldr	r1, [sp, #4]
 8010d0a:	681b      	ldr	r3, [r3, #0]
 8010d0c:	b9eb      	cbnz	r3, 8010d4a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8010d0e:	1d21      	adds	r1, r4, #4
 8010d10:	4608      	mov	r0, r1
 8010d12:	9101      	str	r1, [sp, #4]
 8010d14:	f7fe fc8d 	bl	800f632 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8010d18:	4a0e      	ldr	r2, [pc, #56]	; (8010d54 <xTaskRemoveFromEventList+0x74>)
 8010d1a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010d1c:	6810      	ldr	r0, [r2, #0]
 8010d1e:	9901      	ldr	r1, [sp, #4]
 8010d20:	4283      	cmp	r3, r0
 8010d22:	bf88      	it	hi
 8010d24:	6013      	strhi	r3, [r2, #0]
 8010d26:	4a0c      	ldr	r2, [pc, #48]	; (8010d58 <xTaskRemoveFromEventList+0x78>)
 8010d28:	2014      	movs	r0, #20
 8010d2a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8010d2e:	f7fe fc5d 	bl	800f5ec <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8010d32:	4b0a      	ldr	r3, [pc, #40]	; (8010d5c <xTaskRemoveFromEventList+0x7c>)
 8010d34:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010d36:	681b      	ldr	r3, [r3, #0]
 8010d38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010d3a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8010d3c:	bf85      	ittet	hi
 8010d3e:	4b08      	ldrhi	r3, [pc, #32]	; (8010d60 <xTaskRemoveFromEventList+0x80>)
 8010d40:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8010d42:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8010d44:	6018      	strhi	r0, [r3, #0]
}
 8010d46:	b002      	add	sp, #8
 8010d48:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8010d4a:	4806      	ldr	r0, [pc, #24]	; (8010d64 <xTaskRemoveFromEventList+0x84>)
 8010d4c:	e7ef      	b.n	8010d2e <xTaskRemoveFromEventList+0x4e>
 8010d4e:	bf00      	nop
 8010d50:	2001e004 	.word	0x2001e004
 8010d54:	2001e00c 	.word	0x2001e00c
 8010d58:	2001db98 	.word	0x2001db98
 8010d5c:	2001db8c 	.word	0x2001db8c
 8010d60:	2001e084 	.word	0x2001e084
 8010d64:	2001e040 	.word	0x2001e040

08010d68 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010d68:	4b03      	ldr	r3, [pc, #12]	; (8010d78 <vTaskInternalSetTimeOutState+0x10>)
 8010d6a:	681b      	ldr	r3, [r3, #0]
 8010d6c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010d6e:	4b03      	ldr	r3, [pc, #12]	; (8010d7c <vTaskInternalSetTimeOutState+0x14>)
 8010d70:	681b      	ldr	r3, [r3, #0]
 8010d72:	6043      	str	r3, [r0, #4]
}
 8010d74:	4770      	bx	lr
 8010d76:	bf00      	nop
 8010d78:	2001e03c 	.word	0x2001e03c
 8010d7c:	2001e080 	.word	0x2001e080

08010d80 <xTaskCheckForTimeOut>:
{
 8010d80:	b570      	push	{r4, r5, r6, lr}
 8010d82:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8010d84:	4605      	mov	r5, r0
 8010d86:	b940      	cbnz	r0, 8010d9a <xTaskCheckForTimeOut+0x1a>
 8010d88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d8c:	f383 8811 	msr	BASEPRI, r3
 8010d90:	f3bf 8f6f 	isb	sy
 8010d94:	f3bf 8f4f 	dsb	sy
 8010d98:	e7fe      	b.n	8010d98 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8010d9a:	b941      	cbnz	r1, 8010dae <xTaskCheckForTimeOut+0x2e>
 8010d9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010da0:	f383 8811 	msr	BASEPRI, r3
 8010da4:	f3bf 8f6f 	isb	sy
 8010da8:	f3bf 8f4f 	dsb	sy
 8010dac:	e7fe      	b.n	8010dac <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8010dae:	f7fe fcb9 	bl	800f724 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8010db2:	4b0f      	ldr	r3, [pc, #60]	; (8010df0 <xTaskCheckForTimeOut+0x70>)
 8010db4:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8010db6:	6823      	ldr	r3, [r4, #0]
 8010db8:	1c5a      	adds	r2, r3, #1
 8010dba:	d010      	beq.n	8010dde <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8010dbc:	480d      	ldr	r0, [pc, #52]	; (8010df4 <xTaskCheckForTimeOut+0x74>)
 8010dbe:	682e      	ldr	r6, [r5, #0]
 8010dc0:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8010dc2:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8010dc4:	4286      	cmp	r6, r0
 8010dc6:	d001      	beq.n	8010dcc <xTaskCheckForTimeOut+0x4c>
 8010dc8:	428a      	cmp	r2, r1
 8010dca:	d90f      	bls.n	8010dec <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8010dcc:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8010dce:	4283      	cmp	r3, r0
 8010dd0:	d90a      	bls.n	8010de8 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8010dd2:	1a5b      	subs	r3, r3, r1
 8010dd4:	4413      	add	r3, r2
 8010dd6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8010dd8:	4628      	mov	r0, r5
 8010dda:	f7ff ffc5 	bl	8010d68 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8010dde:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8010de0:	f7fe fcc0 	bl	800f764 <vPortExitCritical>
}
 8010de4:	4620      	mov	r0, r4
 8010de6:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8010de8:	2300      	movs	r3, #0
 8010dea:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8010dec:	2401      	movs	r4, #1
 8010dee:	e7f7      	b.n	8010de0 <xTaskCheckForTimeOut+0x60>
 8010df0:	2001e080 	.word	0x2001e080
 8010df4:	2001e03c 	.word	0x2001e03c

08010df8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8010df8:	4b01      	ldr	r3, [pc, #4]	; (8010e00 <vTaskMissedYield+0x8>)
 8010dfa:	2201      	movs	r2, #1
 8010dfc:	601a      	str	r2, [r3, #0]
}
 8010dfe:	4770      	bx	lr
 8010e00:	2001e084 	.word	0x2001e084

08010e04 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8010e04:	4b05      	ldr	r3, [pc, #20]	; (8010e1c <xTaskGetSchedulerState+0x18>)
 8010e06:	681b      	ldr	r3, [r3, #0]
 8010e08:	b133      	cbz	r3, 8010e18 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010e0a:	4b05      	ldr	r3, [pc, #20]	; (8010e20 <xTaskGetSchedulerState+0x1c>)
 8010e0c:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 8010e0e:	2b00      	cmp	r3, #0
 8010e10:	bf0c      	ite	eq
 8010e12:	2002      	moveq	r0, #2
 8010e14:	2000      	movne	r0, #0
 8010e16:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8010e18:	2001      	movs	r0, #1
	}
 8010e1a:	4770      	bx	lr
 8010e1c:	2001e054 	.word	0x2001e054
 8010e20:	2001e004 	.word	0x2001e004

08010e24 <xTaskPriorityInherit>:
	{
 8010e24:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8010e26:	4604      	mov	r4, r0
 8010e28:	b348      	cbz	r0, 8010e7e <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8010e2a:	4d1c      	ldr	r5, [pc, #112]	; (8010e9c <xTaskPriorityInherit+0x78>)
 8010e2c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010e2e:	682a      	ldr	r2, [r5, #0]
 8010e30:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8010e32:	4293      	cmp	r3, r2
 8010e34:	d229      	bcs.n	8010e8a <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010e36:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8010e38:	4e19      	ldr	r6, [pc, #100]	; (8010ea0 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010e3a:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010e3c:	bfa1      	itttt	ge
 8010e3e:	682a      	ldrge	r2, [r5, #0]
 8010e40:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8010e42:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8010e46:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8010e48:	2214      	movs	r2, #20
 8010e4a:	fb02 6303 	mla	r3, r2, r3, r6
 8010e4e:	6942      	ldr	r2, [r0, #20]
 8010e50:	429a      	cmp	r2, r3
 8010e52:	d116      	bne.n	8010e82 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010e54:	1d01      	adds	r1, r0, #4
 8010e56:	4608      	mov	r0, r1
 8010e58:	9101      	str	r1, [sp, #4]
 8010e5a:	f7fe fbea 	bl	800f632 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010e5e:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010e60:	4a10      	ldr	r2, [pc, #64]	; (8010ea4 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010e62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010e64:	6810      	ldr	r0, [r2, #0]
 8010e66:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010e68:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010e6a:	4283      	cmp	r3, r0
 8010e6c:	f04f 0014 	mov.w	r0, #20
 8010e70:	fb00 6003 	mla	r0, r0, r3, r6
 8010e74:	bf88      	it	hi
 8010e76:	6013      	strhi	r3, [r2, #0]
 8010e78:	f7fe fbb8 	bl	800f5ec <vListInsertEnd>
				xReturn = pdTRUE;
 8010e7c:	2001      	movs	r0, #1
	}
 8010e7e:	b002      	add	sp, #8
 8010e80:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010e82:	682b      	ldr	r3, [r5, #0]
 8010e84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010e86:	62c3      	str	r3, [r0, #44]	; 0x2c
 8010e88:	e7f8      	b.n	8010e7c <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8010e8a:	682b      	ldr	r3, [r5, #0]
 8010e8c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8010e8e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8010e90:	42a0      	cmp	r0, r4
 8010e92:	bf2c      	ite	cs
 8010e94:	2000      	movcs	r0, #0
 8010e96:	2001      	movcc	r0, #1
 8010e98:	e7f1      	b.n	8010e7e <xTaskPriorityInherit+0x5a>
 8010e9a:	bf00      	nop
 8010e9c:	2001db8c 	.word	0x2001db8c
 8010ea0:	2001db98 	.word	0x2001db98
 8010ea4:	2001e00c 	.word	0x2001e00c

08010ea8 <xTaskPriorityDisinherit>:
	{
 8010ea8:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8010eaa:	b910      	cbnz	r0, 8010eb2 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8010eac:	2000      	movs	r0, #0
	}
 8010eae:	b002      	add	sp, #8
 8010eb0:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8010eb2:	4b1c      	ldr	r3, [pc, #112]	; (8010f24 <xTaskPriorityDisinherit+0x7c>)
 8010eb4:	681c      	ldr	r4, [r3, #0]
 8010eb6:	4284      	cmp	r4, r0
 8010eb8:	d008      	beq.n	8010ecc <xTaskPriorityDisinherit+0x24>
 8010eba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ebe:	f383 8811 	msr	BASEPRI, r3
 8010ec2:	f3bf 8f6f 	isb	sy
 8010ec6:	f3bf 8f4f 	dsb	sy
 8010eca:	e7fe      	b.n	8010eca <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8010ecc:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8010ece:	b943      	cbnz	r3, 8010ee2 <xTaskPriorityDisinherit+0x3a>
 8010ed0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ed4:	f383 8811 	msr	BASEPRI, r3
 8010ed8:	f3bf 8f6f 	isb	sy
 8010edc:	f3bf 8f4f 	dsb	sy
 8010ee0:	e7fe      	b.n	8010ee0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8010ee2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8010ee4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8010ee6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8010ee8:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8010eea:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8010eec:	d0de      	beq.n	8010eac <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8010eee:	2b00      	cmp	r3, #0
 8010ef0:	d1dc      	bne.n	8010eac <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010ef2:	1d21      	adds	r1, r4, #4
 8010ef4:	4608      	mov	r0, r1
 8010ef6:	9101      	str	r1, [sp, #4]
 8010ef8:	f7fe fb9b 	bl	800f632 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8010efc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8010efe:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8010f00:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010f02:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8010f06:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8010f08:	4a07      	ldr	r2, [pc, #28]	; (8010f28 <xTaskPriorityDisinherit+0x80>)
 8010f0a:	6810      	ldr	r0, [r2, #0]
 8010f0c:	4283      	cmp	r3, r0
 8010f0e:	bf88      	it	hi
 8010f10:	6013      	strhi	r3, [r2, #0]
 8010f12:	4a06      	ldr	r2, [pc, #24]	; (8010f2c <xTaskPriorityDisinherit+0x84>)
 8010f14:	2014      	movs	r0, #20
 8010f16:	fb00 2003 	mla	r0, r0, r3, r2
 8010f1a:	f7fe fb67 	bl	800f5ec <vListInsertEnd>
					xReturn = pdTRUE;
 8010f1e:	2001      	movs	r0, #1
		return xReturn;
 8010f20:	e7c5      	b.n	8010eae <xTaskPriorityDisinherit+0x6>
 8010f22:	bf00      	nop
 8010f24:	2001db8c 	.word	0x2001db8c
 8010f28:	2001e00c 	.word	0x2001e00c
 8010f2c:	2001db98 	.word	0x2001db98

08010f30 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8010f30:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8010f32:	4604      	mov	r4, r0
 8010f34:	2800      	cmp	r0, #0
 8010f36:	d044      	beq.n	8010fc2 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8010f38:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8010f3a:	b942      	cbnz	r2, 8010f4e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8010f3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f40:	f383 8811 	msr	BASEPRI, r3
 8010f44:	f3bf 8f6f 	isb	sy
 8010f48:	f3bf 8f4f 	dsb	sy
 8010f4c:	e7fe      	b.n	8010f4c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8010f4e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8010f50:	4299      	cmp	r1, r3
 8010f52:	bf38      	it	cc
 8010f54:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8010f56:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010f58:	428b      	cmp	r3, r1
 8010f5a:	d032      	beq.n	8010fc2 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8010f5c:	2a01      	cmp	r2, #1
 8010f5e:	d130      	bne.n	8010fc2 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8010f60:	4a19      	ldr	r2, [pc, #100]	; (8010fc8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8010f62:	6812      	ldr	r2, [r2, #0]
 8010f64:	4282      	cmp	r2, r0
 8010f66:	d108      	bne.n	8010f7a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8010f68:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f6c:	f383 8811 	msr	BASEPRI, r3
 8010f70:	f3bf 8f6f 	isb	sy
 8010f74:	f3bf 8f4f 	dsb	sy
 8010f78:	e7fe      	b.n	8010f78 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010f7a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010f7c:	4d13      	ldr	r5, [pc, #76]	; (8010fcc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8010f7e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010f80:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010f82:	f04f 0214 	mov.w	r2, #20
 8010f86:	fb02 5303 	mla	r3, r2, r3, r5
 8010f8a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010f8c:	bfa4      	itt	ge
 8010f8e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8010f92:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010f94:	429a      	cmp	r2, r3
 8010f96:	d114      	bne.n	8010fc2 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010f98:	1d01      	adds	r1, r0, #4
 8010f9a:	4608      	mov	r0, r1
 8010f9c:	9101      	str	r1, [sp, #4]
 8010f9e:	f7fe fb48 	bl	800f632 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8010fa2:	4a0b      	ldr	r2, [pc, #44]	; (8010fd0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8010fa4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010fa6:	6810      	ldr	r0, [r2, #0]
 8010fa8:	9901      	ldr	r1, [sp, #4]
 8010faa:	4283      	cmp	r3, r0
 8010fac:	f04f 0014 	mov.w	r0, #20
 8010fb0:	fb00 5003 	mla	r0, r0, r3, r5
 8010fb4:	bf88      	it	hi
 8010fb6:	6013      	strhi	r3, [r2, #0]
	}
 8010fb8:	b003      	add	sp, #12
 8010fba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8010fbe:	f7fe bb15 	b.w	800f5ec <vListInsertEnd>
	}
 8010fc2:	b003      	add	sp, #12
 8010fc4:	bd30      	pop	{r4, r5, pc}
 8010fc6:	bf00      	nop
 8010fc8:	2001db8c 	.word	0x2001db8c
 8010fcc:	2001db98 	.word	0x2001db98
 8010fd0:	2001e00c 	.word	0x2001e00c

08010fd4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8010fd4:	4b04      	ldr	r3, [pc, #16]	; (8010fe8 <pvTaskIncrementMutexHeldCount+0x14>)
 8010fd6:	681a      	ldr	r2, [r3, #0]
 8010fd8:	b11a      	cbz	r2, 8010fe2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8010fda:	6819      	ldr	r1, [r3, #0]
 8010fdc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8010fde:	3201      	adds	r2, #1
 8010fe0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8010fe2:	6818      	ldr	r0, [r3, #0]
	}
 8010fe4:	4770      	bx	lr
 8010fe6:	bf00      	nop
 8010fe8:	2001db8c 	.word	0x2001db8c

08010fec <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8010fec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8010fee:	4c11      	ldr	r4, [pc, #68]	; (8011034 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8010ff0:	f7fe fb98 	bl	800f724 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8010ff4:	6825      	ldr	r5, [r4, #0]
 8010ff6:	b9bd      	cbnz	r5, 8011028 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8010ff8:	4f0f      	ldr	r7, [pc, #60]	; (8011038 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8010ffa:	4e10      	ldr	r6, [pc, #64]	; (801103c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8010ffc:	4638      	mov	r0, r7
 8010ffe:	f7fe fae7 	bl	800f5d0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8011002:	4630      	mov	r0, r6
 8011004:	f7fe fae4 	bl	800f5d0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8011008:	4b0d      	ldr	r3, [pc, #52]	; (8011040 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801100a:	4a0e      	ldr	r2, [pc, #56]	; (8011044 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 801100c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801100e:	4b0e      	ldr	r3, [pc, #56]	; (8011048 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8011010:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8011012:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8011014:	200a      	movs	r0, #10
 8011016:	4b0d      	ldr	r3, [pc, #52]	; (801104c <prvCheckForValidListAndQueue+0x60>)
 8011018:	9500      	str	r5, [sp, #0]
 801101a:	f7fe fd94 	bl	800fb46 <xQueueGenericCreateStatic>
 801101e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8011020:	b110      	cbz	r0, 8011028 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8011022:	490b      	ldr	r1, [pc, #44]	; (8011050 <prvCheckForValidListAndQueue+0x64>)
 8011024:	f7ff f95e 	bl	80102e4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8011028:	b003      	add	sp, #12
 801102a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 801102e:	f7fe bb99 	b.w	800f764 <vPortExitCritical>
 8011032:	bf00      	nop
 8011034:	2001e1ac 	.word	0x2001e1ac
 8011038:	2001e130 	.word	0x2001e130
 801103c:	2001e144 	.word	0x2001e144
 8011040:	2001e088 	.word	0x2001e088
 8011044:	2001e090 	.word	0x2001e090
 8011048:	2001e08c 	.word	0x2001e08c
 801104c:	2001e15c 	.word	0x2001e15c
 8011050:	08032a49 	.word	0x08032a49

08011054 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8011054:	4291      	cmp	r1, r2
{
 8011056:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8011058:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801105a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 801105c:	d80a      	bhi.n	8011074 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801105e:	1ad2      	subs	r2, r2, r3
 8011060:	6983      	ldr	r3, [r0, #24]
 8011062:	429a      	cmp	r2, r3
 8011064:	d20d      	bcs.n	8011082 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8011066:	4b08      	ldr	r3, [pc, #32]	; (8011088 <prvInsertTimerInActiveList+0x34>)
 8011068:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801106a:	6818      	ldr	r0, [r3, #0]
 801106c:	f7fe faca 	bl	800f604 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8011070:	2000      	movs	r0, #0
}
 8011072:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8011074:	429a      	cmp	r2, r3
 8011076:	d201      	bcs.n	801107c <prvInsertTimerInActiveList+0x28>
 8011078:	4299      	cmp	r1, r3
 801107a:	d202      	bcs.n	8011082 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801107c:	4b03      	ldr	r3, [pc, #12]	; (801108c <prvInsertTimerInActiveList+0x38>)
 801107e:	1d01      	adds	r1, r0, #4
 8011080:	e7f3      	b.n	801106a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8011082:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8011084:	e7f5      	b.n	8011072 <prvInsertTimerInActiveList+0x1e>
 8011086:	bf00      	nop
 8011088:	2001e08c 	.word	0x2001e08c
 801108c:	2001e088 	.word	0x2001e088

08011090 <xTimerCreateTimerTask>:
{
 8011090:	b510      	push	{r4, lr}
 8011092:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8011094:	f7ff ffaa 	bl	8010fec <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8011098:	4b12      	ldr	r3, [pc, #72]	; (80110e4 <xTimerCreateTimerTask+0x54>)
 801109a:	681b      	ldr	r3, [r3, #0]
 801109c:	b1b3      	cbz	r3, 80110cc <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 801109e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80110a0:	aa07      	add	r2, sp, #28
 80110a2:	a906      	add	r1, sp, #24
 80110a4:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80110a6:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80110aa:	f7fe f997 	bl	800f3dc <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80110ae:	9b05      	ldr	r3, [sp, #20]
 80110b0:	9302      	str	r3, [sp, #8]
 80110b2:	9b06      	ldr	r3, [sp, #24]
 80110b4:	9301      	str	r3, [sp, #4]
 80110b6:	2302      	movs	r3, #2
 80110b8:	9300      	str	r3, [sp, #0]
 80110ba:	9a07      	ldr	r2, [sp, #28]
 80110bc:	490a      	ldr	r1, [pc, #40]	; (80110e8 <xTimerCreateTimerTask+0x58>)
 80110be:	480b      	ldr	r0, [pc, #44]	; (80110ec <xTimerCreateTimerTask+0x5c>)
 80110c0:	4623      	mov	r3, r4
 80110c2:	f7ff fb05 	bl	80106d0 <xTaskCreateStatic>
 80110c6:	4b0a      	ldr	r3, [pc, #40]	; (80110f0 <xTimerCreateTimerTask+0x60>)
 80110c8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80110ca:	b940      	cbnz	r0, 80110de <xTimerCreateTimerTask+0x4e>
 80110cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80110d0:	f383 8811 	msr	BASEPRI, r3
 80110d4:	f3bf 8f6f 	isb	sy
 80110d8:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80110dc:	e7fe      	b.n	80110dc <xTimerCreateTimerTask+0x4c>
}
 80110de:	2001      	movs	r0, #1
 80110e0:	b008      	add	sp, #32
 80110e2:	bd10      	pop	{r4, pc}
 80110e4:	2001e1ac 	.word	0x2001e1ac
 80110e8:	08032a4e 	.word	0x08032a4e
 80110ec:	080111f9 	.word	0x080111f9
 80110f0:	2001e1b0 	.word	0x2001e1b0

080110f4 <xTimerGenericCommand>:
{
 80110f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80110f6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 80110f8:	4604      	mov	r4, r0
{
 80110fa:	461a      	mov	r2, r3
	configASSERT( xTimer );
 80110fc:	b940      	cbnz	r0, 8011110 <xTimerGenericCommand+0x1c>
 80110fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011102:	f383 8811 	msr	BASEPRI, r3
 8011106:	f3bf 8f6f 	isb	sy
 801110a:	f3bf 8f4f 	dsb	sy
 801110e:	e7fe      	b.n	801110e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8011110:	4d0d      	ldr	r5, [pc, #52]	; (8011148 <xTimerGenericCommand+0x54>)
 8011112:	6828      	ldr	r0, [r5, #0]
 8011114:	b180      	cbz	r0, 8011138 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8011116:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8011118:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801111c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 801111e:	dc0d      	bgt.n	801113c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8011120:	f7ff fe70 	bl	8010e04 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8011124:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8011126:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8011128:	bf08      	it	eq
 801112a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 801112c:	6828      	ldr	r0, [r5, #0]
 801112e:	bf18      	it	ne
 8011130:	461a      	movne	r2, r3
 8011132:	4669      	mov	r1, sp
 8011134:	f7fe fdbc 	bl	800fcb0 <xQueueGenericSend>
}
 8011138:	b004      	add	sp, #16
 801113a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 801113c:	2300      	movs	r3, #0
 801113e:	4669      	mov	r1, sp
 8011140:	f7fe fe69 	bl	800fe16 <xQueueGenericSendFromISR>
 8011144:	e7f8      	b.n	8011138 <xTimerGenericCommand+0x44>
 8011146:	bf00      	nop
 8011148:	2001e1ac 	.word	0x2001e1ac

0801114c <prvSampleTimeNow>:
{
 801114c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8011150:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 80111f4 <prvSampleTimeNow+0xa8>
{
 8011154:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8011156:	f7ff fbbd 	bl	80108d4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801115a:	f8d8 3000 	ldr.w	r3, [r8]
 801115e:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8011160:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8011162:	d940      	bls.n	80111e6 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8011164:	4f21      	ldr	r7, [pc, #132]	; (80111ec <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8011166:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801116a:	683b      	ldr	r3, [r7, #0]
 801116c:	681a      	ldr	r2, [r3, #0]
 801116e:	b95a      	cbnz	r2, 8011188 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8011170:	4a1f      	ldr	r2, [pc, #124]	; (80111f0 <prvSampleTimeNow+0xa4>)
 8011172:	6811      	ldr	r1, [r2, #0]
 8011174:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8011176:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8011178:	2301      	movs	r3, #1
}
 801117a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 801117c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 801117e:	f8c8 5000 	str.w	r5, [r8]
}
 8011182:	b004      	add	sp, #16
 8011184:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8011188:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801118a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801118c:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8011190:	1d21      	adds	r1, r4, #4
 8011192:	4608      	mov	r0, r1
 8011194:	9103      	str	r1, [sp, #12]
 8011196:	f7fe fa4c 	bl	800f632 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801119a:	6a23      	ldr	r3, [r4, #32]
 801119c:	4620      	mov	r0, r4
 801119e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80111a0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80111a4:	9903      	ldr	r1, [sp, #12]
 80111a6:	f013 0f04 	tst.w	r3, #4
 80111aa:	d0de      	beq.n	801116a <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80111ac:	69a3      	ldr	r3, [r4, #24]
 80111ae:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 80111b0:	459a      	cmp	sl, r3
 80111b2:	d205      	bcs.n	80111c0 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80111b4:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80111b6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80111b8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80111ba:	f7fe fa23 	bl	800f604 <vListInsert>
 80111be:	e7d4      	b.n	801116a <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80111c0:	2300      	movs	r3, #0
 80111c2:	f8cd 9000 	str.w	r9, [sp]
 80111c6:	4652      	mov	r2, sl
 80111c8:	4619      	mov	r1, r3
 80111ca:	4620      	mov	r0, r4
 80111cc:	f7ff ff92 	bl	80110f4 <xTimerGenericCommand>
				configASSERT( xResult );
 80111d0:	2800      	cmp	r0, #0
 80111d2:	d1ca      	bne.n	801116a <prvSampleTimeNow+0x1e>
 80111d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80111d8:	f383 8811 	msr	BASEPRI, r3
 80111dc:	f3bf 8f6f 	isb	sy
 80111e0:	f3bf 8f4f 	dsb	sy
 80111e4:	e7fe      	b.n	80111e4 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 80111e6:	2300      	movs	r3, #0
 80111e8:	e7c7      	b.n	801117a <prvSampleTimeNow+0x2e>
 80111ea:	bf00      	nop
 80111ec:	2001e088 	.word	0x2001e088
 80111f0:	2001e08c 	.word	0x2001e08c
 80111f4:	2001e158 	.word	0x2001e158

080111f8 <prvTimerTask>:
{
 80111f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80111fc:	4d6e      	ldr	r5, [pc, #440]	; (80113b8 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80111fe:	4e6f      	ldr	r6, [pc, #444]	; (80113bc <prvTimerTask+0x1c4>)
{
 8011200:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8011202:	682b      	ldr	r3, [r5, #0]
 8011204:	f8d3 8000 	ldr.w	r8, [r3]
 8011208:	f1b8 0f00 	cmp.w	r8, #0
 801120c:	d035      	beq.n	801127a <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801120e:	68db      	ldr	r3, [r3, #12]
 8011210:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8011214:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8011216:	f7ff fb55 	bl	80108c4 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 801121a:	a804      	add	r0, sp, #16
 801121c:	f7ff ff96 	bl	801114c <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8011220:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8011222:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8011224:	2b00      	cmp	r3, #0
 8011226:	d169      	bne.n	80112fc <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8011228:	2c00      	cmp	r4, #0
 801122a:	d14c      	bne.n	80112c6 <prvTimerTask+0xce>
 801122c:	4540      	cmp	r0, r8
 801122e:	d350      	bcc.n	80112d2 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8011230:	f7ff fbec 	bl	8010a0c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011234:	682b      	ldr	r3, [r5, #0]
 8011236:	68db      	ldr	r3, [r3, #12]
 8011238:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801123a:	1d38      	adds	r0, r7, #4
 801123c:	f7fe f9f9 	bl	800f632 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8011240:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8011244:	0758      	lsls	r0, r3, #29
 8011246:	d51a      	bpl.n	801127e <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8011248:	69b9      	ldr	r1, [r7, #24]
 801124a:	4643      	mov	r3, r8
 801124c:	464a      	mov	r2, r9
 801124e:	4441      	add	r1, r8
 8011250:	4638      	mov	r0, r7
 8011252:	f7ff feff 	bl	8011054 <prvInsertTimerInActiveList>
 8011256:	b1b0      	cbz	r0, 8011286 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8011258:	9400      	str	r4, [sp, #0]
 801125a:	4623      	mov	r3, r4
 801125c:	4642      	mov	r2, r8
 801125e:	4621      	mov	r1, r4
 8011260:	4638      	mov	r0, r7
 8011262:	f7ff ff47 	bl	80110f4 <xTimerGenericCommand>
			configASSERT( xResult );
 8011266:	b970      	cbnz	r0, 8011286 <prvTimerTask+0x8e>
 8011268:	f04f 0350 	mov.w	r3, #80	; 0x50
 801126c:	f383 8811 	msr	BASEPRI, r3
 8011270:	f3bf 8f6f 	isb	sy
 8011274:	f3bf 8f4f 	dsb	sy
 8011278:	e7fe      	b.n	8011278 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 801127a:	2401      	movs	r4, #1
 801127c:	e7cb      	b.n	8011216 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801127e:	f023 0301 	bic.w	r3, r3, #1
 8011282:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8011286:	6a3b      	ldr	r3, [r7, #32]
 8011288:	4638      	mov	r0, r7
 801128a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 801128c:	6830      	ldr	r0, [r6, #0]
 801128e:	2200      	movs	r2, #0
 8011290:	a904      	add	r1, sp, #16
 8011292:	f7fe fe75 	bl	800ff80 <xQueueReceive>
 8011296:	2800      	cmp	r0, #0
 8011298:	d0b3      	beq.n	8011202 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 801129a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 801129c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 801129e:	2b00      	cmp	r3, #0
 80112a0:	db2f      	blt.n	8011302 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80112a2:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80112a4:	6963      	ldr	r3, [r4, #20]
 80112a6:	2b00      	cmp	r3, #0
 80112a8:	d132      	bne.n	8011310 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80112aa:	a803      	add	r0, sp, #12
 80112ac:	f7ff ff4e 	bl	801114c <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 80112b0:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80112b2:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 80112b4:	2b09      	cmp	r3, #9
 80112b6:	d8e9      	bhi.n	801128c <prvTimerTask+0x94>
 80112b8:	e8df f003 	tbb	[pc, r3]
 80112bc:	572e2e2e 	.word	0x572e2e2e
 80112c0:	2e2e765e 	.word	0x2e2e765e
 80112c4:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80112c6:	4b3e      	ldr	r3, [pc, #248]	; (80113c0 <prvTimerTask+0x1c8>)
 80112c8:	681b      	ldr	r3, [r3, #0]
 80112ca:	681c      	ldr	r4, [r3, #0]
 80112cc:	fab4 f484 	clz	r4, r4
 80112d0:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80112d2:	6830      	ldr	r0, [r6, #0]
 80112d4:	4622      	mov	r2, r4
 80112d6:	eba8 0109 	sub.w	r1, r8, r9
 80112da:	f7ff f840 	bl	801035e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80112de:	f7ff fb95 	bl	8010a0c <xTaskResumeAll>
 80112e2:	2800      	cmp	r0, #0
 80112e4:	d1d2      	bne.n	801128c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 80112e6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80112ea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80112ee:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80112f2:	f3bf 8f4f 	dsb	sy
 80112f6:	f3bf 8f6f 	isb	sy
 80112fa:	e7c7      	b.n	801128c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 80112fc:	f7ff fb86 	bl	8010a0c <xTaskResumeAll>
}
 8011300:	e7c4      	b.n	801128c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8011302:	9b05      	ldr	r3, [sp, #20]
 8011304:	9907      	ldr	r1, [sp, #28]
 8011306:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8011308:	9b04      	ldr	r3, [sp, #16]
 801130a:	2b00      	cmp	r3, #0
 801130c:	dbbe      	blt.n	801128c <prvTimerTask+0x94>
 801130e:	e7c8      	b.n	80112a2 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8011310:	1d20      	adds	r0, r4, #4
 8011312:	f7fe f98e 	bl	800f632 <uxListRemove>
 8011316:	e7c8      	b.n	80112aa <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8011318:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801131c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 801131e:	f043 0301 	orr.w	r3, r3, #1
 8011322:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8011326:	9b05      	ldr	r3, [sp, #20]
 8011328:	4620      	mov	r0, r4
 801132a:	4419      	add	r1, r3
 801132c:	f7ff fe92 	bl	8011054 <prvInsertTimerInActiveList>
 8011330:	2800      	cmp	r0, #0
 8011332:	d0ab      	beq.n	801128c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8011334:	6a23      	ldr	r3, [r4, #32]
 8011336:	4620      	mov	r0, r4
 8011338:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 801133a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801133e:	0759      	lsls	r1, r3, #29
 8011340:	d5a4      	bpl.n	801128c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8011342:	69a2      	ldr	r2, [r4, #24]
 8011344:	9905      	ldr	r1, [sp, #20]
 8011346:	2300      	movs	r3, #0
 8011348:	440a      	add	r2, r1
 801134a:	9300      	str	r3, [sp, #0]
 801134c:	4619      	mov	r1, r3
 801134e:	4620      	mov	r0, r4
 8011350:	f7ff fed0 	bl	80110f4 <xTimerGenericCommand>
							configASSERT( xResult );
 8011354:	2800      	cmp	r0, #0
 8011356:	d199      	bne.n	801128c <prvTimerTask+0x94>
 8011358:	f04f 0350 	mov.w	r3, #80	; 0x50
 801135c:	f383 8811 	msr	BASEPRI, r3
 8011360:	f3bf 8f6f 	isb	sy
 8011364:	f3bf 8f4f 	dsb	sy
 8011368:	e7fe      	b.n	8011368 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801136a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801136e:	f023 0301 	bic.w	r3, r3, #1
 8011372:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8011376:	e789      	b.n	801128c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8011378:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801137c:	f043 0301 	orr.w	r3, r3, #1
 8011380:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8011384:	9905      	ldr	r1, [sp, #20]
 8011386:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8011388:	b941      	cbnz	r1, 801139c <prvTimerTask+0x1a4>
 801138a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801138e:	f383 8811 	msr	BASEPRI, r3
 8011392:	f3bf 8f6f 	isb	sy
 8011396:	f3bf 8f4f 	dsb	sy
 801139a:	e7fe      	b.n	801139a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 801139c:	4603      	mov	r3, r0
 801139e:	4401      	add	r1, r0
 80113a0:	4620      	mov	r0, r4
 80113a2:	f7ff fe57 	bl	8011054 <prvInsertTimerInActiveList>
					break;
 80113a6:	e771      	b.n	801128c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80113a8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80113ac:	079a      	lsls	r2, r3, #30
 80113ae:	d4de      	bmi.n	801136e <prvTimerTask+0x176>
							vPortFree( pxTimer );
 80113b0:	4620      	mov	r0, r4
 80113b2:	f7fe f8d5 	bl	800f560 <vPortFree>
 80113b6:	e769      	b.n	801128c <prvTimerTask+0x94>
 80113b8:	2001e088 	.word	0x2001e088
 80113bc:	2001e1ac 	.word	0x2001e1ac
 80113c0:	2001e08c 	.word	0x2001e08c

080113c4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80113c4:	8880      	ldrh	r0, [r0, #4]
 80113c6:	4770      	bx	lr

080113c8 <_ZN8touchgfx17AbstractPartition5clearEv>:
 80113c8:	2300      	movs	r3, #0
 80113ca:	8083      	strh	r3, [r0, #4]
 80113cc:	4770      	bx	lr
	...

080113d0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80113d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80113d2:	6803      	ldr	r3, [r0, #0]
 80113d4:	4605      	mov	r5, r0
 80113d6:	460e      	mov	r6, r1
 80113d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80113da:	2100      	movs	r1, #0
 80113dc:	4798      	blx	r3
 80113de:	682b      	ldr	r3, [r5, #0]
 80113e0:	4604      	mov	r4, r0
 80113e2:	6a1b      	ldr	r3, [r3, #32]
 80113e4:	4628      	mov	r0, r5
 80113e6:	4798      	blx	r3
 80113e8:	88ab      	ldrh	r3, [r5, #4]
 80113ea:	1b34      	subs	r4, r6, r4
 80113ec:	b2a4      	uxth	r4, r4
 80113ee:	fbb4 f4f0 	udiv	r4, r4, r0
 80113f2:	42a3      	cmp	r3, r4
 80113f4:	d805      	bhi.n	8011402 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 80113f6:	4b0e      	ldr	r3, [pc, #56]	; (8011430 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 80113f8:	4a0e      	ldr	r2, [pc, #56]	; (8011434 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 80113fa:	211d      	movs	r1, #29
 80113fc:	480e      	ldr	r0, [pc, #56]	; (8011438 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 80113fe:	f01a fde1 	bl	802bfc4 <__assert_func>
 8011402:	682b      	ldr	r3, [r5, #0]
 8011404:	2100      	movs	r1, #0
 8011406:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011408:	4628      	mov	r0, r5
 801140a:	4798      	blx	r3
 801140c:	682b      	ldr	r3, [r5, #0]
 801140e:	4607      	mov	r7, r0
 8011410:	6a1b      	ldr	r3, [r3, #32]
 8011412:	4628      	mov	r0, r5
 8011414:	4798      	blx	r3
 8011416:	1bf3      	subs	r3, r6, r7
 8011418:	b29b      	uxth	r3, r3
 801141a:	fbb3 f2f0 	udiv	r2, r3, r0
 801141e:	fb02 3010 	mls	r0, r2, r0, r3
 8011422:	b118      	cbz	r0, 801142c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8011424:	4b05      	ldr	r3, [pc, #20]	; (801143c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8011426:	4a03      	ldr	r2, [pc, #12]	; (8011434 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8011428:	211e      	movs	r1, #30
 801142a:	e7e7      	b.n	80113fc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 801142c:	4620      	mov	r0, r4
 801142e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011430:	08032a56 	.word	0x08032a56
 8011434:	08032bc2 	.word	0x08032bc2
 8011438:	08032a6b 	.word	0x08032a6b
 801143c:	08032a99 	.word	0x08032a99

08011440 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8011440:	b538      	push	{r3, r4, r5, lr}
 8011442:	6803      	ldr	r3, [r0, #0]
 8011444:	6a1b      	ldr	r3, [r3, #32]
 8011446:	460d      	mov	r5, r1
 8011448:	4604      	mov	r4, r0
 801144a:	4798      	blx	r3
 801144c:	4285      	cmp	r5, r0
 801144e:	d905      	bls.n	801145c <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8011450:	4b0c      	ldr	r3, [pc, #48]	; (8011484 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8011452:	4a0d      	ldr	r2, [pc, #52]	; (8011488 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8011454:	212f      	movs	r1, #47	; 0x2f
 8011456:	480d      	ldr	r0, [pc, #52]	; (801148c <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8011458:	f01a fdb4 	bl	802bfc4 <__assert_func>
 801145c:	6823      	ldr	r3, [r4, #0]
 801145e:	88a5      	ldrh	r5, [r4, #4]
 8011460:	69db      	ldr	r3, [r3, #28]
 8011462:	4620      	mov	r0, r4
 8011464:	4798      	blx	r3
 8011466:	4285      	cmp	r5, r0
 8011468:	d303      	bcc.n	8011472 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 801146a:	4b09      	ldr	r3, [pc, #36]	; (8011490 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 801146c:	4a06      	ldr	r2, [pc, #24]	; (8011488 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 801146e:	2130      	movs	r1, #48	; 0x30
 8011470:	e7f1      	b.n	8011456 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8011472:	6823      	ldr	r3, [r4, #0]
 8011474:	88a1      	ldrh	r1, [r4, #4]
 8011476:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011478:	4620      	mov	r0, r4
 801147a:	4798      	blx	r3
 801147c:	88a3      	ldrh	r3, [r4, #4]
 801147e:	3301      	adds	r3, #1
 8011480:	80a3      	strh	r3, [r4, #4]
 8011482:	bd38      	pop	{r3, r4, r5, pc}
 8011484:	08032b13 	.word	0x08032b13
 8011488:	08032c05 	.word	0x08032c05
 801148c:	08032a6b 	.word	0x08032a6b
 8011490:	08032b2a 	.word	0x08032b2a

08011494 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8011494:	b570      	push	{r4, r5, r6, lr}
 8011496:	6803      	ldr	r3, [r0, #0]
 8011498:	6a1b      	ldr	r3, [r3, #32]
 801149a:	4616      	mov	r6, r2
 801149c:	4604      	mov	r4, r0
 801149e:	460d      	mov	r5, r1
 80114a0:	4798      	blx	r3
 80114a2:	4286      	cmp	r6, r0
 80114a4:	d905      	bls.n	80114b2 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 80114a6:	4b06      	ldr	r3, [pc, #24]	; (80114c0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 80114a8:	4a06      	ldr	r2, [pc, #24]	; (80114c4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 80114aa:	4807      	ldr	r0, [pc, #28]	; (80114c8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 80114ac:	2139      	movs	r1, #57	; 0x39
 80114ae:	f01a fd89 	bl	802bfc4 <__assert_func>
 80114b2:	6823      	ldr	r3, [r4, #0]
 80114b4:	4629      	mov	r1, r5
 80114b6:	4620      	mov	r0, r4
 80114b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80114ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114be:	4718      	bx	r3
 80114c0:	08032b13 	.word	0x08032b13
 80114c4:	08032b78 	.word	0x08032b78
 80114c8:	08032a6b 	.word	0x08032a6b

080114cc <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80114cc:	4770      	bx	lr
	...

080114d0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80114d0:	4a02      	ldr	r2, [pc, #8]	; (80114dc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80114d2:	6002      	str	r2, [r0, #0]
 80114d4:	2200      	movs	r2, #0
 80114d6:	8082      	strh	r2, [r0, #4]
 80114d8:	4770      	bx	lr
 80114da:	bf00      	nop
 80114dc:	08032b4c 	.word	0x08032b4c

080114e0 <_ZN8touchgfx8TextArea8setWidthEs>:
 80114e0:	b530      	push	{r4, r5, lr}
 80114e2:	b085      	sub	sp, #20
 80114e4:	6803      	ldr	r3, [r0, #0]
 80114e6:	8101      	strh	r1, [r0, #8]
 80114e8:	466d      	mov	r5, sp
 80114ea:	4601      	mov	r1, r0
 80114ec:	4604      	mov	r4, r0
 80114ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80114f2:	4628      	mov	r0, r5
 80114f4:	4798      	blx	r3
 80114f6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80114fa:	343c      	adds	r4, #60	; 0x3c
 80114fc:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011500:	b005      	add	sp, #20
 8011502:	bd30      	pop	{r4, r5, pc}

08011504 <_ZN8touchgfx8TextArea9setHeightEs>:
 8011504:	b530      	push	{r4, r5, lr}
 8011506:	b085      	sub	sp, #20
 8011508:	6803      	ldr	r3, [r0, #0]
 801150a:	8141      	strh	r1, [r0, #10]
 801150c:	466d      	mov	r5, sp
 801150e:	4601      	mov	r1, r0
 8011510:	4604      	mov	r4, r0
 8011512:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8011516:	4628      	mov	r0, r5
 8011518:	4798      	blx	r3
 801151a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801151e:	343c      	adds	r4, #60	; 0x3c
 8011520:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011524:	b005      	add	sp, #20
 8011526:	bd30      	pop	{r4, r5, pc}

08011528 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8011528:	2200      	movs	r2, #0
 801152a:	8002      	strh	r2, [r0, #0]
 801152c:	8042      	strh	r2, [r0, #2]
 801152e:	8082      	strh	r2, [r0, #4]
 8011530:	80c2      	strh	r2, [r0, #6]
 8011532:	4770      	bx	lr

08011534 <_ZN8touchgfx8TextArea8setAlphaEh>:
 8011534:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 8011538:	4770      	bx	lr

0801153a <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 801153a:	b570      	push	{r4, r5, r6, lr}
 801153c:	6803      	ldr	r3, [r0, #0]
 801153e:	4604      	mov	r4, r0
 8011540:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011542:	4615      	mov	r5, r2
 8011544:	4798      	blx	r3
 8011546:	6823      	ldr	r3, [r4, #0]
 8011548:	4629      	mov	r1, r5
 801154a:	4620      	mov	r0, r4
 801154c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801154e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011552:	4718      	bx	r3

08011554 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 8011554:	2000      	movs	r0, #0
 8011556:	4770      	bx	lr

08011558 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
 8011558:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801155a:	4770      	bx	lr

0801155c <_ZNK8touchgfx12TextProgress12getTypedTextEv>:
 801155c:	4a02      	ldr	r2, [pc, #8]	; (8011568 <_ZNK8touchgfx12TextProgress12getTypedTextEv+0xc>)
 801155e:	6002      	str	r2, [r0, #0]
 8011560:	f8b1 20e0 	ldrh.w	r2, [r1, #224]	; 0xe0
 8011564:	8082      	strh	r2, [r0, #4]
 8011566:	4770      	bx	lr
 8011568:	0802f844 	.word	0x0802f844

0801156c <_ZN8touchgfx12TextProgress8setColorENS_9colortypeE>:
 801156c:	f8c0 10e4 	str.w	r1, [r0, #228]	; 0xe4
 8011570:	4770      	bx	lr

08011572 <_ZNK8touchgfx12TextProgress8getColorEv>:
 8011572:	f8d0 00e4 	ldr.w	r0, [r0, #228]	; 0xe4
 8011576:	4770      	bx	lr

08011578 <_ZN8touchgfx12TextProgress19setNumberOfDecimalsEt>:
 8011578:	b570      	push	{r4, r5, r6, lr}
 801157a:	2902      	cmp	r1, #2
 801157c:	bf28      	it	cs
 801157e:	2102      	movcs	r1, #2
 8011580:	6803      	ldr	r3, [r0, #0]
 8011582:	f8a0 1112 	strh.w	r1, [r0, #274]	; 0x112
 8011586:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 801158a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801158e:	4604      	mov	r4, r0
 8011590:	4798      	blx	r3
 8011592:	462b      	mov	r3, r5
 8011594:	4601      	mov	r1, r0
 8011596:	4620      	mov	r0, r4
 8011598:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801159c:	4718      	bx	r3

0801159e <_ZNK8touchgfx12TextProgress19getNumberOfDecimalsEv>:
 801159e:	f8b0 0112 	ldrh.w	r0, [r0, #274]	; 0x112
 80115a2:	4770      	bx	lr

080115a4 <_ZN8touchgfx12TextProgressD1Ev>:
 80115a4:	4770      	bx	lr

080115a6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 80115a6:	4770      	bx	lr

080115a8 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80115a8:	b510      	push	{r4, lr}
 80115aa:	214c      	movs	r1, #76	; 0x4c
 80115ac:	4604      	mov	r4, r0
 80115ae:	f019 fdbc 	bl	802b12a <_ZdlPvj>
 80115b2:	4620      	mov	r0, r4
 80115b4:	bd10      	pop	{r4, pc}

080115b6 <_ZN8touchgfx12TextProgressD0Ev>:
 80115b6:	b510      	push	{r4, lr}
 80115b8:	f44f 718a 	mov.w	r1, #276	; 0x114
 80115bc:	4604      	mov	r4, r0
 80115be:	f019 fdb4 	bl	802b12a <_ZdlPvj>
 80115c2:	4620      	mov	r0, r4
 80115c4:	bd10      	pop	{r4, pc}
	...

080115c8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 80115c8:	b570      	push	{r4, r5, r6, lr}
 80115ca:	6803      	ldr	r3, [r0, #0]
 80115cc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80115ce:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 80115d0:	4b11      	ldr	r3, [pc, #68]	; (8011618 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80115d2:	681b      	ldr	r3, [r3, #0]
 80115d4:	4604      	mov	r4, r0
 80115d6:	b28d      	uxth	r5, r1
 80115d8:	b92b      	cbnz	r3, 80115e6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 80115da:	4b10      	ldr	r3, [pc, #64]	; (801161c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80115dc:	4a10      	ldr	r2, [pc, #64]	; (8011620 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80115de:	21ae      	movs	r1, #174	; 0xae
 80115e0:	4810      	ldr	r0, [pc, #64]	; (8011624 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80115e2:	f01a fcef 	bl	802bfc4 <__assert_func>
 80115e6:	4910      	ldr	r1, [pc, #64]	; (8011628 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80115e8:	8809      	ldrh	r1, [r1, #0]
 80115ea:	4291      	cmp	r1, r2
 80115ec:	d803      	bhi.n	80115f6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80115ee:	4b0f      	ldr	r3, [pc, #60]	; (801162c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80115f0:	4a0b      	ldr	r2, [pc, #44]	; (8011620 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80115f2:	21af      	movs	r1, #175	; 0xaf
 80115f4:	e7f4      	b.n	80115e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 80115f6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80115fa:	4b0d      	ldr	r3, [pc, #52]	; (8011630 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80115fc:	681b      	ldr	r3, [r3, #0]
 80115fe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8011602:	6803      	ldr	r3, [r0, #0]
 8011604:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011606:	4798      	blx	r3
 8011608:	1a29      	subs	r1, r5, r0
 801160a:	4633      	mov	r3, r6
 801160c:	4620      	mov	r0, r4
 801160e:	b209      	sxth	r1, r1
 8011610:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011614:	4718      	bx	r3
 8011616:	bf00      	nop
 8011618:	2001e230 	.word	0x2001e230
 801161c:	0802f6d0 	.word	0x0802f6d0
 8011620:	08032e0c 	.word	0x08032e0c
 8011624:	0802f75e 	.word	0x0802f75e
 8011628:	2001e234 	.word	0x2001e234
 801162c:	08032cdf 	.word	0x08032cdf
 8011630:	2001e238 	.word	0x2001e238

08011634 <_ZN8touchgfx12TextProgress12setTypedTextERKNS_9TypedTextE>:
 8011634:	30b4      	adds	r0, #180	; 0xb4
 8011636:	f005 bc51 	b.w	8016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>

0801163a <_ZN8touchgfx12TextProgress8setAlphaEh>:
 801163a:	b538      	push	{r3, r4, r5, lr}
 801163c:	4604      	mov	r4, r0
 801163e:	460d      	mov	r5, r1
 8011640:	f000 f9f7 	bl	8011a32 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8011644:	f884 50ea 	strb.w	r5, [r4, #234]	; 0xea
 8011648:	bd38      	pop	{r3, r4, r5, pc}
	...

0801164c <_ZN8touchgfx12TextProgress8setValueEi>:
 801164c:	b570      	push	{r4, r5, r6, lr}
 801164e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8011652:	4604      	mov	r4, r0
 8011654:	b086      	sub	sp, #24
 8011656:	460e      	mov	r6, r1
 8011658:	4628      	mov	r0, r5
 801165a:	f005 fddf 	bl	801721c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 801165e:	4631      	mov	r1, r6
 8011660:	4620      	mov	r0, r4
 8011662:	f000 fa37 	bl	8011ad4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8011666:	4b1d      	ldr	r3, [pc, #116]	; (80116dc <_ZN8touchgfx12TextProgress8setValueEi+0x90>)
 8011668:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 801166c:	ab06      	add	r3, sp, #24
 801166e:	e903 0007 	stmdb	r3, {r0, r1, r2}
 8011672:	f8b4 3112 	ldrh.w	r3, [r4, #274]	; 0x112
 8011676:	aa06      	add	r2, sp, #24
 8011678:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801167c:	4620      	mov	r0, r4
 801167e:	f853 1c0c 	ldr.w	r1, [r3, #-12]
 8011682:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8011686:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 801168a:	0089      	lsls	r1, r1, #2
 801168c:	b289      	uxth	r1, r1
 801168e:	f000 fab4 	bl	8011bfa <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8011692:	f8b4 1112 	ldrh.w	r1, [r4, #274]	; 0x112
 8011696:	f504 7680 	add.w	r6, r4, #256	; 0x100
 801169a:	b1b9      	cbz	r1, 80116cc <_ZN8touchgfx12TextProgress8setValueEi+0x80>
 801169c:	ab06      	add	r3, sp, #24
 801169e:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 80116a2:	f853 2c0c 	ldr.w	r2, [r3, #-12]
 80116a6:	fb90 f3f2 	sdiv	r3, r0, r2
 80116aa:	fb02 0213 	mls	r2, r2, r3, r0
 80116ae:	e9cd 1200 	strd	r1, r2, [sp]
 80116b2:	4630      	mov	r0, r6
 80116b4:	4a0a      	ldr	r2, [pc, #40]	; (80116e0 <_ZN8touchgfx12TextProgress8setValueEi+0x94>)
 80116b6:	2108      	movs	r1, #8
 80116b8:	f00a ff2a 	bl	801c510 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80116bc:	4628      	mov	r0, r5
 80116be:	f8c4 60fc 	str.w	r6, [r4, #252]	; 0xfc
 80116c2:	b006      	add	sp, #24
 80116c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116c8:	f005 bda8 	b.w	801721c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 80116cc:	4603      	mov	r3, r0
 80116ce:	4a05      	ldr	r2, [pc, #20]	; (80116e4 <_ZN8touchgfx12TextProgress8setValueEi+0x98>)
 80116d0:	2108      	movs	r1, #8
 80116d2:	4630      	mov	r0, r6
 80116d4:	f00a ff1c 	bl	801c510 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80116d8:	e7f0      	b.n	80116bc <_ZN8touchgfx12TextProgress8setValueEi+0x70>
 80116da:	bf00      	nop
 80116dc:	0802ecf8 	.word	0x0802ecf8
 80116e0:	08032cd4 	.word	0x08032cd4
 80116e4:	08032cdc 	.word	0x08032cdc

080116e8 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 80116e8:	b510      	push	{r4, lr}
 80116ea:	6803      	ldr	r3, [r0, #0]
 80116ec:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80116f0:	4604      	mov	r4, r0
 80116f2:	4798      	blx	r3
 80116f4:	b120      	cbz	r0, 8011700 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x18>
 80116f6:	4620      	mov	r0, r4
 80116f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80116fc:	f000 bb6a 	b.w	8011dd4 <_ZNK8touchgfx9Container17invalidateContentEv>
 8011700:	bd10      	pop	{r4, pc}

08011702 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
 8011702:	2200      	movs	r2, #0
 8011704:	f04f 31ff 	mov.w	r1, #4294967295
 8011708:	e9c0 2100 	strd	r2, r1, [r0]
 801170c:	6082      	str	r2, [r0, #8]
 801170e:	4770      	bx	lr

08011710 <_ZN8touchgfx12TextProgress28setProgressIndicatorPositionEssss>:
 8011710:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011714:	461d      	mov	r5, r3
 8011716:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 801171a:	2300      	movs	r3, #0
 801171c:	f100 07b4 	add.w	r7, r0, #180	; 0xb4
 8011720:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 8011724:	4604      	mov	r4, r0
 8011726:	4688      	mov	r8, r1
 8011728:	4638      	mov	r0, r7
 801172a:	4629      	mov	r1, r5
 801172c:	4691      	mov	r9, r2
 801172e:	f7ff fed7 	bl	80114e0 <_ZN8touchgfx8TextArea8setWidthEs>
 8011732:	4631      	mov	r1, r6
 8011734:	4638      	mov	r0, r7
 8011736:	f7ff fee5 	bl	8011504 <_ZN8touchgfx8TextArea9setHeightEs>
 801173a:	9608      	str	r6, [sp, #32]
 801173c:	462b      	mov	r3, r5
 801173e:	464a      	mov	r2, r9
 8011740:	4641      	mov	r1, r8
 8011742:	4620      	mov	r0, r4
 8011744:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011748:	f000 ba8c 	b.w	8011c64 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

0801174c <_ZN8touchgfx12TextProgressC1Ev>:
 801174c:	b510      	push	{r4, lr}
 801174e:	4604      	mov	r4, r0
 8011750:	f000 fab4 	bl	8011cbc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8011754:	2201      	movs	r2, #1
 8011756:	f884 20d9 	strb.w	r2, [r4, #217]	; 0xd9
 801175a:	4a24      	ldr	r2, [pc, #144]	; (80117ec <_ZN8touchgfx12TextProgressC1Ev+0xa0>)
 801175c:	f8c4 20dc 	str.w	r2, [r4, #220]	; 0xdc
 8011760:	4b23      	ldr	r3, [pc, #140]	; (80117f0 <_ZN8touchgfx12TextProgressC1Ev+0xa4>)
 8011762:	6023      	str	r3, [r4, #0]
 8011764:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011768:	2300      	movs	r3, #0
 801176a:	f8a4 20e0 	strh.w	r2, [r4, #224]	; 0xe0
 801176e:	f8a4 20f4 	strh.w	r2, [r4, #244]	; 0xf4
 8011772:	f8a4 20f6 	strh.w	r2, [r4, #246]	; 0xf6
 8011776:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 801177a:	4a1e      	ldr	r2, [pc, #120]	; (80117f4 <_ZN8touchgfx12TextProgressC1Ev+0xa8>)
 801177c:	f8c4 10e8 	str.w	r1, [r4, #232]	; 0xe8
 8011780:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011784:	f8a4 30b8 	strh.w	r3, [r4, #184]	; 0xb8
 8011788:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 801178c:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 8011790:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8011794:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 8011798:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 801179c:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 80117a0:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 80117a4:	e9c4 3332 	strd	r3, r3, [r4, #200]	; 0xc8
 80117a8:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
 80117ac:	f8a4 30d4 	strh.w	r3, [r4, #212]	; 0xd4
 80117b0:	f8a4 30d6 	strh.w	r3, [r4, #214]	; 0xd6
 80117b4:	f884 30d8 	strb.w	r3, [r4, #216]	; 0xd8
 80117b8:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
 80117bc:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 80117c0:	f884 30ed 	strb.w	r3, [r4, #237]	; 0xed
 80117c4:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 80117c8:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 80117cc:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
 80117d0:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 80117d4:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 80117d8:	f8a4 3112 	strh.w	r3, [r4, #274]	; 0x112
 80117dc:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 80117e0:	f104 01b4 	add.w	r1, r4, #180	; 0xb4
 80117e4:	f000 fb3a 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80117e8:	4620      	mov	r0, r4
 80117ea:	bd10      	pop	{r4, pc}
 80117ec:	0802f844 	.word	0x0802f844
 80117f0:	08032d28 	.word	0x08032d28
 80117f4:	08032c4c 	.word	0x08032c4c

080117f8 <_ZN8touchgfx14CircleProgress9setCenterEii>:
 80117f8:	0149      	lsls	r1, r1, #5
 80117fa:	0152      	lsls	r2, r2, #5
 80117fc:	f8c0 10e4 	str.w	r1, [r0, #228]	; 0xe4
 8011800:	f8c0 20e8 	str.w	r2, [r0, #232]	; 0xe8
 8011804:	4770      	bx	lr

08011806 <_ZNK8touchgfx14CircleProgress9getCenterERiS1_>:
 8011806:	b530      	push	{r4, r5, lr}
 8011808:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 801180c:	2520      	movs	r5, #32
 801180e:	fb94 f4f5 	sdiv	r4, r4, r5
 8011812:	600c      	str	r4, [r1, #0]
 8011814:	f8d0 30e8 	ldr.w	r3, [r0, #232]	; 0xe8
 8011818:	fb93 f3f5 	sdiv	r3, r3, r5
 801181c:	6013      	str	r3, [r2, #0]
 801181e:	bd30      	pop	{r4, r5, pc}

08011820 <_ZN8touchgfx14CircleProgress9setRadiusEi>:
 8011820:	0149      	lsls	r1, r1, #5
 8011822:	f8c0 10ec 	str.w	r1, [r0, #236]	; 0xec
 8011826:	4770      	bx	lr

08011828 <_ZNK8touchgfx14CircleProgress9getRadiusEv>:
 8011828:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
 801182c:	2320      	movs	r3, #32
 801182e:	fb90 f0f3 	sdiv	r0, r0, r3
 8011832:	4770      	bx	lr

08011834 <_ZN8touchgfx14CircleProgress12setLineWidthEi>:
 8011834:	0149      	lsls	r1, r1, #5
 8011836:	f8c0 10f8 	str.w	r1, [r0, #248]	; 0xf8
 801183a:	4770      	bx	lr

0801183c <_ZNK8touchgfx14CircleProgress12getLineWidthEv>:
 801183c:	f8d0 00f8 	ldr.w	r0, [r0, #248]	; 0xf8
 8011840:	2320      	movs	r3, #32
 8011842:	fb90 f0f3 	sdiv	r0, r0, r3
 8011846:	4770      	bx	lr

08011848 <_ZNK8touchgfx14CircleProgress13getStartAngleEv>:
 8011848:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 801184c:	2320      	movs	r3, #32
 801184e:	fb90 f0f3 	sdiv	r0, r0, r3
 8011852:	b200      	sxth	r0, r0
 8011854:	4770      	bx	lr

08011856 <_ZNK8touchgfx14CircleProgress11getEndAngleEv>:
 8011856:	f8d0 0100 	ldr.w	r0, [r0, #256]	; 0x100
 801185a:	4770      	bx	lr

0801185c <_ZN8touchgfx14CircleProgressD1Ev>:
 801185c:	4770      	bx	lr

0801185e <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>:
 801185e:	30b4      	adds	r0, #180	; 0xb4
 8011860:	f002 be56 	b.w	8014510 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>

08011864 <_ZN8touchgfx14CircleProgress15setCapPrecisionEi>:
 8011864:	30b4      	adds	r0, #180	; 0xb4
 8011866:	f002 ba49 	b.w	8013cfc <_ZN8touchgfx6Circle15setCapPrecisionEi>

0801186a <_ZN8touchgfx14CircleProgress8setAlphaEh>:
 801186a:	b538      	push	{r3, r4, r5, lr}
 801186c:	4604      	mov	r4, r0
 801186e:	460d      	mov	r5, r1
 8011870:	f000 f8df 	bl	8011a32 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8011874:	f884 50da 	strb.w	r5, [r4, #218]	; 0xda
 8011878:	bd38      	pop	{r3, r4, r5, pc}

0801187a <_ZNK8touchgfx14CircleProgress15getCapPrecisionEv>:
 801187a:	30b4      	adds	r0, #180	; 0xb4
 801187c:	f002 ba47 	b.w	8013d0e <_ZNK8touchgfx6Circle15getCapPrecisionEv>

08011880 <_ZN8touchgfx14CircleProgressD0Ev>:
 8011880:	b510      	push	{r4, lr}
 8011882:	f44f 7182 	mov.w	r1, #260	; 0x104
 8011886:	4604      	mov	r4, r0
 8011888:	f019 fc4f 	bl	802b12a <_ZdlPvj>
 801188c:	4620      	mov	r0, r4
 801188e:	bd10      	pop	{r4, pc}

08011890 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 8011890:	b570      	push	{r4, r5, r6, lr}
 8011892:	6803      	ldr	r3, [r0, #0]
 8011894:	4604      	mov	r4, r0
 8011896:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011898:	4615      	mov	r5, r2
 801189a:	4798      	blx	r3
 801189c:	6823      	ldr	r3, [r4, #0]
 801189e:	4629      	mov	r1, r5
 80118a0:	4620      	mov	r0, r4
 80118a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80118a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118a8:	4718      	bx	r3

080118aa <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>:
 80118aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80118ae:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 80118b2:	461d      	mov	r5, r3
 80118b4:	2300      	movs	r3, #0
 80118b6:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 80118ba:	4604      	mov	r4, r0
 80118bc:	460f      	mov	r7, r1
 80118be:	4690      	mov	r8, r2
 80118c0:	4629      	mov	r1, r5
 80118c2:	4632      	mov	r2, r6
 80118c4:	30b4      	adds	r0, #180	; 0xb4
 80118c6:	f7ff ffe3 	bl	8011890 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80118ca:	9606      	str	r6, [sp, #24]
 80118cc:	462b      	mov	r3, r5
 80118ce:	4642      	mov	r2, r8
 80118d0:	4639      	mov	r1, r7
 80118d2:	4620      	mov	r0, r4
 80118d4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80118d8:	f000 b9c4 	b.w	8011c64 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

080118dc <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_>:
 80118dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80118de:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80118e0:	9101      	str	r1, [sp, #4]
 80118e2:	4299      	cmp	r1, r3
 80118e4:	4604      	mov	r4, r0
 80118e6:	d00b      	beq.n	8011900 <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_+0x24>
 80118e8:	4601      	mov	r1, r0
 80118ea:	aa01      	add	r2, sp, #4
 80118ec:	a802      	add	r0, sp, #8
 80118ee:	f002 fc12 	bl	8014116 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 80118f2:	9b01      	ldr	r3, [sp, #4]
 80118f4:	6423      	str	r3, [r4, #64]	; 0x40
 80118f6:	6823      	ldr	r3, [r4, #0]
 80118f8:	a902      	add	r1, sp, #8
 80118fa:	691b      	ldr	r3, [r3, #16]
 80118fc:	4620      	mov	r0, r4
 80118fe:	4798      	blx	r3
 8011900:	b004      	add	sp, #16
 8011902:	bd10      	pop	{r4, pc}

08011904 <_ZN8touchgfx14CircleProgress8setValueEi>:
 8011904:	b570      	push	{r4, r5, r6, lr}
 8011906:	4604      	mov	r4, r0
 8011908:	f000 f8e4 	bl	8011ad4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 801190c:	f8d4 6100 	ldr.w	r6, [r4, #256]	; 0x100
 8011910:	f8d4 50f0 	ldr.w	r5, [r4, #240]	; 0xf0
 8011914:	0176      	lsls	r6, r6, #5
 8011916:	42b5      	cmp	r5, r6
 8011918:	bfcc      	ite	gt
 801191a:	1ba9      	subgt	r1, r5, r6
 801191c:	1b71      	suble	r1, r6, r5
 801191e:	b289      	uxth	r1, r1
 8011920:	4620      	mov	r0, r4
 8011922:	f000 f96a 	bl	8011bfa <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8011926:	42b5      	cmp	r5, r6
 8011928:	4601      	mov	r1, r0
 801192a:	bfc8      	it	gt
 801192c:	1a69      	subgt	r1, r5, r1
 801192e:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011932:	bfd8      	it	le
 8011934:	1949      	addle	r1, r1, r5
 8011936:	f7ff ffd1 	bl	80118dc <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_>
 801193a:	bd70      	pop	{r4, r5, r6, pc}

0801193c <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>:
 801193c:	4291      	cmp	r1, r2
 801193e:	b510      	push	{r4, lr}
 8011940:	4604      	mov	r4, r0
 8011942:	d105      	bne.n	8011950 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii+0x14>
 8011944:	4b0a      	ldr	r3, [pc, #40]	; (8011970 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii+0x34>)
 8011946:	4a0b      	ldr	r2, [pc, #44]	; (8011974 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii+0x38>)
 8011948:	480b      	ldr	r0, [pc, #44]	; (8011978 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii+0x3c>)
 801194a:	214f      	movs	r1, #79	; 0x4f
 801194c:	f01a fb3a 	bl	802bfc4 <__assert_func>
 8011950:	0149      	lsls	r1, r1, #5
 8011952:	0153      	lsls	r3, r2, #5
 8011954:	f8c0 10f0 	str.w	r1, [r0, #240]	; 0xf0
 8011958:	f8c0 30f4 	str.w	r3, [r0, #244]	; 0xf4
 801195c:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 8011960:	f000 f864 	bl	8011a2c <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8011964:	4601      	mov	r1, r0
 8011966:	4620      	mov	r0, r4
 8011968:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801196c:	f7ff bfca 	b.w	8011904 <_ZN8touchgfx14CircleProgress8setValueEi>
 8011970:	08032e3a 	.word	0x08032e3a
 8011974:	08032fa4 	.word	0x08032fa4
 8011978:	08032e51 	.word	0x08032e51

0801197c <_ZN8touchgfx14CircleProgressC1Ev>:
 801197c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801197e:	4604      	mov	r4, r0
 8011980:	4625      	mov	r5, r4
 8011982:	f000 f99b 	bl	8011cbc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8011986:	4b10      	ldr	r3, [pc, #64]	; (80119c8 <_ZN8touchgfx14CircleProgressC1Ev+0x4c>)
 8011988:	f845 3bb4 	str.w	r3, [r5], #180
 801198c:	f44f 77b4 	mov.w	r7, #360	; 0x168
 8011990:	4628      	mov	r0, r5
 8011992:	f002 f99b 	bl	8013ccc <_ZN8touchgfx6CircleC1Ev>
 8011996:	2600      	movs	r6, #0
 8011998:	4629      	mov	r1, r5
 801199a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801199e:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 80119a2:	f000 fa5b 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80119a6:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80119aa:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80119ae:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 80119b2:	4628      	mov	r0, r5
 80119b4:	f7ff ff6c 	bl	8011890 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80119b8:	4620      	mov	r0, r4
 80119ba:	463a      	mov	r2, r7
 80119bc:	4631      	mov	r1, r6
 80119be:	f7ff ffbd 	bl	801193c <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
 80119c2:	4620      	mov	r0, r4
 80119c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80119c6:	bf00      	nop
 80119c8:	08032ea8 	.word	0x08032ea8

080119cc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 80119cc:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 80119d0:	4770      	bx	lr

080119d2 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 80119d2:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 80119d6:	4770      	bx	lr

080119d8 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 80119d8:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 80119dc:	4770      	bx	lr

080119de <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 80119de:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 80119e2:	4770      	bx	lr

080119e4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80119e4:	b510      	push	{r4, lr}
 80119e6:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80119ea:	600c      	str	r4, [r1, #0]
 80119ec:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80119f0:	6011      	str	r1, [r2, #0]
 80119f2:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80119f6:	801a      	strh	r2, [r3, #0]
 80119f8:	9b02      	ldr	r3, [sp, #8]
 80119fa:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80119fe:	801a      	strh	r2, [r3, #0]
 8011a00:	bd10      	pop	{r4, pc}

08011a02 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 8011a02:	b510      	push	{r4, lr}
 8011a04:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8011a08:	600c      	str	r4, [r1, #0]
 8011a0a:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8011a0e:	6011      	str	r1, [r2, #0]
 8011a10:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8011a14:	801a      	strh	r2, [r3, #0]
 8011a16:	bd10      	pop	{r4, pc}

08011a18 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8011a18:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8011a1c:	600b      	str	r3, [r1, #0]
 8011a1e:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8011a22:	6013      	str	r3, [r2, #0]
 8011a24:	4770      	bx	lr

08011a26 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8011a26:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8011a2a:	4770      	bx	lr

08011a2c <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8011a2c:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 8011a30:	4770      	bx	lr

08011a32 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 8011a32:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8011a36:	4770      	bx	lr

08011a38 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8011a38:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8011a3c:	4770      	bx	lr

08011a3e <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 8011a3e:	4770      	bx	lr

08011a40 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 8011a40:	b510      	push	{r4, lr}
 8011a42:	21b4      	movs	r1, #180	; 0xb4
 8011a44:	4604      	mov	r4, r0
 8011a46:	f019 fb70 	bl	802b12a <_ZdlPvj>
 8011a4a:	4620      	mov	r0, r4
 8011a4c:	bd10      	pop	{r4, pc}

08011a4e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 8011a4e:	b570      	push	{r4, r5, r6, lr}
 8011a50:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8011a54:	428d      	cmp	r5, r1
 8011a56:	bfb8      	it	lt
 8011a58:	460d      	movlt	r5, r1
 8011a5a:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8011a5e:	428d      	cmp	r5, r1
 8011a60:	4604      	mov	r4, r0
 8011a62:	bfa8      	it	ge
 8011a64:	460d      	movge	r5, r1
 8011a66:	4616      	mov	r6, r2
 8011a68:	b99a      	cbnz	r2, 8011a92 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8011a6a:	6803      	ldr	r3, [r0, #0]
 8011a6c:	4629      	mov	r1, r5
 8011a6e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011a72:	4798      	blx	r3
 8011a74:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8011a78:	b358      	cbz	r0, 8011ad2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x84>
 8011a7a:	6803      	ldr	r3, [r0, #0]
 8011a7c:	68db      	ldr	r3, [r3, #12]
 8011a7e:	4798      	blx	r3
 8011a80:	b338      	cbz	r0, 8011ad2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x84>
 8011a82:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8011a86:	6803      	ldr	r3, [r0, #0]
 8011a88:	4621      	mov	r1, r4
 8011a8a:	689b      	ldr	r3, [r3, #8]
 8011a8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a90:	4718      	bx	r3
 8011a92:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8011a96:	2b00      	cmp	r3, #0
 8011a98:	dd07      	ble.n	8011aaa <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5c>
 8011a9a:	f007 fc5d 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8011a9e:	4621      	mov	r1, r4
 8011aa0:	f007 fc92 	bl	80193c8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8011aa4:	2300      	movs	r3, #0
 8011aa6:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8011aaa:	6823      	ldr	r3, [r4, #0]
 8011aac:	4620      	mov	r0, r4
 8011aae:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011ab2:	4798      	blx	r3
 8011ab4:	2300      	movs	r3, #0
 8011ab6:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8011aba:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 8011abe:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8011ac2:	f007 fc49 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8011ac6:	4621      	mov	r1, r4
 8011ac8:	f007 fc4c 	bl	8019364 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 8011acc:	2301      	movs	r3, #1
 8011ace:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8011ad2:	bd70      	pop	{r4, r5, r6, pc}

08011ad4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8011ad4:	b510      	push	{r4, lr}
 8011ad6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8011ada:	4299      	cmp	r1, r3
 8011adc:	bfb8      	it	lt
 8011ade:	4619      	movlt	r1, r3
 8011ae0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8011ae4:	4299      	cmp	r1, r3
 8011ae6:	bfa8      	it	ge
 8011ae8:	4619      	movge	r1, r3
 8011aea:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8011aee:	428b      	cmp	r3, r1
 8011af0:	4604      	mov	r4, r0
 8011af2:	d010      	beq.n	8011b16 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8011af4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8011af8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 8011afc:	b158      	cbz	r0, 8011b16 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8011afe:	6803      	ldr	r3, [r0, #0]
 8011b00:	68db      	ldr	r3, [r3, #12]
 8011b02:	4798      	blx	r3
 8011b04:	b138      	cbz	r0, 8011b16 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8011b06:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 8011b0a:	6803      	ldr	r3, [r0, #0]
 8011b0c:	4621      	mov	r1, r4
 8011b0e:	689b      	ldr	r3, [r3, #8]
 8011b10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011b14:	4718      	bx	r3
 8011b16:	bd10      	pop	{r4, pc}

08011b18 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 8011b18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b1c:	4291      	cmp	r1, r2
 8011b1e:	4604      	mov	r4, r0
 8011b20:	460e      	mov	r6, r1
 8011b22:	4615      	mov	r5, r2
 8011b24:	4698      	mov	r8, r3
 8011b26:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 8011b2a:	db05      	blt.n	8011b38 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x20>
 8011b2c:	4b11      	ldr	r3, [pc, #68]	; (8011b74 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x5c>)
 8011b2e:	4a12      	ldr	r2, [pc, #72]	; (8011b78 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x60>)
 8011b30:	2148      	movs	r1, #72	; 0x48
 8011b32:	4812      	ldr	r0, [pc, #72]	; (8011b7c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x64>)
 8011b34:	f01a fa46 	bl	802bfc4 <__assert_func>
 8011b38:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8011b3c:	6803      	ldr	r3, [r0, #0]
 8011b3e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8011b42:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011b46:	4798      	blx	r3
 8011b48:	f1b8 0f00 	cmp.w	r8, #0
 8011b4c:	d10c      	bne.n	8011b68 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x50>
 8011b4e:	1bad      	subs	r5, r5, r6
 8011b50:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8011b54:	f8b4 3090 	ldrh.w	r3, [r4, #144]	; 0x90
 8011b58:	f8a4 7092 	strh.w	r7, [r4, #146]	; 0x92
 8011b5c:	42bb      	cmp	r3, r7
 8011b5e:	d806      	bhi.n	8011b6e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x56>
 8011b60:	4b07      	ldr	r3, [pc, #28]	; (8011b80 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x68>)
 8011b62:	4a05      	ldr	r2, [pc, #20]	; (8011b78 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x60>)
 8011b64:	2155      	movs	r1, #85	; 0x55
 8011b66:	e7e4      	b.n	8011b32 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x1a>
 8011b68:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
 8011b6c:	e7f2      	b.n	8011b54 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x3c>
 8011b6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b72:	bf00      	nop
 8011b74:	08032fe6 	.word	0x08032fe6
 8011b78:	08033138 	.word	0x08033138
 8011b7c:	08032ff0 	.word	0x08032ff0
 8011b80:	08033047 	.word	0x08033047

08011b84 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8011b84:	b570      	push	{r4, r5, r6, lr}
 8011b86:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8011b8a:	4604      	mov	r4, r0
 8011b8c:	b3a3      	cbz	r3, 8011bf8 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 8011b8e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8011b92:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8011b96:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 8011b9a:	3001      	adds	r0, #1
 8011b9c:	1ad2      	subs	r2, r2, r3
 8011b9e:	b212      	sxth	r2, r2
 8011ba0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8011ba4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8011ba8:	2100      	movs	r1, #0
 8011baa:	b280      	uxth	r0, r0
 8011bac:	47a8      	blx	r5
 8011bae:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8011bb2:	6823      	ldr	r3, [r4, #0]
 8011bb4:	4401      	add	r1, r0
 8011bb6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011bba:	4620      	mov	r0, r4
 8011bbc:	4798      	blx	r3
 8011bbe:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8011bc2:	429a      	cmp	r2, r3
 8011bc4:	db18      	blt.n	8011bf8 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 8011bc6:	2500      	movs	r5, #0
 8011bc8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8011bcc:	f007 fbc4 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8011bd0:	4621      	mov	r1, r4
 8011bd2:	f007 fbf9 	bl	80193c8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8011bd6:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8011bda:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8011bde:	b158      	cbz	r0, 8011bf8 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 8011be0:	6803      	ldr	r3, [r0, #0]
 8011be2:	68db      	ldr	r3, [r3, #12]
 8011be4:	4798      	blx	r3
 8011be6:	b138      	cbz	r0, 8011bf8 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 8011be8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8011bec:	6803      	ldr	r3, [r0, #0]
 8011bee:	4621      	mov	r1, r4
 8011bf0:	689b      	ldr	r3, [r3, #8]
 8011bf2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011bf6:	4718      	bx	r3
 8011bf8:	bd70      	pop	{r4, r5, r6, pc}

08011bfa <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8011bfa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011bfc:	4604      	mov	r4, r0
 8011bfe:	460d      	mov	r5, r1
 8011c00:	b1a9      	cbz	r1, 8011c2e <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8011c02:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8011c06:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8011c0a:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 8011c0e:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8011c12:	ab01      	add	r3, sp, #4
 8011c14:	1a12      	subs	r2, r2, r0
 8011c16:	1b89      	subs	r1, r1, r6
 8011c18:	1a38      	subs	r0, r7, r0
 8011c1a:	f008 fd43 	bl	801a6a4 <_ZN8touchgfx6muldivElllRl>
 8011c1e:	4629      	mov	r1, r5
 8011c20:	ab01      	add	r3, sp, #4
 8011c22:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8011c26:	4430      	add	r0, r6
 8011c28:	f008 fd3c 	bl	801a6a4 <_ZN8touchgfx6muldivElllRl>
 8011c2c:	b285      	uxth	r5, r0
 8011c2e:	4628      	mov	r0, r5
 8011c30:	b003      	add	sp, #12
 8011c32:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011c34 <_ZN8touchgfx8DrawableC1Ev>:
 8011c34:	4a0a      	ldr	r2, [pc, #40]	; (8011c60 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 8011c36:	6002      	str	r2, [r0, #0]
 8011c38:	2200      	movs	r2, #0
 8011c3a:	8082      	strh	r2, [r0, #4]
 8011c3c:	80c2      	strh	r2, [r0, #6]
 8011c3e:	8102      	strh	r2, [r0, #8]
 8011c40:	8142      	strh	r2, [r0, #10]
 8011c42:	8182      	strh	r2, [r0, #12]
 8011c44:	81c2      	strh	r2, [r0, #14]
 8011c46:	8202      	strh	r2, [r0, #16]
 8011c48:	8242      	strh	r2, [r0, #18]
 8011c4a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011c4e:	61c2      	str	r2, [r0, #28]
 8011c50:	8402      	strh	r2, [r0, #32]
 8011c52:	8442      	strh	r2, [r0, #34]	; 0x22
 8011c54:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011c58:	2201      	movs	r2, #1
 8011c5a:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8011c5e:	4770      	bx	lr
 8011c60:	08034f50 	.word	0x08034f50

08011c64 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8011c64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c68:	4604      	mov	r4, r0
 8011c6a:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8011c6e:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8011c72:	460e      	mov	r6, r1
 8011c74:	4615      	mov	r5, r2
 8011c76:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8011c7a:	4619      	mov	r1, r3
 8011c7c:	463a      	mov	r2, r7
 8011c7e:	3058      	adds	r0, #88	; 0x58
 8011c80:	4698      	mov	r8, r3
 8011c82:	f7ff fe05 	bl	8011890 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011c86:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8011c8a:	4446      	add	r6, r8
 8011c8c:	42b3      	cmp	r3, r6
 8011c8e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011c92:	bfb8      	it	lt
 8011c94:	8126      	strhlt	r6, [r4, #8]
 8011c96:	443d      	add	r5, r7
 8011c98:	42ab      	cmp	r3, r5
 8011c9a:	bfb8      	it	lt
 8011c9c:	8165      	strhlt	r5, [r4, #10]
 8011c9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011ca2 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8011ca2:	b510      	push	{r4, lr}
 8011ca4:	4604      	mov	r4, r0
 8011ca6:	302c      	adds	r0, #44	; 0x2c
 8011ca8:	f005 fc9b 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011cac:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8011cb0:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8011cb4:	4620      	mov	r0, r4
 8011cb6:	f7ff fdeb 	bl	8011890 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011cba:	bd10      	pop	{r4, pc}

08011cbc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8011cbc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011cbe:	4604      	mov	r4, r0
 8011cc0:	4626      	mov	r6, r4
 8011cc2:	2500      	movs	r5, #0
 8011cc4:	f7ff ffb6 	bl	8011c34 <_ZN8touchgfx8DrawableC1Ev>
 8011cc8:	4b23      	ldr	r3, [pc, #140]	; (8011d58 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 8011cca:	62a5      	str	r5, [r4, #40]	; 0x28
 8011ccc:	f846 3b2c 	str.w	r3, [r6], #44
 8011cd0:	2226      	movs	r2, #38	; 0x26
 8011cd2:	4629      	mov	r1, r5
 8011cd4:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8011cd8:	4630      	mov	r0, r6
 8011cda:	f8ad 7004 	strh.w	r7, [sp, #4]
 8011cde:	f01a faf7 	bl	802c2d0 <memset>
 8011ce2:	4630      	mov	r0, r6
 8011ce4:	f7ff ffa6 	bl	8011c34 <_ZN8touchgfx8DrawableC1Ev>
 8011ce8:	a902      	add	r1, sp, #8
 8011cea:	4b1c      	ldr	r3, [pc, #112]	; (8011d5c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8011cec:	62e3      	str	r3, [r4, #44]	; 0x2c
 8011cee:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8011cf2:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8011cf6:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 8011cfa:	4630      	mov	r0, r6
 8011cfc:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8011d00:	f005 fc6f 	bl	80175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011d04:	4638      	mov	r0, r7
 8011d06:	f7ff ff95 	bl	8011c34 <_ZN8touchgfx8DrawableC1Ev>
 8011d0a:	4b15      	ldr	r3, [pc, #84]	; (8011d60 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8011d0c:	65a3      	str	r3, [r4, #88]	; 0x58
 8011d0e:	2364      	movs	r3, #100	; 0x64
 8011d10:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8011d14:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8011d18:	4b12      	ldr	r3, [pc, #72]	; (8011d64 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 8011d1a:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8011d1e:	4629      	mov	r1, r5
 8011d20:	4630      	mov	r0, r6
 8011d22:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8011d26:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8011d2a:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8011d2e:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8011d32:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 8011d36:	f7f1 fcff 	bl	8003738 <_ZN8touchgfx8Drawable4setXEs>
 8011d3a:	4629      	mov	r1, r5
 8011d3c:	4630      	mov	r0, r6
 8011d3e:	f7f1 fcfd 	bl	800373c <_ZN8touchgfx8Drawable4setYEs>
 8011d42:	4631      	mov	r1, r6
 8011d44:	4620      	mov	r0, r4
 8011d46:	f000 f889 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011d4a:	4620      	mov	r0, r4
 8011d4c:	4639      	mov	r1, r7
 8011d4e:	f000 f885 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011d52:	4620      	mov	r0, r4
 8011d54:	b003      	add	sp, #12
 8011d56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011d58:	0803306c 	.word	0x0803306c
 8011d5c:	08034a04 	.word	0x08034a04
 8011d60:	08033264 	.word	0x08033264
 8011d64:	0801ae03 	.word	0x0801ae03

08011d68 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8011d68:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011d6a:	2000      	movs	r0, #0
 8011d6c:	b12b      	cbz	r3, 8011d7a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8011d6e:	b920      	cbnz	r0, 8011d7a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8011d70:	1a5a      	subs	r2, r3, r1
 8011d72:	4250      	negs	r0, r2
 8011d74:	4150      	adcs	r0, r2
 8011d76:	699b      	ldr	r3, [r3, #24]
 8011d78:	e7f8      	b.n	8011d6c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8011d7a:	4770      	bx	lr

08011d7c <_ZN8touchgfx9Container9removeAllEv>:
 8011d7c:	2200      	movs	r2, #0
 8011d7e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011d80:	b123      	cbz	r3, 8011d8c <_ZN8touchgfx9Container9removeAllEv+0x10>
 8011d82:	6999      	ldr	r1, [r3, #24]
 8011d84:	6281      	str	r1, [r0, #40]	; 0x28
 8011d86:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8011d8a:	e7f8      	b.n	8011d7e <_ZN8touchgfx9Container9removeAllEv+0x2>
 8011d8c:	4770      	bx	lr

08011d8e <_ZN8touchgfx9Container6unlinkEv>:
 8011d8e:	2300      	movs	r3, #0
 8011d90:	6283      	str	r3, [r0, #40]	; 0x28
 8011d92:	4770      	bx	lr

08011d94 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8011d94:	2200      	movs	r2, #0
 8011d96:	8002      	strh	r2, [r0, #0]
 8011d98:	8042      	strh	r2, [r0, #2]
 8011d9a:	8082      	strh	r2, [r0, #4]
 8011d9c:	80c2      	strh	r2, [r0, #6]
 8011d9e:	4770      	bx	lr

08011da0 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8011da0:	b570      	push	{r4, r5, r6, lr}
 8011da2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011da4:	460d      	mov	r5, r1
 8011da6:	4616      	mov	r6, r2
 8011da8:	b13c      	cbz	r4, 8011dba <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8011daa:	6823      	ldr	r3, [r4, #0]
 8011dac:	4620      	mov	r0, r4
 8011dae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8011db0:	4632      	mov	r2, r6
 8011db2:	4629      	mov	r1, r5
 8011db4:	4798      	blx	r3
 8011db6:	69a4      	ldr	r4, [r4, #24]
 8011db8:	e7f6      	b.n	8011da8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8011dba:	bd70      	pop	{r4, r5, r6, pc}

08011dbc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8011dbc:	b538      	push	{r3, r4, r5, lr}
 8011dbe:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011dc0:	460d      	mov	r5, r1
 8011dc2:	b134      	cbz	r4, 8011dd2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8011dc4:	682b      	ldr	r3, [r5, #0]
 8011dc6:	4621      	mov	r1, r4
 8011dc8:	689b      	ldr	r3, [r3, #8]
 8011dca:	4628      	mov	r0, r5
 8011dcc:	4798      	blx	r3
 8011dce:	69a4      	ldr	r4, [r4, #24]
 8011dd0:	e7f7      	b.n	8011dc2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8011dd2:	bd38      	pop	{r3, r4, r5, pc}

08011dd4 <_ZNK8touchgfx9Container17invalidateContentEv>:
 8011dd4:	b510      	push	{r4, lr}
 8011dd6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011dd8:	b12c      	cbz	r4, 8011de6 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 8011dda:	6823      	ldr	r3, [r4, #0]
 8011ddc:	4620      	mov	r0, r4
 8011dde:	699b      	ldr	r3, [r3, #24]
 8011de0:	4798      	blx	r3
 8011de2:	69a4      	ldr	r4, [r4, #24]
 8011de4:	e7f8      	b.n	8011dd8 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 8011de6:	bd10      	pop	{r4, pc}

08011de8 <_ZN8touchgfx9ContainerD1Ev>:
 8011de8:	4770      	bx	lr

08011dea <_ZN8touchgfx9ContainerD0Ev>:
 8011dea:	b510      	push	{r4, lr}
 8011dec:	212c      	movs	r1, #44	; 0x2c
 8011dee:	4604      	mov	r4, r0
 8011df0:	f019 f99b 	bl	802b12a <_ZdlPvj>
 8011df4:	4620      	mov	r0, r4
 8011df6:	bd10      	pop	{r4, pc}

08011df8 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8011df8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011dfa:	b19b      	cbz	r3, 8011e24 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8011dfc:	428b      	cmp	r3, r1
 8011dfe:	d109      	bne.n	8011e14 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8011e00:	699a      	ldr	r2, [r3, #24]
 8011e02:	2100      	movs	r1, #0
 8011e04:	6159      	str	r1, [r3, #20]
 8011e06:	6282      	str	r2, [r0, #40]	; 0x28
 8011e08:	b902      	cbnz	r2, 8011e0c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8011e0a:	4770      	bx	lr
 8011e0c:	6199      	str	r1, [r3, #24]
 8011e0e:	4770      	bx	lr
 8011e10:	4613      	mov	r3, r2
 8011e12:	b13a      	cbz	r2, 8011e24 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8011e14:	699a      	ldr	r2, [r3, #24]
 8011e16:	428a      	cmp	r2, r1
 8011e18:	d1fa      	bne.n	8011e10 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8011e1a:	698a      	ldr	r2, [r1, #24]
 8011e1c:	619a      	str	r2, [r3, #24]
 8011e1e:	2300      	movs	r3, #0
 8011e20:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8011e24:	4770      	bx	lr

08011e26 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8011e26:	b410      	push	{r4}
 8011e28:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011e2a:	4604      	mov	r4, r0
 8011e2c:	b92b      	cbnz	r3, 8011e3a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8011e2e:	6803      	ldr	r3, [r0, #0]
 8011e30:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011e34:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8011e36:	4611      	mov	r1, r2
 8011e38:	4718      	bx	r3
 8011e3a:	b941      	cbnz	r1, 8011e4e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8011e3c:	6193      	str	r3, [r2, #24]
 8011e3e:	6282      	str	r2, [r0, #40]	; 0x28
 8011e40:	6154      	str	r4, [r2, #20]
 8011e42:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011e46:	4770      	bx	lr
 8011e48:	4603      	mov	r3, r0
 8011e4a:	2800      	cmp	r0, #0
 8011e4c:	d0f9      	beq.n	8011e42 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8011e4e:	4299      	cmp	r1, r3
 8011e50:	6998      	ldr	r0, [r3, #24]
 8011e52:	d1f9      	bne.n	8011e48 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8011e54:	6190      	str	r0, [r2, #24]
 8011e56:	618a      	str	r2, [r1, #24]
 8011e58:	e7f2      	b.n	8011e40 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8011e5c:	4288      	cmp	r0, r1
 8011e5e:	b508      	push	{r3, lr}
 8011e60:	d105      	bne.n	8011e6e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8011e62:	4b11      	ldr	r3, [pc, #68]	; (8011ea8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8011e64:	4a11      	ldr	r2, [pc, #68]	; (8011eac <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8011e66:	2120      	movs	r1, #32
 8011e68:	4811      	ldr	r0, [pc, #68]	; (8011eb0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8011e6a:	f01a f8ab 	bl	802bfc4 <__assert_func>
 8011e6e:	694b      	ldr	r3, [r1, #20]
 8011e70:	b11b      	cbz	r3, 8011e7a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8011e72:	4b10      	ldr	r3, [pc, #64]	; (8011eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8011e74:	4a0d      	ldr	r2, [pc, #52]	; (8011eac <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8011e76:	2121      	movs	r1, #33	; 0x21
 8011e78:	e7f6      	b.n	8011e68 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8011e7a:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8011e7e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011e80:	b913      	cbnz	r3, 8011e88 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8011e82:	6281      	str	r1, [r0, #40]	; 0x28
 8011e84:	bd08      	pop	{r3, pc}
 8011e86:	4613      	mov	r3, r2
 8011e88:	699a      	ldr	r2, [r3, #24]
 8011e8a:	b12a      	cbz	r2, 8011e98 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8011e8c:	428b      	cmp	r3, r1
 8011e8e:	d1fa      	bne.n	8011e86 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8011e90:	4b09      	ldr	r3, [pc, #36]	; (8011eb8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8011e92:	4a06      	ldr	r2, [pc, #24]	; (8011eac <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8011e94:	2132      	movs	r1, #50	; 0x32
 8011e96:	e7e7      	b.n	8011e68 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8011e98:	428b      	cmp	r3, r1
 8011e9a:	d103      	bne.n	8011ea4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8011e9c:	4b06      	ldr	r3, [pc, #24]	; (8011eb8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8011e9e:	4a03      	ldr	r2, [pc, #12]	; (8011eac <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8011ea0:	2135      	movs	r1, #53	; 0x35
 8011ea2:	e7e1      	b.n	8011e68 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8011ea4:	6199      	str	r1, [r3, #24]
 8011ea6:	e7ed      	b.n	8011e84 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8011ea8:	08033191 	.word	0x08033191
 8011eac:	080332ec 	.word	0x080332ec
 8011eb0:	080331bd 	.word	0x080331bd
 8011eb4:	080331f0 	.word	0x080331f0
 8011eb8:	08033226 	.word	0x08033226

08011ebc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8011ebc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ec0:	461f      	mov	r7, r3
 8011ec2:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8011ec6:	460d      	mov	r5, r1
 8011ec8:	4616      	mov	r6, r2
 8011eca:	b103      	cbz	r3, 8011ece <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8011ecc:	6038      	str	r0, [r7, #0]
 8011ece:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011ed0:	b314      	cbz	r4, 8011f18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8011ed2:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011ed6:	b1eb      	cbz	r3, 8011f14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011ed8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011edc:	428d      	cmp	r5, r1
 8011ede:	db19      	blt.n	8011f14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011ee0:	8923      	ldrh	r3, [r4, #8]
 8011ee2:	b289      	uxth	r1, r1
 8011ee4:	440b      	add	r3, r1
 8011ee6:	b21b      	sxth	r3, r3
 8011ee8:	429d      	cmp	r5, r3
 8011eea:	da13      	bge.n	8011f14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011eec:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011ef0:	4296      	cmp	r6, r2
 8011ef2:	db0f      	blt.n	8011f14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011ef4:	8963      	ldrh	r3, [r4, #10]
 8011ef6:	b292      	uxth	r2, r2
 8011ef8:	4413      	add	r3, r2
 8011efa:	b21b      	sxth	r3, r3
 8011efc:	429e      	cmp	r6, r3
 8011efe:	da09      	bge.n	8011f14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011f00:	6823      	ldr	r3, [r4, #0]
 8011f02:	1ab2      	subs	r2, r6, r2
 8011f04:	1a69      	subs	r1, r5, r1
 8011f06:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8011f0a:	b212      	sxth	r2, r2
 8011f0c:	463b      	mov	r3, r7
 8011f0e:	b209      	sxth	r1, r1
 8011f10:	4620      	mov	r0, r4
 8011f12:	47c0      	blx	r8
 8011f14:	69a4      	ldr	r4, [r4, #24]
 8011f16:	e7db      	b.n	8011ed0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8011f18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011f1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8011f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f20:	4c6e      	ldr	r4, [pc, #440]	; (80120dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8011f22:	b0a1      	sub	sp, #132	; 0x84
 8011f24:	6824      	ldr	r4, [r4, #0]
 8011f26:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8011f28:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8011f2c:	9303      	str	r3, [sp, #12]
 8011f2e:	2400      	movs	r4, #0
 8011f30:	802c      	strh	r4, [r5, #0]
 8011f32:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8011f34:	802c      	strh	r4, [r5, #0]
 8011f36:	601c      	str	r4, [r3, #0]
 8011f38:	4606      	mov	r6, r0
 8011f3a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8011f3e:	f7ff ffbd 	bl	8011ebc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011f42:	f1b9 0f03 	cmp.w	r9, #3
 8011f46:	f340 80c2 	ble.w	80120ce <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8011f4a:	4631      	mov	r1, r6
 8011f4c:	a80c      	add	r0, sp, #48	; 0x30
 8011f4e:	f008 fa9b 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011f52:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8011f56:	9306      	str	r3, [sp, #24]
 8011f58:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8011f5c:	9307      	str	r3, [sp, #28]
 8011f5e:	9b03      	ldr	r3, [sp, #12]
 8011f60:	f8d3 a000 	ldr.w	sl, [r3]
 8011f64:	f1ba 0f00 	cmp.w	sl, #0
 8011f68:	f000 80b4 	beq.w	80120d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8011f6c:	4651      	mov	r1, sl
 8011f6e:	a810      	add	r0, sp, #64	; 0x40
 8011f70:	f008 fa8a 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011f74:	9b01      	ldr	r3, [sp, #4]
 8011f76:	9a06      	ldr	r2, [sp, #24]
 8011f78:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8011f7c:	189d      	adds	r5, r3, r2
 8011f7e:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8011f82:	9a07      	ldr	r2, [sp, #28]
 8011f84:	2002      	movs	r0, #2
 8011f86:	fb91 f1f0 	sdiv	r1, r1, r0
 8011f8a:	4419      	add	r1, r3
 8011f8c:	1a6d      	subs	r5, r5, r1
 8011f8e:	9b02      	ldr	r3, [sp, #8]
 8011f90:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011f94:	4413      	add	r3, r2
 8011f96:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8011f9a:	fb92 f2f0 	sdiv	r2, r2, r0
 8011f9e:	440a      	add	r2, r1
 8011fa0:	1a9b      	subs	r3, r3, r2
 8011fa2:	435b      	muls	r3, r3
 8011fa4:	fb05 3505 	mla	r5, r5, r5, r3
 8011fa8:	4f4d      	ldr	r7, [pc, #308]	; (80120e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8011faa:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8011fac:	ac10      	add	r4, sp, #64	; 0x40
 8011fae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011fb0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8011fb2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011fb4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8011fb6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011fb8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8011fbc:	f1b9 0f0c 	cmp.w	r9, #12
 8011fc0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8011fc4:	f04f 0303 	mov.w	r3, #3
 8011fc8:	bfc8      	it	gt
 8011fca:	4698      	movgt	r8, r3
 8011fcc:	f8cd 9000 	str.w	r9, [sp]
 8011fd0:	f04f 0400 	mov.w	r4, #0
 8011fd4:	bfdc      	itt	le
 8011fd6:	f109 32ff 	addle.w	r2, r9, #4294967295
 8011fda:	fb92 f8f3 	sdivle	r8, r2, r3
 8011fde:	1c63      	adds	r3, r4, #1
 8011fe0:	aa10      	add	r2, sp, #64	; 0x40
 8011fe2:	f004 0401 	and.w	r4, r4, #1
 8011fe6:	9308      	str	r3, [sp, #32]
 8011fe8:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8011fec:	9b00      	ldr	r3, [sp, #0]
 8011fee:	fb93 f3f8 	sdiv	r3, r3, r8
 8011ff2:	b29b      	uxth	r3, r3
 8011ff4:	3404      	adds	r4, #4
 8011ff6:	f04f 0b00 	mov.w	fp, #0
 8011ffa:	9304      	str	r3, [sp, #16]
 8011ffc:	9a04      	ldr	r2, [sp, #16]
 8011ffe:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8012002:	fb13 f302 	smulbb	r3, r3, r2
 8012006:	9a01      	ldr	r2, [sp, #4]
 8012008:	b29b      	uxth	r3, r3
 801200a:	1899      	adds	r1, r3, r2
 801200c:	9305      	str	r3, [sp, #20]
 801200e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012012:	b209      	sxth	r1, r1
 8012014:	4299      	cmp	r1, r3
 8012016:	db4d      	blt.n	80120b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012018:	8932      	ldrh	r2, [r6, #8]
 801201a:	4413      	add	r3, r2
 801201c:	b21b      	sxth	r3, r3
 801201e:	4299      	cmp	r1, r3
 8012020:	da48      	bge.n	80120b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012022:	9b04      	ldr	r3, [sp, #16]
 8012024:	6827      	ldr	r7, [r4, #0]
 8012026:	fb17 f703 	smulbb	r7, r7, r3
 801202a:	9b02      	ldr	r3, [sp, #8]
 801202c:	b2bf      	uxth	r7, r7
 801202e:	18fa      	adds	r2, r7, r3
 8012030:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012034:	b212      	sxth	r2, r2
 8012036:	429a      	cmp	r2, r3
 8012038:	db3c      	blt.n	80120b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801203a:	8970      	ldrh	r0, [r6, #10]
 801203c:	4403      	add	r3, r0
 801203e:	b21b      	sxth	r3, r3
 8012040:	429a      	cmp	r2, r3
 8012042:	da37      	bge.n	80120b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012044:	2300      	movs	r3, #0
 8012046:	930b      	str	r3, [sp, #44]	; 0x2c
 8012048:	4630      	mov	r0, r6
 801204a:	ab0b      	add	r3, sp, #44	; 0x2c
 801204c:	f7ff ff36 	bl	8011ebc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012050:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012052:	b37a      	cbz	r2, 80120b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012054:	4552      	cmp	r2, sl
 8012056:	d02d      	beq.n	80120b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012058:	4611      	mov	r1, r2
 801205a:	a80e      	add	r0, sp, #56	; 0x38
 801205c:	9209      	str	r2, [sp, #36]	; 0x24
 801205e:	f008 fa13 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012062:	9a06      	ldr	r2, [sp, #24]
 8012064:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012068:	9b01      	ldr	r3, [sp, #4]
 801206a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 801206e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8012072:	4413      	add	r3, r2
 8012074:	f04f 0e02 	mov.w	lr, #2
 8012078:	fb91 f1fe 	sdiv	r1, r1, lr
 801207c:	4401      	add	r1, r0
 801207e:	1a58      	subs	r0, r3, r1
 8012080:	9a07      	ldr	r2, [sp, #28]
 8012082:	9b02      	ldr	r3, [sp, #8]
 8012084:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8012088:	fb9c fcfe 	sdiv	ip, ip, lr
 801208c:	4413      	add	r3, r2
 801208e:	448c      	add	ip, r1
 8012090:	eba3 030c 	sub.w	r3, r3, ip
 8012094:	435b      	muls	r3, r3
 8012096:	fb00 3300 	mla	r3, r0, r0, r3
 801209a:	42ab      	cmp	r3, r5
 801209c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801209e:	d208      	bcs.n	80120b2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80120a0:	9803      	ldr	r0, [sp, #12]
 80120a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80120a4:	6001      	str	r1, [r0, #0]
 80120a6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80120a8:	9805      	ldr	r0, [sp, #20]
 80120aa:	8008      	strh	r0, [r1, #0]
 80120ac:	992b      	ldr	r1, [sp, #172]	; 0xac
 80120ae:	461d      	mov	r5, r3
 80120b0:	800f      	strh	r7, [r1, #0]
 80120b2:	4692      	mov	sl, r2
 80120b4:	f10b 0b01 	add.w	fp, fp, #1
 80120b8:	f1bb 0f04 	cmp.w	fp, #4
 80120bc:	f104 0408 	add.w	r4, r4, #8
 80120c0:	d19c      	bne.n	8011ffc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80120c2:	9b00      	ldr	r3, [sp, #0]
 80120c4:	9c08      	ldr	r4, [sp, #32]
 80120c6:	444b      	add	r3, r9
 80120c8:	4544      	cmp	r4, r8
 80120ca:	9300      	str	r3, [sp, #0]
 80120cc:	d187      	bne.n	8011fde <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80120ce:	b021      	add	sp, #132	; 0x84
 80120d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80120d4:	f04f 35ff 	mov.w	r5, #4294967295
 80120d8:	e766      	b.n	8011fa8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80120da:	bf00      	nop
 80120dc:	2001e1c0 	.word	0x2001e1c0
 80120e0:	0802ed04 	.word	0x0802ed04

080120e4 <_ZN8touchgfx4RectaNERKS0_>:
 80120e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80120e8:	f9b1 7000 	ldrsh.w	r7, [r1]
 80120ec:	888c      	ldrh	r4, [r1, #4]
 80120ee:	f9b0 9000 	ldrsh.w	r9, [r0]
 80120f2:	443c      	add	r4, r7
 80120f4:	b2a4      	uxth	r4, r4
 80120f6:	fa0f f884 	sxth.w	r8, r4
 80120fa:	45c1      	cmp	r9, r8
 80120fc:	da2f      	bge.n	801215e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80120fe:	8882      	ldrh	r2, [r0, #4]
 8012100:	444a      	add	r2, r9
 8012102:	b292      	uxth	r2, r2
 8012104:	fa0f fe82 	sxth.w	lr, r2
 8012108:	4577      	cmp	r7, lr
 801210a:	da28      	bge.n	801215e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801210c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012110:	88cb      	ldrh	r3, [r1, #6]
 8012112:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012116:	442b      	add	r3, r5
 8012118:	b21b      	sxth	r3, r3
 801211a:	429e      	cmp	r6, r3
 801211c:	da1f      	bge.n	801215e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801211e:	88c3      	ldrh	r3, [r0, #6]
 8012120:	4433      	add	r3, r6
 8012122:	b29b      	uxth	r3, r3
 8012124:	fa0f fc83 	sxth.w	ip, r3
 8012128:	4565      	cmp	r5, ip
 801212a:	da18      	bge.n	801215e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801212c:	454f      	cmp	r7, r9
 801212e:	bfb8      	it	lt
 8012130:	464f      	movlt	r7, r9
 8012132:	42b5      	cmp	r5, r6
 8012134:	bfb8      	it	lt
 8012136:	4635      	movlt	r5, r6
 8012138:	45f0      	cmp	r8, lr
 801213a:	bfd8      	it	le
 801213c:	4622      	movle	r2, r4
 801213e:	1bd2      	subs	r2, r2, r7
 8012140:	8082      	strh	r2, [r0, #4]
 8012142:	884a      	ldrh	r2, [r1, #2]
 8012144:	88c9      	ldrh	r1, [r1, #6]
 8012146:	8007      	strh	r7, [r0, #0]
 8012148:	440a      	add	r2, r1
 801214a:	b292      	uxth	r2, r2
 801214c:	b211      	sxth	r1, r2
 801214e:	458c      	cmp	ip, r1
 8012150:	bfa8      	it	ge
 8012152:	4613      	movge	r3, r2
 8012154:	1b5b      	subs	r3, r3, r5
 8012156:	80c3      	strh	r3, [r0, #6]
 8012158:	8045      	strh	r5, [r0, #2]
 801215a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801215e:	2300      	movs	r3, #0
 8012160:	8003      	strh	r3, [r0, #0]
 8012162:	8043      	strh	r3, [r0, #2]
 8012164:	8083      	strh	r3, [r0, #4]
 8012166:	80c3      	strh	r3, [r0, #6]
 8012168:	e7f7      	b.n	801215a <_ZN8touchgfx4RectaNERKS0_+0x76>

0801216a <_ZNK8touchgfx4Rect7isEmptyEv>:
 801216a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801216e:	2b00      	cmp	r3, #0
 8012170:	dd06      	ble.n	8012180 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8012172:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8012176:	2800      	cmp	r0, #0
 8012178:	bfcc      	ite	gt
 801217a:	2000      	movgt	r0, #0
 801217c:	2001      	movle	r0, #1
 801217e:	4770      	bx	lr
 8012180:	2001      	movs	r0, #1
 8012182:	4770      	bx	lr

08012184 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8012184:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012188:	2300      	movs	r3, #0
 801218a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801218c:	8003      	strh	r3, [r0, #0]
 801218e:	4604      	mov	r4, r0
 8012190:	8043      	strh	r3, [r0, #2]
 8012192:	8083      	strh	r3, [r0, #4]
 8012194:	80c3      	strh	r3, [r0, #6]
 8012196:	2d00      	cmp	r5, #0
 8012198:	d040      	beq.n	801221c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 801219a:	1d28      	adds	r0, r5, #4
 801219c:	f7ff ffe5 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 80121a0:	b988      	cbnz	r0, 80121c6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80121a2:	4620      	mov	r0, r4
 80121a4:	f7ff ffe1 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 80121a8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80121ac:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80121b0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80121b4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80121b8:	b138      	cbz	r0, 80121ca <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80121ba:	8022      	strh	r2, [r4, #0]
 80121bc:	8063      	strh	r3, [r4, #2]
 80121be:	f8a4 e004 	strh.w	lr, [r4, #4]
 80121c2:	f8a4 c006 	strh.w	ip, [r4, #6]
 80121c6:	69ad      	ldr	r5, [r5, #24]
 80121c8:	e7e5      	b.n	8012196 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80121ca:	f9b4 0000 	ldrsh.w	r0, [r4]
 80121ce:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80121d2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80121d6:	4290      	cmp	r0, r2
 80121d8:	4607      	mov	r7, r0
 80121da:	bfa8      	it	ge
 80121dc:	4617      	movge	r7, r2
 80121de:	4472      	add	r2, lr
 80121e0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80121e4:	8027      	strh	r7, [r4, #0]
 80121e6:	4299      	cmp	r1, r3
 80121e8:	460e      	mov	r6, r1
 80121ea:	4440      	add	r0, r8
 80121ec:	bfa8      	it	ge
 80121ee:	461e      	movge	r6, r3
 80121f0:	4471      	add	r1, lr
 80121f2:	4463      	add	r3, ip
 80121f4:	b200      	sxth	r0, r0
 80121f6:	b212      	sxth	r2, r2
 80121f8:	b209      	sxth	r1, r1
 80121fa:	b21b      	sxth	r3, r3
 80121fc:	4290      	cmp	r0, r2
 80121fe:	bfac      	ite	ge
 8012200:	ebc7 0200 	rsbge	r2, r7, r0
 8012204:	ebc7 0202 	rsblt	r2, r7, r2
 8012208:	4299      	cmp	r1, r3
 801220a:	bfac      	ite	ge
 801220c:	ebc6 0301 	rsbge	r3, r6, r1
 8012210:	ebc6 0303 	rsblt	r3, r6, r3
 8012214:	8066      	strh	r6, [r4, #2]
 8012216:	80a2      	strh	r2, [r4, #4]
 8012218:	80e3      	strh	r3, [r4, #6]
 801221a:	e7d4      	b.n	80121c6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801221c:	4620      	mov	r0, r4
 801221e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012222 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8012222:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012226:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 801222a:	b383      	cbz	r3, 801228e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 801222c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801222e:	b374      	cbz	r4, 801228e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012230:	f9b1 5000 	ldrsh.w	r5, [r1]
 8012234:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012238:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 801223c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012240:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012244:	b303      	cbz	r3, 8012288 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012246:	4668      	mov	r0, sp
 8012248:	1d21      	adds	r1, r4, #4
 801224a:	f8ad 5000 	strh.w	r5, [sp]
 801224e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012252:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012256:	f8ad 8006 	strh.w	r8, [sp, #6]
 801225a:	f7ff ff43 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 801225e:	4668      	mov	r0, sp
 8012260:	f7ff ff83 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 8012264:	b980      	cbnz	r0, 8012288 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012266:	f8bd 3000 	ldrh.w	r3, [sp]
 801226a:	88a2      	ldrh	r2, [r4, #4]
 801226c:	1a9b      	subs	r3, r3, r2
 801226e:	f8ad 3000 	strh.w	r3, [sp]
 8012272:	88e2      	ldrh	r2, [r4, #6]
 8012274:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012278:	1a9b      	subs	r3, r3, r2
 801227a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801227e:	6823      	ldr	r3, [r4, #0]
 8012280:	4669      	mov	r1, sp
 8012282:	689b      	ldr	r3, [r3, #8]
 8012284:	4620      	mov	r0, r4
 8012286:	4798      	blx	r3
 8012288:	69a4      	ldr	r4, [r4, #24]
 801228a:	2c00      	cmp	r4, #0
 801228c:	d1d8      	bne.n	8012240 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 801228e:	b002      	add	sp, #8
 8012290:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012294 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8012294:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012296:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 801229a:	460d      	mov	r5, r1
 801229c:	4616      	mov	r6, r2
 801229e:	b323      	cbz	r3, 80122ea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80122a0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80122a2:	b314      	cbz	r4, 80122ea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80122a4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80122a8:	b1eb      	cbz	r3, 80122e6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80122aa:	6828      	ldr	r0, [r5, #0]
 80122ac:	6869      	ldr	r1, [r5, #4]
 80122ae:	466b      	mov	r3, sp
 80122b0:	c303      	stmia	r3!, {r0, r1}
 80122b2:	4668      	mov	r0, sp
 80122b4:	1d21      	adds	r1, r4, #4
 80122b6:	f7ff ff15 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 80122ba:	4668      	mov	r0, sp
 80122bc:	f7ff ff55 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 80122c0:	b988      	cbnz	r0, 80122e6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80122c2:	f8bd 3000 	ldrh.w	r3, [sp]
 80122c6:	88a2      	ldrh	r2, [r4, #4]
 80122c8:	1a9b      	subs	r3, r3, r2
 80122ca:	f8ad 3000 	strh.w	r3, [sp]
 80122ce:	88e2      	ldrh	r2, [r4, #6]
 80122d0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80122d4:	1a9b      	subs	r3, r3, r2
 80122d6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80122da:	6823      	ldr	r3, [r4, #0]
 80122dc:	4632      	mov	r2, r6
 80122de:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80122e0:	4669      	mov	r1, sp
 80122e2:	4620      	mov	r0, r4
 80122e4:	4798      	blx	r3
 80122e6:	69a4      	ldr	r4, [r4, #24]
 80122e8:	e7db      	b.n	80122a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80122ea:	b002      	add	sp, #8
 80122ec:	bd70      	pop	{r4, r5, r6, pc}

080122ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80122ee:	b513      	push	{r0, r1, r4, lr}
 80122f0:	6803      	ldr	r3, [r0, #0]
 80122f2:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80122f6:	2300      	movs	r3, #0
 80122f8:	e9cd 3300 	strd	r3, r3, [sp]
 80122fc:	466b      	mov	r3, sp
 80122fe:	47a0      	blx	r4
 8012300:	b002      	add	sp, #8
 8012302:	bd10      	pop	{r4, pc}

08012304 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8012304:	2301      	movs	r3, #1
 8012306:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 801230a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 801230e:	4770      	bx	lr

08012310 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8012310:	2301      	movs	r3, #1
 8012312:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8012316:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 801231a:	4770      	bx	lr

0801231c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801231c:	6843      	ldr	r3, [r0, #4]
 801231e:	2201      	movs	r2, #1
 8012320:	725a      	strb	r2, [r3, #9]
 8012322:	6840      	ldr	r0, [r0, #4]
 8012324:	6803      	ldr	r3, [r0, #0]
 8012326:	691b      	ldr	r3, [r3, #16]
 8012328:	4718      	bx	r3

0801232a <_ZN8touchgfx3HAL8flushDMAEv>:
 801232a:	6840      	ldr	r0, [r0, #4]
 801232c:	6803      	ldr	r3, [r0, #0]
 801232e:	689b      	ldr	r3, [r3, #8]
 8012330:	4718      	bx	r3

08012332 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8012332:	b530      	push	{r4, r5, lr}
 8012334:	b08b      	sub	sp, #44	; 0x2c
 8012336:	6804      	ldr	r4, [r0, #0]
 8012338:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801233c:	9509      	str	r5, [sp, #36]	; 0x24
 801233e:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8012342:	9508      	str	r5, [sp, #32]
 8012344:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8012348:	9507      	str	r5, [sp, #28]
 801234a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801234e:	9506      	str	r5, [sp, #24]
 8012350:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8012354:	9505      	str	r5, [sp, #20]
 8012356:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 801235a:	9504      	str	r5, [sp, #16]
 801235c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8012360:	9503      	str	r5, [sp, #12]
 8012362:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8012366:	9502      	str	r5, [sp, #8]
 8012368:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801236c:	e9cd 3500 	strd	r3, r5, [sp]
 8012370:	4613      	mov	r3, r2
 8012372:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8012374:	2200      	movs	r2, #0
 8012376:	47a0      	blx	r4
 8012378:	b00b      	add	sp, #44	; 0x2c
 801237a:	bd30      	pop	{r4, r5, pc}

0801237c <_ZN8touchgfx3HAL10beginFrameEv>:
 801237c:	4b04      	ldr	r3, [pc, #16]	; (8012390 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801237e:	781b      	ldrb	r3, [r3, #0]
 8012380:	b123      	cbz	r3, 801238c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8012382:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8012386:	f080 0001 	eor.w	r0, r0, #1
 801238a:	4770      	bx	lr
 801238c:	2001      	movs	r0, #1
 801238e:	4770      	bx	lr
 8012390:	2001e1be 	.word	0x2001e1be

08012394 <_ZN8touchgfx3HAL8endFrameEv>:
 8012394:	b510      	push	{r4, lr}
 8012396:	4604      	mov	r4, r0
 8012398:	6840      	ldr	r0, [r0, #4]
 801239a:	6803      	ldr	r3, [r0, #0]
 801239c:	689b      	ldr	r3, [r3, #8]
 801239e:	4798      	blx	r3
 80123a0:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 80123a4:	b113      	cbz	r3, 80123ac <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80123a6:	2301      	movs	r3, #1
 80123a8:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80123ac:	bd10      	pop	{r4, pc}

080123ae <_ZN8touchgfx3HAL10initializeEv>:
 80123ae:	b510      	push	{r4, lr}
 80123b0:	4604      	mov	r4, r0
 80123b2:	f7ef f805 	bl	80013c0 <_ZN8touchgfx10OSWrappers10initializeEv>
 80123b6:	6860      	ldr	r0, [r4, #4]
 80123b8:	6803      	ldr	r3, [r0, #0]
 80123ba:	68db      	ldr	r3, [r3, #12]
 80123bc:	4798      	blx	r3
 80123be:	68e0      	ldr	r0, [r4, #12]
 80123c0:	6803      	ldr	r3, [r0, #0]
 80123c2:	689b      	ldr	r3, [r3, #8]
 80123c4:	4798      	blx	r3
 80123c6:	6823      	ldr	r3, [r4, #0]
 80123c8:	4620      	mov	r0, r4
 80123ca:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80123cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80123d0:	4718      	bx	r3
	...

080123d4 <_ZN8touchgfx3HAL4tickEv>:
 80123d4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80123d6:	6803      	ldr	r3, [r0, #0]
 80123d8:	4d5b      	ldr	r5, [pc, #364]	; (8012548 <_ZN8touchgfx3HAL4tickEv+0x174>)
 80123da:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80123de:	4604      	mov	r4, r0
 80123e0:	4798      	blx	r3
 80123e2:	2800      	cmp	r0, #0
 80123e4:	f000 8095 	beq.w	8012512 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80123e8:	2001      	movs	r0, #1
 80123ea:	f7ee ff15 	bl	8001218 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80123ee:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 80123f2:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80123f6:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 80123fa:	2600      	movs	r6, #0
 80123fc:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8012400:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8012404:	b133      	cbz	r3, 8012414 <_ZN8touchgfx3HAL4tickEv+0x40>
 8012406:	6823      	ldr	r3, [r4, #0]
 8012408:	4620      	mov	r0, r4
 801240a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801240e:	4798      	blx	r3
 8012410:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8012414:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8012418:	6862      	ldr	r2, [r4, #4]
 801241a:	f083 0301 	eor.w	r3, r3, #1
 801241e:	7253      	strb	r3, [r2, #9]
 8012420:	2601      	movs	r6, #1
 8012422:	702e      	strb	r6, [r5, #0]
 8012424:	f006 ff98 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 8012428:	6803      	ldr	r3, [r0, #0]
 801242a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801242c:	4798      	blx	r3
 801242e:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8012432:	b90b      	cbnz	r3, 8012438 <_ZN8touchgfx3HAL4tickEv+0x64>
 8012434:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8012438:	f006 ff8e 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 801243c:	6803      	ldr	r3, [r0, #0]
 801243e:	695b      	ldr	r3, [r3, #20]
 8012440:	4798      	blx	r3
 8012442:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8012444:	6803      	ldr	r3, [r0, #0]
 8012446:	691b      	ldr	r3, [r3, #16]
 8012448:	4798      	blx	r3
 801244a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 801244e:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8012452:	3b01      	subs	r3, #1
 8012454:	b2db      	uxtb	r3, r3
 8012456:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 801245a:	b10a      	cbz	r2, 8012460 <_ZN8touchgfx3HAL4tickEv+0x8c>
 801245c:	2b00      	cmp	r3, #0
 801245e:	d1eb      	bne.n	8012438 <_ZN8touchgfx3HAL4tickEv+0x64>
 8012460:	4a3a      	ldr	r2, [pc, #232]	; (801254c <_ZN8touchgfx3HAL4tickEv+0x178>)
 8012462:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8012466:	7813      	ldrb	r3, [r2, #0]
 8012468:	3301      	adds	r3, #1
 801246a:	b25b      	sxtb	r3, r3
 801246c:	4299      	cmp	r1, r3
 801246e:	7013      	strb	r3, [r2, #0]
 8012470:	dc10      	bgt.n	8012494 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8012472:	68e0      	ldr	r0, [r4, #12]
 8012474:	2300      	movs	r3, #0
 8012476:	7013      	strb	r3, [r2, #0]
 8012478:	6803      	ldr	r3, [r0, #0]
 801247a:	aa03      	add	r2, sp, #12
 801247c:	68db      	ldr	r3, [r3, #12]
 801247e:	a902      	add	r1, sp, #8
 8012480:	4798      	blx	r3
 8012482:	6823      	ldr	r3, [r4, #0]
 8012484:	2800      	cmp	r0, #0
 8012486:	d050      	beq.n	801252a <_ZN8touchgfx3HAL4tickEv+0x156>
 8012488:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801248c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8012490:	4620      	mov	r0, r4
 8012492:	4798      	blx	r3
 8012494:	6960      	ldr	r0, [r4, #20]
 8012496:	2300      	movs	r3, #0
 8012498:	f88d 3007 	strb.w	r3, [sp, #7]
 801249c:	b158      	cbz	r0, 80124b6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801249e:	6803      	ldr	r3, [r0, #0]
 80124a0:	f10d 0107 	add.w	r1, sp, #7
 80124a4:	68db      	ldr	r3, [r3, #12]
 80124a6:	4798      	blx	r3
 80124a8:	b128      	cbz	r0, 80124b6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80124aa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80124ac:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80124b0:	6803      	ldr	r3, [r0, #0]
 80124b2:	68db      	ldr	r3, [r3, #12]
 80124b4:	4798      	blx	r3
 80124b6:	f104 001c 	add.w	r0, r4, #28
 80124ba:	f016 f95f 	bl	802877c <_ZN8touchgfx8Gestures4tickEv>
 80124be:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 80124c2:	b30b      	cbz	r3, 8012508 <_ZN8touchgfx3HAL4tickEv+0x134>
 80124c4:	6920      	ldr	r0, [r4, #16]
 80124c6:	6803      	ldr	r3, [r0, #0]
 80124c8:	691b      	ldr	r3, [r3, #16]
 80124ca:	4798      	blx	r3
 80124cc:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80124ce:	4606      	mov	r6, r0
 80124d0:	b903      	cbnz	r3, 80124d4 <_ZN8touchgfx3HAL4tickEv+0x100>
 80124d2:	6720      	str	r0, [r4, #112]	; 0x70
 80124d4:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80124d6:	4a1e      	ldr	r2, [pc, #120]	; (8012550 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80124d8:	1af3      	subs	r3, r6, r3
 80124da:	4293      	cmp	r3, r2
 80124dc:	d914      	bls.n	8012508 <_ZN8touchgfx3HAL4tickEv+0x134>
 80124de:	6920      	ldr	r0, [r4, #16]
 80124e0:	6803      	ldr	r3, [r0, #0]
 80124e2:	699b      	ldr	r3, [r3, #24]
 80124e4:	4798      	blx	r3
 80124e6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80124e8:	2264      	movs	r2, #100	; 0x64
 80124ea:	1af3      	subs	r3, r6, r3
 80124ec:	fbb3 f3f2 	udiv	r3, r3, r2
 80124f0:	fbb0 f0f3 	udiv	r0, r0, r3
 80124f4:	2800      	cmp	r0, #0
 80124f6:	dc1d      	bgt.n	8012534 <_ZN8touchgfx3HAL4tickEv+0x160>
 80124f8:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80124fc:	6920      	ldr	r0, [r4, #16]
 80124fe:	6803      	ldr	r3, [r0, #0]
 8012500:	2100      	movs	r1, #0
 8012502:	69db      	ldr	r3, [r3, #28]
 8012504:	4798      	blx	r3
 8012506:	6726      	str	r6, [r4, #112]	; 0x70
 8012508:	f006 ff26 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 801250c:	6803      	ldr	r3, [r0, #0]
 801250e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012510:	4798      	blx	r3
 8012512:	6823      	ldr	r3, [r4, #0]
 8012514:	4620      	mov	r0, r4
 8012516:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801251a:	4798      	blx	r3
 801251c:	2001      	movs	r0, #1
 801251e:	f7ee fe7c 	bl	800121a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8012522:	2300      	movs	r3, #0
 8012524:	702b      	strb	r3, [r5, #0]
 8012526:	b004      	add	sp, #16
 8012528:	bd70      	pop	{r4, r5, r6, pc}
 801252a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801252e:	4620      	mov	r0, r4
 8012530:	4798      	blx	r3
 8012532:	e7af      	b.n	8012494 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8012534:	2863      	cmp	r0, #99	; 0x63
 8012536:	bfcb      	itete	gt
 8012538:	2300      	movgt	r3, #0
 801253a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 801253e:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8012542:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8012546:	e7d9      	b.n	80124fc <_ZN8touchgfx3HAL4tickEv+0x128>
 8012548:	2001e1c4 	.word	0x2001e1c4
 801254c:	2001e1c5 	.word	0x2001e1c5
 8012550:	05f5e100 	.word	0x05f5e100

08012554 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8012554:	f7ee bf64 	b.w	8001420 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08012558 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8012558:	6581      	str	r1, [r0, #88]	; 0x58
 801255a:	301c      	adds	r0, #28
 801255c:	f016 b90c 	b.w	8028778 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08012560 <_ZN8touchgfx3HAL5touchEll>:
 8012560:	b530      	push	{r4, r5, lr}
 8012562:	b087      	sub	sp, #28
 8012564:	4604      	mov	r4, r0
 8012566:	a804      	add	r0, sp, #16
 8012568:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801256c:	f006 fcba 	bl	8018ee4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8012570:	9b04      	ldr	r3, [sp, #16]
 8012572:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012576:	a906      	add	r1, sp, #24
 8012578:	9b05      	ldr	r3, [sp, #20]
 801257a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801257e:	a803      	add	r0, sp, #12
 8012580:	f006 fd02 	bl	8018f88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8012584:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8012588:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801258c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8012590:	f104 001c 	add.w	r0, r4, #28
 8012594:	b189      	cbz	r1, 80125ba <_ZN8touchgfx3HAL5touchEll+0x5a>
 8012596:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 801259a:	9300      	str	r3, [sp, #0]
 801259c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80125a0:	4613      	mov	r3, r2
 80125a2:	462a      	mov	r2, r5
 80125a4:	f016 f8f8 	bl	8028798 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80125a8:	b128      	cbz	r0, 80125b6 <_ZN8touchgfx3HAL5touchEll+0x56>
 80125aa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80125ae:	65e3      	str	r3, [r4, #92]	; 0x5c
 80125b0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80125b4:	6623      	str	r3, [r4, #96]	; 0x60
 80125b6:	b007      	add	sp, #28
 80125b8:	bd30      	pop	{r4, r5, pc}
 80125ba:	f016 f92d 	bl	8028818 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80125be:	2301      	movs	r3, #1
 80125c0:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80125c4:	e7f1      	b.n	80125aa <_ZN8touchgfx3HAL5touchEll+0x4a>

080125c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80125c6:	b510      	push	{r4, lr}
 80125c8:	2b00      	cmp	r3, #0
 80125ca:	d046      	beq.n	801265a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80125cc:	ea81 0002 	eor.w	r0, r1, r2
 80125d0:	07c4      	lsls	r4, r0, #31
 80125d2:	d508      	bpl.n	80125e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80125d4:	440b      	add	r3, r1
 80125d6:	3a01      	subs	r2, #1
 80125d8:	428b      	cmp	r3, r1
 80125da:	d93e      	bls.n	801265a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80125dc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80125e0:	f801 0b01 	strb.w	r0, [r1], #1
 80125e4:	e7f8      	b.n	80125d8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80125e6:	07d0      	lsls	r0, r2, #31
 80125e8:	bf42      	ittt	mi
 80125ea:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80125ee:	f801 0b01 	strbmi.w	r0, [r1], #1
 80125f2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80125f6:	2b01      	cmp	r3, #1
 80125f8:	d911      	bls.n	801261e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80125fa:	ea81 0402 	eor.w	r4, r1, r2
 80125fe:	07a4      	lsls	r4, r4, #30
 8012600:	4610      	mov	r0, r2
 8012602:	d022      	beq.n	801264a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8012604:	f023 0401 	bic.w	r4, r3, #1
 8012608:	440c      	add	r4, r1
 801260a:	428c      	cmp	r4, r1
 801260c:	4602      	mov	r2, r0
 801260e:	d904      	bls.n	801261a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8012610:	8812      	ldrh	r2, [r2, #0]
 8012612:	f821 2b02 	strh.w	r2, [r1], #2
 8012616:	3002      	adds	r0, #2
 8012618:	e7f7      	b.n	801260a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801261a:	f003 0301 	and.w	r3, r3, #1
 801261e:	f023 0003 	bic.w	r0, r3, #3
 8012622:	4408      	add	r0, r1
 8012624:	4288      	cmp	r0, r1
 8012626:	4614      	mov	r4, r2
 8012628:	d904      	bls.n	8012634 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801262a:	6824      	ldr	r4, [r4, #0]
 801262c:	f841 4b04 	str.w	r4, [r1], #4
 8012630:	3204      	adds	r2, #4
 8012632:	e7f7      	b.n	8012624 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8012634:	f003 0303 	and.w	r3, r3, #3
 8012638:	440b      	add	r3, r1
 801263a:	3a01      	subs	r2, #1
 801263c:	428b      	cmp	r3, r1
 801263e:	d90c      	bls.n	801265a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012640:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8012644:	f801 0b01 	strb.w	r0, [r1], #1
 8012648:	e7f8      	b.n	801263c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801264a:	0790      	lsls	r0, r2, #30
 801264c:	d0e7      	beq.n	801261e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801264e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8012652:	f821 0b02 	strh.w	r0, [r1], #2
 8012656:	3b02      	subs	r3, #2
 8012658:	e7e1      	b.n	801261e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801265a:	2001      	movs	r0, #1
 801265c:	bd10      	pop	{r4, pc}

0801265e <_ZN8touchgfx3HAL7noTouchEv>:
 801265e:	b510      	push	{r4, lr}
 8012660:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8012664:	4604      	mov	r4, r0
 8012666:	b153      	cbz	r3, 801267e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8012668:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 801266c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8012670:	2101      	movs	r1, #1
 8012672:	301c      	adds	r0, #28
 8012674:	f016 f8d0 	bl	8028818 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8012678:	2300      	movs	r3, #0
 801267a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801267e:	bd10      	pop	{r4, pc}

08012680 <_ZN8touchgfx3HAL3lcdEv>:
 8012680:	4b04      	ldr	r3, [pc, #16]	; (8012694 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8012682:	681b      	ldr	r3, [r3, #0]
 8012684:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8012688:	b10a      	cbz	r2, 801268e <_ZN8touchgfx3HAL3lcdEv+0xe>
 801268a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801268c:	b900      	cbnz	r0, 8012690 <_ZN8touchgfx3HAL3lcdEv+0x10>
 801268e:	6898      	ldr	r0, [r3, #8]
 8012690:	4770      	bx	lr
 8012692:	bf00      	nop
 8012694:	2001e1c0 	.word	0x2001e1c0

08012698 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8012698:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801269c:	4604      	mov	r4, r0
 801269e:	6980      	ldr	r0, [r0, #24]
 80126a0:	b085      	sub	sp, #20
 80126a2:	460f      	mov	r7, r1
 80126a4:	4690      	mov	r8, r2
 80126a6:	4699      	mov	r9, r3
 80126a8:	b930      	cbnz	r0, 80126b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 80126aa:	4b1c      	ldr	r3, [pc, #112]	; (801271c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 80126ac:	4a1c      	ldr	r2, [pc, #112]	; (8012720 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80126ae:	f44f 719f 	mov.w	r1, #318	; 0x13e
 80126b2:	481c      	ldr	r0, [pc, #112]	; (8012724 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 80126b4:	f019 fc86 	bl	802bfc4 <__assert_func>
 80126b8:	ad04      	add	r5, sp, #16
 80126ba:	2600      	movs	r6, #0
 80126bc:	f845 6d04 	str.w	r6, [r5, #-4]!
 80126c0:	6806      	ldr	r6, [r0, #0]
 80126c2:	9501      	str	r5, [sp, #4]
 80126c4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80126c8:	9500      	str	r5, [sp, #0]
 80126ca:	6835      	ldr	r5, [r6, #0]
 80126cc:	47a8      	blx	r5
 80126ce:	4d16      	ldr	r5, [pc, #88]	; (8012728 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 80126d0:	4606      	mov	r6, r0
 80126d2:	f8a5 9000 	strh.w	r9, [r5]
 80126d6:	f7ff ffd3 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 80126da:	6803      	ldr	r3, [r0, #0]
 80126dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80126de:	4798      	blx	r3
 80126e0:	2801      	cmp	r0, #1
 80126e2:	d012      	beq.n	801270a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 80126e4:	d306      	bcc.n	80126f4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 80126e6:	280d      	cmp	r0, #13
 80126e8:	d80b      	bhi.n	8012702 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80126ea:	4b10      	ldr	r3, [pc, #64]	; (801272c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80126ec:	4a0c      	ldr	r2, [pc, #48]	; (8012720 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80126ee:	f240 115b 	movw	r1, #347	; 0x15b
 80126f2:	e7de      	b.n	80126b2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 80126f4:	882b      	ldrh	r3, [r5, #0]
 80126f6:	fb08 7203 	mla	r2, r8, r3, r7
 80126fa:	9b03      	ldr	r3, [sp, #12]
 80126fc:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8012700:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012702:	4630      	mov	r0, r6
 8012704:	b005      	add	sp, #20
 8012706:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801270a:	882a      	ldrh	r2, [r5, #0]
 801270c:	9b03      	ldr	r3, [sp, #12]
 801270e:	fb08 7202 	mla	r2, r8, r2, r7
 8012712:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012716:	1a9a      	subs	r2, r3, r2
 8012718:	63e2      	str	r2, [r4, #60]	; 0x3c
 801271a:	e7f2      	b.n	8012702 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 801271c:	0803348d 	.word	0x0803348d
 8012720:	0803374b 	.word	0x0803374b
 8012724:	080334d2 	.word	0x080334d2
 8012728:	2001e1ba 	.word	0x2001e1ba
 801272c:	080334f8 	.word	0x080334f8

08012730 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8012730:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012732:	b08b      	sub	sp, #44	; 0x2c
 8012734:	4617      	mov	r7, r2
 8012736:	4604      	mov	r4, r0
 8012738:	460e      	mov	r6, r1
 801273a:	461d      	mov	r5, r3
 801273c:	f7ff ffa0 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 8012740:	6803      	ldr	r3, [r0, #0]
 8012742:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012744:	4798      	blx	r3
 8012746:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801274a:	9007      	str	r0, [sp, #28]
 801274c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8012750:	4b0d      	ldr	r3, [pc, #52]	; (8012788 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8012752:	6822      	ldr	r2, [r4, #0]
 8012754:	881b      	ldrh	r3, [r3, #0]
 8012756:	9306      	str	r3, [sp, #24]
 8012758:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801275c:	9305      	str	r3, [sp, #20]
 801275e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8012762:	9304      	str	r3, [sp, #16]
 8012764:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012768:	9303      	str	r3, [sp, #12]
 801276a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801276e:	9302      	str	r3, [sp, #8]
 8012770:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012774:	e9cd 5300 	strd	r5, r3, [sp]
 8012778:	4631      	mov	r1, r6
 801277a:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 801277c:	463b      	mov	r3, r7
 801277e:	2200      	movs	r2, #0
 8012780:	4620      	mov	r0, r4
 8012782:	47a8      	blx	r5
 8012784:	b00b      	add	sp, #44	; 0x2c
 8012786:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012788:	2001e1ba 	.word	0x2001e1ba

0801278c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 801278c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012790:	4698      	mov	r8, r3
 8012792:	6803      	ldr	r3, [r0, #0]
 8012794:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8012796:	4b15      	ldr	r3, [pc, #84]	; (80127ec <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8012798:	b08b      	sub	sp, #44	; 0x2c
 801279a:	4617      	mov	r7, r2
 801279c:	f8b3 9000 	ldrh.w	r9, [r3]
 80127a0:	460e      	mov	r6, r1
 80127a2:	4604      	mov	r4, r0
 80127a4:	f7ff ff6c 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 80127a8:	6803      	ldr	r3, [r0, #0]
 80127aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80127ac:	4798      	blx	r3
 80127ae:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80127b2:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80127b6:	2302      	movs	r3, #2
 80127b8:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80127bc:	2301      	movs	r3, #1
 80127be:	9305      	str	r3, [sp, #20]
 80127c0:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80127c4:	9304      	str	r3, [sp, #16]
 80127c6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80127ca:	9303      	str	r3, [sp, #12]
 80127cc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80127d0:	9302      	str	r3, [sp, #8]
 80127d2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80127d6:	2200      	movs	r2, #0
 80127d8:	e9cd 8300 	strd	r8, r3, [sp]
 80127dc:	4631      	mov	r1, r6
 80127de:	463b      	mov	r3, r7
 80127e0:	4620      	mov	r0, r4
 80127e2:	47a8      	blx	r5
 80127e4:	b00b      	add	sp, #44	; 0x2c
 80127e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80127ea:	bf00      	nop
 80127ec:	2001e1ba 	.word	0x2001e1ba

080127f0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80127f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80127f4:	4698      	mov	r8, r3
 80127f6:	6803      	ldr	r3, [r0, #0]
 80127f8:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80127fa:	4b11      	ldr	r3, [pc, #68]	; (8012840 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80127fc:	b087      	sub	sp, #28
 80127fe:	f8b3 9000 	ldrh.w	r9, [r3]
 8012802:	460e      	mov	r6, r1
 8012804:	4617      	mov	r7, r2
 8012806:	4604      	mov	r4, r0
 8012808:	f7ff ff3a 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 801280c:	6803      	ldr	r3, [r0, #0]
 801280e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012810:	4798      	blx	r3
 8012812:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8012816:	f8cd 900c 	str.w	r9, [sp, #12]
 801281a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801281e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8012822:	9302      	str	r3, [sp, #8]
 8012824:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8012828:	9301      	str	r3, [sp, #4]
 801282a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801282e:	9300      	str	r3, [sp, #0]
 8012830:	463a      	mov	r2, r7
 8012832:	4643      	mov	r3, r8
 8012834:	4631      	mov	r1, r6
 8012836:	4620      	mov	r0, r4
 8012838:	47a8      	blx	r5
 801283a:	b007      	add	sp, #28
 801283c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012840:	2001e1ba 	.word	0x2001e1ba

08012844 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8012844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012848:	4604      	mov	r4, r0
 801284a:	b08f      	sub	sp, #60	; 0x3c
 801284c:	4610      	mov	r0, r2
 801284e:	460d      	mov	r5, r1
 8012850:	4691      	mov	r9, r2
 8012852:	461e      	mov	r6, r3
 8012854:	f009 fe82 	bl	801c55c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8012858:	2800      	cmp	r0, #0
 801285a:	f000 809c 	beq.w	8012996 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 801285e:	6823      	ldr	r3, [r4, #0]
 8012860:	f8df b194 	ldr.w	fp, [pc, #404]	; 80129f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8012864:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012866:	f8df a194 	ldr.w	sl, [pc, #404]	; 80129fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 801286a:	4f60      	ldr	r7, [pc, #384]	; (80129ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 801286c:	4620      	mov	r0, r4
 801286e:	4798      	blx	r3
 8012870:	6823      	ldr	r3, [r4, #0]
 8012872:	4620      	mov	r0, r4
 8012874:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012876:	4798      	blx	r3
 8012878:	f8bb 3000 	ldrh.w	r3, [fp]
 801287c:	9301      	str	r3, [sp, #4]
 801287e:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8012882:	f8ba 3000 	ldrh.w	r3, [sl]
 8012886:	9302      	str	r3, [sp, #8]
 8012888:	883b      	ldrh	r3, [r7, #0]
 801288a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 801288e:	9303      	str	r3, [sp, #12]
 8012890:	4b57      	ldr	r3, [pc, #348]	; (80129f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012892:	9305      	str	r3, [sp, #20]
 8012894:	881a      	ldrh	r2, [r3, #0]
 8012896:	9204      	str	r2, [sp, #16]
 8012898:	4640      	mov	r0, r8
 801289a:	f009 ff0f 	bl	801c6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801289e:	8038      	strh	r0, [r7, #0]
 80128a0:	4640      	mov	r0, r8
 80128a2:	f009 ff4f 	bl	801c744 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80128a6:	9b05      	ldr	r3, [sp, #20]
 80128a8:	8018      	strh	r0, [r3, #0]
 80128aa:	4b52      	ldr	r3, [pc, #328]	; (80129f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80128ac:	781b      	ldrb	r3, [r3, #0]
 80128ae:	2b00      	cmp	r3, #0
 80128b0:	d174      	bne.n	801299c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 80128b2:	883b      	ldrh	r3, [r7, #0]
 80128b4:	f8ab 3000 	strh.w	r3, [fp]
 80128b8:	f8aa 0000 	strh.w	r0, [sl]
 80128bc:	4648      	mov	r0, r9
 80128be:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80128c2:	f009 fe4b 	bl	801c55c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80128c6:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80128ca:	2200      	movs	r2, #0
 80128cc:	4611      	mov	r1, r2
 80128ce:	4628      	mov	r0, r5
 80128d0:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80128d4:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80128d8:	f7f0 ffb2 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 80128dc:	2301      	movs	r3, #1
 80128de:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80128e2:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80128e6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80128ea:	2b00      	cmp	r3, #0
 80128ec:	dd5c      	ble.n	80129a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 80128ee:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80128f2:	2b00      	cmp	r3, #0
 80128f4:	dd58      	ble.n	80129a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 80128f6:	462a      	mov	r2, r5
 80128f8:	ab0a      	add	r3, sp, #40	; 0x28
 80128fa:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80128fe:	6851      	ldr	r1, [r2, #4]
 8012900:	c303      	stmia	r3!, {r0, r1}
 8012902:	4631      	mov	r1, r6
 8012904:	a80a      	add	r0, sp, #40	; 0x28
 8012906:	f7ff fbed 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 801290a:	4b38      	ldr	r3, [pc, #224]	; (80129ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 801290c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012910:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8012914:	2100      	movs	r1, #0
 8012916:	aa0a      	add	r2, sp, #40	; 0x28
 8012918:	4b35      	ldr	r3, [pc, #212]	; (80129f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801291a:	910c      	str	r1, [sp, #48]	; 0x30
 801291c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012920:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012924:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012928:	ab08      	add	r3, sp, #32
 801292a:	e883 0003 	stmia.w	r3, {r0, r1}
 801292e:	4618      	mov	r0, r3
 8012930:	a90c      	add	r1, sp, #48	; 0x30
 8012932:	f7ff fbd7 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 8012936:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8012938:	2b00      	cmp	r3, #0
 801293a:	d13c      	bne.n	80129b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 801293c:	2000      	movs	r0, #0
 801293e:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8012942:	2600      	movs	r6, #0
 8012944:	682a      	ldr	r2, [r5, #0]
 8012946:	696b      	ldr	r3, [r5, #20]
 8012948:	616e      	str	r6, [r5, #20]
 801294a:	9305      	str	r3, [sp, #20]
 801294c:	6892      	ldr	r2, [r2, #8]
 801294e:	a908      	add	r1, sp, #32
 8012950:	4628      	mov	r0, r5
 8012952:	4790      	blx	r2
 8012954:	9b05      	ldr	r3, [sp, #20]
 8012956:	616b      	str	r3, [r5, #20]
 8012958:	4652      	mov	r2, sl
 801295a:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 801295e:	4649      	mov	r1, r9
 8012960:	4628      	mov	r0, r5
 8012962:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8012966:	f7f0 ff6b 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 801296a:	4b23      	ldr	r3, [pc, #140]	; (80129f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 801296c:	9a01      	ldr	r2, [sp, #4]
 801296e:	801a      	strh	r2, [r3, #0]
 8012970:	4b22      	ldr	r3, [pc, #136]	; (80129fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8012972:	9a02      	ldr	r2, [sp, #8]
 8012974:	801a      	strh	r2, [r3, #0]
 8012976:	4b1d      	ldr	r3, [pc, #116]	; (80129ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8012978:	9a03      	ldr	r2, [sp, #12]
 801297a:	801a      	strh	r2, [r3, #0]
 801297c:	4b1c      	ldr	r3, [pc, #112]	; (80129f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801297e:	9a04      	ldr	r2, [sp, #16]
 8012980:	801a      	strh	r2, [r3, #0]
 8012982:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8012986:	6823      	ldr	r3, [r4, #0]
 8012988:	4620      	mov	r0, r4
 801298a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801298c:	4798      	blx	r3
 801298e:	6823      	ldr	r3, [r4, #0]
 8012990:	4620      	mov	r0, r4
 8012992:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012994:	4798      	blx	r3
 8012996:	b00f      	add	sp, #60	; 0x3c
 8012998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801299c:	883b      	ldrh	r3, [r7, #0]
 801299e:	f8ab 0000 	strh.w	r0, [fp]
 80129a2:	f8aa 3000 	strh.w	r3, [sl]
 80129a6:	e789      	b.n	80128bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 80129a8:	462a      	mov	r2, r5
 80129aa:	ab0a      	add	r3, sp, #40	; 0x28
 80129ac:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80129b0:	6851      	ldr	r1, [r2, #4]
 80129b2:	c303      	stmia	r3!, {r0, r1}
 80129b4:	e7a9      	b.n	801290a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 80129b6:	a807      	add	r0, sp, #28
 80129b8:	f00a f826 	bl	801ca08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80129bc:	4606      	mov	r6, r0
 80129be:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80129c0:	6803      	ldr	r3, [r0, #0]
 80129c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80129c4:	4798      	blx	r3
 80129c6:	4286      	cmp	r6, r0
 80129c8:	d1b8      	bne.n	801293c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 80129ca:	f7ff fe59 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 80129ce:	6803      	ldr	r3, [r0, #0]
 80129d0:	4606      	mov	r6, r0
 80129d2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80129d4:	9305      	str	r3, [sp, #20]
 80129d6:	a807      	add	r0, sp, #28
 80129d8:	f00a f816 	bl	801ca08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80129dc:	9b05      	ldr	r3, [sp, #20]
 80129de:	4601      	mov	r1, r0
 80129e0:	4630      	mov	r0, r6
 80129e2:	4798      	blx	r3
 80129e4:	f080 0001 	eor.w	r0, r0, #1
 80129e8:	b2c0      	uxtb	r0, r0
 80129ea:	e7a8      	b.n	801293e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80129ec:	2001e1b4 	.word	0x2001e1b4
 80129f0:	2001e1b6 	.word	0x2001e1b6
 80129f4:	2001e1b8 	.word	0x2001e1b8
 80129f8:	2001e1ba 	.word	0x2001e1ba
 80129fc:	2001e1bc 	.word	0x2001e1bc

08012a00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8012a00:	b510      	push	{r4, lr}
 8012a02:	4b07      	ldr	r3, [pc, #28]	; (8012a20 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8012a04:	781b      	ldrb	r3, [r3, #0]
 8012a06:	4604      	mov	r4, r0
 8012a08:	b13b      	cbz	r3, 8012a1a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012a0a:	6803      	ldr	r3, [r0, #0]
 8012a0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012a0e:	4798      	blx	r3
 8012a10:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012a12:	4283      	cmp	r3, r0
 8012a14:	d101      	bne.n	8012a1a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012a16:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8012a18:	bd10      	pop	{r4, pc}
 8012a1a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012a1c:	e7fc      	b.n	8012a18 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8012a1e:	bf00      	nop
 8012a20:	2001e1be 	.word	0x2001e1be

08012a24 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8012a24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012a28:	b08a      	sub	sp, #40	; 0x28
 8012a2a:	461d      	mov	r5, r3
 8012a2c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012a30:	2400      	movs	r4, #0
 8012a32:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 8012a36:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8012a3a:	f8bd 9054 	ldrh.w	r9, [sp, #84]	; 0x54
 8012a3e:	9404      	str	r4, [sp, #16]
 8012a40:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012a44:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012a48:	f8ad 8018 	strh.w	r8, [sp, #24]
 8012a4c:	4692      	mov	sl, r2
 8012a4e:	4606      	mov	r6, r0
 8012a50:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012a54:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012a58:	f88d 4020 	strb.w	r4, [sp, #32]
 8012a5c:	f7ff ffd0 	bl	8012a00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012a60:	fb09 a505 	mla	r5, r9, r5, sl
 8012a64:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012a68:	9505      	str	r5, [sp, #20]
 8012a6a:	f8ad 901e 	strh.w	r9, [sp, #30]
 8012a6e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012a72:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8012a76:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8012a7a:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012a7e:	f1b8 0f00 	cmp.w	r8, #0
 8012a82:	d000      	beq.n	8012a86 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 8012a84:	b937      	cbnz	r7, 8012a94 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x70>
 8012a86:	4b0d      	ldr	r3, [pc, #52]	; (8012abc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8012a88:	4a0d      	ldr	r2, [pc, #52]	; (8012ac0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8012a8a:	f240 2102 	movw	r1, #514	; 0x202
 8012a8e:	480d      	ldr	r0, [pc, #52]	; (8012ac4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 8012a90:	f019 fa98 	bl	802bfc4 <__assert_func>
 8012a94:	6833      	ldr	r3, [r6, #0]
 8012a96:	9c01      	ldr	r4, [sp, #4]
 8012a98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012a9a:	4630      	mov	r0, r6
 8012a9c:	4798      	blx	r3
 8012a9e:	4220      	tst	r0, r4
 8012aa0:	d104      	bne.n	8012aac <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x88>
 8012aa2:	4b09      	ldr	r3, [pc, #36]	; (8012ac8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa4>)
 8012aa4:	4a06      	ldr	r2, [pc, #24]	; (8012ac0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8012aa6:	f240 2103 	movw	r1, #515	; 0x203
 8012aaa:	e7f0      	b.n	8012a8e <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6a>
 8012aac:	6870      	ldr	r0, [r6, #4]
 8012aae:	6803      	ldr	r3, [r0, #0]
 8012ab0:	a901      	add	r1, sp, #4
 8012ab2:	685b      	ldr	r3, [r3, #4]
 8012ab4:	4798      	blx	r3
 8012ab6:	b00a      	add	sp, #40	; 0x28
 8012ab8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012abc:	08033327 	.word	0x08033327
 8012ac0:	08033580 	.word	0x08033580
 8012ac4:	080334d2 	.word	0x080334d2
 8012ac8:	0803335f 	.word	0x0803335f

08012acc <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8012acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ad0:	b08b      	sub	sp, #44	; 0x2c
 8012ad2:	2400      	movs	r4, #0
 8012ad4:	461d      	mov	r5, r3
 8012ad6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8012ada:	f8bd 9058 	ldrh.w	r9, [sp, #88]	; 0x58
 8012ade:	f8bd 8050 	ldrh.w	r8, [sp, #80]	; 0x50
 8012ae2:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8012ae6:	9404      	str	r4, [sp, #16]
 8012ae8:	468a      	mov	sl, r1
 8012aea:	4693      	mov	fp, r2
 8012aec:	4606      	mov	r6, r0
 8012aee:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012af2:	f7ff ff85 	bl	8012a00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012af6:	fb09 b505 	mla	r5, r9, r5, fp
 8012afa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012afe:	9505      	str	r5, [sp, #20]
 8012b00:	f8ad 8018 	strh.w	r8, [sp, #24]
 8012b04:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012b08:	f8ad 401c 	strh.w	r4, [sp, #28]
 8012b0c:	f8ad 901e 	strh.w	r9, [sp, #30]
 8012b10:	f8cd a010 	str.w	sl, [sp, #16]
 8012b14:	f8ad 4020 	strh.w	r4, [sp, #32]
 8012b18:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012b1c:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8012b20:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012b24:	f1b8 0f00 	cmp.w	r8, #0
 8012b28:	d000      	beq.n	8012b2c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 8012b2a:	b937      	cbnz	r7, 8012b3a <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6e>
 8012b2c:	4b0d      	ldr	r3, [pc, #52]	; (8012b64 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8012b2e:	4a0e      	ldr	r2, [pc, #56]	; (8012b68 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8012b30:	f240 2119 	movw	r1, #537	; 0x219
 8012b34:	480d      	ldr	r0, [pc, #52]	; (8012b6c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 8012b36:	f019 fa45 	bl	802bfc4 <__assert_func>
 8012b3a:	6833      	ldr	r3, [r6, #0]
 8012b3c:	9c01      	ldr	r4, [sp, #4]
 8012b3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012b40:	4630      	mov	r0, r6
 8012b42:	4798      	blx	r3
 8012b44:	4220      	tst	r0, r4
 8012b46:	d104      	bne.n	8012b52 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x86>
 8012b48:	4b09      	ldr	r3, [pc, #36]	; (8012b70 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa4>)
 8012b4a:	4a07      	ldr	r2, [pc, #28]	; (8012b68 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8012b4c:	f240 211a 	movw	r1, #538	; 0x21a
 8012b50:	e7f0      	b.n	8012b34 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x68>
 8012b52:	6870      	ldr	r0, [r6, #4]
 8012b54:	6803      	ldr	r3, [r0, #0]
 8012b56:	a901      	add	r1, sp, #4
 8012b58:	685b      	ldr	r3, [r3, #4]
 8012b5a:	4798      	blx	r3
 8012b5c:	b00b      	add	sp, #44	; 0x2c
 8012b5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b62:	bf00      	nop
 8012b64:	080333a4 	.word	0x080333a4
 8012b68:	080335f6 	.word	0x080335f6
 8012b6c:	080334d2 	.word	0x080334d2
 8012b70:	080333dc 	.word	0x080333dc

08012b74 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8012b74:	b508      	push	{r3, lr}
 8012b76:	290d      	cmp	r1, #13
 8012b78:	d817      	bhi.n	8012baa <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8012b7a:	e8df f001 	tbb	[pc, r1]
 8012b7e:	090b      	.short	0x090b
 8012b80:	0d0d0d07 	.word	0x0d0d0d07
 8012b84:	1414140d 	.word	0x1414140d
 8012b88:	0d0d1414 	.word	0x0d0d1414
 8012b8c:	2020      	movs	r0, #32
 8012b8e:	bd08      	pop	{r3, pc}
 8012b90:	2018      	movs	r0, #24
 8012b92:	e7fc      	b.n	8012b8e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8012b94:	2010      	movs	r0, #16
 8012b96:	e7fa      	b.n	8012b8e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8012b98:	4b05      	ldr	r3, [pc, #20]	; (8012bb0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8012b9a:	4a06      	ldr	r2, [pc, #24]	; (8012bb4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8012b9c:	4806      	ldr	r0, [pc, #24]	; (8012bb8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8012b9e:	f240 2183 	movw	r1, #643	; 0x283
 8012ba2:	f019 fa0f 	bl	802bfc4 <__assert_func>
 8012ba6:	2008      	movs	r0, #8
 8012ba8:	e7f1      	b.n	8012b8e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8012baa:	2000      	movs	r0, #0
 8012bac:	e7ef      	b.n	8012b8e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8012bae:	bf00      	nop
 8012bb0:	0803354e 	.word	0x0803354e
 8012bb4:	08033921 	.word	0x08033921
 8012bb8:	080334d2 	.word	0x080334d2

08012bbc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8012bbc:	b570      	push	{r4, r5, r6, lr}
 8012bbe:	460d      	mov	r5, r1
 8012bc0:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8012bc4:	4616      	mov	r6, r2
 8012bc6:	461c      	mov	r4, r3
 8012bc8:	f7ff ffd4 	bl	8012b74 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8012bcc:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8012bd0:	10c0      	asrs	r0, r0, #3
 8012bd2:	fb06 5101 	mla	r1, r6, r1, r5
 8012bd6:	fb00 4001 	mla	r0, r0, r1, r4
 8012bda:	bd70      	pop	{r4, r5, r6, pc}

08012bdc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8012bdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012be0:	b08c      	sub	sp, #48	; 0x30
 8012be2:	f04f 0c00 	mov.w	ip, #0
 8012be6:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 8012bea:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8012bee:	f8bd 6058 	ldrh.w	r6, [sp, #88]	; 0x58
 8012bf2:	f8bd 9068 	ldrh.w	r9, [sp, #104]	; 0x68
 8012bf6:	f89d 8070 	ldrb.w	r8, [sp, #112]	; 0x70
 8012bfa:	f8cd c018 	str.w	ip, [sp, #24]
 8012bfe:	2d0b      	cmp	r5, #11
 8012c00:	4604      	mov	r4, r0
 8012c02:	469a      	mov	sl, r3
 8012c04:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
 8012c08:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8012c0c:	d130      	bne.n	8012c70 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x94>
 8012c0e:	2080      	movs	r0, #128	; 0x80
 8012c10:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8012c14:	9205      	str	r2, [sp, #20]
 8012c16:	4620      	mov	r0, r4
 8012c18:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8012c1c:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8012c20:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012c24:	f8ad 7020 	strh.w	r7, [sp, #32]
 8012c28:	f8ad 6022 	strh.w	r6, [sp, #34]	; 0x22
 8012c2c:	f7ff fee8 	bl	8012a00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012c30:	e9cd 9800 	strd	r9, r8, [sp]
 8012c34:	4603      	mov	r3, r0
 8012c36:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8012c3a:	4651      	mov	r1, sl
 8012c3c:	4620      	mov	r0, r4
 8012c3e:	f7ff ffbd 	bl	8012bbc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8012c42:	f89d 3074 	ldrb.w	r3, [sp, #116]	; 0x74
 8012c46:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012c4a:	2300      	movs	r3, #0
 8012c4c:	9007      	str	r0, [sp, #28]
 8012c4e:	f8ad 9026 	strh.w	r9, [sp, #38]	; 0x26
 8012c52:	f88d 5029 	strb.w	r5, [sp, #41]	; 0x29
 8012c56:	f88d 802a 	strb.w	r8, [sp, #42]	; 0x2a
 8012c5a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012c5e:	b107      	cbz	r7, 8012c62 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 8012c60:	b9d6      	cbnz	r6, 8012c98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbc>
 8012c62:	4b17      	ldr	r3, [pc, #92]	; (8012cc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 8012c64:	4a17      	ldr	r2, [pc, #92]	; (8012cc4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8012c66:	f240 11c9 	movw	r1, #457	; 0x1c9
 8012c6a:	4817      	ldr	r0, [pc, #92]	; (8012cc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 8012c6c:	f019 f9aa 	bl	802bfc4 <__assert_func>
 8012c70:	2d02      	cmp	r5, #2
 8012c72:	d108      	bne.n	8012c86 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 8012c74:	2bff      	cmp	r3, #255	; 0xff
 8012c76:	d104      	bne.n	8012c82 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa6>
 8012c78:	2800      	cmp	r0, #0
 8012c7a:	bf14      	ite	ne
 8012c7c:	2040      	movne	r0, #64	; 0x40
 8012c7e:	2020      	moveq	r0, #32
 8012c80:	e7c6      	b.n	8012c10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8012c82:	2040      	movs	r0, #64	; 0x40
 8012c84:	e7c4      	b.n	8012c10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8012c86:	2bff      	cmp	r3, #255	; 0xff
 8012c88:	d104      	bne.n	8012c94 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb8>
 8012c8a:	2800      	cmp	r0, #0
 8012c8c:	bf14      	ite	ne
 8012c8e:	2004      	movne	r0, #4
 8012c90:	2001      	moveq	r0, #1
 8012c92:	e7bd      	b.n	8012c10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8012c94:	2004      	movs	r0, #4
 8012c96:	e7bb      	b.n	8012c10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8012c98:	6823      	ldr	r3, [r4, #0]
 8012c9a:	9d03      	ldr	r5, [sp, #12]
 8012c9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012c9e:	4620      	mov	r0, r4
 8012ca0:	4798      	blx	r3
 8012ca2:	4228      	tst	r0, r5
 8012ca4:	d104      	bne.n	8012cb0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xd4>
 8012ca6:	4b09      	ldr	r3, [pc, #36]	; (8012ccc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xf0>)
 8012ca8:	4a06      	ldr	r2, [pc, #24]	; (8012cc4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8012caa:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 8012cae:	e7dc      	b.n	8012c6a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 8012cb0:	6860      	ldr	r0, [r4, #4]
 8012cb2:	6803      	ldr	r3, [r0, #0]
 8012cb4:	a903      	add	r1, sp, #12
 8012cb6:	685b      	ldr	r3, [r3, #4]
 8012cb8:	4798      	blx	r3
 8012cba:	b00c      	add	sp, #48	; 0x30
 8012cbc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012cc0:	08033327 	.word	0x08033327
 8012cc4:	080337af 	.word	0x080337af
 8012cc8:	080334d2 	.word	0x080334d2
 8012ccc:	0803335f 	.word	0x0803335f

08012cd0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8012cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cd4:	b08d      	sub	sp, #52	; 0x34
 8012cd6:	469b      	mov	fp, r3
 8012cd8:	f89d 7060 	ldrb.w	r7, [sp, #96]	; 0x60
 8012cdc:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 8012ce0:	f8bd 8064 	ldrh.w	r8, [sp, #100]	; 0x64
 8012ce4:	2fff      	cmp	r7, #255	; 0xff
 8012ce6:	bf14      	ite	ne
 8012ce8:	2308      	movne	r3, #8
 8012cea:	2302      	moveq	r3, #2
 8012cec:	2500      	movs	r5, #0
 8012cee:	4604      	mov	r4, r0
 8012cf0:	4689      	mov	r9, r1
 8012cf2:	4692      	mov	sl, r2
 8012cf4:	e9cd 3503 	strd	r3, r5, [sp, #12]
 8012cf8:	9506      	str	r5, [sp, #24]
 8012cfa:	f7ff fe81 	bl	8012a00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012cfe:	465a      	mov	r2, fp
 8012d00:	4603      	mov	r3, r0
 8012d02:	4651      	mov	r1, sl
 8012d04:	e9cd 8600 	strd	r8, r6, [sp]
 8012d08:	4620      	mov	r0, r4
 8012d0a:	f7ff ff57 	bl	8012bbc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8012d0e:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 8012d12:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012d16:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8012d1a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012d1e:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 8012d22:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012d26:	6823      	ldr	r3, [r4, #0]
 8012d28:	9007      	str	r0, [sp, #28]
 8012d2a:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8012d2e:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8012d32:	f8ad 8026 	strh.w	r8, [sp, #38]	; 0x26
 8012d36:	f8cd 9018 	str.w	r9, [sp, #24]
 8012d3a:	f88d 7028 	strb.w	r7, [sp, #40]	; 0x28
 8012d3e:	f88d 6029 	strb.w	r6, [sp, #41]	; 0x29
 8012d42:	f88d 602a 	strb.w	r6, [sp, #42]	; 0x2a
 8012d46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012d48:	9d03      	ldr	r5, [sp, #12]
 8012d4a:	4620      	mov	r0, r4
 8012d4c:	4798      	blx	r3
 8012d4e:	4228      	tst	r0, r5
 8012d50:	d106      	bne.n	8012d60 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x90>
 8012d52:	4b07      	ldr	r3, [pc, #28]	; (8012d70 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 8012d54:	4a07      	ldr	r2, [pc, #28]	; (8012d74 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 8012d56:	4808      	ldr	r0, [pc, #32]	; (8012d78 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa8>)
 8012d58:	f44f 710c 	mov.w	r1, #560	; 0x230
 8012d5c:	f019 f932 	bl	802bfc4 <__assert_func>
 8012d60:	6860      	ldr	r0, [r4, #4]
 8012d62:	6803      	ldr	r3, [r0, #0]
 8012d64:	a903      	add	r1, sp, #12
 8012d66:	685b      	ldr	r3, [r3, #4]
 8012d68:	4798      	blx	r3
 8012d6a:	b00d      	add	sp, #52	; 0x34
 8012d6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d70:	0803335f 	.word	0x0803335f
 8012d74:	08033886 	.word	0x08033886
 8012d78:	080334d2 	.word	0x080334d2

08012d7c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8012d7c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012d80:	461f      	mov	r7, r3
 8012d82:	4b0b      	ldr	r3, [pc, #44]	; (8012db0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8012d84:	460d      	mov	r5, r1
 8012d86:	f8b3 8000 	ldrh.w	r8, [r3]
 8012d8a:	4616      	mov	r6, r2
 8012d8c:	4604      	mov	r4, r0
 8012d8e:	f7ff fc77 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 8012d92:	6803      	ldr	r3, [r0, #0]
 8012d94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012d96:	4798      	blx	r3
 8012d98:	463b      	mov	r3, r7
 8012d9a:	e9cd 8000 	strd	r8, r0, [sp]
 8012d9e:	4632      	mov	r2, r6
 8012da0:	4629      	mov	r1, r5
 8012da2:	4620      	mov	r0, r4
 8012da4:	f7ff ff0a 	bl	8012bbc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8012da8:	b002      	add	sp, #8
 8012daa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012dae:	bf00      	nop
 8012db0:	2001e1ba 	.word	0x2001e1ba

08012db4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8012db4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012db8:	b08b      	sub	sp, #44	; 0x2c
 8012dba:	4699      	mov	r9, r3
 8012dbc:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8012dc0:	f8bd 7048 	ldrh.w	r7, [sp, #72]	; 0x48
 8012dc4:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8012dc8:	f8ad 7018 	strh.w	r7, [sp, #24]
 8012dcc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012dd0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012dd4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012dd8:	2500      	movs	r5, #0
 8012dda:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8012dde:	f88d 3020 	strb.w	r3, [sp, #32]
 8012de2:	4690      	mov	r8, r2
 8012de4:	4604      	mov	r4, r0
 8012de6:	9504      	str	r5, [sp, #16]
 8012de8:	f8ad 601a 	strh.w	r6, [sp, #26]
 8012dec:	f7ff fe08 	bl	8012a00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012df0:	464a      	mov	r2, r9
 8012df2:	4603      	mov	r3, r0
 8012df4:	4641      	mov	r1, r8
 8012df6:	4620      	mov	r0, r4
 8012df8:	f7ff ffc0 	bl	8012d7c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012dfc:	4b19      	ldr	r3, [pc, #100]	; (8012e64 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 8012dfe:	9005      	str	r0, [sp, #20]
 8012e00:	881b      	ldrh	r3, [r3, #0]
 8012e02:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012e06:	f7ff fc3b 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 8012e0a:	6803      	ldr	r3, [r0, #0]
 8012e0c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012e0e:	4798      	blx	r3
 8012e10:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8012e14:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8012e18:	b107      	cbz	r7, 8012e1c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 8012e1a:	b936      	cbnz	r6, 8012e2a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 8012e1c:	4b12      	ldr	r3, [pc, #72]	; (8012e68 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 8012e1e:	4a13      	ldr	r2, [pc, #76]	; (8012e6c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 8012e20:	f44f 71f3 	mov.w	r1, #486	; 0x1e6
 8012e24:	4812      	ldr	r0, [pc, #72]	; (8012e70 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 8012e26:	f019 f8cd 	bl	802bfc4 <__assert_func>
 8012e2a:	6823      	ldr	r3, [r4, #0]
 8012e2c:	9e01      	ldr	r6, [sp, #4]
 8012e2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012e30:	4620      	mov	r0, r4
 8012e32:	4798      	blx	r3
 8012e34:	4230      	tst	r0, r6
 8012e36:	d104      	bne.n	8012e42 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 8012e38:	4b0e      	ldr	r3, [pc, #56]	; (8012e74 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xc0>)
 8012e3a:	4a0c      	ldr	r2, [pc, #48]	; (8012e6c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 8012e3c:	f240 11e7 	movw	r1, #487	; 0x1e7
 8012e40:	e7f0      	b.n	8012e24 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 8012e42:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012e44:	9304      	str	r3, [sp, #16]
 8012e46:	6860      	ldr	r0, [r4, #4]
 8012e48:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8012e4c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8012e50:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8012e54:	6803      	ldr	r3, [r0, #0]
 8012e56:	a901      	add	r1, sp, #4
 8012e58:	685b      	ldr	r3, [r3, #4]
 8012e5a:	4798      	blx	r3
 8012e5c:	b00b      	add	sp, #44	; 0x2c
 8012e5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012e62:	bf00      	nop
 8012e64:	2001e1ba 	.word	0x2001e1ba
 8012e68:	08033327 	.word	0x08033327
 8012e6c:	0803365b 	.word	0x0803365b
 8012e70:	080334d2 	.word	0x080334d2
 8012e74:	0803335f 	.word	0x0803335f

08012e78 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8012e78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012e7a:	b08d      	sub	sp, #52	; 0x34
 8012e7c:	466b      	mov	r3, sp
 8012e7e:	e883 0006 	stmia.w	r3, {r1, r2}
 8012e82:	4b22      	ldr	r3, [pc, #136]	; (8012f0c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8012e84:	781b      	ldrb	r3, [r3, #0]
 8012e86:	4604      	mov	r4, r0
 8012e88:	b933      	cbnz	r3, 8012e98 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 8012e8a:	4b21      	ldr	r3, [pc, #132]	; (8012f10 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8012e8c:	4a21      	ldr	r2, [pc, #132]	; (8012f14 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8012e8e:	4822      	ldr	r0, [pc, #136]	; (8012f18 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 8012e90:	f240 2141 	movw	r1, #577	; 0x241
 8012e94:	f019 f896 	bl	802bfc4 <__assert_func>
 8012e98:	2300      	movs	r3, #0
 8012e9a:	9306      	str	r3, [sp, #24]
 8012e9c:	6803      	ldr	r3, [r0, #0]
 8012e9e:	f8bd 6000 	ldrh.w	r6, [sp]
 8012ea2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012ea4:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8012ea8:	2501      	movs	r5, #1
 8012eaa:	9503      	str	r5, [sp, #12]
 8012eac:	4798      	blx	r3
 8012eae:	463a      	mov	r2, r7
 8012eb0:	4631      	mov	r1, r6
 8012eb2:	4603      	mov	r3, r0
 8012eb4:	4620      	mov	r0, r4
 8012eb6:	f7ff ff61 	bl	8012d7c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012eba:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012ebc:	9307      	str	r3, [sp, #28]
 8012ebe:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012ec2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012ec6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012eca:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012ece:	4b13      	ldr	r3, [pc, #76]	; (8012f1c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa4>)
 8012ed0:	9004      	str	r0, [sp, #16]
 8012ed2:	881b      	ldrh	r3, [r3, #0]
 8012ed4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012ed8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012edc:	f7ff fbd0 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 8012ee0:	6803      	ldr	r3, [r0, #0]
 8012ee2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012ee4:	4798      	blx	r3
 8012ee6:	23ff      	movs	r3, #255	; 0xff
 8012ee8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8012eec:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012ef0:	6860      	ldr	r0, [r4, #4]
 8012ef2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012ef6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8012efa:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8012efe:	6803      	ldr	r3, [r0, #0]
 8012f00:	a903      	add	r1, sp, #12
 8012f02:	685b      	ldr	r3, [r3, #4]
 8012f04:	4798      	blx	r3
 8012f06:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012f08:	b00d      	add	sp, #52	; 0x34
 8012f0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012f0c:	2001e1bf 	.word	0x2001e1bf
 8012f10:	08033426 	.word	0x08033426
 8012f14:	08033705 	.word	0x08033705
 8012f18:	080334d2 	.word	0x080334d2
 8012f1c:	2001e1ba 	.word	0x2001e1ba

08012f20 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8012f20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f24:	b08c      	sub	sp, #48	; 0x30
 8012f26:	461e      	mov	r6, r3
 8012f28:	466d      	mov	r5, sp
 8012f2a:	2300      	movs	r3, #0
 8012f2c:	e885 0006 	stmia.w	r5, {r1, r2}
 8012f30:	9306      	str	r3, [sp, #24]
 8012f32:	6803      	ldr	r3, [r0, #0]
 8012f34:	f8bd 7000 	ldrh.w	r7, [sp]
 8012f38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012f3a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8012f3e:	2501      	movs	r5, #1
 8012f40:	9503      	str	r5, [sp, #12]
 8012f42:	4604      	mov	r4, r0
 8012f44:	4798      	blx	r3
 8012f46:	4642      	mov	r2, r8
 8012f48:	4639      	mov	r1, r7
 8012f4a:	4603      	mov	r3, r0
 8012f4c:	4620      	mov	r0, r4
 8012f4e:	f7ff ff15 	bl	8012d7c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012f52:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012f56:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012f5a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012f5e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012f62:	4b11      	ldr	r3, [pc, #68]	; (8012fa8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8012f64:	9004      	str	r0, [sp, #16]
 8012f66:	881b      	ldrh	r3, [r3, #0]
 8012f68:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012f6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012f6e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012f72:	9607      	str	r6, [sp, #28]
 8012f74:	f7ff fb84 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 8012f78:	6803      	ldr	r3, [r0, #0]
 8012f7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012f7c:	4798      	blx	r3
 8012f7e:	23ff      	movs	r3, #255	; 0xff
 8012f80:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8012f84:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012f88:	6860      	ldr	r0, [r4, #4]
 8012f8a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012f8e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8012f92:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8012f96:	6803      	ldr	r3, [r0, #0]
 8012f98:	a903      	add	r1, sp, #12
 8012f9a:	685b      	ldr	r3, [r3, #4]
 8012f9c:	4798      	blx	r3
 8012f9e:	4630      	mov	r0, r6
 8012fa0:	b00c      	add	sp, #48	; 0x30
 8012fa2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012fa6:	bf00      	nop
 8012fa8:	2001e1ba 	.word	0x2001e1ba

08012fac <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8012fac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012fae:	b085      	sub	sp, #20
 8012fb0:	ac02      	add	r4, sp, #8
 8012fb2:	e884 0006 	stmia.w	r4, {r1, r2}
 8012fb6:	4605      	mov	r5, r0
 8012fb8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8012fbc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8012fc0:	f7ff fd1e 	bl	8012a00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012fc4:	463a      	mov	r2, r7
 8012fc6:	4603      	mov	r3, r0
 8012fc8:	4631      	mov	r1, r6
 8012fca:	4628      	mov	r0, r5
 8012fcc:	f7ff fed6 	bl	8012d7c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012fd0:	4a05      	ldr	r2, [pc, #20]	; (8012fe8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8012fd2:	682b      	ldr	r3, [r5, #0]
 8012fd4:	8812      	ldrh	r2, [r2, #0]
 8012fd6:	9200      	str	r2, [sp, #0]
 8012fd8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8012fda:	e894 0006 	ldmia.w	r4, {r1, r2}
 8012fde:	4603      	mov	r3, r0
 8012fe0:	4628      	mov	r0, r5
 8012fe2:	47b0      	blx	r6
 8012fe4:	b005      	add	sp, #20
 8012fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012fe8:	2001e1ba 	.word	0x2001e1ba

08012fec <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8012fec:	b570      	push	{r4, r5, r6, lr}
 8012fee:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8012ff2:	4604      	mov	r4, r0
 8012ff4:	b19b      	cbz	r3, 801301e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8012ff6:	2002      	movs	r0, #2
 8012ff8:	f7ee f910 	bl	800121c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8012ffc:	2300      	movs	r3, #0
 8012ffe:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8013002:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8013006:	6823      	ldr	r3, [r4, #0]
 8013008:	4620      	mov	r0, r4
 801300a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801300e:	f7ff fcf7 	bl	8012a00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013012:	462b      	mov	r3, r5
 8013014:	4601      	mov	r1, r0
 8013016:	4620      	mov	r0, r4
 8013018:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801301c:	4718      	bx	r3
 801301e:	bd70      	pop	{r4, r5, r6, pc}

08013020 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8013020:	b538      	push	{r3, r4, r5, lr}
 8013022:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 8013026:	428b      	cmp	r3, r1
 8013028:	4604      	mov	r4, r0
 801302a:	460d      	mov	r5, r1
 801302c:	d006      	beq.n	801303c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801302e:	6803      	ldr	r3, [r0, #0]
 8013030:	b929      	cbnz	r1, 801303e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8013032:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013036:	4798      	blx	r3
 8013038:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 801303c:	bd38      	pop	{r3, r4, r5, pc}
 801303e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8013042:	e7f8      	b.n	8013036 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08013044 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8013044:	b510      	push	{r4, lr}
 8013046:	4b0d      	ldr	r3, [pc, #52]	; (801307c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8013048:	781b      	ldrb	r3, [r3, #0]
 801304a:	4604      	mov	r4, r0
 801304c:	b95b      	cbnz	r3, 8013066 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801304e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8013052:	2b02      	cmp	r3, #2
 8013054:	d007      	beq.n	8013066 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8013056:	6840      	ldr	r0, [r0, #4]
 8013058:	f000 f93c 	bl	80132d4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801305c:	b118      	cbz	r0, 8013066 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801305e:	6862      	ldr	r2, [r4, #4]
 8013060:	7a53      	ldrb	r3, [r2, #9]
 8013062:	2b00      	cmp	r3, #0
 8013064:	d0fc      	beq.n	8013060 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8013066:	f7ee f9d3 	bl	8001410 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801306a:	4620      	mov	r0, r4
 801306c:	2100      	movs	r1, #0
 801306e:	f7ff ffd7 	bl	8013020 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013072:	4620      	mov	r0, r4
 8013074:	f7ff fcc4 	bl	8012a00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013078:	bd10      	pop	{r4, pc}
 801307a:	bf00      	nop
 801307c:	2001e1be 	.word	0x2001e1be

08013080 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8013080:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8013084:	1a13      	subs	r3, r2, r0
 8013086:	4258      	negs	r0, r3
 8013088:	4158      	adcs	r0, r3
 801308a:	4770      	bx	lr

0801308c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 801308c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8013090:	1a9b      	subs	r3, r3, r2
 8013092:	2b00      	cmp	r3, #0
 8013094:	bfdc      	itt	le
 8013096:	6882      	ldrle	r2, [r0, #8]
 8013098:	189b      	addle	r3, r3, r2
 801309a:	2b01      	cmp	r3, #1
 801309c:	bfcc      	ite	gt
 801309e:	2000      	movgt	r0, #0
 80130a0:	2001      	movle	r0, #1
 80130a2:	4770      	bx	lr

080130a4 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80130a4:	6902      	ldr	r2, [r0, #16]
 80130a6:	6843      	ldr	r3, [r0, #4]
 80130a8:	2024      	movs	r0, #36	; 0x24
 80130aa:	fb00 3002 	mla	r0, r0, r2, r3
 80130ae:	4770      	bx	lr

080130b0 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80130b0:	6803      	ldr	r3, [r0, #0]
 80130b2:	691b      	ldr	r3, [r3, #16]
 80130b4:	4718      	bx	r3

080130b6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80130b6:	4770      	bx	lr

080130b8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80130b8:	4770      	bx	lr

080130ba <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80130ba:	4770      	bx	lr

080130bc <_ZN8touchgfx13DMA_Interface7executeEv>:
 80130bc:	b570      	push	{r4, r5, r6, lr}
 80130be:	2301      	movs	r3, #1
 80130c0:	7203      	strb	r3, [r0, #8]
 80130c2:	4604      	mov	r4, r0
 80130c4:	6840      	ldr	r0, [r0, #4]
 80130c6:	6803      	ldr	r3, [r0, #0]
 80130c8:	699b      	ldr	r3, [r3, #24]
 80130ca:	4798      	blx	r3
 80130cc:	6803      	ldr	r3, [r0, #0]
 80130ce:	2b40      	cmp	r3, #64	; 0x40
 80130d0:	4605      	mov	r5, r0
 80130d2:	d039      	beq.n	8013148 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80130d4:	d815      	bhi.n	8013102 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 80130d6:	2b04      	cmp	r3, #4
 80130d8:	d022      	beq.n	8013120 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80130da:	d808      	bhi.n	80130ee <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80130dc:	2b01      	cmp	r3, #1
 80130de:	d033      	beq.n	8013148 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80130e0:	2b02      	cmp	r3, #2
 80130e2:	d108      	bne.n	80130f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 80130e4:	6823      	ldr	r3, [r4, #0]
 80130e6:	4620      	mov	r0, r4
 80130e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80130ea:	4798      	blx	r3
 80130ec:	e025      	b.n	801313a <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 80130ee:	2b08      	cmp	r3, #8
 80130f0:	d01e      	beq.n	8013130 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 80130f2:	2b20      	cmp	r3, #32
 80130f4:	d028      	beq.n	8013148 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 80130f6:	4b17      	ldr	r3, [pc, #92]	; (8013154 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 80130f8:	4a17      	ldr	r2, [pc, #92]	; (8013158 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 80130fa:	4818      	ldr	r0, [pc, #96]	; (801315c <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 80130fc:	2188      	movs	r1, #136	; 0x88
 80130fe:	f018 ff61 	bl	802bfc4 <__assert_func>
 8013102:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8013106:	d01f      	beq.n	8013148 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8013108:	d804      	bhi.n	8013114 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 801310a:	2b80      	cmp	r3, #128	; 0x80
 801310c:	d01c      	beq.n	8013148 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 801310e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8013112:	e7ef      	b.n	80130f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 8013114:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8013118:	d016      	beq.n	8013148 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 801311a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801311e:	e7e0      	b.n	80130e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8013120:	6823      	ldr	r3, [r4, #0]
 8013122:	7f01      	ldrb	r1, [r0, #28]
 8013124:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013126:	4620      	mov	r0, r4
 8013128:	4798      	blx	r3
 801312a:	6823      	ldr	r3, [r4, #0]
 801312c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801312e:	e006      	b.n	801313e <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8013130:	6823      	ldr	r3, [r4, #0]
 8013132:	7f01      	ldrb	r1, [r0, #28]
 8013134:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013136:	4620      	mov	r0, r4
 8013138:	4798      	blx	r3
 801313a:	6823      	ldr	r3, [r4, #0]
 801313c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801313e:	4629      	mov	r1, r5
 8013140:	4620      	mov	r0, r4
 8013142:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013146:	4718      	bx	r3
 8013148:	6823      	ldr	r3, [r4, #0]
 801314a:	4620      	mov	r0, r4
 801314c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801314e:	4798      	blx	r3
 8013150:	e7eb      	b.n	801312a <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8013152:	bf00      	nop
 8013154:	0803396a 	.word	0x0803396a
 8013158:	08033a2c 	.word	0x08033a2c
 801315c:	0803398f 	.word	0x0803398f

08013160 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8013160:	b570      	push	{r4, r5, r6, lr}
 8013162:	4604      	mov	r4, r0
 8013164:	460e      	mov	r6, r1
 8013166:	6860      	ldr	r0, [r4, #4]
 8013168:	6803      	ldr	r3, [r0, #0]
 801316a:	685b      	ldr	r3, [r3, #4]
 801316c:	4798      	blx	r3
 801316e:	2800      	cmp	r0, #0
 8013170:	d1f9      	bne.n	8013166 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8013172:	4d0d      	ldr	r5, [pc, #52]	; (80131a8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8013174:	6828      	ldr	r0, [r5, #0]
 8013176:	6803      	ldr	r3, [r0, #0]
 8013178:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801317a:	4798      	blx	r3
 801317c:	f7ee f956 	bl	800142c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8013180:	6828      	ldr	r0, [r5, #0]
 8013182:	2101      	movs	r1, #1
 8013184:	f7ff ff4c 	bl	8013020 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013188:	6860      	ldr	r0, [r4, #4]
 801318a:	6803      	ldr	r3, [r0, #0]
 801318c:	4631      	mov	r1, r6
 801318e:	689b      	ldr	r3, [r3, #8]
 8013190:	4798      	blx	r3
 8013192:	6823      	ldr	r3, [r4, #0]
 8013194:	4620      	mov	r0, r4
 8013196:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013198:	4798      	blx	r3
 801319a:	6828      	ldr	r0, [r5, #0]
 801319c:	6803      	ldr	r3, [r0, #0]
 801319e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80131a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80131a4:	4718      	bx	r3
 80131a6:	bf00      	nop
 80131a8:	2001e1c0 	.word	0x2001e1c0

080131ac <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80131ac:	b508      	push	{r3, lr}
 80131ae:	f7ee f92f 	bl	8001410 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80131b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80131b6:	f7ee b933 	b.w	8001420 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080131ba <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80131ba:	b510      	push	{r4, lr}
 80131bc:	2114      	movs	r1, #20
 80131be:	4604      	mov	r4, r0
 80131c0:	f017 ffb3 	bl	802b12a <_ZdlPvj>
 80131c4:	4620      	mov	r0, r4
 80131c6:	bd10      	pop	{r4, pc}

080131c8 <_ZN8touchgfx13DMA_Interface5startEv>:
 80131c8:	b510      	push	{r4, lr}
 80131ca:	4604      	mov	r4, r0
 80131cc:	6840      	ldr	r0, [r0, #4]
 80131ce:	6803      	ldr	r3, [r0, #0]
 80131d0:	681b      	ldr	r3, [r3, #0]
 80131d2:	4798      	blx	r3
 80131d4:	b948      	cbnz	r0, 80131ea <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80131d6:	7a63      	ldrb	r3, [r4, #9]
 80131d8:	b13b      	cbz	r3, 80131ea <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80131da:	7a23      	ldrb	r3, [r4, #8]
 80131dc:	b92b      	cbnz	r3, 80131ea <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80131de:	6823      	ldr	r3, [r4, #0]
 80131e0:	4620      	mov	r0, r4
 80131e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80131e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80131e8:	4718      	bx	r3
 80131ea:	bd10      	pop	{r4, pc}

080131ec <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80131ec:	b510      	push	{r4, lr}
 80131ee:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80131f2:	1ad2      	subs	r2, r2, r3
 80131f4:	2a00      	cmp	r2, #0
 80131f6:	bfdc      	itt	le
 80131f8:	6884      	ldrle	r4, [r0, #8]
 80131fa:	1912      	addle	r2, r2, r4
 80131fc:	2a01      	cmp	r2, #1
 80131fe:	dd17      	ble.n	8013230 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x44>
 8013200:	6842      	ldr	r2, [r0, #4]
 8013202:	2424      	movs	r4, #36	; 0x24
 8013204:	fb04 2303 	mla	r3, r4, r3, r2
 8013208:	f101 0220 	add.w	r2, r1, #32
 801320c:	f851 4b04 	ldr.w	r4, [r1], #4
 8013210:	f843 4b04 	str.w	r4, [r3], #4
 8013214:	4291      	cmp	r1, r2
 8013216:	d1f9      	bne.n	801320c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8013218:	780a      	ldrb	r2, [r1, #0]
 801321a:	701a      	strb	r2, [r3, #0]
 801321c:	68c3      	ldr	r3, [r0, #12]
 801321e:	6882      	ldr	r2, [r0, #8]
 8013220:	f3bf 8f5b 	dmb	ish
 8013224:	3301      	adds	r3, #1
 8013226:	429a      	cmp	r2, r3
 8013228:	bfd8      	it	le
 801322a:	1a9b      	suble	r3, r3, r2
 801322c:	60c3      	str	r3, [r0, #12]
 801322e:	bd10      	pop	{r4, pc}
 8013230:	4b02      	ldr	r3, [pc, #8]	; (801323c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 8013232:	4a03      	ldr	r2, [pc, #12]	; (8013240 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 8013234:	4803      	ldr	r0, [pc, #12]	; (8013244 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 8013236:	2136      	movs	r1, #54	; 0x36
 8013238:	f018 fec4 	bl	802bfc4 <__assert_func>
 801323c:	080339b5 	.word	0x080339b5
 8013240:	08033a5c 	.word	0x08033a5c
 8013244:	0803398f 	.word	0x0803398f

08013248 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8013248:	b510      	push	{r4, lr}
 801324a:	6803      	ldr	r3, [r0, #0]
 801324c:	681b      	ldr	r3, [r3, #0]
 801324e:	4604      	mov	r4, r0
 8013250:	4798      	blx	r3
 8013252:	b128      	cbz	r0, 8013260 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 8013254:	4b07      	ldr	r3, [pc, #28]	; (8013274 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 8013256:	4a08      	ldr	r2, [pc, #32]	; (8013278 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 8013258:	4808      	ldr	r0, [pc, #32]	; (801327c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 801325a:	213c      	movs	r1, #60	; 0x3c
 801325c:	f018 feb2 	bl	802bfc4 <__assert_func>
 8013260:	6923      	ldr	r3, [r4, #16]
 8013262:	68a2      	ldr	r2, [r4, #8]
 8013264:	f3bf 8f5b 	dmb	ish
 8013268:	3301      	adds	r3, #1
 801326a:	429a      	cmp	r2, r3
 801326c:	bfd8      	it	le
 801326e:	1a9b      	suble	r3, r3, r2
 8013270:	6123      	str	r3, [r4, #16]
 8013272:	bd10      	pop	{r4, pc}
 8013274:	080339d8 	.word	0x080339d8
 8013278:	08033aaa 	.word	0x08033aaa
 801327c:	0803398f 	.word	0x0803398f

08013280 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8013280:	b570      	push	{r4, r5, r6, lr}
 8013282:	4604      	mov	r4, r0
 8013284:	6840      	ldr	r0, [r0, #4]
 8013286:	6803      	ldr	r3, [r0, #0]
 8013288:	681b      	ldr	r3, [r3, #0]
 801328a:	4798      	blx	r3
 801328c:	4605      	mov	r5, r0
 801328e:	b930      	cbnz	r0, 801329e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013290:	7a23      	ldrb	r3, [r4, #8]
 8013292:	b123      	cbz	r3, 801329e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013294:	6860      	ldr	r0, [r4, #4]
 8013296:	6803      	ldr	r3, [r0, #0]
 8013298:	695b      	ldr	r3, [r3, #20]
 801329a:	4798      	blx	r3
 801329c:	7225      	strb	r5, [r4, #8]
 801329e:	6860      	ldr	r0, [r4, #4]
 80132a0:	6803      	ldr	r3, [r0, #0]
 80132a2:	681b      	ldr	r3, [r3, #0]
 80132a4:	4798      	blx	r3
 80132a6:	b928      	cbnz	r0, 80132b4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80132a8:	6823      	ldr	r3, [r4, #0]
 80132aa:	4620      	mov	r0, r4
 80132ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80132ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80132b2:	4718      	bx	r3
 80132b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80132b8:	f7ee b8c0 	b.w	800143c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080132bc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80132bc:	b510      	push	{r4, lr}
 80132be:	4c04      	ldr	r4, [pc, #16]	; (80132d0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80132c0:	6082      	str	r2, [r0, #8]
 80132c2:	2200      	movs	r2, #0
 80132c4:	e9c0 4100 	strd	r4, r1, [r0]
 80132c8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80132cc:	bd10      	pop	{r4, pc}
 80132ce:	bf00      	nop
 80132d0:	08033a10 	.word	0x08033a10

080132d4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80132d4:	6840      	ldr	r0, [r0, #4]
 80132d6:	6803      	ldr	r3, [r0, #0]
 80132d8:	681b      	ldr	r3, [r3, #0]
 80132da:	4718      	bx	r3

080132dc <_ZN8touchgfx21AbstractPainterRGB56510renderNextERhS1_S1_S1_>:
 80132dc:	2000      	movs	r0, #0
 80132de:	4770      	bx	lr

080132e0 <_ZN8touchgfx19PainterRGB565Bitmap9setOffsetEss>:
 80132e0:	8541      	strh	r1, [r0, #42]	; 0x2a
 80132e2:	8582      	strh	r2, [r0, #44]	; 0x2c
 80132e4:	4770      	bx	lr

080132e6 <_ZN8touchgfx19PainterRGB565Bitmap8setTiledEb>:
 80132e6:	f880 102e 	strb.w	r1, [r0, #46]	; 0x2e
 80132ea:	4770      	bx	lr

080132ec <_ZN8touchgfx19PainterRGB565BitmapD1Ev>:
 80132ec:	4770      	bx	lr
	...

080132f0 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh>:
 80132f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132f4:	4413      	add	r3, r2
 80132f6:	eb01 0543 	add.w	r5, r1, r3, lsl #1
 80132fa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80132fe:	b085      	sub	sp, #20
 8013300:	441a      	add	r2, r3
 8013302:	f9b0 302a 	ldrsh.w	r3, [r0, #42]	; 0x2a
 8013306:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013308:	441a      	add	r2, r3
 801330a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801330e:	60c2      	str	r2, [r0, #12]
 8013310:	440b      	add	r3, r1
 8013312:	f9b0 102c 	ldrsh.w	r1, [r0, #44]	; 0x2c
 8013316:	440b      	add	r3, r1
 8013318:	6103      	str	r3, [r0, #16]
 801331a:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 801331e:	4604      	mov	r4, r0
 8013320:	e9dd 670f 	ldrd	r6, r7, [sp, #60]	; 0x3c
 8013324:	b953      	cbnz	r3, 801333c <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x4c>
 8013326:	2a00      	cmp	r2, #0
 8013328:	da08      	bge.n	801333c <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x4c>
 801332a:	4251      	negs	r1, r2
 801332c:	42b1      	cmp	r1, r6
 801332e:	f200 80c3 	bhi.w	80134b8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 8013332:	4416      	add	r6, r2
 8013334:	1abf      	subs	r7, r7, r2
 8013336:	eba5 0542 	sub.w	r5, r5, r2, lsl #1
 801333a:	60c3      	str	r3, [r0, #12]
 801333c:	6823      	ldr	r3, [r4, #0]
 801333e:	4620      	mov	r0, r4
 8013340:	68db      	ldr	r3, [r3, #12]
 8013342:	4798      	blx	r3
 8013344:	2800      	cmp	r0, #0
 8013346:	f000 80b7 	beq.w	80134b8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 801334a:	68e3      	ldr	r3, [r4, #12]
 801334c:	f9b4 2026 	ldrsh.w	r2, [r4, #38]	; 0x26
 8013350:	f894 102e 	ldrb.w	r1, [r4, #46]	; 0x2e
 8013354:	eba2 0a03 	sub.w	sl, r2, r3
 8013358:	b919      	cbnz	r1, 8013362 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x72>
 801335a:	4433      	add	r3, r6
 801335c:	4293      	cmp	r3, r2
 801335e:	bfc8      	it	gt
 8013360:	4656      	movgt	r6, sl
 8013362:	eb05 0346 	add.w	r3, r5, r6, lsl #1
 8013366:	9301      	str	r3, [sp, #4]
 8013368:	69a3      	ldr	r3, [r4, #24]
 801336a:	2b00      	cmp	r3, #0
 801336c:	f000 8179 	beq.w	8013662 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x372>
 8013370:	f104 0820 	add.w	r8, r4, #32
 8013374:	4640      	mov	r0, r8
 8013376:	f009 fabd 	bl	801c8f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801337a:	f9b4 2026 	ldrsh.w	r2, [r4, #38]	; 0x26
 801337e:	6923      	ldr	r3, [r4, #16]
 8013380:	4353      	muls	r3, r2
 8013382:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013386:	9302      	str	r3, [sp, #8]
 8013388:	69e3      	ldr	r3, [r4, #28]
 801338a:	2b00      	cmp	r3, #0
 801338c:	f000 80c9 	beq.w	8013522 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x232>
 8013390:	4640      	mov	r0, r8
 8013392:	f009 fae1 	bl	801c958 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013396:	f9b4 2026 	ldrsh.w	r2, [r4, #38]	; 0x26
 801339a:	6923      	ldr	r3, [r4, #16]
 801339c:	f894 e008 	ldrb.w	lr, [r4, #8]
 80133a0:	fb03 0302 	mla	r3, r3, r2, r0
 80133a4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80133a8:	9303      	str	r3, [sp, #12]
 80133aa:	d05d      	beq.n	8013468 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x178>
 80133ac:	f8df 8454 	ldr.w	r8, [pc, #1108]	; 8013804 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x514>
 80133b0:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80133b4:	45b2      	cmp	sl, r6
 80133b6:	bf28      	it	cs
 80133b8:	46b2      	movcs	sl, r6
 80133ba:	eb05 0b4a 	add.w	fp, r5, sl, lsl #1
 80133be:	eba6 060a 	sub.w	r6, r6, sl
 80133c2:	69e3      	ldr	r3, [r4, #28]
 80133c4:	f817 1b01 	ldrb.w	r1, [r7], #1
 80133c8:	1c5a      	adds	r2, r3, #1
 80133ca:	61e2      	str	r2, [r4, #28]
 80133cc:	781b      	ldrb	r3, [r3, #0]
 80133ce:	7a22      	ldrb	r2, [r4, #8]
 80133d0:	435a      	muls	r2, r3
 80133d2:	1c53      	adds	r3, r2, #1
 80133d4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80133d8:	121b      	asrs	r3, r3, #8
 80133da:	fb13 f301 	smulbb	r3, r3, r1
 80133de:	b29b      	uxth	r3, r3
 80133e0:	1c59      	adds	r1, r3, #1
 80133e2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80133e6:	1209      	asrs	r1, r1, #8
 80133e8:	d02e      	beq.n	8013448 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x158>
 80133ea:	69a3      	ldr	r3, [r4, #24]
 80133ec:	f8b5 e000 	ldrh.w	lr, [r5]
 80133f0:	881a      	ldrh	r2, [r3, #0]
 80133f2:	43c8      	mvns	r0, r1
 80133f4:	b2c0      	uxtb	r0, r0
 80133f6:	ea0e 0308 	and.w	r3, lr, r8
 80133fa:	ea02 0c08 	and.w	ip, r2, r8
 80133fe:	4343      	muls	r3, r0
 8013400:	f40e 6afc 	and.w	sl, lr, #2016	; 0x7e0
 8013404:	fb01 3c0c 	mla	ip, r1, ip, r3
 8013408:	fb00 fa0a 	mul.w	sl, r0, sl
 801340c:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 8013410:	f00e 0e1f 	and.w	lr, lr, #31
 8013414:	fb9c fcf9 	sdiv	ip, ip, r9
 8013418:	fb01 a303 	mla	r3, r1, r3, sl
 801341c:	ea0c 0c08 	and.w	ip, ip, r8
 8013420:	fb93 f3f9 	sdiv	r3, r3, r9
 8013424:	f002 021f 	and.w	r2, r2, #31
 8013428:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801342c:	fb00 fe0e 	mul.w	lr, r0, lr
 8013430:	ea4c 0c03 	orr.w	ip, ip, r3
 8013434:	fb01 e202 	mla	r2, r1, r2, lr
 8013438:	fb92 f3f9 	sdiv	r3, r2, r9
 801343c:	f003 031f 	and.w	r3, r3, #31
 8013440:	ea4c 0c03 	orr.w	ip, ip, r3
 8013444:	f8a5 c000 	strh.w	ip, [r5]
 8013448:	69a3      	ldr	r3, [r4, #24]
 801344a:	3502      	adds	r5, #2
 801344c:	3302      	adds	r3, #2
 801344e:	45ab      	cmp	fp, r5
 8013450:	61a3      	str	r3, [r4, #24]
 8013452:	d8b6      	bhi.n	80133c2 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0xd2>
 8013454:	9b02      	ldr	r3, [sp, #8]
 8013456:	61a3      	str	r3, [r4, #24]
 8013458:	9b03      	ldr	r3, [sp, #12]
 801345a:	61e3      	str	r3, [r4, #28]
 801345c:	9b01      	ldr	r3, [sp, #4]
 801345e:	f9b4 a026 	ldrsh.w	sl, [r4, #38]	; 0x26
 8013462:	42ab      	cmp	r3, r5
 8013464:	d8a6      	bhi.n	80133b4 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0xc4>
 8013466:	e027      	b.n	80134b8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 8013468:	f8df 9398 	ldr.w	r9, [pc, #920]	; 8013804 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x514>
 801346c:	45b2      	cmp	sl, r6
 801346e:	bf28      	it	cs
 8013470:	46b2      	movcs	sl, r6
 8013472:	eb05 0b4a 	add.w	fp, r5, sl, lsl #1
 8013476:	eba6 060a 	sub.w	r6, r6, sl
 801347a:	69e2      	ldr	r2, [r4, #28]
 801347c:	f817 1b01 	ldrb.w	r1, [r7], #1
 8013480:	1c53      	adds	r3, r2, #1
 8013482:	61e3      	str	r3, [r4, #28]
 8013484:	7813      	ldrb	r3, [r2, #0]
 8013486:	434b      	muls	r3, r1
 8013488:	1c59      	adds	r1, r3, #1
 801348a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801348e:	1209      	asrs	r1, r1, #8
 8013490:	29ff      	cmp	r1, #255	; 0xff
 8013492:	69a3      	ldr	r3, [r4, #24]
 8013494:	d113      	bne.n	80134be <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1ce>
 8013496:	881b      	ldrh	r3, [r3, #0]
 8013498:	802b      	strh	r3, [r5, #0]
 801349a:	69a3      	ldr	r3, [r4, #24]
 801349c:	3502      	adds	r5, #2
 801349e:	3302      	adds	r3, #2
 80134a0:	45ab      	cmp	fp, r5
 80134a2:	61a3      	str	r3, [r4, #24]
 80134a4:	d8e9      	bhi.n	801347a <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x18a>
 80134a6:	9b02      	ldr	r3, [sp, #8]
 80134a8:	61a3      	str	r3, [r4, #24]
 80134aa:	9b03      	ldr	r3, [sp, #12]
 80134ac:	61e3      	str	r3, [r4, #28]
 80134ae:	9b01      	ldr	r3, [sp, #4]
 80134b0:	f9b4 a026 	ldrsh.w	sl, [r4, #38]	; 0x26
 80134b4:	42ab      	cmp	r3, r5
 80134b6:	d8d9      	bhi.n	801346c <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x17c>
 80134b8:	b005      	add	sp, #20
 80134ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134be:	b2c8      	uxtb	r0, r1
 80134c0:	2900      	cmp	r1, #0
 80134c2:	d0ea      	beq.n	801349a <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1aa>
 80134c4:	f8b5 8000 	ldrh.w	r8, [r5]
 80134c8:	881a      	ldrh	r2, [r3, #0]
 80134ca:	43c0      	mvns	r0, r0
 80134cc:	b2c0      	uxtb	r0, r0
 80134ce:	ea08 0309 	and.w	r3, r8, r9
 80134d2:	ea02 0c09 	and.w	ip, r2, r9
 80134d6:	4343      	muls	r3, r0
 80134d8:	f408 6afc 	and.w	sl, r8, #2016	; 0x7e0
 80134dc:	fb01 3c0c 	mla	ip, r1, ip, r3
 80134e0:	fb00 fa0a 	mul.w	sl, r0, sl
 80134e4:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 80134e8:	f008 081f 	and.w	r8, r8, #31
 80134ec:	fb9c fcfe 	sdiv	ip, ip, lr
 80134f0:	fb01 a303 	mla	r3, r1, r3, sl
 80134f4:	ea0c 0c09 	and.w	ip, ip, r9
 80134f8:	fb93 f3fe 	sdiv	r3, r3, lr
 80134fc:	f002 021f 	and.w	r2, r2, #31
 8013500:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013504:	fb00 f808 	mul.w	r8, r0, r8
 8013508:	ea4c 0c03 	orr.w	ip, ip, r3
 801350c:	fb01 8202 	mla	r2, r1, r2, r8
 8013510:	fb92 f3fe 	sdiv	r3, r2, lr
 8013514:	f003 031f 	and.w	r3, r3, #31
 8013518:	ea4c 0c03 	orr.w	ip, ip, r3
 801351c:	f8a5 c000 	strh.w	ip, [r5]
 8013520:	e7bb      	b.n	801349a <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1aa>
 8013522:	f894 c008 	ldrb.w	ip, [r4, #8]
 8013526:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801352a:	d04f      	beq.n	80135cc <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2dc>
 801352c:	f8df 82d4 	ldr.w	r8, [pc, #724]	; 8013804 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x514>
 8013530:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8013534:	45b2      	cmp	sl, r6
 8013536:	bf28      	it	cs
 8013538:	46b2      	movcs	sl, r6
 801353a:	eb05 0b4a 	add.w	fp, r5, sl, lsl #1
 801353e:	eba6 060a 	sub.w	r6, r6, sl
 8013542:	f817 3b01 	ldrb.w	r3, [r7], #1
 8013546:	7a21      	ldrb	r1, [r4, #8]
 8013548:	f8b5 e000 	ldrh.w	lr, [r5]
 801354c:	434b      	muls	r3, r1
 801354e:	1c59      	adds	r1, r3, #1
 8013550:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8013554:	69a3      	ldr	r3, [r4, #24]
 8013556:	1209      	asrs	r1, r1, #8
 8013558:	881a      	ldrh	r2, [r3, #0]
 801355a:	43c8      	mvns	r0, r1
 801355c:	b2c0      	uxtb	r0, r0
 801355e:	ea0e 0308 	and.w	r3, lr, r8
 8013562:	4343      	muls	r3, r0
 8013564:	f40e 6afc 	and.w	sl, lr, #2016	; 0x7e0
 8013568:	ea02 0c08 	and.w	ip, r2, r8
 801356c:	fb01 3c0c 	mla	ip, r1, ip, r3
 8013570:	fb00 fa0a 	mul.w	sl, r0, sl
 8013574:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 8013578:	fb9c fcf9 	sdiv	ip, ip, r9
 801357c:	fb01 a303 	mla	r3, r1, r3, sl
 8013580:	ea0c 0c08 	and.w	ip, ip, r8
 8013584:	fb93 f3f9 	sdiv	r3, r3, r9
 8013588:	f00e 0e1f 	and.w	lr, lr, #31
 801358c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013590:	ea4c 0c03 	orr.w	ip, ip, r3
 8013594:	fb00 f00e 	mul.w	r0, r0, lr
 8013598:	f002 031f 	and.w	r3, r2, #31
 801359c:	fb01 0303 	mla	r3, r1, r3, r0
 80135a0:	fb93 f3f9 	sdiv	r3, r3, r9
 80135a4:	f003 031f 	and.w	r3, r3, #31
 80135a8:	ea4c 0c03 	orr.w	ip, ip, r3
 80135ac:	f825 cb02 	strh.w	ip, [r5], #2
 80135b0:	69a3      	ldr	r3, [r4, #24]
 80135b2:	45ab      	cmp	fp, r5
 80135b4:	f103 0302 	add.w	r3, r3, #2
 80135b8:	61a3      	str	r3, [r4, #24]
 80135ba:	d8c2      	bhi.n	8013542 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x252>
 80135bc:	9b02      	ldr	r3, [sp, #8]
 80135be:	61a3      	str	r3, [r4, #24]
 80135c0:	9b01      	ldr	r3, [sp, #4]
 80135c2:	f9b4 a026 	ldrsh.w	sl, [r4, #38]	; 0x26
 80135c6:	42ab      	cmp	r3, r5
 80135c8:	d8b4      	bhi.n	8013534 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x244>
 80135ca:	e775      	b.n	80134b8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 80135cc:	f8df 9234 	ldr.w	r9, [pc, #564]	; 8013804 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x514>
 80135d0:	45b2      	cmp	sl, r6
 80135d2:	bf28      	it	cs
 80135d4:	46b2      	movcs	sl, r6
 80135d6:	eb05 0b4a 	add.w	fp, r5, sl, lsl #1
 80135da:	eba6 060a 	sub.w	r6, r6, sl
 80135de:	f817 eb01 	ldrb.w	lr, [r7], #1
 80135e2:	69a3      	ldr	r3, [r4, #24]
 80135e4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80135e8:	881b      	ldrh	r3, [r3, #0]
 80135ea:	d10e      	bne.n	801360a <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x31a>
 80135ec:	802b      	strh	r3, [r5, #0]
 80135ee:	69a3      	ldr	r3, [r4, #24]
 80135f0:	3502      	adds	r5, #2
 80135f2:	3302      	adds	r3, #2
 80135f4:	45ab      	cmp	fp, r5
 80135f6:	61a3      	str	r3, [r4, #24]
 80135f8:	d8f1      	bhi.n	80135de <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2ee>
 80135fa:	9b02      	ldr	r3, [sp, #8]
 80135fc:	61a3      	str	r3, [r4, #24]
 80135fe:	9b01      	ldr	r3, [sp, #4]
 8013600:	f9b4 a026 	ldrsh.w	sl, [r4, #38]	; 0x26
 8013604:	42ab      	cmp	r3, r5
 8013606:	d8e3      	bhi.n	80135d0 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2e0>
 8013608:	e756      	b.n	80134b8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 801360a:	f8b5 8000 	ldrh.w	r8, [r5]
 801360e:	ea6f 010e 	mvn.w	r1, lr
 8013612:	b2c9      	uxtb	r1, r1
 8013614:	ea08 0209 	and.w	r2, r8, r9
 8013618:	434a      	muls	r2, r1
 801361a:	f408 6afc 	and.w	sl, r8, #2016	; 0x7e0
 801361e:	ea03 0009 	and.w	r0, r3, r9
 8013622:	fb0e 2000 	mla	r0, lr, r0, r2
 8013626:	fb01 fa0a 	mul.w	sl, r1, sl
 801362a:	f403 62fc 	and.w	r2, r3, #2016	; 0x7e0
 801362e:	fb90 f0fc 	sdiv	r0, r0, ip
 8013632:	fb0e a202 	mla	r2, lr, r2, sl
 8013636:	ea00 0009 	and.w	r0, r0, r9
 801363a:	fb92 f2fc 	sdiv	r2, r2, ip
 801363e:	f008 081f 	and.w	r8, r8, #31
 8013642:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013646:	4310      	orrs	r0, r2
 8013648:	fb01 f108 	mul.w	r1, r1, r8
 801364c:	f003 021f 	and.w	r2, r3, #31
 8013650:	fb0e 1202 	mla	r2, lr, r2, r1
 8013654:	fb92 f2fc 	sdiv	r2, r2, ip
 8013658:	f002 021f 	and.w	r2, r2, #31
 801365c:	4310      	orrs	r0, r2
 801365e:	8028      	strh	r0, [r5, #0]
 8013660:	e7c5      	b.n	80135ee <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2fe>
 8013662:	6963      	ldr	r3, [r4, #20]
 8013664:	2b00      	cmp	r3, #0
 8013666:	f43f af27 	beq.w	80134b8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 801366a:	f104 0020 	add.w	r0, r4, #32
 801366e:	f009 f941 	bl	801c8f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8013672:	f9b4 2026 	ldrsh.w	r2, [r4, #38]	; 0x26
 8013676:	6923      	ldr	r3, [r4, #16]
 8013678:	f894 e008 	ldrb.w	lr, [r4, #8]
 801367c:	4353      	muls	r3, r2
 801367e:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8013682:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8013686:	9302      	str	r3, [sp, #8]
 8013688:	d05a      	beq.n	8013740 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x450>
 801368a:	f8df 8178 	ldr.w	r8, [pc, #376]	; 8013804 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x514>
 801368e:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8013692:	45b2      	cmp	sl, r6
 8013694:	4653      	mov	r3, sl
 8013696:	bf28      	it	cs
 8013698:	4633      	movcs	r3, r6
 801369a:	eb05 0a43 	add.w	sl, r5, r3, lsl #1
 801369e:	1af6      	subs	r6, r6, r3
 80136a0:	6963      	ldr	r3, [r4, #20]
 80136a2:	7a21      	ldrb	r1, [r4, #8]
 80136a4:	681a      	ldr	r2, [r3, #0]
 80136a6:	0e13      	lsrs	r3, r2, #24
 80136a8:	4359      	muls	r1, r3
 80136aa:	1c4b      	adds	r3, r1, #1
 80136ac:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80136b0:	1219      	asrs	r1, r3, #8
 80136b2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80136b6:	fb13 f301 	smulbb	r3, r3, r1
 80136ba:	b29b      	uxth	r3, r3
 80136bc:	1c59      	adds	r1, r3, #1
 80136be:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80136c2:	1209      	asrs	r1, r1, #8
 80136c4:	d02e      	beq.n	8013724 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x434>
 80136c6:	f8b5 e000 	ldrh.w	lr, [r5]
 80136ca:	ea6f 0c01 	mvn.w	ip, r1
 80136ce:	fa5f fc8c 	uxtb.w	ip, ip
 80136d2:	ea0e 0308 	and.w	r3, lr, r8
 80136d6:	ea08 2012 	and.w	r0, r8, r2, lsr #8
 80136da:	fb0c f303 	mul.w	r3, ip, r3
 80136de:	b280      	uxth	r0, r0
 80136e0:	fb01 3000 	mla	r0, r1, r0, r3
 80136e4:	f40e 6bfc 	and.w	fp, lr, #2016	; 0x7e0
 80136e8:	0953      	lsrs	r3, r2, #5
 80136ea:	fb0c fb0b 	mul.w	fp, ip, fp
 80136ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80136f2:	fb90 f0f9 	sdiv	r0, r0, r9
 80136f6:	fb01 b303 	mla	r3, r1, r3, fp
 80136fa:	ea00 0008 	and.w	r0, r0, r8
 80136fe:	fb93 f3f9 	sdiv	r3, r3, r9
 8013702:	f00e 0e1f 	and.w	lr, lr, #31
 8013706:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801370a:	4318      	orrs	r0, r3
 801370c:	fb0c fc0e 	mul.w	ip, ip, lr
 8013710:	f3c2 03c4 	ubfx	r3, r2, #3, #5
 8013714:	fb01 c303 	mla	r3, r1, r3, ip
 8013718:	fb93 f3f9 	sdiv	r3, r3, r9
 801371c:	f003 031f 	and.w	r3, r3, #31
 8013720:	4318      	orrs	r0, r3
 8013722:	8028      	strh	r0, [r5, #0]
 8013724:	6963      	ldr	r3, [r4, #20]
 8013726:	3502      	adds	r5, #2
 8013728:	3304      	adds	r3, #4
 801372a:	45aa      	cmp	sl, r5
 801372c:	6163      	str	r3, [r4, #20]
 801372e:	d8b7      	bhi.n	80136a0 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x3b0>
 8013730:	9b02      	ldr	r3, [sp, #8]
 8013732:	6163      	str	r3, [r4, #20]
 8013734:	9b01      	ldr	r3, [sp, #4]
 8013736:	f9b4 a026 	ldrsh.w	sl, [r4, #38]	; 0x26
 801373a:	42ab      	cmp	r3, r5
 801373c:	d8a9      	bhi.n	8013692 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x3a2>
 801373e:	e6bb      	b.n	80134b8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 8013740:	f8df 90c0 	ldr.w	r9, [pc, #192]	; 8013804 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x514>
 8013744:	45b2      	cmp	sl, r6
 8013746:	4653      	mov	r3, sl
 8013748:	bf28      	it	cs
 801374a:	4633      	movcs	r3, r6
 801374c:	eb05 0a43 	add.w	sl, r5, r3, lsl #1
 8013750:	1af6      	subs	r6, r6, r3
 8013752:	6963      	ldr	r3, [r4, #20]
 8013754:	f817 2b01 	ldrb.w	r2, [r7], #1
 8013758:	681b      	ldr	r3, [r3, #0]
 801375a:	0e19      	lsrs	r1, r3, #24
 801375c:	434a      	muls	r2, r1
 801375e:	1c51      	adds	r1, r2, #1
 8013760:	eb01 2122 	add.w	r1, r1, r2, asr #8
 8013764:	1209      	asrs	r1, r1, #8
 8013766:	29ff      	cmp	r1, #255	; 0xff
 8013768:	d117      	bne.n	801379a <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x4aa>
 801376a:	0959      	lsrs	r1, r3, #5
 801376c:	ea09 2213 	and.w	r2, r9, r3, lsr #8
 8013770:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013774:	430a      	orrs	r2, r1
 8013776:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801377a:	4313      	orrs	r3, r2
 801377c:	802b      	strh	r3, [r5, #0]
 801377e:	6963      	ldr	r3, [r4, #20]
 8013780:	3502      	adds	r5, #2
 8013782:	3304      	adds	r3, #4
 8013784:	45aa      	cmp	sl, r5
 8013786:	6163      	str	r3, [r4, #20]
 8013788:	d8e3      	bhi.n	8013752 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x462>
 801378a:	9b02      	ldr	r3, [sp, #8]
 801378c:	6163      	str	r3, [r4, #20]
 801378e:	9b01      	ldr	r3, [sp, #4]
 8013790:	f9b4 a026 	ldrsh.w	sl, [r4, #38]	; 0x26
 8013794:	42ab      	cmp	r3, r5
 8013796:	d8d5      	bhi.n	8013744 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x454>
 8013798:	e68e      	b.n	80134b8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 801379a:	b2c8      	uxtb	r0, r1
 801379c:	2900      	cmp	r1, #0
 801379e:	d0ee      	beq.n	801377e <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x48e>
 80137a0:	f8b5 8000 	ldrh.w	r8, [r5]
 80137a4:	43c0      	mvns	r0, r0
 80137a6:	b2c0      	uxtb	r0, r0
 80137a8:	ea08 0209 	and.w	r2, r8, r9
 80137ac:	ea09 2c13 	and.w	ip, r9, r3, lsr #8
 80137b0:	4342      	muls	r2, r0
 80137b2:	fa1f fc8c 	uxth.w	ip, ip
 80137b6:	fb01 2c0c 	mla	ip, r1, ip, r2
 80137ba:	f408 6bfc 	and.w	fp, r8, #2016	; 0x7e0
 80137be:	095a      	lsrs	r2, r3, #5
 80137c0:	fb00 fb0b 	mul.w	fp, r0, fp
 80137c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80137c8:	fb9c fcfe 	sdiv	ip, ip, lr
 80137cc:	fb01 b202 	mla	r2, r1, r2, fp
 80137d0:	ea0c 0c09 	and.w	ip, ip, r9
 80137d4:	fb92 f2fe 	sdiv	r2, r2, lr
 80137d8:	f008 081f 	and.w	r8, r8, #31
 80137dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80137e0:	ea4c 0c02 	orr.w	ip, ip, r2
 80137e4:	fb00 f008 	mul.w	r0, r0, r8
 80137e8:	f3c3 02c4 	ubfx	r2, r3, #3, #5
 80137ec:	fb01 0202 	mla	r2, r1, r2, r0
 80137f0:	fb92 f2fe 	sdiv	r2, r2, lr
 80137f4:	f002 021f 	and.w	r2, r2, #31
 80137f8:	ea4c 0c02 	orr.w	ip, ip, r2
 80137fc:	f8a5 c000 	strh.w	ip, [r5]
 8013800:	e7bd      	b.n	801377e <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x48e>
 8013802:	bf00      	nop
 8013804:	fffff800 	.word	0xfffff800

08013808 <_ZN8touchgfx19PainterRGB565BitmapD0Ev>:
 8013808:	b510      	push	{r4, lr}
 801380a:	2130      	movs	r1, #48	; 0x30
 801380c:	4604      	mov	r4, r0
 801380e:	f017 fc8c 	bl	802b12a <_ZdlPvj>
 8013812:	4620      	mov	r0, r4
 8013814:	bd10      	pop	{r4, pc}
	...

08013818 <_ZNK8touchgfx6Bitmap5getIdEv>:
 8013818:	b508      	push	{r3, lr}
 801381a:	4b05      	ldr	r3, [pc, #20]	; (8013830 <_ZNK8touchgfx6Bitmap5getIdEv+0x18>)
 801381c:	681b      	ldr	r3, [r3, #0]
 801381e:	b92b      	cbnz	r3, 801382c <_ZNK8touchgfx6Bitmap5getIdEv+0x14>
 8013820:	4b04      	ldr	r3, [pc, #16]	; (8013834 <_ZNK8touchgfx6Bitmap5getIdEv+0x1c>)
 8013822:	4a05      	ldr	r2, [pc, #20]	; (8013838 <_ZNK8touchgfx6Bitmap5getIdEv+0x20>)
 8013824:	4805      	ldr	r0, [pc, #20]	; (801383c <_ZNK8touchgfx6Bitmap5getIdEv+0x24>)
 8013826:	2187      	movs	r1, #135	; 0x87
 8013828:	f018 fbcc 	bl	802bfc4 <__assert_func>
 801382c:	8800      	ldrh	r0, [r0, #0]
 801382e:	bd08      	pop	{r3, pc}
 8013830:	2001e268 	.word	0x2001e268
 8013834:	08033bd4 	.word	0x08033bd4
 8013838:	08033ca7 	.word	0x08033ca7
 801383c:	08033c10 	.word	0x08033c10

08013840 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv>:
 8013840:	b538      	push	{r3, r4, r5, lr}
 8013842:	2300      	movs	r3, #0
 8013844:	f100 0520 	add.w	r5, r0, #32
 8013848:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801384c:	61c3      	str	r3, [r0, #28]
 801384e:	4604      	mov	r4, r0
 8013850:	4628      	mov	r0, r5
 8013852:	f7ff ffe1 	bl	8013818 <_ZNK8touchgfx6Bitmap5getIdEv>
 8013856:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801385a:	4298      	cmp	r0, r3
 801385c:	d101      	bne.n	8013862 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x22>
 801385e:	2000      	movs	r0, #0
 8013860:	bd38      	pop	{r3, r4, r5, pc}
 8013862:	f894 202e 	ldrb.w	r2, [r4, #46]	; 0x2e
 8013866:	68e1      	ldr	r1, [r4, #12]
 8013868:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
 801386c:	b362      	cbz	r2, 80138c8 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x88>
 801386e:	fb91 f2f3 	sdiv	r2, r1, r3
 8013872:	fb03 1212 	mls	r2, r3, r2, r1
 8013876:	441a      	add	r2, r3
 8013878:	fb92 f1f3 	sdiv	r1, r2, r3
 801387c:	fb03 2311 	mls	r3, r3, r1, r2
 8013880:	f9b4 2028 	ldrsh.w	r2, [r4, #40]	; 0x28
 8013884:	6921      	ldr	r1, [r4, #16]
 8013886:	60e3      	str	r3, [r4, #12]
 8013888:	fb91 f3f2 	sdiv	r3, r1, r2
 801388c:	fb02 1313 	mls	r3, r2, r3, r1
 8013890:	4413      	add	r3, r2
 8013892:	fb93 f1f2 	sdiv	r1, r3, r2
 8013896:	fb02 3311 	mls	r3, r2, r1, r3
 801389a:	6123      	str	r3, [r4, #16]
 801389c:	4628      	mov	r0, r5
 801389e:	f009 f8b3 	bl	801ca08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80138a2:	2802      	cmp	r0, #2
 80138a4:	4628      	mov	r0, r5
 80138a6:	d119      	bne.n	80138dc <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x9c>
 80138a8:	f009 f824 	bl	801c8f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 80138ac:	6160      	str	r0, [r4, #20]
 80138ae:	2800      	cmp	r0, #0
 80138b0:	d0d5      	beq.n	801385e <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 80138b2:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 80138b6:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
 80138ba:	fb01 2303 	mla	r3, r1, r3, r2
 80138be:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80138c2:	6160      	str	r0, [r4, #20]
 80138c4:	2001      	movs	r0, #1
 80138c6:	e7cb      	b.n	8013860 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x20>
 80138c8:	4299      	cmp	r1, r3
 80138ca:	dac8      	bge.n	801385e <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 80138cc:	6923      	ldr	r3, [r4, #16]
 80138ce:	2b00      	cmp	r3, #0
 80138d0:	dbc5      	blt.n	801385e <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 80138d2:	f9b4 2028 	ldrsh.w	r2, [r4, #40]	; 0x28
 80138d6:	4293      	cmp	r3, r2
 80138d8:	dbe0      	blt.n	801389c <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x5c>
 80138da:	e7c0      	b.n	801385e <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 80138dc:	f009 f894 	bl	801ca08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80138e0:	2800      	cmp	r0, #0
 80138e2:	d1bc      	bne.n	801385e <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 80138e4:	4628      	mov	r0, r5
 80138e6:	f009 f805 	bl	801c8f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 80138ea:	61a0      	str	r0, [r4, #24]
 80138ec:	2800      	cmp	r0, #0
 80138ee:	d0b6      	beq.n	801385e <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 80138f0:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 80138f4:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
 80138f8:	fb01 2303 	mla	r3, r1, r3, r2
 80138fc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013900:	61a0      	str	r0, [r4, #24]
 8013902:	4628      	mov	r0, r5
 8013904:	f009 f828 	bl	801c958 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013908:	61e0      	str	r0, [r4, #28]
 801390a:	2800      	cmp	r0, #0
 801390c:	d0da      	beq.n	80138c4 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x84>
 801390e:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 8013912:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
 8013916:	fb01 2303 	mla	r3, r1, r3, r2
 801391a:	4418      	add	r0, r3
 801391c:	61e0      	str	r0, [r4, #28]
 801391e:	e7d1      	b.n	80138c4 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x84>

08013920 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>:
 8013920:	b570      	push	{r4, r5, r6, lr}
 8013922:	4604      	mov	r4, r0
 8013924:	880b      	ldrh	r3, [r1, #0]
 8013926:	f824 3f20 	strh.w	r3, [r4, #32]!
 801392a:	4605      	mov	r5, r0
 801392c:	4620      	mov	r0, r4
 801392e:	f7ff ff73 	bl	8013818 <_ZNK8touchgfx6Bitmap5getIdEv>
 8013932:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013936:	4298      	cmp	r0, r3
 8013938:	d00e      	beq.n	8013958 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x38>
 801393a:	4620      	mov	r0, r4
 801393c:	f009 f864 	bl	801ca08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013940:	b150      	cbz	r0, 8013958 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x38>
 8013942:	4620      	mov	r0, r4
 8013944:	f009 f860 	bl	801ca08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013948:	2802      	cmp	r0, #2
 801394a:	d005      	beq.n	8013958 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x38>
 801394c:	4b0b      	ldr	r3, [pc, #44]	; (801397c <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x5c>)
 801394e:	4a0c      	ldr	r2, [pc, #48]	; (8013980 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x60>)
 8013950:	480c      	ldr	r0, [pc, #48]	; (8013984 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x64>)
 8013952:	2119      	movs	r1, #25
 8013954:	f018 fb36 	bl	802bfc4 <__assert_func>
 8013958:	4620      	mov	r0, r4
 801395a:	f008 feaf 	bl	801c6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801395e:	4606      	mov	r6, r0
 8013960:	4620      	mov	r0, r4
 8013962:	f008 feef 	bl	801c744 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013966:	2300      	movs	r3, #0
 8013968:	8528      	strh	r0, [r5, #40]	; 0x28
 801396a:	846b      	strh	r3, [r5, #34]	; 0x22
 801396c:	84ab      	strh	r3, [r5, #36]	; 0x24
 801396e:	84ee      	strh	r6, [r5, #38]	; 0x26
 8013970:	f105 0022 	add.w	r0, r5, #34	; 0x22
 8013974:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013978:	f005 bb34 	b.w	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801397c:	08033ada 	.word	0x08033ada
 8013980:	08033c60 	.word	0x08033c60
 8013984:	08033b93 	.word	0x08033b93

08013988 <_ZN8touchgfx21AbstractPainterRGB56510renderInitEv>:
 8013988:	2001      	movs	r0, #1
 801398a:	4770      	bx	lr

0801398c <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh>:
 801398c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013990:	4413      	add	r3, r2
 8013992:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 8013996:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013998:	4d43      	ldr	r5, [pc, #268]	; (8013aa8 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x11c>)
 801399a:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
 801399e:	eb01 0e43 	add.w	lr, r1, r3, lsl #1
 80139a2:	6943      	ldr	r3, [r0, #20]
 80139a4:	095c      	lsrs	r4, r3, #5
 80139a6:	ea05 2213 	and.w	r2, r5, r3, lsr #8
 80139aa:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80139ae:	4322      	orrs	r2, r4
 80139b0:	7a04      	ldrb	r4, [r0, #8]
 80139b2:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80139b6:	431a      	orrs	r2, r3
 80139b8:	2cff      	cmp	r4, #255	; 0xff
 80139ba:	b292      	uxth	r2, r2
 80139bc:	d017      	beq.n	80139ee <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x62>
 80139be:	ea02 0305 	and.w	r3, r2, r5
 80139c2:	9301      	str	r3, [sp, #4]
 80139c4:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80139c8:	f402 6afc 	and.w	sl, r2, #2016	; 0x7e0
 80139cc:	f002 0b1f 	and.w	fp, r2, #31
 80139d0:	7a04      	ldrb	r4, [r0, #8]
 80139d2:	f818 3b01 	ldrb.w	r3, [r8], #1
 80139d6:	4363      	muls	r3, r4
 80139d8:	1c5c      	adds	r4, r3, #1
 80139da:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 80139de:	121b      	asrs	r3, r3, #8
 80139e0:	2bff      	cmp	r3, #255	; 0xff
 80139e2:	d13e      	bne.n	8013a62 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0xd6>
 80139e4:	800a      	strh	r2, [r1, #0]
 80139e6:	3102      	adds	r1, #2
 80139e8:	458e      	cmp	lr, r1
 80139ea:	d8f1      	bhi.n	80139d0 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x44>
 80139ec:	e00d      	b.n	8013a0a <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x7e>
 80139ee:	ea02 0605 	and.w	r6, r2, r5
 80139f2:	f402 67fc 	and.w	r7, r2, #2016	; 0x7e0
 80139f6:	f002 0c1f 	and.w	ip, r2, #31
 80139fa:	f818 0b01 	ldrb.w	r0, [r8], #1
 80139fe:	28ff      	cmp	r0, #255	; 0xff
 8013a00:	d106      	bne.n	8013a10 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x84>
 8013a02:	800a      	strh	r2, [r1, #0]
 8013a04:	3102      	adds	r1, #2
 8013a06:	458e      	cmp	lr, r1
 8013a08:	d8f7      	bhi.n	80139fa <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x6e>
 8013a0a:	b003      	add	sp, #12
 8013a0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a10:	f8b1 a000 	ldrh.w	sl, [r1]
 8013a14:	ea6f 0900 	mvn.w	r9, r0
 8013a18:	fa5f f989 	uxtb.w	r9, r9
 8013a1c:	ea0a 0305 	and.w	r3, sl, r5
 8013a20:	fb09 f303 	mul.w	r3, r9, r3
 8013a24:	fb00 3306 	mla	r3, r0, r6, r3
 8013a28:	fb93 f3f4 	sdiv	r3, r3, r4
 8013a2c:	ea03 0b05 	and.w	fp, r3, r5
 8013a30:	f40a 63fc 	and.w	r3, sl, #2016	; 0x7e0
 8013a34:	fb09 f303 	mul.w	r3, r9, r3
 8013a38:	f00a 0a1f 	and.w	sl, sl, #31
 8013a3c:	fb00 3307 	mla	r3, r0, r7, r3
 8013a40:	fb09 f90a 	mul.w	r9, r9, sl
 8013a44:	fb93 f3f4 	sdiv	r3, r3, r4
 8013a48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013a4c:	ea4b 0303 	orr.w	r3, fp, r3
 8013a50:	fb00 900c 	mla	r0, r0, ip, r9
 8013a54:	fb90 f0f4 	sdiv	r0, r0, r4
 8013a58:	f000 001f 	and.w	r0, r0, #31
 8013a5c:	4303      	orrs	r3, r0
 8013a5e:	800b      	strh	r3, [r1, #0]
 8013a60:	e7d0      	b.n	8013a04 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x78>
 8013a62:	f8b1 c000 	ldrh.w	ip, [r1]
 8013a66:	9c01      	ldr	r4, [sp, #4]
 8013a68:	43df      	mvns	r7, r3
 8013a6a:	b2ff      	uxtb	r7, r7
 8013a6c:	ea0c 0605 	and.w	r6, ip, r5
 8013a70:	437e      	muls	r6, r7
 8013a72:	fb03 6604 	mla	r6, r3, r4, r6
 8013a76:	f40c 64fc 	and.w	r4, ip, #2016	; 0x7e0
 8013a7a:	437c      	muls	r4, r7
 8013a7c:	fb96 f6f9 	sdiv	r6, r6, r9
 8013a80:	fb03 440a 	mla	r4, r3, sl, r4
 8013a84:	402e      	ands	r6, r5
 8013a86:	fb94 f4f9 	sdiv	r4, r4, r9
 8013a8a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8013a8e:	4334      	orrs	r4, r6
 8013a90:	f00c 061f 	and.w	r6, ip, #31
 8013a94:	437e      	muls	r6, r7
 8013a96:	fb03 660b 	mla	r6, r3, fp, r6
 8013a9a:	fb96 f6f9 	sdiv	r6, r6, r9
 8013a9e:	f006 061f 	and.w	r6, r6, #31
 8013aa2:	4334      	orrs	r4, r6
 8013aa4:	800c      	strh	r4, [r1, #0]
 8013aa6:	e79e      	b.n	80139e6 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x5a>
 8013aa8:	fffff800 	.word	0xfffff800

08013aac <_ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_>:
 8013aac:	b510      	push	{r4, lr}
 8013aae:	8ac4      	ldrh	r4, [r0, #22]
 8013ab0:	700c      	strb	r4, [r1, #0]
 8013ab2:	6941      	ldr	r1, [r0, #20]
 8013ab4:	0a09      	lsrs	r1, r1, #8
 8013ab6:	7011      	strb	r1, [r2, #0]
 8013ab8:	6942      	ldr	r2, [r0, #20]
 8013aba:	701a      	strb	r2, [r3, #0]
 8013abc:	9b02      	ldr	r3, [sp, #8]
 8013abe:	22ff      	movs	r2, #255	; 0xff
 8013ac0:	701a      	strb	r2, [r3, #0]
 8013ac2:	2001      	movs	r0, #1
 8013ac4:	bd10      	pop	{r4, pc}

08013ac6 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8013ac6:	4770      	bx	lr

08013ac8 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8013ac8:	b510      	push	{r4, lr}
 8013aca:	2118      	movs	r1, #24
 8013acc:	4604      	mov	r4, r0
 8013ace:	f017 fb2c 	bl	802b12a <_ZdlPvj>
 8013ad2:	4620      	mov	r0, r4
 8013ad4:	bd10      	pop	{r4, pc}

08013ad6 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh>:
 8013ad6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ada:	4616      	mov	r6, r2
 8013adc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8013ae0:	b085      	sub	sp, #20
 8013ae2:	4432      	add	r2, r6
 8013ae4:	60c2      	str	r2, [r0, #12]
 8013ae6:	4698      	mov	r8, r3
 8013ae8:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8013aec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013aee:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8013af0:	441a      	add	r2, r3
 8013af2:	6803      	ldr	r3, [r0, #0]
 8013af4:	6102      	str	r2, [r0, #16]
 8013af6:	68db      	ldr	r3, [r3, #12]
 8013af8:	4604      	mov	r4, r0
 8013afa:	460d      	mov	r5, r1
 8013afc:	4798      	blx	r3
 8013afe:	2800      	cmp	r0, #0
 8013b00:	d03b      	beq.n	8013b7a <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xa4>
 8013b02:	4446      	add	r6, r8
 8013b04:	eb05 0546 	add.w	r5, r5, r6, lsl #1
 8013b08:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8013b0a:	eb05 0646 	add.w	r6, r5, r6, lsl #1
 8013b0e:	6823      	ldr	r3, [r4, #0]
 8013b10:	f10d 020f 	add.w	r2, sp, #15
 8013b14:	9200      	str	r2, [sp, #0]
 8013b16:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8013b1a:	f10d 020d 	add.w	r2, sp, #13
 8013b1e:	f10d 030e 	add.w	r3, sp, #14
 8013b22:	a903      	add	r1, sp, #12
 8013b24:	4620      	mov	r0, r4
 8013b26:	47c0      	blx	r8
 8013b28:	b1f8      	cbz	r0, 8013b6a <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x94>
 8013b2a:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8013b2e:	7a20      	ldrb	r0, [r4, #8]
 8013b30:	f89d 200c 	ldrb.w	r2, [sp, #12]
 8013b34:	f89d c00e 	ldrb.w	ip, [sp, #14]
 8013b38:	4358      	muls	r0, r3
 8013b3a:	1c43      	adds	r3, r0, #1
 8013b3c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8013b40:	7838      	ldrb	r0, [r7, #0]
 8013b42:	121b      	asrs	r3, r3, #8
 8013b44:	fb10 f003 	smulbb	r0, r0, r3
 8013b48:	b283      	uxth	r3, r0
 8013b4a:	1c58      	adds	r0, r3, #1
 8013b4c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8013b50:	1200      	asrs	r0, r0, #8
 8013b52:	6823      	ldr	r3, [r4, #0]
 8013b54:	28ff      	cmp	r0, #255	; 0xff
 8013b56:	f8d3 8014 	ldr.w	r8, [r3, #20]
 8013b5a:	f89d 300d 	ldrb.w	r3, [sp, #13]
 8013b5e:	d10f      	bne.n	8013b80 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xaa>
 8013b60:	f8cd c000 	str.w	ip, [sp]
 8013b64:	4629      	mov	r1, r5
 8013b66:	4620      	mov	r0, r4
 8013b68:	47c0      	blx	r8
 8013b6a:	68e3      	ldr	r3, [r4, #12]
 8013b6c:	3502      	adds	r5, #2
 8013b6e:	3301      	adds	r3, #1
 8013b70:	42ae      	cmp	r6, r5
 8013b72:	f107 0701 	add.w	r7, r7, #1
 8013b76:	60e3      	str	r3, [r4, #12]
 8013b78:	d8c9      	bhi.n	8013b0e <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x38>
 8013b7a:	b005      	add	sp, #20
 8013b7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013b80:	8829      	ldrh	r1, [r5, #0]
 8013b82:	fa1f fe80 	uxth.w	lr, r0
 8013b86:	ea4f 2921 	mov.w	r9, r1, asr #8
 8013b8a:	43c0      	mvns	r0, r0
 8013b8c:	b2c0      	uxtb	r0, r0
 8013b8e:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8013b92:	fb12 f20e 	smulbb	r2, r2, lr
 8013b96:	fb09 2200 	mla	r2, r9, r0, r2
 8013b9a:	ea4f 09e1 	mov.w	r9, r1, asr #3
 8013b9e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013ba2:	fb13 f30e 	smulbb	r3, r3, lr
 8013ba6:	fb09 3300 	mla	r3, r9, r0, r3
 8013baa:	00c9      	lsls	r1, r1, #3
 8013bac:	b29b      	uxth	r3, r3
 8013bae:	b2c9      	uxtb	r1, r1
 8013bb0:	fb1c fc0e 	smulbb	ip, ip, lr
 8013bb4:	b292      	uxth	r2, r2
 8013bb6:	fb01 c000 	mla	r0, r1, r0, ip
 8013bba:	1c59      	adds	r1, r3, #1
 8013bbc:	b280      	uxth	r0, r0
 8013bbe:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8013bc2:	1c51      	adds	r1, r2, #1
 8013bc4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8013bc8:	1c41      	adds	r1, r0, #1
 8013bca:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8013bce:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8013bd2:	9000      	str	r0, [sp, #0]
 8013bd4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013bd8:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8013bdc:	e7c2      	b.n	8013b64 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x8e>
	...

08013be0 <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh>:
 8013be0:	f89d 0000 	ldrb.w	r0, [sp]
 8013be4:	00db      	lsls	r3, r3, #3
 8013be6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013bea:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 8013bee:	4803      	ldr	r0, [pc, #12]	; (8013bfc <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh+0x1c>)
 8013bf0:	ea00 2202 	and.w	r2, r0, r2, lsl #8
 8013bf4:	4313      	orrs	r3, r2
 8013bf6:	800b      	strh	r3, [r1, #0]
 8013bf8:	4770      	bx	lr
 8013bfa:	bf00      	nop
 8013bfc:	fffff800 	.word	0xfffff800

08013c00 <_ZN8touchgfx21AbstractPainterRGB565D1Ev>:
 8013c00:	4770      	bx	lr

08013c02 <_ZN8touchgfx21AbstractPainterRGB565D0Ev>:
 8013c02:	b510      	push	{r4, lr}
 8013c04:	2114      	movs	r1, #20
 8013c06:	4604      	mov	r4, r0
 8013c08:	f017 fa8f 	bl	802b12a <_ZdlPvj>
 8013c0c:	4620      	mov	r0, r4
 8013c0e:	bd10      	pop	{r4, pc}

08013c10 <_ZN8touchgfx6CircleD1Ev>:
 8013c10:	4770      	bx	lr

08013c12 <_ZN8touchgfx6CircleD0Ev>:
 8013c12:	b510      	push	{r4, lr}
 8013c14:	214c      	movs	r1, #76	; 0x4c
 8013c16:	4604      	mov	r4, r0
 8013c18:	f017 fa87 	bl	802b12a <_ZdlPvj>
 8013c1c:	4620      	mov	r0, r4
 8013c1e:	bd10      	pop	{r4, pc}

08013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8013c20:	b507      	push	{r0, r1, r2, lr}
 8013c22:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8013c26:	ab01      	add	r3, sp, #4
 8013c28:	6809      	ldr	r1, [r1, #0]
 8013c2a:	6800      	ldr	r0, [r0, #0]
 8013c2c:	f006 fd3a 	bl	801a6a4 <_ZN8touchgfx6muldivElllRl>
 8013c30:	b003      	add	sp, #12
 8013c32:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08013c38 <_ZN8touchgfx7CWRUtil4sineEi>:
 8013c38:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8013c3c:	fb90 f3f2 	sdiv	r3, r0, r2
 8013c40:	fb03 0312 	mls	r3, r3, r2, r0
 8013c44:	4413      	add	r3, r2
 8013c46:	fb93 f0f2 	sdiv	r0, r3, r2
 8013c4a:	fb02 3010 	mls	r0, r2, r0, r3
 8013c4e:	285a      	cmp	r0, #90	; 0x5a
 8013c50:	4b09      	ldr	r3, [pc, #36]	; (8013c78 <_ZN8touchgfx7CWRUtil4sineEi+0x40>)
 8013c52:	dc02      	bgt.n	8013c5a <_ZN8touchgfx7CWRUtil4sineEi+0x22>
 8013c54:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013c58:	4770      	bx	lr
 8013c5a:	28b4      	cmp	r0, #180	; 0xb4
 8013c5c:	dc02      	bgt.n	8013c64 <_ZN8touchgfx7CWRUtil4sineEi+0x2c>
 8013c5e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8013c62:	e7f7      	b.n	8013c54 <_ZN8touchgfx7CWRUtil4sineEi+0x1c>
 8013c64:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8013c68:	bfd4      	ite	le
 8013c6a:	38b4      	suble	r0, #180	; 0xb4
 8013c6c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8013c70:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013c74:	4240      	negs	r0, r0
 8013c76:	4770      	bx	lr
 8013c78:	08033d1c 	.word	0x08033d1c

08013c7c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8013c7c:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8013c80:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013c82:	fb90 f3f2 	sdiv	r3, r0, r2
 8013c86:	fb03 0012 	mls	r0, r3, r2, r0
 8013c8a:	4410      	add	r0, r2
 8013c8c:	fb90 f4f2 	sdiv	r4, r0, r2
 8013c90:	fb02 0414 	mls	r4, r2, r4, r0
 8013c94:	f004 061f 	and.w	r6, r4, #31
 8013c98:	1164      	asrs	r4, r4, #5
 8013c9a:	4620      	mov	r0, r4
 8013c9c:	f7ff ffcc 	bl	8013c38 <_ZN8touchgfx7CWRUtil4sineEi>
 8013ca0:	4605      	mov	r5, r0
 8013ca2:	b90e      	cbnz	r6, 8013ca8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x2c>
 8013ca4:	b002      	add	sp, #8
 8013ca6:	bd70      	pop	{r4, r5, r6, pc}
 8013ca8:	1c60      	adds	r0, r4, #1
 8013caa:	f7ff ffc5 	bl	8013c38 <_ZN8touchgfx7CWRUtil4sineEi>
 8013cae:	ab01      	add	r3, sp, #4
 8013cb0:	2220      	movs	r2, #32
 8013cb2:	4631      	mov	r1, r6
 8013cb4:	1b40      	subs	r0, r0, r5
 8013cb6:	f006 fcf5 	bl	801a6a4 <_ZN8touchgfx6muldivElllRl>
 8013cba:	4428      	add	r0, r5
 8013cbc:	e7f2      	b.n	8013ca4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>

08013cbe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8013cbe:	b508      	push	{r3, lr}
 8013cc0:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8013cc4:	f7ff ffda 	bl	8013c7c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013cc8:	bd08      	pop	{r3, pc}
	...

08013ccc <_ZN8touchgfx6CircleC1Ev>:
 8013ccc:	b510      	push	{r4, lr}
 8013cce:	4604      	mov	r4, r0
 8013cd0:	f000 fd22 	bl	8014718 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8013cd4:	4b08      	ldr	r3, [pc, #32]	; (8013cf8 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8013cd6:	6023      	str	r3, [r4, #0]
 8013cd8:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8013cdc:	2300      	movs	r3, #0
 8013cde:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
 8013ce2:	f24b 4205 	movw	r2, #46085	; 0xb405
 8013ce6:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
 8013cea:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 8013cee:	f8a4 2048 	strh.w	r2, [r4, #72]	; 0x48
 8013cf2:	60a3      	str	r3, [r4, #8]
 8013cf4:	4620      	mov	r0, r4
 8013cf6:	bd10      	pop	{r4, pc}
 8013cf8:	08033ddc 	.word	0x08033ddc

08013cfc <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 8013cfc:	29b4      	cmp	r1, #180	; 0xb4
 8013cfe:	bfa8      	it	ge
 8013d00:	21b4      	movge	r1, #180	; 0xb4
 8013d02:	2901      	cmp	r1, #1
 8013d04:	bfb8      	it	lt
 8013d06:	2101      	movlt	r1, #1
 8013d08:	f880 1049 	strb.w	r1, [r0, #73]	; 0x49
 8013d0c:	4770      	bx	lr

08013d0e <_ZNK8touchgfx6Circle15getCapPrecisionEv>:
 8013d0e:	f890 0049 	ldrb.w	r0, [r0, #73]	; 0x49
 8013d12:	4770      	bx	lr

08013d14 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 8013d14:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8013d18:	4606      	mov	r6, r0
 8013d1a:	6810      	ldr	r0, [r2, #0]
 8013d1c:	4698      	mov	r8, r3
 8013d1e:	4691      	mov	r9, r2
 8013d20:	460f      	mov	r7, r1
 8013d22:	f7ff ffab 	bl	8013c7c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013d26:	a902      	add	r1, sp, #8
 8013d28:	2402      	movs	r4, #2
 8013d2a:	f841 0d08 	str.w	r0, [r1, #-8]!
 8013d2e:	4640      	mov	r0, r8
 8013d30:	f7ff ff76 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d34:	6b35      	ldr	r5, [r6, #48]	; 0x30
 8013d36:	fb90 f0f4 	sdiv	r0, r0, r4
 8013d3a:	4405      	add	r5, r0
 8013d3c:	f8d9 0000 	ldr.w	r0, [r9]
 8013d40:	f7ff ffbd 	bl	8013cbe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013d44:	a902      	add	r1, sp, #8
 8013d46:	f841 0d04 	str.w	r0, [r1, #-4]!
 8013d4a:	4640      	mov	r0, r8
 8013d4c:	f7ff ff68 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d50:	6b72      	ldr	r2, [r6, #52]	; 0x34
 8013d52:	fb90 f0f4 	sdiv	r0, r0, r4
 8013d56:	4629      	mov	r1, r5
 8013d58:	1a12      	subs	r2, r2, r0
 8013d5a:	4638      	mov	r0, r7
 8013d5c:	f014 ffd9 	bl	8028d12 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8013d60:	b003      	add	sp, #12
 8013d62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08013d66 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>:
 8013d66:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8013d6a:	9e08      	ldr	r6, [sp, #32]
 8013d6c:	6830      	ldr	r0, [r6, #0]
 8013d6e:	4698      	mov	r8, r3
 8013d70:	4615      	mov	r5, r2
 8013d72:	460f      	mov	r7, r1
 8013d74:	f7ff ff82 	bl	8013c7c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013d78:	a902      	add	r1, sp, #8
 8013d7a:	2402      	movs	r4, #2
 8013d7c:	f841 0d08 	str.w	r0, [r1, #-8]!
 8013d80:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013d82:	f7ff ff4d 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d86:	682d      	ldr	r5, [r5, #0]
 8013d88:	fb90 f0f4 	sdiv	r0, r0, r4
 8013d8c:	4405      	add	r5, r0
 8013d8e:	6830      	ldr	r0, [r6, #0]
 8013d90:	f7ff ff95 	bl	8013cbe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013d94:	a902      	add	r1, sp, #8
 8013d96:	f841 0d04 	str.w	r0, [r1, #-4]!
 8013d9a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013d9c:	f7ff ff40 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013da0:	f8d8 2000 	ldr.w	r2, [r8]
 8013da4:	fb90 f0f4 	sdiv	r0, r0, r4
 8013da8:	4629      	mov	r1, r5
 8013daa:	1a12      	subs	r2, r2, r0
 8013dac:	4638      	mov	r0, r7
 8013dae:	f014 ff3f 	bl	8028c30 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013db2:	b002      	add	sp, #8
 8013db4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013db8 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 8013db8:	b513      	push	{r0, r1, r4, lr}
 8013dba:	e9cd 2300 	strd	r2, r3, [sp]
 8013dbe:	f100 0334 	add.w	r3, r0, #52	; 0x34
 8013dc2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8013dc6:	f7ff ffce 	bl	8013d66 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 8013dca:	b002      	add	sp, #8
 8013dcc:	bd10      	pop	{r4, pc}

08013dce <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 8013dce:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013dd0:	680e      	ldr	r6, [r1, #0]
 8013dd2:	681f      	ldr	r7, [r3, #0]
 8013dd4:	9807      	ldr	r0, [sp, #28]
 8013dd6:	e9dd 5405 	ldrd	r5, r4, [sp, #20]
 8013dda:	42be      	cmp	r6, r7
 8013ddc:	bfb8      	it	lt
 8013dde:	601e      	strlt	r6, [r3, #0]
 8013de0:	680b      	ldr	r3, [r1, #0]
 8013de2:	6829      	ldr	r1, [r5, #0]
 8013de4:	428b      	cmp	r3, r1
 8013de6:	bfc8      	it	gt
 8013de8:	602b      	strgt	r3, [r5, #0]
 8013dea:	6813      	ldr	r3, [r2, #0]
 8013dec:	6821      	ldr	r1, [r4, #0]
 8013dee:	428b      	cmp	r3, r1
 8013df0:	bfb8      	it	lt
 8013df2:	6023      	strlt	r3, [r4, #0]
 8013df4:	6813      	ldr	r3, [r2, #0]
 8013df6:	6802      	ldr	r2, [r0, #0]
 8013df8:	4293      	cmp	r3, r2
 8013dfa:	bfc8      	it	gt
 8013dfc:	6003      	strgt	r3, [r0, #0]
 8013dfe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013e00 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 8013e00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013e04:	4606      	mov	r6, r0
 8013e06:	b089      	sub	sp, #36	; 0x24
 8013e08:	6808      	ldr	r0, [r1, #0]
 8013e0a:	4690      	mov	r8, r2
 8013e0c:	461f      	mov	r7, r3
 8013e0e:	4689      	mov	r9, r1
 8013e10:	f7ff ff34 	bl	8013c7c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013e14:	ad08      	add	r5, sp, #32
 8013e16:	2402      	movs	r4, #2
 8013e18:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013e1c:	4640      	mov	r0, r8
 8013e1e:	4629      	mov	r1, r5
 8013e20:	f7ff fefe 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013e24:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8013e26:	fb90 f0f4 	sdiv	r0, r0, r4
 8013e2a:	4418      	add	r0, r3
 8013e2c:	9005      	str	r0, [sp, #20]
 8013e2e:	f8d9 0000 	ldr.w	r0, [r9]
 8013e32:	f7ff ff44 	bl	8013cbe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013e36:	4629      	mov	r1, r5
 8013e38:	9007      	str	r0, [sp, #28]
 8013e3a:	4640      	mov	r0, r8
 8013e3c:	f7ff fef0 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013e40:	fb90 f0f4 	sdiv	r0, r0, r4
 8013e44:	6b74      	ldr	r4, [r6, #52]	; 0x34
 8013e46:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013e48:	aa08      	add	r2, sp, #32
 8013e4a:	1a24      	subs	r4, r4, r0
 8013e4c:	f842 4d08 	str.w	r4, [r2, #-8]!
 8013e50:	9302      	str	r3, [sp, #8]
 8013e52:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013e54:	9301      	str	r3, [sp, #4]
 8013e56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013e58:	9300      	str	r3, [sp, #0]
 8013e5a:	a905      	add	r1, sp, #20
 8013e5c:	463b      	mov	r3, r7
 8013e5e:	4630      	mov	r0, r6
 8013e60:	f7ff ffb5 	bl	8013dce <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013e64:	b009      	add	sp, #36	; 0x24
 8013e66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08013e6a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8013e6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e6e:	4291      	cmp	r1, r2
 8013e70:	b08d      	sub	sp, #52	; 0x34
 8013e72:	e9cd 2106 	strd	r2, r1, [sp, #24]
 8013e76:	bfc8      	it	gt
 8013e78:	e9cd 1206 	strdgt	r1, r2, [sp, #24]
 8013e7c:	461e      	mov	r6, r3
 8013e7e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8013e82:	1a9b      	subs	r3, r3, r2
 8013e84:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8013e88:	bfa2      	ittt	ge
 8013e8a:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8013e8e:	2200      	movge	r2, #0
 8013e90:	e9cd 3206 	strdge	r3, r2, [sp, #24]
 8013e94:	6b82      	ldr	r2, [r0, #56]	; 0x38
 8013e96:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8013e98:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8013e9c:	ad0c      	add	r5, sp, #48	; 0x30
 8013e9e:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 8013ea2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013ea6:	f845 3d04 	str.w	r3, [r5, #-4]!
 8013eaa:	a907      	add	r1, sp, #28
 8013eac:	4633      	mov	r3, r6
 8013eae:	462a      	mov	r2, r5
 8013eb0:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8013eb4:	9700      	str	r7, [sp, #0]
 8013eb6:	4604      	mov	r4, r0
 8013eb8:	f7ff ffa2 	bl	8013e00 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013ebc:	9b07      	ldr	r3, [sp, #28]
 8013ebe:	f44f 6034 	mov.w	r0, #2880	; 0xb40
 8013ec2:	f103 0120 	add.w	r1, r3, #32
 8013ec6:	fb91 f3f0 	sdiv	r3, r1, r0
 8013eca:	fb00 1313 	mls	r3, r0, r3, r1
 8013ece:	1ac3      	subs	r3, r0, r3
 8013ed0:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 8013ed4:	fb93 f2f0 	sdiv	r2, r3, r0
 8013ed8:	fb00 3312 	mls	r3, r0, r2, r3
 8013edc:	440b      	add	r3, r1
 8013ede:	f84a 3d0c 	str.w	r3, [sl, #-12]!
 8013ee2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013ee4:	9906      	ldr	r1, [sp, #24]
 8013ee6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013ee8:	4291      	cmp	r1, r2
 8013eea:	db11      	blt.n	8013f10 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xa6>
 8013eec:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8013eee:	9700      	str	r7, [sp, #0]
 8013ef0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013ef4:	930b      	str	r3, [sp, #44]	; 0x2c
 8013ef6:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8013efa:	4633      	mov	r3, r6
 8013efc:	462a      	mov	r2, r5
 8013efe:	4651      	mov	r1, sl
 8013f00:	4620      	mov	r0, r4
 8013f02:	f7ff ff7d 	bl	8013e00 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013f06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f08:	f503 6334 	add.w	r3, r3, #2880	; 0xb40
 8013f0c:	9309      	str	r3, [sp, #36]	; 0x24
 8013f0e:	e7e8      	b.n	8013ee2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x78>
 8013f10:	f5a2 6234 	sub.w	r2, r2, #2880	; 0xb40
 8013f14:	4291      	cmp	r1, r2
 8013f16:	dd0c      	ble.n	8013f32 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xc8>
 8013f18:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8013f1a:	9700      	str	r7, [sp, #0]
 8013f1c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013f20:	930b      	str	r3, [sp, #44]	; 0x2c
 8013f22:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8013f26:	4633      	mov	r3, r6
 8013f28:	462a      	mov	r2, r5
 8013f2a:	a906      	add	r1, sp, #24
 8013f2c:	4620      	mov	r0, r4
 8013f2e:	f7ff ff67 	bl	8013e00 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013f32:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013f34:	2b00      	cmp	r3, #0
 8013f36:	f040 8097 	bne.w	8014068 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1fe>
 8013f3a:	e9dd 2106 	ldrd	r2, r1, [sp, #24]
 8013f3e:	1a52      	subs	r2, r2, r1
 8013f40:	f5b2 5f34 	cmp.w	r2, #11520	; 0x2d00
 8013f44:	da0a      	bge.n	8013f5c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xf2>
 8013f46:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8013f4a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8013f4e:	9700      	str	r7, [sp, #0]
 8013f50:	4633      	mov	r3, r6
 8013f52:	462a      	mov	r2, r5
 8013f54:	a90a      	add	r1, sp, #40	; 0x28
 8013f56:	4620      	mov	r0, r4
 8013f58:	f7ff ff52 	bl	8013e00 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013f5c:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 8013f60:	2bb3      	cmp	r3, #179	; 0xb3
 8013f62:	d87e      	bhi.n	8014062 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 8013f64:	e9dd 3006 	ldrd	r3, r0, [sp, #24]
 8013f68:	1a1b      	subs	r3, r3, r0
 8013f6a:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8013f6e:	da78      	bge.n	8014062 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 8013f70:	f7ff fe84 	bl	8013c7c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013f74:	ad0c      	add	r5, sp, #48	; 0x30
 8013f76:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 8013f7a:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013f7e:	4658      	mov	r0, fp
 8013f80:	4629      	mov	r1, r5
 8013f82:	f7ff fe4d 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013f86:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8013f88:	18c3      	adds	r3, r0, r3
 8013f8a:	9807      	ldr	r0, [sp, #28]
 8013f8c:	9305      	str	r3, [sp, #20]
 8013f8e:	f7ff fe96 	bl	8013cbe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013f92:	4629      	mov	r1, r5
 8013f94:	900b      	str	r0, [sp, #44]	; 0x2c
 8013f96:	4658      	mov	r0, fp
 8013f98:	f7ff fe42 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013f9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8013f9e:	9a05      	ldr	r2, [sp, #20]
 8013fa0:	9700      	str	r7, [sp, #0]
 8013fa2:	1a1b      	subs	r3, r3, r0
 8013fa4:	f04f 0a02 	mov.w	sl, #2
 8013fa8:	9304      	str	r3, [sp, #16]
 8013faa:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013fac:	fb93 f3fa 	sdiv	r3, r3, sl
 8013fb0:	1ad2      	subs	r2, r2, r3
 8013fb2:	920a      	str	r2, [sp, #40]	; 0x28
 8013fb4:	9a04      	ldr	r2, [sp, #16]
 8013fb6:	1ad3      	subs	r3, r2, r3
 8013fb8:	930b      	str	r3, [sp, #44]	; 0x2c
 8013fba:	462a      	mov	r2, r5
 8013fbc:	4633      	mov	r3, r6
 8013fbe:	a90a      	add	r1, sp, #40	; 0x28
 8013fc0:	4620      	mov	r0, r4
 8013fc2:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8013fc6:	f7ff ff02 	bl	8013dce <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013fca:	9a05      	ldr	r2, [sp, #20]
 8013fcc:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013fce:	fb93 f3fa 	sdiv	r3, r3, sl
 8013fd2:	189a      	adds	r2, r3, r2
 8013fd4:	920a      	str	r2, [sp, #40]	; 0x28
 8013fd6:	9a04      	ldr	r2, [sp, #16]
 8013fd8:	9700      	str	r7, [sp, #0]
 8013fda:	4413      	add	r3, r2
 8013fdc:	a90a      	add	r1, sp, #40	; 0x28
 8013fde:	462a      	mov	r2, r5
 8013fe0:	930b      	str	r3, [sp, #44]	; 0x2c
 8013fe2:	4620      	mov	r0, r4
 8013fe4:	4633      	mov	r3, r6
 8013fe6:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8013fea:	f7ff fef0 	bl	8013dce <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013fee:	9806      	ldr	r0, [sp, #24]
 8013ff0:	f7ff fe44 	bl	8013c7c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013ff4:	4629      	mov	r1, r5
 8013ff6:	900b      	str	r0, [sp, #44]	; 0x2c
 8013ff8:	4658      	mov	r0, fp
 8013ffa:	f7ff fe11 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013ffe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014000:	18c3      	adds	r3, r0, r3
 8014002:	9806      	ldr	r0, [sp, #24]
 8014004:	9304      	str	r3, [sp, #16]
 8014006:	f7ff fe5a 	bl	8013cbe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801400a:	4629      	mov	r1, r5
 801400c:	900b      	str	r0, [sp, #44]	; 0x2c
 801400e:	4658      	mov	r0, fp
 8014010:	f7ff fe06 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014014:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8014016:	9a04      	ldr	r2, [sp, #16]
 8014018:	9700      	str	r7, [sp, #0]
 801401a:	eba3 0b00 	sub.w	fp, r3, r0
 801401e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8014020:	fb93 f3fa 	sdiv	r3, r3, sl
 8014024:	1ad2      	subs	r2, r2, r3
 8014026:	ebab 0303 	sub.w	r3, fp, r3
 801402a:	920a      	str	r2, [sp, #40]	; 0x28
 801402c:	930b      	str	r3, [sp, #44]	; 0x2c
 801402e:	462a      	mov	r2, r5
 8014030:	4633      	mov	r3, r6
 8014032:	a90a      	add	r1, sp, #40	; 0x28
 8014034:	4620      	mov	r0, r4
 8014036:	e9cd 8901 	strd	r8, r9, [sp, #4]
 801403a:	f7ff fec8 	bl	8013dce <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 801403e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8014040:	fb93 fafa 	sdiv	sl, r3, sl
 8014044:	9b04      	ldr	r3, [sp, #16]
 8014046:	9700      	str	r7, [sp, #0]
 8014048:	4453      	add	r3, sl
 801404a:	930a      	str	r3, [sp, #40]	; 0x28
 801404c:	eb0a 030b 	add.w	r3, sl, fp
 8014050:	930b      	str	r3, [sp, #44]	; 0x2c
 8014052:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8014056:	4633      	mov	r3, r6
 8014058:	462a      	mov	r2, r5
 801405a:	a90a      	add	r1, sp, #40	; 0x28
 801405c:	4620      	mov	r0, r4
 801405e:	f7ff feb6 	bl	8013dce <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8014062:	b00d      	add	sp, #52	; 0x34
 8014064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014068:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801406a:	9700      	str	r7, [sp, #0]
 801406c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014070:	930b      	str	r3, [sp, #44]	; 0x2c
 8014072:	462a      	mov	r2, r5
 8014074:	4633      	mov	r3, r6
 8014076:	a907      	add	r1, sp, #28
 8014078:	e9cd 8901 	strd	r8, r9, [sp, #4]
 801407c:	4620      	mov	r0, r4
 801407e:	f7ff febf 	bl	8013e00 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8014082:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014084:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8014086:	9700      	str	r7, [sp, #0]
 8014088:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 801408c:	930b      	str	r3, [sp, #44]	; 0x2c
 801408e:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8014092:	4633      	mov	r3, r6
 8014094:	462a      	mov	r2, r5
 8014096:	a906      	add	r1, sp, #24
 8014098:	e75d      	b.n	8013f56 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xec>

0801409a <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 801409a:	b530      	push	{r4, r5, lr}
 801409c:	4604      	mov	r4, r0
 801409e:	4608      	mov	r0, r1
 80140a0:	4611      	mov	r1, r2
 80140a2:	461a      	mov	r2, r3
 80140a4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80140a8:	b089      	sub	sp, #36	; 0x24
 80140aa:	015b      	lsls	r3, r3, #5
 80140ac:	9304      	str	r3, [sp, #16]
 80140ae:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80140b2:	2500      	movs	r5, #0
 80140b4:	015b      	lsls	r3, r3, #5
 80140b6:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80140ba:	ab07      	add	r3, sp, #28
 80140bc:	9302      	str	r3, [sp, #8]
 80140be:	ab06      	add	r3, sp, #24
 80140c0:	9301      	str	r3, [sp, #4]
 80140c2:	ab05      	add	r3, sp, #20
 80140c4:	9300      	str	r3, [sp, #0]
 80140c6:	ab04      	add	r3, sp, #16
 80140c8:	9505      	str	r5, [sp, #20]
 80140ca:	f7ff fece 	bl	8013e6a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80140ce:	2520      	movs	r5, #32
 80140d0:	9a04      	ldr	r2, [sp, #16]
 80140d2:	9805      	ldr	r0, [sp, #20]
 80140d4:	fb92 f2f5 	sdiv	r2, r2, r5
 80140d8:	fb90 f0f5 	sdiv	r0, r0, r5
 80140dc:	b292      	uxth	r2, r2
 80140de:	3002      	adds	r0, #2
 80140e0:	1a80      	subs	r0, r0, r2
 80140e2:	9b06      	ldr	r3, [sp, #24]
 80140e4:	9907      	ldr	r1, [sp, #28]
 80140e6:	fb93 f3f5 	sdiv	r3, r3, r5
 80140ea:	fb91 f1f5 	sdiv	r1, r1, r5
 80140ee:	b29b      	uxth	r3, r3
 80140f0:	3102      	adds	r1, #2
 80140f2:	1ac9      	subs	r1, r1, r3
 80140f4:	3a01      	subs	r2, #1
 80140f6:	3b01      	subs	r3, #1
 80140f8:	80a0      	strh	r0, [r4, #4]
 80140fa:	4620      	mov	r0, r4
 80140fc:	8022      	strh	r2, [r4, #0]
 80140fe:	8063      	strh	r3, [r4, #2]
 8014100:	80e1      	strh	r1, [r4, #6]
 8014102:	b009      	add	sp, #36	; 0x24
 8014104:	bd30      	pop	{r4, r5, pc}

08014106 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8014106:	b510      	push	{r4, lr}
 8014108:	e9d1 230f 	ldrd	r2, r3, [r1, #60]	; 0x3c
 801410c:	4604      	mov	r4, r0
 801410e:	f7ff ffc4 	bl	801409a <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8014112:	4620      	mov	r0, r4
 8014114:	bd10      	pop	{r4, pc}

08014116 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8014116:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014118:	e9d1 540f 	ldrd	r5, r4, [r1, #60]	; 0x3c
 801411c:	4606      	mov	r6, r0
 801411e:	f891 0048 	ldrb.w	r0, [r1, #72]	; 0x48
 8014122:	6813      	ldr	r3, [r2, #0]
 8014124:	42a5      	cmp	r5, r4
 8014126:	ea4f 1040 	mov.w	r0, r0, lsl #5
 801412a:	da2b      	bge.n	8014184 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 801412c:	42a3      	cmp	r3, r4
 801412e:	dd14      	ble.n	801415a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8014130:	b168      	cbz	r0, 801414e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8014132:	4267      	negs	r7, r4
 8014134:	fb97 f2f0 	sdiv	r2, r7, r0
 8014138:	fb00 7212 	mls	r2, r0, r2, r7
 801413c:	1a82      	subs	r2, r0, r2
 801413e:	fb92 f7f0 	sdiv	r7, r2, r0
 8014142:	fb00 2017 	mls	r0, r0, r7, r2
 8014146:	1a24      	subs	r4, r4, r0
 8014148:	42ac      	cmp	r4, r5
 801414a:	bfb8      	it	lt
 801414c:	462c      	movlt	r4, r5
 801414e:	4630      	mov	r0, r6
 8014150:	4622      	mov	r2, r4
 8014152:	f7ff ffa2 	bl	801409a <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8014156:	4630      	mov	r0, r6
 8014158:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801415a:	42ab      	cmp	r3, r5
 801415c:	dd0e      	ble.n	801417c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 801415e:	b168      	cbz	r0, 801417c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8014160:	425f      	negs	r7, r3
 8014162:	fb97 f2f0 	sdiv	r2, r7, r0
 8014166:	fb00 7212 	mls	r2, r0, r2, r7
 801416a:	1a82      	subs	r2, r0, r2
 801416c:	fb92 f7f0 	sdiv	r7, r2, r0
 8014170:	fb00 2017 	mls	r0, r0, r7, r2
 8014174:	1a1b      	subs	r3, r3, r0
 8014176:	42ab      	cmp	r3, r5
 8014178:	bfb8      	it	lt
 801417a:	462b      	movlt	r3, r5
 801417c:	4622      	mov	r2, r4
 801417e:	461c      	mov	r4, r3
 8014180:	4613      	mov	r3, r2
 8014182:	e7e4      	b.n	801414e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8014184:	42a3      	cmp	r3, r4
 8014186:	da10      	bge.n	80141aa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8014188:	b148      	cbz	r0, 801419e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 801418a:	fb94 f2f0 	sdiv	r2, r4, r0
 801418e:	fb00 4212 	mls	r2, r0, r2, r4
 8014192:	1a82      	subs	r2, r0, r2
 8014194:	fb92 f7f0 	sdiv	r7, r2, r0
 8014198:	fb00 2017 	mls	r0, r0, r7, r2
 801419c:	4404      	add	r4, r0
 801419e:	42a5      	cmp	r5, r4
 80141a0:	bfa8      	it	ge
 80141a2:	4625      	movge	r5, r4
 80141a4:	461c      	mov	r4, r3
 80141a6:	462b      	mov	r3, r5
 80141a8:	e7d1      	b.n	801414e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80141aa:	42ab      	cmp	r3, r5
 80141ac:	dacf      	bge.n	801414e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80141ae:	2800      	cmp	r0, #0
 80141b0:	d0cd      	beq.n	801414e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80141b2:	fb93 f2f0 	sdiv	r2, r3, r0
 80141b6:	fb00 3212 	mls	r2, r0, r2, r3
 80141ba:	1a82      	subs	r2, r0, r2
 80141bc:	fb92 f7f0 	sdiv	r7, r2, r0
 80141c0:	fb00 2017 	mls	r0, r0, r7, r2
 80141c4:	4403      	add	r3, r0
 80141c6:	42ab      	cmp	r3, r5
 80141c8:	bfa8      	it	ge
 80141ca:	462b      	movge	r3, r5
 80141cc:	e7bf      	b.n	801414e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080141ce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80141ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80141d2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 80141d4:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80141d6:	f9b0 7030 	ldrsh.w	r7, [r0, #48]	; 0x30
 80141da:	f9b0 8034 	ldrsh.w	r8, [r0, #52]	; 0x34
 80141de:	b0ba      	sub	sp, #232	; 0xe8
 80141e0:	4293      	cmp	r3, r2
 80141e2:	9303      	str	r3, [sp, #12]
 80141e4:	9204      	str	r2, [sp, #16]
 80141e6:	bfc8      	it	gt
 80141e8:	e9cd 2303 	strdgt	r2, r3, [sp, #12]
 80141ec:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 80141f0:	1a9b      	subs	r3, r3, r2
 80141f2:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80141f6:	bfa2      	ittt	ge
 80141f8:	2200      	movge	r2, #0
 80141fa:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80141fe:	e9cd 2303 	strdge	r2, r3, [sp, #12]
 8014202:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8014204:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014206:	4689      	mov	r9, r1
 8014208:	4604      	mov	r4, r0
 801420a:	2120      	movs	r1, #32
 801420c:	fb97 f7f1 	sdiv	r7, r7, r1
 8014210:	fb98 f8f1 	sdiv	r8, r8, r1
 8014214:	2a00      	cmp	r2, #0
 8014216:	d053      	beq.n	80142c0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf2>
 8014218:	f9b9 0000 	ldrsh.w	r0, [r9]
 801421c:	f9b9 1002 	ldrsh.w	r1, [r9, #2]
 8014220:	1a3d      	subs	r5, r7, r0
 8014222:	ea85 7ce5 	eor.w	ip, r5, r5, asr #31
 8014226:	ebac 7ce5 	sub.w	ip, ip, r5, asr #31
 801422a:	f8b9 5004 	ldrh.w	r5, [r9, #4]
 801422e:	eba8 0601 	sub.w	r6, r8, r1
 8014232:	4405      	add	r5, r0
 8014234:	ea86 70e6 	eor.w	r0, r6, r6, asr #31
 8014238:	eba0 70e6 	sub.w	r0, r0, r6, asr #31
 801423c:	f8b9 6006 	ldrh.w	r6, [r9, #6]
 8014240:	b22d      	sxth	r5, r5
 8014242:	440e      	add	r6, r1
 8014244:	1b7d      	subs	r5, r7, r5
 8014246:	b236      	sxth	r6, r6
 8014248:	eba8 0606 	sub.w	r6, r8, r6
 801424c:	2d00      	cmp	r5, #0
 801424e:	bfb8      	it	lt
 8014250:	426d      	neglt	r5, r5
 8014252:	2e00      	cmp	r6, #0
 8014254:	bfb8      	it	lt
 8014256:	4276      	neglt	r6, r6
 8014258:	4565      	cmp	r5, ip
 801425a:	bfb4      	ite	lt
 801425c:	f10c 0501 	addlt.w	r5, ip, #1
 8014260:	3501      	addge	r5, #1
 8014262:	4286      	cmp	r6, r0
 8014264:	bfb8      	it	lt
 8014266:	1c46      	addlt	r6, r0, #1
 8014268:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 801426c:	f100 0001 	add.w	r0, r0, #1
 8014270:	ea4f 0060 	mov.w	r0, r0, asr #1
 8014274:	f04f 0a02 	mov.w	sl, #2
 8014278:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801427c:	fb92 f2fa 	sdiv	r2, r2, sl
 8014280:	eba3 0302 	sub.w	r3, r3, r2
 8014284:	bfa8      	it	ge
 8014286:	3601      	addge	r6, #1
 8014288:	930a      	str	r3, [sp, #40]	; 0x28
 801428a:	f7ff fcd5 	bl	8013c38 <_ZN8touchgfx7CWRUtil4sineEi>
 801428e:	a93a      	add	r1, sp, #232	; 0xe8
 8014290:	4376      	muls	r6, r6
 8014292:	f841 0dbc 	str.w	r0, [r1, #-188]!
 8014296:	a80a      	add	r0, sp, #40	; 0x28
 8014298:	f7ff fcc2 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801429c:	fb05 6505 	mla	r5, r5, r5, r6
 80142a0:	2120      	movs	r1, #32
 80142a2:	fb90 f0f1 	sdiv	r0, r0, r1
 80142a6:	4340      	muls	r0, r0
 80142a8:	4285      	cmp	r5, r0
 80142aa:	da04      	bge.n	80142b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
 80142ac:	2401      	movs	r4, #1
 80142ae:	4620      	mov	r0, r4
 80142b0:	b03a      	add	sp, #232	; 0xe8
 80142b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80142b6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80142b8:	fb92 f3fa 	sdiv	r3, r2, sl
 80142bc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80142be:	4413      	add	r3, r2
 80142c0:	fb93 f3f1 	sdiv	r3, r3, r1
 80142c4:	f8b9 2004 	ldrh.w	r2, [r9, #4]
 80142c8:	f9b9 1000 	ldrsh.w	r1, [r9]
 80142cc:	440a      	add	r2, r1
 80142ce:	b212      	sxth	r2, r2
 80142d0:	42ba      	cmp	r2, r7
 80142d2:	bfa8      	it	ge
 80142d4:	463a      	movge	r2, r7
 80142d6:	428a      	cmp	r2, r1
 80142d8:	bfac      	ite	ge
 80142da:	1abf      	subge	r7, r7, r2
 80142dc:	1a7f      	sublt	r7, r7, r1
 80142de:	f8b9 2006 	ldrh.w	r2, [r9, #6]
 80142e2:	f9b9 1002 	ldrsh.w	r1, [r9, #2]
 80142e6:	440a      	add	r2, r1
 80142e8:	b212      	sxth	r2, r2
 80142ea:	4542      	cmp	r2, r8
 80142ec:	bfa8      	it	ge
 80142ee:	4642      	movge	r2, r8
 80142f0:	428a      	cmp	r2, r1
 80142f2:	bfac      	ite	ge
 80142f4:	eba8 0802 	subge.w	r8, r8, r2
 80142f8:	eba8 0801 	sublt.w	r8, r8, r1
 80142fc:	3301      	adds	r3, #1
 80142fe:	fb08 f808 	mul.w	r8, r8, r8
 8014302:	fb07 8707 	mla	r7, r7, r7, r8
 8014306:	435b      	muls	r3, r3
 8014308:	429f      	cmp	r7, r3
 801430a:	dccf      	bgt.n	80142ac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xde>
 801430c:	464a      	mov	r2, r9
 801430e:	4621      	mov	r1, r4
 8014310:	a80b      	add	r0, sp, #44	; 0x2c
 8014312:	f014 fb33 	bl	802897c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8014316:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014318:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801431a:	9205      	str	r2, [sp, #20]
 801431c:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8014320:	9306      	str	r3, [sp, #24]
 8014322:	dd07      	ble.n	8014334 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x166>
 8014324:	2102      	movs	r1, #2
 8014326:	fb93 f3f1 	sdiv	r3, r3, r1
 801432a:	4413      	add	r3, r2
 801432c:	9306      	str	r3, [sp, #24]
 801432e:	fb93 f3f1 	sdiv	r3, r3, r1
 8014332:	9305      	str	r3, [sp, #20]
 8014334:	9b03      	ldr	r3, [sp, #12]
 8014336:	9307      	str	r3, [sp, #28]
 8014338:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 801433c:	ad3a      	add	r5, sp, #232	; 0xe8
 801433e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014342:	f894 6048 	ldrb.w	r6, [r4, #72]	; 0x48
 8014346:	f845 3dc0 	str.w	r3, [r5, #-192]!
 801434a:	aa07      	add	r2, sp, #28
 801434c:	462b      	mov	r3, r5
 801434e:	a90b      	add	r1, sp, #44	; 0x2c
 8014350:	4620      	mov	r0, r4
 8014352:	0176      	lsls	r6, r6, #5
 8014354:	f7ff fcde 	bl	8013d14 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 8014358:	9f07      	ldr	r7, [sp, #28]
 801435a:	b996      	cbnz	r6, 8014382 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1b4>
 801435c:	3720      	adds	r7, #32
 801435e:	9a04      	ldr	r2, [sp, #16]
 8014360:	9b06      	ldr	r3, [sp, #24]
 8014362:	4639      	mov	r1, r7
 8014364:	4291      	cmp	r1, r2
 8014366:	4437      	add	r7, r6
 8014368:	dc18      	bgt.n	801439c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ce>
 801436a:	9a05      	ldr	r2, [sp, #20]
 801436c:	9107      	str	r1, [sp, #28]
 801436e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014372:	930a      	str	r3, [sp, #40]	; 0x28
 8014374:	aa07      	add	r2, sp, #28
 8014376:	462b      	mov	r3, r5
 8014378:	a90b      	add	r1, sp, #44	; 0x2c
 801437a:	4620      	mov	r0, r4
 801437c:	f7ff fd1c 	bl	8013db8 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 8014380:	e7ed      	b.n	801435e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x190>
 8014382:	f107 0320 	add.w	r3, r7, #32
 8014386:	fb93 f7f6 	sdiv	r7, r3, r6
 801438a:	fb06 3717 	mls	r7, r6, r7, r3
 801438e:	1bf2      	subs	r2, r6, r7
 8014390:	fb92 f7f6 	sdiv	r7, r2, r6
 8014394:	fb06 2717 	mls	r7, r6, r7, r2
 8014398:	441f      	add	r7, r3
 801439a:	e7e0      	b.n	801435e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x190>
 801439c:	9907      	ldr	r1, [sp, #28]
 801439e:	428a      	cmp	r2, r1
 80143a0:	dd09      	ble.n	80143b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e8>
 80143a2:	9a05      	ldr	r2, [sp, #20]
 80143a4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80143a8:	930a      	str	r3, [sp, #40]	; 0x28
 80143aa:	aa04      	add	r2, sp, #16
 80143ac:	462b      	mov	r3, r5
 80143ae:	a90b      	add	r1, sp, #44	; 0x2c
 80143b0:	4620      	mov	r0, r4
 80143b2:	f7ff fd01 	bl	8013db8 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 80143b6:	e9dd 3003 	ldrd	r3, r0, [sp, #12]
 80143ba:	9a06      	ldr	r2, [sp, #24]
 80143bc:	1ac3      	subs	r3, r0, r3
 80143be:	b982      	cbnz	r2, 80143e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x214>
 80143c0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80143c4:	da04      	bge.n	80143d0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x202>
 80143c6:	e9d4 120c 	ldrd	r1, r2, [r4, #48]	; 0x30
 80143ca:	a80b      	add	r0, sp, #44	; 0x2c
 80143cc:	f014 fc30 	bl	8028c30 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80143d0:	21ff      	movs	r1, #255	; 0xff
 80143d2:	a80b      	add	r0, sp, #44	; 0x2c
 80143d4:	f014 fda1 	bl	8028f1a <_ZN8touchgfx6Canvas6renderEh>
 80143d8:	4604      	mov	r4, r0
 80143da:	a80b      	add	r0, sp, #44	; 0x2c
 80143dc:	f014 fddc 	bl	8028f98 <_ZN8touchgfx6CanvasD1Ev>
 80143e0:	e765      	b.n	80142ae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe0>
 80143e2:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
 80143e6:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80143ea:	ea4f 1747 	mov.w	r7, r7, lsl #5
 80143ee:	da2b      	bge.n	8014448 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x27a>
 80143f0:	f7ff fc44 	bl	8013c7c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80143f4:	4629      	mov	r1, r5
 80143f6:	900a      	str	r0, [sp, #40]	; 0x28
 80143f8:	a805      	add	r0, sp, #20
 80143fa:	f7ff fc11 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80143fe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014400:	4418      	add	r0, r3
 8014402:	9008      	str	r0, [sp, #32]
 8014404:	9804      	ldr	r0, [sp, #16]
 8014406:	f7ff fc5a 	bl	8013cbe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801440a:	4629      	mov	r1, r5
 801440c:	900a      	str	r0, [sp, #40]	; 0x28
 801440e:	a805      	add	r0, sp, #20
 8014410:	f7ff fc06 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014414:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8014416:	1a18      	subs	r0, r3, r0
 8014418:	9b04      	ldr	r3, [sp, #16]
 801441a:	9009      	str	r0, [sp, #36]	; 0x24
 801441c:	443b      	add	r3, r7
 801441e:	930a      	str	r3, [sp, #40]	; 0x28
 8014420:	f10d 0818 	add.w	r8, sp, #24
 8014424:	9b04      	ldr	r3, [sp, #16]
 8014426:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014428:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 801442c:	4293      	cmp	r3, r2
 801442e:	dd0b      	ble.n	8014448 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x27a>
 8014430:	ab09      	add	r3, sp, #36	; 0x24
 8014432:	e9cd 5800 	strd	r5, r8, [sp]
 8014436:	aa08      	add	r2, sp, #32
 8014438:	a90b      	add	r1, sp, #44	; 0x2c
 801443a:	4620      	mov	r0, r4
 801443c:	f7ff fc93 	bl	8013d66 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 8014440:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014442:	443b      	add	r3, r7
 8014444:	930a      	str	r3, [sp, #40]	; 0x28
 8014446:	e7ed      	b.n	8014424 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x256>
 8014448:	9a04      	ldr	r2, [sp, #16]
 801444a:	9b07      	ldr	r3, [sp, #28]
 801444c:	429a      	cmp	r2, r3
 801444e:	dd0a      	ble.n	8014466 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x298>
 8014450:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 8014454:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014458:	930a      	str	r3, [sp, #40]	; 0x28
 801445a:	aa04      	add	r2, sp, #16
 801445c:	462b      	mov	r3, r5
 801445e:	a90b      	add	r1, sp, #44	; 0x2c
 8014460:	4620      	mov	r0, r4
 8014462:	f7ff fca9 	bl	8013db8 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 8014466:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801446a:	9b03      	ldr	r3, [sp, #12]
 801446c:	4642      	mov	r2, r8
 801446e:	429a      	cmp	r2, r3
 8014470:	eba8 0806 	sub.w	r8, r8, r6
 8014474:	db0c      	blt.n	8014490 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8014476:	9207      	str	r2, [sp, #28]
 8014478:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 801447c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014480:	930a      	str	r3, [sp, #40]	; 0x28
 8014482:	aa07      	add	r2, sp, #28
 8014484:	462b      	mov	r3, r5
 8014486:	a90b      	add	r1, sp, #44	; 0x2c
 8014488:	4620      	mov	r0, r4
 801448a:	f7ff fc95 	bl	8013db8 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 801448e:	e7ec      	b.n	801446a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x29c>
 8014490:	9a07      	ldr	r2, [sp, #28]
 8014492:	4293      	cmp	r3, r2
 8014494:	da0a      	bge.n	80144ac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2de>
 8014496:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 801449a:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 801449e:	930a      	str	r3, [sp, #40]	; 0x28
 80144a0:	aa03      	add	r2, sp, #12
 80144a2:	462b      	mov	r3, r5
 80144a4:	a90b      	add	r1, sp, #44	; 0x2c
 80144a6:	4620      	mov	r0, r4
 80144a8:	f7ff fc86 	bl	8013db8 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 80144ac:	e9dd 0303 	ldrd	r0, r3, [sp, #12]
 80144b0:	1a1b      	subs	r3, r3, r0
 80144b2:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80144b6:	da8b      	bge.n	80143d0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x202>
 80144b8:	f7ff fbe0 	bl	8013c7c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80144bc:	4629      	mov	r1, r5
 80144be:	900a      	str	r0, [sp, #40]	; 0x28
 80144c0:	a805      	add	r0, sp, #20
 80144c2:	f7ff fbad 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80144c6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80144c8:	4418      	add	r0, r3
 80144ca:	9008      	str	r0, [sp, #32]
 80144cc:	9803      	ldr	r0, [sp, #12]
 80144ce:	f7ff fbf6 	bl	8013cbe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80144d2:	4629      	mov	r1, r5
 80144d4:	900a      	str	r0, [sp, #40]	; 0x28
 80144d6:	a805      	add	r0, sp, #20
 80144d8:	f7ff fba2 	bl	8013c20 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80144dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80144de:	1a18      	subs	r0, r3, r0
 80144e0:	9b03      	ldr	r3, [sp, #12]
 80144e2:	9009      	str	r0, [sp, #36]	; 0x24
 80144e4:	f5a3 53b4 	sub.w	r3, r3, #5760	; 0x1680
 80144e8:	443b      	add	r3, r7
 80144ea:	930a      	str	r3, [sp, #40]	; 0x28
 80144ec:	ae06      	add	r6, sp, #24
 80144ee:	9a03      	ldr	r2, [sp, #12]
 80144f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80144f2:	429a      	cmp	r2, r3
 80144f4:	f77f af6c 	ble.w	80143d0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x202>
 80144f8:	ab09      	add	r3, sp, #36	; 0x24
 80144fa:	e9cd 5600 	strd	r5, r6, [sp]
 80144fe:	aa08      	add	r2, sp, #32
 8014500:	a90b      	add	r1, sp, #44	; 0x2c
 8014502:	4620      	mov	r0, r4
 8014504:	f7ff fc2f 	bl	8013d66 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 8014508:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801450a:	443b      	add	r3, r7
 801450c:	930a      	str	r3, [sp, #40]	; 0x28
 801450e:	e7ee      	b.n	80144ee <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x320>

08014510 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>:
 8014510:	6281      	str	r1, [r0, #40]	; 0x28
 8014512:	4770      	bx	lr

08014514 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 8014514:	b510      	push	{r4, lr}
 8014516:	2200      	movs	r2, #0
 8014518:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 801451c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8014520:	8002      	strh	r2, [r0, #0]
 8014522:	8042      	strh	r2, [r0, #2]
 8014524:	8084      	strh	r4, [r0, #4]
 8014526:	80c1      	strh	r1, [r0, #6]
 8014528:	bd10      	pop	{r4, pc}

0801452a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 801452a:	2200      	movs	r2, #0
 801452c:	8002      	strh	r2, [r0, #0]
 801452e:	8042      	strh	r2, [r0, #2]
 8014530:	8082      	strh	r2, [r0, #4]
 8014532:	80c2      	strh	r2, [r0, #6]
 8014534:	4770      	bx	lr
	...

08014538 <_ZNK8touchgfx12CanvasWidget10getPainterEv>:
 8014538:	b508      	push	{r3, lr}
 801453a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801453c:	b928      	cbnz	r0, 801454a <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x12>
 801453e:	4b03      	ldr	r3, [pc, #12]	; (801454c <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x14>)
 8014540:	4a03      	ldr	r2, [pc, #12]	; (8014550 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x18>)
 8014542:	4804      	ldr	r0, [pc, #16]	; (8014554 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x1c>)
 8014544:	2123      	movs	r1, #35	; 0x23
 8014546:	f017 fd3d 	bl	802bfc4 <__assert_func>
 801454a:	bd08      	pop	{r3, pc}
 801454c:	08033e54 	.word	0x08033e54
 8014550:	08033f38 	.word	0x08033f38
 8014554:	08033e7b 	.word	0x08033e7b

08014558 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014558:	b510      	push	{r4, lr}
 801455a:	f9b1 4000 	ldrsh.w	r4, [r1]
 801455e:	888a      	ldrh	r2, [r1, #4]
 8014560:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014564:	4422      	add	r2, r4
 8014566:	b212      	sxth	r2, r2
 8014568:	4293      	cmp	r3, r2
 801456a:	da15      	bge.n	8014598 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801456c:	8882      	ldrh	r2, [r0, #4]
 801456e:	4413      	add	r3, r2
 8014570:	b21b      	sxth	r3, r3
 8014572:	429c      	cmp	r4, r3
 8014574:	da10      	bge.n	8014598 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014576:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801457a:	88c9      	ldrh	r1, [r1, #6]
 801457c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014580:	4419      	add	r1, r3
 8014582:	b209      	sxth	r1, r1
 8014584:	428a      	cmp	r2, r1
 8014586:	da07      	bge.n	8014598 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014588:	88c0      	ldrh	r0, [r0, #6]
 801458a:	4410      	add	r0, r2
 801458c:	b200      	sxth	r0, r0
 801458e:	4283      	cmp	r3, r0
 8014590:	bfac      	ite	ge
 8014592:	2000      	movge	r0, #0
 8014594:	2001      	movlt	r0, #1
 8014596:	bd10      	pop	{r4, pc}
 8014598:	2000      	movs	r0, #0
 801459a:	e7fc      	b.n	8014596 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801459c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801459c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145a0:	4604      	mov	r4, r0
 80145a2:	b08b      	sub	sp, #44	; 0x2c
 80145a4:	6808      	ldr	r0, [r1, #0]
 80145a6:	6849      	ldr	r1, [r1, #4]
 80145a8:	ab04      	add	r3, sp, #16
 80145aa:	c303      	stmia	r3!, {r0, r1}
 80145ac:	4b37      	ldr	r3, [pc, #220]	; (801468c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf0>)
 80145ae:	781b      	ldrb	r3, [r3, #0]
 80145b0:	2b01      	cmp	r3, #1
 80145b2:	6823      	ldr	r3, [r4, #0]
 80145b4:	4621      	mov	r1, r4
 80145b6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80145b8:	a806      	add	r0, sp, #24
 80145ba:	bf1f      	itttt	ne
 80145bc:	f10d 090e 	addne.w	r9, sp, #14
 80145c0:	ae05      	addne	r6, sp, #20
 80145c2:	f10d 0516 	addne.w	r5, sp, #22
 80145c6:	f10d 0812 	addne.w	r8, sp, #18
 80145ca:	bf01      	itttt	eq
 80145cc:	f10d 0916 	addeq.w	r9, sp, #22
 80145d0:	f10d 060e 	addeq.w	r6, sp, #14
 80145d4:	ad05      	addeq	r5, sp, #20
 80145d6:	f10d 0810 	addeq.w	r8, sp, #16
 80145da:	4798      	blx	r3
 80145dc:	f04f 0a00 	mov.w	sl, #0
 80145e0:	f647 7bff 	movw	fp, #32767	; 0x7fff
 80145e4:	f9b5 3000 	ldrsh.w	r3, [r5]
 80145e8:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80145ec:	2b00      	cmp	r3, #0
 80145ee:	d042      	beq.n	8014676 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xda>
 80145f0:	4293      	cmp	r3, r2
 80145f2:	bfa8      	it	ge
 80145f4:	4613      	movge	r3, r2
 80145f6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80145fa:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 80145fe:	2f00      	cmp	r7, #0
 8014600:	dd21      	ble.n	8014646 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xaa>
 8014602:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8014606:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801460a:	f9b6 2000 	ldrsh.w	r2, [r6]
 801460e:	f9b9 3000 	ldrsh.w	r3, [r9]
 8014612:	f8ad 0020 	strh.w	r0, [sp, #32]
 8014616:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 801461a:	a808      	add	r0, sp, #32
 801461c:	a906      	add	r1, sp, #24
 801461e:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8014622:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8014626:	f7ff ff97 	bl	8014558 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801462a:	9001      	str	r0, [sp, #4]
 801462c:	b1d0      	cbz	r0, 8014664 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 801462e:	6822      	ldr	r2, [r4, #0]
 8014630:	a908      	add	r1, sp, #32
 8014632:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8014634:	4620      	mov	r0, r4
 8014636:	4790      	blx	r2
 8014638:	b9a0      	cbnz	r0, 8014664 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 801463a:	9b01      	ldr	r3, [sp, #4]
 801463c:	107f      	asrs	r7, r7, #1
 801463e:	f8ad 700e 	strh.w	r7, [sp, #14]
 8014642:	469a      	mov	sl, r3
 8014644:	e7d9      	b.n	80145fa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8014646:	d10d      	bne.n	8014664 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 8014648:	2301      	movs	r3, #1
 801464a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801464e:	f8b8 2000 	ldrh.w	r2, [r8]
 8014652:	f8bd 100e 	ldrh.w	r1, [sp, #14]
 8014656:	440a      	add	r2, r1
 8014658:	f8a8 2000 	strh.w	r2, [r8]
 801465c:	882b      	ldrh	r3, [r5, #0]
 801465e:	1a5b      	subs	r3, r3, r1
 8014660:	802b      	strh	r3, [r5, #0]
 8014662:	e7bf      	b.n	80145e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014664:	f1ba 0f00 	cmp.w	sl, #0
 8014668:	d0f1      	beq.n	801464e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb2>
 801466a:	f9b4 302c 	ldrsh.w	r3, [r4, #44]	; 0x2c
 801466e:	455b      	cmp	r3, fp
 8014670:	bf08      	it	eq
 8014672:	85a7      	strheq	r7, [r4, #44]	; 0x2c
 8014674:	e7eb      	b.n	801464e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb2>
 8014676:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801467a:	429a      	cmp	r2, r3
 801467c:	bf04      	itt	eq
 801467e:	f647 73fe 	movweq	r3, #32766	; 0x7ffe
 8014682:	85a3      	strheq	r3, [r4, #44]	; 0x2c
 8014684:	b00b      	add	sp, #44	; 0x2c
 8014686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801468a:	bf00      	nop
 801468c:	2001e1b8 	.word	0x2001e1b8

08014690 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8014690:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014692:	6803      	ldr	r3, [r0, #0]
 8014694:	b085      	sub	sp, #20
 8014696:	4604      	mov	r4, r0
 8014698:	4601      	mov	r1, r0
 801469a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801469c:	4668      	mov	r0, sp
 801469e:	4798      	blx	r3
 80146a0:	f9b4 6008 	ldrsh.w	r6, [r4, #8]
 80146a4:	f9b4 500a 	ldrsh.w	r5, [r4, #10]
 80146a8:	f8ad 600c 	strh.w	r6, [sp, #12]
 80146ac:	2300      	movs	r3, #0
 80146ae:	a902      	add	r1, sp, #8
 80146b0:	4668      	mov	r0, sp
 80146b2:	9302      	str	r3, [sp, #8]
 80146b4:	f8ad 500e 	strh.w	r5, [sp, #14]
 80146b8:	f7ff ff4e 	bl	8014558 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80146bc:	b340      	cbz	r0, 8014710 <_ZNK8touchgfx12CanvasWidget10invalidateEv+0x80>
 80146be:	f9bd 2000 	ldrsh.w	r2, [sp]
 80146c2:	f8bd 7004 	ldrh.w	r7, [sp, #4]
 80146c6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80146ca:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 80146ce:	443a      	add	r2, r7
 80146d0:	b292      	uxth	r2, r2
 80146d2:	b217      	sxth	r7, r2
 80146d4:	42be      	cmp	r6, r7
 80146d6:	bfd8      	it	le
 80146d8:	b2b2      	uxthle	r2, r6
 80146da:	1a12      	subs	r2, r2, r0
 80146dc:	f8ad 2004 	strh.w	r2, [sp, #4]
 80146e0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80146e4:	f8ad 0000 	strh.w	r0, [sp]
 80146e8:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 80146ec:	4413      	add	r3, r2
 80146ee:	b29b      	uxth	r3, r3
 80146f0:	b21a      	sxth	r2, r3
 80146f2:	4295      	cmp	r5, r2
 80146f4:	bfd8      	it	le
 80146f6:	b2ab      	uxthle	r3, r5
 80146f8:	1a5b      	subs	r3, r3, r1
 80146fa:	f8ad 3006 	strh.w	r3, [sp, #6]
 80146fe:	f8ad 1002 	strh.w	r1, [sp, #2]
 8014702:	6823      	ldr	r3, [r4, #0]
 8014704:	4669      	mov	r1, sp
 8014706:	691b      	ldr	r3, [r3, #16]
 8014708:	4620      	mov	r0, r4
 801470a:	4798      	blx	r3
 801470c:	b005      	add	sp, #20
 801470e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014710:	e9cd 0000 	strd	r0, r0, [sp]
 8014714:	e7f5      	b.n	8014702 <_ZNK8touchgfx12CanvasWidget10invalidateEv+0x72>
	...

08014718 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8014718:	2101      	movs	r1, #1
 801471a:	2200      	movs	r2, #0
 801471c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8014720:	490c      	ldr	r1, [pc, #48]	; (8014754 <_ZN8touchgfx12CanvasWidgetC1Ev+0x3c>)
 8014722:	8082      	strh	r2, [r0, #4]
 8014724:	80c2      	strh	r2, [r0, #6]
 8014726:	8102      	strh	r2, [r0, #8]
 8014728:	8142      	strh	r2, [r0, #10]
 801472a:	8182      	strh	r2, [r0, #12]
 801472c:	81c2      	strh	r2, [r0, #14]
 801472e:	8202      	strh	r2, [r0, #16]
 8014730:	8242      	strh	r2, [r0, #18]
 8014732:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8014736:	61c2      	str	r2, [r0, #28]
 8014738:	8402      	strh	r2, [r0, #32]
 801473a:	8442      	strh	r2, [r0, #34]	; 0x22
 801473c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8014740:	6001      	str	r1, [r0, #0]
 8014742:	6282      	str	r2, [r0, #40]	; 0x28
 8014744:	21ff      	movs	r1, #255	; 0xff
 8014746:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801474a:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 801474e:	8582      	strh	r2, [r0, #44]	; 0x2c
 8014750:	4770      	bx	lr
 8014752:	bf00      	nop
 8014754:	08033ec0 	.word	0x08033ec0

08014758 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 8014758:	b530      	push	{r4, r5, lr}
 801475a:	460d      	mov	r5, r1
 801475c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 801475e:	8949      	ldrh	r1, [r1, #10]
 8014760:	1ac9      	subs	r1, r1, r3
 8014762:	6803      	ldr	r3, [r0, #0]
 8014764:	b085      	sub	sp, #20
 8014766:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 801476a:	f10d 0206 	add.w	r2, sp, #6
 801476e:	b209      	sxth	r1, r1
 8014770:	4604      	mov	r4, r0
 8014772:	4798      	blx	r3
 8014774:	b1a0      	cbz	r0, 80147a0 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 8014776:	792b      	ldrb	r3, [r5, #4]
 8014778:	b993      	cbnz	r3, 80147a0 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 801477a:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 801477e:	b178      	cbz	r0, 80147a0 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 8014780:	6803      	ldr	r3, [r0, #0]
 8014782:	68db      	ldr	r3, [r3, #12]
 8014784:	4798      	blx	r3
 8014786:	b158      	cbz	r0, 80147a0 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 8014788:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801478c:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 8014790:	f8ad 3008 	strh.w	r3, [sp, #8]
 8014794:	9503      	str	r5, [sp, #12]
 8014796:	6803      	ldr	r3, [r0, #0]
 8014798:	aa02      	add	r2, sp, #8
 801479a:	689b      	ldr	r3, [r3, #8]
 801479c:	4621      	mov	r1, r4
 801479e:	4798      	blx	r3
 80147a0:	b005      	add	sp, #20
 80147a2:	bd30      	pop	{r4, r5, pc}

080147a4 <_ZN8touchgfx15StaticDataGraph24setGraphRangeXAutoScaledEbi>:
 80147a4:	b430      	push	{r4, r5}
 80147a6:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 80147aa:	b1cd      	cbz	r5, 80147e0 <_ZN8touchgfx15StaticDataGraph24setGraphRangeXAutoScaledEbi+0x3c>
 80147ac:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80147b0:	f8d0 413c 	ldr.w	r4, [r0, #316]	; 0x13c
 80147b4:	3d01      	subs	r5, #1
 80147b6:	6823      	ldr	r3, [r4, #0]
 80147b8:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
 80147bc:	b139      	cbz	r1, 80147ce <_ZN8touchgfx15StaticDataGraph24setGraphRangeXAutoScaledEbi+0x2a>
 80147be:	4293      	cmp	r3, r2
 80147c0:	f1c2 0100 	rsb	r1, r2, #0
 80147c4:	bfa8      	it	ge
 80147c6:	4613      	movge	r3, r2
 80147c8:	428c      	cmp	r4, r1
 80147ca:	bfb8      	it	lt
 80147cc:	460c      	movlt	r4, r1
 80147ce:	1a99      	subs	r1, r3, r2
 80147d0:	4422      	add	r2, r4
 80147d2:	4291      	cmp	r1, r2
 80147d4:	d004      	beq.n	80147e0 <_ZN8touchgfx15StaticDataGraph24setGraphRangeXAutoScaledEbi+0x3c>
 80147d6:	6803      	ldr	r3, [r0, #0]
 80147d8:	bc30      	pop	{r4, r5}
 80147da:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80147de:	4718      	bx	r3
 80147e0:	bc30      	pop	{r4, r5}
 80147e2:	4770      	bx	lr

080147e4 <_ZN8touchgfx15StaticDataGraph11deleteValueEi>:
 80147e4:	b410      	push	{r4}
 80147e6:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 80147ea:	2300      	movs	r3, #0
 80147ec:	429a      	cmp	r2, r3
 80147ee:	dd0e      	ble.n	801480e <_ZN8touchgfx15StaticDataGraph11deleteValueEi+0x2a>
 80147f0:	f8d0 413c 	ldr.w	r4, [r0, #316]	; 0x13c
 80147f4:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 80147f8:	428c      	cmp	r4, r1
 80147fa:	d106      	bne.n	801480a <_ZN8touchgfx15StaticDataGraph11deleteValueEi+0x26>
 80147fc:	6802      	ldr	r2, [r0, #0]
 80147fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014802:	f8d2 2130 	ldr.w	r2, [r2, #304]	; 0x130
 8014806:	4619      	mov	r1, r3
 8014808:	4710      	bx	r2
 801480a:	3301      	adds	r3, #1
 801480c:	e7ee      	b.n	80147ec <_ZN8touchgfx15StaticDataGraph11deleteValueEi+0x8>
 801480e:	f04f 30ff 	mov.w	r0, #4294967295
 8014812:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014816:	4770      	bx	lr

08014818 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 8014818:	b508      	push	{r3, lr}
 801481a:	b929      	cbnz	r1, 8014828 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib+0x10>
 801481c:	4b03      	ldr	r3, [pc, #12]	; (801482c <_ZN8touchgfx17AbstractDataGraph9setScaleXEib+0x14>)
 801481e:	4a04      	ldr	r2, [pc, #16]	; (8014830 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib+0x18>)
 8014820:	4804      	ldr	r0, [pc, #16]	; (8014834 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib+0x1c>)
 8014822:	2171      	movs	r1, #113	; 0x71
 8014824:	f017 fbce 	bl	802bfc4 <__assert_func>
 8014828:	6301      	str	r1, [r0, #48]	; 0x30
 801482a:	bd08      	pop	{r3, pc}
 801482c:	08033fcf 	.word	0x08033fcf
 8014830:	08034322 	.word	0x08034322
 8014834:	0803120f 	.word	0x0803120f

08014838 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 8014838:	b508      	push	{r3, lr}
 801483a:	b929      	cbnz	r1, 8014848 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib+0x10>
 801483c:	4b03      	ldr	r3, [pc, #12]	; (801484c <_ZN8touchgfx17AbstractDataGraph9setScaleYEib+0x14>)
 801483e:	4a04      	ldr	r2, [pc, #16]	; (8014850 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib+0x18>)
 8014840:	4804      	ldr	r0, [pc, #16]	; (8014854 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib+0x1c>)
 8014842:	2193      	movs	r1, #147	; 0x93
 8014844:	f017 fbbe 	bl	802bfc4 <__assert_func>
 8014848:	6341      	str	r1, [r0, #52]	; 0x34
 801484a:	bd08      	pop	{r3, pc}
 801484c:	08033fcf 	.word	0x08033fcf
 8014850:	08034361 	.word	0x08034361
 8014854:	0803120f 	.word	0x0803120f

08014858 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 8014858:	2300      	movs	r3, #0
 801485a:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 801485e:	3038      	adds	r0, #56	; 0x38
 8014860:	f005 bd77 	b.w	801a352 <_ZNK8touchgfx8Drawable10invalidateEv>

08014864 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi>:
 8014864:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014868:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 801486c:	4604      	mov	r4, r0
 801486e:	4688      	mov	r8, r1
 8014870:	4616      	mov	r6, r2
 8014872:	2b00      	cmp	r3, #0
 8014874:	d04e      	beq.n	8014914 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0xb0>
 8014876:	6803      	ldr	r3, [r0, #0]
 8014878:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 801487c:	4798      	blx	r3
 801487e:	6823      	ldr	r3, [r4, #0]
 8014880:	4605      	mov	r5, r0
 8014882:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8014886:	4620      	mov	r0, r4
 8014888:	4798      	blx	r3
 801488a:	4285      	cmp	r5, r0
 801488c:	bfc8      	it	gt
 801488e:	b22b      	sxthgt	r3, r5
 8014890:	f8d4 e13c 	ldr.w	lr, [r4, #316]	; 0x13c
 8014894:	bfc4      	itt	gt
 8014896:	4605      	movgt	r5, r0
 8014898:	4618      	movgt	r0, r3
 801489a:	2300      	movs	r3, #0
 801489c:	f85e 2023 	ldr.w	r2, [lr, r3, lsl #2]
 80148a0:	42aa      	cmp	r2, r5
 80148a2:	ea4f 0183 	mov.w	r1, r3, lsl #2
 80148a6:	da05      	bge.n	80148b4 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x50>
 80148a8:	f9b4 711e 	ldrsh.w	r7, [r4, #286]	; 0x11e
 80148ac:	42bb      	cmp	r3, r7
 80148ae:	da01      	bge.n	80148b4 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x50>
 80148b0:	3301      	adds	r3, #1
 80148b2:	e7f3      	b.n	801489c <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x38>
 80148b4:	4282      	cmp	r2, r0
 80148b6:	dc2d      	bgt.n	8014914 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0xb0>
 80148b8:	f8d4 c140 	ldr.w	ip, [r4, #320]	; 0x140
 80148bc:	f85c 5001 	ldr.w	r5, [ip, r1]
 80148c0:	3301      	adds	r3, #1
 80148c2:	462a      	mov	r2, r5
 80148c4:	f85e 1023 	ldr.w	r1, [lr, r3, lsl #2]
 80148c8:	4288      	cmp	r0, r1
 80148ca:	dd0d      	ble.n	80148e8 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x84>
 80148cc:	f9b4 111e 	ldrsh.w	r1, [r4, #286]	; 0x11e
 80148d0:	428b      	cmp	r3, r1
 80148d2:	da09      	bge.n	80148e8 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x84>
 80148d4:	f85c 7023 	ldr.w	r7, [ip, r3, lsl #2]
 80148d8:	42bd      	cmp	r5, r7
 80148da:	bfa8      	it	ge
 80148dc:	463d      	movge	r5, r7
 80148de:	42ba      	cmp	r2, r7
 80148e0:	bfb8      	it	lt
 80148e2:	463a      	movlt	r2, r7
 80148e4:	3301      	adds	r3, #1
 80148e6:	e7ed      	b.n	80148c4 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x60>
 80148e8:	f1b8 0f00 	cmp.w	r8, #0
 80148ec:	d007      	beq.n	80148fe <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x9a>
 80148ee:	42b5      	cmp	r5, r6
 80148f0:	f1c6 0300 	rsb	r3, r6, #0
 80148f4:	bfa8      	it	ge
 80148f6:	4635      	movge	r5, r6
 80148f8:	429a      	cmp	r2, r3
 80148fa:	bfb8      	it	lt
 80148fc:	461a      	movlt	r2, r3
 80148fe:	1ba9      	subs	r1, r5, r6
 8014900:	4432      	add	r2, r6
 8014902:	4291      	cmp	r1, r2
 8014904:	d006      	beq.n	8014914 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0xb0>
 8014906:	6823      	ldr	r3, [r4, #0]
 8014908:	4620      	mov	r0, r4
 801490a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801490e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8014912:	4718      	bx	r3
 8014914:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014918 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 8014918:	4291      	cmp	r1, r2
 801491a:	b510      	push	{r4, lr}
 801491c:	4604      	mov	r4, r0
 801491e:	d106      	bne.n	801492e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x16>
 8014920:	4b12      	ldr	r3, [pc, #72]	; (801496c <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x54>)
 8014922:	4a13      	ldr	r2, [pc, #76]	; (8014970 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x58>)
 8014924:	4813      	ldr	r0, [pc, #76]	; (8014974 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x5c>)
 8014926:	f240 1111 	movw	r1, #273	; 0x111
 801492a:	f017 fb4b 	bl	802bfc4 <__assert_func>
 801492e:	bfc2      	ittt	gt
 8014930:	460b      	movgt	r3, r1
 8014932:	4611      	movgt	r1, r2
 8014934:	461a      	movgt	r2, r3
 8014936:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 801493a:	428b      	cmp	r3, r1
 801493c:	d103      	bne.n	8014946 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x2e>
 801493e:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 8014942:	4293      	cmp	r3, r2
 8014944:	d011      	beq.n	801496a <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x52>
 8014946:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 801494a:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 801494e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8014952:	f005 fcfe 	bl	801a352 <_ZNK8touchgfx8Drawable10invalidateEv>
 8014956:	f104 0038 	add.w	r0, r4, #56	; 0x38
 801495a:	f005 fcfa 	bl	801a352 <_ZNK8touchgfx8Drawable10invalidateEv>
 801495e:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 8014962:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014966:	f005 bcf4 	b.w	801a352 <_ZNK8touchgfx8Drawable10invalidateEv>
 801496a:	bd10      	pop	{r4, pc}
 801496c:	08033f86 	.word	0x08033f86
 8014970:	08034290 	.word	0x08034290
 8014974:	08033f91 	.word	0x08033f91

08014978 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 8014978:	4291      	cmp	r1, r2
 801497a:	b510      	push	{r4, lr}
 801497c:	4604      	mov	r4, r0
 801497e:	d106      	bne.n	801498e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x16>
 8014980:	4b12      	ldr	r3, [pc, #72]	; (80149cc <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x54>)
 8014982:	4a13      	ldr	r2, [pc, #76]	; (80149d0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x58>)
 8014984:	4813      	ldr	r0, [pc, #76]	; (80149d4 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x5c>)
 8014986:	f44f 7192 	mov.w	r1, #292	; 0x124
 801498a:	f017 fb1b 	bl	802bfc4 <__assert_func>
 801498e:	bfc2      	ittt	gt
 8014990:	460b      	movgt	r3, r1
 8014992:	4611      	movgt	r1, r2
 8014994:	461a      	movgt	r2, r3
 8014996:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 801499a:	428b      	cmp	r3, r1
 801499c:	d103      	bne.n	80149a6 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x2e>
 801499e:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 80149a2:	4293      	cmp	r3, r2
 80149a4:	d011      	beq.n	80149ca <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x52>
 80149a6:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 80149aa:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 80149ae:	f104 0064 	add.w	r0, r4, #100	; 0x64
 80149b2:	f005 fcce 	bl	801a352 <_ZNK8touchgfx8Drawable10invalidateEv>
 80149b6:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80149ba:	f005 fcca 	bl	801a352 <_ZNK8touchgfx8Drawable10invalidateEv>
 80149be:	f104 0090 	add.w	r0, r4, #144	; 0x90
 80149c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80149c6:	f005 bcc4 	b.w	801a352 <_ZNK8touchgfx8Drawable10invalidateEv>
 80149ca:	bd10      	pop	{r4, pc}
 80149cc:	08033f86 	.word	0x08033f86
 80149d0:	080342d9 	.word	0x080342d9
 80149d4:	08033f91 	.word	0x08033f91

080149d8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 80149d8:	b530      	push	{r4, r5, lr}
 80149da:	790b      	ldrb	r3, [r1, #4]
 80149dc:	2b02      	cmp	r3, #2
 80149de:	b085      	sub	sp, #20
 80149e0:	4604      	mov	r4, r0
 80149e2:	460d      	mov	r5, r1
 80149e4:	d020      	beq.n	8014a28 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 80149e6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 80149e8:	88c9      	ldrh	r1, [r1, #6]
 80149ea:	1ac9      	subs	r1, r1, r3
 80149ec:	6803      	ldr	r3, [r0, #0]
 80149ee:	f10d 0206 	add.w	r2, sp, #6
 80149f2:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 80149f6:	b209      	sxth	r1, r1
 80149f8:	4798      	blx	r3
 80149fa:	b1a8      	cbz	r0, 8014a28 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 80149fc:	792b      	ldrb	r3, [r5, #4]
 80149fe:	2b01      	cmp	r3, #1
 8014a00:	d812      	bhi.n	8014a28 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8014a02:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 8014a06:	b178      	cbz	r0, 8014a28 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8014a08:	6803      	ldr	r3, [r0, #0]
 8014a0a:	68db      	ldr	r3, [r3, #12]
 8014a0c:	4798      	blx	r3
 8014a0e:	b158      	cbz	r0, 8014a28 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8014a10:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8014a14:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 8014a18:	f8ad 3008 	strh.w	r3, [sp, #8]
 8014a1c:	9503      	str	r5, [sp, #12]
 8014a1e:	6803      	ldr	r3, [r0, #0]
 8014a20:	aa02      	add	r2, sp, #8
 8014a22:	689b      	ldr	r3, [r3, #8]
 8014a24:	4621      	mov	r1, r4
 8014a26:	4798      	blx	r3
 8014a28:	b005      	add	sp, #20
 8014a2a:	bd30      	pop	{r4, r5, pc}

08014a2c <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 8014a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014a30:	4604      	mov	r4, r0
 8014a32:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 8014a36:	9f06      	ldr	r7, [sp, #24]
 8014a38:	4690      	mov	r8, r2
 8014a3a:	461e      	mov	r6, r3
 8014a3c:	b928      	cbnz	r0, 8014a4a <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 8014a3e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014a42:	803b      	strh	r3, [r7, #0]
 8014a44:	8033      	strh	r3, [r6, #0]
 8014a46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014a4a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 8014a4e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 8014a52:	1883      	adds	r3, r0, r2
 8014a54:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 8014a58:	1ad2      	subs	r2, r2, r3
 8014a5a:	b212      	sxth	r2, r2
 8014a5c:	2a01      	cmp	r2, #1
 8014a5e:	dc07      	bgt.n	8014a70 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 8014a60:	2300      	movs	r3, #0
 8014a62:	8033      	strh	r3, [r6, #0]
 8014a64:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 8014a68:	3b01      	subs	r3, #1
 8014a6a:	803b      	strh	r3, [r7, #0]
 8014a6c:	2001      	movs	r0, #1
 8014a6e:	e7ea      	b.n	8014a46 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 8014a70:	f8d4 5130 	ldr.w	r5, [r4, #304]	; 0x130
 8014a74:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 8014a78:	1a08      	subs	r0, r1, r0
 8014a7a:	3a01      	subs	r2, #1
 8014a7c:	1ae9      	subs	r1, r5, r3
 8014a7e:	0140      	lsls	r0, r0, #5
 8014a80:	f005 fe2f 	bl	801a6e2 <_ZN8touchgfx6muldivElll>
 8014a84:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 8014a88:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 8014a8c:	eb00 1541 	add.w	r5, r0, r1, lsl #5
 8014a90:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 8014a94:	1883      	adds	r3, r0, r2
 8014a96:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 8014a9a:	1ad2      	subs	r2, r2, r3
 8014a9c:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 8014aa0:	b212      	sxth	r2, r2
 8014aa2:	eba8 0000 	sub.w	r0, r8, r0
 8014aa6:	1a59      	subs	r1, r3, r1
 8014aa8:	3a01      	subs	r2, #1
 8014aaa:	0140      	lsls	r0, r0, #5
 8014aac:	f005 fe19 	bl	801a6e2 <_ZN8touchgfx6muldivElll>
 8014ab0:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 8014ab4:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8014ab8:	4285      	cmp	r5, r0
 8014aba:	bfde      	ittt	le
 8014abc:	4603      	movle	r3, r0
 8014abe:	4628      	movle	r0, r5
 8014ac0:	461d      	movle	r5, r3
 8014ac2:	2d00      	cmp	r5, #0
 8014ac4:	bfa8      	it	ge
 8014ac6:	351f      	addge	r5, #31
 8014ac8:	f04f 0320 	mov.w	r3, #32
 8014acc:	bfa8      	it	ge
 8014ace:	116d      	asrge	r5, r5, #5
 8014ad0:	fb90 f0f3 	sdiv	r0, r0, r3
 8014ad4:	bfb8      	it	lt
 8014ad6:	fb95 f5f3 	sdivlt	r5, r5, r3
 8014ada:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014ade:	8033      	strh	r3, [r6, #0]
 8014ae0:	f9b4 211e 	ldrsh.w	r2, [r4, #286]	; 0x11e
 8014ae4:	f9b6 3000 	ldrsh.w	r3, [r6]
 8014ae8:	1e51      	subs	r1, r2, #1
 8014aea:	428b      	cmp	r3, r1
 8014aec:	da06      	bge.n	8014afc <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd0>
 8014aee:	3301      	adds	r3, #1
 8014af0:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
 8014af4:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8014af8:	4288      	cmp	r0, r1
 8014afa:	daf0      	bge.n	8014ade <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xb2>
 8014afc:	803a      	strh	r2, [r7, #0]
 8014afe:	f06f 4040 	mvn.w	r0, #3221225472	; 0xc0000000
 8014b02:	f9b7 3000 	ldrsh.w	r3, [r7]
 8014b06:	2b00      	cmp	r3, #0
 8014b08:	dd23      	ble.n	8014b52 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x126>
 8014b0a:	181a      	adds	r2, r3, r0
 8014b0c:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
 8014b10:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8014b14:	42aa      	cmp	r2, r5
 8014b16:	db10      	blt.n	8014b3a <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x10e>
 8014b18:	3b01      	subs	r3, #1
 8014b1a:	803b      	strh	r3, [r7, #0]
 8014b1c:	e7f1      	b.n	8014b02 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd6>
 8014b1e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8014b22:	8032      	strh	r2, [r6, #0]
 8014b24:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8014b28:	f9b7 2000 	ldrsh.w	r2, [r7]
 8014b2c:	4293      	cmp	r3, r2
 8014b2e:	bfdc      	itt	le
 8014b30:	f103 33ff 	addle.w	r3, r3, #4294967295
 8014b34:	b21a      	sxthle	r2, r3
 8014b36:	803a      	strh	r2, [r7, #0]
 8014b38:	e798      	b.n	8014a6c <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>
 8014b3a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8014b3e:	f9b6 2000 	ldrsh.w	r2, [r6]
 8014b42:	3b01      	subs	r3, #1
 8014b44:	429a      	cmp	r2, r3
 8014b46:	dbea      	blt.n	8014b1e <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xf2>
 8014b48:	b21b      	sxth	r3, r3
 8014b4a:	803b      	strh	r3, [r7, #0]
 8014b4c:	2000      	movs	r0, #0
 8014b4e:	8033      	strh	r3, [r6, #0]
 8014b50:	e779      	b.n	8014a46 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 8014b52:	2000      	movs	r0, #0
 8014b54:	8038      	strh	r0, [r7, #0]
 8014b56:	8030      	strh	r0, [r6, #0]
 8014b58:	e775      	b.n	8014a46 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
	...

08014b5c <_ZN8touchgfx9ContainerC1Ev>:
 8014b5c:	2101      	movs	r1, #1
 8014b5e:	2200      	movs	r2, #0
 8014b60:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8014b64:	4909      	ldr	r1, [pc, #36]	; (8014b8c <_ZN8touchgfx9ContainerC1Ev+0x30>)
 8014b66:	8082      	strh	r2, [r0, #4]
 8014b68:	80c2      	strh	r2, [r0, #6]
 8014b6a:	8102      	strh	r2, [r0, #8]
 8014b6c:	8142      	strh	r2, [r0, #10]
 8014b6e:	8182      	strh	r2, [r0, #12]
 8014b70:	81c2      	strh	r2, [r0, #14]
 8014b72:	8202      	strh	r2, [r0, #16]
 8014b74:	8242      	strh	r2, [r0, #18]
 8014b76:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8014b7a:	61c2      	str	r2, [r0, #28]
 8014b7c:	8402      	strh	r2, [r0, #32]
 8014b7e:	8442      	strh	r2, [r0, #34]	; 0x22
 8014b80:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8014b84:	6001      	str	r1, [r0, #0]
 8014b86:	6282      	str	r2, [r0, #40]	; 0x28
 8014b88:	4770      	bx	lr
 8014b8a:	bf00      	nop
 8014b8c:	08033264 	.word	0x08033264

08014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 8014b90:	6800      	ldr	r0, [r0, #0]
 8014b92:	2800      	cmp	r0, #0
 8014b94:	bfbd      	ittte	lt
 8014b96:	380f      	sublt	r0, #15
 8014b98:	2320      	movlt	r3, #32
 8014b9a:	fb90 f0f3 	sdivlt	r0, r0, r3
 8014b9e:	3010      	addge	r0, #16
 8014ba0:	bfa8      	it	ge
 8014ba2:	1140      	asrge	r0, r0, #5
 8014ba4:	4770      	bx	lr

08014ba6 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 8014ba6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014baa:	4605      	mov	r5, r0
 8014bac:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 8014bb0:	4688      	mov	r8, r1
 8014bb2:	4691      	mov	r9, r2
 8014bb4:	469a      	mov	sl, r3
 8014bb6:	b360      	cbz	r0, 8014c12 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 8014bb8:	2700      	movs	r7, #0
 8014bba:	f04f 3bff 	mov.w	fp, #4294967295
 8014bbe:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 8014bc2:	b23e      	sxth	r6, r7
 8014bc4:	42b3      	cmp	r3, r6
 8014bc6:	dd23      	ble.n	8014c10 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 8014bc8:	682b      	ldr	r3, [r5, #0]
 8014bca:	4631      	mov	r1, r6
 8014bcc:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8014bd0:	4628      	mov	r0, r5
 8014bd2:	4798      	blx	r3
 8014bd4:	9001      	str	r0, [sp, #4]
 8014bd6:	a801      	add	r0, sp, #4
 8014bd8:	f7ff ffda 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8014bdc:	682b      	ldr	r3, [r5, #0]
 8014bde:	eba0 0008 	sub.w	r0, r0, r8
 8014be2:	b204      	sxth	r4, r0
 8014be4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8014be8:	4631      	mov	r1, r6
 8014bea:	4628      	mov	r0, r5
 8014bec:	4798      	blx	r3
 8014bee:	9001      	str	r0, [sp, #4]
 8014bf0:	a801      	add	r0, sp, #4
 8014bf2:	f7ff ffcd 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8014bf6:	eba0 0009 	sub.w	r0, r0, r9
 8014bfa:	fb10 f000 	smulbb	r0, r0, r0
 8014bfe:	fb04 0404 	mla	r4, r4, r4, r0
 8014c02:	455c      	cmp	r4, fp
 8014c04:	bf3c      	itt	cc
 8014c06:	f8aa 6000 	strhcc.w	r6, [sl]
 8014c0a:	46a3      	movcc	fp, r4
 8014c0c:	3701      	adds	r7, #1
 8014c0e:	e7d6      	b.n	8014bbe <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 8014c10:	2001      	movs	r0, #1
 8014c12:	b003      	add	sp, #12
 8014c14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014c18 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 8014c18:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014c1c:	4604      	mov	r4, r0
 8014c1e:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 8014c22:	4688      	mov	r8, r1
 8014c24:	4691      	mov	r9, r2
 8014c26:	b1f8      	cbz	r0, 8014c68 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 8014c28:	2500      	movs	r5, #0
 8014c2a:	f04f 37ff 	mov.w	r7, #4294967295
 8014c2e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8014c32:	b22e      	sxth	r6, r5
 8014c34:	42b3      	cmp	r3, r6
 8014c36:	dd16      	ble.n	8014c66 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 8014c38:	6823      	ldr	r3, [r4, #0]
 8014c3a:	4631      	mov	r1, r6
 8014c3c:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8014c40:	4620      	mov	r0, r4
 8014c42:	4798      	blx	r3
 8014c44:	9001      	str	r0, [sp, #4]
 8014c46:	a801      	add	r0, sp, #4
 8014c48:	f7ff ffa2 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8014c4c:	b200      	sxth	r0, r0
 8014c4e:	eba0 0008 	sub.w	r0, r0, r8
 8014c52:	2800      	cmp	r0, #0
 8014c54:	bfb8      	it	lt
 8014c56:	4240      	neglt	r0, r0
 8014c58:	42b8      	cmp	r0, r7
 8014c5a:	bf3c      	itt	cc
 8014c5c:	f8a9 6000 	strhcc.w	r6, [r9]
 8014c60:	4607      	movcc	r7, r0
 8014c62:	3501      	adds	r5, #1
 8014c64:	e7e3      	b.n	8014c2e <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 8014c66:	2001      	movs	r0, #1
 8014c68:	b003      	add	sp, #12
 8014c6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08014c6e <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 8014c6e:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 8014c72:	f9bd 3000 	ldrsh.w	r3, [sp]
 8014c76:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 8014c7a:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 8014c7e:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 8014c82:	4770      	bx	lr

08014c84 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 8014c84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014c86:	4604      	mov	r4, r0
 8014c88:	3038      	adds	r0, #56	; 0x38
 8014c8a:	460d      	mov	r5, r1
 8014c8c:	f7fd f8e6 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014c90:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 8014c94:	9200      	str	r2, [sp, #0]
 8014c96:	2200      	movs	r2, #0
 8014c98:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8014c9c:	4611      	mov	r1, r2
 8014c9e:	4628      	mov	r0, r5
 8014ca0:	f7ef fe8a 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014ca4:	b003      	add	sp, #12
 8014ca6:	bd30      	pop	{r4, r5, pc}

08014ca8 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 8014ca8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014caa:	4604      	mov	r4, r0
 8014cac:	3064      	adds	r0, #100	; 0x64
 8014cae:	460d      	mov	r5, r1
 8014cb0:	f7fd f8d4 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014cb4:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 8014cb8:	9200      	str	r2, [sp, #0]
 8014cba:	2200      	movs	r2, #0
 8014cbc:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 8014cc0:	4611      	mov	r1, r2
 8014cc2:	4628      	mov	r0, r5
 8014cc4:	f7ef fe78 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014cc8:	b003      	add	sp, #12
 8014cca:	bd30      	pop	{r4, r5, pc}

08014ccc <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 8014ccc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014cce:	4604      	mov	r4, r0
 8014cd0:	30e8      	adds	r0, #232	; 0xe8
 8014cd2:	460d      	mov	r5, r1
 8014cd4:	f7fd f8c2 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014cd8:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 8014cdc:	9200      	str	r2, [sp, #0]
 8014cde:	2200      	movs	r2, #0
 8014ce0:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 8014ce4:	4611      	mov	r1, r2
 8014ce6:	4628      	mov	r0, r5
 8014ce8:	f7ef fe66 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014cec:	b003      	add	sp, #12
 8014cee:	bd30      	pop	{r4, r5, pc}

08014cf0 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 8014cf0:	b538      	push	{r3, r4, r5, lr}
 8014cf2:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8014cf6:	428b      	cmp	r3, r1
 8014cf8:	460d      	mov	r5, r1
 8014cfa:	dd08      	ble.n	8014d0e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8014cfc:	6e04      	ldr	r4, [r0, #96]	; 0x60
 8014cfe:	b134      	cbz	r4, 8014d0e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8014d00:	6823      	ldr	r3, [r4, #0]
 8014d02:	4620      	mov	r0, r4
 8014d04:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8014d06:	4629      	mov	r1, r5
 8014d08:	4798      	blx	r3
 8014d0a:	69a4      	ldr	r4, [r4, #24]
 8014d0c:	e7f7      	b.n	8014cfe <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 8014d0e:	bd38      	pop	{r3, r4, r5, pc}

08014d10 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi>:
 8014d10:	b570      	push	{r4, r5, r6, lr}
 8014d12:	1e0c      	subs	r4, r1, #0
 8014d14:	4605      	mov	r5, r0
 8014d16:	db03      	blt.n	8014d20 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x10>
 8014d18:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8014d1c:	42a3      	cmp	r3, r4
 8014d1e:	dc06      	bgt.n	8014d2e <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x1e>
 8014d20:	4b11      	ldr	r3, [pc, #68]	; (8014d68 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x58>)
 8014d22:	4a12      	ldr	r2, [pc, #72]	; (8014d6c <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x5c>)
 8014d24:	4812      	ldr	r0, [pc, #72]	; (8014d70 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x60>)
 8014d26:	f44f 7107 	mov.w	r1, #540	; 0x21c
 8014d2a:	f017 f94b 	bl	802bfc4 <__assert_func>
 8014d2e:	b226      	sxth	r6, r4
 8014d30:	4631      	mov	r1, r6
 8014d32:	f7ff ffdd 	bl	8014cf0 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 8014d36:	f8b5 311e 	ldrh.w	r3, [r5, #286]	; 0x11e
 8014d3a:	3b01      	subs	r3, #1
 8014d3c:	f8a5 311e 	strh.w	r3, [r5, #286]	; 0x11e
 8014d40:	00a3      	lsls	r3, r4, #2
 8014d42:	f9b5 111e 	ldrsh.w	r1, [r5, #286]	; 0x11e
 8014d46:	42a1      	cmp	r1, r4
 8014d48:	f103 0204 	add.w	r2, r3, #4
 8014d4c:	dd0a      	ble.n	8014d64 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x54>
 8014d4e:	f8d5 113c 	ldr.w	r1, [r5, #316]	; 0x13c
 8014d52:	5888      	ldr	r0, [r1, r2]
 8014d54:	50c8      	str	r0, [r1, r3]
 8014d56:	f8d5 1140 	ldr.w	r1, [r5, #320]	; 0x140
 8014d5a:	5888      	ldr	r0, [r1, r2]
 8014d5c:	50c8      	str	r0, [r1, r3]
 8014d5e:	3401      	adds	r4, #1
 8014d60:	4613      	mov	r3, r2
 8014d62:	e7ee      	b.n	8014d42 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x32>
 8014d64:	4630      	mov	r0, r6
 8014d66:	bd70      	pop	{r4, r5, r6, pc}
 8014d68:	08031180 	.word	0x08031180
 8014d6c:	08034254 	.word	0x08034254
 8014d70:	08033f91 	.word	0x08033f91

08014d74 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 8014d74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014d76:	6e05      	ldr	r5, [r0, #96]	; 0x60
 8014d78:	4604      	mov	r4, r0
 8014d7a:	b15d      	cbz	r5, 8014d94 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 8014d7c:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 8014d80:	9200      	str	r2, [sp, #0]
 8014d82:	2200      	movs	r2, #0
 8014d84:	4628      	mov	r0, r5
 8014d86:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8014d8a:	4611      	mov	r1, r2
 8014d8c:	f7ef fe14 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014d90:	69ad      	ldr	r5, [r5, #24]
 8014d92:	e7f2      	b.n	8014d7a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 8014d94:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 8014d98:	b15d      	cbz	r5, 8014db2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 8014d9a:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 8014d9e:	9200      	str	r2, [sp, #0]
 8014da0:	2200      	movs	r2, #0
 8014da2:	4628      	mov	r0, r5
 8014da4:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 8014da8:	4611      	mov	r1, r2
 8014daa:	f7ef fe05 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014dae:	69ad      	ldr	r5, [r5, #24]
 8014db0:	e7f2      	b.n	8014d98 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 8014db2:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 8014db6:	b15d      	cbz	r5, 8014dd0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 8014db8:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 8014dbc:	9200      	str	r2, [sp, #0]
 8014dbe:	2200      	movs	r2, #0
 8014dc0:	4628      	mov	r0, r5
 8014dc2:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 8014dc6:	4611      	mov	r1, r2
 8014dc8:	f7ef fdf6 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014dcc:	69ad      	ldr	r5, [r5, #24]
 8014dce:	e7f2      	b.n	8014db6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 8014dd0:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 8014dd4:	b15d      	cbz	r5, 8014dee <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 8014dd6:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 8014dda:	9200      	str	r2, [sp, #0]
 8014ddc:	2200      	movs	r2, #0
 8014dde:	4628      	mov	r0, r5
 8014de0:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 8014de4:	4611      	mov	r1, r2
 8014de6:	f7ef fde7 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014dea:	69ad      	ldr	r5, [r5, #24]
 8014dec:	e7f2      	b.n	8014dd4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 8014dee:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 8014df2:	b15d      	cbz	r5, 8014e0c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 8014df4:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 8014df8:	9200      	str	r2, [sp, #0]
 8014dfa:	2200      	movs	r2, #0
 8014dfc:	4628      	mov	r0, r5
 8014dfe:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 8014e02:	4611      	mov	r1, r2
 8014e04:	f7ef fdd8 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014e08:	69ad      	ldr	r5, [r5, #24]
 8014e0a:	e7f2      	b.n	8014df2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 8014e0c:	6823      	ldr	r3, [r4, #0]
 8014e0e:	695b      	ldr	r3, [r3, #20]
 8014e10:	4620      	mov	r0, r4
 8014e12:	b003      	add	sp, #12
 8014e14:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8014e18:	4718      	bx	r3

08014e1a <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 8014e1a:	b430      	push	{r4, r5}
 8014e1c:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 8014e20:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 8014e24:	b28a      	uxth	r2, r1
 8014e26:	1b15      	subs	r5, r2, r4
 8014e28:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 8014e2c:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 8014e30:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 8014e34:	442c      	add	r4, r5
 8014e36:	1b12      	subs	r2, r2, r4
 8014e38:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8014e3c:	8101      	strh	r1, [r0, #8]
 8014e3e:	bc30      	pop	{r4, r5}
 8014e40:	f7ff bf98 	b.w	8014d74 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08014e44 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 8014e44:	b430      	push	{r4, r5}
 8014e46:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 8014e4a:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 8014e4e:	b28a      	uxth	r2, r1
 8014e50:	1b15      	subs	r5, r2, r4
 8014e52:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 8014e56:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 8014e5a:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 8014e5e:	442c      	add	r4, r5
 8014e60:	1b12      	subs	r2, r2, r4
 8014e62:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 8014e66:	8141      	strh	r1, [r0, #10]
 8014e68:	bc30      	pop	{r4, r5}
 8014e6a:	f7ff bf83 	b.w	8014d74 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08014e6e <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 8014e6e:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8014e72:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 8014e76:	fa1f fa83 	uxth.w	sl, r3
 8014e7a:	4699      	mov	r9, r3
 8014e7c:	8903      	ldrh	r3, [r0, #8]
 8014e7e:	4604      	mov	r4, r0
 8014e80:	4615      	mov	r5, r2
 8014e82:	fa1f f887 	uxth.w	r8, r7
 8014e86:	4452      	add	r2, sl
 8014e88:	8940      	ldrh	r0, [r0, #10]
 8014e8a:	1a9b      	subs	r3, r3, r2
 8014e8c:	eb08 0201 	add.w	r2, r8, r1
 8014e90:	1a80      	subs	r0, r0, r2
 8014e92:	b200      	sxth	r0, r0
 8014e94:	460e      	mov	r6, r1
 8014e96:	9000      	str	r0, [sp, #0]
 8014e98:	460a      	mov	r2, r1
 8014e9a:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8014e9e:	4629      	mov	r1, r5
 8014ea0:	b21b      	sxth	r3, r3
 8014ea2:	f7ef fd89 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014ea6:	2200      	movs	r2, #0
 8014ea8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8014eac:	9600      	str	r6, [sp, #0]
 8014eae:	4611      	mov	r1, r2
 8014eb0:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8014eb4:	f7ef fd80 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014eb8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014ebc:	9300      	str	r3, [sp, #0]
 8014ebe:	2200      	movs	r2, #0
 8014ec0:	462b      	mov	r3, r5
 8014ec2:	4611      	mov	r1, r2
 8014ec4:	f104 0064 	add.w	r0, r4, #100	; 0x64
 8014ec8:	f7ef fd76 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014ecc:	8921      	ldrh	r1, [r4, #8]
 8014ece:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014ed2:	9300      	str	r3, [sp, #0]
 8014ed4:	eba1 010a 	sub.w	r1, r1, sl
 8014ed8:	464b      	mov	r3, r9
 8014eda:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8014ede:	2200      	movs	r2, #0
 8014ee0:	b209      	sxth	r1, r1
 8014ee2:	f7ef fd69 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014ee6:	8962      	ldrh	r2, [r4, #10]
 8014ee8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8014eec:	9700      	str	r7, [sp, #0]
 8014eee:	eba2 0208 	sub.w	r2, r2, r8
 8014ef2:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 8014ef6:	b212      	sxth	r2, r2
 8014ef8:	2100      	movs	r1, #0
 8014efa:	f7ef fd5d 	bl	80049b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014efe:	4620      	mov	r0, r4
 8014f00:	b002      	add	sp, #8
 8014f02:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014f06:	f7ff bf35 	b.w	8014d74 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>
	...

08014f0c <_ZN8touchgfx17AbstractDataGraphC1Es>:
 8014f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f10:	b085      	sub	sp, #20
 8014f12:	4604      	mov	r4, r0
 8014f14:	9103      	str	r1, [sp, #12]
 8014f16:	f7ff fe21 	bl	8014b5c <_ZN8touchgfx9ContainerC1Ev>
 8014f1a:	4b31      	ldr	r3, [pc, #196]	; (8014fe0 <_ZN8touchgfx17AbstractDataGraphC1Es+0xd4>)
 8014f1c:	6023      	str	r3, [r4, #0]
 8014f1e:	2601      	movs	r6, #1
 8014f20:	23ff      	movs	r3, #255	; 0xff
 8014f22:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 8014f26:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8014f2a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8014f2e:	4658      	mov	r0, fp
 8014f30:	f104 0964 	add.w	r9, r4, #100	; 0x64
 8014f34:	f7ff fe12 	bl	8014b5c <_ZN8touchgfx9ContainerC1Ev>
 8014f38:	f104 0890 	add.w	r8, r4, #144	; 0x90
 8014f3c:	4648      	mov	r0, r9
 8014f3e:	f7ff fe0d 	bl	8014b5c <_ZN8touchgfx9ContainerC1Ev>
 8014f42:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 8014f46:	4640      	mov	r0, r8
 8014f48:	f7ff fe08 	bl	8014b5c <_ZN8touchgfx9ContainerC1Ev>
 8014f4c:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 8014f50:	4650      	mov	r0, sl
 8014f52:	f7ff fe03 	bl	8014b5c <_ZN8touchgfx9ContainerC1Ev>
 8014f56:	4638      	mov	r0, r7
 8014f58:	f7ff fe00 	bl	8014b5c <_ZN8touchgfx9ContainerC1Ev>
 8014f5c:	9903      	ldr	r1, [sp, #12]
 8014f5e:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 8014f62:	2500      	movs	r5, #0
 8014f64:	42a9      	cmp	r1, r5
 8014f66:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8014f6a:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 8014f6e:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 8014f72:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 8014f76:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 8014f7a:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 8014f7e:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8014f82:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8014f86:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8014f8a:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8014f8e:	dc05      	bgt.n	8014f9c <_ZN8touchgfx17AbstractDataGraphC1Es+0x90>
 8014f90:	4b14      	ldr	r3, [pc, #80]	; (8014fe4 <_ZN8touchgfx17AbstractDataGraphC1Es+0xd8>)
 8014f92:	4a15      	ldr	r2, [pc, #84]	; (8014fe8 <_ZN8touchgfx17AbstractDataGraphC1Es+0xdc>)
 8014f94:	4815      	ldr	r0, [pc, #84]	; (8014fec <_ZN8touchgfx17AbstractDataGraphC1Es+0xe0>)
 8014f96:	211d      	movs	r1, #29
 8014f98:	f017 f814 	bl	802bfc4 <__assert_func>
 8014f9c:	4659      	mov	r1, fp
 8014f9e:	4620      	mov	r0, r4
 8014fa0:	f7fc ff5c 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014fa4:	4651      	mov	r1, sl
 8014fa6:	4620      	mov	r0, r4
 8014fa8:	f7fc ff58 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014fac:	4649      	mov	r1, r9
 8014fae:	4620      	mov	r0, r4
 8014fb0:	f7fc ff54 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014fb4:	4641      	mov	r1, r8
 8014fb6:	4620      	mov	r0, r4
 8014fb8:	f7fc ff50 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014fbc:	4639      	mov	r1, r7
 8014fbe:	4620      	mov	r0, r4
 8014fc0:	f7fc ff4c 	bl	8011e5c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014fc4:	4620      	mov	r0, r4
 8014fc6:	9500      	str	r5, [sp, #0]
 8014fc8:	462b      	mov	r3, r5
 8014fca:	462a      	mov	r2, r5
 8014fcc:	4629      	mov	r1, r5
 8014fce:	f7ff ff4e 	bl	8014e6e <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 8014fd2:	4620      	mov	r0, r4
 8014fd4:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 8014fd8:	b005      	add	sp, #20
 8014fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fde:	bf00      	nop
 8014fe0:	0803412c 	.word	0x0803412c
 8014fe4:	08033fda 	.word	0x08033fda
 8014fe8:	080343a0 	.word	0x080343a0
 8014fec:	08033f91 	.word	0x08033f91

08014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 8014ff0:	4291      	cmp	r1, r2
 8014ff2:	4613      	mov	r3, r2
 8014ff4:	d003      	beq.n	8014ffe <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 8014ff6:	460a      	mov	r2, r1
 8014ff8:	4619      	mov	r1, r3
 8014ffa:	f005 bb72 	b.w	801a6e2 <_ZN8touchgfx6muldivElll>
 8014ffe:	4770      	bx	lr

08015000 <_ZN8touchgfx15StaticDataGraph9setScaleXEib>:
 8015000:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015004:	4604      	mov	r4, r0
 8015006:	460f      	mov	r7, r1
 8015008:	b1ba      	cbz	r2, 801503a <_ZN8touchgfx15StaticDataGraph9setScaleXEib+0x3a>
 801500a:	6803      	ldr	r3, [r0, #0]
 801500c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8015010:	4798      	blx	r3
 8015012:	2600      	movs	r6, #0
 8015014:	4681      	mov	r9, r0
 8015016:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 801501a:	b235      	sxth	r5, r6
 801501c:	42ab      	cmp	r3, r5
 801501e:	f106 0601 	add.w	r6, r6, #1
 8015022:	dd0a      	ble.n	801503a <_ZN8touchgfx15StaticDataGraph9setScaleXEib+0x3a>
 8015024:	f8d4 813c 	ldr.w	r8, [r4, #316]	; 0x13c
 8015028:	463a      	mov	r2, r7
 801502a:	4649      	mov	r1, r9
 801502c:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 8015030:	f7ff ffde 	bl	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8015034:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 8015038:	e7ed      	b.n	8015016 <_ZN8touchgfx15StaticDataGraph9setScaleXEib+0x16>
 801503a:	2200      	movs	r2, #0
 801503c:	4639      	mov	r1, r7
 801503e:	4620      	mov	r0, r4
 8015040:	f7ff fbea 	bl	8014818 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>
 8015044:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08015048 <_ZN8touchgfx15StaticDataGraph9setScaleYEib>:
 8015048:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801504c:	4604      	mov	r4, r0
 801504e:	460f      	mov	r7, r1
 8015050:	b1ba      	cbz	r2, 8015082 <_ZN8touchgfx15StaticDataGraph9setScaleYEib+0x3a>
 8015052:	6803      	ldr	r3, [r0, #0]
 8015054:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8015058:	4798      	blx	r3
 801505a:	2600      	movs	r6, #0
 801505c:	4681      	mov	r9, r0
 801505e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8015062:	b235      	sxth	r5, r6
 8015064:	42ab      	cmp	r3, r5
 8015066:	f106 0601 	add.w	r6, r6, #1
 801506a:	dd0a      	ble.n	8015082 <_ZN8touchgfx15StaticDataGraph9setScaleYEib+0x3a>
 801506c:	f8d4 8140 	ldr.w	r8, [r4, #320]	; 0x140
 8015070:	463a      	mov	r2, r7
 8015072:	4649      	mov	r1, r9
 8015074:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 8015078:	f7ff ffba 	bl	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 801507c:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 8015080:	e7ed      	b.n	801505e <_ZN8touchgfx15StaticDataGraph9setScaleYEib+0x16>
 8015082:	2200      	movs	r2, #0
 8015084:	4639      	mov	r1, r7
 8015086:	4620      	mov	r0, r4
 8015088:	f7ff fbd6 	bl	8014838 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>
 801508c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08015090 <_ZN8touchgfx9GraphData8addValueEii>:
 8015090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015094:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8015098:	4605      	mov	r5, r0
 801509a:	4617      	mov	r7, r2
 801509c:	2b00      	cmp	r3, #0
 801509e:	d03e      	beq.n	801511e <_ZN8touchgfx9GraphData8addValueEii+0x8e>
 80150a0:	f8d0 213c 	ldr.w	r2, [r0, #316]	; 0x13c
 80150a4:	f103 4080 	add.w	r0, r3, #1073741824	; 0x40000000
 80150a8:	3801      	subs	r0, #1
 80150aa:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 80150ae:	4288      	cmp	r0, r1
 80150b0:	db35      	blt.n	801511e <_ZN8touchgfx9GraphData8addValueEii+0x8e>
 80150b2:	2000      	movs	r0, #0
 80150b4:	b204      	sxth	r4, r0
 80150b6:	42a3      	cmp	r3, r4
 80150b8:	dd16      	ble.n	80150e8 <_ZN8touchgfx9GraphData8addValueEii+0x58>
 80150ba:	ea4f 0880 	mov.w	r8, r0, lsl #2
 80150be:	3001      	adds	r0, #1
 80150c0:	f852 6008 	ldr.w	r6, [r2, r8]
 80150c4:	428e      	cmp	r6, r1
 80150c6:	dbf5      	blt.n	80150b4 <_ZN8touchgfx9GraphData8addValueEii+0x24>
 80150c8:	d10f      	bne.n	80150ea <_ZN8touchgfx9GraphData8addValueEii+0x5a>
 80150ca:	4621      	mov	r1, r4
 80150cc:	4628      	mov	r0, r5
 80150ce:	f7ff fe0f 	bl	8014cf0 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 80150d2:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
 80150d6:	f843 7008 	str.w	r7, [r3, r8]
 80150da:	4621      	mov	r1, r4
 80150dc:	4628      	mov	r0, r5
 80150de:	f7ff fe07 	bl	8014cf0 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 80150e2:	4620      	mov	r0, r4
 80150e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80150e8:	d01a      	beq.n	8015120 <_ZN8touchgfx9GraphData8addValueEii+0x90>
 80150ea:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 80150ee:	428a      	cmp	r2, r1
 80150f0:	dc16      	bgt.n	8015120 <_ZN8touchgfx9GraphData8addValueEii+0x90>
 80150f2:	f103 4080 	add.w	r0, r3, #1073741824	; 0x40000000
 80150f6:	3801      	subs	r0, #1
 80150f8:	0080      	lsls	r0, r0, #2
 80150fa:	42a3      	cmp	r3, r4
 80150fc:	f8d5 613c 	ldr.w	r6, [r5, #316]	; 0x13c
 8015100:	dd15      	ble.n	801512e <_ZN8touchgfx9GraphData8addValueEii+0x9e>
 8015102:	f100 0c04 	add.w	ip, r0, #4
 8015106:	5832      	ldr	r2, [r6, r0]
 8015108:	f846 200c 	str.w	r2, [r6, ip]
 801510c:	f8d5 6140 	ldr.w	r6, [r5, #320]	; 0x140
 8015110:	3b01      	subs	r3, #1
 8015112:	5832      	ldr	r2, [r6, r0]
 8015114:	f846 200c 	str.w	r2, [r6, ip]
 8015118:	b21b      	sxth	r3, r3
 801511a:	3804      	subs	r0, #4
 801511c:	e7ed      	b.n	80150fa <_ZN8touchgfx9GraphData8addValueEii+0x6a>
 801511e:	461c      	mov	r4, r3
 8015120:	f9b5 211c 	ldrsh.w	r2, [r5, #284]	; 0x11c
 8015124:	429a      	cmp	r2, r3
 8015126:	d1e4      	bne.n	80150f2 <_ZN8touchgfx9GraphData8addValueEii+0x62>
 8015128:	f04f 34ff 	mov.w	r4, #4294967295
 801512c:	e7d9      	b.n	80150e2 <_ZN8touchgfx9GraphData8addValueEii+0x52>
 801512e:	f8b5 311e 	ldrh.w	r3, [r5, #286]	; 0x11e
 8015132:	3301      	adds	r3, #1
 8015134:	f8a5 311e 	strh.w	r3, [r5, #286]	; 0x11e
 8015138:	f846 1024 	str.w	r1, [r6, r4, lsl #2]
 801513c:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
 8015140:	f843 7024 	str.w	r7, [r3, r4, lsl #2]
 8015144:	e7c9      	b.n	80150da <_ZN8touchgfx9GraphData8addValueEii+0x4a>

08015146 <_ZN8touchgfx16GraphElementLineD1Ev>:
 8015146:	4770      	bx	lr

08015148 <_ZN8touchgfx16GraphElementLineD0Ev>:
 8015148:	b510      	push	{r4, lr}
 801514a:	2130      	movs	r1, #48	; 0x30
 801514c:	4604      	mov	r4, r0
 801514e:	f015 ffec 	bl	802b12a <_ZdlPvj>
 8015152:	4620      	mov	r0, r4
 8015154:	bd10      	pop	{r4, pc}

08015156 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015156:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015158:	4604      	mov	r4, r0
 801515a:	4608      	mov	r0, r1
 801515c:	460d      	mov	r5, r1
 801515e:	f7fd f804 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 8015162:	b978      	cbnz	r0, 8015184 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015164:	4620      	mov	r0, r4
 8015166:	f7fd f800 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 801516a:	f9b5 6000 	ldrsh.w	r6, [r5]
 801516e:	b150      	cbz	r0, 8015186 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015170:	8026      	strh	r6, [r4, #0]
 8015172:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015176:	8063      	strh	r3, [r4, #2]
 8015178:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801517c:	80a3      	strh	r3, [r4, #4]
 801517e:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015182:	80e3      	strh	r3, [r4, #6]
 8015184:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015186:	f9b4 1000 	ldrsh.w	r1, [r4]
 801518a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801518e:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015192:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015196:	88ed      	ldrh	r5, [r5, #6]
 8015198:	42b1      	cmp	r1, r6
 801519a:	460f      	mov	r7, r1
 801519c:	bfa8      	it	ge
 801519e:	4637      	movge	r7, r6
 80151a0:	4293      	cmp	r3, r2
 80151a2:	4618      	mov	r0, r3
 80151a4:	4466      	add	r6, ip
 80151a6:	bfa8      	it	ge
 80151a8:	4610      	movge	r0, r2
 80151aa:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80151ae:	8027      	strh	r7, [r4, #0]
 80151b0:	442a      	add	r2, r5
 80151b2:	88e5      	ldrh	r5, [r4, #6]
 80151b4:	8060      	strh	r0, [r4, #2]
 80151b6:	4461      	add	r1, ip
 80151b8:	442b      	add	r3, r5
 80151ba:	b236      	sxth	r6, r6
 80151bc:	b209      	sxth	r1, r1
 80151be:	b212      	sxth	r2, r2
 80151c0:	b21b      	sxth	r3, r3
 80151c2:	428e      	cmp	r6, r1
 80151c4:	bfac      	ite	ge
 80151c6:	ebc7 0106 	rsbge	r1, r7, r6
 80151ca:	ebc7 0101 	rsblt	r1, r7, r1
 80151ce:	429a      	cmp	r2, r3
 80151d0:	bfac      	ite	ge
 80151d2:	ebc0 0202 	rsbge	r2, r0, r2
 80151d6:	ebc0 0203 	rsblt	r2, r0, r3
 80151da:	80a1      	strh	r1, [r4, #4]
 80151dc:	80e2      	strh	r2, [r4, #6]
 80151de:	e7d1      	b.n	8015184 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

080151e0 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 80151e0:	6800      	ldr	r0, [r0, #0]
 80151e2:	2800      	cmp	r0, #0
 80151e4:	bfb9      	ittee	lt
 80151e6:	2320      	movlt	r3, #32
 80151e8:	fb90 f0f3 	sdivlt	r0, r0, r3
 80151ec:	301f      	addge	r0, #31
 80151ee:	1140      	asrge	r0, r0, #5
 80151f0:	4770      	bx	lr

080151f2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 80151f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151f6:	6803      	ldr	r3, [r0, #0]
 80151f8:	6945      	ldr	r5, [r0, #20]
 80151fa:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80151fc:	b093      	sub	sp, #76	; 0x4c
 80151fe:	4604      	mov	r4, r0
 8015200:	460f      	mov	r7, r1
 8015202:	2d00      	cmp	r5, #0
 8015204:	f000 81ad 	beq.w	8015562 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 8015208:	696d      	ldr	r5, [r5, #20]
 801520a:	4798      	blx	r3
 801520c:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8015210:	2b00      	cmp	r3, #0
 8015212:	d077      	beq.n	8015304 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8015214:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8015218:	fb13 f000 	smulbb	r0, r3, r0
 801521c:	b283      	uxth	r3, r0
 801521e:	1c58      	adds	r0, r3, #1
 8015220:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8015224:	1200      	asrs	r0, r0, #8
 8015226:	d06d      	beq.n	8015304 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8015228:	b2c3      	uxtb	r3, r0
 801522a:	9308      	str	r3, [sp, #32]
 801522c:	6823      	ldr	r3, [r4, #0]
 801522e:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8015232:	462a      	mov	r2, r5
 8015234:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8015238:	4621      	mov	r1, r4
 801523a:	4640      	mov	r0, r8
 801523c:	4798      	blx	r3
 801523e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015242:	ae0e      	add	r6, sp, #56	; 0x38
 8015244:	e886 0003 	stmia.w	r6, {r0, r1}
 8015248:	4639      	mov	r1, r7
 801524a:	4630      	mov	r0, r6
 801524c:	f7fc ff4a 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 8015250:	6823      	ldr	r3, [r4, #0]
 8015252:	4629      	mov	r1, r5
 8015254:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015258:	4620      	mov	r0, r4
 801525a:	4798      	blx	r3
 801525c:	6823      	ldr	r3, [r4, #0]
 801525e:	4607      	mov	r7, r0
 8015260:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8015264:	4629      	mov	r1, r5
 8015266:	4620      	mov	r0, r4
 8015268:	4798      	blx	r3
 801526a:	4681      	mov	r9, r0
 801526c:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
 8015270:	0103      	lsls	r3, r0, #4
 8015272:	9309      	str	r3, [sp, #36]	; 0x24
 8015274:	6823      	ldr	r3, [r4, #0]
 8015276:	4629      	mov	r1, r5
 8015278:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 801527c:	4620      	mov	r0, r4
 801527e:	4798      	blx	r3
 8015280:	b203      	sxth	r3, r0
 8015282:	9306      	str	r3, [sp, #24]
 8015284:	6823      	ldr	r3, [r4, #0]
 8015286:	4629      	mov	r1, r5
 8015288:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 801528c:	4620      	mov	r0, r4
 801528e:	4798      	blx	r3
 8015290:	2f00      	cmp	r7, #0
 8015292:	b203      	sxth	r3, r0
 8015294:	9307      	str	r3, [sp, #28]
 8015296:	d138      	bne.n	801530a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 8015298:	f1b9 0f00 	cmp.w	r9, #0
 801529c:	d132      	bne.n	8015304 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801529e:	6823      	ldr	r3, [r4, #0]
 80152a0:	464a      	mov	r2, r9
 80152a2:	4629      	mov	r1, r5
 80152a4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80152a8:	4620      	mov	r0, r4
 80152aa:	4798      	blx	r3
 80152ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80152ae:	1ac0      	subs	r0, r0, r3
 80152b0:	9010      	str	r0, [sp, #64]	; 0x40
 80152b2:	4640      	mov	r0, r8
 80152b4:	f7ff fc6c 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80152b8:	6823      	ldr	r3, [r4, #0]
 80152ba:	4607      	mov	r7, r0
 80152bc:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80152c0:	4629      	mov	r1, r5
 80152c2:	4620      	mov	r0, r4
 80152c4:	4798      	blx	r3
 80152c6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80152ca:	1a38      	subs	r0, r7, r0
 80152cc:	fa0f f880 	sxth.w	r8, r0
 80152d0:	eb13 0f08 	cmn.w	r3, r8
 80152d4:	d416      	bmi.n	8015304 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 80152d6:	6823      	ldr	r3, [r4, #0]
 80152d8:	4629      	mov	r1, r5
 80152da:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80152de:	4620      	mov	r0, r4
 80152e0:	4798      	blx	r3
 80152e2:	4580      	cmp	r8, r0
 80152e4:	da0e      	bge.n	8015304 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 80152e6:	9a08      	ldr	r2, [sp, #32]
 80152e8:	6823      	ldr	r3, [r4, #0]
 80152ea:	9202      	str	r2, [sp, #8]
 80152ec:	b23f      	sxth	r7, r7
 80152ee:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 80152f2:	9201      	str	r2, [sp, #4]
 80152f4:	9700      	str	r7, [sp, #0]
 80152f6:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 80152fa:	4631      	mov	r1, r6
 80152fc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8015300:	4620      	mov	r0, r4
 8015302:	47a8      	blx	r5
 8015304:	b013      	add	sp, #76	; 0x4c
 8015306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801530a:	ddfb      	ble.n	8015304 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801530c:	6823      	ldr	r3, [r4, #0]
 801530e:	4629      	mov	r1, r5
 8015310:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015314:	4620      	mov	r0, r4
 8015316:	4798      	blx	r3
 8015318:	6823      	ldr	r3, [r4, #0]
 801531a:	4683      	mov	fp, r0
 801531c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015320:	4629      	mov	r1, r5
 8015322:	4620      	mov	r0, r4
 8015324:	4798      	blx	r3
 8015326:	eba0 030b 	sub.w	r3, r0, fp
 801532a:	2b00      	cmp	r3, #0
 801532c:	bfb8      	it	lt
 801532e:	425b      	neglt	r3, r3
 8015330:	fb93 f3f7 	sdiv	r3, r3, r7
 8015334:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8015338:	4680      	mov	r8, r0
 801533a:	dce3      	bgt.n	8015304 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801533c:	6823      	ldr	r3, [r4, #0]
 801533e:	465a      	mov	r2, fp
 8015340:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8015344:	4629      	mov	r1, r5
 8015346:	4620      	mov	r0, r4
 8015348:	4798      	blx	r3
 801534a:	6823      	ldr	r3, [r4, #0]
 801534c:	4606      	mov	r6, r0
 801534e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8015352:	4642      	mov	r2, r8
 8015354:	4629      	mov	r1, r5
 8015356:	4620      	mov	r0, r4
 8015358:	4798      	blx	r3
 801535a:	42b0      	cmp	r0, r6
 801535c:	bfa2      	ittt	ge
 801535e:	4643      	movge	r3, r8
 8015360:	46d8      	movge	r8, fp
 8015362:	469b      	movge	fp, r3
 8015364:	45d8      	cmp	r8, fp
 8015366:	bfac      	ite	ge
 8015368:	f04f 33ff 	movge.w	r3, #4294967295
 801536c:	2301      	movlt	r3, #1
 801536e:	fb98 f6f7 	sdiv	r6, r8, r7
 8015372:	fb9b f2f7 	sdiv	r2, fp, r7
 8015376:	1af6      	subs	r6, r6, r3
 8015378:	441a      	add	r2, r3
 801537a:	4296      	cmp	r6, r2
 801537c:	bfac      	ite	ge
 801537e:	f04f 3aff 	movge.w	sl, #4294967295
 8015382:	f04f 0a01 	movlt.w	sl, #1
 8015386:	f1b9 0f00 	cmp.w	r9, #0
 801538a:	d13e      	bne.n	801540a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 801538c:	fb07 fb0a 	mul.w	fp, r7, sl
 8015390:	eb0a 0802 	add.w	r8, sl, r2
 8015394:	4377      	muls	r7, r6
 8015396:	45b0      	cmp	r8, r6
 8015398:	d0b4      	beq.n	8015304 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801539a:	6823      	ldr	r3, [r4, #0]
 801539c:	463a      	mov	r2, r7
 801539e:	4629      	mov	r1, r5
 80153a0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80153a4:	4620      	mov	r0, r4
 80153a6:	4798      	blx	r3
 80153a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80153aa:	1ac0      	subs	r0, r0, r3
 80153ac:	9010      	str	r0, [sp, #64]	; 0x40
 80153ae:	a810      	add	r0, sp, #64	; 0x40
 80153b0:	f7ff fbee 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80153b4:	6823      	ldr	r3, [r4, #0]
 80153b6:	4681      	mov	r9, r0
 80153b8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80153bc:	4629      	mov	r1, r5
 80153be:	4620      	mov	r0, r4
 80153c0:	4798      	blx	r3
 80153c2:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 80153c6:	eba9 0000 	sub.w	r0, r9, r0
 80153ca:	b203      	sxth	r3, r0
 80153cc:	42da      	cmn	r2, r3
 80153ce:	9304      	str	r3, [sp, #16]
 80153d0:	d418      	bmi.n	8015404 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 80153d2:	6822      	ldr	r2, [r4, #0]
 80153d4:	4629      	mov	r1, r5
 80153d6:	f8d2 20ac 	ldr.w	r2, [r2, #172]	; 0xac
 80153da:	4620      	mov	r0, r4
 80153dc:	4790      	blx	r2
 80153de:	9b04      	ldr	r3, [sp, #16]
 80153e0:	4283      	cmp	r3, r0
 80153e2:	da0f      	bge.n	8015404 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 80153e4:	9b08      	ldr	r3, [sp, #32]
 80153e6:	9302      	str	r3, [sp, #8]
 80153e8:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80153ec:	6822      	ldr	r2, [r4, #0]
 80153ee:	9301      	str	r3, [sp, #4]
 80153f0:	fa0f f389 	sxth.w	r3, r9
 80153f4:	9300      	str	r3, [sp, #0]
 80153f6:	f8d2 908c 	ldr.w	r9, [r2, #140]	; 0x8c
 80153fa:	a90e      	add	r1, sp, #56	; 0x38
 80153fc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8015400:	4620      	mov	r0, r4
 8015402:	47c8      	blx	r9
 8015404:	4456      	add	r6, sl
 8015406:	445f      	add	r7, fp
 8015408:	e7c5      	b.n	8015396 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 801540a:	fb98 f8f9 	sdiv	r8, r8, r9
 801540e:	eba8 0203 	sub.w	r2, r8, r3
 8015412:	fb9b f8f9 	sdiv	r8, fp, r9
 8015416:	4498      	add	r8, r3
 8015418:	4542      	cmp	r2, r8
 801541a:	bfac      	ite	ge
 801541c:	f04f 33ff 	movge.w	r3, #4294967295
 8015420:	2301      	movlt	r3, #1
 8015422:	930a      	str	r3, [sp, #40]	; 0x28
 8015424:	6823      	ldr	r3, [r4, #0]
 8015426:	9204      	str	r2, [sp, #16]
 8015428:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801542c:	fb02 f209 	mul.w	r2, r2, r9
 8015430:	4629      	mov	r1, r5
 8015432:	4620      	mov	r0, r4
 8015434:	4798      	blx	r3
 8015436:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 801543a:	f84b 0d08 	str.w	r0, [fp, #-8]!
 801543e:	4658      	mov	r0, fp
 8015440:	f7ff fba6 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015444:	b203      	sxth	r3, r0
 8015446:	9305      	str	r3, [sp, #20]
 8015448:	6823      	ldr	r3, [r4, #0]
 801544a:	fb06 f207 	mul.w	r2, r6, r7
 801544e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8015452:	4629      	mov	r1, r5
 8015454:	4620      	mov	r0, r4
 8015456:	4798      	blx	r3
 8015458:	9010      	str	r0, [sp, #64]	; 0x40
 801545a:	4658      	mov	r0, fp
 801545c:	f7ff fb98 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015460:	fb07 f20a 	mul.w	r2, r7, sl
 8015464:	920b      	str	r2, [sp, #44]	; 0x2c
 8015466:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015468:	4442      	add	r2, r8
 801546a:	b203      	sxth	r3, r0
 801546c:	920c      	str	r2, [sp, #48]	; 0x30
 801546e:	9a05      	ldr	r2, [sp, #20]
 8015470:	429a      	cmp	r2, r3
 8015472:	dc16      	bgt.n	80154a2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 8015474:	eb06 080a 	add.w	r8, r6, sl
 8015478:	fb07 f808 	mul.w	r8, r7, r8
 801547c:	9a05      	ldr	r2, [sp, #20]
 801547e:	429a      	cmp	r2, r3
 8015480:	db54      	blt.n	801552c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 8015482:	6823      	ldr	r3, [r4, #0]
 8015484:	4642      	mov	r2, r8
 8015486:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801548a:	4629      	mov	r1, r5
 801548c:	4620      	mov	r0, r4
 801548e:	4798      	blx	r3
 8015490:	9010      	str	r0, [sp, #64]	; 0x40
 8015492:	4658      	mov	r0, fp
 8015494:	f7ff fb7c 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015498:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801549a:	4456      	add	r6, sl
 801549c:	b203      	sxth	r3, r0
 801549e:	4490      	add	r8, r2
 80154a0:	e7ec      	b.n	801547c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 80154a2:	6823      	ldr	r3, [r4, #0]
 80154a4:	fb07 f206 	mul.w	r2, r7, r6
 80154a8:	4629      	mov	r1, r5
 80154aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80154ae:	4620      	mov	r0, r4
 80154b0:	4798      	blx	r3
 80154b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80154b4:	1ac0      	subs	r0, r0, r3
 80154b6:	9010      	str	r0, [sp, #64]	; 0x40
 80154b8:	4658      	mov	r0, fp
 80154ba:	f7ff fb69 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80154be:	6823      	ldr	r3, [r4, #0]
 80154c0:	4680      	mov	r8, r0
 80154c2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80154c6:	4629      	mov	r1, r5
 80154c8:	4620      	mov	r0, r4
 80154ca:	4798      	blx	r3
 80154cc:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 80154d0:	eba8 0000 	sub.w	r0, r8, r0
 80154d4:	b203      	sxth	r3, r0
 80154d6:	42da      	cmn	r2, r3
 80154d8:	930d      	str	r3, [sp, #52]	; 0x34
 80154da:	d418      	bmi.n	801550e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 80154dc:	6822      	ldr	r2, [r4, #0]
 80154de:	4629      	mov	r1, r5
 80154e0:	f8d2 20ac 	ldr.w	r2, [r2, #172]	; 0xac
 80154e4:	4620      	mov	r0, r4
 80154e6:	4790      	blx	r2
 80154e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80154ea:	4283      	cmp	r3, r0
 80154ec:	da0f      	bge.n	801550e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 80154ee:	9b08      	ldr	r3, [sp, #32]
 80154f0:	9302      	str	r3, [sp, #8]
 80154f2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80154f6:	6822      	ldr	r2, [r4, #0]
 80154f8:	9301      	str	r3, [sp, #4]
 80154fa:	fa0f f388 	sxth.w	r3, r8
 80154fe:	9300      	str	r3, [sp, #0]
 8015500:	f8d2 808c 	ldr.w	r8, [r2, #140]	; 0x8c
 8015504:	a90e      	add	r1, sp, #56	; 0x38
 8015506:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801550a:	4620      	mov	r0, r4
 801550c:	47c0      	blx	r8
 801550e:	6823      	ldr	r3, [r4, #0]
 8015510:	4456      	add	r6, sl
 8015512:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8015516:	fb06 f207 	mul.w	r2, r6, r7
 801551a:	4629      	mov	r1, r5
 801551c:	4620      	mov	r0, r4
 801551e:	4798      	blx	r3
 8015520:	9010      	str	r0, [sp, #64]	; 0x40
 8015522:	4658      	mov	r0, fp
 8015524:	f7ff fb34 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015528:	b203      	sxth	r3, r0
 801552a:	e7a0      	b.n	801546e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 801552c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801552e:	930d      	str	r3, [sp, #52]	; 0x34
 8015530:	9b04      	ldr	r3, [sp, #16]
 8015532:	4413      	add	r3, r2
 8015534:	9304      	str	r3, [sp, #16]
 8015536:	9a04      	ldr	r2, [sp, #16]
 8015538:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801553a:	4293      	cmp	r3, r2
 801553c:	f43f aee2 	beq.w	8015304 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8015540:	9b04      	ldr	r3, [sp, #16]
 8015542:	6822      	ldr	r2, [r4, #0]
 8015544:	4629      	mov	r1, r5
 8015546:	f8d2 80b0 	ldr.w	r8, [r2, #176]	; 0xb0
 801554a:	4620      	mov	r0, r4
 801554c:	fb03 f209 	mul.w	r2, r3, r9
 8015550:	47c0      	blx	r8
 8015552:	9010      	str	r0, [sp, #64]	; 0x40
 8015554:	4658      	mov	r0, fp
 8015556:	f7ff fb1b 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801555a:	b203      	sxth	r3, r0
 801555c:	9305      	str	r3, [sp, #20]
 801555e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015560:	e785      	b.n	801546e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 8015562:	4798      	blx	r3
 8015564:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8015568:	deff      	udf	#255	; 0xff

0801556a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 801556a:	b510      	push	{r4, lr}
 801556c:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8015570:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8015574:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8015578:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801557c:	13a4      	asrs	r4, r4, #14
 801557e:	139b      	asrs	r3, r3, #14
 8015580:	429c      	cmp	r4, r3
 8015582:	bfb8      	it	lt
 8015584:	461c      	movlt	r4, r3
 8015586:	2c01      	cmp	r4, #1
 8015588:	dd07      	ble.n	801559a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 801558a:	fb91 f1f4 	sdiv	r1, r1, r4
 801558e:	fb90 f0f4 	sdiv	r0, r0, r4
 8015592:	f7ff ffea 	bl	801556a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8015596:	4360      	muls	r0, r4
 8015598:	bd10      	pop	{r4, pc}
 801559a:	4340      	muls	r0, r0
 801559c:	fb01 0101 	mla	r1, r1, r1, r0
 80155a0:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 80155a4:	bfb4      	ite	lt
 80155a6:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 80155aa:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 80155ae:	2000      	movs	r0, #0
 80155b0:	18c2      	adds	r2, r0, r3
 80155b2:	428a      	cmp	r2, r1
 80155b4:	bf9c      	itt	ls
 80155b6:	1898      	addls	r0, r3, r2
 80155b8:	1a89      	subls	r1, r1, r2
 80155ba:	089b      	lsrs	r3, r3, #2
 80155bc:	ea4f 0050 	mov.w	r0, r0, lsr #1
 80155c0:	d1f6      	bne.n	80155b0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 80155c2:	e7e9      	b.n	8015598 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

080155c4 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 80155c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80155c6:	9906      	ldr	r1, [sp, #24]
 80155c8:	4291      	cmp	r1, r2
 80155ca:	bfbc      	itt	lt
 80155cc:	9206      	strlt	r2, [sp, #24]
 80155ce:	460a      	movlt	r2, r1
 80155d0:	9907      	ldr	r1, [sp, #28]
 80155d2:	428b      	cmp	r3, r1
 80155d4:	4606      	mov	r6, r0
 80155d6:	461c      	mov	r4, r3
 80155d8:	f04f 0020 	mov.w	r0, #32
 80155dc:	bfc8      	it	gt
 80155de:	460c      	movgt	r4, r1
 80155e0:	fb92 f5f0 	sdiv	r5, r2, r0
 80155e4:	fb94 f4f0 	sdiv	r4, r4, r0
 80155e8:	a806      	add	r0, sp, #24
 80155ea:	bfc8      	it	gt
 80155ec:	9307      	strgt	r3, [sp, #28]
 80155ee:	f7ff fdf7 	bl	80151e0 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80155f2:	4607      	mov	r7, r0
 80155f4:	a807      	add	r0, sp, #28
 80155f6:	f7ff fdf3 	bl	80151e0 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80155fa:	1b7a      	subs	r2, r7, r5
 80155fc:	1b00      	subs	r0, r0, r4
 80155fe:	80f0      	strh	r0, [r6, #6]
 8015600:	8035      	strh	r5, [r6, #0]
 8015602:	8074      	strh	r4, [r6, #2]
 8015604:	80b2      	strh	r2, [r6, #4]
 8015606:	4630      	mov	r0, r6
 8015608:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801560a <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 801560a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801560c:	9c08      	ldr	r4, [sp, #32]
 801560e:	2602      	movs	r6, #2
 8015610:	3401      	adds	r4, #1
 8015612:	fb94 f4f6 	sdiv	r4, r4, r6
 8015616:	18a6      	adds	r6, r4, r2
 8015618:	191f      	adds	r7, r3, r4
 801561a:	e9cd 6700 	strd	r6, r7, [sp]
 801561e:	1b1b      	subs	r3, r3, r4
 8015620:	1b12      	subs	r2, r2, r4
 8015622:	4605      	mov	r5, r0
 8015624:	f7ff ffce 	bl	80155c4 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 8015628:	4628      	mov	r0, r5
 801562a:	b003      	add	sp, #12
 801562c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801562e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 801562e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015632:	6943      	ldr	r3, [r0, #20]
 8015634:	b089      	sub	sp, #36	; 0x24
 8015636:	4680      	mov	r8, r0
 8015638:	460d      	mov	r5, r1
 801563a:	2b00      	cmp	r3, #0
 801563c:	f000 8082 	beq.w	8015744 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x116>
 8015640:	695c      	ldr	r4, [r3, #20]
 8015642:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 8015646:	6823      	ldr	r3, [r4, #0]
 8015648:	4620      	mov	r0, r4
 801564a:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 801564e:	4798      	blx	r3
 8015650:	6823      	ldr	r3, [r4, #0]
 8015652:	4606      	mov	r6, r0
 8015654:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8015658:	4629      	mov	r1, r5
 801565a:	4620      	mov	r0, r4
 801565c:	4798      	blx	r3
 801565e:	ea4f 1949 	mov.w	r9, r9, lsl #5
 8015662:	af02      	add	r7, sp, #8
 8015664:	4603      	mov	r3, r0
 8015666:	4632      	mov	r2, r6
 8015668:	f8cd 9000 	str.w	r9, [sp]
 801566c:	4641      	mov	r1, r8
 801566e:	4638      	mov	r0, r7
 8015670:	f7ff ffcb 	bl	801560a <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 8015674:	2d00      	cmp	r5, #0
 8015676:	ae06      	add	r6, sp, #24
 8015678:	dd1c      	ble.n	80156b4 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x86>
 801567a:	6823      	ldr	r3, [r4, #0]
 801567c:	f105 3aff 	add.w	sl, r5, #4294967295
 8015680:	fa0f fa8a 	sxth.w	sl, sl
 8015684:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8015688:	4651      	mov	r1, sl
 801568a:	4620      	mov	r0, r4
 801568c:	4798      	blx	r3
 801568e:	6823      	ldr	r3, [r4, #0]
 8015690:	4683      	mov	fp, r0
 8015692:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8015696:	4651      	mov	r1, sl
 8015698:	4620      	mov	r0, r4
 801569a:	4798      	blx	r3
 801569c:	4641      	mov	r1, r8
 801569e:	4603      	mov	r3, r0
 80156a0:	f8cd 9000 	str.w	r9, [sp]
 80156a4:	4630      	mov	r0, r6
 80156a6:	465a      	mov	r2, fp
 80156a8:	f7ff ffaf 	bl	801560a <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 80156ac:	4631      	mov	r1, r6
 80156ae:	4638      	mov	r0, r7
 80156b0:	f7ff fd51 	bl	8015156 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80156b4:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 80156b8:	3b01      	subs	r3, #1
 80156ba:	429d      	cmp	r5, r3
 80156bc:	da1a      	bge.n	80156f4 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xc6>
 80156be:	6823      	ldr	r3, [r4, #0]
 80156c0:	3501      	adds	r5, #1
 80156c2:	b22d      	sxth	r5, r5
 80156c4:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 80156c8:	4629      	mov	r1, r5
 80156ca:	4620      	mov	r0, r4
 80156cc:	4798      	blx	r3
 80156ce:	6823      	ldr	r3, [r4, #0]
 80156d0:	4682      	mov	sl, r0
 80156d2:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 80156d6:	4629      	mov	r1, r5
 80156d8:	4620      	mov	r0, r4
 80156da:	4798      	blx	r3
 80156dc:	4641      	mov	r1, r8
 80156de:	4603      	mov	r3, r0
 80156e0:	f8cd 9000 	str.w	r9, [sp]
 80156e4:	4630      	mov	r0, r6
 80156e6:	4652      	mov	r2, sl
 80156e8:	f7ff ff8f 	bl	801560a <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 80156ec:	4631      	mov	r1, r6
 80156ee:	4638      	mov	r0, r7
 80156f0:	f7ff fd31 	bl	8015156 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80156f4:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 80156f8:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 80156fc:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 8015700:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015704:	18ca      	adds	r2, r1, r3
 8015706:	f8ad 0014 	strh.w	r0, [sp, #20]
 801570a:	e897 0003 	ldmia.w	r7, {r0, r1}
 801570e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 8015712:	e886 0003 	stmia.w	r6, {r0, r1}
 8015716:	1a9b      	subs	r3, r3, r2
 8015718:	a904      	add	r1, sp, #16
 801571a:	2200      	movs	r2, #0
 801571c:	4630      	mov	r0, r6
 801571e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015722:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015726:	f7fc fcdd 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 801572a:	e896 0003 	ldmia.w	r6, {r0, r1}
 801572e:	f8d8 3000 	ldr.w	r3, [r8]
 8015732:	e887 0003 	stmia.w	r7, {r0, r1}
 8015736:	691b      	ldr	r3, [r3, #16]
 8015738:	4639      	mov	r1, r7
 801573a:	4640      	mov	r0, r8
 801573c:	4798      	blx	r3
 801573e:	b009      	add	sp, #36	; 0x24
 8015740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015744:	681b      	ldr	r3, [r3, #0]
 8015746:	deff      	udf	#255	; 0xff

08015748 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 8015748:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801574c:	2b00      	cmp	r3, #0
 801574e:	da05      	bge.n	801575c <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 8015750:	880a      	ldrh	r2, [r1, #0]
 8015752:	b29b      	uxth	r3, r3
 8015754:	441a      	add	r2, r3
 8015756:	425b      	negs	r3, r3
 8015758:	800a      	strh	r2, [r1, #0]
 801575a:	808b      	strh	r3, [r1, #4]
 801575c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8015760:	2b00      	cmp	r3, #0
 8015762:	da05      	bge.n	8015770 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 8015764:	884a      	ldrh	r2, [r1, #2]
 8015766:	b29b      	uxth	r3, r3
 8015768:	441a      	add	r2, r3
 801576a:	425b      	negs	r3, r3
 801576c:	804a      	strh	r2, [r1, #2]
 801576e:	80cb      	strh	r3, [r1, #6]
 8015770:	4770      	bx	lr

08015772 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 8015772:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8015774:	4604      	mov	r4, r0
 8015776:	460d      	mov	r5, r1
 8015778:	6801      	ldr	r1, [r0, #0]
 801577a:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 801577e:	9001      	str	r0, [sp, #4]
 8015780:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8015784:	9000      	str	r0, [sp, #0]
 8015786:	f8d1 6094 	ldr.w	r6, [r1, #148]	; 0x94
 801578a:	a802      	add	r0, sp, #8
 801578c:	4621      	mov	r1, r4
 801578e:	47b0      	blx	r6
 8015790:	a902      	add	r1, sp, #8
 8015792:	4620      	mov	r0, r4
 8015794:	f7ff ffd8 	bl	8015748 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 8015798:	a802      	add	r0, sp, #8
 801579a:	4629      	mov	r1, r5
 801579c:	f7fc fca2 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 80157a0:	a802      	add	r0, sp, #8
 80157a2:	f7fc fce2 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 80157a6:	b968      	cbnz	r0, 80157c4 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 80157a8:	6823      	ldr	r3, [r4, #0]
 80157aa:	a902      	add	r1, sp, #8
 80157ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80157ae:	4620      	mov	r0, r4
 80157b0:	4798      	blx	r3
 80157b2:	f7fc ff65 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 80157b6:	6803      	ldr	r3, [r0, #0]
 80157b8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80157ba:	6a1d      	ldr	r5, [r3, #32]
 80157bc:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 80157c0:	a902      	add	r1, sp, #8
 80157c2:	47a8      	blx	r5
 80157c4:	b004      	add	sp, #16
 80157c6:	bd70      	pop	{r4, r5, r6, pc}

080157c8 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 80157c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157cc:	b08b      	sub	sp, #44	; 0x2c
 80157ce:	461e      	mov	r6, r3
 80157d0:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 80157d4:	9304      	str	r3, [sp, #16]
 80157d6:	429e      	cmp	r6, r3
 80157d8:	4689      	mov	r9, r1
 80157da:	4615      	mov	r5, r2
 80157dc:	d072      	beq.n	80158c4 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 80157de:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 80157e2:	015b      	lsls	r3, r3, #5
 80157e4:	9303      	str	r3, [sp, #12]
 80157e6:	6813      	ldr	r3, [r2, #0]
 80157e8:	4610      	mov	r0, r2
 80157ea:	4631      	mov	r1, r6
 80157ec:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 80157f0:	4798      	blx	r3
 80157f2:	ab0a      	add	r3, sp, #40	; 0x28
 80157f4:	4634      	mov	r4, r6
 80157f6:	f843 0d10 	str.w	r0, [r3, #-16]!
 80157fa:	4618      	mov	r0, r3
 80157fc:	f7ff f9c8 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015800:	682b      	ldr	r3, [r5, #0]
 8015802:	4631      	mov	r1, r6
 8015804:	0147      	lsls	r7, r0, #5
 8015806:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 801580a:	4628      	mov	r0, r5
 801580c:	4798      	blx	r3
 801580e:	ab0a      	add	r3, sp, #40	; 0x28
 8015810:	f843 0d0c 	str.w	r0, [r3, #-12]!
 8015814:	4618      	mov	r0, r3
 8015816:	f7ff f9bb 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801581a:	ea4f 1840 	mov.w	r8, r0, lsl #5
 801581e:	4642      	mov	r2, r8
 8015820:	4639      	mov	r1, r7
 8015822:	4648      	mov	r0, r9
 8015824:	f013 fa75 	bl	8028d12 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8015828:	2301      	movs	r3, #1
 801582a:	9300      	str	r3, [sp, #0]
 801582c:	9b00      	ldr	r3, [sp, #0]
 801582e:	441c      	add	r4, r3
 8015830:	682b      	ldr	r3, [r5, #0]
 8015832:	b224      	sxth	r4, r4
 8015834:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8015838:	4621      	mov	r1, r4
 801583a:	4628      	mov	r0, r5
 801583c:	4798      	blx	r3
 801583e:	9008      	str	r0, [sp, #32]
 8015840:	a808      	add	r0, sp, #32
 8015842:	f7ff f9a5 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015846:	0143      	lsls	r3, r0, #5
 8015848:	9301      	str	r3, [sp, #4]
 801584a:	682b      	ldr	r3, [r5, #0]
 801584c:	4621      	mov	r1, r4
 801584e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8015852:	4628      	mov	r0, r5
 8015854:	4798      	blx	r3
 8015856:	9009      	str	r0, [sp, #36]	; 0x24
 8015858:	a809      	add	r0, sp, #36	; 0x24
 801585a:	f7ff f999 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801585e:	0143      	lsls	r3, r0, #5
 8015860:	9302      	str	r3, [sp, #8]
 8015862:	9b01      	ldr	r3, [sp, #4]
 8015864:	eba3 0b07 	sub.w	fp, r3, r7
 8015868:	9b02      	ldr	r3, [sp, #8]
 801586a:	eba3 0a08 	sub.w	sl, r3, r8
 801586e:	4651      	mov	r1, sl
 8015870:	4658      	mov	r0, fp
 8015872:	f7ff fe7a 	bl	801556a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8015876:	b318      	cbz	r0, 80158c0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 8015878:	4602      	mov	r2, r0
 801587a:	4651      	mov	r1, sl
 801587c:	9005      	str	r0, [sp, #20]
 801587e:	9803      	ldr	r0, [sp, #12]
 8015880:	f004 ff2f 	bl	801a6e2 <_ZN8touchgfx6muldivElll>
 8015884:	2302      	movs	r3, #2
 8015886:	fb90 faf3 	sdiv	sl, r0, r3
 801588a:	9b05      	ldr	r3, [sp, #20]
 801588c:	9803      	ldr	r0, [sp, #12]
 801588e:	461a      	mov	r2, r3
 8015890:	4659      	mov	r1, fp
 8015892:	f004 ff26 	bl	801a6e2 <_ZN8touchgfx6muldivElll>
 8015896:	2302      	movs	r3, #2
 8015898:	eba7 010a 	sub.w	r1, r7, sl
 801589c:	fb90 fbf3 	sdiv	fp, r0, r3
 80158a0:	4648      	mov	r0, r9
 80158a2:	eb0b 0208 	add.w	r2, fp, r8
 80158a6:	f013 f9c3 	bl	8028c30 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80158aa:	9b02      	ldr	r3, [sp, #8]
 80158ac:	eb03 020b 	add.w	r2, r3, fp
 80158b0:	9b01      	ldr	r3, [sp, #4]
 80158b2:	4648      	mov	r0, r9
 80158b4:	eba3 010a 	sub.w	r1, r3, sl
 80158b8:	f013 f9ba 	bl	8028c30 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80158bc:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 80158c0:	42a6      	cmp	r6, r4
 80158c2:	db02      	blt.n	80158ca <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 80158c4:	b00b      	add	sp, #44	; 0x2c
 80158c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158ca:	9b00      	ldr	r3, [sp, #0]
 80158cc:	9a04      	ldr	r2, [sp, #16]
 80158ce:	42a2      	cmp	r2, r4
 80158d0:	bf08      	it	eq
 80158d2:	f04f 33ff 	moveq.w	r3, #4294967295
 80158d6:	e7a8      	b.n	801582a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>

080158d8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 80158d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80158dc:	6943      	ldr	r3, [r0, #20]
 80158de:	b0b4      	sub	sp, #208	; 0xd0
 80158e0:	4606      	mov	r6, r0
 80158e2:	460f      	mov	r7, r1
 80158e4:	2b00      	cmp	r3, #0
 80158e6:	d06a      	beq.n	80159be <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 80158e8:	695c      	ldr	r4, [r3, #20]
 80158ea:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 80158ee:	2b01      	cmp	r3, #1
 80158f0:	dc04      	bgt.n	80158fc <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 80158f2:	2401      	movs	r4, #1
 80158f4:	4620      	mov	r0, r4
 80158f6:	b034      	add	sp, #208	; 0xd0
 80158f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80158fc:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 8015900:	ad34      	add	r5, sp, #208	; 0xd0
 8015902:	011b      	lsls	r3, r3, #4
 8015904:	f845 3dbc 	str.w	r3, [r5, #-188]!
 8015908:	4628      	mov	r0, r5
 801590a:	f7ff fc69 	bl	80151e0 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801590e:	8839      	ldrh	r1, [r7, #0]
 8015910:	88ba      	ldrh	r2, [r7, #4]
 8015912:	6823      	ldr	r3, [r4, #0]
 8015914:	b280      	uxth	r0, r0
 8015916:	440a      	add	r2, r1
 8015918:	4402      	add	r2, r0
 801591a:	1a09      	subs	r1, r1, r0
 801591c:	f10d 000a 	add.w	r0, sp, #10
 8015920:	9000      	str	r0, [sp, #0]
 8015922:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 8015926:	b212      	sxth	r2, r2
 8015928:	ab02      	add	r3, sp, #8
 801592a:	b209      	sxth	r1, r1
 801592c:	4620      	mov	r0, r4
 801592e:	47c0      	blx	r8
 8015930:	2800      	cmp	r0, #0
 8015932:	d0de      	beq.n	80158f2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 8015934:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 8015938:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 801593c:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 8015940:	f8ad 100e 	strh.w	r1, [sp, #14]
 8015944:	18ca      	adds	r2, r1, r3
 8015946:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 801594a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801594e:	1a9b      	subs	r3, r3, r2
 8015950:	4639      	mov	r1, r7
 8015952:	2200      	movs	r2, #0
 8015954:	a803      	add	r0, sp, #12
 8015956:	f8ad 3012 	strh.w	r3, [sp, #18]
 801595a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801595e:	f7fc fbc1 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 8015962:	aa03      	add	r2, sp, #12
 8015964:	4631      	mov	r1, r6
 8015966:	4628      	mov	r0, r5
 8015968:	f013 f808 	bl	802897c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 801596c:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 8015970:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8015974:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8015978:	2f00      	cmp	r7, #0
 801597a:	dd03      	ble.n	8015984 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 801597c:	42bb      	cmp	r3, r7
 801597e:	da01      	bge.n	8015984 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 8015980:	42ba      	cmp	r2, r7
 8015982:	da0f      	bge.n	80159a4 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 8015984:	9200      	str	r2, [sp, #0]
 8015986:	4622      	mov	r2, r4
 8015988:	4629      	mov	r1, r5
 801598a:	4630      	mov	r0, r6
 801598c:	f7ff ff1c 	bl	80157c8 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 8015990:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 8015994:	4628      	mov	r0, r5
 8015996:	f013 fac0 	bl	8028f1a <_ZN8touchgfx6Canvas6renderEh>
 801599a:	4604      	mov	r4, r0
 801599c:	4628      	mov	r0, r5
 801599e:	f013 fafb 	bl	8028f98 <_ZN8touchgfx6CanvasD1Ev>
 80159a2:	e7a7      	b.n	80158f4 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 80159a4:	1e7a      	subs	r2, r7, #1
 80159a6:	b212      	sxth	r2, r2
 80159a8:	9200      	str	r2, [sp, #0]
 80159aa:	4629      	mov	r1, r5
 80159ac:	4622      	mov	r2, r4
 80159ae:	4630      	mov	r0, r6
 80159b0:	f7ff ff0a 	bl	80157c8 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 80159b4:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80159b8:	9300      	str	r3, [sp, #0]
 80159ba:	463b      	mov	r3, r7
 80159bc:	e7e3      	b.n	8015986 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 80159be:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 80159c2:	deff      	udf	#255	; 0xff

080159c4 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 80159c4:	4770      	bx	lr

080159c6 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 80159c6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80159c8:	b118      	cbz	r0, 80159d2 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 80159ca:	6803      	ldr	r3, [r0, #0]
 80159cc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80159d0:	4718      	bx	r3
 80159d2:	4770      	bx	lr

080159d4 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 80159d4:	680b      	ldr	r3, [r1, #0]
 80159d6:	4608      	mov	r0, r1
 80159d8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80159dc:	4718      	bx	r3

080159de <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 80159de:	680b      	ldr	r3, [r1, #0]
 80159e0:	4608      	mov	r0, r1
 80159e2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80159e6:	4718      	bx	r3

080159e8 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 80159e8:	680b      	ldr	r3, [r1, #0]
 80159ea:	4608      	mov	r0, r1
 80159ec:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 80159f0:	4718      	bx	r3

080159f2 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 80159f2:	680b      	ldr	r3, [r1, #0]
 80159f4:	4608      	mov	r0, r1
 80159f6:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80159fa:	4718      	bx	r3

080159fc <_ZN8touchgfx12GraphLabelsYD1Ev>:
 80159fc:	4770      	bx	lr

080159fe <_ZN8touchgfx12GraphLabelsXD1Ev>:
 80159fe:	4770      	bx	lr

08015a00 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 8015a00:	b538      	push	{r3, r4, r5, lr}
 8015a02:	680a      	ldr	r2, [r1, #0]
 8015a04:	e9d0 540d 	ldrd	r5, r4, [r0, #52]	; 0x34
 8015a08:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 8015a0c:	4608      	mov	r0, r1
 8015a0e:	4790      	blx	r2
 8015a10:	4629      	mov	r1, r5
 8015a12:	4602      	mov	r2, r0
 8015a14:	4620      	mov	r0, r4
 8015a16:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8015a1a:	f7ff bae9 	b.w	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08015a1e <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 8015a1e:	b538      	push	{r3, r4, r5, lr}
 8015a20:	680a      	ldr	r2, [r1, #0]
 8015a22:	e9d0 540d 	ldrd	r5, r4, [r0, #52]	; 0x34
 8015a26:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 8015a2a:	4608      	mov	r0, r1
 8015a2c:	4790      	blx	r2
 8015a2e:	4629      	mov	r1, r5
 8015a30:	4602      	mov	r2, r0
 8015a32:	4620      	mov	r0, r4
 8015a34:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8015a38:	f7ff bada 	b.w	8014ff0 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08015a3c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 8015a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a40:	4b3b      	ldr	r3, [pc, #236]	; (8015b30 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xf4>)
 8015a42:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 8015a46:	881b      	ldrh	r3, [r3, #0]
 8015a48:	4293      	cmp	r3, r2
 8015a4a:	b087      	sub	sp, #28
 8015a4c:	4604      	mov	r4, r0
 8015a4e:	4689      	mov	r9, r1
 8015a50:	d93e      	bls.n	8015ad0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8015a52:	4b38      	ldr	r3, [pc, #224]	; (8015b34 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xf8>)
 8015a54:	681b      	ldr	r3, [r3, #0]
 8015a56:	b92b      	cbnz	r3, 8015a64 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x28>
 8015a58:	4b37      	ldr	r3, [pc, #220]	; (8015b38 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xfc>)
 8015a5a:	4a38      	ldr	r2, [pc, #224]	; (8015b3c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x100>)
 8015a5c:	4838      	ldr	r0, [pc, #224]	; (8015b40 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x104>)
 8015a5e:	21ae      	movs	r1, #174	; 0xae
 8015a60:	f016 fab0 	bl	802bfc4 <__assert_func>
 8015a64:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8015a68:	4b36      	ldr	r3, [pc, #216]	; (8015b44 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x108>)
 8015a6a:	681b      	ldr	r3, [r3, #0]
 8015a6c:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 8015a70:	f1b8 0f00 	cmp.w	r8, #0
 8015a74:	d02c      	beq.n	8015ad0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8015a76:	6803      	ldr	r3, [r0, #0]
 8015a78:	6945      	ldr	r5, [r0, #20]
 8015a7a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015a7c:	2d00      	cmp	r5, #0
 8015a7e:	d052      	beq.n	8015b26 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xea>
 8015a80:	696f      	ldr	r7, [r5, #20]
 8015a82:	4798      	blx	r3
 8015a84:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 8015a88:	fb15 f000 	smulbb	r0, r5, r0
 8015a8c:	b280      	uxth	r0, r0
 8015a8e:	1c45      	adds	r5, r0, #1
 8015a90:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015a94:	122d      	asrs	r5, r5, #8
 8015a96:	d01b      	beq.n	8015ad0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8015a98:	6823      	ldr	r3, [r4, #0]
 8015a9a:	4639      	mov	r1, r7
 8015a9c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015aa0:	4620      	mov	r0, r4
 8015aa2:	4798      	blx	r3
 8015aa4:	6823      	ldr	r3, [r4, #0]
 8015aa6:	4606      	mov	r6, r0
 8015aa8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8015aac:	4639      	mov	r1, r7
 8015aae:	4620      	mov	r0, r4
 8015ab0:	4798      	blx	r3
 8015ab2:	b2ed      	uxtb	r5, r5
 8015ab4:	4683      	mov	fp, r0
 8015ab6:	b970      	cbnz	r0, 8015ad6 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x9a>
 8015ab8:	b96e      	cbnz	r6, 8015ad6 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x9a>
 8015aba:	e9cd 6501 	strd	r6, r5, [sp, #4]
 8015abe:	6823      	ldr	r3, [r4, #0]
 8015ac0:	9600      	str	r6, [sp, #0]
 8015ac2:	f8d3 5090 	ldr.w	r5, [r3, #144]	; 0x90
 8015ac6:	4642      	mov	r2, r8
 8015ac8:	463b      	mov	r3, r7
 8015aca:	4649      	mov	r1, r9
 8015acc:	4620      	mov	r0, r4
 8015ace:	47a8      	blx	r5
 8015ad0:	b007      	add	sp, #28
 8015ad2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ad6:	2e00      	cmp	r6, #0
 8015ad8:	ddfa      	ble.n	8015ad0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8015ada:	6823      	ldr	r3, [r4, #0]
 8015adc:	4639      	mov	r1, r7
 8015ade:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8015ae2:	4620      	mov	r0, r4
 8015ae4:	4798      	blx	r3
 8015ae6:	6823      	ldr	r3, [r4, #0]
 8015ae8:	4682      	mov	sl, r0
 8015aea:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015aee:	4639      	mov	r1, r7
 8015af0:	4620      	mov	r0, r4
 8015af2:	4798      	blx	r3
 8015af4:	4582      	cmp	sl, r0
 8015af6:	bfde      	ittt	le
 8015af8:	4603      	movle	r3, r0
 8015afa:	4650      	movle	r0, sl
 8015afc:	469a      	movle	sl, r3
 8015afe:	ebaa 0300 	sub.w	r3, sl, r0
 8015b02:	fb93 f3f6 	sdiv	r3, r3, r6
 8015b06:	2b64      	cmp	r3, #100	; 0x64
 8015b08:	dce2      	bgt.n	8015ad0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8015b0a:	e9cd b503 	strd	fp, r5, [sp, #12]
 8015b0e:	e9cd a601 	strd	sl, r6, [sp, #4]
 8015b12:	6823      	ldr	r3, [r4, #0]
 8015b14:	9000      	str	r0, [sp, #0]
 8015b16:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 8015b1a:	4642      	mov	r2, r8
 8015b1c:	463b      	mov	r3, r7
 8015b1e:	4649      	mov	r1, r9
 8015b20:	4620      	mov	r0, r4
 8015b22:	47a8      	blx	r5
 8015b24:	e7d4      	b.n	8015ad0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8015b26:	4798      	blx	r3
 8015b28:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8015b2c:	deff      	udf	#255	; 0xff
 8015b2e:	bf00      	nop
 8015b30:	2001e234 	.word	0x2001e234
 8015b34:	2001e230 	.word	0x2001e230
 8015b38:	0802f6d0 	.word	0x0802f6d0
 8015b3c:	08034648 	.word	0x08034648
 8015b40:	0802f75e 	.word	0x0802f75e
 8015b44:	2001e238 	.word	0x2001e238

08015b48 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 8015b48:	b510      	push	{r4, lr}
 8015b4a:	2150      	movs	r1, #80	; 0x50
 8015b4c:	4604      	mov	r4, r0
 8015b4e:	f015 faec 	bl	802b12a <_ZdlPvj>
 8015b52:	4620      	mov	r0, r4
 8015b54:	bd10      	pop	{r4, pc}

08015b56 <_ZN8touchgfx12GraphLabelsXD0Ev>:
 8015b56:	b510      	push	{r4, lr}
 8015b58:	2150      	movs	r1, #80	; 0x50
 8015b5a:	4604      	mov	r4, r0
 8015b5c:	f015 fae5 	bl	802b12a <_ZdlPvj>
 8015b60:	4620      	mov	r0, r4
 8015b62:	bd10      	pop	{r4, pc}

08015b64 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 8015b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b68:	b08d      	sub	sp, #52	; 0x34
 8015b6a:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 8015b6e:	9309      	str	r3, [sp, #36]	; 0x24
 8015b70:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 8015b74:	930a      	str	r3, [sp, #40]	; 0x28
 8015b76:	4606      	mov	r6, r0
 8015b78:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8015b7c:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 8015b80:	f1b9 0f00 	cmp.w	r9, #0
 8015b84:	d117      	bne.n	8015bb6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 8015b86:	2f00      	cmp	r7, #0
 8015b88:	dc7c      	bgt.n	8015c84 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 8015b8a:	f1b8 0f00 	cmp.w	r8, #0
 8015b8e:	da01      	bge.n	8015b94 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 8015b90:	2f00      	cmp	r7, #0
 8015b92:	d17a      	bne.n	8015c8a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 8015b94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015b96:	9318      	str	r3, [sp, #96]	; 0x60
 8015b98:	2300      	movs	r3, #0
 8015b9a:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 8015b9e:	6832      	ldr	r2, [r6, #0]
 8015ba0:	9907      	ldr	r1, [sp, #28]
 8015ba2:	f8d2 4090 	ldr.w	r4, [r2, #144]	; 0x90
 8015ba6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8015baa:	4630      	mov	r0, r6
 8015bac:	46a4      	mov	ip, r4
 8015bae:	b00d      	add	sp, #52	; 0x34
 8015bb0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015bb4:	4760      	bx	ip
 8015bb6:	fb97 f4f9 	sdiv	r4, r7, r9
 8015bba:	1e63      	subs	r3, r4, #1
 8015bbc:	9305      	str	r3, [sp, #20]
 8015bbe:	f1ba 0f00 	cmp.w	sl, #0
 8015bc2:	d122      	bne.n	8015c0a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 8015bc4:	fb98 faf9 	sdiv	sl, r8, r9
 8015bc8:	fb03 f509 	mul.w	r5, r3, r9
 8015bcc:	f10a 0a02 	add.w	sl, sl, #2
 8015bd0:	9b05      	ldr	r3, [sp, #20]
 8015bd2:	459a      	cmp	sl, r3
 8015bd4:	d059      	beq.n	8015c8a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 8015bd6:	42af      	cmp	r7, r5
 8015bd8:	dc5a      	bgt.n	8015c90 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 8015bda:	45a8      	cmp	r8, r5
 8015bdc:	da01      	bge.n	8015be2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 8015bde:	42af      	cmp	r7, r5
 8015be0:	db0e      	blt.n	8015c00 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 8015be2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015be4:	9302      	str	r3, [sp, #8]
 8015be6:	9905      	ldr	r1, [sp, #20]
 8015be8:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8015bea:	6832      	ldr	r2, [r6, #0]
 8015bec:	434b      	muls	r3, r1
 8015bee:	e9cd 5300 	strd	r5, r3, [sp]
 8015bf2:	9907      	ldr	r1, [sp, #28]
 8015bf4:	f8d2 b090 	ldr.w	fp, [r2, #144]	; 0x90
 8015bf8:	4630      	mov	r0, r6
 8015bfa:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8015bfe:	47d8      	blx	fp
 8015c00:	9b05      	ldr	r3, [sp, #20]
 8015c02:	3301      	adds	r3, #1
 8015c04:	9305      	str	r3, [sp, #20]
 8015c06:	444d      	add	r5, r9
 8015c08:	e7e2      	b.n	8015bd0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 8015c0a:	fb97 f3fa 	sdiv	r3, r7, sl
 8015c0e:	3b01      	subs	r3, #1
 8015c10:	9306      	str	r3, [sp, #24]
 8015c12:	9a06      	ldr	r2, [sp, #24]
 8015c14:	fb98 f3fa 	sdiv	r3, r8, sl
 8015c18:	fb02 fb0a 	mul.w	fp, r2, sl
 8015c1c:	9a05      	ldr	r2, [sp, #20]
 8015c1e:	3302      	adds	r3, #2
 8015c20:	fb02 f509 	mul.w	r5, r2, r9
 8015c24:	930b      	str	r3, [sp, #44]	; 0x2c
 8015c26:	45ab      	cmp	fp, r5
 8015c28:	dd1d      	ble.n	8015c66 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 8015c2a:	42af      	cmp	r7, r5
 8015c2c:	dc08      	bgt.n	8015c40 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 8015c2e:	45a8      	cmp	r8, r5
 8015c30:	da08      	bge.n	8015c44 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 8015c32:	42af      	cmp	r7, r5
 8015c34:	da06      	bge.n	8015c44 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 8015c36:	9b05      	ldr	r3, [sp, #20]
 8015c38:	3301      	adds	r3, #1
 8015c3a:	9305      	str	r3, [sp, #20]
 8015c3c:	444d      	add	r5, r9
 8015c3e:	e7f2      	b.n	8015c26 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 8015c40:	45a8      	cmp	r8, r5
 8015c42:	dcf8      	bgt.n	8015c36 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 8015c44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015c46:	9302      	str	r3, [sp, #8]
 8015c48:	9905      	ldr	r1, [sp, #20]
 8015c4a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8015c4c:	6832      	ldr	r2, [r6, #0]
 8015c4e:	434b      	muls	r3, r1
 8015c50:	e9cd 5300 	strd	r5, r3, [sp]
 8015c54:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8015c58:	9907      	ldr	r1, [sp, #28]
 8015c5a:	461c      	mov	r4, r3
 8015c5c:	4630      	mov	r0, r6
 8015c5e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8015c62:	47a0      	blx	r4
 8015c64:	e7e7      	b.n	8015c36 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 8015c66:	45ab      	cmp	fp, r5
 8015c68:	db04      	blt.n	8015c74 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 8015c6a:	9b05      	ldr	r3, [sp, #20]
 8015c6c:	3301      	adds	r3, #1
 8015c6e:	9305      	str	r3, [sp, #20]
 8015c70:	444d      	add	r5, r9
 8015c72:	e7f8      	b.n	8015c66 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 8015c74:	9b06      	ldr	r3, [sp, #24]
 8015c76:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015c78:	3301      	adds	r3, #1
 8015c7a:	4293      	cmp	r3, r2
 8015c7c:	9306      	str	r3, [sp, #24]
 8015c7e:	d004      	beq.n	8015c8a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 8015c80:	44d3      	add	fp, sl
 8015c82:	e7d0      	b.n	8015c26 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 8015c84:	f1b8 0f00 	cmp.w	r8, #0
 8015c88:	dd84      	ble.n	8015b94 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 8015c8a:	b00d      	add	sp, #52	; 0x34
 8015c8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c90:	45a8      	cmp	r8, r5
 8015c92:	dcb5      	bgt.n	8015c00 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 8015c94:	e7a5      	b.n	8015be2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

08015c96 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 8015c96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c9a:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 8015c9e:	b089      	sub	sp, #36	; 0x24
 8015ca0:	2c00      	cmp	r4, #0
 8015ca2:	9007      	str	r0, [sp, #28]
 8015ca4:	468a      	mov	sl, r1
 8015ca6:	4693      	mov	fp, r2
 8015ca8:	461d      	mov	r5, r3
 8015caa:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 8015cae:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 8015cb2:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8015cb6:	dd03      	ble.n	8015cc0 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 8015cb8:	4564      	cmp	r4, ip
 8015cba:	dd01      	ble.n	8015cc0 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 8015cbc:	42b4      	cmp	r4, r6
 8015cbe:	dd0e      	ble.n	8015cde <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 8015cc0:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 8015cc4:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 8015cc8:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 8015ccc:	9807      	ldr	r0, [sp, #28]
 8015cce:	462b      	mov	r3, r5
 8015cd0:	465a      	mov	r2, fp
 8015cd2:	4651      	mov	r1, sl
 8015cd4:	b009      	add	sp, #36	; 0x24
 8015cd6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cda:	f7ff bf43 	b.w	8015b64 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 8015cde:	f104 3eff 	add.w	lr, r4, #4294967295
 8015ce2:	e9cd 8903 	strd	r8, r9, [sp, #12]
 8015ce6:	9702      	str	r7, [sp, #8]
 8015ce8:	e9cd ce00 	strd	ip, lr, [sp]
 8015cec:	f7ff ff3a 	bl	8015b64 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 8015cf0:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 8015cf4:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 8015cf8:	9412      	str	r4, [sp, #72]	; 0x48
 8015cfa:	e7e7      	b.n	8015ccc <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

08015cfc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 8015cfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015d00:	f1b3 0900 	subs.w	r9, r3, #0
 8015d04:	460d      	mov	r5, r1
 8015d06:	4690      	mov	r8, r2
 8015d08:	9f08      	ldr	r7, [sp, #32]
 8015d0a:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 8015d0e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015d10:	da18      	bge.n	8015d44 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 8015d12:	2a01      	cmp	r2, #1
 8015d14:	dd16      	ble.n	8015d44 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 8015d16:	232d      	movs	r3, #45	; 0x2d
 8015d18:	800b      	strh	r3, [r1, #0]
 8015d1a:	f1c9 0900 	rsb	r9, r9, #0
 8015d1e:	2001      	movs	r0, #1
 8015d20:	2f00      	cmp	r7, #0
 8015d22:	d111      	bne.n	8015d48 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 8015d24:	eba8 0100 	sub.w	r1, r8, r0
 8015d28:	2302      	movs	r3, #2
 8015d2a:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8015d2e:	fb96 f3f3 	sdiv	r3, r6, r3
 8015d32:	4a24      	ldr	r2, [pc, #144]	; (8015dc4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 8015d34:	444b      	add	r3, r9
 8015d36:	b289      	uxth	r1, r1
 8015d38:	fb93 f3f6 	sdiv	r3, r3, r6
 8015d3c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015d40:	f006 bbe6 	b.w	801c510 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8015d44:	2000      	movs	r0, #0
 8015d46:	e7eb      	b.n	8015d20 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 8015d48:	dd39      	ble.n	8015dbe <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 8015d4a:	fb99 f4f6 	sdiv	r4, r9, r6
 8015d4e:	eba8 0100 	sub.w	r1, r8, r0
 8015d52:	4623      	mov	r3, r4
 8015d54:	4a1b      	ldr	r2, [pc, #108]	; (8015dc4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 8015d56:	b289      	uxth	r1, r1
 8015d58:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8015d5c:	f006 fbd8 	bl	801c510 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8015d60:	4628      	mov	r0, r5
 8015d62:	f006 f861 	bl	801be28 <_ZN8touchgfx7Unicode6strlenEPKt>
 8015d66:	f108 38ff 	add.w	r8, r8, #4294967295
 8015d6a:	4580      	cmp	r8, r0
 8015d6c:	dd27      	ble.n	8015dbe <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 8015d6e:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 8015d72:	fb06 9314 	mls	r3, r6, r4, r9
 8015d76:	3001      	adds	r0, #1
 8015d78:	2200      	movs	r2, #0
 8015d7a:	f04f 090a 	mov.w	r9, #10
 8015d7e:	f107 3aff 	add.w	sl, r7, #4294967295
 8015d82:	f04f 0e02 	mov.w	lr, #2
 8015d86:	fb96 fefe 	sdiv	lr, r6, lr
 8015d8a:	4580      	cmp	r8, r0
 8015d8c:	4684      	mov	ip, r0
 8015d8e:	dd13      	ble.n	8015db8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 8015d90:	fb09 f303 	mul.w	r3, r9, r3
 8015d94:	4592      	cmp	sl, r2
 8015d96:	f102 0201 	add.w	r2, r2, #1
 8015d9a:	bf08      	it	eq
 8015d9c:	4473      	addeq	r3, lr
 8015d9e:	f100 0c01 	add.w	ip, r0, #1
 8015da2:	fb93 f4f6 	sdiv	r4, r3, r6
 8015da6:	4297      	cmp	r7, r2
 8015da8:	f104 0130 	add.w	r1, r4, #48	; 0x30
 8015dac:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 8015db0:	fb06 3314 	mls	r3, r6, r4, r3
 8015db4:	4660      	mov	r0, ip
 8015db6:	d1e8      	bne.n	8015d8a <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 8015db8:	2300      	movs	r3, #0
 8015dba:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 8015dbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015dc2:	bf00      	nop
 8015dc4:	08032cdc 	.word	0x08032cdc

08015dc8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 8015dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dcc:	4b87      	ldr	r3, [pc, #540]	; (8015fec <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x224>)
 8015dce:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 8015dd2:	460e      	mov	r6, r1
 8015dd4:	8819      	ldrh	r1, [r3, #0]
 8015dd6:	4291      	cmp	r1, r2
 8015dd8:	b095      	sub	sp, #84	; 0x54
 8015dda:	4604      	mov	r4, r0
 8015ddc:	4699      	mov	r9, r3
 8015dde:	d942      	bls.n	8015e66 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015de0:	4983      	ldr	r1, [pc, #524]	; (8015ff0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x228>)
 8015de2:	680b      	ldr	r3, [r1, #0]
 8015de4:	468a      	mov	sl, r1
 8015de6:	b92b      	cbnz	r3, 8015df4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x2c>
 8015de8:	4b82      	ldr	r3, [pc, #520]	; (8015ff4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x22c>)
 8015dea:	4a83      	ldr	r2, [pc, #524]	; (8015ff8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x230>)
 8015dec:	21ae      	movs	r1, #174	; 0xae
 8015dee:	4883      	ldr	r0, [pc, #524]	; (8015ffc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x234>)
 8015df0:	f016 f8e8 	bl	802bfc4 <__assert_func>
 8015df4:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8015df8:	4b81      	ldr	r3, [pc, #516]	; (8016000 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x238>)
 8015dfa:	681b      	ldr	r3, [r3, #0]
 8015dfc:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 8015e00:	f1b8 0f00 	cmp.w	r8, #0
 8015e04:	d02f      	beq.n	8015e66 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015e06:	6803      	ldr	r3, [r0, #0]
 8015e08:	6945      	ldr	r5, [r0, #20]
 8015e0a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015e0c:	2d00      	cmp	r5, #0
 8015e0e:	f000 80e9 	beq.w	8015fe4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x21c>
 8015e12:	696f      	ldr	r7, [r5, #20]
 8015e14:	4798      	blx	r3
 8015e16:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8015e1a:	fb13 f000 	smulbb	r0, r3, r0
 8015e1e:	b280      	uxth	r0, r0
 8015e20:	1c43      	adds	r3, r0, #1
 8015e22:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015e26:	0a03      	lsrs	r3, r0, #8
 8015e28:	d01d      	beq.n	8015e66 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015e2a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8015e2c:	6823      	ldr	r3, [r4, #0]
 8015e2e:	434e      	muls	r6, r1
 8015e30:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015e34:	4639      	mov	r1, r7
 8015e36:	4620      	mov	r0, r4
 8015e38:	4798      	blx	r3
 8015e3a:	6823      	ldr	r3, [r4, #0]
 8015e3c:	4605      	mov	r5, r0
 8015e3e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8015e42:	4639      	mov	r1, r7
 8015e44:	4620      	mov	r0, r4
 8015e46:	4798      	blx	r3
 8015e48:	2d00      	cmp	r5, #0
 8015e4a:	dd0f      	ble.n	8015e6c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 8015e4c:	fb96 f3f5 	sdiv	r3, r6, r5
 8015e50:	436b      	muls	r3, r5
 8015e52:	1b9a      	subs	r2, r3, r6
 8015e54:	4253      	negs	r3, r2
 8015e56:	4153      	adcs	r3, r2
 8015e58:	2800      	cmp	r0, #0
 8015e5a:	dd09      	ble.n	8015e70 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 8015e5c:	fb96 f2f0 	sdiv	r2, r6, r0
 8015e60:	4350      	muls	r0, r2
 8015e62:	42b0      	cmp	r0, r6
 8015e64:	d10e      	bne.n	8015e84 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xbc>
 8015e66:	b015      	add	sp, #84	; 0x54
 8015e68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e6c:	2300      	movs	r3, #0
 8015e6e:	e7f3      	b.n	8015e58 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 8015e70:	d108      	bne.n	8015e84 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xbc>
 8015e72:	2d00      	cmp	r5, #0
 8015e74:	f040 80b2 	bne.w	8015fdc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x214>
 8015e78:	2e00      	cmp	r6, #0
 8015e7a:	d037      	beq.n	8015eec <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x124>
 8015e7c:	2b00      	cmp	r3, #0
 8015e7e:	d0f2      	beq.n	8015e66 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015e80:	462a      	mov	r2, r5
 8015e82:	e007      	b.n	8015e94 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xcc>
 8015e84:	2b00      	cmp	r3, #0
 8015e86:	d0ee      	beq.n	8015e66 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015e88:	2d00      	cmp	r5, #0
 8015e8a:	d0f9      	beq.n	8015e80 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 8015e8c:	fb96 f2f5 	sdiv	r2, r6, r5
 8015e90:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8015e92:	436a      	muls	r2, r5
 8015e94:	683b      	ldr	r3, [r7, #0]
 8015e96:	f8df b170 	ldr.w	fp, [pc, #368]	; 8016008 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x240>
 8015e9a:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 8015e9e:	4631      	mov	r1, r6
 8015ea0:	4638      	mov	r0, r7
 8015ea2:	4798      	blx	r3
 8015ea4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8015ea6:	9302      	str	r3, [sp, #8]
 8015ea8:	f8b4 3048 	ldrh.w	r3, [r4, #72]	; 0x48
 8015eac:	9301      	str	r3, [sp, #4]
 8015eae:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8015eb2:	9300      	str	r3, [sp, #0]
 8015eb4:	2214      	movs	r2, #20
 8015eb6:	4603      	mov	r3, r0
 8015eb8:	a90a      	add	r1, sp, #40	; 0x28
 8015eba:	4620      	mov	r0, r4
 8015ebc:	f7ff ff1e 	bl	8015cfc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 8015ec0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8015ec4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015ec8:	f8d8 3000 	ldr.w	r3, [r8]
 8015ecc:	d13b      	bne.n	8015f46 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x17e>
 8015ece:	699d      	ldr	r5, [r3, #24]
 8015ed0:	f8da 3000 	ldr.w	r3, [sl]
 8015ed4:	2b00      	cmp	r3, #0
 8015ed6:	d087      	beq.n	8015de8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x20>
 8015ed8:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8015edc:	f8b9 3000 	ldrh.w	r3, [r9]
 8015ee0:	428b      	cmp	r3, r1
 8015ee2:	d805      	bhi.n	8015ef0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x128>
 8015ee4:	4b47      	ldr	r3, [pc, #284]	; (8016004 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x23c>)
 8015ee6:	4a44      	ldr	r2, [pc, #272]	; (8015ff8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x230>)
 8015ee8:	21af      	movs	r1, #175	; 0xaf
 8015eea:	e780      	b.n	8015dee <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x26>
 8015eec:	4632      	mov	r2, r6
 8015eee:	e7d1      	b.n	8015e94 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xcc>
 8015ef0:	f8db 0000 	ldr.w	r0, [fp]
 8015ef4:	f7f4 fee8 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8015ef8:	aa0a      	add	r2, sp, #40	; 0x28
 8015efa:	4601      	mov	r1, r0
 8015efc:	4640      	mov	r0, r8
 8015efe:	47a8      	blx	r5
 8015f00:	4605      	mov	r5, r0
 8015f02:	683b      	ldr	r3, [r7, #0]
 8015f04:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 8015f08:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8015f0c:	4631      	mov	r1, r6
 8015f0e:	4638      	mov	r0, r7
 8015f10:	4798      	blx	r3
 8015f12:	ab14      	add	r3, sp, #80	; 0x50
 8015f14:	f843 0d34 	str.w	r0, [r3, #-52]!
 8015f18:	4618      	mov	r0, r3
 8015f1a:	f7fe fe39 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015f1e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015f22:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8015f26:	4440      	add	r0, r8
 8015f28:	6823      	ldr	r3, [r4, #0]
 8015f2a:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8015f2e:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 8015f32:	2200      	movs	r2, #0
 8015f34:	f8ad 0020 	strh.w	r0, [sp, #32]
 8015f38:	f8ad 2022 	strh.w	r2, [sp, #34]	; 0x22
 8015f3c:	691b      	ldr	r3, [r3, #16]
 8015f3e:	a908      	add	r1, sp, #32
 8015f40:	4620      	mov	r0, r4
 8015f42:	4798      	blx	r3
 8015f44:	e78f      	b.n	8015e66 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015f46:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8015f48:	f8da 3000 	ldr.w	r3, [sl]
 8015f4c:	2b00      	cmp	r3, #0
 8015f4e:	f43f af4b 	beq.w	8015de8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x20>
 8015f52:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8015f56:	f8b9 3000 	ldrh.w	r3, [r9]
 8015f5a:	428b      	cmp	r3, r1
 8015f5c:	d9c2      	bls.n	8015ee4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x11c>
 8015f5e:	f8db 0000 	ldr.w	r0, [fp]
 8015f62:	f7f4 feb1 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8015f66:	aa0a      	add	r2, sp, #40	; 0x28
 8015f68:	4601      	mov	r1, r0
 8015f6a:	4640      	mov	r0, r8
 8015f6c:	47a8      	blx	r5
 8015f6e:	f8d8 3000 	ldr.w	r3, [r8]
 8015f72:	f8da 2000 	ldr.w	r2, [sl]
 8015f76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015f78:	9305      	str	r3, [sp, #20]
 8015f7a:	4605      	mov	r5, r0
 8015f7c:	2a00      	cmp	r2, #0
 8015f7e:	f43f af33 	beq.w	8015de8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x20>
 8015f82:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8015f86:	f8b9 2000 	ldrh.w	r2, [r9]
 8015f8a:	428a      	cmp	r2, r1
 8015f8c:	d9aa      	bls.n	8015ee4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x11c>
 8015f8e:	f8db 0000 	ldr.w	r0, [fp]
 8015f92:	f7f4 fe99 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8015f96:	aa0a      	add	r2, sp, #40	; 0x28
 8015f98:	4601      	mov	r1, r0
 8015f9a:	9b05      	ldr	r3, [sp, #20]
 8015f9c:	4640      	mov	r0, r8
 8015f9e:	4798      	blx	r3
 8015fa0:	f8d8 3000 	ldr.w	r3, [r8]
 8015fa4:	f8da 2000 	ldr.w	r2, [sl]
 8015fa8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015faa:	9305      	str	r3, [sp, #20]
 8015fac:	fb15 f500 	smulbb	r5, r5, r0
 8015fb0:	b2ad      	uxth	r5, r5
 8015fb2:	2a00      	cmp	r2, #0
 8015fb4:	f43f af18 	beq.w	8015de8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x20>
 8015fb8:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8015fbc:	f8b9 2000 	ldrh.w	r2, [r9]
 8015fc0:	428a      	cmp	r2, r1
 8015fc2:	d98f      	bls.n	8015ee4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x11c>
 8015fc4:	f8db 0000 	ldr.w	r0, [fp]
 8015fc8:	f7f4 fe7e 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8015fcc:	aa0a      	add	r2, sp, #40	; 0x28
 8015fce:	4601      	mov	r1, r0
 8015fd0:	9b05      	ldr	r3, [sp, #20]
 8015fd2:	4640      	mov	r0, r8
 8015fd4:	4798      	blx	r3
 8015fd6:	4405      	add	r5, r0
 8015fd8:	b2ad      	uxth	r5, r5
 8015fda:	e792      	b.n	8015f02 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x13a>
 8015fdc:	2b00      	cmp	r3, #0
 8015fde:	f47f af55 	bne.w	8015e8c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xc4>
 8015fe2:	e740      	b.n	8015e66 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015fe4:	4798      	blx	r3
 8015fe6:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8015fea:	deff      	udf	#255	; 0xff
 8015fec:	2001e234 	.word	0x2001e234
 8015ff0:	2001e230 	.word	0x2001e230
 8015ff4:	0802f6d0 	.word	0x0802f6d0
 8015ff8:	08034648 	.word	0x08034648
 8015ffc:	0802f75e 	.word	0x0802f75e
 8016000:	2001e238 	.word	0x2001e238
 8016004:	08032cdf 	.word	0x08032cdf
 8016008:	2001e23c 	.word	0x2001e23c

0801600c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 801600c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016010:	461d      	mov	r5, r3
 8016012:	b09b      	sub	sp, #108	; 0x6c
 8016014:	681b      	ldr	r3, [r3, #0]
 8016016:	9104      	str	r1, [sp, #16]
 8016018:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 801601c:	9924      	ldr	r1, [sp, #144]	; 0x90
 801601e:	4604      	mov	r4, r0
 8016020:	4628      	mov	r0, r5
 8016022:	4617      	mov	r7, r2
 8016024:	4798      	blx	r3
 8016026:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 801602a:	f848 0d28 	str.w	r0, [r8, #-40]!
 801602e:	4640      	mov	r0, r8
 8016030:	f7fe fdae 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8016034:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 8016038:	1ac0      	subs	r0, r0, r3
 801603a:	b200      	sxth	r0, r0
 801603c:	2800      	cmp	r0, #0
 801603e:	f2c0 80cd 	blt.w	80161dc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>
 8016042:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 8016046:	441a      	add	r2, r3
 8016048:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 801604c:	1a9b      	subs	r3, r3, r2
 801604e:	b21b      	sxth	r3, r3
 8016050:	4298      	cmp	r0, r3
 8016052:	f280 80c3 	bge.w	80161dc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>
 8016056:	682b      	ldr	r3, [r5, #0]
 8016058:	f8df b22c 	ldr.w	fp, [pc, #556]	; 8016288 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x27c>
 801605c:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 8016060:	e9dd 1224 	ldrd	r1, r2, [sp, #144]	; 0x90
 8016064:	4628      	mov	r0, r5
 8016066:	4798      	blx	r3
 8016068:	682b      	ldr	r3, [r5, #0]
 801606a:	f8b4 9046 	ldrh.w	r9, [r4, #70]	; 0x46
 801606e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8016072:	f8b4 a048 	ldrh.w	sl, [r4, #72]	; 0x48
 8016076:	4606      	mov	r6, r0
 8016078:	4628      	mov	r0, r5
 801607a:	4798      	blx	r3
 801607c:	f8cd 9000 	str.w	r9, [sp]
 8016080:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016084:	4633      	mov	r3, r6
 8016086:	2214      	movs	r2, #20
 8016088:	4641      	mov	r1, r8
 801608a:	4620      	mov	r0, r4
 801608c:	f7ff fe36 	bl	8015cfc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 8016090:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8016094:	f8df a1f4 	ldr.w	sl, [pc, #500]	; 801628c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x280>
 8016098:	f8df 91f4 	ldr.w	r9, [pc, #500]	; 8016290 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x284>
 801609c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80160a0:	683b      	ldr	r3, [r7, #0]
 80160a2:	f040 809e 	bne.w	80161e2 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d6>
 80160a6:	699e      	ldr	r6, [r3, #24]
 80160a8:	f8db 3000 	ldr.w	r3, [fp]
 80160ac:	b92b      	cbnz	r3, 80160ba <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xae>
 80160ae:	4b72      	ldr	r3, [pc, #456]	; (8016278 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x26c>)
 80160b0:	4a72      	ldr	r2, [pc, #456]	; (801627c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x270>)
 80160b2:	21ae      	movs	r1, #174	; 0xae
 80160b4:	4872      	ldr	r0, [pc, #456]	; (8016280 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x274>)
 80160b6:	f015 ff85 	bl	802bfc4 <__assert_func>
 80160ba:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80160be:	f8ba 3000 	ldrh.w	r3, [sl]
 80160c2:	428b      	cmp	r3, r1
 80160c4:	d803      	bhi.n	80160ce <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc2>
 80160c6:	4b6f      	ldr	r3, [pc, #444]	; (8016284 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x278>)
 80160c8:	4a6c      	ldr	r2, [pc, #432]	; (801627c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x270>)
 80160ca:	21af      	movs	r1, #175	; 0xaf
 80160cc:	e7f2      	b.n	80160b4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 80160ce:	f8d9 0000 	ldr.w	r0, [r9]
 80160d2:	f7f4 fdf9 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 80160d6:	4642      	mov	r2, r8
 80160d8:	4601      	mov	r1, r0
 80160da:	4638      	mov	r0, r7
 80160dc:	47b0      	blx	r6
 80160de:	4606      	mov	r6, r0
 80160e0:	682b      	ldr	r3, [r5, #0]
 80160e2:	9924      	ldr	r1, [sp, #144]	; 0x90
 80160e4:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80160e8:	f8b5 806c 	ldrh.w	r8, [r5, #108]	; 0x6c
 80160ec:	4628      	mov	r0, r5
 80160ee:	4798      	blx	r3
 80160f0:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
 80160f4:	ad07      	add	r5, sp, #28
 80160f6:	f84a 0d3c 	str.w	r0, [sl, #-60]!
 80160fa:	4650      	mov	r0, sl
 80160fc:	f7fe fd48 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8016100:	4440      	add	r0, r8
 8016102:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8016106:	f8ad 6020 	strh.w	r6, [sp, #32]
 801610a:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 801610e:	f04f 0800 	mov.w	r8, #0
 8016112:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016116:	f8ad 001c 	strh.w	r0, [sp, #28]
 801611a:	f8ad 801e 	strh.w	r8, [sp, #30]
 801611e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016122:	ae09      	add	r6, sp, #36	; 0x24
 8016124:	e886 0003 	stmia.w	r6, {r0, r1}
 8016128:	9904      	ldr	r1, [sp, #16]
 801612a:	4630      	mov	r0, r6
 801612c:	f7fb ffda 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 8016130:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8016134:	4543      	cmp	r3, r8
 8016136:	dd51      	ble.n	80161dc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>
 8016138:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801613c:	4543      	cmp	r3, r8
 801613e:	dd4d      	ble.n	80161dc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>
 8016140:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8016144:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8016148:	1a9b      	subs	r3, r3, r2
 801614a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801614e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016152:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8016156:	1a9b      	subs	r3, r3, r2
 8016158:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801615c:	6823      	ldr	r3, [r4, #0]
 801615e:	4629      	mov	r1, r5
 8016160:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016162:	4620      	mov	r0, r4
 8016164:	4798      	blx	r3
 8016166:	4b48      	ldr	r3, [pc, #288]	; (8016288 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x27c>)
 8016168:	681b      	ldr	r3, [r3, #0]
 801616a:	2b00      	cmp	r3, #0
 801616c:	d09f      	beq.n	80160ae <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa2>
 801616e:	4a47      	ldr	r2, [pc, #284]	; (801628c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x280>)
 8016170:	f8b4 b040 	ldrh.w	fp, [r4, #64]	; 0x40
 8016174:	8812      	ldrh	r2, [r2, #0]
 8016176:	455a      	cmp	r2, fp
 8016178:	d9a5      	bls.n	80160c6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xba>
 801617a:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 801617e:	f894 1044 	ldrb.w	r1, [r4, #68]	; 0x44
 8016182:	785b      	ldrb	r3, [r3, #1]
 8016184:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8016186:	920d      	str	r2, [sp, #52]	; 0x34
 8016188:	f3c3 0001 	ubfx	r0, r3, #0, #2
 801618c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016190:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8016194:	f89d 3098 	ldrb.w	r3, [sp, #152]	; 0x98
 8016198:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801619c:	f88d 1032 	strb.w	r1, [sp, #50]	; 0x32
 80161a0:	970b      	str	r7, [sp, #44]	; 0x2c
 80161a2:	f88d 0030 	strb.w	r0, [sp, #48]	; 0x30
 80161a6:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 80161aa:	f88d 803b 	strb.w	r8, [sp, #59]	; 0x3b
 80161ae:	f88d 803c 	strb.w	r8, [sp, #60]	; 0x3c
 80161b2:	f7fc fa65 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 80161b6:	4659      	mov	r1, fp
 80161b8:	4604      	mov	r4, r0
 80161ba:	f8d9 0000 	ldr.w	r0, [r9]
 80161be:	f7f4 fd83 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 80161c2:	ab10      	add	r3, sp, #64	; 0x40
 80161c4:	e9cd 0301 	strd	r0, r3, [sp, #4]
 80161c8:	f8cd 800c 	str.w	r8, [sp, #12]
 80161cc:	f8cd a000 	str.w	sl, [sp]
 80161d0:	4633      	mov	r3, r6
 80161d2:	e895 0006 	ldmia.w	r5, {r1, r2}
 80161d6:	4620      	mov	r0, r4
 80161d8:	f7f4 fd28 	bl	800ac2c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80161dc:	b01b      	add	sp, #108	; 0x6c
 80161de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80161e2:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 80161e4:	f8db 3000 	ldr.w	r3, [fp]
 80161e8:	2b00      	cmp	r3, #0
 80161ea:	f43f af60 	beq.w	80160ae <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa2>
 80161ee:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80161f2:	f8ba 3000 	ldrh.w	r3, [sl]
 80161f6:	428b      	cmp	r3, r1
 80161f8:	f67f af65 	bls.w	80160c6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xba>
 80161fc:	f8d9 0000 	ldr.w	r0, [r9]
 8016200:	f7f4 fd62 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8016204:	4642      	mov	r2, r8
 8016206:	4601      	mov	r1, r0
 8016208:	4638      	mov	r0, r7
 801620a:	47b0      	blx	r6
 801620c:	683a      	ldr	r2, [r7, #0]
 801620e:	9005      	str	r0, [sp, #20]
 8016210:	6c16      	ldr	r6, [r2, #64]	; 0x40
 8016212:	f8db 2000 	ldr.w	r2, [fp]
 8016216:	2a00      	cmp	r2, #0
 8016218:	f43f af49 	beq.w	80160ae <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa2>
 801621c:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8016220:	f8ba 2000 	ldrh.w	r2, [sl]
 8016224:	428a      	cmp	r2, r1
 8016226:	f67f af4e 	bls.w	80160c6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xba>
 801622a:	f8d9 0000 	ldr.w	r0, [r9]
 801622e:	f7f4 fd4b 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8016232:	4642      	mov	r2, r8
 8016234:	4601      	mov	r1, r0
 8016236:	4638      	mov	r0, r7
 8016238:	47b0      	blx	r6
 801623a:	9b05      	ldr	r3, [sp, #20]
 801623c:	f8db 2000 	ldr.w	r2, [fp]
 8016240:	fb13 f000 	smulbb	r0, r3, r0
 8016244:	683b      	ldr	r3, [r7, #0]
 8016246:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016248:	9305      	str	r3, [sp, #20]
 801624a:	b286      	uxth	r6, r0
 801624c:	2a00      	cmp	r2, #0
 801624e:	f43f af2e 	beq.w	80160ae <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa2>
 8016252:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8016256:	f8ba 2000 	ldrh.w	r2, [sl]
 801625a:	428a      	cmp	r2, r1
 801625c:	f67f af33 	bls.w	80160c6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xba>
 8016260:	f8d9 0000 	ldr.w	r0, [r9]
 8016264:	f7f4 fd30 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8016268:	4642      	mov	r2, r8
 801626a:	4601      	mov	r1, r0
 801626c:	9b05      	ldr	r3, [sp, #20]
 801626e:	4638      	mov	r0, r7
 8016270:	4798      	blx	r3
 8016272:	4406      	add	r6, r0
 8016274:	b2b6      	uxth	r6, r6
 8016276:	e733      	b.n	80160e0 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xd4>
 8016278:	0802f6d0 	.word	0x0802f6d0
 801627c:	08034648 	.word	0x08034648
 8016280:	0802f75e 	.word	0x0802f75e
 8016284:	08032cdf 	.word	0x08032cdf
 8016288:	2001e230 	.word	0x2001e230
 801628c:	2001e234 	.word	0x2001e234
 8016290:	2001e23c 	.word	0x2001e23c

08016294 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 8016294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016298:	461f      	mov	r7, r3
 801629a:	b09b      	sub	sp, #108	; 0x6c
 801629c:	681b      	ldr	r3, [r3, #0]
 801629e:	9104      	str	r1, [sp, #16]
 80162a0:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 80162a4:	9924      	ldr	r1, [sp, #144]	; 0x90
 80162a6:	4604      	mov	r4, r0
 80162a8:	4638      	mov	r0, r7
 80162aa:	4616      	mov	r6, r2
 80162ac:	4798      	blx	r3
 80162ae:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 80162b2:	f848 0d28 	str.w	r0, [r8, #-40]!
 80162b6:	4640      	mov	r0, r8
 80162b8:	f7fe fc6a 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80162bc:	f8b7 3114 	ldrh.w	r3, [r7, #276]	; 0x114
 80162c0:	1ac0      	subs	r0, r0, r3
 80162c2:	b200      	sxth	r0, r0
 80162c4:	2800      	cmp	r0, #0
 80162c6:	f2c0 80f1 	blt.w	80164ac <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x218>
 80162ca:	f8b7 211a 	ldrh.w	r2, [r7, #282]	; 0x11a
 80162ce:	441a      	add	r2, r3
 80162d0:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 80162d4:	1a9b      	subs	r3, r3, r2
 80162d6:	b21b      	sxth	r3, r3
 80162d8:	4298      	cmp	r0, r3
 80162da:	f280 80e7 	bge.w	80164ac <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x218>
 80162de:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80162e0:	9302      	str	r3, [sp, #8]
 80162e2:	f8b4 3048 	ldrh.w	r3, [r4, #72]	; 0x48
 80162e6:	9301      	str	r3, [sp, #4]
 80162e8:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 80162ec:	9300      	str	r3, [sp, #0]
 80162ee:	2214      	movs	r2, #20
 80162f0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80162f2:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 80164f0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x25c>
 80162f6:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 80164f4 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x260>
 80162fa:	f8df 91fc 	ldr.w	r9, [pc, #508]	; 80164f8 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x264>
 80162fe:	4641      	mov	r1, r8
 8016300:	4620      	mov	r0, r4
 8016302:	f7ff fcfb 	bl	8015cfc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 8016306:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801630a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801630e:	6833      	ldr	r3, [r6, #0]
 8016310:	f040 80cf 	bne.w	80164b2 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x21e>
 8016314:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8016316:	f8db 3000 	ldr.w	r3, [fp]
 801631a:	b92b      	cbnz	r3, 8016328 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x94>
 801631c:	4b70      	ldr	r3, [pc, #448]	; (80164e0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x24c>)
 801631e:	4a71      	ldr	r2, [pc, #452]	; (80164e4 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x250>)
 8016320:	21ae      	movs	r1, #174	; 0xae
 8016322:	4871      	ldr	r0, [pc, #452]	; (80164e8 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x254>)
 8016324:	f015 fe4e 	bl	802bfc4 <__assert_func>
 8016328:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801632c:	f8ba 3000 	ldrh.w	r3, [sl]
 8016330:	428b      	cmp	r3, r1
 8016332:	d803      	bhi.n	801633c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 8016334:	4b6d      	ldr	r3, [pc, #436]	; (80164ec <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x258>)
 8016336:	4a6b      	ldr	r2, [pc, #428]	; (80164e4 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x250>)
 8016338:	21af      	movs	r1, #175	; 0xaf
 801633a:	e7f2      	b.n	8016322 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x8e>
 801633c:	f8d9 0000 	ldr.w	r0, [r9]
 8016340:	f7f4 fcc2 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8016344:	4642      	mov	r2, r8
 8016346:	4601      	mov	r1, r0
 8016348:	4630      	mov	r0, r6
 801634a:	47a8      	blx	r5
 801634c:	6832      	ldr	r2, [r6, #0]
 801634e:	9005      	str	r0, [sp, #20]
 8016350:	6c15      	ldr	r5, [r2, #64]	; 0x40
 8016352:	f8db 2000 	ldr.w	r2, [fp]
 8016356:	2a00      	cmp	r2, #0
 8016358:	d0e0      	beq.n	801631c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x88>
 801635a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801635e:	f8ba 2000 	ldrh.w	r2, [sl]
 8016362:	428a      	cmp	r2, r1
 8016364:	d9e6      	bls.n	8016334 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa0>
 8016366:	f8d9 0000 	ldr.w	r0, [r9]
 801636a:	f7f4 fcad 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 801636e:	4642      	mov	r2, r8
 8016370:	4601      	mov	r1, r0
 8016372:	4630      	mov	r0, r6
 8016374:	47a8      	blx	r5
 8016376:	9b05      	ldr	r3, [sp, #20]
 8016378:	f8db 2000 	ldr.w	r2, [fp]
 801637c:	fb13 f000 	smulbb	r0, r3, r0
 8016380:	6833      	ldr	r3, [r6, #0]
 8016382:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016384:	9305      	str	r3, [sp, #20]
 8016386:	b285      	uxth	r5, r0
 8016388:	2a00      	cmp	r2, #0
 801638a:	d0c7      	beq.n	801631c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x88>
 801638c:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8016390:	f8ba 2000 	ldrh.w	r2, [sl]
 8016394:	428a      	cmp	r2, r1
 8016396:	d9cd      	bls.n	8016334 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa0>
 8016398:	f8d9 0000 	ldr.w	r0, [r9]
 801639c:	f7f4 fc94 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 80163a0:	4642      	mov	r2, r8
 80163a2:	4601      	mov	r1, r0
 80163a4:	9b05      	ldr	r3, [sp, #20]
 80163a6:	4630      	mov	r0, r6
 80163a8:	4798      	blx	r3
 80163aa:	4405      	add	r5, r0
 80163ac:	b2ad      	uxth	r5, r5
 80163ae:	683b      	ldr	r3, [r7, #0]
 80163b0:	9924      	ldr	r1, [sp, #144]	; 0x90
 80163b2:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 80163b6:	f8b7 a0c6 	ldrh.w	sl, [r7, #198]	; 0xc6
 80163ba:	4638      	mov	r0, r7
 80163bc:	4798      	blx	r3
 80163be:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 80163c2:	2700      	movs	r7, #0
 80163c4:	f848 0d3c 	str.w	r0, [r8, #-60]!
 80163c8:	4640      	mov	r0, r8
 80163ca:	f7fe fbe1 	bl	8014b90 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80163ce:	4450      	add	r0, sl
 80163d0:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80163d4:	f8ad 3020 	strh.w	r3, [sp, #32]
 80163d8:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 80163dc:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 80163e0:	f8ad 701c 	strh.w	r7, [sp, #28]
 80163e4:	f8ad 001e 	strh.w	r0, [sp, #30]
 80163e8:	ad07      	add	r5, sp, #28
 80163ea:	e895 0003 	ldmia.w	r5, {r0, r1}
 80163ee:	f10d 0a24 	add.w	sl, sp, #36	; 0x24
 80163f2:	e88a 0003 	stmia.w	sl, {r0, r1}
 80163f6:	9904      	ldr	r1, [sp, #16]
 80163f8:	4650      	mov	r0, sl
 80163fa:	f7fb fe73 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 80163fe:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8016402:	42bb      	cmp	r3, r7
 8016404:	dd52      	ble.n	80164ac <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x218>
 8016406:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801640a:	42bb      	cmp	r3, r7
 801640c:	dd4e      	ble.n	80164ac <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x218>
 801640e:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8016412:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8016416:	1a9b      	subs	r3, r3, r2
 8016418:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801641c:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016420:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8016424:	1a9b      	subs	r3, r3, r2
 8016426:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801642a:	6823      	ldr	r3, [r4, #0]
 801642c:	4629      	mov	r1, r5
 801642e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016430:	4620      	mov	r0, r4
 8016432:	4798      	blx	r3
 8016434:	4b2e      	ldr	r3, [pc, #184]	; (80164f0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x25c>)
 8016436:	681b      	ldr	r3, [r3, #0]
 8016438:	2b00      	cmp	r3, #0
 801643a:	f43f af6f 	beq.w	801631c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x88>
 801643e:	4a2d      	ldr	r2, [pc, #180]	; (80164f4 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x260>)
 8016440:	f8b4 b040 	ldrh.w	fp, [r4, #64]	; 0x40
 8016444:	8812      	ldrh	r2, [r2, #0]
 8016446:	455a      	cmp	r2, fp
 8016448:	f67f af74 	bls.w	8016334 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa0>
 801644c:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 8016450:	f894 1044 	ldrb.w	r1, [r4, #68]	; 0x44
 8016454:	785b      	ldrb	r3, [r3, #1]
 8016456:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8016458:	920d      	str	r2, [sp, #52]	; 0x34
 801645a:	f3c3 0001 	ubfx	r0, r3, #0, #2
 801645e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016462:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8016466:	f89d 3098 	ldrb.w	r3, [sp, #152]	; 0x98
 801646a:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801646e:	f88d 1032 	strb.w	r1, [sp, #50]	; 0x32
 8016472:	960b      	str	r6, [sp, #44]	; 0x2c
 8016474:	f88d 0030 	strb.w	r0, [sp, #48]	; 0x30
 8016478:	f8ad 7038 	strh.w	r7, [sp, #56]	; 0x38
 801647c:	f88d 703b 	strb.w	r7, [sp, #59]	; 0x3b
 8016480:	f88d 703c 	strb.w	r7, [sp, #60]	; 0x3c
 8016484:	f7fc f8fc 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 8016488:	4659      	mov	r1, fp
 801648a:	4604      	mov	r4, r0
 801648c:	f8d9 0000 	ldr.w	r0, [r9]
 8016490:	f7f4 fc1a 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8016494:	ab10      	add	r3, sp, #64	; 0x40
 8016496:	e9cd 0301 	strd	r0, r3, [sp, #4]
 801649a:	9703      	str	r7, [sp, #12]
 801649c:	f8cd 8000 	str.w	r8, [sp]
 80164a0:	4653      	mov	r3, sl
 80164a2:	e895 0006 	ldmia.w	r5, {r1, r2}
 80164a6:	4620      	mov	r0, r4
 80164a8:	f7f4 fbc0 	bl	800ac2c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80164ac:	b01b      	add	sp, #108	; 0x6c
 80164ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164b2:	699d      	ldr	r5, [r3, #24]
 80164b4:	f8db 3000 	ldr.w	r3, [fp]
 80164b8:	2b00      	cmp	r3, #0
 80164ba:	f43f af2f 	beq.w	801631c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x88>
 80164be:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80164c2:	f8ba 3000 	ldrh.w	r3, [sl]
 80164c6:	428b      	cmp	r3, r1
 80164c8:	f67f af34 	bls.w	8016334 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa0>
 80164cc:	f8d9 0000 	ldr.w	r0, [r9]
 80164d0:	f7f4 fbfa 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 80164d4:	4642      	mov	r2, r8
 80164d6:	4601      	mov	r1, r0
 80164d8:	4630      	mov	r0, r6
 80164da:	47a8      	blx	r5
 80164dc:	4605      	mov	r5, r0
 80164de:	e766      	b.n	80163ae <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x11a>
 80164e0:	0802f6d0 	.word	0x0802f6d0
 80164e4:	08034648 	.word	0x08034648
 80164e8:	0802f75e 	.word	0x0802f75e
 80164ec:	08032cdf 	.word	0x08032cdf
 80164f0:	2001e230 	.word	0x2001e230
 80164f4:	2001e234 	.word	0x2001e234
 80164f8:	2001e23c 	.word	0x2001e23c

080164fc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 80164fc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8016500:	4770      	bx	lr

08016502 <_ZN8touchgfx12ToggleButtonD1Ev>:
 8016502:	4770      	bx	lr

08016504 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 8016504:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8016508:	b133      	cbz	r3, 8016518 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 801650a:	790b      	ldrb	r3, [r1, #4]
 801650c:	2b01      	cmp	r3, #1
 801650e:	bf01      	itttt	eq
 8016510:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 8016512:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 8016514:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 8016516:	8603      	strheq	r3, [r0, #48]	; 0x30
 8016518:	f012 bd60 	b.w	8028fdc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0801651c <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 801651c:	8813      	ldrh	r3, [r2, #0]
 801651e:	8683      	strh	r3, [r0, #52]	; 0x34
 8016520:	f000 bd36 	b.w	8016f90 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

08016524 <_ZN8touchgfx12ToggleButtonD0Ev>:
 8016524:	b510      	push	{r4, lr}
 8016526:	2138      	movs	r1, #56	; 0x38
 8016528:	4604      	mov	r4, r0
 801652a:	f014 fdfe 	bl	802b12a <_ZdlPvj>
 801652e:	4620      	mov	r0, r4
 8016530:	bd10      	pop	{r4, pc}

08016532 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8016532:	b510      	push	{r4, lr}
 8016534:	4604      	mov	r4, r0
 8016536:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8016538:	b150      	cbz	r0, 8016550 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801653a:	6803      	ldr	r3, [r0, #0]
 801653c:	68db      	ldr	r3, [r3, #12]
 801653e:	4798      	blx	r3
 8016540:	b130      	cbz	r0, 8016550 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8016542:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8016544:	6803      	ldr	r3, [r0, #0]
 8016546:	4621      	mov	r1, r4
 8016548:	689b      	ldr	r3, [r3, #8]
 801654a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801654e:	4718      	bx	r3
 8016550:	bd10      	pop	{r4, pc}

08016552 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8016552:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8016556:	b12a      	cbz	r2, 8016564 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8016558:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801655c:	b112      	cbz	r2, 8016564 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801655e:	6803      	ldr	r3, [r0, #0]
 8016560:	695b      	ldr	r3, [r3, #20]
 8016562:	4718      	bx	r3
 8016564:	4770      	bx	lr

08016566 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 8016566:	b508      	push	{r3, lr}
 8016568:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801656c:	b10b      	cbz	r3, 8016572 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 801656e:	f7ed f940 	bl	80037f2 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8016572:	bd08      	pop	{r3, pc}

08016574 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 8016574:	6803      	ldr	r3, [r0, #0]
 8016576:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 801657a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801657c:	4718      	bx	r3

0801657e <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 801657e:	4770      	bx	lr

08016580 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 8016580:	b510      	push	{r4, lr}
 8016582:	212c      	movs	r1, #44	; 0x2c
 8016584:	4604      	mov	r4, r0
 8016586:	f014 fdd0 	bl	802b12a <_ZdlPvj>
 801658a:	4620      	mov	r0, r4
 801658c:	bd10      	pop	{r4, pc}

0801658e <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 801658e:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8016592:	2bff      	cmp	r3, #255	; 0xff
 8016594:	b510      	push	{r4, lr}
 8016596:	d104      	bne.n	80165a2 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 8016598:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 801659a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801659e:	429a      	cmp	r2, r3
 80165a0:	d105      	bne.n	80165ae <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 80165a2:	2300      	movs	r3, #0
 80165a4:	8003      	strh	r3, [r0, #0]
 80165a6:	8043      	strh	r3, [r0, #2]
 80165a8:	8083      	strh	r3, [r0, #4]
 80165aa:	80c3      	strh	r3, [r0, #6]
 80165ac:	bd10      	pop	{r4, pc}
 80165ae:	2300      	movs	r3, #0
 80165b0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80165b4:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 80165b8:	8003      	strh	r3, [r0, #0]
 80165ba:	8043      	strh	r3, [r0, #2]
 80165bc:	8084      	strh	r4, [r0, #4]
 80165be:	80c2      	strh	r2, [r0, #6]
 80165c0:	e7f4      	b.n	80165ac <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

080165c2 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 80165c2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80165c6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80165ca:	b087      	sub	sp, #28
 80165cc:	4604      	mov	r4, r0
 80165ce:	4689      	mov	r9, r1
 80165d0:	b363      	cbz	r3, 801662c <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 80165d2:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 80165d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80165d8:	429a      	cmp	r2, r3
 80165da:	d027      	beq.n	801662c <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 80165dc:	ad06      	add	r5, sp, #24
 80165de:	2700      	movs	r7, #0
 80165e0:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 80165e4:	4628      	mov	r0, r5
 80165e6:	f006 f869 	bl	801c6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80165ea:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80165ee:	f8ad 3016 	strh.w	r3, [sp, #22]
 80165f2:	6823      	ldr	r3, [r4, #0]
 80165f4:	f8ad 0014 	strh.w	r0, [sp, #20]
 80165f8:	a904      	add	r1, sp, #16
 80165fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80165fc:	9704      	str	r7, [sp, #16]
 80165fe:	4620      	mov	r0, r4
 8016600:	4798      	blx	r3
 8016602:	f7fc f83d 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 8016606:	6803      	ldr	r3, [r0, #0]
 8016608:	4606      	mov	r6, r0
 801660a:	f8d3 800c 	ldr.w	r8, [r3, #12]
 801660e:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8016610:	f8ad 300c 	strh.w	r3, [sp, #12]
 8016614:	4628      	mov	r0, r5
 8016616:	f006 f96d 	bl	801c8f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801661a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801661e:	9300      	str	r3, [sp, #0]
 8016620:	4601      	mov	r1, r0
 8016622:	9701      	str	r7, [sp, #4]
 8016624:	464b      	mov	r3, r9
 8016626:	aa04      	add	r2, sp, #16
 8016628:	4630      	mov	r0, r6
 801662a:	47c0      	blx	r8
 801662c:	b007      	add	sp, #28
 801662e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08016632 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 8016632:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8016634:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8016638:	f8ad 3006 	strh.w	r3, [sp, #6]
 801663c:	6803      	ldr	r3, [r0, #0]
 801663e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8016642:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016646:	460d      	mov	r5, r1
 8016648:	2100      	movs	r1, #0
 801664a:	4604      	mov	r4, r0
 801664c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801664e:	9100      	str	r1, [sp, #0]
 8016650:	4669      	mov	r1, sp
 8016652:	4798      	blx	r3
 8016654:	4621      	mov	r1, r4
 8016656:	a802      	add	r0, sp, #8
 8016658:	f003 ff16 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801665c:	f7fc f810 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 8016660:	6803      	ldr	r3, [r0, #0]
 8016662:	aa02      	add	r2, sp, #8
 8016664:	695e      	ldr	r6, [r3, #20]
 8016666:	4669      	mov	r1, sp
 8016668:	462b      	mov	r3, r5
 801666a:	47b0      	blx	r6
 801666c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8016670:	2800      	cmp	r0, #0
 8016672:	bf08      	it	eq
 8016674:	461d      	moveq	r5, r3
 8016676:	84e5      	strh	r5, [r4, #38]	; 0x26
 8016678:	b004      	add	sp, #16
 801667a:	bd70      	pop	{r4, r5, r6, pc}

0801667c <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 801667c:	2200      	movs	r2, #0
 801667e:	8082      	strh	r2, [r0, #4]
 8016680:	80c2      	strh	r2, [r0, #6]
 8016682:	8102      	strh	r2, [r0, #8]
 8016684:	8142      	strh	r2, [r0, #10]
 8016686:	8182      	strh	r2, [r0, #12]
 8016688:	81c2      	strh	r2, [r0, #14]
 801668a:	8202      	strh	r2, [r0, #16]
 801668c:	8242      	strh	r2, [r0, #18]
 801668e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8016692:	61c2      	str	r2, [r0, #28]
 8016694:	8402      	strh	r2, [r0, #32]
 8016696:	8442      	strh	r2, [r0, #34]	; 0x22
 8016698:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 801669c:	2201      	movs	r2, #1
 801669e:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80166a2:	4a04      	ldr	r2, [pc, #16]	; (80166b4 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 80166a4:	6002      	str	r2, [r0, #0]
 80166a6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80166aa:	84c2      	strh	r2, [r0, #38]	; 0x26
 80166ac:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 80166b0:	4770      	bx	lr
 80166b2:	bf00      	nop
 80166b4:	080346f4 	.word	0x080346f4

080166b8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80166b8:	2000      	movs	r0, #0
 80166ba:	4770      	bx	lr

080166bc <_ZN8touchgfx8TextAreaD1Ev>:
 80166bc:	4770      	bx	lr
	...

080166c0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80166c0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80166c4:	4b1a      	ldr	r3, [pc, #104]	; (8016730 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80166c6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80166c8:	881b      	ldrh	r3, [r3, #0]
 80166ca:	428b      	cmp	r3, r1
 80166cc:	4604      	mov	r4, r0
 80166ce:	d92d      	bls.n	801672c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>
 80166d0:	4b18      	ldr	r3, [pc, #96]	; (8016734 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 80166d2:	681b      	ldr	r3, [r3, #0]
 80166d4:	b92b      	cbnz	r3, 80166e2 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x22>
 80166d6:	4b18      	ldr	r3, [pc, #96]	; (8016738 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 80166d8:	4a18      	ldr	r2, [pc, #96]	; (801673c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 80166da:	4819      	ldr	r0, [pc, #100]	; (8016740 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 80166dc:	21ae      	movs	r1, #174	; 0xae
 80166de:	f015 fc71 	bl	802bfc4 <__assert_func>
 80166e2:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80166e6:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80166ea:	4b16      	ldr	r3, [pc, #88]	; (8016744 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x84>)
 80166ec:	7855      	ldrb	r5, [r2, #1]
 80166ee:	681b      	ldr	r3, [r3, #0]
 80166f0:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80166f4:	6833      	ldr	r3, [r6, #0]
 80166f6:	69df      	ldr	r7, [r3, #28]
 80166f8:	4b13      	ldr	r3, [pc, #76]	; (8016748 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x88>)
 80166fa:	6818      	ldr	r0, [r3, #0]
 80166fc:	f7f4 fae4 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8016700:	6823      	ldr	r3, [r4, #0]
 8016702:	4680      	mov	r8, r0
 8016704:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8016706:	4620      	mov	r0, r4
 8016708:	4798      	blx	r3
 801670a:	6823      	ldr	r3, [r4, #0]
 801670c:	4681      	mov	r9, r0
 801670e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8016712:	4620      	mov	r0, r4
 8016714:	4798      	blx	r3
 8016716:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801671a:	9000      	str	r0, [sp, #0]
 801671c:	464b      	mov	r3, r9
 801671e:	4642      	mov	r2, r8
 8016720:	4629      	mov	r1, r5
 8016722:	4630      	mov	r0, r6
 8016724:	47b8      	blx	r7
 8016726:	b003      	add	sp, #12
 8016728:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801672c:	2000      	movs	r0, #0
 801672e:	e7fa      	b.n	8016726 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x66>
 8016730:	2001e234 	.word	0x2001e234
 8016734:	2001e230 	.word	0x2001e230
 8016738:	0802f6d0 	.word	0x0802f6d0
 801673c:	080347ec 	.word	0x080347ec
 8016740:	0802f75e 	.word	0x0802f75e
 8016744:	2001e238 	.word	0x2001e238
 8016748:	2001e23c 	.word	0x2001e23c

0801674c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 801674c:	b40e      	push	{r1, r2, r3}
 801674e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016752:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 8016844 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 8016756:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8016758:	f8b9 3000 	ldrh.w	r3, [r9]
 801675c:	4293      	cmp	r3, r2
 801675e:	b09c      	sub	sp, #112	; 0x70
 8016760:	4604      	mov	r4, r0
 8016762:	d965      	bls.n	8016830 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 8016764:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 8016848 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 8016768:	ab26      	add	r3, sp, #152	; 0x98
 801676a:	9302      	str	r3, [sp, #8]
 801676c:	f8da 3000 	ldr.w	r3, [sl]
 8016770:	b92b      	cbnz	r3, 801677e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x32>
 8016772:	4b30      	ldr	r3, [pc, #192]	; (8016834 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 8016774:	4a30      	ldr	r2, [pc, #192]	; (8016838 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 8016776:	21ae      	movs	r1, #174	; 0xae
 8016778:	4830      	ldr	r0, [pc, #192]	; (801683c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 801677a:	f015 fc23 	bl	802bfc4 <__assert_func>
 801677e:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 801684c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 8016782:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8016786:	f8d8 3000 	ldr.w	r3, [r8]
 801678a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801678e:	682b      	ldr	r3, [r5, #0]
 8016790:	4628      	mov	r0, r5
 8016792:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016794:	4798      	blx	r3
 8016796:	4606      	mov	r6, r0
 8016798:	b207      	sxth	r7, r0
 801679a:	a803      	add	r0, sp, #12
 801679c:	f004 fb5e 	bl	801ae5c <_ZN8touchgfx12TextProviderC1Ev>
 80167a0:	682b      	ldr	r3, [r5, #0]
 80167a2:	4628      	mov	r0, r5
 80167a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80167a6:	4798      	blx	r3
 80167a8:	682b      	ldr	r3, [r5, #0]
 80167aa:	4683      	mov	fp, r0
 80167ac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80167ae:	4628      	mov	r0, r5
 80167b0:	4798      	blx	r3
 80167b2:	465b      	mov	r3, fp
 80167b4:	9000      	str	r0, [sp, #0]
 80167b6:	9925      	ldr	r1, [sp, #148]	; 0x94
 80167b8:	9a02      	ldr	r2, [sp, #8]
 80167ba:	a803      	add	r0, sp, #12
 80167bc:	f004 fbba 	bl	801af34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80167c0:	f8da 3000 	ldr.w	r3, [sl]
 80167c4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80167c8:	2b00      	cmp	r3, #0
 80167ca:	d0d2      	beq.n	8016772 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x26>
 80167cc:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80167ce:	f8b9 0000 	ldrh.w	r0, [r9]
 80167d2:	4290      	cmp	r0, r2
 80167d4:	d926      	bls.n	8016824 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 80167d6:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 80167da:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80167de:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80167e2:	786a      	ldrb	r2, [r5, #1]
 80167e4:	8925      	ldrh	r5, [r4, #8]
 80167e6:	f8d8 3000 	ldr.w	r3, [r8]
 80167ea:	eba5 050c 	sub.w	r5, r5, ip
 80167ee:	b22d      	sxth	r5, r5
 80167f0:	9500      	str	r5, [sp, #0]
 80167f2:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80167f6:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80167fa:	a803      	add	r0, sp, #12
 80167fc:	f002 f911 	bl	8018a22 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8016800:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8016804:	18b9      	adds	r1, r7, r2
 8016806:	2900      	cmp	r1, #0
 8016808:	b203      	sxth	r3, r0
 801680a:	dd0f      	ble.n	801682c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 801680c:	3b01      	subs	r3, #1
 801680e:	fb13 f302 	smulbb	r3, r3, r2
 8016812:	fb16 3300 	smlabb	r3, r6, r0, r3
 8016816:	b21f      	sxth	r7, r3
 8016818:	4638      	mov	r0, r7
 801681a:	b01c      	add	sp, #112	; 0x70
 801681c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016820:	b003      	add	sp, #12
 8016822:	4770      	bx	lr
 8016824:	4b06      	ldr	r3, [pc, #24]	; (8016840 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 8016826:	4a04      	ldr	r2, [pc, #16]	; (8016838 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 8016828:	21af      	movs	r1, #175	; 0xaf
 801682a:	e7a5      	b.n	8016778 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2c>
 801682c:	2b00      	cmp	r3, #0
 801682e:	dcf3      	bgt.n	8016818 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8016830:	2700      	movs	r7, #0
 8016832:	e7f1      	b.n	8016818 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8016834:	0802f6d0 	.word	0x0802f6d0
 8016838:	080347ec 	.word	0x080347ec
 801683c:	0802f75e 	.word	0x0802f75e
 8016840:	08032cdf 	.word	0x08032cdf
 8016844:	2001e234 	.word	0x2001e234
 8016848:	2001e230 	.word	0x2001e230
 801684c:	2001e238 	.word	0x2001e238

08016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8016850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016854:	4b6d      	ldr	r3, [pc, #436]	; (8016a0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1bc>)
 8016856:	460c      	mov	r4, r1
 8016858:	881a      	ldrh	r2, [r3, #0]
 801685a:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 801685c:	b0b9      	sub	sp, #228	; 0xe4
 801685e:	428a      	cmp	r2, r1
 8016860:	4681      	mov	r9, r0
 8016862:	9302      	str	r3, [sp, #8]
 8016864:	d809      	bhi.n	801687a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a>
 8016866:	2300      	movs	r3, #0
 8016868:	f04f 32ff 	mov.w	r2, #4294967295
 801686c:	e9c0 3200 	strd	r3, r2, [r0]
 8016870:	6083      	str	r3, [r0, #8]
 8016872:	4648      	mov	r0, r9
 8016874:	b039      	add	sp, #228	; 0xe4
 8016876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801687a:	4a65      	ldr	r2, [pc, #404]	; (8016a10 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c0>)
 801687c:	6813      	ldr	r3, [r2, #0]
 801687e:	4692      	mov	sl, r2
 8016880:	b92b      	cbnz	r3, 801688e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x3e>
 8016882:	4b64      	ldr	r3, [pc, #400]	; (8016a14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c4>)
 8016884:	4a64      	ldr	r2, [pc, #400]	; (8016a18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 8016886:	21ae      	movs	r1, #174	; 0xae
 8016888:	4864      	ldr	r0, [pc, #400]	; (8016a1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1cc>)
 801688a:	f015 fb9b 	bl	802bfc4 <__assert_func>
 801688e:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8016892:	4b63      	ldr	r3, [pc, #396]	; (8016a20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d0>)
 8016894:	f8df b190 	ldr.w	fp, [pc, #400]	; 8016a28 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d8>
 8016898:	681b      	ldr	r3, [r3, #0]
 801689a:	f8db 0000 	ldr.w	r0, [fp]
 801689e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80168a2:	f7f4 fa11 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 80168a6:	682b      	ldr	r3, [r5, #0]
 80168a8:	4680      	mov	r8, r0
 80168aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80168ac:	4628      	mov	r0, r5
 80168ae:	4798      	blx	r3
 80168b0:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 80168b2:	f894 7039 	ldrb.w	r7, [r4, #57]	; 0x39
 80168b6:	f8cd b00c 	str.w	fp, [sp, #12]
 80168ba:	4406      	add	r6, r0
 80168bc:	b2b6      	uxth	r6, r6
 80168be:	2f00      	cmp	r7, #0
 80168c0:	f040 80b4 	bne.w	8016a2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1dc>
 80168c4:	a806      	add	r0, sp, #24
 80168c6:	f004 fac9 	bl	801ae5c <_ZN8touchgfx12TextProviderC1Ev>
 80168ca:	682b      	ldr	r3, [r5, #0]
 80168cc:	4628      	mov	r0, r5
 80168ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80168d0:	4798      	blx	r3
 80168d2:	682b      	ldr	r3, [r5, #0]
 80168d4:	4683      	mov	fp, r0
 80168d6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80168d8:	4628      	mov	r0, r5
 80168da:	4798      	blx	r3
 80168dc:	6822      	ldr	r2, [r4, #0]
 80168de:	9005      	str	r0, [sp, #20]
 80168e0:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80168e2:	4620      	mov	r0, r4
 80168e4:	4790      	blx	r2
 80168e6:	6821      	ldr	r1, [r4, #0]
 80168e8:	9004      	str	r0, [sp, #16]
 80168ea:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 80168ee:	4620      	mov	r0, r4
 80168f0:	4788      	blx	r1
 80168f2:	9a04      	ldr	r2, [sp, #16]
 80168f4:	9001      	str	r0, [sp, #4]
 80168f6:	9200      	str	r2, [sp, #0]
 80168f8:	4641      	mov	r1, r8
 80168fa:	9b05      	ldr	r3, [sp, #20]
 80168fc:	465a      	mov	r2, fp
 80168fe:	a806      	add	r0, sp, #24
 8016900:	f004 fb2d 	bl	801af5e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8016904:	46b8      	mov	r8, r7
 8016906:	f8da 3000 	ldr.w	r3, [sl]
 801690a:	2b00      	cmp	r3, #0
 801690c:	d0b9      	beq.n	8016882 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 801690e:	9902      	ldr	r1, [sp, #8]
 8016910:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8016912:	8809      	ldrh	r1, [r1, #0]
 8016914:	4291      	cmp	r1, r2
 8016916:	d803      	bhi.n	8016920 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xd0>
 8016918:	4b42      	ldr	r3, [pc, #264]	; (8016a24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d4>)
 801691a:	4a3f      	ldr	r2, [pc, #252]	; (8016a18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 801691c:	21af      	movs	r1, #175	; 0xaf
 801691e:	e7b3      	b.n	8016888 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x38>
 8016920:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8016924:	4629      	mov	r1, r5
 8016926:	785b      	ldrb	r3, [r3, #1]
 8016928:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801692c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016930:	a806      	add	r0, sp, #24
 8016932:	f001 fdcb 	bl	80184cc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8016936:	4580      	cmp	r8, r0
 8016938:	bfb8      	it	lt
 801693a:	fa0f f880 	sxthlt.w	r8, r0
 801693e:	3701      	adds	r7, #1
 8016940:	a806      	add	r0, sp, #24
 8016942:	b2bf      	uxth	r7, r7
 8016944:	f004 fab2 	bl	801aeac <_ZN8touchgfx12TextProvider11endOfStringEv>
 8016948:	2800      	cmp	r0, #0
 801694a:	d0dc      	beq.n	8016906 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb6>
 801694c:	fb16 f607 	smulbb	r6, r6, r7
 8016950:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8016952:	1bf6      	subs	r6, r6, r7
 8016954:	b2b6      	uxth	r6, r6
 8016956:	fa0f fb86 	sxth.w	fp, r6
 801695a:	f1bb 0f00 	cmp.w	fp, #0
 801695e:	dd06      	ble.n	801696e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x11e>
 8016960:	682b      	ldr	r3, [r5, #0]
 8016962:	4628      	mov	r0, r5
 8016964:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016966:	4798      	blx	r3
 8016968:	4430      	add	r0, r6
 801696a:	fa0f fb80 	sxth.w	fp, r0
 801696e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016972:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8016976:	6823      	ldr	r3, [r4, #0]
 8016978:	bf08      	it	eq
 801697a:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 801697e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8016980:	bf18      	it	ne
 8016982:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 8016986:	4620      	mov	r0, r4
 8016988:	4798      	blx	r3
 801698a:	2801      	cmp	r0, #1
 801698c:	fa1f f288 	uxth.w	r2, r8
 8016990:	f000 80f7 	beq.w	8016b82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8016994:	2802      	cmp	r0, #2
 8016996:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801699a:	f000 80f9 	beq.w	8016b90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x340>
 801699e:	7a29      	ldrb	r1, [r5, #8]
 80169a0:	7a68      	ldrb	r0, [r5, #9]
 80169a2:	b21b      	sxth	r3, r3
 80169a4:	1a5b      	subs	r3, r3, r1
 80169a6:	4401      	add	r1, r0
 80169a8:	440a      	add	r2, r1
 80169aa:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 80169ae:	b29b      	uxth	r3, r3
 80169b0:	b292      	uxth	r2, r2
 80169b2:	2902      	cmp	r1, #2
 80169b4:	b21e      	sxth	r6, r3
 80169b6:	b217      	sxth	r7, r2
 80169b8:	f000 80ed 	beq.w	8016b96 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x346>
 80169bc:	2903      	cmp	r1, #3
 80169be:	f000 80f3 	beq.w	8016ba8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x358>
 80169c2:	2901      	cmp	r1, #1
 80169c4:	f040 80f9 	bne.w	8016bba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x36a>
 80169c8:	8923      	ldrh	r3, [r4, #8]
 80169ca:	463a      	mov	r2, r7
 80169cc:	eba3 030b 	sub.w	r3, r3, fp
 80169d0:	465f      	mov	r7, fp
 80169d2:	4635      	mov	r5, r6
 80169d4:	4693      	mov	fp, r2
 80169d6:	b21e      	sxth	r6, r3
 80169d8:	f8da 3000 	ldr.w	r3, [sl]
 80169dc:	2b00      	cmp	r3, #0
 80169de:	f43f af50 	beq.w	8016882 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 80169e2:	9b02      	ldr	r3, [sp, #8]
 80169e4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80169e6:	881b      	ldrh	r3, [r3, #0]
 80169e8:	428b      	cmp	r3, r1
 80169ea:	d995      	bls.n	8016918 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 80169ec:	9b03      	ldr	r3, [sp, #12]
 80169ee:	6818      	ldr	r0, [r3, #0]
 80169f0:	f7f4 f96a 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 80169f4:	f8a9 6000 	strh.w	r6, [r9]
 80169f8:	f8a9 5002 	strh.w	r5, [r9, #2]
 80169fc:	f8a9 7004 	strh.w	r7, [r9, #4]
 8016a00:	f8a9 b006 	strh.w	fp, [r9, #6]
 8016a04:	f8c9 0008 	str.w	r0, [r9, #8]
 8016a08:	e733      	b.n	8016872 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x22>
 8016a0a:	bf00      	nop
 8016a0c:	2001e234 	.word	0x2001e234
 8016a10:	2001e230 	.word	0x2001e230
 8016a14:	0802f6d0 	.word	0x0802f6d0
 8016a18:	080347ec 	.word	0x080347ec
 8016a1c:	0802f75e 	.word	0x0802f75e
 8016a20:	2001e238 	.word	0x2001e238
 8016a24:	08032cdf 	.word	0x08032cdf
 8016a28:	2001e23c 	.word	0x2001e23c
 8016a2c:	af1f      	add	r7, sp, #124	; 0x7c
 8016a2e:	4638      	mov	r0, r7
 8016a30:	f004 fa14 	bl	801ae5c <_ZN8touchgfx12TextProviderC1Ev>
 8016a34:	682b      	ldr	r3, [r5, #0]
 8016a36:	4628      	mov	r0, r5
 8016a38:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016a3a:	4798      	blx	r3
 8016a3c:	682b      	ldr	r3, [r5, #0]
 8016a3e:	4683      	mov	fp, r0
 8016a40:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a42:	4628      	mov	r0, r5
 8016a44:	4798      	blx	r3
 8016a46:	6822      	ldr	r2, [r4, #0]
 8016a48:	9005      	str	r0, [sp, #20]
 8016a4a:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8016a4c:	4620      	mov	r0, r4
 8016a4e:	4790      	blx	r2
 8016a50:	6821      	ldr	r1, [r4, #0]
 8016a52:	9004      	str	r0, [sp, #16]
 8016a54:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 8016a58:	4620      	mov	r0, r4
 8016a5a:	4788      	blx	r1
 8016a5c:	9a04      	ldr	r2, [sp, #16]
 8016a5e:	9001      	str	r0, [sp, #4]
 8016a60:	9200      	str	r2, [sp, #0]
 8016a62:	9b05      	ldr	r3, [sp, #20]
 8016a64:	465a      	mov	r2, fp
 8016a66:	4641      	mov	r1, r8
 8016a68:	4638      	mov	r0, r7
 8016a6a:	f004 fa78 	bl	801af5e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8016a6e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016a72:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8016a76:	f9b4 b008 	ldrsh.w	fp, [r4, #8]
 8016a7a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8016a7e:	bf0a      	itet	eq
 8016a80:	465b      	moveq	r3, fp
 8016a82:	4613      	movne	r3, r2
 8016a84:	4693      	moveq	fp, r2
 8016a86:	f894 2037 	ldrb.w	r2, [r4, #55]	; 0x37
 8016a8a:	1a9b      	subs	r3, r3, r2
 8016a8c:	b29a      	uxth	r2, r3
 8016a8e:	f8da 3000 	ldr.w	r3, [sl]
 8016a92:	2b00      	cmp	r3, #0
 8016a94:	f43f aef5 	beq.w	8016882 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 8016a98:	9802      	ldr	r0, [sp, #8]
 8016a9a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8016a9c:	8800      	ldrh	r0, [r0, #0]
 8016a9e:	4288      	cmp	r0, r1
 8016aa0:	f67f af3a 	bls.w	8016918 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 8016aa4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8016aa8:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8016aac:	7859      	ldrb	r1, [r3, #1]
 8016aae:	9707      	str	r7, [sp, #28]
 8016ab0:	2300      	movs	r3, #0
 8016ab2:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8016ab6:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016aba:	f88d 1020 	strb.w	r1, [sp, #32]
 8016abe:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8016ac2:	9509      	str	r5, [sp, #36]	; 0x24
 8016ac4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016ac8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016acc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8016ad0:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016ad4:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8016ad8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016adc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8016ae0:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
 8016ae4:	b350      	cbz	r0, 8016b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 8016ae6:	682b      	ldr	r3, [r5, #0]
 8016ae8:	4628      	mov	r0, r5
 8016aea:	695b      	ldr	r3, [r3, #20]
 8016aec:	4798      	blx	r3
 8016aee:	4680      	mov	r8, r0
 8016af0:	b320      	cbz	r0, 8016b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 8016af2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016af4:	6803      	ldr	r3, [r0, #0]
 8016af6:	4641      	mov	r1, r8
 8016af8:	68db      	ldr	r3, [r3, #12]
 8016afa:	4798      	blx	r3
 8016afc:	4607      	mov	r7, r0
 8016afe:	b1e8      	cbz	r0, 8016b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 8016b00:	7b43      	ldrb	r3, [r0, #13]
 8016b02:	7a82      	ldrb	r2, [r0, #10]
 8016b04:	005b      	lsls	r3, r3, #1
 8016b06:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016b0a:	4313      	orrs	r3, r2
 8016b0c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8016b10:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8016b14:	2b04      	cmp	r3, #4
 8016b16:	d111      	bne.n	8016b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 8016b18:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016b1a:	6803      	ldr	r3, [r0, #0]
 8016b1c:	463a      	mov	r2, r7
 8016b1e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016b20:	4641      	mov	r1, r8
 8016b22:	4798      	blx	r3
 8016b24:	7b7b      	ldrb	r3, [r7, #13]
 8016b26:	005b      	lsls	r3, r3, #1
 8016b28:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016b2c:	7abb      	ldrb	r3, [r7, #10]
 8016b2e:	4313      	orrs	r3, r2
 8016b30:	4418      	add	r0, r3
 8016b32:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8016b36:	4418      	add	r0, r3
 8016b38:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
 8016b3c:	b233      	sxth	r3, r6
 8016b3e:	2700      	movs	r7, #0
 8016b40:	005a      	lsls	r2, r3, #1
 8016b42:	46b8      	mov	r8, r7
 8016b44:	455a      	cmp	r2, fp
 8016b46:	bfd4      	ite	le
 8016b48:	2100      	movle	r1, #0
 8016b4a:	2101      	movgt	r1, #1
 8016b4c:	a806      	add	r0, sp, #24
 8016b4e:	9305      	str	r3, [sp, #20]
 8016b50:	9204      	str	r2, [sp, #16]
 8016b52:	f001 fe97 	bl	8018884 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8016b56:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8016b5a:	4588      	cmp	r8, r1
 8016b5c:	bfb8      	it	lt
 8016b5e:	fa0f f881 	sxthlt.w	r8, r1
 8016b62:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016b66:	3701      	adds	r7, #1
 8016b68:	ebab 0b06 	sub.w	fp, fp, r6
 8016b6c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8016b70:	b2bf      	uxth	r7, r7
 8016b72:	fa0f fb8b 	sxth.w	fp, fp
 8016b76:	2900      	cmp	r1, #0
 8016b78:	f43f aee8 	beq.w	801694c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8016b7c:	455b      	cmp	r3, fp
 8016b7e:	dbe1      	blt.n	8016b44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>
 8016b80:	e6e4      	b.n	801694c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8016b82:	eba6 0308 	sub.w	r3, r6, r8
 8016b86:	f04f 0802 	mov.w	r8, #2
 8016b8a:	fb93 f3f8 	sdiv	r3, r3, r8
 8016b8e:	e706      	b.n	801699e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8016b90:	4413      	add	r3, r2
 8016b92:	1af3      	subs	r3, r6, r3
 8016b94:	e703      	b.n	801699e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8016b96:	8926      	ldrh	r6, [r4, #8]
 8016b98:	8965      	ldrh	r5, [r4, #10]
 8016b9a:	1ab2      	subs	r2, r6, r2
 8016b9c:	1ad3      	subs	r3, r2, r3
 8016b9e:	eba5 050b 	sub.w	r5, r5, fp
 8016ba2:	b21e      	sxth	r6, r3
 8016ba4:	b22d      	sxth	r5, r5
 8016ba6:	e717      	b.n	80169d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 8016ba8:	8965      	ldrh	r5, [r4, #10]
 8016baa:	1aaa      	subs	r2, r5, r2
 8016bac:	1ad3      	subs	r3, r2, r3
 8016bae:	b21d      	sxth	r5, r3
 8016bb0:	463b      	mov	r3, r7
 8016bb2:	2600      	movs	r6, #0
 8016bb4:	465f      	mov	r7, fp
 8016bb6:	469b      	mov	fp, r3
 8016bb8:	e70e      	b.n	80169d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 8016bba:	2500      	movs	r5, #0
 8016bbc:	e70c      	b.n	80169d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 8016bbe:	bf00      	nop

08016bc0 <_ZN8touchgfx8TextAreaD0Ev>:
 8016bc0:	b510      	push	{r4, lr}
 8016bc2:	2148      	movs	r1, #72	; 0x48
 8016bc4:	4604      	mov	r4, r0
 8016bc6:	f014 fab0 	bl	802b12a <_ZdlPvj>
 8016bca:	4620      	mov	r0, r4
 8016bcc:	bd10      	pop	{r4, pc}
	...

08016bd0 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8016bd0:	b508      	push	{r3, lr}
 8016bd2:	4b0b      	ldr	r3, [pc, #44]	; (8016c00 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x30>)
 8016bd4:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8016bd6:	881b      	ldrh	r3, [r3, #0]
 8016bd8:	4293      	cmp	r3, r2
 8016bda:	d90e      	bls.n	8016bfa <_ZNK8touchgfx8TextArea12getAlignmentEv+0x2a>
 8016bdc:	4b09      	ldr	r3, [pc, #36]	; (8016c04 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x34>)
 8016bde:	681b      	ldr	r3, [r3, #0]
 8016be0:	b92b      	cbnz	r3, 8016bee <_ZNK8touchgfx8TextArea12getAlignmentEv+0x1e>
 8016be2:	4b09      	ldr	r3, [pc, #36]	; (8016c08 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x38>)
 8016be4:	4a09      	ldr	r2, [pc, #36]	; (8016c0c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x3c>)
 8016be6:	480a      	ldr	r0, [pc, #40]	; (8016c10 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x40>)
 8016be8:	21ae      	movs	r1, #174	; 0xae
 8016bea:	f015 f9eb 	bl	802bfc4 <__assert_func>
 8016bee:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8016bf2:	7858      	ldrb	r0, [r3, #1]
 8016bf4:	f000 0003 	and.w	r0, r0, #3
 8016bf8:	bd08      	pop	{r3, pc}
 8016bfa:	2000      	movs	r0, #0
 8016bfc:	e7fc      	b.n	8016bf8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x28>
 8016bfe:	bf00      	nop
 8016c00:	2001e234 	.word	0x2001e234
 8016c04:	2001e230 	.word	0x2001e230
 8016c08:	0802f6d0 	.word	0x0802f6d0
 8016c0c:	080347ec 	.word	0x080347ec
 8016c10:	0802f75e 	.word	0x0802f75e

08016c14 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8016c14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016c18:	4b15      	ldr	r3, [pc, #84]	; (8016c70 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x5c>)
 8016c1a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8016c1c:	881b      	ldrh	r3, [r3, #0]
 8016c1e:	428b      	cmp	r3, r1
 8016c20:	4604      	mov	r4, r0
 8016c22:	d921      	bls.n	8016c68 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x54>
 8016c24:	6803      	ldr	r3, [r0, #0]
 8016c26:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8016c28:	4b12      	ldr	r3, [pc, #72]	; (8016c74 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x60>)
 8016c2a:	681b      	ldr	r3, [r3, #0]
 8016c2c:	b92b      	cbnz	r3, 8016c3a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x26>
 8016c2e:	4b12      	ldr	r3, [pc, #72]	; (8016c78 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x64>)
 8016c30:	4a12      	ldr	r2, [pc, #72]	; (8016c7c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x68>)
 8016c32:	4813      	ldr	r0, [pc, #76]	; (8016c80 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x6c>)
 8016c34:	21ae      	movs	r1, #174	; 0xae
 8016c36:	f015 f9c5 	bl	802bfc4 <__assert_func>
 8016c3a:	4b12      	ldr	r3, [pc, #72]	; (8016c84 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x70>)
 8016c3c:	6818      	ldr	r0, [r3, #0]
 8016c3e:	f7f4 f843 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8016c42:	6823      	ldr	r3, [r4, #0]
 8016c44:	4606      	mov	r6, r0
 8016c46:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8016c48:	4620      	mov	r0, r4
 8016c4a:	4798      	blx	r3
 8016c4c:	6823      	ldr	r3, [r4, #0]
 8016c4e:	4607      	mov	r7, r0
 8016c50:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8016c54:	4620      	mov	r0, r4
 8016c56:	4798      	blx	r3
 8016c58:	463a      	mov	r2, r7
 8016c5a:	4603      	mov	r3, r0
 8016c5c:	4631      	mov	r1, r6
 8016c5e:	4620      	mov	r0, r4
 8016c60:	46ac      	mov	ip, r5
 8016c62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8016c66:	4760      	bx	ip
 8016c68:	2000      	movs	r0, #0
 8016c6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016c6e:	bf00      	nop
 8016c70:	2001e234 	.word	0x2001e234
 8016c74:	2001e230 	.word	0x2001e230
 8016c78:	0802f6d0 	.word	0x0802f6d0
 8016c7c:	080347ec 	.word	0x080347ec
 8016c80:	0802f75e 	.word	0x0802f75e
 8016c84:	2001e23c 	.word	0x2001e23c

08016c88 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8016c88:	b513      	push	{r0, r1, r4, lr}
 8016c8a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8016c8e:	4604      	mov	r4, r0
 8016c90:	b343      	cbz	r3, 8016ce4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 8016c92:	4b1b      	ldr	r3, [pc, #108]	; (8016d00 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x78>)
 8016c94:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8016c96:	881b      	ldrh	r3, [r3, #0]
 8016c98:	428b      	cmp	r3, r1
 8016c9a:	d923      	bls.n	8016ce4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 8016c9c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8016ca0:	2b00      	cmp	r3, #0
 8016ca2:	dd1f      	ble.n	8016ce4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 8016ca4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8016ca8:	2b00      	cmp	r3, #0
 8016caa:	dd1b      	ble.n	8016ce4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 8016cac:	4b15      	ldr	r3, [pc, #84]	; (8016d04 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x7c>)
 8016cae:	681b      	ldr	r3, [r3, #0]
 8016cb0:	b92b      	cbnz	r3, 8016cbe <_ZNK8touchgfx8TextArea17invalidateContentEv+0x36>
 8016cb2:	4b15      	ldr	r3, [pc, #84]	; (8016d08 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x80>)
 8016cb4:	4a15      	ldr	r2, [pc, #84]	; (8016d0c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x84>)
 8016cb6:	4816      	ldr	r0, [pc, #88]	; (8016d10 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x88>)
 8016cb8:	21ae      	movs	r1, #174	; 0xae
 8016cba:	f015 f983 	bl	802bfc4 <__assert_func>
 8016cbe:	4b15      	ldr	r3, [pc, #84]	; (8016d14 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x8c>)
 8016cc0:	6818      	ldr	r0, [r3, #0]
 8016cc2:	f7f4 f801 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8016cc6:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8016cca:	6822      	ldr	r2, [r4, #0]
 8016ccc:	2b00      	cmp	r3, #0
 8016cce:	db06      	blt.n	8016cde <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 8016cd0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8016cd4:	2b00      	cmp	r3, #0
 8016cd6:	db02      	blt.n	8016cde <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 8016cd8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8016cda:	4298      	cmp	r0, r3
 8016cdc:	d004      	beq.n	8016ce8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x60>
 8016cde:	6953      	ldr	r3, [r2, #20]
 8016ce0:	4620      	mov	r0, r4
 8016ce2:	4798      	blx	r3
 8016ce4:	b002      	add	sp, #8
 8016ce6:	bd10      	pop	{r4, pc}
 8016ce8:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8016cec:	c903      	ldmia	r1, {r0, r1}
 8016cee:	466b      	mov	r3, sp
 8016cf0:	e883 0003 	stmia.w	r3, {r0, r1}
 8016cf4:	6912      	ldr	r2, [r2, #16]
 8016cf6:	4619      	mov	r1, r3
 8016cf8:	4620      	mov	r0, r4
 8016cfa:	4790      	blx	r2
 8016cfc:	e7f2      	b.n	8016ce4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 8016cfe:	bf00      	nop
 8016d00:	2001e234 	.word	0x2001e234
 8016d04:	2001e230 	.word	0x2001e230
 8016d08:	0802f6d0 	.word	0x0802f6d0
 8016d0c:	080347ec 	.word	0x080347ec
 8016d10:	0802f75e 	.word	0x0802f75e
 8016d14:	2001e23c 	.word	0x2001e23c

08016d18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8016d18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016d1c:	4d56      	ldr	r5, [pc, #344]	; (8016e78 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x160>)
 8016d1e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8016d20:	882b      	ldrh	r3, [r5, #0]
 8016d22:	4293      	cmp	r3, r2
 8016d24:	b08e      	sub	sp, #56	; 0x38
 8016d26:	4604      	mov	r4, r0
 8016d28:	f240 80a3 	bls.w	8016e72 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 8016d2c:	6808      	ldr	r0, [r1, #0]
 8016d2e:	4e53      	ldr	r6, [pc, #332]	; (8016e7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x164>)
 8016d30:	6849      	ldr	r1, [r1, #4]
 8016d32:	ab05      	add	r3, sp, #20
 8016d34:	c303      	stmia	r3!, {r0, r1}
 8016d36:	6833      	ldr	r3, [r6, #0]
 8016d38:	b92b      	cbnz	r3, 8016d46 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 8016d3a:	4b51      	ldr	r3, [pc, #324]	; (8016e80 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x168>)
 8016d3c:	4a51      	ldr	r2, [pc, #324]	; (8016e84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 8016d3e:	21ae      	movs	r1, #174	; 0xae
 8016d40:	4851      	ldr	r0, [pc, #324]	; (8016e88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x170>)
 8016d42:	f015 f93f 	bl	802bfc4 <__assert_func>
 8016d46:	4f51      	ldr	r7, [pc, #324]	; (8016e8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x174>)
 8016d48:	4611      	mov	r1, r2
 8016d4a:	6838      	ldr	r0, [r7, #0]
 8016d4c:	f7f3 ffbc 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8016d50:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8016d54:	2b00      	cmp	r3, #0
 8016d56:	db11      	blt.n	8016d7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 8016d58:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8016d5c:	2b00      	cmp	r3, #0
 8016d5e:	db0d      	blt.n	8016d7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 8016d60:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8016d62:	4298      	cmp	r0, r3
 8016d64:	d10a      	bne.n	8016d7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 8016d66:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8016d6a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8016d6e:	ab09      	add	r3, sp, #36	; 0x24
 8016d70:	e883 0003 	stmia.w	r3, {r0, r1}
 8016d74:	4619      	mov	r1, r3
 8016d76:	a805      	add	r0, sp, #20
 8016d78:	f7fb f9b4 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 8016d7c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016d80:	2b00      	cmp	r3, #0
 8016d82:	dd76      	ble.n	8016e72 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 8016d84:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8016d88:	2b00      	cmp	r3, #0
 8016d8a:	dd72      	ble.n	8016e72 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 8016d8c:	6833      	ldr	r3, [r6, #0]
 8016d8e:	2b00      	cmp	r3, #0
 8016d90:	d0d3      	beq.n	8016d3a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 8016d92:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8016d94:	8829      	ldrh	r1, [r5, #0]
 8016d96:	4291      	cmp	r1, r2
 8016d98:	d803      	bhi.n	8016da2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x8a>
 8016d9a:	4b3d      	ldr	r3, [pc, #244]	; (8016e90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x178>)
 8016d9c:	4a39      	ldr	r2, [pc, #228]	; (8016e84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 8016d9e:	21af      	movs	r1, #175	; 0xaf
 8016da0:	e7ce      	b.n	8016d40 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x28>
 8016da2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8016da6:	4b3b      	ldr	r3, [pc, #236]	; (8016e94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x17c>)
 8016da8:	681b      	ldr	r3, [r3, #0]
 8016daa:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 8016dae:	f1b8 0f00 	cmp.w	r8, #0
 8016db2:	d05e      	beq.n	8016e72 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 8016db4:	6823      	ldr	r3, [r4, #0]
 8016db6:	f894 9036 	ldrb.w	r9, [r4, #54]	; 0x36
 8016dba:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8016dbc:	4620      	mov	r0, r4
 8016dbe:	4798      	blx	r3
 8016dc0:	6833      	ldr	r3, [r6, #0]
 8016dc2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8016dc6:	f894 c038 	ldrb.w	ip, [r4, #56]	; 0x38
 8016dca:	2b00      	cmp	r3, #0
 8016dcc:	d0b5      	beq.n	8016d3a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 8016dce:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8016dd0:	f8b5 e000 	ldrh.w	lr, [r5]
 8016dd4:	4596      	cmp	lr, r2
 8016dd6:	d9e0      	bls.n	8016d9a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 8016dd8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8016ddc:	f894 a037 	ldrb.w	sl, [r4, #55]	; 0x37
 8016de0:	785b      	ldrb	r3, [r3, #1]
 8016de2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8016de4:	f894 e039 	ldrb.w	lr, [r4, #57]	; 0x39
 8016de8:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8016dec:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016df0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8016df4:	4b28      	ldr	r3, [pc, #160]	; (8016e98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x180>)
 8016df6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8016dfa:	681b      	ldr	r3, [r3, #0]
 8016dfc:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8016e00:	920b      	str	r2, [sp, #44]	; 0x2c
 8016e02:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 8016e06:	f88d 9032 	strb.w	r9, [sp, #50]	; 0x32
 8016e0a:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 8016e0e:	f88d e034 	strb.w	lr, [sp, #52]	; 0x34
 8016e12:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8016e16:	b122      	cbz	r2, 8016e22 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10a>
 8016e18:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 8016e1c:	f1b8 0f00 	cmp.w	r8, #0
 8016e20:	d101      	bne.n	8016e26 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10e>
 8016e22:	f8d3 8008 	ldr.w	r8, [r3, #8]
 8016e26:	f10d 091c 	add.w	r9, sp, #28
 8016e2a:	4621      	mov	r1, r4
 8016e2c:	4648      	mov	r0, r9
 8016e2e:	f003 fb2b 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016e32:	6833      	ldr	r3, [r6, #0]
 8016e34:	2b00      	cmp	r3, #0
 8016e36:	d080      	beq.n	8016d3a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 8016e38:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8016e3a:	882b      	ldrh	r3, [r5, #0]
 8016e3c:	428b      	cmp	r3, r1
 8016e3e:	d9ac      	bls.n	8016d9a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 8016e40:	6838      	ldr	r0, [r7, #0]
 8016e42:	f7f3 ff41 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8016e46:	6823      	ldr	r3, [r4, #0]
 8016e48:	4605      	mov	r5, r0
 8016e4a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8016e4c:	4620      	mov	r0, r4
 8016e4e:	4798      	blx	r3
 8016e50:	6823      	ldr	r3, [r4, #0]
 8016e52:	4606      	mov	r6, r0
 8016e54:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8016e58:	4620      	mov	r0, r4
 8016e5a:	4798      	blx	r3
 8016e5c:	e9cd 6002 	strd	r6, r0, [sp, #8]
 8016e60:	ab09      	add	r3, sp, #36	; 0x24
 8016e62:	9300      	str	r3, [sp, #0]
 8016e64:	9501      	str	r5, [sp, #4]
 8016e66:	ab05      	add	r3, sp, #20
 8016e68:	e899 0006 	ldmia.w	r9, {r1, r2}
 8016e6c:	4640      	mov	r0, r8
 8016e6e:	f7f3 fedd 	bl	800ac2c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8016e72:	b00e      	add	sp, #56	; 0x38
 8016e74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016e78:	2001e234 	.word	0x2001e234
 8016e7c:	2001e230 	.word	0x2001e230
 8016e80:	0802f6d0 	.word	0x0802f6d0
 8016e84:	080347ec 	.word	0x080347ec
 8016e88:	0802f75e 	.word	0x0802f75e
 8016e8c:	2001e23c 	.word	0x2001e23c
 8016e90:	08032cdf 	.word	0x08032cdf
 8016e94:	2001e238 	.word	0x2001e238
 8016e98:	2001e1c0 	.word	0x2001e1c0

08016e9c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8016e9c:	b538      	push	{r3, r4, r5, lr}
 8016e9e:	4b0e      	ldr	r3, [pc, #56]	; (8016ed8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8016ea0:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8016ea2:	881b      	ldrh	r3, [r3, #0]
 8016ea4:	429a      	cmp	r2, r3
 8016ea6:	4604      	mov	r4, r0
 8016ea8:	d214      	bcs.n	8016ed4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8016eaa:	6803      	ldr	r3, [r0, #0]
 8016eac:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8016eae:	4798      	blx	r3
 8016eb0:	6823      	ldr	r3, [r4, #0]
 8016eb2:	4605      	mov	r5, r0
 8016eb4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8016eb6:	4620      	mov	r0, r4
 8016eb8:	4798      	blx	r3
 8016eba:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016ebe:	b22d      	sxth	r5, r5
 8016ec0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8016ec4:	4601      	mov	r1, r0
 8016ec6:	bf06      	itte	eq
 8016ec8:	4602      	moveq	r2, r0
 8016eca:	4629      	moveq	r1, r5
 8016ecc:	462a      	movne	r2, r5
 8016ece:	4620      	mov	r0, r4
 8016ed0:	f7fa fcde 	bl	8011890 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8016ed4:	bd38      	pop	{r3, r4, r5, pc}
 8016ed6:	bf00      	nop
 8016ed8:	2001e234 	.word	0x2001e234

08016edc <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8016edc:	b530      	push	{r4, r5, lr}
 8016ede:	888b      	ldrh	r3, [r1, #4]
 8016ee0:	8583      	strh	r3, [r0, #44]	; 0x2c
 8016ee2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8016ee6:	b085      	sub	sp, #20
 8016ee8:	4604      	mov	r4, r0
 8016eea:	b923      	cbnz	r3, 8016ef6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8016eec:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8016ef0:	b90b      	cbnz	r3, 8016ef6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8016ef2:	f7ff ffd3 	bl	8016e9c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8016ef6:	6823      	ldr	r3, [r4, #0]
 8016ef8:	466d      	mov	r5, sp
 8016efa:	4621      	mov	r1, r4
 8016efc:	4628      	mov	r0, r5
 8016efe:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8016f02:	4798      	blx	r3
 8016f04:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8016f08:	343c      	adds	r4, #60	; 0x3c
 8016f0a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8016f0e:	b005      	add	sp, #20
 8016f10:	bd30      	pop	{r4, r5, pc}

08016f12 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8016f12:	2300      	movs	r3, #0
 8016f14:	8083      	strh	r3, [r0, #4]
 8016f16:	80c3      	strh	r3, [r0, #6]
 8016f18:	8003      	strh	r3, [r0, #0]
 8016f1a:	8043      	strh	r3, [r0, #2]
 8016f1c:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8016f20:	2bff      	cmp	r3, #255	; 0xff
 8016f22:	bf01      	itttt	eq
 8016f24:	890b      	ldrheq	r3, [r1, #8]
 8016f26:	8083      	strheq	r3, [r0, #4]
 8016f28:	894b      	ldrheq	r3, [r1, #10]
 8016f2a:	80c3      	strheq	r3, [r0, #6]
 8016f2c:	4770      	bx	lr
	...

08016f30 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8016f30:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016f32:	4604      	mov	r4, r0
 8016f34:	6808      	ldr	r0, [r1, #0]
 8016f36:	6849      	ldr	r1, [r1, #4]
 8016f38:	466b      	mov	r3, sp
 8016f3a:	c303      	stmia	r3!, {r0, r1}
 8016f3c:	6823      	ldr	r3, [r4, #0]
 8016f3e:	4669      	mov	r1, sp
 8016f40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016f42:	4620      	mov	r0, r4
 8016f44:	4798      	blx	r3
 8016f46:	4b08      	ldr	r3, [pc, #32]	; (8016f68 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8016f48:	681b      	ldr	r3, [r3, #0]
 8016f4a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8016f4e:	b10a      	cbz	r2, 8016f54 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8016f50:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016f52:	b900      	cbnz	r0, 8016f56 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8016f54:	6898      	ldr	r0, [r3, #8]
 8016f56:	6803      	ldr	r3, [r0, #0]
 8016f58:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8016f5a:	6a1d      	ldr	r5, [r3, #32]
 8016f5c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8016f60:	4669      	mov	r1, sp
 8016f62:	47a8      	blx	r5
 8016f64:	b003      	add	sp, #12
 8016f66:	bd30      	pop	{r4, r5, pc}
 8016f68:	2001e1c0 	.word	0x2001e1c0

08016f6c <_ZN8touchgfx3BoxD1Ev>:
 8016f6c:	4770      	bx	lr

08016f6e <_ZN8touchgfx3BoxD0Ev>:
 8016f6e:	b510      	push	{r4, lr}
 8016f70:	212c      	movs	r1, #44	; 0x2c
 8016f72:	4604      	mov	r4, r0
 8016f74:	f014 f8d9 	bl	802b12a <_ZdlPvj>
 8016f78:	4620      	mov	r0, r4
 8016f7a:	bd10      	pop	{r4, pc}

08016f7c <_ZNK8touchgfx3Box17invalidateContentEv>:
 8016f7c:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8016f80:	b12a      	cbz	r2, 8016f8e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8016f82:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8016f86:	b112      	cbz	r2, 8016f8e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8016f88:	6803      	ldr	r3, [r0, #0]
 8016f8a:	695b      	ldr	r3, [r3, #20]
 8016f8c:	4718      	bx	r3
 8016f8e:	4770      	bx	lr

08016f90 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8016f90:	b570      	push	{r4, r5, r6, lr}
 8016f92:	880b      	ldrh	r3, [r1, #0]
 8016f94:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8016f96:	4605      	mov	r5, r0
 8016f98:	8813      	ldrh	r3, [r2, #0]
 8016f9a:	f825 3f30 	strh.w	r3, [r5, #48]!
 8016f9e:	4604      	mov	r4, r0
 8016fa0:	4628      	mov	r0, r5
 8016fa2:	f005 fb8b 	bl	801c6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016fa6:	4606      	mov	r6, r0
 8016fa8:	4628      	mov	r0, r5
 8016faa:	f005 fbcb 	bl	801c744 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016fae:	6823      	ldr	r3, [r4, #0]
 8016fb0:	4605      	mov	r5, r0
 8016fb2:	b231      	sxth	r1, r6
 8016fb4:	4620      	mov	r0, r4
 8016fb6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016fb8:	4798      	blx	r3
 8016fba:	6823      	ldr	r3, [r4, #0]
 8016fbc:	b229      	sxth	r1, r5
 8016fbe:	4620      	mov	r0, r4
 8016fc0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016fc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016fc6:	4718      	bx	r3

08016fc8 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8016fc8:	b510      	push	{r4, lr}
 8016fca:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8016fce:	2bff      	cmp	r3, #255	; 0xff
 8016fd0:	4604      	mov	r4, r0
 8016fd2:	d006      	beq.n	8016fe2 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8016fd4:	2300      	movs	r3, #0
 8016fd6:	8003      	strh	r3, [r0, #0]
 8016fd8:	8043      	strh	r3, [r0, #2]
 8016fda:	8083      	strh	r3, [r0, #4]
 8016fdc:	80c3      	strh	r3, [r0, #6]
 8016fde:	4620      	mov	r0, r4
 8016fe0:	bd10      	pop	{r4, pc}
 8016fe2:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8016fe6:	b11b      	cbz	r3, 8016ff0 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8016fe8:	3130      	adds	r1, #48	; 0x30
 8016fea:	f005 fbef 	bl	801c7cc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8016fee:	e7f6      	b.n	8016fde <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8016ff0:	312e      	adds	r1, #46	; 0x2e
 8016ff2:	e7fa      	b.n	8016fea <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

08016ff4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8016ff4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016ff8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8016ffc:	b08a      	sub	sp, #40	; 0x28
 8016ffe:	4604      	mov	r4, r0
 8017000:	4688      	mov	r8, r1
 8017002:	2b00      	cmp	r3, #0
 8017004:	d044      	beq.n	8017090 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 8017006:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8017008:	f8ad 3014 	strh.w	r3, [sp, #20]
 801700c:	a805      	add	r0, sp, #20
 801700e:	f005 fb55 	bl	801c6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017012:	4605      	mov	r5, r0
 8017014:	b206      	sxth	r6, r0
 8017016:	a805      	add	r0, sp, #20
 8017018:	f005 fb94 	bl	801c744 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801701c:	f9b8 2000 	ldrsh.w	r2, [r8]
 8017020:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 8017024:	4417      	add	r7, r2
 8017026:	b2bf      	uxth	r7, r7
 8017028:	2300      	movs	r3, #0
 801702a:	fa0f fe87 	sxth.w	lr, r7
 801702e:	459e      	cmp	lr, r3
 8017030:	fa0f fc80 	sxth.w	ip, r0
 8017034:	9306      	str	r3, [sp, #24]
 8017036:	dd2d      	ble.n	8017094 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8017038:	4296      	cmp	r6, r2
 801703a:	dd2b      	ble.n	8017094 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 801703c:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 8017040:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 8017044:	4419      	add	r1, r3
 8017046:	b289      	uxth	r1, r1
 8017048:	fa0f f881 	sxth.w	r8, r1
 801704c:	f1b8 0f00 	cmp.w	r8, #0
 8017050:	dd20      	ble.n	8017094 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8017052:	459c      	cmp	ip, r3
 8017054:	dd1e      	ble.n	8017094 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8017056:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801705a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801705e:	4576      	cmp	r6, lr
 8017060:	bfa8      	it	ge
 8017062:	463d      	movge	r5, r7
 8017064:	45c4      	cmp	ip, r8
 8017066:	bfa8      	it	ge
 8017068:	4608      	movge	r0, r1
 801706a:	1aad      	subs	r5, r5, r2
 801706c:	1ac0      	subs	r0, r0, r3
 801706e:	f8ad 501c 	strh.w	r5, [sp, #28]
 8017072:	f8ad 001e 	strh.w	r0, [sp, #30]
 8017076:	f8ad 2018 	strh.w	r2, [sp, #24]
 801707a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801707e:	4b1f      	ldr	r3, [pc, #124]	; (80170fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 8017080:	681b      	ldr	r3, [r3, #0]
 8017082:	b953      	cbnz	r3, 801709a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 8017084:	4b1e      	ldr	r3, [pc, #120]	; (8017100 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 8017086:	4a1f      	ldr	r2, [pc, #124]	; (8017104 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 8017088:	481f      	ldr	r0, [pc, #124]	; (8017108 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 801708a:	2187      	movs	r1, #135	; 0x87
 801708c:	f014 ff9a 	bl	802bfc4 <__assert_func>
 8017090:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8017092:	e7b9      	b.n	8017008 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8017094:	2300      	movs	r3, #0
 8017096:	9307      	str	r3, [sp, #28]
 8017098:	e7f1      	b.n	801707e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 801709a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801709e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80170a2:	429a      	cmp	r2, r3
 80170a4:	d026      	beq.n	80170f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 80170a6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80170aa:	2b00      	cmp	r3, #0
 80170ac:	dd22      	ble.n	80170f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 80170ae:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80170b2:	2b00      	cmp	r3, #0
 80170b4:	dd1e      	ble.n	80170f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 80170b6:	2300      	movs	r3, #0
 80170b8:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80170bc:	6823      	ldr	r3, [r4, #0]
 80170be:	a908      	add	r1, sp, #32
 80170c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80170c2:	4620      	mov	r0, r4
 80170c4:	4798      	blx	r3
 80170c6:	4b11      	ldr	r3, [pc, #68]	; (801710c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 80170c8:	681b      	ldr	r3, [r3, #0]
 80170ca:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80170ce:	b10a      	cbz	r2, 80170d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80170d0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80170d2:	b900      	cbnz	r0, 80170d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 80170d4:	6898      	ldr	r0, [r3, #8]
 80170d6:	6801      	ldr	r1, [r0, #0]
 80170d8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80170dc:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80170e0:	2501      	movs	r5, #1
 80170e2:	9502      	str	r5, [sp, #8]
 80170e4:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80170e8:	9401      	str	r4, [sp, #4]
 80170ea:	ac06      	add	r4, sp, #24
 80170ec:	9400      	str	r4, [sp, #0]
 80170ee:	688c      	ldr	r4, [r1, #8]
 80170f0:	a905      	add	r1, sp, #20
 80170f2:	47a0      	blx	r4
 80170f4:	b00a      	add	sp, #40	; 0x28
 80170f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80170fa:	bf00      	nop
 80170fc:	2001e268 	.word	0x2001e268
 8017100:	08033bd4 	.word	0x08033bd4
 8017104:	08034884 	.word	0x08034884
 8017108:	08033c10 	.word	0x08033c10
 801710c:	2001e1c0 	.word	0x2001e1c0

08017110 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8017110:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017114:	4d38      	ldr	r5, [pc, #224]	; (80171f8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe8>)
 8017116:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8017118:	882b      	ldrh	r3, [r5, #0]
 801711a:	4293      	cmp	r3, r2
 801711c:	b08c      	sub	sp, #48	; 0x30
 801711e:	4604      	mov	r4, r0
 8017120:	4689      	mov	r9, r1
 8017122:	d965      	bls.n	80171f0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 8017124:	4e35      	ldr	r6, [pc, #212]	; (80171fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xec>)
 8017126:	6833      	ldr	r3, [r6, #0]
 8017128:	b92b      	cbnz	r3, 8017136 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x26>
 801712a:	4b35      	ldr	r3, [pc, #212]	; (8017200 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf0>)
 801712c:	4a35      	ldr	r2, [pc, #212]	; (8017204 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 801712e:	21ae      	movs	r1, #174	; 0xae
 8017130:	4835      	ldr	r0, [pc, #212]	; (8017208 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf8>)
 8017132:	f014 ff47 	bl	802bfc4 <__assert_func>
 8017136:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801713a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801713e:	4b33      	ldr	r3, [pc, #204]	; (801720c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xfc>)
 8017140:	681b      	ldr	r3, [r3, #0]
 8017142:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017146:	2a00      	cmp	r2, #0
 8017148:	d052      	beq.n	80171f0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 801714a:	784b      	ldrb	r3, [r1, #1]
 801714c:	9207      	str	r2, [sp, #28]
 801714e:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 8017152:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8017156:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 801715a:	4b2d      	ldr	r3, [pc, #180]	; (8017210 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x100>)
 801715c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 8017160:	681b      	ldr	r3, [r3, #0]
 8017162:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 8017166:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801716a:	f890 8038 	ldrb.w	r8, [r0, #56]	; 0x38
 801716e:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 8017172:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8017176:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8017178:	f88d a020 	strb.w	sl, [sp, #32]
 801717c:	f88d 8022 	strb.w	r8, [sp, #34]	; 0x22
 8017180:	9009      	str	r0, [sp, #36]	; 0x24
 8017182:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 8017186:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 801718a:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 801718e:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8017192:	b10a      	cbz	r2, 8017198 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x88>
 8017194:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 8017196:	b907      	cbnz	r7, 801719a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x8a>
 8017198:	689f      	ldr	r7, [r3, #8]
 801719a:	f10d 0814 	add.w	r8, sp, #20
 801719e:	4621      	mov	r1, r4
 80171a0:	4640      	mov	r0, r8
 80171a2:	f003 f971 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80171a6:	6833      	ldr	r3, [r6, #0]
 80171a8:	2b00      	cmp	r3, #0
 80171aa:	d0be      	beq.n	801712a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x1a>
 80171ac:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80171ae:	882b      	ldrh	r3, [r5, #0]
 80171b0:	428b      	cmp	r3, r1
 80171b2:	d803      	bhi.n	80171bc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xac>
 80171b4:	4b17      	ldr	r3, [pc, #92]	; (8017214 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x104>)
 80171b6:	4a13      	ldr	r2, [pc, #76]	; (8017204 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 80171b8:	21af      	movs	r1, #175	; 0xaf
 80171ba:	e7b9      	b.n	8017130 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x20>
 80171bc:	4b16      	ldr	r3, [pc, #88]	; (8017218 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x108>)
 80171be:	6818      	ldr	r0, [r3, #0]
 80171c0:	f7f3 fd82 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 80171c4:	6823      	ldr	r3, [r4, #0]
 80171c6:	4605      	mov	r5, r0
 80171c8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80171ca:	4620      	mov	r0, r4
 80171cc:	4798      	blx	r3
 80171ce:	6823      	ldr	r3, [r4, #0]
 80171d0:	4606      	mov	r6, r0
 80171d2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80171d6:	4620      	mov	r0, r4
 80171d8:	4798      	blx	r3
 80171da:	e9cd 6002 	strd	r6, r0, [sp, #8]
 80171de:	ab07      	add	r3, sp, #28
 80171e0:	9300      	str	r3, [sp, #0]
 80171e2:	9501      	str	r5, [sp, #4]
 80171e4:	464b      	mov	r3, r9
 80171e6:	e898 0006 	ldmia.w	r8, {r1, r2}
 80171ea:	4638      	mov	r0, r7
 80171ec:	f7f3 fd1e 	bl	800ac2c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80171f0:	b00c      	add	sp, #48	; 0x30
 80171f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80171f6:	bf00      	nop
 80171f8:	2001e234 	.word	0x2001e234
 80171fc:	2001e230 	.word	0x2001e230
 8017200:	0802f6d0 	.word	0x0802f6d0
 8017204:	080348b7 	.word	0x080348b7
 8017208:	0802f75e 	.word	0x0802f75e
 801720c:	2001e238 	.word	0x2001e238
 8017210:	2001e1c0 	.word	0x2001e1c0
 8017214:	08032cdf 	.word	0x08032cdf
 8017218:	2001e23c 	.word	0x2001e23c

0801721c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 801721c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017220:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8017224:	b0a0      	sub	sp, #128	; 0x80
 8017226:	4604      	mov	r4, r0
 8017228:	b193      	cbz	r3, 8017250 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 801722a:	4b33      	ldr	r3, [pc, #204]	; (80172f8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 801722c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801722e:	881b      	ldrh	r3, [r3, #0]
 8017230:	428b      	cmp	r3, r1
 8017232:	d90d      	bls.n	8017250 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8017234:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8017238:	2b00      	cmp	r3, #0
 801723a:	dd09      	ble.n	8017250 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 801723c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8017240:	2b00      	cmp	r3, #0
 8017242:	dd05      	ble.n	8017250 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8017244:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8017248:	b12b      	cbz	r3, 8017256 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 801724a:	6803      	ldr	r3, [r0, #0]
 801724c:	695b      	ldr	r3, [r3, #20]
 801724e:	4798      	blx	r3
 8017250:	b020      	add	sp, #128	; 0x80
 8017252:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017256:	4b29      	ldr	r3, [pc, #164]	; (80172fc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe0>)
 8017258:	681b      	ldr	r3, [r3, #0]
 801725a:	b92b      	cbnz	r3, 8017268 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x4c>
 801725c:	4b28      	ldr	r3, [pc, #160]	; (8017300 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe4>)
 801725e:	4a29      	ldr	r2, [pc, #164]	; (8017304 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe8>)
 8017260:	4829      	ldr	r0, [pc, #164]	; (8017308 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xec>)
 8017262:	21ae      	movs	r1, #174	; 0xae
 8017264:	f014 feae 	bl	802bfc4 <__assert_func>
 8017268:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801726c:	4b27      	ldr	r3, [pc, #156]	; (801730c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf0>)
 801726e:	681b      	ldr	r3, [r3, #0]
 8017270:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8017274:	4b26      	ldr	r3, [pc, #152]	; (8017310 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf4>)
 8017276:	6818      	ldr	r0, [r3, #0]
 8017278:	f7f3 fd26 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 801727c:	4606      	mov	r6, r0
 801727e:	a807      	add	r0, sp, #28
 8017280:	f003 fdec 	bl	801ae5c <_ZN8touchgfx12TextProviderC1Ev>
 8017284:	682b      	ldr	r3, [r5, #0]
 8017286:	4628      	mov	r0, r5
 8017288:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801728a:	4798      	blx	r3
 801728c:	682b      	ldr	r3, [r5, #0]
 801728e:	4607      	mov	r7, r0
 8017290:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017292:	4628      	mov	r0, r5
 8017294:	4798      	blx	r3
 8017296:	6823      	ldr	r3, [r4, #0]
 8017298:	4605      	mov	r5, r0
 801729a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801729c:	4620      	mov	r0, r4
 801729e:	4798      	blx	r3
 80172a0:	6823      	ldr	r3, [r4, #0]
 80172a2:	4680      	mov	r8, r0
 80172a4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80172a8:	4620      	mov	r0, r4
 80172aa:	4798      	blx	r3
 80172ac:	462b      	mov	r3, r5
 80172ae:	e9cd 8000 	strd	r8, r0, [sp]
 80172b2:	463a      	mov	r2, r7
 80172b4:	a807      	add	r0, sp, #28
 80172b6:	4631      	mov	r1, r6
 80172b8:	f003 fe51 	bl	801af5e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80172bc:	a807      	add	r0, sp, #28
 80172be:	f004 fa43 	bl	801b748 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80172c2:	280a      	cmp	r0, #10
 80172c4:	d103      	bne.n	80172ce <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xb2>
 80172c6:	6823      	ldr	r3, [r4, #0]
 80172c8:	4620      	mov	r0, r4
 80172ca:	695b      	ldr	r3, [r3, #20]
 80172cc:	e7bf      	b.n	801724e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 80172ce:	a807      	add	r0, sp, #28
 80172d0:	f004 fa3a 	bl	801b748 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80172d4:	2800      	cmp	r0, #0
 80172d6:	d1f4      	bne.n	80172c2 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa6>
 80172d8:	ad04      	add	r5, sp, #16
 80172da:	4621      	mov	r1, r4
 80172dc:	4628      	mov	r0, r5
 80172de:	f7ff fab7 	bl	8016850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80172e2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80172e6:	6822      	ldr	r2, [r4, #0]
 80172e8:	ab02      	add	r3, sp, #8
 80172ea:	e883 0003 	stmia.w	r3, {r0, r1}
 80172ee:	6912      	ldr	r2, [r2, #16]
 80172f0:	4619      	mov	r1, r3
 80172f2:	4620      	mov	r0, r4
 80172f4:	4790      	blx	r2
 80172f6:	e7ab      	b.n	8017250 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 80172f8:	2001e234 	.word	0x2001e234
 80172fc:	2001e230 	.word	0x2001e230
 8017300:	0802f6d0 	.word	0x0802f6d0
 8017304:	080348b7 	.word	0x080348b7
 8017308:	0802f75e 	.word	0x0802f75e
 801730c:	2001e238 	.word	0x2001e238
 8017310:	2001e23c 	.word	0x2001e23c

08017314 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 8017314:	4770      	bx	lr

08017316 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 8017316:	b510      	push	{r4, lr}
 8017318:	2134      	movs	r1, #52	; 0x34
 801731a:	4604      	mov	r4, r0
 801731c:	f013 ff05 	bl	802b12a <_ZdlPvj>
 8017320:	4620      	mov	r0, r4
 8017322:	bd10      	pop	{r4, pc}

08017324 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8017324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017328:	4604      	mov	r4, r0
 801732a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801732c:	8962      	ldrh	r2, [r4, #10]
 801732e:	b218      	sxth	r0, r3
 8017330:	460e      	mov	r6, r1
 8017332:	005b      	lsls	r3, r3, #1
 8017334:	8921      	ldrh	r1, [r4, #8]
 8017336:	b29b      	uxth	r3, r3
 8017338:	1ac9      	subs	r1, r1, r3
 801733a:	b08e      	sub	sp, #56	; 0x38
 801733c:	b209      	sxth	r1, r1
 801733e:	1ad3      	subs	r3, r2, r3
 8017340:	b21b      	sxth	r3, r3
 8017342:	2900      	cmp	r1, #0
 8017344:	f8ad 0000 	strh.w	r0, [sp]
 8017348:	f8ad 0002 	strh.w	r0, [sp, #2]
 801734c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017350:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017354:	dd5e      	ble.n	8017414 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8017356:	2b00      	cmp	r3, #0
 8017358:	dd5c      	ble.n	8017414 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801735a:	6830      	ldr	r0, [r6, #0]
 801735c:	6871      	ldr	r1, [r6, #4]
 801735e:	ab02      	add	r3, sp, #8
 8017360:	c303      	stmia	r3!, {r0, r1}
 8017362:	4669      	mov	r1, sp
 8017364:	a802      	add	r0, sp, #8
 8017366:	f7fa febd 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 801736a:	4620      	mov	r0, r4
 801736c:	a902      	add	r1, sp, #8
 801736e:	f7ff fddf 	bl	8016f30 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8017372:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 8017374:	2800      	cmp	r0, #0
 8017376:	d05f      	beq.n	8017438 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8017378:	8963      	ldrh	r3, [r4, #10]
 801737a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801737e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017382:	1a1f      	subs	r7, r3, r0
 8017384:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8017388:	b202      	sxth	r2, r0
 801738a:	2500      	movs	r5, #0
 801738c:	b21b      	sxth	r3, r3
 801738e:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8017392:	1a09      	subs	r1, r1, r0
 8017394:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8017398:	9506      	str	r5, [sp, #24]
 801739a:	f8ad 201e 	strh.w	r2, [sp, #30]
 801739e:	f8ad 5020 	strh.w	r5, [sp, #32]
 80173a2:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 80173a6:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 80173aa:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80173ae:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80173b2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80173b6:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 80173ba:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80173be:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80173c2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80173c6:	af04      	add	r7, sp, #16
 80173c8:	ab06      	add	r3, sp, #24
 80173ca:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80173ce:	e893 0003 	ldmia.w	r3, {r0, r1}
 80173d2:	e887 0003 	stmia.w	r7, {r0, r1}
 80173d6:	4631      	mov	r1, r6
 80173d8:	4638      	mov	r0, r7
 80173da:	f7fa fe83 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 80173de:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80173e2:	2b00      	cmp	r3, #0
 80173e4:	dd12      	ble.n	801740c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80173e6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80173ea:	2b00      	cmp	r3, #0
 80173ec:	dd0e      	ble.n	801740c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80173ee:	6823      	ldr	r3, [r4, #0]
 80173f0:	4639      	mov	r1, r7
 80173f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80173f4:	4620      	mov	r0, r4
 80173f6:	4798      	blx	r3
 80173f8:	f7fb f942 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 80173fc:	6803      	ldr	r3, [r0, #0]
 80173fe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8017400:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8017404:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8017408:	4639      	mov	r1, r7
 801740a:	47c0      	blx	r8
 801740c:	3501      	adds	r5, #1
 801740e:	2d04      	cmp	r5, #4
 8017410:	d1da      	bne.n	80173c8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8017412:	e011      	b.n	8017438 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8017414:	6830      	ldr	r0, [r6, #0]
 8017416:	6871      	ldr	r1, [r6, #4]
 8017418:	ab06      	add	r3, sp, #24
 801741a:	c303      	stmia	r3!, {r0, r1}
 801741c:	6823      	ldr	r3, [r4, #0]
 801741e:	a906      	add	r1, sp, #24
 8017420:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017422:	4620      	mov	r0, r4
 8017424:	4798      	blx	r3
 8017426:	f7fb f92b 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 801742a:	6803      	ldr	r3, [r0, #0]
 801742c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801742e:	6a1d      	ldr	r5, [r3, #32]
 8017430:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8017434:	a906      	add	r1, sp, #24
 8017436:	47a8      	blx	r5
 8017438:	b00e      	add	sp, #56	; 0x38
 801743a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801743e <_ZN8touchgfx14ButtonWithIconD1Ev>:
 801743e:	4770      	bx	lr

08017440 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8017440:	b510      	push	{r4, lr}
 8017442:	213c      	movs	r1, #60	; 0x3c
 8017444:	4604      	mov	r4, r0
 8017446:	f013 fe70 	bl	802b12a <_ZdlPvj>
 801744a:	4620      	mov	r0, r4
 801744c:	bd10      	pop	{r4, pc}

0801744e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 801744e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017452:	461c      	mov	r4, r3
 8017454:	4606      	mov	r6, r0
 8017456:	9f06      	ldr	r7, [sp, #24]
 8017458:	f7ff fd9a 	bl	8016f90 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 801745c:	8823      	ldrh	r3, [r4, #0]
 801745e:	86b3      	strh	r3, [r6, #52]	; 0x34
 8017460:	883b      	ldrh	r3, [r7, #0]
 8017462:	86f3      	strh	r3, [r6, #54]	; 0x36
 8017464:	4638      	mov	r0, r7
 8017466:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 801746a:	f005 f927 	bl	801c6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801746e:	f04f 0802 	mov.w	r8, #2
 8017472:	fb95 f5f8 	sdiv	r5, r5, r8
 8017476:	b2ad      	uxth	r5, r5
 8017478:	eba5 0050 	sub.w	r0, r5, r0, lsr #1
 801747c:	8730      	strh	r0, [r6, #56]	; 0x38
 801747e:	4638      	mov	r0, r7
 8017480:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8017484:	fb94 f4f8 	sdiv	r4, r4, r8
 8017488:	f005 f95c 	bl	801c744 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801748c:	b2a4      	uxth	r4, r4
 801748e:	eba4 0050 	sub.w	r0, r4, r0, lsr #1
 8017492:	8770      	strh	r0, [r6, #58]	; 0x3a
 8017494:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017498 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8017498:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801749c:	4604      	mov	r4, r0
 801749e:	b08c      	sub	sp, #48	; 0x30
 80174a0:	460d      	mov	r5, r1
 80174a2:	f7ff fda7 	bl	8016ff4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80174a6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80174aa:	b33b      	cbz	r3, 80174fc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x64>
 80174ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80174ae:	f8ad 3014 	strh.w	r3, [sp, #20]
 80174b2:	a805      	add	r0, sp, #20
 80174b4:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 80174b8:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 80174bc:	f005 f8fe 	bl	801c6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80174c0:	4606      	mov	r6, r0
 80174c2:	a805      	add	r0, sp, #20
 80174c4:	f005 f93e 	bl	801c744 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80174c8:	6869      	ldr	r1, [r5, #4]
 80174ca:	f8ad 001e 	strh.w	r0, [sp, #30]
 80174ce:	6828      	ldr	r0, [r5, #0]
 80174d0:	f8ad 8018 	strh.w	r8, [sp, #24]
 80174d4:	ab08      	add	r3, sp, #32
 80174d6:	ad08      	add	r5, sp, #32
 80174d8:	c303      	stmia	r3!, {r0, r1}
 80174da:	a906      	add	r1, sp, #24
 80174dc:	4628      	mov	r0, r5
 80174de:	f8ad 701a 	strh.w	r7, [sp, #26]
 80174e2:	f8ad 601c 	strh.w	r6, [sp, #28]
 80174e6:	f7fa fdfd 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 80174ea:	4b25      	ldr	r3, [pc, #148]	; (8017580 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe8>)
 80174ec:	681b      	ldr	r3, [r3, #0]
 80174ee:	b93b      	cbnz	r3, 8017500 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x68>
 80174f0:	4b24      	ldr	r3, [pc, #144]	; (8017584 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xec>)
 80174f2:	4a25      	ldr	r2, [pc, #148]	; (8017588 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf0>)
 80174f4:	4825      	ldr	r0, [pc, #148]	; (801758c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf4>)
 80174f6:	2187      	movs	r1, #135	; 0x87
 80174f8:	f014 fd64 	bl	802bfc4 <__assert_func>
 80174fc:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80174fe:	e7d6      	b.n	80174ae <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x16>
 8017500:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017504:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8017508:	429a      	cmp	r2, r3
 801750a:	d035      	beq.n	8017578 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 801750c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8017510:	2b00      	cmp	r3, #0
 8017512:	dd31      	ble.n	8017578 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 8017514:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8017518:	2b00      	cmp	r3, #0
 801751a:	dd2d      	ble.n	8017578 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 801751c:	2300      	movs	r3, #0
 801751e:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8017522:	6823      	ldr	r3, [r4, #0]
 8017524:	a90a      	add	r1, sp, #40	; 0x28
 8017526:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017528:	4620      	mov	r0, r4
 801752a:	4798      	blx	r3
 801752c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017530:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8017532:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8017536:	1a9b      	subs	r3, r3, r2
 8017538:	f8ad 3020 	strh.w	r3, [sp, #32]
 801753c:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 801753e:	1ac9      	subs	r1, r1, r3
 8017540:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8017544:	4912      	ldr	r1, [pc, #72]	; (8017590 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf8>)
 8017546:	6809      	ldr	r1, [r1, #0]
 8017548:	f891 0076 	ldrb.w	r0, [r1, #118]	; 0x76
 801754c:	b108      	cbz	r0, 8017552 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xba>
 801754e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8017550:	b900      	cbnz	r0, 8017554 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xbc>
 8017552:	6888      	ldr	r0, [r1, #8]
 8017554:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8017558:	440b      	add	r3, r1
 801755a:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801755e:	2601      	movs	r6, #1
 8017560:	440a      	add	r2, r1
 8017562:	6801      	ldr	r1, [r0, #0]
 8017564:	9602      	str	r6, [sp, #8]
 8017566:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801756a:	e9cd 5400 	strd	r5, r4, [sp]
 801756e:	b21b      	sxth	r3, r3
 8017570:	688c      	ldr	r4, [r1, #8]
 8017572:	b212      	sxth	r2, r2
 8017574:	a905      	add	r1, sp, #20
 8017576:	47a0      	blx	r4
 8017578:	b00c      	add	sp, #48	; 0x30
 801757a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801757e:	bf00      	nop
 8017580:	2001e268 	.word	0x2001e268
 8017584:	08033bd4 	.word	0x08033bd4
 8017588:	080349c8 	.word	0x080349c8
 801758c:	08033c10 	.word	0x08033c10
 8017590:	2001e1c0 	.word	0x2001e1c0

08017594 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8017594:	b510      	push	{r4, lr}
 8017596:	2101      	movs	r1, #1
 8017598:	2200      	movs	r2, #0
 801759a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801759e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80175a2:	4c0e      	ldr	r4, [pc, #56]	; (80175dc <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80175a4:	8082      	strh	r2, [r0, #4]
 80175a6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80175aa:	80c2      	strh	r2, [r0, #6]
 80175ac:	8102      	strh	r2, [r0, #8]
 80175ae:	8142      	strh	r2, [r0, #10]
 80175b0:	8182      	strh	r2, [r0, #12]
 80175b2:	81c2      	strh	r2, [r0, #14]
 80175b4:	8202      	strh	r2, [r0, #16]
 80175b6:	8242      	strh	r2, [r0, #18]
 80175b8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80175bc:	61c2      	str	r2, [r0, #28]
 80175be:	8402      	strh	r2, [r0, #32]
 80175c0:	8442      	strh	r2, [r0, #34]	; 0x22
 80175c2:	6282      	str	r2, [r0, #40]	; 0x28
 80175c4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80175c8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80175ca:	8601      	strh	r1, [r0, #48]	; 0x30
 80175cc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80175d0:	6004      	str	r4, [r0, #0]
 80175d2:	8681      	strh	r1, [r0, #52]	; 0x34
 80175d4:	86c1      	strh	r1, [r0, #54]	; 0x36
 80175d6:	8702      	strh	r2, [r0, #56]	; 0x38
 80175d8:	8742      	strh	r2, [r0, #58]	; 0x3a
 80175da:	bd10      	pop	{r4, pc}
 80175dc:	08034958 	.word	0x08034958

080175e0 <_ZN8touchgfx5ImageD1Ev>:
 80175e0:	4770      	bx	lr

080175e2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80175e2:	b570      	push	{r4, r5, r6, lr}
 80175e4:	880b      	ldrh	r3, [r1, #0]
 80175e6:	84c3      	strh	r3, [r0, #38]	; 0x26
 80175e8:	4604      	mov	r4, r0
 80175ea:	4608      	mov	r0, r1
 80175ec:	460d      	mov	r5, r1
 80175ee:	f005 f865 	bl	801c6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80175f2:	4606      	mov	r6, r0
 80175f4:	4628      	mov	r0, r5
 80175f6:	f005 f8a5 	bl	801c744 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80175fa:	6823      	ldr	r3, [r4, #0]
 80175fc:	4605      	mov	r5, r0
 80175fe:	b231      	sxth	r1, r6
 8017600:	4620      	mov	r0, r4
 8017602:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017604:	4798      	blx	r3
 8017606:	6823      	ldr	r3, [r4, #0]
 8017608:	b229      	sxth	r1, r5
 801760a:	4620      	mov	r0, r4
 801760c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801760e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017612:	4718      	bx	r3

08017614 <_ZN8touchgfx5ImageD0Ev>:
 8017614:	b510      	push	{r4, lr}
 8017616:	212c      	movs	r1, #44	; 0x2c
 8017618:	4604      	mov	r4, r0
 801761a:	f013 fd86 	bl	802b12a <_ZdlPvj>
 801761e:	4620      	mov	r0, r4
 8017620:	bd10      	pop	{r4, pc}

08017622 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8017622:	b510      	push	{r4, lr}
 8017624:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8017628:	2bff      	cmp	r3, #255	; 0xff
 801762a:	4604      	mov	r4, r0
 801762c:	d006      	beq.n	801763c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801762e:	2300      	movs	r3, #0
 8017630:	8003      	strh	r3, [r0, #0]
 8017632:	8043      	strh	r3, [r0, #2]
 8017634:	8083      	strh	r3, [r0, #4]
 8017636:	80c3      	strh	r3, [r0, #6]
 8017638:	4620      	mov	r0, r4
 801763a:	bd10      	pop	{r4, pc}
 801763c:	3126      	adds	r1, #38	; 0x26
 801763e:	f005 f8c5 	bl	801c7cc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017642:	e7f9      	b.n	8017638 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08017644 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8017644:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8017648:	b12a      	cbz	r2, 8017656 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801764a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801764e:	b112      	cbz	r2, 8017656 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8017650:	6803      	ldr	r3, [r0, #0]
 8017652:	695b      	ldr	r3, [r3, #20]
 8017654:	4718      	bx	r3
 8017656:	4770      	bx	lr

08017658 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8017658:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801765c:	4604      	mov	r4, r0
 801765e:	b088      	sub	sp, #32
 8017660:	f854 3b26 	ldr.w	r3, [r4], #38
 8017664:	2500      	movs	r5, #0
 8017666:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017668:	460f      	mov	r7, r1
 801766a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801766e:	a904      	add	r1, sp, #16
 8017670:	4606      	mov	r6, r0
 8017672:	4798      	blx	r3
 8017674:	4620      	mov	r0, r4
 8017676:	f005 f821 	bl	801c6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801767a:	4680      	mov	r8, r0
 801767c:	4620      	mov	r0, r4
 801767e:	f005 f861 	bl	801c744 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017682:	9506      	str	r5, [sp, #24]
 8017684:	ad06      	add	r5, sp, #24
 8017686:	f8ad 001e 	strh.w	r0, [sp, #30]
 801768a:	4639      	mov	r1, r7
 801768c:	4628      	mov	r0, r5
 801768e:	f8ad 801c 	strh.w	r8, [sp, #28]
 8017692:	f7fa fd27 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 8017696:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801769a:	2b00      	cmp	r3, #0
 801769c:	dd19      	ble.n	80176d2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801769e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80176a2:	2b00      	cmp	r3, #0
 80176a4:	dd15      	ble.n	80176d2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80176a6:	4b0c      	ldr	r3, [pc, #48]	; (80176d8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80176a8:	681b      	ldr	r3, [r3, #0]
 80176aa:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80176ae:	b10a      	cbz	r2, 80176b4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80176b0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80176b2:	b900      	cbnz	r0, 80176b6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80176b4:	6898      	ldr	r0, [r3, #8]
 80176b6:	6801      	ldr	r1, [r0, #0]
 80176b8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80176bc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80176c0:	2701      	movs	r7, #1
 80176c2:	9702      	str	r7, [sp, #8]
 80176c4:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80176c8:	e9cd 5600 	strd	r5, r6, [sp]
 80176cc:	688d      	ldr	r5, [r1, #8]
 80176ce:	4621      	mov	r1, r4
 80176d0:	47a8      	blx	r5
 80176d2:	b008      	add	sp, #32
 80176d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80176d8:	2001e1c0 	.word	0x2001e1c0

080176dc <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80176dc:	4770      	bx	lr

080176de <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80176de:	b510      	push	{r4, lr}
 80176e0:	2148      	movs	r1, #72	; 0x48
 80176e2:	4604      	mov	r4, r0
 80176e4:	f013 fd21 	bl	802b12a <_ZdlPvj>
 80176e8:	4620      	mov	r0, r4
 80176ea:	bd10      	pop	{r4, pc}

080176ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80176ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80176f0:	4604      	mov	r4, r0
 80176f2:	4d57      	ldr	r5, [pc, #348]	; (8017850 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80176f4:	b08c      	sub	sp, #48	; 0x30
 80176f6:	4688      	mov	r8, r1
 80176f8:	f7ff fc7c 	bl	8016ff4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80176fc:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80176fe:	882b      	ldrh	r3, [r5, #0]
 8017700:	4293      	cmp	r3, r2
 8017702:	f240 80a1 	bls.w	8017848 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 8017706:	4e53      	ldr	r6, [pc, #332]	; (8017854 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8017708:	6833      	ldr	r3, [r6, #0]
 801770a:	b92b      	cbnz	r3, 8017718 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x2c>
 801770c:	4b52      	ldr	r3, [pc, #328]	; (8017858 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801770e:	4a53      	ldr	r2, [pc, #332]	; (801785c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8017710:	21ae      	movs	r1, #174	; 0xae
 8017712:	4853      	ldr	r0, [pc, #332]	; (8017860 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8017714:	f014 fc56 	bl	802bfc4 <__assert_func>
 8017718:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801771c:	4b51      	ldr	r3, [pc, #324]	; (8017864 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x178>)
 801771e:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
 8017722:	681b      	ldr	r3, [r3, #0]
 8017724:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8017728:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801772c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8017730:	2300      	movs	r3, #0
 8017732:	f1be 0f01 	cmp.w	lr, #1
 8017736:	9303      	str	r3, [sp, #12]
 8017738:	b208      	sxth	r0, r1
 801773a:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801773e:	f04f 0c02 	mov.w	ip, #2
 8017742:	d044      	beq.n	80177ce <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xe2>
 8017744:	f1be 0f03 	cmp.w	lr, #3
 8017748:	d041      	beq.n	80177ce <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xe2>
 801774a:	1a52      	subs	r2, r2, r1
 801774c:	f8ad 3010 	strh.w	r3, [sp, #16]
 8017750:	fb92 f2fc 	sdiv	r2, r2, ip
 8017754:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017758:	f8ad 200e 	strh.w	r2, [sp, #14]
 801775c:	f10d 090c 	add.w	r9, sp, #12
 8017760:	e899 0003 	ldmia.w	r9, {r0, r1}
 8017764:	f10d 0a14 	add.w	sl, sp, #20
 8017768:	e88a 0003 	stmia.w	sl, {r0, r1}
 801776c:	4641      	mov	r1, r8
 801776e:	4650      	mov	r0, sl
 8017770:	f7fa fcb8 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 8017774:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017778:	2b00      	cmp	r3, #0
 801777a:	dd65      	ble.n	8017848 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 801777c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8017780:	2b00      	cmp	r3, #0
 8017782:	dd61      	ble.n	8017848 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 8017784:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8017788:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801778c:	1a9b      	subs	r3, r3, r2
 801778e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017792:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8017796:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 801779a:	1a9b      	subs	r3, r3, r2
 801779c:	f8ad 3016 	strh.w	r3, [sp, #22]
 80177a0:	6823      	ldr	r3, [r4, #0]
 80177a2:	4649      	mov	r1, r9
 80177a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80177a6:	4620      	mov	r0, r4
 80177a8:	4798      	blx	r3
 80177aa:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80177ae:	b1c3      	cbz	r3, 80177e2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xf6>
 80177b0:	f104 0240 	add.w	r2, r4, #64	; 0x40
 80177b4:	6833      	ldr	r3, [r6, #0]
 80177b6:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80177ba:	2b00      	cmp	r3, #0
 80177bc:	d0a6      	beq.n	801770c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x20>
 80177be:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80177c0:	882d      	ldrh	r5, [r5, #0]
 80177c2:	428d      	cmp	r5, r1
 80177c4:	d810      	bhi.n	80177e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xfc>
 80177c6:	4b28      	ldr	r3, [pc, #160]	; (8017868 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x17c>)
 80177c8:	4a24      	ldr	r2, [pc, #144]	; (801785c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80177ca:	21af      	movs	r1, #175	; 0xaf
 80177cc:	e7a1      	b.n	8017712 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x26>
 80177ce:	1a5b      	subs	r3, r3, r1
 80177d0:	f8ad 0010 	strh.w	r0, [sp, #16]
 80177d4:	fb93 f3fc 	sdiv	r3, r3, ip
 80177d8:	f8ad 2012 	strh.w	r2, [sp, #18]
 80177dc:	f8ad 300c 	strh.w	r3, [sp, #12]
 80177e0:	e7bc      	b.n	801775c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x70>
 80177e2:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80177e6:	e7e5      	b.n	80177b4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xc8>
 80177e8:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80177ec:	6812      	ldr	r2, [r2, #0]
 80177ee:	785b      	ldrb	r3, [r3, #1]
 80177f0:	9209      	str	r2, [sp, #36]	; 0x24
 80177f2:	f3c3 0501 	ubfx	r5, r3, #0, #2
 80177f6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80177fa:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 80177fe:	2300      	movs	r3, #0
 8017800:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8017804:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8017808:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801780c:	4b17      	ldr	r3, [pc, #92]	; (801786c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x180>)
 801780e:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8017812:	681b      	ldr	r3, [r3, #0]
 8017814:	9707      	str	r7, [sp, #28]
 8017816:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801781a:	f88d 5020 	strb.w	r5, [sp, #32]
 801781e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8017822:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8017826:	b10a      	cbz	r2, 801782c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 8017828:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 801782a:	b904      	cbnz	r4, 801782e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x142>
 801782c:	689c      	ldr	r4, [r3, #8]
 801782e:	4b10      	ldr	r3, [pc, #64]	; (8017870 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x184>)
 8017830:	6818      	ldr	r0, [r3, #0]
 8017832:	f7f3 fa49 	bl	800acc8 <_ZNK8touchgfx5Texts7getTextEt>
 8017836:	ab07      	add	r3, sp, #28
 8017838:	9001      	str	r0, [sp, #4]
 801783a:	9300      	str	r3, [sp, #0]
 801783c:	e899 0006 	ldmia.w	r9, {r1, r2}
 8017840:	4653      	mov	r3, sl
 8017842:	4620      	mov	r0, r4
 8017844:	f7f3 f9f2 	bl	800ac2c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8017848:	b00c      	add	sp, #48	; 0x30
 801784a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801784e:	bf00      	nop
 8017850:	2001e234 	.word	0x2001e234
 8017854:	2001e230 	.word	0x2001e230
 8017858:	0802f6d0 	.word	0x0802f6d0
 801785c:	08034adc 	.word	0x08034adc
 8017860:	0802f75e 	.word	0x0802f75e
 8017864:	2001e238 	.word	0x2001e238
 8017868:	08032cdf 	.word	0x08032cdf
 801786c:	2001e1c0 	.word	0x2001e1c0
 8017870:	2001e23c 	.word	0x2001e23c

08017874 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8017874:	b510      	push	{r4, lr}
 8017876:	2101      	movs	r1, #1
 8017878:	4c13      	ldr	r4, [pc, #76]	; (80178c8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 801787a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801787e:	2200      	movs	r2, #0
 8017880:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8017884:	6004      	str	r4, [r0, #0]
 8017886:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801788a:	4c10      	ldr	r4, [pc, #64]	; (80178cc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 801788c:	8082      	strh	r2, [r0, #4]
 801788e:	80c2      	strh	r2, [r0, #6]
 8017890:	8102      	strh	r2, [r0, #8]
 8017892:	8142      	strh	r2, [r0, #10]
 8017894:	8182      	strh	r2, [r0, #12]
 8017896:	81c2      	strh	r2, [r0, #14]
 8017898:	8202      	strh	r2, [r0, #16]
 801789a:	8242      	strh	r2, [r0, #18]
 801789c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80178a0:	61c2      	str	r2, [r0, #28]
 80178a2:	8402      	strh	r2, [r0, #32]
 80178a4:	8442      	strh	r2, [r0, #34]	; 0x22
 80178a6:	6282      	str	r2, [r0, #40]	; 0x28
 80178a8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80178ac:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80178ae:	8601      	strh	r1, [r0, #48]	; 0x30
 80178b0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80178b4:	6344      	str	r4, [r0, #52]	; 0x34
 80178b6:	8701      	strh	r1, [r0, #56]	; 0x38
 80178b8:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80178bc:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80178c0:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 80178c4:	bd10      	pop	{r4, pc}
 80178c6:	bf00      	nop
 80178c8:	08034a70 	.word	0x08034a70
 80178cc:	0802f844 	.word	0x0802f844

080178d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80178d0:	4b02      	ldr	r3, [pc, #8]	; (80178dc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80178d2:	6018      	str	r0, [r3, #0]
 80178d4:	4b02      	ldr	r3, [pc, #8]	; (80178e0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 80178d6:	6019      	str	r1, [r3, #0]
 80178d8:	4770      	bx	lr
 80178da:	bf00      	nop
 80178dc:	2001e1c8 	.word	0x2001e1c8
 80178e0:	2001e1dc 	.word	0x2001e1dc

080178e4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>:
 80178e4:	b538      	push	{r3, r4, r5, lr}
 80178e6:	4c2b      	ldr	r4, [pc, #172]	; (8017994 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb0>)
 80178e8:	4b2b      	ldr	r3, [pc, #172]	; (8017998 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb4>)
 80178ea:	6821      	ldr	r1, [r4, #0]
 80178ec:	681a      	ldr	r2, [r3, #0]
 80178ee:	4d2b      	ldr	r5, [pc, #172]	; (801799c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb8>)
 80178f0:	4281      	cmp	r1, r0
 80178f2:	492b      	ldr	r1, [pc, #172]	; (80179a0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xbc>)
 80178f4:	d108      	bne.n	8017908 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 80178f6:	682b      	ldr	r3, [r5, #0]
 80178f8:	4293      	cmp	r3, r2
 80178fa:	d105      	bne.n	8017908 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 80178fc:	6808      	ldr	r0, [r1, #0]
 80178fe:	280f      	cmp	r0, #15
 8017900:	bf94      	ite	ls
 8017902:	2000      	movls	r0, #0
 8017904:	2001      	movhi	r0, #1
 8017906:	bd38      	pop	{r3, r4, r5, pc}
 8017908:	4b26      	ldr	r3, [pc, #152]	; (80179a4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc0>)
 801790a:	6020      	str	r0, [r4, #0]
 801790c:	681b      	ldr	r3, [r3, #0]
 801790e:	602a      	str	r2, [r5, #0]
 8017910:	4298      	cmp	r0, r3
 8017912:	d905      	bls.n	8017920 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x3c>
 8017914:	4b24      	ldr	r3, [pc, #144]	; (80179a8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 8017916:	4a25      	ldr	r2, [pc, #148]	; (80179ac <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 8017918:	2135      	movs	r1, #53	; 0x35
 801791a:	4825      	ldr	r0, [pc, #148]	; (80179b0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xcc>)
 801791c:	f014 fb52 	bl	802bfc4 <__assert_func>
 8017920:	f010 0403 	ands.w	r4, r0, #3
 8017924:	bf1f      	itttt	ne
 8017926:	f1c4 0504 	rsbne	r5, r4, #4
 801792a:	3b04      	subne	r3, #4
 801792c:	1952      	addne	r2, r2, r5
 801792e:	191b      	addne	r3, r3, r4
 8017930:	4402      	add	r2, r0
 8017932:	1a1b      	subs	r3, r3, r0
 8017934:	3001      	adds	r0, #1
 8017936:	f020 0401 	bic.w	r4, r0, #1
 801793a:	4d1e      	ldr	r5, [pc, #120]	; (80179b4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd0>)
 801793c:	42a3      	cmp	r3, r4
 801793e:	602a      	str	r2, [r5, #0]
 8017940:	d203      	bcs.n	801794a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x66>
 8017942:	4b19      	ldr	r3, [pc, #100]	; (80179a8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 8017944:	4a19      	ldr	r2, [pc, #100]	; (80179ac <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 8017946:	2148      	movs	r1, #72	; 0x48
 8017948:	e7e7      	b.n	801791a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 801794a:	f010 0002 	ands.w	r0, r0, #2
 801794e:	bf1f      	itttt	ne
 8017950:	f1c0 0504 	rsbne	r5, r0, #4
 8017954:	1952      	addne	r2, r2, r5
 8017956:	1f05      	subne	r5, r0, #4
 8017958:	195b      	addne	r3, r3, r5
 801795a:	1b1b      	subs	r3, r3, r4
 801795c:	4d16      	ldr	r5, [pc, #88]	; (80179b8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd4>)
 801795e:	4422      	add	r2, r4
 8017960:	429c      	cmp	r4, r3
 8017962:	602a      	str	r2, [r5, #0]
 8017964:	d903      	bls.n	801796e <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x8a>
 8017966:	4b10      	ldr	r3, [pc, #64]	; (80179a8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 8017968:	4a10      	ldr	r2, [pc, #64]	; (80179ac <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 801796a:	215b      	movs	r1, #91	; 0x5b
 801796c:	e7d5      	b.n	801791a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 801796e:	b120      	cbz	r0, 801797a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x96>
 8017970:	f1c0 0504 	rsb	r5, r0, #4
 8017974:	3804      	subs	r0, #4
 8017976:	442a      	add	r2, r5
 8017978:	4403      	add	r3, r0
 801797a:	1b1b      	subs	r3, r3, r4
 801797c:	480f      	ldr	r0, [pc, #60]	; (80179bc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd8>)
 801797e:	600b      	str	r3, [r1, #0]
 8017980:	4422      	add	r2, r4
 8017982:	2b0f      	cmp	r3, #15
 8017984:	6002      	str	r2, [r0, #0]
 8017986:	d803      	bhi.n	8017990 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xac>
 8017988:	4b0d      	ldr	r3, [pc, #52]	; (80179c0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xdc>)
 801798a:	4a08      	ldr	r2, [pc, #32]	; (80179ac <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 801798c:	216e      	movs	r1, #110	; 0x6e
 801798e:	e7c4      	b.n	801791a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 8017990:	2001      	movs	r0, #1
 8017992:	e7b8      	b.n	8017906 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x22>
 8017994:	2001e1d0 	.word	0x2001e1d0
 8017998:	2001e1c8 	.word	0x2001e1c8
 801799c:	2001e1d8 	.word	0x2001e1d8
 80179a0:	2001e1e0 	.word	0x2001e1e0
 80179a4:	2001e1dc 	.word	0x2001e1dc
 80179a8:	08034b0a 	.word	0x08034b0a
 80179ac:	08034bd2 	.word	0x08034bd2
 80179b0:	08034b43 	.word	0x08034b43
 80179b4:	2001e1e4 	.word	0x2001e1e4
 80179b8:	2001e1d4 	.word	0x2001e1d4
 80179bc:	2001e1cc 	.word	0x2001e1cc
 80179c0:	08034b8d 	.word	0x08034b8d

080179c4 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>:
 80179c4:	4b04      	ldr	r3, [pc, #16]	; (80179d8 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x14>)
 80179c6:	6818      	ldr	r0, [r3, #0]
 80179c8:	b120      	cbz	r0, 80179d4 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x10>
 80179ca:	4b04      	ldr	r3, [pc, #16]	; (80179dc <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x18>)
 80179cc:	6818      	ldr	r0, [r3, #0]
 80179ce:	3000      	adds	r0, #0
 80179d0:	bf18      	it	ne
 80179d2:	2001      	movne	r0, #1
 80179d4:	4770      	bx	lr
 80179d6:	bf00      	nop
 80179d8:	2001e1c8 	.word	0x2001e1c8
 80179dc:	2001e1dc 	.word	0x2001e1dc

080179e0 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>:
 80179e0:	4b01      	ldr	r3, [pc, #4]	; (80179e8 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv+0x8>)
 80179e2:	6818      	ldr	r0, [r3, #0]
 80179e4:	4770      	bx	lr
 80179e6:	bf00      	nop
 80179e8:	2001e1d0 	.word	0x2001e1d0

080179ec <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>:
 80179ec:	4b01      	ldr	r3, [pc, #4]	; (80179f4 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv+0x8>)
 80179ee:	6818      	ldr	r0, [r3, #0]
 80179f0:	4770      	bx	lr
 80179f2:	bf00      	nop
 80179f4:	2001e1d8 	.word	0x2001e1d8

080179f8 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>:
 80179f8:	4b01      	ldr	r3, [pc, #4]	; (8017a00 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv+0x8>)
 80179fa:	6818      	ldr	r0, [r3, #0]
 80179fc:	4770      	bx	lr
 80179fe:	bf00      	nop
 8017a00:	2001e1e4 	.word	0x2001e1e4

08017a04 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>:
 8017a04:	4b01      	ldr	r3, [pc, #4]	; (8017a0c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv+0x8>)
 8017a06:	6818      	ldr	r0, [r3, #0]
 8017a08:	4770      	bx	lr
 8017a0a:	bf00      	nop
 8017a0c:	2001e1d4 	.word	0x2001e1d4

08017a10 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8017a10:	4b01      	ldr	r3, [pc, #4]	; (8017a18 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8017a12:	6818      	ldr	r0, [r3, #0]
 8017a14:	4770      	bx	lr
 8017a16:	bf00      	nop
 8017a18:	2001e1cc 	.word	0x2001e1cc

08017a1c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8017a1c:	4b01      	ldr	r3, [pc, #4]	; (8017a24 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8017a1e:	6818      	ldr	r0, [r3, #0]
 8017a20:	4770      	bx	lr
 8017a22:	bf00      	nop
 8017a24:	2001e1e0 	.word	0x2001e1e0

08017a28 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8017a28:	b510      	push	{r4, lr}
 8017a2a:	6803      	ldr	r3, [r0, #0]
 8017a2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017a2e:	460c      	mov	r4, r1
 8017a30:	4798      	blx	r3
 8017a32:	1b03      	subs	r3, r0, r4
 8017a34:	4258      	negs	r0, r3
 8017a36:	4158      	adcs	r0, r3
 8017a38:	bd10      	pop	{r4, pc}
	...

08017a3c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8017a3c:	4b01      	ldr	r3, [pc, #4]	; (8017a44 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8017a3e:	6019      	str	r1, [r3, #0]
 8017a40:	4770      	bx	lr
 8017a42:	bf00      	nop
 8017a44:	2001e1e8 	.word	0x2001e1e8

08017a48 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8017a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a4c:	4696      	mov	lr, r2
 8017a4e:	4605      	mov	r5, r0
 8017a50:	4614      	mov	r4, r2
 8017a52:	460e      	mov	r6, r1
 8017a54:	461f      	mov	r7, r3
 8017a56:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017a5a:	b097      	sub	sp, #92	; 0x5c
 8017a5c:	f10d 0c1c 	add.w	ip, sp, #28
 8017a60:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017a64:	f8de 3000 	ldr.w	r3, [lr]
 8017a68:	f8cc 3000 	str.w	r3, [ip]
 8017a6c:	f104 0e14 	add.w	lr, r4, #20
 8017a70:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017a74:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017a78:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017a7c:	f8de 3000 	ldr.w	r3, [lr]
 8017a80:	f8cc 3000 	str.w	r3, [ip]
 8017a84:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017a88:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017a8c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017a90:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017a94:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8017a98:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8017a9c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8017aa0:	f8de 3000 	ldr.w	r3, [lr]
 8017aa4:	f8cc 3000 	str.w	r3, [ip]
 8017aa8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8017aaa:	682b      	ldr	r3, [r5, #0]
 8017aac:	9201      	str	r2, [sp, #4]
 8017aae:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8017ab2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017ab4:	9200      	str	r2, [sp, #0]
 8017ab6:	f8cd 8008 	str.w	r8, [sp, #8]
 8017aba:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8017abe:	aa07      	add	r2, sp, #28
 8017ac0:	463b      	mov	r3, r7
 8017ac2:	4631      	mov	r1, r6
 8017ac4:	4628      	mov	r0, r5
 8017ac6:	47d8      	blx	fp
 8017ac8:	46a6      	mov	lr, r4
 8017aca:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017ace:	f10d 0c1c 	add.w	ip, sp, #28
 8017ad2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017ad6:	f8de 3000 	ldr.w	r3, [lr]
 8017ada:	f8cc 3000 	str.w	r3, [ip]
 8017ade:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017ae2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017ae6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017aea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017aee:	343c      	adds	r4, #60	; 0x3c
 8017af0:	f8de 3000 	ldr.w	r3, [lr]
 8017af4:	f8cc 3000 	str.w	r3, [ip]
 8017af8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017afa:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017afe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017b02:	6823      	ldr	r3, [r4, #0]
 8017b04:	f8cc 3000 	str.w	r3, [ip]
 8017b08:	682b      	ldr	r3, [r5, #0]
 8017b0a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8017b0e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8017b10:	9201      	str	r2, [sp, #4]
 8017b12:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017b14:	9200      	str	r2, [sp, #0]
 8017b16:	f8cd 8008 	str.w	r8, [sp, #8]
 8017b1a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8017b1c:	aa07      	add	r2, sp, #28
 8017b1e:	463b      	mov	r3, r7
 8017b20:	4631      	mov	r1, r6
 8017b22:	4628      	mov	r0, r5
 8017b24:	47a0      	blx	r4
 8017b26:	b017      	add	sp, #92	; 0x5c
 8017b28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017b2c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8017b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b30:	b08d      	sub	sp, #52	; 0x34
 8017b32:	4688      	mov	r8, r1
 8017b34:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017b36:	f8d3 c000 	ldr.w	ip, [r3]
 8017b3a:	680f      	ldr	r7, [r1, #0]
 8017b3c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8017b40:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8017b44:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8017b48:	edd3 6a07 	vldr	s13, [r3, #28]
 8017b4c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8017b4e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8017b52:	f9b1 9000 	ldrsh.w	r9, [r1]
 8017b56:	f9ba 1000 	ldrsh.w	r1, [sl]
 8017b5a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8017b5e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8017b62:	eba7 070c 	sub.w	r7, r7, ip
 8017b66:	42bc      	cmp	r4, r7
 8017b68:	bfa8      	it	ge
 8017b6a:	463c      	movge	r4, r7
 8017b6c:	ee07 4a90 	vmov	s15, r4
 8017b70:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8017b74:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8017b78:	ee25 4a04 	vmul.f32	s8, s10, s8
 8017b7c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8017b80:	ee25 5a27 	vmul.f32	s10, s10, s15
 8017b84:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8017b88:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017b8c:	eb09 0e0c 	add.w	lr, r9, ip
 8017b90:	4571      	cmp	r1, lr
 8017b92:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8017b96:	ee32 1a05 	vadd.f32	s2, s4, s10
 8017b9a:	ee36 0a84 	vadd.f32	s0, s13, s8
 8017b9e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017ba2:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017ba6:	f340 808d 	ble.w	8017cc4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8017baa:	eba1 060e 	sub.w	r6, r1, lr
 8017bae:	fb96 f5f4 	sdiv	r5, r6, r4
 8017bb2:	ee07 5a10 	vmov	s14, r5
 8017bb6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017bba:	2d00      	cmp	r5, #0
 8017bbc:	fb04 6615 	mls	r6, r4, r5, r6
 8017bc0:	eea7 0a04 	vfma.f32	s0, s14, s8
 8017bc4:	eee7 0a24 	vfma.f32	s1, s14, s9
 8017bc8:	eea7 1a05 	vfma.f32	s2, s14, s10
 8017bcc:	dd13      	ble.n	8017bf6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8017bce:	ee70 6a44 	vsub.f32	s13, s0, s8
 8017bd2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8017bd6:	eef5 6a40 	vcmp.f32	s13, #0.0
 8017bda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017bde:	bf18      	it	ne
 8017be0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8017be4:	ee31 2a45 	vsub.f32	s4, s2, s10
 8017be8:	bf08      	it	eq
 8017bea:	eeb0 7a67 	vmoveq.f32	s14, s15
 8017bee:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017bf2:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017bf6:	fb05 f204 	mul.w	r2, r5, r4
 8017bfa:	1abf      	subs	r7, r7, r2
 8017bfc:	4494      	add	ip, r2
 8017bfe:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8017c02:	4411      	add	r1, r2
 8017c04:	eb09 020c 	add.w	r2, r9, ip
 8017c08:	443a      	add	r2, r7
 8017c0a:	b209      	sxth	r1, r1
 8017c0c:	428a      	cmp	r2, r1
 8017c0e:	bfc4      	itt	gt
 8017c10:	eba1 0209 	subgt.w	r2, r1, r9
 8017c14:	eba2 070c 	subgt.w	r7, r2, ip
 8017c18:	2f00      	cmp	r7, #0
 8017c1a:	dd50      	ble.n	8017cbe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8017c1c:	fb97 f1f4 	sdiv	r1, r7, r4
 8017c20:	fb04 7211 	mls	r2, r4, r1, r7
 8017c24:	b90a      	cbnz	r2, 8017c2a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8017c26:	3901      	subs	r1, #1
 8017c28:	4622      	mov	r2, r4
 8017c2a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8017c2e:	6840      	ldr	r0, [r0, #4]
 8017c30:	900b      	str	r0, [sp, #44]	; 0x2c
 8017c32:	f8d0 a000 	ldr.w	sl, [r0]
 8017c36:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8017c38:	9008      	str	r0, [sp, #32]
 8017c3a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8017c3e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8017c40:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8017c44:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8017c48:	695b      	ldr	r3, [r3, #20]
 8017c4a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017c4c:	445b      	add	r3, fp
 8017c4e:	eef0 6a42 	vmov.f32	s13, s4
 8017c52:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8017c56:	ee21 3a23 	vmul.f32	s6, s2, s7
 8017c5a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8017c5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017c62:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017c66:	9307      	str	r3, [sp, #28]
 8017c68:	ee17 7a90 	vmov	r7, s15
 8017c6c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8017c70:	eeb0 7a61 	vmov.f32	s14, s3
 8017c74:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017c78:	ee16 3a90 	vmov	r3, s13
 8017c7c:	fb97 f7f4 	sdiv	r7, r7, r4
 8017c80:	ee17 ca90 	vmov	ip, s15
 8017c84:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8017c88:	fb9c fcf4 	sdiv	ip, ip, r4
 8017c8c:	fb0c 3306 	mla	r3, ip, r6, r3
 8017c90:	9302      	str	r3, [sp, #8]
 8017c92:	ee17 3a10 	vmov	r3, s14
 8017c96:	44b6      	add	lr, r6
 8017c98:	fb04 e505 	mla	r5, r4, r5, lr
 8017c9c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8017ca0:	fb07 3706 	mla	r7, r7, r6, r3
 8017ca4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8017ca8:	e9cd 4700 	strd	r4, r7, [sp]
 8017cac:	2900      	cmp	r1, #0
 8017cae:	bfcc      	ite	gt
 8017cb0:	46a1      	movgt	r9, r4
 8017cb2:	4691      	movle	r9, r2
 8017cb4:	eba9 0306 	sub.w	r3, r9, r6
 8017cb8:	f8da 4008 	ldr.w	r4, [sl, #8]
 8017cbc:	47a0      	blx	r4
 8017cbe:	b00d      	add	sp, #52	; 0x34
 8017cc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cc4:	2500      	movs	r5, #0
 8017cc6:	462e      	mov	r6, r5
 8017cc8:	e799      	b.n	8017bfe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08017ccc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8017ccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017cd0:	b0db      	sub	sp, #364	; 0x16c
 8017cd2:	461d      	mov	r5, r3
 8017cd4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8017cd8:	930a      	str	r3, [sp, #40]	; 0x28
 8017cda:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8017cde:	930b      	str	r3, [sp, #44]	; 0x2c
 8017ce0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8017ce4:	9310      	str	r3, [sp, #64]	; 0x40
 8017ce6:	6803      	ldr	r3, [r0, #0]
 8017ce8:	910f      	str	r1, [sp, #60]	; 0x3c
 8017cea:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8017cec:	9009      	str	r0, [sp, #36]	; 0x24
 8017cee:	4614      	mov	r4, r2
 8017cf0:	4629      	mov	r1, r5
 8017cf2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8017cf6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8017cfa:	47b8      	blx	r7
 8017cfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017cfe:	6058      	str	r0, [r3, #4]
 8017d00:	2800      	cmp	r0, #0
 8017d02:	f000 83a1 	beq.w	8018448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d06:	682b      	ldr	r3, [r5, #0]
 8017d08:	9314      	str	r3, [sp, #80]	; 0x50
 8017d0a:	686b      	ldr	r3, [r5, #4]
 8017d0c:	9315      	str	r3, [sp, #84]	; 0x54
 8017d0e:	4bc4      	ldr	r3, [pc, #784]	; (8018020 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8017d10:	ed94 7a02 	vldr	s14, [r4, #8]
 8017d14:	7819      	ldrb	r1, [r3, #0]
 8017d16:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8017d1a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8017d1e:	2900      	cmp	r1, #0
 8017d20:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017d24:	bf16      	itet	ne
 8017d26:	4619      	movne	r1, r3
 8017d28:	4611      	moveq	r1, r2
 8017d2a:	4613      	movne	r3, r2
 8017d2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d30:	9116      	str	r1, [sp, #88]	; 0x58
 8017d32:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8017d36:	f240 8387 	bls.w	8018448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d3a:	ed94 7a07 	vldr	s14, [r4, #28]
 8017d3e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017d42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d46:	f240 837f 	bls.w	8018448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d4a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8017d4e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017d52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d56:	f240 8377 	bls.w	8018448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d5a:	6822      	ldr	r2, [r4, #0]
 8017d5c:	4bb1      	ldr	r3, [pc, #708]	; (8018024 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8017d5e:	429a      	cmp	r2, r3
 8017d60:	f2c0 8372 	blt.w	8018448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d64:	49b0      	ldr	r1, [pc, #704]	; (8018028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8017d66:	6963      	ldr	r3, [r4, #20]
 8017d68:	428a      	cmp	r2, r1
 8017d6a:	f300 836d 	bgt.w	8018448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d6e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017d72:	48ae      	ldr	r0, [pc, #696]	; (801802c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8017d74:	33ff      	adds	r3, #255	; 0xff
 8017d76:	4283      	cmp	r3, r0
 8017d78:	f200 8366 	bhi.w	8018448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d7c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8017d7e:	4dac      	ldr	r5, [pc, #688]	; (8018030 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8017d80:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017d84:	33ff      	adds	r3, #255	; 0xff
 8017d86:	42ab      	cmp	r3, r5
 8017d88:	f200 835e 	bhi.w	8018448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d8c:	6862      	ldr	r2, [r4, #4]
 8017d8e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8017d92:	33ff      	adds	r3, #255	; 0xff
 8017d94:	4283      	cmp	r3, r0
 8017d96:	f200 8357 	bhi.w	8018448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d9a:	69a1      	ldr	r1, [r4, #24]
 8017d9c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8017da0:	33ff      	adds	r3, #255	; 0xff
 8017da2:	4283      	cmp	r3, r0
 8017da4:	f200 8350 	bhi.w	8018448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017da8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8017daa:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8017dae:	30ff      	adds	r0, #255	; 0xff
 8017db0:	42a8      	cmp	r0, r5
 8017db2:	f200 8349 	bhi.w	8018448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017db6:	428a      	cmp	r2, r1
 8017db8:	f280 8110 	bge.w	8017fdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8017dbc:	429a      	cmp	r2, r3
 8017dbe:	f300 8119 	bgt.w	8017ff4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8017dc2:	4299      	cmp	r1, r3
 8017dc4:	f280 811d 	bge.w	8018002 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8017dc8:	2502      	movs	r5, #2
 8017dca:	2701      	movs	r7, #1
 8017dcc:	46a9      	mov	r9, r5
 8017dce:	46b8      	mov	r8, r7
 8017dd0:	f04f 0a00 	mov.w	sl, #0
 8017dd4:	4621      	mov	r1, r4
 8017dd6:	a849      	add	r0, sp, #292	; 0x124
 8017dd8:	f003 fe00 	bl	801b9dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8017ddc:	4622      	mov	r2, r4
 8017dde:	4653      	mov	r3, sl
 8017de0:	a949      	add	r1, sp, #292	; 0x124
 8017de2:	f8cd 9000 	str.w	r9, [sp]
 8017de6:	a819      	add	r0, sp, #100	; 0x64
 8017de8:	f003 ff28 	bl	801bc3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017dec:	4622      	mov	r2, r4
 8017dee:	4653      	mov	r3, sl
 8017df0:	a949      	add	r1, sp, #292	; 0x124
 8017df2:	f8cd 8000 	str.w	r8, [sp]
 8017df6:	a829      	add	r0, sp, #164	; 0xa4
 8017df8:	f003 ff20 	bl	801bc3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017dfc:	4643      	mov	r3, r8
 8017dfe:	4622      	mov	r2, r4
 8017e00:	a949      	add	r1, sp, #292	; 0x124
 8017e02:	f8cd 9000 	str.w	r9, [sp]
 8017e06:	a839      	add	r0, sp, #228	; 0xe4
 8017e08:	f003 ff18 	bl	801bc3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017e0c:	42af      	cmp	r7, r5
 8017e0e:	bfb5      	itete	lt
 8017e10:	2300      	movlt	r3, #0
 8017e12:	2301      	movge	r3, #1
 8017e14:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017e16:	930e      	strge	r3, [sp, #56]	; 0x38
 8017e18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017e1a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8017e1e:	af12      	add	r7, sp, #72	; 0x48
 8017e20:	bfb9      	ittee	lt
 8017e22:	ad29      	addlt	r5, sp, #164	; 0xa4
 8017e24:	ac19      	addlt	r4, sp, #100	; 0x64
 8017e26:	ad19      	addge	r5, sp, #100	; 0x64
 8017e28:	ac29      	addge	r4, sp, #164	; 0xa4
 8017e2a:	e887 0003 	stmia.w	r7, {r0, r1}
 8017e2e:	b928      	cbnz	r0, 8017e3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8017e30:	4b80      	ldr	r3, [pc, #512]	; (8018034 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8017e32:	6818      	ldr	r0, [r3, #0]
 8017e34:	6803      	ldr	r3, [r0, #0]
 8017e36:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017e38:	4798      	blx	r3
 8017e3a:	6038      	str	r0, [r7, #0]
 8017e3c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017e3e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017e42:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017e46:	930c      	str	r3, [sp, #48]	; 0x30
 8017e48:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017e4a:	6963      	ldr	r3, [r4, #20]
 8017e4c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8017e4e:	440b      	add	r3, r1
 8017e50:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017e54:	4408      	add	r0, r1
 8017e56:	b200      	sxth	r0, r0
 8017e58:	4283      	cmp	r3, r0
 8017e5a:	900d      	str	r0, [sp, #52]	; 0x34
 8017e5c:	f280 80dd 	bge.w	801801a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8017e60:	428b      	cmp	r3, r1
 8017e62:	da08      	bge.n	8017e76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017e64:	2a00      	cmp	r2, #0
 8017e66:	dd06      	ble.n	8017e76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017e68:	1acb      	subs	r3, r1, r3
 8017e6a:	429a      	cmp	r2, r3
 8017e6c:	f2c0 80e4 	blt.w	8018038 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8017e70:	2b00      	cmp	r3, #0
 8017e72:	f300 80e2 	bgt.w	801803a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8017e76:	6967      	ldr	r7, [r4, #20]
 8017e78:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017e7a:	443b      	add	r3, r7
 8017e7c:	461f      	mov	r7, r3
 8017e7e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017e80:	1bdf      	subs	r7, r3, r7
 8017e82:	4297      	cmp	r7, r2
 8017e84:	bfa8      	it	ge
 8017e86:	4617      	movge	r7, r2
 8017e88:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8017e8c:	2f00      	cmp	r7, #0
 8017e8e:	f340 8166 	ble.w	801815e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8017e92:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017e94:	6829      	ldr	r1, [r5, #0]
 8017e96:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017e9a:	f9bb 3000 	ldrsh.w	r3, [fp]
 8017e9e:	6820      	ldr	r0, [r4, #0]
 8017ea0:	4411      	add	r1, r2
 8017ea2:	4299      	cmp	r1, r3
 8017ea4:	dd1a      	ble.n	8017edc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017ea6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8017eaa:	440b      	add	r3, r1
 8017eac:	4402      	add	r2, r0
 8017eae:	b21b      	sxth	r3, r3
 8017eb0:	429a      	cmp	r2, r3
 8017eb2:	dc13      	bgt.n	8017edc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017eb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017eb6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017eb8:	681b      	ldr	r3, [r3, #0]
 8017eba:	9206      	str	r2, [sp, #24]
 8017ebc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017ebe:	9205      	str	r2, [sp, #20]
 8017ec0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017ec2:	9500      	str	r5, [sp, #0]
 8017ec4:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017ec8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8017eca:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017ecc:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8017ed0:	a912      	add	r1, sp, #72	; 0x48
 8017ed2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017ed6:	aa49      	add	r2, sp, #292	; 0x124
 8017ed8:	4623      	mov	r3, r4
 8017eda:	47c8      	blx	r9
 8017edc:	e9d4 2300 	ldrd	r2, r3, [r4]
 8017ee0:	441a      	add	r2, r3
 8017ee2:	6963      	ldr	r3, [r4, #20]
 8017ee4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017ee8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8017eec:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8017ef0:	68a1      	ldr	r1, [r4, #8]
 8017ef2:	ed94 6a08 	vldr	s12, [r4, #32]
 8017ef6:	6022      	str	r2, [r4, #0]
 8017ef8:	3301      	adds	r3, #1
 8017efa:	6163      	str	r3, [r4, #20]
 8017efc:	69a3      	ldr	r3, [r4, #24]
 8017efe:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017f02:	3b01      	subs	r3, #1
 8017f04:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8017f08:	61a3      	str	r3, [r4, #24]
 8017f0a:	6923      	ldr	r3, [r4, #16]
 8017f0c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017f10:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017f14:	edd4 6a07 	vldr	s13, [r4, #28]
 8017f18:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017f1c:	440b      	add	r3, r1
 8017f1e:	68e1      	ldr	r1, [r4, #12]
 8017f20:	6123      	str	r3, [r4, #16]
 8017f22:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017f26:	428b      	cmp	r3, r1
 8017f28:	edc4 6a07 	vstr	s13, [r4, #28]
 8017f2c:	db15      	blt.n	8017f5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8017f2e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8017f32:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017f36:	3201      	adds	r2, #1
 8017f38:	edc4 6a07 	vstr	s13, [r4, #28]
 8017f3c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8017f40:	6022      	str	r2, [r4, #0]
 8017f42:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017f46:	1a5b      	subs	r3, r3, r1
 8017f48:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017f4c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8017f50:	6123      	str	r3, [r4, #16]
 8017f52:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017f56:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017f5a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8017f5e:	441a      	add	r2, r3
 8017f60:	696b      	ldr	r3, [r5, #20]
 8017f62:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017f66:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8017f6a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8017f6e:	68a9      	ldr	r1, [r5, #8]
 8017f70:	ed95 6a08 	vldr	s12, [r5, #32]
 8017f74:	602a      	str	r2, [r5, #0]
 8017f76:	3301      	adds	r3, #1
 8017f78:	616b      	str	r3, [r5, #20]
 8017f7a:	69ab      	ldr	r3, [r5, #24]
 8017f7c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017f80:	3b01      	subs	r3, #1
 8017f82:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017f86:	61ab      	str	r3, [r5, #24]
 8017f88:	692b      	ldr	r3, [r5, #16]
 8017f8a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017f8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017f92:	edd5 6a07 	vldr	s13, [r5, #28]
 8017f96:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017f9a:	440b      	add	r3, r1
 8017f9c:	68e9      	ldr	r1, [r5, #12]
 8017f9e:	612b      	str	r3, [r5, #16]
 8017fa0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017fa4:	428b      	cmp	r3, r1
 8017fa6:	edc5 6a07 	vstr	s13, [r5, #28]
 8017faa:	db15      	blt.n	8017fd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8017fac:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8017fb0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017fb4:	3201      	adds	r2, #1
 8017fb6:	edc5 6a07 	vstr	s13, [r5, #28]
 8017fba:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8017fbe:	602a      	str	r2, [r5, #0]
 8017fc0:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017fc4:	1a5b      	subs	r3, r3, r1
 8017fc6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017fca:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8017fce:	612b      	str	r3, [r5, #16]
 8017fd0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017fd4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017fd8:	3f01      	subs	r7, #1
 8017fda:	e757      	b.n	8017e8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8017fdc:	4299      	cmp	r1, r3
 8017fde:	dc13      	bgt.n	8018008 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8017fe0:	429a      	cmp	r2, r3
 8017fe2:	da14      	bge.n	801800e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8017fe4:	2502      	movs	r5, #2
 8017fe6:	2703      	movs	r7, #3
 8017fe8:	46a9      	mov	r9, r5
 8017fea:	f04f 0800 	mov.w	r8, #0
 8017fee:	f04f 0a01 	mov.w	sl, #1
 8017ff2:	e6ef      	b.n	8017dd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017ff4:	2501      	movs	r5, #1
 8017ff6:	2700      	movs	r7, #0
 8017ff8:	46a9      	mov	r9, r5
 8017ffa:	46b8      	mov	r8, r7
 8017ffc:	f04f 0a02 	mov.w	sl, #2
 8018000:	e6e8      	b.n	8017dd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8018002:	2501      	movs	r5, #1
 8018004:	2702      	movs	r7, #2
 8018006:	e6e1      	b.n	8017dcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8018008:	2500      	movs	r5, #0
 801800a:	2701      	movs	r7, #1
 801800c:	e7f4      	b.n	8017ff8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801800e:	2702      	movs	r7, #2
 8018010:	2503      	movs	r5, #3
 8018012:	f04f 0900 	mov.w	r9, #0
 8018016:	46b8      	mov	r8, r7
 8018018:	e7e9      	b.n	8017fee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801801a:	4613      	mov	r3, r2
 801801c:	e728      	b.n	8017e70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801801e:	bf00      	nop
 8018020:	2001e1b8 	.word	0x2001e1b8
 8018024:	fffd8f01 	.word	0xfffd8f01
 8018028:	00027100 	.word	0x00027100
 801802c:	0004e1ff 	.word	0x0004e1ff
 8018030:	0004e1fe 	.word	0x0004e1fe
 8018034:	2001e1c0 	.word	0x2001e1c0
 8018038:	4613      	mov	r3, r2
 801803a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801803c:	9111      	str	r1, [sp, #68]	; 0x44
 801803e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8018042:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8018046:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8018048:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801804c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8018050:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8018054:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8018058:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801805c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8018060:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8018064:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8018068:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801806c:	469e      	mov	lr, r3
 801806e:	469c      	mov	ip, r3
 8018070:	f04f 0900 	mov.w	r9, #0
 8018074:	f1bc 0f00 	cmp.w	ip, #0
 8018078:	d147      	bne.n	801810a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801807a:	eb03 0c07 	add.w	ip, r3, r7
 801807e:	1ad7      	subs	r7, r2, r3
 8018080:	f1b9 0f00 	cmp.w	r9, #0
 8018084:	d009      	beq.n	801809a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8018086:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801808a:	9029      	str	r0, [sp, #164]	; 0xa4
 801808c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8018090:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8018094:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8018098:	912d      	str	r1, [sp, #180]	; 0xb4
 801809a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801809c:	9111      	str	r1, [sp, #68]	; 0x44
 801809e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80180a2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80180a6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80180aa:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80180ae:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80180b2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80180b6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80180ba:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80180be:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80180c2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80180c6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80180ca:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80180ce:	f04f 0800 	mov.w	r8, #0
 80180d2:	f1be 0f00 	cmp.w	lr, #0
 80180d6:	d031      	beq.n	801813c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80180d8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80180da:	4431      	add	r1, r6
 80180dc:	4549      	cmp	r1, r9
 80180de:	4450      	add	r0, sl
 80180e0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80180e4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80180e8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80180ec:	db08      	blt.n	8018100 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80180ee:	ee77 7a85 	vadd.f32	s15, s15, s10
 80180f2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80180f6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80180fa:	3001      	adds	r0, #1
 80180fc:	eba1 0109 	sub.w	r1, r1, r9
 8018100:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018104:	f04f 0801 	mov.w	r8, #1
 8018108:	e7e3      	b.n	80180d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801810a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801810c:	4431      	add	r1, r6
 801810e:	4541      	cmp	r1, r8
 8018110:	4450      	add	r0, sl
 8018112:	ee37 7a24 	vadd.f32	s14, s14, s9
 8018116:	ee77 7a84 	vadd.f32	s15, s15, s8
 801811a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801811e:	db08      	blt.n	8018132 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8018120:	ee76 6a85 	vadd.f32	s13, s13, s10
 8018124:	ee37 7a25 	vadd.f32	s14, s14, s11
 8018128:	ee77 7a86 	vadd.f32	s15, s15, s12
 801812c:	3001      	adds	r0, #1
 801812e:	eba1 0108 	sub.w	r1, r1, r8
 8018132:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018136:	f04f 0901 	mov.w	r9, #1
 801813a:	e79b      	b.n	8018074 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801813c:	449c      	add	ip, r3
 801813e:	1aff      	subs	r7, r7, r3
 8018140:	f1b8 0f00 	cmp.w	r8, #0
 8018144:	d009      	beq.n	801815a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8018146:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801814a:	9019      	str	r0, [sp, #100]	; 0x64
 801814c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8018150:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8018154:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8018158:	911d      	str	r1, [sp, #116]	; 0x74
 801815a:	1ad2      	subs	r2, r2, r3
 801815c:	e68b      	b.n	8017e76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801815e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018160:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8018162:	2b00      	cmp	r3, #0
 8018164:	f000 80d1 	beq.w	801830a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8018168:	ad19      	add	r5, sp, #100	; 0x64
 801816a:	ac39      	add	r4, sp, #228	; 0xe4
 801816c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801816e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8018172:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8018176:	930c      	str	r3, [sp, #48]	; 0x30
 8018178:	990c      	ldr	r1, [sp, #48]	; 0x30
 801817a:	6963      	ldr	r3, [r4, #20]
 801817c:	440b      	add	r3, r1
 801817e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8018182:	4408      	add	r0, r1
 8018184:	b200      	sxth	r0, r0
 8018186:	4283      	cmp	r3, r0
 8018188:	900d      	str	r0, [sp, #52]	; 0x34
 801818a:	f280 80c1 	bge.w	8018310 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801818e:	428b      	cmp	r3, r1
 8018190:	da08      	bge.n	80181a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8018192:	2a00      	cmp	r2, #0
 8018194:	dd06      	ble.n	80181a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8018196:	1acb      	subs	r3, r1, r3
 8018198:	429a      	cmp	r2, r3
 801819a:	f2c0 80bb 	blt.w	8018314 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801819e:	2b00      	cmp	r3, #0
 80181a0:	f300 80b9 	bgt.w	8018316 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80181a4:	6967      	ldr	r7, [r4, #20]
 80181a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80181a8:	443b      	add	r3, r7
 80181aa:	461f      	mov	r7, r3
 80181ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80181ae:	1bdf      	subs	r7, r3, r7
 80181b0:	4297      	cmp	r7, r2
 80181b2:	bfa8      	it	ge
 80181b4:	4617      	movge	r7, r2
 80181b6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80181ba:	2f00      	cmp	r7, #0
 80181bc:	f340 813c 	ble.w	8018438 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80181c0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80181c2:	6829      	ldr	r1, [r5, #0]
 80181c4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80181c8:	f9bb 3000 	ldrsh.w	r3, [fp]
 80181cc:	6820      	ldr	r0, [r4, #0]
 80181ce:	4411      	add	r1, r2
 80181d0:	4299      	cmp	r1, r3
 80181d2:	dd1a      	ble.n	801820a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80181d4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80181d8:	440b      	add	r3, r1
 80181da:	4402      	add	r2, r0
 80181dc:	b21b      	sxth	r3, r3
 80181de:	429a      	cmp	r2, r3
 80181e0:	dc13      	bgt.n	801820a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80181e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80181e4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80181e6:	681b      	ldr	r3, [r3, #0]
 80181e8:	9206      	str	r2, [sp, #24]
 80181ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80181ec:	9205      	str	r2, [sp, #20]
 80181ee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80181f0:	9500      	str	r5, [sp, #0]
 80181f2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80181f6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80181f8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80181fa:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80181fe:	a912      	add	r1, sp, #72	; 0x48
 8018200:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8018204:	aa49      	add	r2, sp, #292	; 0x124
 8018206:	4623      	mov	r3, r4
 8018208:	47c8      	blx	r9
 801820a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801820e:	441a      	add	r2, r3
 8018210:	6963      	ldr	r3, [r4, #20]
 8018212:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8018216:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801821a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801821e:	68a1      	ldr	r1, [r4, #8]
 8018220:	ed94 6a08 	vldr	s12, [r4, #32]
 8018224:	6022      	str	r2, [r4, #0]
 8018226:	3301      	adds	r3, #1
 8018228:	6163      	str	r3, [r4, #20]
 801822a:	69a3      	ldr	r3, [r4, #24]
 801822c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8018230:	3b01      	subs	r3, #1
 8018232:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8018236:	61a3      	str	r3, [r4, #24]
 8018238:	6923      	ldr	r3, [r4, #16]
 801823a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801823e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8018242:	edd4 6a07 	vldr	s13, [r4, #28]
 8018246:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801824a:	440b      	add	r3, r1
 801824c:	68e1      	ldr	r1, [r4, #12]
 801824e:	6123      	str	r3, [r4, #16]
 8018250:	ee76 6a86 	vadd.f32	s13, s13, s12
 8018254:	428b      	cmp	r3, r1
 8018256:	edc4 6a07 	vstr	s13, [r4, #28]
 801825a:	db15      	blt.n	8018288 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801825c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8018260:	ee76 6a26 	vadd.f32	s13, s12, s13
 8018264:	3201      	adds	r2, #1
 8018266:	edc4 6a07 	vstr	s13, [r4, #28]
 801826a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801826e:	6022      	str	r2, [r4, #0]
 8018270:	ee36 7a87 	vadd.f32	s14, s13, s14
 8018274:	1a5b      	subs	r3, r3, r1
 8018276:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801827a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801827e:	6123      	str	r3, [r4, #16]
 8018280:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018284:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8018288:	e9d5 2300 	ldrd	r2, r3, [r5]
 801828c:	441a      	add	r2, r3
 801828e:	696b      	ldr	r3, [r5, #20]
 8018290:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8018294:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8018298:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801829c:	68a9      	ldr	r1, [r5, #8]
 801829e:	ed95 6a08 	vldr	s12, [r5, #32]
 80182a2:	602a      	str	r2, [r5, #0]
 80182a4:	3301      	adds	r3, #1
 80182a6:	616b      	str	r3, [r5, #20]
 80182a8:	69ab      	ldr	r3, [r5, #24]
 80182aa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80182ae:	3b01      	subs	r3, #1
 80182b0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80182b4:	61ab      	str	r3, [r5, #24]
 80182b6:	692b      	ldr	r3, [r5, #16]
 80182b8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80182bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80182c0:	edd5 6a07 	vldr	s13, [r5, #28]
 80182c4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80182c8:	440b      	add	r3, r1
 80182ca:	68e9      	ldr	r1, [r5, #12]
 80182cc:	612b      	str	r3, [r5, #16]
 80182ce:	ee76 6a86 	vadd.f32	s13, s13, s12
 80182d2:	428b      	cmp	r3, r1
 80182d4:	edc5 6a07 	vstr	s13, [r5, #28]
 80182d8:	db15      	blt.n	8018306 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80182da:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80182de:	ee76 6a26 	vadd.f32	s13, s12, s13
 80182e2:	3201      	adds	r2, #1
 80182e4:	edc5 6a07 	vstr	s13, [r5, #28]
 80182e8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80182ec:	602a      	str	r2, [r5, #0]
 80182ee:	ee36 7a87 	vadd.f32	s14, s13, s14
 80182f2:	1a5b      	subs	r3, r3, r1
 80182f4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80182f8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80182fc:	612b      	str	r3, [r5, #16]
 80182fe:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018302:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8018306:	3f01      	subs	r7, #1
 8018308:	e757      	b.n	80181ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801830a:	ad39      	add	r5, sp, #228	; 0xe4
 801830c:	ac19      	add	r4, sp, #100	; 0x64
 801830e:	e72d      	b.n	801816c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8018310:	4613      	mov	r3, r2
 8018312:	e744      	b.n	801819e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8018314:	4613      	mov	r3, r2
 8018316:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801831a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801831c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8018320:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8018324:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8018328:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801832c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8018330:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8018334:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8018338:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801833a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801833e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8018342:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8018346:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801834a:	960e      	str	r6, [sp, #56]	; 0x38
 801834c:	469e      	mov	lr, r3
 801834e:	461f      	mov	r7, r3
 8018350:	f04f 0900 	mov.w	r9, #0
 8018354:	2f00      	cmp	r7, #0
 8018356:	d146      	bne.n	80183e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8018358:	449c      	add	ip, r3
 801835a:	1ad7      	subs	r7, r2, r3
 801835c:	f1b9 0f00 	cmp.w	r9, #0
 8018360:	d009      	beq.n	8018376 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8018362:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8018366:	9039      	str	r0, [sp, #228]	; 0xe4
 8018368:	913d      	str	r1, [sp, #244]	; 0xf4
 801836a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801836e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8018372:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8018376:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8018378:	910e      	str	r1, [sp, #56]	; 0x38
 801837a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801837e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8018382:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8018386:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801838a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801838e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8018392:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8018396:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801839a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801839e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80183a2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80183a6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80183aa:	f04f 0800 	mov.w	r8, #0
 80183ae:	f1be 0f00 	cmp.w	lr, #0
 80183b2:	d030      	beq.n	8018416 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80183b4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80183b6:	4431      	add	r1, r6
 80183b8:	4549      	cmp	r1, r9
 80183ba:	4450      	add	r0, sl
 80183bc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80183c0:	ee37 7a04 	vadd.f32	s14, s14, s8
 80183c4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80183c8:	db08      	blt.n	80183dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80183ca:	ee77 7a85 	vadd.f32	s15, s15, s10
 80183ce:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80183d2:	ee37 7a06 	vadd.f32	s14, s14, s12
 80183d6:	3001      	adds	r0, #1
 80183d8:	eba1 0109 	sub.w	r1, r1, r9
 80183dc:	f10e 3eff 	add.w	lr, lr, #4294967295
 80183e0:	f04f 0801 	mov.w	r8, #1
 80183e4:	e7e3      	b.n	80183ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80183e6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80183e8:	4431      	add	r1, r6
 80183ea:	4541      	cmp	r1, r8
 80183ec:	4450      	add	r0, sl
 80183ee:	ee37 7a24 	vadd.f32	s14, s14, s9
 80183f2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80183f6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80183fa:	db08      	blt.n	801840e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80183fc:	ee76 6a85 	vadd.f32	s13, s13, s10
 8018400:	ee37 7a25 	vadd.f32	s14, s14, s11
 8018404:	ee77 7a86 	vadd.f32	s15, s15, s12
 8018408:	3001      	adds	r0, #1
 801840a:	eba1 0108 	sub.w	r1, r1, r8
 801840e:	3f01      	subs	r7, #1
 8018410:	f04f 0901 	mov.w	r9, #1
 8018414:	e79e      	b.n	8018354 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8018416:	449c      	add	ip, r3
 8018418:	1aff      	subs	r7, r7, r3
 801841a:	f1b8 0f00 	cmp.w	r8, #0
 801841e:	d009      	beq.n	8018434 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8018420:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8018424:	9019      	str	r0, [sp, #100]	; 0x64
 8018426:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801842a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801842e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8018432:	911d      	str	r1, [sp, #116]	; 0x74
 8018434:	1ad2      	subs	r2, r2, r3
 8018436:	e6b5      	b.n	80181a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8018438:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801843a:	681b      	ldr	r3, [r3, #0]
 801843c:	b923      	cbnz	r3, 8018448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801843e:	4b04      	ldr	r3, [pc, #16]	; (8018450 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8018440:	6818      	ldr	r0, [r3, #0]
 8018442:	6803      	ldr	r3, [r0, #0]
 8018444:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018446:	4798      	blx	r3
 8018448:	b05b      	add	sp, #364	; 0x16c
 801844a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801844e:	bf00      	nop
 8018450:	2001e1c0 	.word	0x2001e1c0

08018454 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8018454:	b570      	push	{r4, r5, r6, lr}
 8018456:	4604      	mov	r4, r0
 8018458:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801845c:	9804      	ldr	r0, [sp, #16]
 801845e:	6061      	str	r1, [r4, #4]
 8018460:	2500      	movs	r5, #0
 8018462:	8025      	strh	r5, [r4, #0]
 8018464:	7223      	strb	r3, [r4, #8]
 8018466:	7266      	strb	r6, [r4, #9]
 8018468:	60e0      	str	r0, [r4, #12]
 801846a:	8222      	strh	r2, [r4, #16]
 801846c:	8265      	strh	r5, [r4, #18]
 801846e:	82a5      	strh	r5, [r4, #20]
 8018470:	82e5      	strh	r5, [r4, #22]
 8018472:	8325      	strh	r5, [r4, #24]
 8018474:	8365      	strh	r5, [r4, #26]
 8018476:	83a5      	strh	r5, [r4, #28]
 8018478:	77a5      	strb	r5, [r4, #30]
 801847a:	b32e      	cbz	r6, 80184c8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801847c:	6803      	ldr	r3, [r0, #0]
 801847e:	695b      	ldr	r3, [r3, #20]
 8018480:	4798      	blx	r3
 8018482:	4606      	mov	r6, r0
 8018484:	b300      	cbz	r0, 80184c8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8018486:	68e0      	ldr	r0, [r4, #12]
 8018488:	6803      	ldr	r3, [r0, #0]
 801848a:	4631      	mov	r1, r6
 801848c:	68db      	ldr	r3, [r3, #12]
 801848e:	4798      	blx	r3
 8018490:	4605      	mov	r5, r0
 8018492:	b1c8      	cbz	r0, 80184c8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8018494:	7b43      	ldrb	r3, [r0, #13]
 8018496:	7a82      	ldrb	r2, [r0, #10]
 8018498:	005b      	lsls	r3, r3, #1
 801849a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801849e:	4313      	orrs	r3, r2
 80184a0:	83a3      	strh	r3, [r4, #28]
 80184a2:	7a63      	ldrb	r3, [r4, #9]
 80184a4:	2b04      	cmp	r3, #4
 80184a6:	d10f      	bne.n	80184c8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80184a8:	68e0      	ldr	r0, [r4, #12]
 80184aa:	6803      	ldr	r3, [r0, #0]
 80184ac:	462a      	mov	r2, r5
 80184ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80184b0:	4631      	mov	r1, r6
 80184b2:	4798      	blx	r3
 80184b4:	7b6b      	ldrb	r3, [r5, #13]
 80184b6:	005b      	lsls	r3, r3, #1
 80184b8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80184bc:	7aab      	ldrb	r3, [r5, #10]
 80184be:	4313      	orrs	r3, r2
 80184c0:	4418      	add	r0, r3
 80184c2:	8ba3      	ldrh	r3, [r4, #28]
 80184c4:	4418      	add	r0, r3
 80184c6:	83a0      	strh	r0, [r4, #28]
 80184c8:	4620      	mov	r0, r4
 80184ca:	bd70      	pop	{r4, r5, r6, pc}

080184cc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80184cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184d0:	2400      	movs	r4, #0
 80184d2:	b085      	sub	sp, #20
 80184d4:	4681      	mov	r9, r0
 80184d6:	4688      	mov	r8, r1
 80184d8:	4692      	mov	sl, r2
 80184da:	469b      	mov	fp, r3
 80184dc:	4627      	mov	r7, r4
 80184de:	4625      	mov	r5, r4
 80184e0:	4626      	mov	r6, r4
 80184e2:	4554      	cmp	r4, sl
 80184e4:	da2a      	bge.n	801853c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80184e6:	2300      	movs	r3, #0
 80184e8:	9303      	str	r3, [sp, #12]
 80184ea:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80184ee:	429d      	cmp	r5, r3
 80184f0:	d004      	beq.n	80184fc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80184f2:	f242 030b 	movw	r3, #8203	; 0x200b
 80184f6:	429d      	cmp	r5, r3
 80184f8:	bf18      	it	ne
 80184fa:	462f      	movne	r7, r5
 80184fc:	ab03      	add	r3, sp, #12
 80184fe:	4642      	mov	r2, r8
 8018500:	4659      	mov	r1, fp
 8018502:	4648      	mov	r0, r9
 8018504:	f003 f826 	bl	801b554 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018508:	4605      	mov	r5, r0
 801850a:	b1b8      	cbz	r0, 801853c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801850c:	280a      	cmp	r0, #10
 801850e:	d015      	beq.n	801853c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8018510:	9a03      	ldr	r2, [sp, #12]
 8018512:	b18a      	cbz	r2, 8018538 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8018514:	7b50      	ldrb	r0, [r2, #13]
 8018516:	7a93      	ldrb	r3, [r2, #10]
 8018518:	8895      	ldrh	r5, [r2, #4]
 801851a:	0040      	lsls	r0, r0, #1
 801851c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8018520:	4303      	orrs	r3, r0
 8018522:	9301      	str	r3, [sp, #4]
 8018524:	f8d8 3000 	ldr.w	r3, [r8]
 8018528:	4639      	mov	r1, r7
 801852a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801852c:	4640      	mov	r0, r8
 801852e:	4798      	blx	r3
 8018530:	9b01      	ldr	r3, [sp, #4]
 8018532:	4418      	add	r0, r3
 8018534:	4406      	add	r6, r0
 8018536:	b2b6      	uxth	r6, r6
 8018538:	3401      	adds	r4, #1
 801853a:	e7d2      	b.n	80184e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801853c:	4630      	mov	r0, r6
 801853e:	b005      	add	sp, #20
 8018540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018544 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8018544:	2a02      	cmp	r2, #2
 8018546:	b530      	push	{r4, r5, lr}
 8018548:	d011      	beq.n	801856e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801854a:	2a03      	cmp	r2, #3
 801854c:	d01c      	beq.n	8018588 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801854e:	2a01      	cmp	r2, #1
 8018550:	d10c      	bne.n	801856c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8018552:	888b      	ldrh	r3, [r1, #4]
 8018554:	8801      	ldrh	r1, [r0, #0]
 8018556:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801855a:	8844      	ldrh	r4, [r0, #2]
 801855c:	8004      	strh	r4, [r0, #0]
 801855e:	1a5b      	subs	r3, r3, r1
 8018560:	1a9b      	subs	r3, r3, r2
 8018562:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8018566:	8043      	strh	r3, [r0, #2]
 8018568:	8081      	strh	r1, [r0, #4]
 801856a:	80c2      	strh	r2, [r0, #6]
 801856c:	bd30      	pop	{r4, r5, pc}
 801856e:	88cb      	ldrh	r3, [r1, #6]
 8018570:	8842      	ldrh	r2, [r0, #2]
 8018572:	1a9b      	subs	r3, r3, r2
 8018574:	88c2      	ldrh	r2, [r0, #6]
 8018576:	1a9b      	subs	r3, r3, r2
 8018578:	888a      	ldrh	r2, [r1, #4]
 801857a:	8801      	ldrh	r1, [r0, #0]
 801857c:	8043      	strh	r3, [r0, #2]
 801857e:	1a52      	subs	r2, r2, r1
 8018580:	8881      	ldrh	r1, [r0, #4]
 8018582:	1a52      	subs	r2, r2, r1
 8018584:	8002      	strh	r2, [r0, #0]
 8018586:	e7f1      	b.n	801856c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8018588:	88cb      	ldrh	r3, [r1, #6]
 801858a:	8841      	ldrh	r1, [r0, #2]
 801858c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8018590:	f9b0 5000 	ldrsh.w	r5, [r0]
 8018594:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8018598:	8045      	strh	r5, [r0, #2]
 801859a:	1a5b      	subs	r3, r3, r1
 801859c:	1a9b      	subs	r3, r3, r2
 801859e:	8003      	strh	r3, [r0, #0]
 80185a0:	8082      	strh	r2, [r0, #4]
 80185a2:	80c4      	strh	r4, [r0, #6]
 80185a4:	e7e2      	b.n	801856c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080185a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80185a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185aa:	b09f      	sub	sp, #124	; 0x7c
 80185ac:	9116      	str	r1, [sp, #88]	; 0x58
 80185ae:	9317      	str	r3, [sp, #92]	; 0x5c
 80185b0:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80185b2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80185b4:	8809      	ldrh	r1, [r1, #0]
 80185b6:	889b      	ldrh	r3, [r3, #4]
 80185b8:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80185bc:	9212      	str	r2, [sp, #72]	; 0x48
 80185be:	440b      	add	r3, r1
 80185c0:	b21b      	sxth	r3, r3
 80185c2:	9310      	str	r3, [sp, #64]	; 0x40
 80185c4:	f8d8 3000 	ldr.w	r3, [r8]
 80185c8:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80185cc:	7a59      	ldrb	r1, [r3, #9]
 80185ce:	7a1b      	ldrb	r3, [r3, #8]
 80185d0:	9011      	str	r0, [sp, #68]	; 0x44
 80185d2:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80185d6:	9114      	str	r1, [sp, #80]	; 0x50
 80185d8:	9315      	str	r3, [sp, #84]	; 0x54
 80185da:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 80185de:	2a00      	cmp	r2, #0
 80185e0:	d067      	beq.n	80186b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10c>
 80185e2:	f898 3010 	ldrb.w	r3, [r8, #16]
 80185e6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80185e8:	2b04      	cmp	r3, #4
 80185ea:	bf14      	ite	ne
 80185ec:	2301      	movne	r3, #1
 80185ee:	2302      	moveq	r3, #2
 80185f0:	4413      	add	r3, r2
 80185f2:	f04f 0900 	mov.w	r9, #0
 80185f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80185f8:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80185fc:	464c      	mov	r4, r9
 80185fe:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8018602:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8018606:	4293      	cmp	r3, r2
 8018608:	f280 808c 	bge.w	8018724 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 801860c:	2300      	movs	r3, #0
 801860e:	931c      	str	r3, [sp, #112]	; 0x70
 8018610:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8018614:	429c      	cmp	r4, r3
 8018616:	d006      	beq.n	8018626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x80>
 8018618:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801861a:	f242 020b 	movw	r2, #8203	; 0x200b
 801861e:	4294      	cmp	r4, r2
 8018620:	bf18      	it	ne
 8018622:	4623      	movne	r3, r4
 8018624:	930d      	str	r3, [sp, #52]	; 0x34
 8018626:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018628:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801862a:	f8d8 2000 	ldr.w	r2, [r8]
 801862e:	428b      	cmp	r3, r1
 8018630:	db41      	blt.n	80186b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x110>
 8018632:	6813      	ldr	r3, [r2, #0]
 8018634:	4610      	mov	r0, r2
 8018636:	695b      	ldr	r3, [r3, #20]
 8018638:	4798      	blx	r3
 801863a:	4604      	mov	r4, r0
 801863c:	f8d8 0000 	ldr.w	r0, [r8]
 8018640:	6803      	ldr	r3, [r0, #0]
 8018642:	aa1d      	add	r2, sp, #116	; 0x74
 8018644:	689e      	ldr	r6, [r3, #8]
 8018646:	4621      	mov	r1, r4
 8018648:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801864c:	47b0      	blx	r6
 801864e:	901c      	str	r0, [sp, #112]	; 0x70
 8018650:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8018654:	429c      	cmp	r4, r3
 8018656:	f000 80e9 	beq.w	801882c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 801865a:	f242 030b 	movw	r3, #8203	; 0x200b
 801865e:	429c      	cmp	r4, r3
 8018660:	f000 80e4 	beq.w	801882c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 8018664:	2c00      	cmp	r4, #0
 8018666:	f000 80f6 	beq.w	8018856 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 801866a:	2c0a      	cmp	r4, #10
 801866c:	d060      	beq.n	8018730 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 801866e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8018670:	b36a      	cbz	r2, 80186ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x128>
 8018672:	8894      	ldrh	r4, [r2, #4]
 8018674:	f1bb 0f00 	cmp.w	fp, #0
 8018678:	d03b      	beq.n	80186f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14c>
 801867a:	f892 900d 	ldrb.w	r9, [r2, #13]
 801867e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018682:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8018686:	f892 900a 	ldrb.w	r9, [r2, #10]
 801868a:	f1bb 0f01 	cmp.w	fp, #1
 801868e:	ea49 0903 	orr.w	r9, r9, r3
 8018692:	d134      	bne.n	80186fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x158>
 8018694:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018696:	eba5 0509 	sub.w	r5, r5, r9
 801869a:	2b00      	cmp	r3, #0
 801869c:	d14f      	bne.n	801873e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 801869e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80186a0:	eb09 0305 	add.w	r3, r9, r5
 80186a4:	4413      	add	r3, r2
 80186a6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80186a8:	f9b2 2000 	ldrsh.w	r2, [r2]
 80186ac:	4293      	cmp	r3, r2
 80186ae:	da51      	bge.n	8018754 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80186b0:	e038      	b.n	8018724 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 80186b2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80186b4:	e79d      	b.n	80185f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80186b6:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80186ba:	9301      	str	r3, [sp, #4]
 80186bc:	ab1d      	add	r3, sp, #116	; 0x74
 80186be:	9300      	str	r3, [sp, #0]
 80186c0:	4659      	mov	r1, fp
 80186c2:	ab1c      	add	r3, sp, #112	; 0x70
 80186c4:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80186c6:	f002 ff9d 	bl	801b604 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80186ca:	4604      	mov	r4, r0
 80186cc:	e7c0      	b.n	8018650 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xaa>
 80186ce:	f8d8 0000 	ldr.w	r0, [r8]
 80186d2:	6803      	ldr	r3, [r0, #0]
 80186d4:	691b      	ldr	r3, [r3, #16]
 80186d6:	4798      	blx	r3
 80186d8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80186dc:	4298      	cmp	r0, r3
 80186de:	f000 80a5 	beq.w	801882c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 80186e2:	f242 030b 	movw	r3, #8203	; 0x200b
 80186e6:	4298      	cmp	r0, r3
 80186e8:	f000 80a0 	beq.w	801882c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 80186ec:	f1bb 0f00 	cmp.w	fp, #0
 80186f0:	d100      	bne.n	80186f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 80186f2:	444d      	add	r5, r9
 80186f4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80186f6:	2a00      	cmp	r2, #0
 80186f8:	d1bf      	bne.n	801867a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd4>
 80186fa:	4691      	mov	r9, r2
 80186fc:	e096      	b.n	801882c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 80186fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018700:	2b00      	cmp	r3, #0
 8018702:	f000 80aa 	beq.w	801885a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 8018706:	f1bb 0f00 	cmp.w	fp, #0
 801870a:	d118      	bne.n	801873e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 801870c:	f8d8 0000 	ldr.w	r0, [r8]
 8018710:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018712:	6803      	ldr	r3, [r0, #0]
 8018714:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018716:	4798      	blx	r3
 8018718:	4405      	add	r5, r0
 801871a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801871c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801871e:	1aeb      	subs	r3, r5, r3
 8018720:	4293      	cmp	r3, r2
 8018722:	dd17      	ble.n	8018754 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8018724:	2c00      	cmp	r4, #0
 8018726:	f000 8096 	beq.w	8018856 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 801872a:	2c0a      	cmp	r4, #10
 801872c:	f040 8084 	bne.w	8018838 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8018730:	240a      	movs	r4, #10
 8018732:	fab4 f084 	clz	r0, r4
 8018736:	0940      	lsrs	r0, r0, #5
 8018738:	b01f      	add	sp, #124	; 0x7c
 801873a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801873e:	f8d8 0000 	ldr.w	r0, [r8]
 8018742:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018744:	6803      	ldr	r3, [r0, #0]
 8018746:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018748:	4798      	blx	r3
 801874a:	f1bb 0f01 	cmp.w	fp, #1
 801874e:	eba5 0500 	sub.w	r5, r5, r0
 8018752:	d0a4      	beq.n	801869e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf8>
 8018754:	981c      	ldr	r0, [sp, #112]	; 0x70
 8018756:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018758:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801875c:	f9b3 6000 	ldrsh.w	r6, [r3]
 8018760:	7b43      	ldrb	r3, [r0, #13]
 8018762:	015b      	lsls	r3, r3, #5
 8018764:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018768:	7983      	ldrb	r3, [r0, #6]
 801876a:	4429      	add	r1, r5
 801876c:	4313      	orrs	r3, r2
 801876e:	440b      	add	r3, r1
 8018770:	42b3      	cmp	r3, r6
 8018772:	db5b      	blt.n	801882c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 8018774:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018776:	4299      	cmp	r1, r3
 8018778:	da58      	bge.n	801882c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 801877a:	f8d8 0000 	ldr.w	r0, [r8]
 801877e:	6803      	ldr	r3, [r0, #0]
 8018780:	42ae      	cmp	r6, r5
 8018782:	bfc8      	it	gt
 8018784:	1b76      	subgt	r6, r6, r5
 8018786:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018788:	bfcc      	ite	gt
 801878a:	b2b6      	uxthgt	r6, r6
 801878c:	2600      	movle	r6, #0
 801878e:	4798      	blx	r3
 8018790:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8018792:	7b5a      	ldrb	r2, [r3, #13]
 8018794:	00d1      	lsls	r1, r2, #3
 8018796:	f401 7780 	and.w	r7, r1, #256	; 0x100
 801879a:	7a19      	ldrb	r1, [r3, #8]
 801879c:	4339      	orrs	r1, r7
 801879e:	0657      	lsls	r7, r2, #25
 80187a0:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 80187a2:	bf44      	itt	mi
 80187a4:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80187a8:	b209      	sxthmi	r1, r1
 80187aa:	19c7      	adds	r7, r0, r7
 80187ac:	1a7f      	subs	r7, r7, r1
 80187ae:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80187b0:	b2bf      	uxth	r7, r7
 80187b2:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80187b6:	fa0f fa87 	sxth.w	sl, r7
 80187ba:	4551      	cmp	r1, sl
 80187bc:	dd3a      	ble.n	8018834 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80187be:	0112      	lsls	r2, r2, #4
 80187c0:	79d8      	ldrb	r0, [r3, #7]
 80187c2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80187c6:	4302      	orrs	r2, r0
 80187c8:	4492      	add	sl, r2
 80187ca:	4551      	cmp	r1, sl
 80187cc:	dc2e      	bgt.n	801882c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 80187ce:	1bcf      	subs	r7, r1, r7
 80187d0:	b2bf      	uxth	r7, r7
 80187d2:	468a      	mov	sl, r1
 80187d4:	9319      	str	r3, [sp, #100]	; 0x64
 80187d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80187d8:	f8d8 0000 	ldr.w	r0, [r8]
 80187dc:	681a      	ldr	r2, [r3, #0]
 80187de:	6801      	ldr	r1, [r0, #0]
 80187e0:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80187e2:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80187e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80187e6:	9218      	str	r2, [sp, #96]	; 0x60
 80187e8:	6b89      	ldr	r1, [r1, #56]	; 0x38
 80187ea:	4788      	blx	r1
 80187ec:	f898 1006 	ldrb.w	r1, [r8, #6]
 80187f0:	910b      	str	r1, [sp, #44]	; 0x2c
 80187f2:	f898 100e 	ldrb.w	r1, [r8, #14]
 80187f6:	910a      	str	r1, [sp, #40]	; 0x28
 80187f8:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80187fc:	9109      	str	r1, [sp, #36]	; 0x24
 80187fe:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8018800:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8018804:	9305      	str	r3, [sp, #20]
 8018806:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018808:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801880a:	9206      	str	r2, [sp, #24]
 801880c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8018810:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8018814:	e9cd a601 	strd	sl, r6, [sp, #4]
 8018818:	442e      	add	r6, r5
 801881a:	b236      	sxth	r6, r6
 801881c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801881e:	9600      	str	r6, [sp, #0]
 8018820:	681a      	ldr	r2, [r3, #0]
 8018822:	9916      	ldr	r1, [sp, #88]	; 0x58
 8018824:	685b      	ldr	r3, [r3, #4]
 8018826:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018828:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801882a:	47b0      	blx	r6
 801882c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801882e:	3301      	adds	r3, #1
 8018830:	930e      	str	r3, [sp, #56]	; 0x38
 8018832:	e6e6      	b.n	8018602 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8018834:	2700      	movs	r7, #0
 8018836:	e7cd      	b.n	80187d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x22e>
 8018838:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801883a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801883c:	3501      	adds	r5, #1
 801883e:	429d      	cmp	r5, r3
 8018840:	f6bf af77 	bge.w	8018732 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8018844:	4659      	mov	r1, fp
 8018846:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8018848:	f7f2 f9ac 	bl	800aba4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801884c:	4604      	mov	r4, r0
 801884e:	b110      	cbz	r0, 8018856 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 8018850:	280a      	cmp	r0, #10
 8018852:	d1f2      	bne.n	801883a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8018854:	e76c      	b.n	8018730 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 8018856:	2400      	movs	r4, #0
 8018858:	e76b      	b.n	8018732 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801885a:	f1bb 0f00 	cmp.w	fp, #0
 801885e:	f43f af5c 	beq.w	801871a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x174>
 8018862:	e777      	b.n	8018754 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08018864 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8018864:	b530      	push	{r4, r5, lr}
 8018866:	8a44      	ldrh	r4, [r0, #18]
 8018868:	8ac5      	ldrh	r5, [r0, #22]
 801886a:	82c3      	strh	r3, [r0, #22]
 801886c:	442c      	add	r4, r5
 801886e:	1ae4      	subs	r4, r4, r3
 8018870:	8244      	strh	r4, [r0, #18]
 8018872:	8b03      	ldrh	r3, [r0, #24]
 8018874:	8a84      	ldrh	r4, [r0, #20]
 8018876:	4422      	add	r2, r4
 8018878:	440c      	add	r4, r1
 801887a:	1a59      	subs	r1, r3, r1
 801887c:	8342      	strh	r2, [r0, #26]
 801887e:	8284      	strh	r4, [r0, #20]
 8018880:	8301      	strh	r1, [r0, #24]
 8018882:	bd30      	pop	{r4, r5, pc}

08018884 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 8018884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018888:	7a43      	ldrb	r3, [r0, #9]
 801888a:	1eda      	subs	r2, r3, #3
 801888c:	b087      	sub	sp, #28
 801888e:	4604      	mov	r4, r0
 8018890:	b2d2      	uxtb	r2, r2
 8018892:	460f      	mov	r7, r1
 8018894:	2900      	cmp	r1, #0
 8018896:	d036      	beq.n	8018906 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8018898:	2a01      	cmp	r2, #1
 801889a:	d932      	bls.n	8018902 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 801889c:	1e58      	subs	r0, r3, #1
 801889e:	f1d0 0b00 	rsbs	fp, r0, #0
 80188a2:	eb4b 0b00 	adc.w	fp, fp, r0
 80188a6:	1e99      	subs	r1, r3, #2
 80188a8:	424b      	negs	r3, r1
 80188aa:	414b      	adcs	r3, r1
 80188ac:	9303      	str	r3, [sp, #12]
 80188ae:	2300      	movs	r3, #0
 80188b0:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80188b4:	2500      	movs	r5, #0
 80188b6:	8265      	strh	r5, [r4, #18]
 80188b8:	82a5      	strh	r5, [r4, #20]
 80188ba:	46a9      	mov	r9, r5
 80188bc:	f242 0a0b 	movw	sl, #8203	; 0x200b
 80188c0:	2300      	movs	r3, #0
 80188c2:	9305      	str	r3, [sp, #20]
 80188c4:	8823      	ldrh	r3, [r4, #0]
 80188c6:	2b20      	cmp	r3, #32
 80188c8:	d02b      	beq.n	8018922 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 80188ca:	eba3 020a 	sub.w	r2, r3, sl
 80188ce:	4256      	negs	r6, r2
 80188d0:	4156      	adcs	r6, r2
 80188d2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80188d6:	4293      	cmp	r3, r2
 80188d8:	d004      	beq.n	80188e4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80188da:	4553      	cmp	r3, sl
 80188dc:	bf16      	itet	ne
 80188de:	4699      	movne	r9, r3
 80188e0:	2601      	moveq	r6, #1
 80188e2:	2600      	movne	r6, #0
 80188e4:	ab05      	add	r3, sp, #20
 80188e6:	68e2      	ldr	r2, [r4, #12]
 80188e8:	7a21      	ldrb	r1, [r4, #8]
 80188ea:	6860      	ldr	r0, [r4, #4]
 80188ec:	f002 fe32 	bl	801b554 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80188f0:	8020      	strh	r0, [r4, #0]
 80188f2:	b9c8      	cbnz	r0, 8018928 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 80188f4:	8b22      	ldrh	r2, [r4, #24]
 80188f6:	2300      	movs	r3, #0
 80188f8:	4611      	mov	r1, r2
 80188fa:	4620      	mov	r0, r4
 80188fc:	f7ff ffb2 	bl	8018864 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8018900:	e066      	b.n	80189d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8018902:	468b      	mov	fp, r1
 8018904:	e7cf      	b.n	80188a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8018906:	3b01      	subs	r3, #1
 8018908:	2a01      	cmp	r2, #1
 801890a:	bf8c      	ite	hi
 801890c:	2200      	movhi	r2, #0
 801890e:	2201      	movls	r2, #1
 8018910:	2b01      	cmp	r3, #1
 8018912:	bf8c      	ite	hi
 8018914:	2300      	movhi	r3, #0
 8018916:	2301      	movls	r3, #1
 8018918:	9202      	str	r2, [sp, #8]
 801891a:	9301      	str	r3, [sp, #4]
 801891c:	9103      	str	r1, [sp, #12]
 801891e:	468b      	mov	fp, r1
 8018920:	e7c8      	b.n	80188b4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8018922:	4699      	mov	r9, r3
 8018924:	2601      	movs	r6, #1
 8018926:	e7dd      	b.n	80188e4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8018928:	8ae3      	ldrh	r3, [r4, #22]
 801892a:	280a      	cmp	r0, #10
 801892c:	f103 0301 	add.w	r3, r3, #1
 8018930:	82e3      	strh	r3, [r4, #22]
 8018932:	d0df      	beq.n	80188f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8018934:	9a05      	ldr	r2, [sp, #20]
 8018936:	bb42      	cbnz	r2, 801898a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8018938:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801893c:	4298      	cmp	r0, r3
 801893e:	d001      	beq.n	8018944 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8018940:	4550      	cmp	r0, sl
 8018942:	d1bd      	bne.n	80188c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8018944:	8823      	ldrh	r3, [r4, #0]
 8018946:	8b21      	ldrh	r1, [r4, #24]
 8018948:	2b20      	cmp	r3, #32
 801894a:	d001      	beq.n	8018950 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 801894c:	4553      	cmp	r3, sl
 801894e:	d131      	bne.n	80189b4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8018950:	2e00      	cmp	r6, #0
 8018952:	bf0a      	itet	eq
 8018954:	460d      	moveq	r5, r1
 8018956:	4630      	movne	r0, r6
 8018958:	2001      	moveq	r0, #1
 801895a:	440a      	add	r2, r1
 801895c:	8aa3      	ldrh	r3, [r4, #20]
 801895e:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8018962:	b292      	uxth	r2, r2
 8018964:	8322      	strh	r2, [r4, #24]
 8018966:	4413      	add	r3, r2
 8018968:	2f00      	cmp	r7, #0
 801896a:	d03a      	beq.n	80189e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 801896c:	f1bb 0f00 	cmp.w	fp, #0
 8018970:	d102      	bne.n	8018978 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8018972:	9903      	ldr	r1, [sp, #12]
 8018974:	b301      	cbz	r1, 80189b8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8018976:	b1f8      	cbz	r0, 80189b8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8018978:	8ba1      	ldrh	r1, [r4, #28]
 801897a:	4419      	add	r1, r3
 801897c:	458c      	cmp	ip, r1
 801897e:	da2a      	bge.n	80189d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8018980:	8a61      	ldrh	r1, [r4, #18]
 8018982:	b341      	cbz	r1, 80189d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8018984:	4563      	cmp	r3, ip
 8018986:	dd9b      	ble.n	80188c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8018988:	e01c      	b.n	80189c4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 801898a:	8893      	ldrh	r3, [r2, #4]
 801898c:	8023      	strh	r3, [r4, #0]
 801898e:	f892 800d 	ldrb.w	r8, [r2, #13]
 8018992:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8018996:	f408 7080 	and.w	r0, r8, #256	; 0x100
 801899a:	f892 800a 	ldrb.w	r8, [r2, #10]
 801899e:	ea48 0800 	orr.w	r8, r8, r0
 80189a2:	68e0      	ldr	r0, [r4, #12]
 80189a4:	6803      	ldr	r3, [r0, #0]
 80189a6:	4649      	mov	r1, r9
 80189a8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80189aa:	4798      	blx	r3
 80189ac:	eb08 0200 	add.w	r2, r8, r0
 80189b0:	b292      	uxth	r2, r2
 80189b2:	e7c7      	b.n	8018944 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 80189b4:	2000      	movs	r0, #0
 80189b6:	e7d0      	b.n	801895a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 80189b8:	4563      	cmp	r3, ip
 80189ba:	dd81      	ble.n	80188c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80189bc:	8a63      	ldrh	r3, [r4, #18]
 80189be:	2b00      	cmp	r3, #0
 80189c0:	f43f af7e 	beq.w	80188c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80189c4:	2301      	movs	r3, #1
 80189c6:	77a3      	strb	r3, [r4, #30]
 80189c8:	8ba2      	ldrh	r2, [r4, #28]
 80189ca:	8b63      	ldrh	r3, [r4, #26]
 80189cc:	4413      	add	r3, r2
 80189ce:	8363      	strh	r3, [r4, #26]
 80189d0:	b007      	add	sp, #28
 80189d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189d6:	2300      	movs	r3, #0
 80189d8:	4611      	mov	r1, r2
 80189da:	4620      	mov	r0, r4
 80189dc:	f7ff ff42 	bl	8018864 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80189e0:	e76e      	b.n	80188c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80189e2:	4563      	cmp	r3, ip
 80189e4:	dd14      	ble.n	8018a10 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 80189e6:	9b02      	ldr	r3, [sp, #8]
 80189e8:	b113      	cbz	r3, 80189f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 80189ea:	2301      	movs	r3, #1
 80189ec:	460a      	mov	r2, r1
 80189ee:	e783      	b.n	80188f8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 80189f0:	9b01      	ldr	r3, [sp, #4]
 80189f2:	2b00      	cmp	r3, #0
 80189f4:	f43f af64 	beq.w	80188c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80189f8:	2800      	cmp	r0, #0
 80189fa:	f47f af61 	bne.w	80188c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80189fe:	b116      	cbz	r6, 8018a06 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 8018a00:	2301      	movs	r3, #1
 8018a02:	462a      	mov	r2, r5
 8018a04:	e779      	b.n	80188fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8018a06:	8a63      	ldrh	r3, [r4, #18]
 8018a08:	2b00      	cmp	r3, #0
 8018a0a:	f43f af59 	beq.w	80188c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8018a0e:	e7df      	b.n	80189d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8018a10:	2800      	cmp	r0, #0
 8018a12:	f47f af55 	bne.w	80188c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8018a16:	2e00      	cmp	r6, #0
 8018a18:	f43f af52 	beq.w	80188c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8018a1c:	2301      	movs	r3, #1
 8018a1e:	462a      	mov	r2, r5
 8018a20:	e7db      	b.n	80189da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08018a22 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8018a22:	b530      	push	{r4, r5, lr}
 8018a24:	4605      	mov	r5, r0
 8018a26:	b08b      	sub	sp, #44	; 0x2c
 8018a28:	b191      	cbz	r1, 8018a50 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8018a2a:	e9cd 3100 	strd	r3, r1, [sp]
 8018a2e:	4613      	mov	r3, r2
 8018a30:	4601      	mov	r1, r0
 8018a32:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8018a36:	a802      	add	r0, sp, #8
 8018a38:	f7ff fd0c 	bl	8018454 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8018a3c:	2401      	movs	r4, #1
 8018a3e:	2100      	movs	r1, #0
 8018a40:	a802      	add	r0, sp, #8
 8018a42:	f7ff ff1f 	bl	8018884 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8018a46:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8018a4a:	b163      	cbz	r3, 8018a66 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8018a4c:	3401      	adds	r4, #1
 8018a4e:	e7f6      	b.n	8018a3e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8018a50:	f002 fe7a 	bl	801b748 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018a54:	2401      	movs	r4, #1
 8018a56:	280a      	cmp	r0, #10
 8018a58:	4628      	mov	r0, r5
 8018a5a:	bf08      	it	eq
 8018a5c:	3401      	addeq	r4, #1
 8018a5e:	f002 fe73 	bl	801b748 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018a62:	2800      	cmp	r0, #0
 8018a64:	d1f7      	bne.n	8018a56 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8018a66:	b2a0      	uxth	r0, r4
 8018a68:	b00b      	add	sp, #44	; 0x2c
 8018a6a:	bd30      	pop	{r4, r5, pc}

08018a6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8018a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a70:	b0e5      	sub	sp, #404	; 0x194
 8018a72:	4689      	mov	r9, r1
 8018a74:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8018a78:	900a      	str	r0, [sp, #40]	; 0x28
 8018a7a:	461c      	mov	r4, r3
 8018a7c:	f1ba 0f00 	cmp.w	sl, #0
 8018a80:	f000 80b4 	beq.w	8018bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018a84:	681b      	ldr	r3, [r3, #0]
 8018a86:	2b00      	cmp	r3, #0
 8018a88:	f000 80b0 	beq.w	8018bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018a8c:	7ba3      	ldrb	r3, [r4, #14]
 8018a8e:	2b00      	cmp	r3, #0
 8018a90:	f000 80ac 	beq.w	8018bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018a94:	6810      	ldr	r0, [r2, #0]
 8018a96:	6851      	ldr	r1, [r2, #4]
 8018a98:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8018a9c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8018aa0:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 8018aa4:	4643      	mov	r3, r8
 8018aa6:	c303      	stmia	r3!, {r0, r1}
 8018aa8:	2500      	movs	r5, #0
 8018aaa:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8018aae:	79a2      	ldrb	r2, [r4, #6]
 8018ab0:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8018ab4:	a90f      	add	r1, sp, #60	; 0x3c
 8018ab6:	4640      	mov	r0, r8
 8018ab8:	950f      	str	r5, [sp, #60]	; 0x3c
 8018aba:	f7ff fd43 	bl	8018544 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8018abe:	a90f      	add	r1, sp, #60	; 0x3c
 8018ac0:	4608      	mov	r0, r1
 8018ac2:	79a2      	ldrb	r2, [r4, #6]
 8018ac4:	af19      	add	r7, sp, #100	; 0x64
 8018ac6:	f7ff fd3d 	bl	8018544 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8018aca:	4638      	mov	r0, r7
 8018acc:	f002 f9c6 	bl	801ae5c <_ZN8touchgfx12TextProviderC1Ev>
 8018ad0:	6820      	ldr	r0, [r4, #0]
 8018ad2:	6803      	ldr	r3, [r0, #0]
 8018ad4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018ad6:	4798      	blx	r3
 8018ad8:	4606      	mov	r6, r0
 8018ada:	6820      	ldr	r0, [r4, #0]
 8018adc:	6803      	ldr	r3, [r0, #0]
 8018ade:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018ae0:	4798      	blx	r3
 8018ae2:	4633      	mov	r3, r6
 8018ae4:	9000      	str	r0, [sp, #0]
 8018ae6:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8018ae8:	4651      	mov	r1, sl
 8018aea:	4638      	mov	r0, r7
 8018aec:	f002 fa22 	bl	801af34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018af0:	6820      	ldr	r0, [r4, #0]
 8018af2:	7923      	ldrb	r3, [r4, #4]
 8018af4:	9308      	str	r3, [sp, #32]
 8018af6:	6803      	ldr	r3, [r0, #0]
 8018af8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8018afa:	4798      	blx	r3
 8018afc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8018b00:	181e      	adds	r6, r3, r0
 8018b02:	42ae      	cmp	r6, r5
 8018b04:	dd06      	ble.n	8018b14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8018b06:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8018b0a:	4282      	cmp	r2, r0
 8018b0c:	bfa4      	itt	ge
 8018b0e:	189d      	addge	r5, r3, r2
 8018b10:	fb95 f5f6 	sdivge	r5, r5, r6
 8018b14:	a832      	add	r0, sp, #200	; 0xc8
 8018b16:	f002 f9a1 	bl	801ae5c <_ZN8touchgfx12TextProviderC1Ev>
 8018b1a:	7c23      	ldrb	r3, [r4, #16]
 8018b1c:	b17b      	cbz	r3, 8018b3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8018b1e:	6820      	ldr	r0, [r4, #0]
 8018b20:	6803      	ldr	r3, [r0, #0]
 8018b22:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018b24:	4798      	blx	r3
 8018b26:	4683      	mov	fp, r0
 8018b28:	6820      	ldr	r0, [r4, #0]
 8018b2a:	6803      	ldr	r3, [r0, #0]
 8018b2c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018b2e:	4798      	blx	r3
 8018b30:	465b      	mov	r3, fp
 8018b32:	9000      	str	r0, [sp, #0]
 8018b34:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8018b36:	4651      	mov	r1, sl
 8018b38:	a832      	add	r0, sp, #200	; 0xc8
 8018b3a:	f002 f9fb 	bl	801af34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018b3e:	7be1      	ldrb	r1, [r4, #15]
 8018b40:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8018b44:	7963      	ldrb	r3, [r4, #5]
 8018b46:	1a52      	subs	r2, r2, r1
 8018b48:	7c21      	ldrb	r1, [r4, #16]
 8018b4a:	9101      	str	r1, [sp, #4]
 8018b4c:	6821      	ldr	r1, [r4, #0]
 8018b4e:	9100      	str	r1, [sp, #0]
 8018b50:	b292      	uxth	r2, r2
 8018b52:	a932      	add	r1, sp, #200	; 0xc8
 8018b54:	a811      	add	r0, sp, #68	; 0x44
 8018b56:	f7ff fc7d 	bl	8018454 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8018b5a:	7c23      	ldrb	r3, [r4, #16]
 8018b5c:	b9bb      	cbnz	r3, 8018b8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8018b5e:	fa1f fa86 	uxth.w	sl, r6
 8018b62:	2d00      	cmp	r5, #0
 8018b64:	dd45      	ble.n	8018bf2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8018b66:	4638      	mov	r0, r7
 8018b68:	f002 fdee 	bl	801b748 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018b6c:	2800      	cmp	r0, #0
 8018b6e:	d03d      	beq.n	8018bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018b70:	280a      	cmp	r0, #10
 8018b72:	d1f6      	bne.n	8018b62 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8018b74:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8018b78:	4453      	add	r3, sl
 8018b7a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8018b7e:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8018b82:	eba3 030a 	sub.w	r3, r3, sl
 8018b86:	3d01      	subs	r5, #1
 8018b88:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8018b8c:	e7e9      	b.n	8018b62 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8018b8e:	0073      	lsls	r3, r6, #1
 8018b90:	9309      	str	r3, [sp, #36]	; 0x24
 8018b92:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8018b96:	fa1f fa86 	uxth.w	sl, r6
 8018b9a:	2d00      	cmp	r5, #0
 8018b9c:	dd29      	ble.n	8018bf2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8018b9e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8018ba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018ba4:	428b      	cmp	r3, r1
 8018ba6:	bfd4      	ite	le
 8018ba8:	2100      	movle	r1, #0
 8018baa:	2101      	movgt	r1, #1
 8018bac:	a811      	add	r0, sp, #68	; 0x44
 8018bae:	f7ff fe69 	bl	8018884 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8018bb2:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8018bb6:	3b01      	subs	r3, #1
 8018bb8:	b29b      	uxth	r3, r3
 8018bba:	455b      	cmp	r3, fp
 8018bbc:	930b      	str	r3, [sp, #44]	; 0x2c
 8018bbe:	d005      	beq.n	8018bcc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 8018bc0:	7961      	ldrb	r1, [r4, #5]
 8018bc2:	4638      	mov	r0, r7
 8018bc4:	f7f1 ffee 	bl	800aba4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018bc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018bca:	e7f4      	b.n	8018bb6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 8018bcc:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8018bd0:	4453      	add	r3, sl
 8018bd2:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8018bd6:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8018bda:	eba3 030a 	sub.w	r3, r3, sl
 8018bde:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8018be2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018be6:	3d01      	subs	r5, #1
 8018be8:	2b00      	cmp	r3, #0
 8018bea:	d1d6      	bne.n	8018b9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 8018bec:	b065      	add	sp, #404	; 0x194
 8018bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bf2:	0075      	lsls	r5, r6, #1
 8018bf4:	f04f 0a00 	mov.w	sl, #0
 8018bf8:	7c23      	ldrb	r3, [r4, #16]
 8018bfa:	2b00      	cmp	r3, #0
 8018bfc:	d066      	beq.n	8018ccc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8018bfe:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8018c02:	428d      	cmp	r5, r1
 8018c04:	bfd4      	ite	le
 8018c06:	2100      	movle	r1, #0
 8018c08:	2101      	movgt	r1, #1
 8018c0a:	a811      	add	r0, sp, #68	; 0x44
 8018c0c:	f7ff fe3a 	bl	8018884 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8018c10:	9b08      	ldr	r3, [sp, #32]
 8018c12:	2b00      	cmp	r3, #0
 8018c14:	d055      	beq.n	8018cc2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8018c16:	f894 b010 	ldrb.w	fp, [r4, #16]
 8018c1a:	2264      	movs	r2, #100	; 0x64
 8018c1c:	4639      	mov	r1, r7
 8018c1e:	a84b      	add	r0, sp, #300	; 0x12c
 8018c20:	f013 fb48 	bl	802c2b4 <memcpy>
 8018c24:	f1bb 0f00 	cmp.w	fp, #0
 8018c28:	d058      	beq.n	8018cdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8018c2a:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018c2e:	7922      	ldrb	r2, [r4, #4]
 8018c30:	2a01      	cmp	r2, #1
 8018c32:	d13c      	bne.n	8018cae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8018c34:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8018c38:	1ac0      	subs	r0, r0, r3
 8018c3a:	2302      	movs	r3, #2
 8018c3c:	fb90 f0f3 	sdiv	r0, r0, r3
 8018c40:	b200      	sxth	r0, r0
 8018c42:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8018c46:	4418      	add	r0, r3
 8018c48:	7c23      	ldrb	r3, [r4, #16]
 8018c4a:	b200      	sxth	r0, r0
 8018c4c:	2b00      	cmp	r3, #0
 8018c4e:	d03a      	beq.n	8018cc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8018c50:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8018c54:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8018c58:	9000      	str	r0, [sp, #0]
 8018c5a:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8018c5e:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8018c62:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018c64:	e9cd a703 	strd	sl, r7, [sp, #12]
 8018c68:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8018c6c:	464a      	mov	r2, r9
 8018c6e:	2100      	movs	r1, #0
 8018c70:	f7ff fc99 	bl	80185a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8018c74:	2800      	cmp	r0, #0
 8018c76:	d1b9      	bne.n	8018bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018c78:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8018c7c:	b2b2      	uxth	r2, r6
 8018c7e:	4611      	mov	r1, r2
 8018c80:	4413      	add	r3, r2
 8018c82:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8018c86:	1a52      	subs	r2, r2, r1
 8018c88:	7c21      	ldrb	r1, [r4, #16]
 8018c8a:	b21b      	sxth	r3, r3
 8018c8c:	b212      	sxth	r2, r2
 8018c8e:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8018c92:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8018c96:	b109      	cbz	r1, 8018c9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8018c98:	42b2      	cmp	r2, r6
 8018c9a:	dba7      	blt.n	8018bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018c9c:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8018ca0:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 8018ca4:	440a      	add	r2, r1
 8018ca6:	b212      	sxth	r2, r2
 8018ca8:	4293      	cmp	r3, r2
 8018caa:	dda5      	ble.n	8018bf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8018cac:	e79e      	b.n	8018bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018cae:	2a02      	cmp	r2, #2
 8018cb0:	d105      	bne.n	8018cbe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8018cb2:	7be2      	ldrb	r2, [r4, #15]
 8018cb4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8018cb8:	1a80      	subs	r0, r0, r2
 8018cba:	1ac0      	subs	r0, r0, r3
 8018cbc:	e7c0      	b.n	8018c40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8018cbe:	2000      	movs	r0, #0
 8018cc0:	e7bf      	b.n	8018c42 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8018cc2:	7be0      	ldrb	r0, [r4, #15]
 8018cc4:	e7bd      	b.n	8018c42 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8018cc6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018cca:	e7c3      	b.n	8018c54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8018ccc:	9b08      	ldr	r3, [sp, #32]
 8018cce:	2b00      	cmp	r3, #0
 8018cd0:	d0f7      	beq.n	8018cc2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8018cd2:	2264      	movs	r2, #100	; 0x64
 8018cd4:	4639      	mov	r1, r7
 8018cd6:	a84b      	add	r0, sp, #300	; 0x12c
 8018cd8:	f013 faec 	bl	802c2b4 <memcpy>
 8018cdc:	2300      	movs	r3, #0
 8018cde:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018ce2:	6821      	ldr	r1, [r4, #0]
 8018ce4:	a84b      	add	r0, sp, #300	; 0x12c
 8018ce6:	f7ff fbf1 	bl	80184cc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8018cea:	b203      	sxth	r3, r0
 8018cec:	e79f      	b.n	8018c2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08018cee <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8018cee:	b510      	push	{r4, lr}
 8018cf0:	2b02      	cmp	r3, #2
 8018cf2:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018cf6:	d00b      	beq.n	8018d10 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 8018cf8:	2b03      	cmp	r3, #3
 8018cfa:	d00e      	beq.n	8018d1a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 8018cfc:	2b01      	cmp	r3, #1
 8018cfe:	d001      	beq.n	8018d04 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 8018d00:	1860      	adds	r0, r4, r1
 8018d02:	bd10      	pop	{r4, pc}
 8018d04:	8880      	ldrh	r0, [r0, #4]
 8018d06:	4420      	add	r0, r4
 8018d08:	b200      	sxth	r0, r0
 8018d0a:	1a80      	subs	r0, r0, r2
 8018d0c:	3801      	subs	r0, #1
 8018d0e:	e7f8      	b.n	8018d02 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 8018d10:	8880      	ldrh	r0, [r0, #4]
 8018d12:	4420      	add	r0, r4
 8018d14:	b200      	sxth	r0, r0
 8018d16:	1a40      	subs	r0, r0, r1
 8018d18:	e7f8      	b.n	8018d0c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8018d1a:	18a0      	adds	r0, r4, r2
 8018d1c:	e7f1      	b.n	8018d02 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

08018d1e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8018d1e:	b510      	push	{r4, lr}
 8018d20:	2b02      	cmp	r3, #2
 8018d22:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8018d26:	d006      	beq.n	8018d36 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 8018d28:	2b03      	cmp	r3, #3
 8018d2a:	d00a      	beq.n	8018d42 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8018d2c:	2b01      	cmp	r3, #1
 8018d2e:	bf14      	ite	ne
 8018d30:	18a0      	addne	r0, r4, r2
 8018d32:	1860      	addeq	r0, r4, r1
 8018d34:	bd10      	pop	{r4, pc}
 8018d36:	88c0      	ldrh	r0, [r0, #6]
 8018d38:	4420      	add	r0, r4
 8018d3a:	b200      	sxth	r0, r0
 8018d3c:	1a80      	subs	r0, r0, r2
 8018d3e:	3801      	subs	r0, #1
 8018d40:	e7f8      	b.n	8018d34 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 8018d42:	88c0      	ldrh	r0, [r0, #6]
 8018d44:	4420      	add	r0, r4
 8018d46:	b200      	sxth	r0, r0
 8018d48:	1a40      	subs	r0, r0, r1
 8018d4a:	e7f8      	b.n	8018d3e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

08018d4c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8018d4c:	4b01      	ldr	r3, [pc, #4]	; (8018d54 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8018d4e:	2200      	movs	r2, #0
 8018d50:	601a      	str	r2, [r3, #0]
 8018d52:	4770      	bx	lr
 8018d54:	2001e1e8 	.word	0x2001e1e8

08018d58 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8018d58:	4603      	mov	r3, r0
 8018d5a:	b1c8      	cbz	r0, 8018d90 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8018d5c:	0c02      	lsrs	r2, r0, #16
 8018d5e:	0412      	lsls	r2, r2, #16
 8018d60:	b9a2      	cbnz	r2, 8018d8c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8018d62:	0403      	lsls	r3, r0, #16
 8018d64:	2010      	movs	r0, #16
 8018d66:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8018d6a:	bf04      	itt	eq
 8018d6c:	021b      	lsleq	r3, r3, #8
 8018d6e:	3008      	addeq	r0, #8
 8018d70:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8018d74:	bf04      	itt	eq
 8018d76:	011b      	lsleq	r3, r3, #4
 8018d78:	3004      	addeq	r0, #4
 8018d7a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8018d7e:	bf04      	itt	eq
 8018d80:	009b      	lsleq	r3, r3, #2
 8018d82:	3002      	addeq	r0, #2
 8018d84:	2b00      	cmp	r3, #0
 8018d86:	db04      	blt.n	8018d92 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8018d88:	3001      	adds	r0, #1
 8018d8a:	4770      	bx	lr
 8018d8c:	2000      	movs	r0, #0
 8018d8e:	e7ea      	b.n	8018d66 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8018d90:	2020      	movs	r0, #32
 8018d92:	4770      	bx	lr

08018d94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8018d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d98:	b087      	sub	sp, #28
 8018d9a:	4681      	mov	r9, r0
 8018d9c:	4698      	mov	r8, r3
 8018d9e:	4610      	mov	r0, r2
 8018da0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8018da4:	460d      	mov	r5, r1
 8018da6:	b981      	cbnz	r1, 8018dca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8018da8:	b14b      	cbz	r3, 8018dbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8018daa:	460b      	mov	r3, r1
 8018dac:	e9cd 4700 	strd	r4, r7, [sp]
 8018db0:	464a      	mov	r2, r9
 8018db2:	4641      	mov	r1, r8
 8018db4:	f7ff ffee 	bl	8018d94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018db8:	b007      	add	sp, #28
 8018dba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018dbe:	f04f 33ff 	mov.w	r3, #4294967295
 8018dc2:	603b      	str	r3, [r7, #0]
 8018dc4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8018dc8:	e7f6      	b.n	8018db8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8018dca:	fa32 fa01 	lsrs.w	sl, r2, r1
 8018dce:	d107      	bne.n	8018de0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8018dd0:	fb09 f602 	mul.w	r6, r9, r2
 8018dd4:	fbb6 f0f4 	udiv	r0, r6, r4
 8018dd8:	fb04 6610 	mls	r6, r4, r0, r6
 8018ddc:	603e      	str	r6, [r7, #0]
 8018dde:	e7eb      	b.n	8018db8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8018de0:	2601      	movs	r6, #1
 8018de2:	408e      	lsls	r6, r1
 8018de4:	3e01      	subs	r6, #1
 8018de6:	4016      	ands	r6, r2
 8018de8:	fa09 fb01 	lsl.w	fp, r9, r1
 8018dec:	4630      	mov	r0, r6
 8018dee:	fbbb f3f4 	udiv	r3, fp, r4
 8018df2:	9302      	str	r3, [sp, #8]
 8018df4:	fb0a f303 	mul.w	r3, sl, r3
 8018df8:	9303      	str	r3, [sp, #12]
 8018dfa:	f7ff ffad 	bl	8018d58 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018dfe:	464a      	mov	r2, r9
 8018e00:	460b      	mov	r3, r1
 8018e02:	e9cd 4700 	strd	r4, r7, [sp]
 8018e06:	4601      	mov	r1, r0
 8018e08:	4630      	mov	r0, r6
 8018e0a:	f7ff ffc3 	bl	8018d94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018e0e:	9b02      	ldr	r3, [sp, #8]
 8018e10:	fb04 bb13 	mls	fp, r4, r3, fp
 8018e14:	4606      	mov	r6, r0
 8018e16:	4658      	mov	r0, fp
 8018e18:	eb05 0108 	add.w	r1, r5, r8
 8018e1c:	f7ff ff9c 	bl	8018d58 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018e20:	ab05      	add	r3, sp, #20
 8018e22:	e9cd 4300 	strd	r4, r3, [sp]
 8018e26:	465a      	mov	r2, fp
 8018e28:	4603      	mov	r3, r0
 8018e2a:	4650      	mov	r0, sl
 8018e2c:	f7ff ffb2 	bl	8018d94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018e30:	6839      	ldr	r1, [r7, #0]
 8018e32:	9a05      	ldr	r2, [sp, #20]
 8018e34:	9b03      	ldr	r3, [sp, #12]
 8018e36:	4411      	add	r1, r2
 8018e38:	fbb1 f2f4 	udiv	r2, r1, r4
 8018e3c:	18d3      	adds	r3, r2, r3
 8018e3e:	441e      	add	r6, r3
 8018e40:	fb04 1412 	mls	r4, r4, r2, r1
 8018e44:	4430      	add	r0, r6
 8018e46:	603c      	str	r4, [r7, #0]
 8018e48:	e7b6      	b.n	8018db8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08018e4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8018e4a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018e4e:	b085      	sub	sp, #20
 8018e50:	f1b0 0900 	subs.w	r9, r0, #0
 8018e54:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018e56:	461d      	mov	r5, r3
 8018e58:	bfbf      	itttt	lt
 8018e5a:	6823      	ldrlt	r3, [r4, #0]
 8018e5c:	425b      	neglt	r3, r3
 8018e5e:	f1c9 0900 	rsblt	r9, r9, #0
 8018e62:	6023      	strlt	r3, [r4, #0]
 8018e64:	bfb4      	ite	lt
 8018e66:	f04f 36ff 	movlt.w	r6, #4294967295
 8018e6a:	2601      	movge	r6, #1
 8018e6c:	2a00      	cmp	r2, #0
 8018e6e:	4617      	mov	r7, r2
 8018e70:	da04      	bge.n	8018e7c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8018e72:	6823      	ldr	r3, [r4, #0]
 8018e74:	425b      	negs	r3, r3
 8018e76:	4257      	negs	r7, r2
 8018e78:	4276      	negs	r6, r6
 8018e7a:	6023      	str	r3, [r4, #0]
 8018e7c:	2d00      	cmp	r5, #0
 8018e7e:	4638      	mov	r0, r7
 8018e80:	bfba      	itte	lt
 8018e82:	426d      	neglt	r5, r5
 8018e84:	f04f 38ff 	movlt.w	r8, #4294967295
 8018e88:	f04f 0801 	movge.w	r8, #1
 8018e8c:	f7ff ff64 	bl	8018d58 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018e90:	ab03      	add	r3, sp, #12
 8018e92:	e9cd 5300 	strd	r5, r3, [sp]
 8018e96:	463a      	mov	r2, r7
 8018e98:	4603      	mov	r3, r0
 8018e9a:	4648      	mov	r0, r9
 8018e9c:	f7ff ff7a 	bl	8018d94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018ea0:	6823      	ldr	r3, [r4, #0]
 8018ea2:	9a03      	ldr	r2, [sp, #12]
 8018ea4:	4546      	cmp	r6, r8
 8018ea6:	441a      	add	r2, r3
 8018ea8:	fb92 f3f5 	sdiv	r3, r2, r5
 8018eac:	4418      	add	r0, r3
 8018eae:	bf18      	it	ne
 8018eb0:	4240      	negne	r0, r0
 8018eb2:	fb05 2313 	mls	r3, r5, r3, r2
 8018eb6:	1c72      	adds	r2, r6, #1
 8018eb8:	6023      	str	r3, [r4, #0]
 8018eba:	d105      	bne.n	8018ec8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8018ebc:	2b00      	cmp	r3, #0
 8018ebe:	f1c3 0200 	rsb	r2, r3, #0
 8018ec2:	db0b      	blt.n	8018edc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8018ec4:	6022      	str	r2, [r4, #0]
 8018ec6:	e006      	b.n	8018ed6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018ec8:	2e01      	cmp	r6, #1
 8018eca:	d104      	bne.n	8018ed6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018ecc:	2b00      	cmp	r3, #0
 8018ece:	da02      	bge.n	8018ed6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018ed0:	442b      	add	r3, r5
 8018ed2:	3801      	subs	r0, #1
 8018ed4:	6023      	str	r3, [r4, #0]
 8018ed6:	b005      	add	sp, #20
 8018ed8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018edc:	3801      	subs	r0, #1
 8018ede:	1b52      	subs	r2, r2, r5
 8018ee0:	e7f0      	b.n	8018ec4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08018ee4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8018ee4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8018ee8:	4c1c      	ldr	r4, [pc, #112]	; (8018f5c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8018eea:	6807      	ldr	r7, [r0, #0]
 8018eec:	69a3      	ldr	r3, [r4, #24]
 8018eee:	4605      	mov	r5, r0
 8018ef0:	b92b      	cbnz	r3, 8018efe <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8018ef2:	6840      	ldr	r0, [r0, #4]
 8018ef4:	e9c5 7000 	strd	r7, r0, [r5]
 8018ef8:	b004      	add	sp, #16
 8018efa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018efe:	68a2      	ldr	r2, [r4, #8]
 8018f00:	6820      	ldr	r0, [r4, #0]
 8018f02:	ae04      	add	r6, sp, #16
 8018f04:	f04f 0802 	mov.w	r8, #2
 8018f08:	fb93 f1f8 	sdiv	r1, r3, r8
 8018f0c:	440a      	add	r2, r1
 8018f0e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8018f12:	69e1      	ldr	r1, [r4, #28]
 8018f14:	9600      	str	r6, [sp, #0]
 8018f16:	463a      	mov	r2, r7
 8018f18:	f7ff ff97 	bl	8018e4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018f1c:	69a3      	ldr	r3, [r4, #24]
 8018f1e:	686a      	ldr	r2, [r5, #4]
 8018f20:	6a21      	ldr	r1, [r4, #32]
 8018f22:	9600      	str	r6, [sp, #0]
 8018f24:	4607      	mov	r7, r0
 8018f26:	6860      	ldr	r0, [r4, #4]
 8018f28:	f7ff ff8f 	bl	8018e4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018f2c:	6962      	ldr	r2, [r4, #20]
 8018f2e:	69a3      	ldr	r3, [r4, #24]
 8018f30:	fb93 f8f8 	sdiv	r8, r3, r8
 8018f34:	4442      	add	r2, r8
 8018f36:	9203      	str	r2, [sp, #12]
 8018f38:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8018f3a:	682a      	ldr	r2, [r5, #0]
 8018f3c:	9600      	str	r6, [sp, #0]
 8018f3e:	4407      	add	r7, r0
 8018f40:	68e0      	ldr	r0, [r4, #12]
 8018f42:	f7ff ff82 	bl	8018e4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018f46:	9600      	str	r6, [sp, #0]
 8018f48:	4680      	mov	r8, r0
 8018f4a:	69a3      	ldr	r3, [r4, #24]
 8018f4c:	686a      	ldr	r2, [r5, #4]
 8018f4e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8018f50:	6920      	ldr	r0, [r4, #16]
 8018f52:	f7ff ff7a 	bl	8018e4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018f56:	4440      	add	r0, r8
 8018f58:	e7cc      	b.n	8018ef4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8018f5a:	bf00      	nop
 8018f5c:	2001e1ec 	.word	0x2001e1ec

08018f60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8018f60:	4b07      	ldr	r3, [pc, #28]	; (8018f80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8018f62:	781b      	ldrb	r3, [r3, #0]
 8018f64:	2b01      	cmp	r3, #1
 8018f66:	d109      	bne.n	8018f7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8018f68:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018f6c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018f70:	8003      	strh	r3, [r0, #0]
 8018f72:	4b04      	ldr	r3, [pc, #16]	; (8018f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8018f74:	881b      	ldrh	r3, [r3, #0]
 8018f76:	3b01      	subs	r3, #1
 8018f78:	1a9b      	subs	r3, r3, r2
 8018f7a:	800b      	strh	r3, [r1, #0]
 8018f7c:	4770      	bx	lr
 8018f7e:	bf00      	nop
 8018f80:	2001e1b8 	.word	0x2001e1b8
 8018f84:	2001e1b4 	.word	0x2001e1b4

08018f88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8018f88:	b510      	push	{r4, lr}
 8018f8a:	4b07      	ldr	r3, [pc, #28]	; (8018fa8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8018f8c:	781b      	ldrb	r3, [r3, #0]
 8018f8e:	2b01      	cmp	r3, #1
 8018f90:	d108      	bne.n	8018fa4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8018f92:	4b06      	ldr	r3, [pc, #24]	; (8018fac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8018f94:	880c      	ldrh	r4, [r1, #0]
 8018f96:	881b      	ldrh	r3, [r3, #0]
 8018f98:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018f9c:	3b01      	subs	r3, #1
 8018f9e:	1b1b      	subs	r3, r3, r4
 8018fa0:	8003      	strh	r3, [r0, #0]
 8018fa2:	800a      	strh	r2, [r1, #0]
 8018fa4:	bd10      	pop	{r4, pc}
 8018fa6:	bf00      	nop
 8018fa8:	2001e1b8 	.word	0x2001e1b8
 8018fac:	2001e1b4 	.word	0x2001e1b4

08018fb0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8018fb0:	b510      	push	{r4, lr}
 8018fb2:	4b0a      	ldr	r3, [pc, #40]	; (8018fdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8018fb4:	781b      	ldrb	r3, [r3, #0]
 8018fb6:	2b01      	cmp	r3, #1
 8018fb8:	d10e      	bne.n	8018fd8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8018fba:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8018fbe:	8843      	ldrh	r3, [r0, #2]
 8018fc0:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018fc4:	8044      	strh	r4, [r0, #2]
 8018fc6:	18ca      	adds	r2, r1, r3
 8018fc8:	4b05      	ldr	r3, [pc, #20]	; (8018fe0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8018fca:	881b      	ldrh	r3, [r3, #0]
 8018fcc:	1a9b      	subs	r3, r3, r2
 8018fce:	8003      	strh	r3, [r0, #0]
 8018fd0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018fd4:	80c3      	strh	r3, [r0, #6]
 8018fd6:	8081      	strh	r1, [r0, #4]
 8018fd8:	bd10      	pop	{r4, pc}
 8018fda:	bf00      	nop
 8018fdc:	2001e1b8 	.word	0x2001e1b8
 8018fe0:	2001e1b4 	.word	0x2001e1b4

08018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8018fe4:	4b08      	ldr	r3, [pc, #32]	; (8019008 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8018fe6:	781b      	ldrb	r3, [r3, #0]
 8018fe8:	2b01      	cmp	r3, #1
 8018fea:	d10c      	bne.n	8019006 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8018fec:	8803      	ldrh	r3, [r0, #0]
 8018fee:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8018ff2:	8842      	ldrh	r2, [r0, #2]
 8018ff4:	8002      	strh	r2, [r0, #0]
 8018ff6:	185a      	adds	r2, r3, r1
 8018ff8:	4b04      	ldr	r3, [pc, #16]	; (801900c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8018ffa:	881b      	ldrh	r3, [r3, #0]
 8018ffc:	1a9b      	subs	r3, r3, r2
 8018ffe:	8043      	strh	r3, [r0, #2]
 8019000:	88c3      	ldrh	r3, [r0, #6]
 8019002:	8083      	strh	r3, [r0, #4]
 8019004:	80c1      	strh	r1, [r0, #6]
 8019006:	4770      	bx	lr
 8019008:	2001e1b8 	.word	0x2001e1b8
 801900c:	2001e1b4 	.word	0x2001e1b4

08019010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8019010:	b510      	push	{r4, lr}
 8019012:	4b07      	ldr	r3, [pc, #28]	; (8019030 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8019014:	781b      	ldrb	r3, [r3, #0]
 8019016:	2b01      	cmp	r3, #1
 8019018:	d108      	bne.n	801902c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801901a:	f9b1 3000 	ldrsh.w	r3, [r1]
 801901e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8019022:	8003      	strh	r3, [r0, #0]
 8019024:	8893      	ldrh	r3, [r2, #4]
 8019026:	3b01      	subs	r3, #1
 8019028:	1b1b      	subs	r3, r3, r4
 801902a:	800b      	strh	r3, [r1, #0]
 801902c:	bd10      	pop	{r4, pc}
 801902e:	bf00      	nop
 8019030:	2001e1b8 	.word	0x2001e1b8

08019034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8019034:	b510      	push	{r4, lr}
 8019036:	4b0a      	ldr	r3, [pc, #40]	; (8019060 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8019038:	781b      	ldrb	r3, [r3, #0]
 801903a:	2b01      	cmp	r3, #1
 801903c:	460a      	mov	r2, r1
 801903e:	d10d      	bne.n	801905c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8019040:	8881      	ldrh	r1, [r0, #4]
 8019042:	8803      	ldrh	r3, [r0, #0]
 8019044:	440b      	add	r3, r1
 8019046:	4601      	mov	r1, r0
 8019048:	3b01      	subs	r3, #1
 801904a:	f821 3b02 	strh.w	r3, [r1], #2
 801904e:	f7ff ffdf 	bl	8019010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8019052:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8019056:	88c2      	ldrh	r2, [r0, #6]
 8019058:	8082      	strh	r2, [r0, #4]
 801905a:	80c3      	strh	r3, [r0, #6]
 801905c:	bd10      	pop	{r4, pc}
 801905e:	bf00      	nop
 8019060:	2001e1b8 	.word	0x2001e1b8

08019064 <_ZN8touchgfx11Application13requestRedrawEv>:
 8019064:	4b06      	ldr	r3, [pc, #24]	; (8019080 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8019066:	f9b3 2000 	ldrsh.w	r2, [r3]
 801906a:	4b06      	ldr	r3, [pc, #24]	; (8019084 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801906c:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8019070:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019074:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8019078:	2100      	movs	r1, #0
 801907a:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 801907e:	4770      	bx	lr
 8019080:	2001e1b4 	.word	0x2001e1b4
 8019084:	2001e1b6 	.word	0x2001e1b6

08019088 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8019088:	4b03      	ldr	r3, [pc, #12]	; (8019098 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801908a:	6818      	ldr	r0, [r3, #0]
 801908c:	b110      	cbz	r0, 8019094 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801908e:	6803      	ldr	r3, [r0, #0]
 8019090:	699b      	ldr	r3, [r3, #24]
 8019092:	4718      	bx	r3
 8019094:	4770      	bx	lr
 8019096:	bf00      	nop
 8019098:	2001e21c 	.word	0x2001e21c

0801909c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801909c:	4770      	bx	lr
	...

080190a0 <_ZN8touchgfx11Application4drawEv>:
 80190a0:	b507      	push	{r0, r1, r2, lr}
 80190a2:	4b09      	ldr	r3, [pc, #36]	; (80190c8 <_ZN8touchgfx11Application4drawEv+0x28>)
 80190a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80190a8:	4b08      	ldr	r3, [pc, #32]	; (80190cc <_ZN8touchgfx11Application4drawEv+0x2c>)
 80190aa:	f8ad 2004 	strh.w	r2, [sp, #4]
 80190ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 80190b2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80190b6:	6803      	ldr	r3, [r0, #0]
 80190b8:	2100      	movs	r1, #0
 80190ba:	9100      	str	r1, [sp, #0]
 80190bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80190be:	4669      	mov	r1, sp
 80190c0:	4798      	blx	r3
 80190c2:	b003      	add	sp, #12
 80190c4:	f85d fb04 	ldr.w	pc, [sp], #4
 80190c8:	2001e1b4 	.word	0x2001e1b4
 80190cc:	2001e1b6 	.word	0x2001e1b6

080190d0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80190d0:	4b03      	ldr	r3, [pc, #12]	; (80190e0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80190d2:	6818      	ldr	r0, [r3, #0]
 80190d4:	b110      	cbz	r0, 80190dc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80190d6:	6803      	ldr	r3, [r0, #0]
 80190d8:	69db      	ldr	r3, [r3, #28]
 80190da:	4718      	bx	r3
 80190dc:	4770      	bx	lr
 80190de:	bf00      	nop
 80190e0:	2001e21c 	.word	0x2001e21c

080190e4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80190e4:	4b03      	ldr	r3, [pc, #12]	; (80190f4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80190e6:	6818      	ldr	r0, [r3, #0]
 80190e8:	b110      	cbz	r0, 80190f0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80190ea:	6803      	ldr	r3, [r0, #0]
 80190ec:	6a1b      	ldr	r3, [r3, #32]
 80190ee:	4718      	bx	r3
 80190f0:	4770      	bx	lr
 80190f2:	bf00      	nop
 80190f4:	2001e21c 	.word	0x2001e21c

080190f8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80190f8:	2300      	movs	r3, #0
 80190fa:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 80190fe:	4770      	bx	lr

08019100 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8019100:	4b03      	ldr	r3, [pc, #12]	; (8019110 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8019102:	6818      	ldr	r0, [r3, #0]
 8019104:	b110      	cbz	r0, 801910c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8019106:	6803      	ldr	r3, [r0, #0]
 8019108:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801910a:	4718      	bx	r3
 801910c:	4770      	bx	lr
 801910e:	bf00      	nop
 8019110:	2001e21c 	.word	0x2001e21c

08019114 <_ZN8touchgfx11ApplicationD1Ev>:
 8019114:	4770      	bx	lr

08019116 <_ZN8touchgfx11ApplicationD0Ev>:
 8019116:	b510      	push	{r4, lr}
 8019118:	f44f 719c 	mov.w	r1, #312	; 0x138
 801911c:	4604      	mov	r4, r0
 801911e:	f012 f804 	bl	802b12a <_ZdlPvj>
 8019122:	4620      	mov	r0, r4
 8019124:	bd10      	pop	{r4, pc}
	...

08019128 <_ZN8touchgfx11Application15handleTickEventEv>:
 8019128:	b570      	push	{r4, r5, r6, lr}
 801912a:	4d38      	ldr	r5, [pc, #224]	; (801920c <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 801912c:	4604      	mov	r4, r0
 801912e:	6828      	ldr	r0, [r5, #0]
 8019130:	b140      	cbz	r0, 8019144 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8019132:	7a03      	ldrb	r3, [r0, #8]
 8019134:	b933      	cbnz	r3, 8019144 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8019136:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 801913a:	6803      	ldr	r3, [r0, #0]
 801913c:	689b      	ldr	r3, [r3, #8]
 801913e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019142:	4718      	bx	r3
 8019144:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8019148:	b97b      	cbnz	r3, 801916a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801914a:	b170      	cbz	r0, 801916a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801914c:	7a03      	ldrb	r3, [r0, #8]
 801914e:	b163      	cbz	r3, 801916a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8019150:	4b2f      	ldr	r3, [pc, #188]	; (8019210 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 8019152:	6818      	ldr	r0, [r3, #0]
 8019154:	b110      	cbz	r0, 801915c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8019156:	6803      	ldr	r3, [r0, #0]
 8019158:	691b      	ldr	r3, [r3, #16]
 801915a:	4798      	blx	r3
 801915c:	6828      	ldr	r0, [r5, #0]
 801915e:	6803      	ldr	r3, [r0, #0]
 8019160:	68db      	ldr	r3, [r3, #12]
 8019162:	4798      	blx	r3
 8019164:	2301      	movs	r3, #1
 8019166:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 801916a:	2500      	movs	r5, #0
 801916c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8019170:	42a8      	cmp	r0, r5
 8019172:	dd0c      	ble.n	801918e <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8019174:	1963      	adds	r3, r4, r5
 8019176:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 801917a:	b132      	cbz	r2, 801918a <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 801917c:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8019180:	4413      	add	r3, r2
 8019182:	6858      	ldr	r0, [r3, #4]
 8019184:	6803      	ldr	r3, [r0, #0]
 8019186:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019188:	4798      	blx	r3
 801918a:	3501      	adds	r5, #1
 801918c:	e7ee      	b.n	801916c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 801918e:	2300      	movs	r3, #0
 8019190:	461a      	mov	r2, r3
 8019192:	4298      	cmp	r0, r3
 8019194:	d10f      	bne.n	80191b6 <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 8019196:	1d25      	adds	r5, r4, #4
 8019198:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 801919c:	4291      	cmp	r1, r2
 801919e:	dd2d      	ble.n	80191fc <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 80191a0:	1e48      	subs	r0, r1, #1
 80191a2:	b280      	uxth	r0, r0
 80191a4:	4288      	cmp	r0, r1
 80191a6:	d31a      	bcc.n	80191de <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 80191a8:	4b1a      	ldr	r3, [pc, #104]	; (8019214 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 80191aa:	4a1b      	ldr	r2, [pc, #108]	; (8019218 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 80191ac:	481b      	ldr	r0, [pc, #108]	; (801921c <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 80191ae:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 80191b2:	f012 ff07 	bl	802bfc4 <__assert_func>
 80191b6:	18e1      	adds	r1, r4, r3
 80191b8:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 80191bc:	b16d      	cbz	r5, 80191da <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 80191be:	429a      	cmp	r2, r3
 80191c0:	d00a      	beq.n	80191d8 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 80191c2:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 80191c6:	4431      	add	r1, r6
 80191c8:	684e      	ldr	r6, [r1, #4]
 80191ca:	b291      	uxth	r1, r2
 80191cc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80191d0:	604e      	str	r6, [r1, #4]
 80191d2:	18a1      	adds	r1, r4, r2
 80191d4:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 80191d8:	3201      	adds	r2, #1
 80191da:	3301      	adds	r3, #1
 80191dc:	e7d9      	b.n	8019192 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 80191de:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 80191e2:	3304      	adds	r3, #4
 80191e4:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 80191e8:	428b      	cmp	r3, r1
 80191ea:	d004      	beq.n	80191f6 <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 80191ec:	f853 6f04 	ldr.w	r6, [r3, #4]!
 80191f0:	f843 6c04 	str.w	r6, [r3, #-4]
 80191f4:	e7f8      	b.n	80191e8 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 80191f6:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 80191fa:	e7cd      	b.n	8019198 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 80191fc:	4b04      	ldr	r3, [pc, #16]	; (8019210 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 80191fe:	6818      	ldr	r0, [r3, #0]
 8019200:	b110      	cbz	r0, 8019208 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 8019202:	6803      	ldr	r3, [r0, #0]
 8019204:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019206:	e79a      	b.n	801913e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8019208:	bd70      	pop	{r4, r5, r6, pc}
 801920a:	bf00      	nop
 801920c:	2001e220 	.word	0x2001e220
 8019210:	2001e21c 	.word	0x2001e21c
 8019214:	08034c51 	.word	0x08034c51
 8019218:	08034eb1 	.word	0x08034eb1
 801921c:	08034c5f 	.word	0x08034c5f

08019220 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8019220:	b570      	push	{r4, r5, r6, lr}
 8019222:	4606      	mov	r6, r0
 8019224:	460c      	mov	r4, r1
 8019226:	b929      	cbnz	r1, 8019234 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 8019228:	4b0c      	ldr	r3, [pc, #48]	; (801925c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 801922a:	4a0d      	ldr	r2, [pc, #52]	; (8019260 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 801922c:	480d      	ldr	r0, [pc, #52]	; (8019264 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 801922e:	215e      	movs	r1, #94	; 0x5e
 8019230:	f012 fec8 	bl	802bfc4 <__assert_func>
 8019234:	4d0c      	ldr	r5, [pc, #48]	; (8019268 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 8019236:	2300      	movs	r3, #0
 8019238:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801923c:	6828      	ldr	r0, [r5, #0]
 801923e:	b110      	cbz	r0, 8019246 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 8019240:	6803      	ldr	r3, [r0, #0]
 8019242:	695b      	ldr	r3, [r3, #20]
 8019244:	4798      	blx	r3
 8019246:	602c      	str	r4, [r5, #0]
 8019248:	6823      	ldr	r3, [r4, #0]
 801924a:	4620      	mov	r0, r4
 801924c:	68db      	ldr	r3, [r3, #12]
 801924e:	4798      	blx	r3
 8019250:	6833      	ldr	r3, [r6, #0]
 8019252:	4630      	mov	r0, r6
 8019254:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019256:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801925a:	4718      	bx	r3
 801925c:	08034c1d 	.word	0x08034c1d
 8019260:	08034d2c 	.word	0x08034d2c
 8019264:	08034c27 	.word	0x08034c27
 8019268:	2001e21c 	.word	0x2001e21c

0801926c <_ZN8touchgfx4Rect10restrictToEss>:
 801926c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8019270:	2b00      	cmp	r3, #0
 8019272:	b510      	push	{r4, lr}
 8019274:	da04      	bge.n	8019280 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8019276:	8884      	ldrh	r4, [r0, #4]
 8019278:	4423      	add	r3, r4
 801927a:	8083      	strh	r3, [r0, #4]
 801927c:	2300      	movs	r3, #0
 801927e:	8003      	strh	r3, [r0, #0]
 8019280:	f9b0 4000 	ldrsh.w	r4, [r0]
 8019284:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8019288:	1b09      	subs	r1, r1, r4
 801928a:	428b      	cmp	r3, r1
 801928c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8019290:	bfc8      	it	gt
 8019292:	8081      	strhgt	r1, [r0, #4]
 8019294:	2b00      	cmp	r3, #0
 8019296:	da04      	bge.n	80192a2 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8019298:	88c1      	ldrh	r1, [r0, #6]
 801929a:	440b      	add	r3, r1
 801929c:	80c3      	strh	r3, [r0, #6]
 801929e:	2300      	movs	r3, #0
 80192a0:	8043      	strh	r3, [r0, #2]
 80192a2:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80192a6:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80192aa:	1a52      	subs	r2, r2, r1
 80192ac:	4293      	cmp	r3, r2
 80192ae:	bfc8      	it	gt
 80192b0:	80c2      	strhgt	r2, [r0, #6]
 80192b2:	bd10      	pop	{r4, pc}

080192b4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80192b4:	b510      	push	{r4, lr}
 80192b6:	4b10      	ldr	r3, [pc, #64]	; (80192f8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80192b8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80192bc:	4b0f      	ldr	r3, [pc, #60]	; (80192fc <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80192be:	460c      	mov	r4, r1
 80192c0:	4620      	mov	r0, r4
 80192c2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80192c6:	f7ff ffd1 	bl	801926c <_ZN8touchgfx4Rect10restrictToEss>
 80192ca:	4b0d      	ldr	r3, [pc, #52]	; (8019300 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80192cc:	6818      	ldr	r0, [r3, #0]
 80192ce:	b190      	cbz	r0, 80192f6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80192d0:	6803      	ldr	r3, [r0, #0]
 80192d2:	4621      	mov	r1, r4
 80192d4:	689b      	ldr	r3, [r3, #8]
 80192d6:	4798      	blx	r3
 80192d8:	4b0a      	ldr	r3, [pc, #40]	; (8019304 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80192da:	6818      	ldr	r0, [r3, #0]
 80192dc:	b118      	cbz	r0, 80192e6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80192de:	6803      	ldr	r3, [r0, #0]
 80192e0:	4621      	mov	r1, r4
 80192e2:	689b      	ldr	r3, [r3, #8]
 80192e4:	4798      	blx	r3
 80192e6:	4b08      	ldr	r3, [pc, #32]	; (8019308 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80192e8:	6818      	ldr	r0, [r3, #0]
 80192ea:	6803      	ldr	r3, [r0, #0]
 80192ec:	4621      	mov	r1, r4
 80192ee:	69db      	ldr	r3, [r3, #28]
 80192f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80192f4:	4718      	bx	r3
 80192f6:	bd10      	pop	{r4, pc}
 80192f8:	2001e1b6 	.word	0x2001e1b6
 80192fc:	2001e1b4 	.word	0x2001e1b4
 8019300:	2001e21c 	.word	0x2001e21c
 8019304:	2001e218 	.word	0x2001e218
 8019308:	2001e1c0 	.word	0x2001e1c0

0801930c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801930c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801930e:	4606      	mov	r6, r0
 8019310:	4608      	mov	r0, r1
 8019312:	460f      	mov	r7, r1
 8019314:	f7f8 ff29 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019318:	b9e8      	cbnz	r0, 8019356 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801931a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801931e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8019322:	42a5      	cmp	r5, r4
 8019324:	db17      	blt.n	8019356 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8019326:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801932a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801932e:	429a      	cmp	r2, r3
 8019330:	db11      	blt.n	8019356 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8019332:	88b9      	ldrh	r1, [r7, #4]
 8019334:	440d      	add	r5, r1
 8019336:	88b1      	ldrh	r1, [r6, #4]
 8019338:	440c      	add	r4, r1
 801933a:	b22d      	sxth	r5, r5
 801933c:	b224      	sxth	r4, r4
 801933e:	42a5      	cmp	r5, r4
 8019340:	dc09      	bgt.n	8019356 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8019342:	88f8      	ldrh	r0, [r7, #6]
 8019344:	4410      	add	r0, r2
 8019346:	88f2      	ldrh	r2, [r6, #6]
 8019348:	4413      	add	r3, r2
 801934a:	b200      	sxth	r0, r0
 801934c:	b21b      	sxth	r3, r3
 801934e:	4298      	cmp	r0, r3
 8019350:	bfcc      	ite	gt
 8019352:	2000      	movgt	r0, #0
 8019354:	2001      	movle	r0, #1
 8019356:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08019358 <_ZN8touchgfx11Application11getInstanceEv>:
 8019358:	4b01      	ldr	r3, [pc, #4]	; (8019360 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801935a:	6818      	ldr	r0, [r3, #0]
 801935c:	4770      	bx	lr
 801935e:	bf00      	nop
 8019360:	2001e22c 	.word	0x2001e22c

08019364 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 8019364:	b570      	push	{r4, r5, r6, lr}
 8019366:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 801936a:	1d04      	adds	r4, r0, #4
 801936c:	2200      	movs	r2, #0
 801936e:	b295      	uxth	r5, r2
 8019370:	42ab      	cmp	r3, r5
 8019372:	d90f      	bls.n	8019394 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 8019374:	f854 6b04 	ldr.w	r6, [r4], #4
 8019378:	428e      	cmp	r6, r1
 801937a:	4615      	mov	r5, r2
 801937c:	f102 0201 	add.w	r2, r2, #1
 8019380:	d1f5      	bne.n	801936e <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 8019382:	4428      	add	r0, r5
 8019384:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8019388:	2bff      	cmp	r3, #255	; 0xff
 801938a:	d002      	beq.n	8019392 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 801938c:	3301      	adds	r3, #1
 801938e:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 8019392:	bd70      	pop	{r4, r5, r6, pc}
 8019394:	2b20      	cmp	r3, #32
 8019396:	d106      	bne.n	80193a6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 8019398:	4b08      	ldr	r3, [pc, #32]	; (80193bc <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 801939a:	4a09      	ldr	r2, [pc, #36]	; (80193c0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 801939c:	4809      	ldr	r0, [pc, #36]	; (80193c4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 801939e:	f240 2149 	movw	r1, #585	; 0x249
 80193a2:	f012 fe0f 	bl	802bfc4 <__assert_func>
 80193a6:	18c2      	adds	r2, r0, r3
 80193a8:	2401      	movs	r4, #1
 80193aa:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 80193ae:	191a      	adds	r2, r3, r4
 80193b0:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 80193b4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80193b8:	6041      	str	r1, [r0, #4]
 80193ba:	e7ea      	b.n	8019392 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 80193bc:	08034c88 	.word	0x08034c88
 80193c0:	08034d70 	.word	0x08034d70
 80193c4:	08034c27 	.word	0x08034c27

080193c8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 80193c8:	b570      	push	{r4, r5, r6, lr}
 80193ca:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 80193ce:	1d04      	adds	r4, r0, #4
 80193d0:	2300      	movs	r3, #0
 80193d2:	b29a      	uxth	r2, r3
 80193d4:	4296      	cmp	r6, r2
 80193d6:	d90a      	bls.n	80193ee <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 80193d8:	f854 2b04 	ldr.w	r2, [r4], #4
 80193dc:	428a      	cmp	r2, r1
 80193de:	d107      	bne.n	80193f0 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 80193e0:	18c5      	adds	r5, r0, r3
 80193e2:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 80193e6:	b11a      	cbz	r2, 80193f0 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 80193e8:	3a01      	subs	r2, #1
 80193ea:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 80193ee:	bd70      	pop	{r4, r5, r6, pc}
 80193f0:	3301      	adds	r3, #1
 80193f2:	e7ee      	b.n	80193d2 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

080193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 80193f4:	2300      	movs	r3, #0
 80193f6:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 80193fa:	f100 0288 	add.w	r2, r0, #136	; 0x88
 80193fe:	30a8      	adds	r0, #168	; 0xa8
 8019400:	f802 3b01 	strb.w	r3, [r2], #1
 8019404:	4282      	cmp	r2, r0
 8019406:	d1fb      	bne.n	8019400 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8019408:	4770      	bx	lr
	...

0801940c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 801940c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801940e:	4b10      	ldr	r3, [pc, #64]	; (8019450 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8019410:	781b      	ldrb	r3, [r3, #0]
 8019412:	4605      	mov	r5, r0
 8019414:	b1d3      	cbz	r3, 801944c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8019416:	4b0f      	ldr	r3, [pc, #60]	; (8019454 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8019418:	4f0f      	ldr	r7, [pc, #60]	; (8019458 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801941a:	881c      	ldrh	r4, [r3, #0]
 801941c:	f100 06ea 	add.w	r6, r0, #234	; 0xea
 8019420:	f8b5 312a 	ldrh.w	r3, [r5, #298]	; 0x12a
 8019424:	42a3      	cmp	r3, r4
 8019426:	d90e      	bls.n	8019446 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8019428:	683b      	ldr	r3, [r7, #0]
 801942a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801942e:	b10a      	cbz	r2, 8019434 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8019430:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8019432:	b900      	cbnz	r0, 8019436 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8019434:	6898      	ldr	r0, [r3, #8]
 8019436:	6803      	ldr	r3, [r0, #0]
 8019438:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 801943c:	69db      	ldr	r3, [r3, #28]
 801943e:	3401      	adds	r4, #1
 8019440:	4798      	blx	r3
 8019442:	b2a4      	uxth	r4, r4
 8019444:	e7ec      	b.n	8019420 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8019446:	2300      	movs	r3, #0
 8019448:	f8a5 312a 	strh.w	r3, [r5, #298]	; 0x12a
 801944c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801944e:	bf00      	nop
 8019450:	2001e1be 	.word	0x2001e1be
 8019454:	2000009c 	.word	0x2000009c
 8019458:	2001e1c0 	.word	0x2001e1c0

0801945c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801945c:	4603      	mov	r3, r0
 801945e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8019462:	2200      	movs	r2, #0
 8019464:	801a      	strh	r2, [r3, #0]
 8019466:	805a      	strh	r2, [r3, #2]
 8019468:	809a      	strh	r2, [r3, #4]
 801946a:	80da      	strh	r2, [r3, #6]
 801946c:	3308      	adds	r3, #8
 801946e:	428b      	cmp	r3, r1
 8019470:	d1f8      	bne.n	8019464 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8019472:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8019476:	4770      	bx	lr

08019478 <_ZN8touchgfx11ApplicationC1Ev>:
 8019478:	b570      	push	{r4, r5, r6, lr}
 801947a:	4b19      	ldr	r3, [pc, #100]	; (80194e0 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 801947c:	6003      	str	r3, [r0, #0]
 801947e:	2500      	movs	r5, #0
 8019480:	4604      	mov	r4, r0
 8019482:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 8019486:	30a8      	adds	r0, #168	; 0xa8
 8019488:	f7ff ffe8 	bl	801945c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801948c:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8019490:	f7ff ffe4 	bl	801945c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8019494:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8019498:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 801949c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80194a0:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80194a4:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 80194a8:	490e      	ldr	r1, [pc, #56]	; (80194e4 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80194aa:	480f      	ldr	r0, [pc, #60]	; (80194e8 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 80194ac:	4e0f      	ldr	r6, [pc, #60]	; (80194ec <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 80194ae:	f00f f911 	bl	80286d4 <CRC_Lock>
 80194b2:	4b0f      	ldr	r3, [pc, #60]	; (80194f0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80194b4:	b158      	cbz	r0, 80194ce <_ZN8touchgfx11ApplicationC1Ev+0x56>
 80194b6:	801d      	strh	r5, [r3, #0]
 80194b8:	4a0e      	ldr	r2, [pc, #56]	; (80194f4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80194ba:	2300      	movs	r3, #0
 80194bc:	6013      	str	r3, [r2, #0]
 80194be:	4a0e      	ldr	r2, [pc, #56]	; (80194f8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80194c0:	6033      	str	r3, [r6, #0]
 80194c2:	4620      	mov	r0, r4
 80194c4:	6013      	str	r3, [r2, #0]
 80194c6:	f7ff ff95 	bl	80193f4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 80194ca:	4620      	mov	r0, r4
 80194cc:	bd70      	pop	{r4, r5, r6, pc}
 80194ce:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80194d2:	2002      	movs	r0, #2
 80194d4:	801a      	strh	r2, [r3, #0]
 80194d6:	6030      	str	r0, [r6, #0]
 80194d8:	f001 fae6 	bl	801aaa8 <_ZN8touchgfx6Screen4drawEv>
 80194dc:	e7ec      	b.n	80194b8 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 80194de:	bf00      	nop
 80194e0:	08034ce8 	.word	0x08034ce8
 80194e4:	b5e8b5cd 	.word	0xb5e8b5cd
 80194e8:	f407a5c2 	.word	0xf407a5c2
 80194ec:	2001e21c 	.word	0x2001e21c
 80194f0:	2000009c 	.word	0x2000009c
 80194f4:	2001e22c 	.word	0x2001e22c
 80194f8:	2001e220 	.word	0x2001e220

080194fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80194fc:	b510      	push	{r4, lr}
 80194fe:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8019502:	428b      	cmp	r3, r1
 8019504:	d806      	bhi.n	8019514 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 8019506:	4b0b      	ldr	r3, [pc, #44]	; (8019534 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 8019508:	4a0b      	ldr	r2, [pc, #44]	; (8019538 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 801950a:	480c      	ldr	r0, [pc, #48]	; (801953c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 801950c:	f240 11dd 	movw	r1, #477	; 0x1dd
 8019510:	f012 fd58 	bl	802bfc4 <__assert_func>
 8019514:	3b01      	subs	r3, #1
 8019516:	b29b      	uxth	r3, r3
 8019518:	428b      	cmp	r3, r1
 801951a:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801951e:	d908      	bls.n	8019532 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 8019520:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8019524:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8019528:	681a      	ldr	r2, [r3, #0]
 801952a:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801952e:	685a      	ldr	r2, [r3, #4]
 8019530:	6062      	str	r2, [r4, #4]
 8019532:	bd10      	pop	{r4, pc}
 8019534:	08034c51 	.word	0x08034c51
 8019538:	08034db5 	.word	0x08034db5
 801953c:	08034c5f 	.word	0x08034c5f

08019540 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 8019540:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8019542:	466b      	mov	r3, sp
 8019544:	e883 0006 	stmia.w	r3, {r1, r2}
 8019548:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 801954c:	2a07      	cmp	r2, #7
 801954e:	4604      	mov	r4, r0
 8019550:	d906      	bls.n	8019560 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 8019552:	4b09      	ldr	r3, [pc, #36]	; (8019578 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 8019554:	4a09      	ldr	r2, [pc, #36]	; (801957c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 8019556:	480a      	ldr	r0, [pc, #40]	; (8019580 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 8019558:	f240 11a3 	movw	r1, #419	; 0x1a3
 801955c:	f012 fd32 	bl	802bfc4 <__assert_func>
 8019560:	1c51      	adds	r1, r2, #1
 8019562:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8019566:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 801956a:	cb03      	ldmia	r3!, {r0, r1}
 801956c:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 8019570:	6069      	str	r1, [r5, #4]
 8019572:	b003      	add	sp, #12
 8019574:	bd30      	pop	{r4, r5, pc}
 8019576:	bf00      	nop
 8019578:	08034cb0 	.word	0x08034cb0
 801957c:	08034e4b 	.word	0x08034e4b
 8019580:	08034c5f 	.word	0x08034c5f

08019584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8019584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019588:	4b94      	ldr	r3, [pc, #592]	; (80197dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 801958a:	b08d      	sub	sp, #52	; 0x34
 801958c:	ac08      	add	r4, sp, #32
 801958e:	e884 0006 	stmia.w	r4, {r1, r2}
 8019592:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019596:	4b92      	ldr	r3, [pc, #584]	; (80197e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 8019598:	4683      	mov	fp, r0
 801959a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801959e:	4620      	mov	r0, r4
 80195a0:	f7ff fe64 	bl	801926c <_ZN8touchgfx4Rect10restrictToEss>
 80195a4:	4620      	mov	r0, r4
 80195a6:	f7f8 fde0 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 80195aa:	2800      	cmp	r0, #0
 80195ac:	d16a      	bne.n	8019684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80195ae:	9402      	str	r4, [sp, #8]
 80195b0:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80195b4:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80195b8:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80195bc:	2400      	movs	r4, #0
 80195be:	9301      	str	r3, [sp, #4]
 80195c0:	36a0      	adds	r6, #160	; 0xa0
 80195c2:	42a5      	cmp	r5, r4
 80195c4:	d00d      	beq.n	80195e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 80195c6:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 80195ca:	9802      	ldr	r0, [sp, #8]
 80195cc:	f7ff fe9e 	bl	801930c <_ZNK8touchgfx4Rect8includesERKS0_>
 80195d0:	b128      	cbz	r0, 80195de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 80195d2:	1e69      	subs	r1, r5, #1
 80195d4:	1b09      	subs	r1, r1, r4
 80195d6:	b289      	uxth	r1, r1
 80195d8:	9801      	ldr	r0, [sp, #4]
 80195da:	f7ff ff8f 	bl	80194fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80195de:	3401      	adds	r4, #1
 80195e0:	e7ef      	b.n	80195c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 80195e2:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80195e6:	9703      	str	r7, [sp, #12]
 80195e8:	1e7b      	subs	r3, r7, #1
 80195ea:	9300      	str	r3, [sp, #0]
 80195ec:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80195f0:	2400      	movs	r4, #0
 80195f2:	4655      	mov	r5, sl
 80195f4:	9704      	str	r7, [sp, #16]
 80195f6:	4626      	mov	r6, r4
 80195f8:	9b04      	ldr	r3, [sp, #16]
 80195fa:	2b00      	cmp	r3, #0
 80195fc:	d078      	beq.n	80196f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 80195fe:	9902      	ldr	r1, [sp, #8]
 8019600:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8019604:	f7fa ffa8 	bl	8014558 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019608:	b360      	cbz	r0, 8019664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801960a:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801960e:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8019612:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 8019616:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 801961a:	45e6      	cmp	lr, ip
 801961c:	db35      	blt.n	801968a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801961e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8019622:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8019626:	4472      	add	r2, lr
 8019628:	4463      	add	r3, ip
 801962a:	b212      	sxth	r2, r2
 801962c:	b21b      	sxth	r3, r3
 801962e:	429a      	cmp	r2, r3
 8019630:	dc2b      	bgt.n	801968a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8019632:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8019636:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801963a:	fa1f f288 	uxth.w	r2, r8
 801963e:	4413      	add	r3, r2
 8019640:	b29b      	uxth	r3, r3
 8019642:	45c1      	cmp	r9, r8
 8019644:	fa0f fe83 	sxth.w	lr, r3
 8019648:	fa1f fc89 	uxth.w	ip, r9
 801964c:	db0f      	blt.n	801966e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801964e:	eba3 030c 	sub.w	r3, r3, ip
 8019652:	1ac9      	subs	r1, r1, r3
 8019654:	b209      	sxth	r1, r1
 8019656:	2900      	cmp	r1, #0
 8019658:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 801965c:	dd12      	ble.n	8019684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801965e:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 8019662:	4604      	mov	r4, r0
 8019664:	9b04      	ldr	r3, [sp, #16]
 8019666:	3b01      	subs	r3, #1
 8019668:	9304      	str	r3, [sp, #16]
 801966a:	3d08      	subs	r5, #8
 801966c:	e7c4      	b.n	80195f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 801966e:	4461      	add	r1, ip
 8019670:	b209      	sxth	r1, r1
 8019672:	4571      	cmp	r1, lr
 8019674:	dc3a      	bgt.n	80196ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8019676:	eba2 020c 	sub.w	r2, r2, ip
 801967a:	b212      	sxth	r2, r2
 801967c:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8019680:	2a00      	cmp	r2, #0
 8019682:	dcee      	bgt.n	8019662 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8019684:	b00d      	add	sp, #52	; 0x34
 8019686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801968a:	45c1      	cmp	r9, r8
 801968c:	db2e      	blt.n	80196ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801968e:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8019692:	4499      	add	r9, r3
 8019694:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8019698:	4498      	add	r8, r3
 801969a:	fa0f f989 	sxth.w	r9, r9
 801969e:	fa0f f888 	sxth.w	r8, r8
 80196a2:	45c1      	cmp	r9, r8
 80196a4:	dc22      	bgt.n	80196ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80196a6:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80196aa:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80196ae:	fa1f f28c 	uxth.w	r2, ip
 80196b2:	4413      	add	r3, r2
 80196b4:	b29b      	uxth	r3, r3
 80196b6:	45e6      	cmp	lr, ip
 80196b8:	fa1f f88e 	uxth.w	r8, lr
 80196bc:	fa0f f983 	sxth.w	r9, r3
 80196c0:	db0a      	blt.n	80196d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 80196c2:	eba3 0308 	sub.w	r3, r3, r8
 80196c6:	1ac9      	subs	r1, r1, r3
 80196c8:	b209      	sxth	r1, r1
 80196ca:	2900      	cmp	r1, #0
 80196cc:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 80196d0:	ddd8      	ble.n	8019684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80196d2:	f8ad 9020 	strh.w	r9, [sp, #32]
 80196d6:	e7c4      	b.n	8019662 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80196d8:	4441      	add	r1, r8
 80196da:	b209      	sxth	r1, r1
 80196dc:	4549      	cmp	r1, r9
 80196de:	dc05      	bgt.n	80196ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80196e0:	eba2 0208 	sub.w	r2, r2, r8
 80196e4:	b212      	sxth	r2, r2
 80196e6:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80196ea:	e7c9      	b.n	8019680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80196ec:	4606      	mov	r6, r0
 80196ee:	e7b9      	b.n	8019664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80196f0:	2c00      	cmp	r4, #0
 80196f2:	f47f af7d 	bne.w	80195f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 80196f6:	2e00      	cmp	r6, #0
 80196f8:	f000 81e1 	beq.w	8019abe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80196fc:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 8019700:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 8019704:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8019708:	b2b9      	uxth	r1, r7
 801970a:	9104      	str	r1, [sp, #16]
 801970c:	9804      	ldr	r0, [sp, #16]
 801970e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8019712:	4401      	add	r1, r0
 8019714:	b2b3      	uxth	r3, r6
 8019716:	b289      	uxth	r1, r1
 8019718:	441a      	add	r2, r3
 801971a:	9105      	str	r1, [sp, #20]
 801971c:	b292      	uxth	r2, r2
 801971e:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 8019722:	fa0f f882 	sxth.w	r8, r2
 8019726:	4655      	mov	r5, sl
 8019728:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801972c:	9b03      	ldr	r3, [sp, #12]
 801972e:	2b00      	cmp	r3, #0
 8019730:	d058      	beq.n	80197e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 8019732:	9902      	ldr	r1, [sp, #8]
 8019734:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8019738:	f7fa ff0e 	bl	8014558 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801973c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8019740:	b1d8      	cbz	r0, 801977a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8019742:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8019746:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 801974a:	4576      	cmp	r6, lr
 801974c:	dc26      	bgt.n	801979c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 801974e:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8019752:	44f4      	add	ip, lr
 8019754:	fa0f fc8c 	sxth.w	ip, ip
 8019758:	45e0      	cmp	r8, ip
 801975a:	db1f      	blt.n	801979c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 801975c:	428f      	cmp	r7, r1
 801975e:	fa1f fc81 	uxth.w	ip, r1
 8019762:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8019766:	dc0f      	bgt.n	8019788 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8019768:	9805      	ldr	r0, [sp, #20]
 801976a:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 801976e:	eba0 0c0c 	sub.w	ip, r0, ip
 8019772:	eba1 010c 	sub.w	r1, r1, ip
 8019776:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 801977a:	4620      	mov	r0, r4
 801977c:	9903      	ldr	r1, [sp, #12]
 801977e:	3901      	subs	r1, #1
 8019780:	9103      	str	r1, [sp, #12]
 8019782:	3d08      	subs	r5, #8
 8019784:	4604      	mov	r4, r0
 8019786:	e7cf      	b.n	8019728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8019788:	4461      	add	r1, ip
 801978a:	b209      	sxth	r1, r1
 801978c:	4549      	cmp	r1, r9
 801978e:	dcf5      	bgt.n	801977c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8019790:	9904      	ldr	r1, [sp, #16]
 8019792:	eba1 0c0c 	sub.w	ip, r1, ip
 8019796:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 801979a:	e7ee      	b.n	801977a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801979c:	428f      	cmp	r7, r1
 801979e:	dced      	bgt.n	801977c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80197a0:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 80197a4:	4461      	add	r1, ip
 80197a6:	b209      	sxth	r1, r1
 80197a8:	4589      	cmp	r9, r1
 80197aa:	dbe7      	blt.n	801977c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80197ac:	4576      	cmp	r6, lr
 80197ae:	fa1f fc8e 	uxth.w	ip, lr
 80197b2:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 80197b6:	dc08      	bgt.n	80197ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 80197b8:	eba2 0c0c 	sub.w	ip, r2, ip
 80197bc:	eba1 010c 	sub.w	r1, r1, ip
 80197c0:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 80197c4:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 80197c8:	e7d7      	b.n	801977a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80197ca:	4461      	add	r1, ip
 80197cc:	b209      	sxth	r1, r1
 80197ce:	4588      	cmp	r8, r1
 80197d0:	dbd4      	blt.n	801977c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80197d2:	eba3 0c0c 	sub.w	ip, r3, ip
 80197d6:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 80197da:	e7ce      	b.n	801977a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80197dc:	2001e1b6 	.word	0x2001e1b6
 80197e0:	2001e1b4 	.word	0x2001e1b4
 80197e4:	2c00      	cmp	r4, #0
 80197e6:	f000 816a 	beq.w	8019abe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80197ea:	9b00      	ldr	r3, [sp, #0]
 80197ec:	3301      	adds	r3, #1
 80197ee:	f000 8166 	beq.w	8019abe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80197f2:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 80197f6:	4621      	mov	r1, r4
 80197f8:	9802      	ldr	r0, [sp, #8]
 80197fa:	f7ff fd87 	bl	801930c <_ZNK8touchgfx4Rect8includesERKS0_>
 80197fe:	b120      	cbz	r0, 801980a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 8019800:	f8bd 1000 	ldrh.w	r1, [sp]
 8019804:	9801      	ldr	r0, [sp, #4]
 8019806:	f7ff fe79 	bl	80194fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801980a:	9902      	ldr	r1, [sp, #8]
 801980c:	4620      	mov	r0, r4
 801980e:	f7fa fea3 	bl	8014558 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019812:	2800      	cmp	r0, #0
 8019814:	f000 809b 	beq.w	801994e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8019818:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801981c:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 8019820:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 8019824:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 8019828:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801982c:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 8019830:	fa1f f288 	uxth.w	r2, r8
 8019834:	19d5      	adds	r5, r2, r7
 8019836:	fa1f f985 	uxth.w	r9, r5
 801983a:	fa0f f589 	sxth.w	r5, r9
 801983e:	b2a1      	uxth	r1, r4
 8019840:	440b      	add	r3, r1
 8019842:	9503      	str	r5, [sp, #12]
 8019844:	45a0      	cmp	r8, r4
 8019846:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801984a:	9507      	str	r5, [sp, #28]
 801984c:	b29b      	uxth	r3, r3
 801984e:	f340 809d 	ble.w	801998c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 8019852:	1a52      	subs	r2, r2, r1
 8019854:	b292      	uxth	r2, r2
 8019856:	4584      	cmp	ip, r0
 8019858:	fa0f fe83 	sxth.w	lr, r3
 801985c:	b215      	sxth	r5, r2
 801985e:	dd2f      	ble.n	80198c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33c>
 8019860:	9e00      	ldr	r6, [sp, #0]
 8019862:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8019866:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 801986a:	9e03      	ldr	r6, [sp, #12]
 801986c:	eba6 060e 	sub.w	r6, r6, lr
 8019870:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 8019874:	fa1f fc8c 	uxth.w	ip, ip
 8019878:	b280      	uxth	r0, r0
 801987a:	ebac 0300 	sub.w	r3, ip, r0
 801987e:	448c      	add	ip, r1
 8019880:	4470      	add	r0, lr
 8019882:	b29b      	uxth	r3, r3
 8019884:	fa0f fc8c 	sxth.w	ip, ip
 8019888:	b200      	sxth	r0, r0
 801988a:	b21c      	sxth	r4, r3
 801988c:	ebac 0000 	sub.w	r0, ip, r0
 8019890:	4366      	muls	r6, r4
 8019892:	4368      	muls	r0, r5
 8019894:	4286      	cmp	r6, r0
 8019896:	db09      	blt.n	80198ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8019898:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 801989c:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 80198a0:	4417      	add	r7, r2
 80198a2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80198a6:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80198aa:	e681      	b.n	80195b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80198ac:	440b      	add	r3, r1
 80198ae:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80198b2:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 80198b6:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 80198ba:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80198be:	e677      	b.n	80195b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80198c0:	9e03      	ldr	r6, [sp, #12]
 80198c2:	45b6      	cmp	lr, r6
 80198c4:	da28      	bge.n	8019918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 80198c6:	9b00      	ldr	r3, [sp, #0]
 80198c8:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 80198cc:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 80198d0:	eb04 030c 	add.w	r3, r4, ip
 80198d4:	fa1f f883 	uxth.w	r8, r3
 80198d8:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 80198dc:	4403      	add	r3, r0
 80198de:	eba3 0308 	sub.w	r3, r3, r8
 80198e2:	b29b      	uxth	r3, r3
 80198e4:	fa0f f988 	sxth.w	r9, r8
 80198e8:	eba0 000c 	sub.w	r0, r0, ip
 80198ec:	fa0f f883 	sxth.w	r8, r3
 80198f0:	eba6 060e 	sub.w	r6, r6, lr
 80198f4:	4368      	muls	r0, r5
 80198f6:	fb08 f606 	mul.w	r6, r8, r6
 80198fa:	42b0      	cmp	r0, r6
 80198fc:	dc06      	bgt.n	801990c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80198fe:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 8019902:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 8019906:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 801990a:	e7c9      	b.n	80198a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31c>
 801990c:	4423      	add	r3, r4
 801990e:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 8019912:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8019916:	e64b      	b.n	80195b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019918:	9807      	ldr	r0, [sp, #28]
 801991a:	eba3 0309 	sub.w	r3, r3, r9
 801991e:	b29b      	uxth	r3, r3
 8019920:	2806      	cmp	r0, #6
 8019922:	fa0f fc83 	sxth.w	ip, r3
 8019926:	d818      	bhi.n	801995a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8019928:	4652      	mov	r2, sl
 801992a:	ab0a      	add	r3, sp, #40	; 0x28
 801992c:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 8019930:	6851      	ldr	r1, [r2, #4]
 8019932:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 8019936:	c303      	stmia	r3!, {r0, r1}
 8019938:	9b03      	ldr	r3, [sp, #12]
 801993a:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 801993e:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8019942:	ab0a      	add	r3, sp, #40	; 0x28
 8019944:	e893 0006 	ldmia.w	r3, {r1, r2}
 8019948:	9801      	ldr	r0, [sp, #4]
 801994a:	f7ff fdf9 	bl	8019540 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 801994e:	9b00      	ldr	r3, [sp, #0]
 8019950:	3b01      	subs	r3, #1
 8019952:	9300      	str	r3, [sp, #0]
 8019954:	f1aa 0a08 	sub.w	sl, sl, #8
 8019958:	e747      	b.n	80197ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 801995a:	9800      	ldr	r0, [sp, #0]
 801995c:	45ac      	cmp	ip, r5
 801995e:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8019962:	db0c      	blt.n	801997e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fa>
 8019964:	4417      	add	r7, r2
 8019966:	b2bf      	uxth	r7, r7
 8019968:	4458      	add	r0, fp
 801996a:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 801996e:	440f      	add	r7, r1
 8019970:	f8ad 4020 	strh.w	r4, [sp, #32]
 8019974:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 8019978:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 801997c:	e618      	b.n	80195b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801997e:	4458      	add	r0, fp
 8019980:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 8019984:	443b      	add	r3, r7
 8019986:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801998a:	e611      	b.n	80195b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801998c:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 8019990:	fa1f f18c 	uxth.w	r1, ip
 8019994:	eb01 0e05 	add.w	lr, r1, r5
 8019998:	b282      	uxth	r2, r0
 801999a:	fa1f fe8e 	uxth.w	lr, lr
 801999e:	9204      	str	r2, [sp, #16]
 80199a0:	fa0f f28e 	sxth.w	r2, lr
 80199a4:	9205      	str	r2, [sp, #20]
 80199a6:	9e04      	ldr	r6, [sp, #16]
 80199a8:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 80199ac:	4432      	add	r2, r6
 80199ae:	b292      	uxth	r2, r2
 80199b0:	4584      	cmp	ip, r0
 80199b2:	9206      	str	r2, [sp, #24]
 80199b4:	da26      	bge.n	8019a04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x480>
 80199b6:	eba3 0309 	sub.w	r3, r3, r9
 80199ba:	eba2 020e 	sub.w	r2, r2, lr
 80199be:	b29b      	uxth	r3, r3
 80199c0:	b292      	uxth	r2, r2
 80199c2:	fa0f fa83 	sxth.w	sl, r3
 80199c6:	b211      	sxth	r1, r2
 80199c8:	eba0 000c 	sub.w	r0, r0, ip
 80199cc:	eba4 0408 	sub.w	r4, r4, r8
 80199d0:	fb0a f000 	mul.w	r0, sl, r0
 80199d4:	434c      	muls	r4, r1
 80199d6:	42a0      	cmp	r0, r4
 80199d8:	9800      	ldr	r0, [sp, #0]
 80199da:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 80199de:	dc06      	bgt.n	80199ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 80199e0:	4458      	add	r0, fp
 80199e2:	9a05      	ldr	r2, [sp, #20]
 80199e4:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 80199e8:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 80199ec:	e7ca      	b.n	8019984 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 80199ee:	eb0b 0300 	add.w	r3, fp, r0
 80199f2:	9903      	ldr	r1, [sp, #12]
 80199f4:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 80199f8:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 80199fc:	442a      	add	r2, r5
 80199fe:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8019a02:	e5d5      	b.n	80195b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019a04:	9e04      	ldr	r6, [sp, #16]
 8019a06:	9a03      	ldr	r2, [sp, #12]
 8019a08:	1b89      	subs	r1, r1, r6
 8019a0a:	b21e      	sxth	r6, r3
 8019a0c:	b289      	uxth	r1, r1
 8019a0e:	4296      	cmp	r6, r2
 8019a10:	fa0f fc81 	sxth.w	ip, r1
 8019a14:	dd26      	ble.n	8019a64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4e0>
 8019a16:	eba3 0309 	sub.w	r3, r3, r9
 8019a1a:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8019a1e:	9e05      	ldr	r6, [sp, #20]
 8019a20:	b29b      	uxth	r3, r3
 8019a22:	eba6 0902 	sub.w	r9, r6, r2
 8019a26:	b218      	sxth	r0, r3
 8019a28:	eba4 0408 	sub.w	r4, r4, r8
 8019a2c:	fb0c f404 	mul.w	r4, ip, r4
 8019a30:	fb00 f909 	mul.w	r9, r0, r9
 8019a34:	9a00      	ldr	r2, [sp, #0]
 8019a36:	454c      	cmp	r4, r9
 8019a38:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8019a3c:	db03      	blt.n	8019a46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 8019a3e:	445a      	add	r2, fp
 8019a40:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 8019a44:	e79e      	b.n	8019984 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 8019a46:	eb0b 0302 	add.w	r3, fp, r2
 8019a4a:	9a03      	ldr	r2, [sp, #12]
 8019a4c:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8019a50:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 8019a54:	4429      	add	r1, r5
 8019a56:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8019a5a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8019a5e:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8019a62:	e5a5      	b.n	80195b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019a64:	9b06      	ldr	r3, [sp, #24]
 8019a66:	9c07      	ldr	r4, [sp, #28]
 8019a68:	eba3 020e 	sub.w	r2, r3, lr
 8019a6c:	b292      	uxth	r2, r2
 8019a6e:	2c06      	cmp	r4, #6
 8019a70:	b213      	sxth	r3, r2
 8019a72:	d80d      	bhi.n	8019a90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8019a74:	4651      	mov	r1, sl
 8019a76:	aa0a      	add	r2, sp, #40	; 0x28
 8019a78:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 8019a7c:	6849      	ldr	r1, [r1, #4]
 8019a7e:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 8019a82:	9b05      	ldr	r3, [sp, #20]
 8019a84:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8019a88:	c203      	stmia	r2!, {r0, r1}
 8019a8a:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 8019a8e:	e758      	b.n	8019942 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8019a90:	9c00      	ldr	r4, [sp, #0]
 8019a92:	4563      	cmp	r3, ip
 8019a94:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8019a98:	db0d      	blt.n	8019ab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8019a9a:	4429      	add	r1, r5
 8019a9c:	9a04      	ldr	r2, [sp, #16]
 8019a9e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019aa2:	b289      	uxth	r1, r1
 8019aa4:	445c      	add	r4, fp
 8019aa6:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8019aaa:	4411      	add	r1, r2
 8019aac:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 8019ab0:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 8019ab4:	e57c      	b.n	80195b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019ab6:	445c      	add	r4, fp
 8019ab8:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 8019abc:	e79e      	b.n	80199fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x478>
 8019abe:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8019ac2:	2f07      	cmp	r7, #7
 8019ac4:	d806      	bhi.n	8019ad4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x550>
 8019ac6:	ab08      	add	r3, sp, #32
 8019ac8:	e893 0006 	ldmia.w	r3, {r1, r2}
 8019acc:	9801      	ldr	r0, [sp, #4]
 8019ace:	f7ff fd37 	bl	8019540 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8019ad2:	e5d7      	b.n	8019684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019ad4:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8019ad8:	f107 39ff 	add.w	r9, r7, #4294967295
 8019adc:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8019ae0:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 8019ae4:	f04f 35ff 	mov.w	r5, #4294967295
 8019ae8:	2400      	movs	r4, #0
 8019aea:	9304      	str	r3, [sp, #16]
 8019aec:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 8019af0:	9300      	str	r3, [sp, #0]
 8019af2:	f109 32ff 	add.w	r2, r9, #4294967295
 8019af6:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 8019afa:	9303      	str	r3, [sp, #12]
 8019afc:	4690      	mov	r8, r2
 8019afe:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8019b02:	f1b8 3fff 	cmp.w	r8, #4294967295
 8019b06:	bf14      	ite	ne
 8019b08:	9904      	ldrne	r1, [sp, #16]
 8019b0a:	f8dd e008 	ldreq.w	lr, [sp, #8]
 8019b0e:	6818      	ldr	r0, [r3, #0]
 8019b10:	9206      	str	r2, [sp, #24]
 8019b12:	bf18      	it	ne
 8019b14:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 8019b18:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8019b1c:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8019b20:	f8be 6004 	ldrh.w	r6, [lr, #4]
 8019b24:	9305      	str	r3, [sp, #20]
 8019b26:	fb16 f601 	smulbb	r6, r6, r1
 8019b2a:	6859      	ldr	r1, [r3, #4]
 8019b2c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8019b30:	4671      	mov	r1, lr
 8019b32:	a80a      	add	r0, sp, #40	; 0x28
 8019b34:	f7fb fb0f 	bl	8015156 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019b38:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8019b3c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8019b40:	9b03      	ldr	r3, [sp, #12]
 8019b42:	9a00      	ldr	r2, [sp, #0]
 8019b44:	fb11 f100 	smulbb	r1, r1, r0
 8019b48:	fb02 6603 	mla	r6, r2, r3, r6
 8019b4c:	1b8e      	subs	r6, r1, r6
 8019b4e:	2008      	movs	r0, #8
 8019b50:	fb91 f1f0 	sdiv	r1, r1, r0
 8019b54:	42b1      	cmp	r1, r6
 8019b56:	dc21      	bgt.n	8019b9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 8019b58:	4556      	cmp	r6, sl
 8019b5a:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 8019b5e:	da03      	bge.n	8019b68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e4>
 8019b60:	b1e6      	cbz	r6, 8019b9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 8019b62:	46b2      	mov	sl, r6
 8019b64:	4645      	mov	r5, r8
 8019b66:	464c      	mov	r4, r9
 8019b68:	f108 38ff 	add.w	r8, r8, #4294967295
 8019b6c:	f118 0f02 	cmn.w	r8, #2
 8019b70:	d1c7      	bne.n	8019b02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57e>
 8019b72:	f1b2 3fff 	cmp.w	r2, #4294967295
 8019b76:	f1a7 0708 	sub.w	r7, r7, #8
 8019b7a:	4691      	mov	r9, r2
 8019b7c:	d1b6      	bne.n	8019aec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x568>
 8019b7e:	9b01      	ldr	r3, [sp, #4]
 8019b80:	b2a6      	uxth	r6, r4
 8019b82:	00e4      	lsls	r4, r4, #3
 8019b84:	1918      	adds	r0, r3, r4
 8019b86:	1c6b      	adds	r3, r5, #1
 8019b88:	d10b      	bne.n	8019ba2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x61e>
 8019b8a:	4601      	mov	r1, r0
 8019b8c:	9802      	ldr	r0, [sp, #8]
 8019b8e:	f7fb fae2 	bl	8015156 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019b92:	4631      	mov	r1, r6
 8019b94:	9801      	ldr	r0, [sp, #4]
 8019b96:	f7ff fcb1 	bl	80194fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019b9a:	e509      	b.n	80195b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019b9c:	4645      	mov	r5, r8
 8019b9e:	464c      	mov	r4, r9
 8019ba0:	e7ed      	b.n	8019b7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 8019ba2:	9b01      	ldr	r3, [sp, #4]
 8019ba4:	00ed      	lsls	r5, r5, #3
 8019ba6:	1959      	adds	r1, r3, r5
 8019ba8:	f7fb fad5 	bl	8015156 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019bac:	9b02      	ldr	r3, [sp, #8]
 8019bae:	cb03      	ldmia	r3!, {r0, r1}
 8019bb0:	445d      	add	r5, fp
 8019bb2:	445c      	add	r4, fp
 8019bb4:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 8019bb8:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 8019bbc:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 8019bc0:	9b02      	ldr	r3, [sp, #8]
 8019bc2:	6861      	ldr	r1, [r4, #4]
 8019bc4:	c303      	stmia	r3!, {r0, r1}
 8019bc6:	e7e4      	b.n	8019b92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60e>

08019bc8 <_ZN8touchgfx11Application10invalidateEv>:
 8019bc8:	4b09      	ldr	r3, [pc, #36]	; (8019bf0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8019bca:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019bce:	4b09      	ldr	r3, [pc, #36]	; (8019bf4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8019bd0:	b082      	sub	sp, #8
 8019bd2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019bd6:	f8ad 3006 	strh.w	r3, [sp, #6]
 8019bda:	2100      	movs	r1, #0
 8019bdc:	9100      	str	r1, [sp, #0]
 8019bde:	f8ad 2004 	strh.w	r2, [sp, #4]
 8019be2:	ab02      	add	r3, sp, #8
 8019be4:	e913 0006 	ldmdb	r3, {r1, r2}
 8019be8:	b002      	add	sp, #8
 8019bea:	f7ff bccb 	b.w	8019584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8019bee:	bf00      	nop
 8019bf0:	2001e1b4 	.word	0x2001e1b4
 8019bf4:	2001e1b6 	.word	0x2001e1b6

08019bf8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8019bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019bfc:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8019c00:	b09b      	sub	sp, #108	; 0x6c
 8019c02:	4604      	mov	r4, r0
 8019c04:	4630      	mov	r0, r6
 8019c06:	f7f8 fab0 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019c0a:	4605      	mov	r5, r0
 8019c0c:	b940      	cbnz	r0, 8019c20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8019c0e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8019c12:	4620      	mov	r0, r4
 8019c14:	f7ff fcb6 	bl	8019584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8019c18:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8019c1c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8019c20:	4bc6      	ldr	r3, [pc, #792]	; (8019f3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8019c22:	681b      	ldr	r3, [r3, #0]
 8019c24:	b33b      	cbz	r3, 8019c76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 8019c26:	4dc6      	ldr	r5, [pc, #792]	; (8019f40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8019c28:	4628      	mov	r0, r5
 8019c2a:	f7f8 fa9e 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019c2e:	4606      	mov	r6, r0
 8019c30:	bb08      	cbnz	r0, 8019c76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 8019c32:	4628      	mov	r0, r5
 8019c34:	f7ff f9bc 	bl	8018fb0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019c38:	6829      	ldr	r1, [r5, #0]
 8019c3a:	686a      	ldr	r2, [r5, #4]
 8019c3c:	4620      	mov	r0, r4
 8019c3e:	f7ff fca1 	bl	8019584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8019c42:	802e      	strh	r6, [r5, #0]
 8019c44:	806e      	strh	r6, [r5, #2]
 8019c46:	80ae      	strh	r6, [r5, #4]
 8019c48:	80ee      	strh	r6, [r5, #6]
 8019c4a:	4dbe      	ldr	r5, [pc, #760]	; (8019f44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8019c4c:	a809      	add	r0, sp, #36	; 0x24
 8019c4e:	f7ff fc05 	bl	801945c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8019c52:	882f      	ldrh	r7, [r5, #0]
 8019c54:	463e      	mov	r6, r7
 8019c56:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8019c5a:	42b3      	cmp	r3, r6
 8019c5c:	d912      	bls.n	8019c84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 8019c5e:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8019c62:	a809      	add	r0, sp, #36	; 0x24
 8019c64:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 8019c68:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 8019c6c:	3601      	adds	r6, #1
 8019c6e:	f7ff fc67 	bl	8019540 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8019c72:	b2b6      	uxth	r6, r6
 8019c74:	e7ef      	b.n	8019c56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5e>
 8019c76:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8019c7a:	2b00      	cmp	r3, #0
 8019c7c:	d1e5      	bne.n	8019c4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x52>
 8019c7e:	b01b      	add	sp, #108	; 0x6c
 8019c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c84:	463e      	mov	r6, r7
 8019c86:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8019c8a:	42b3      	cmp	r3, r6
 8019c8c:	d90b      	bls.n	8019ca6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8019c8e:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8019c92:	4620      	mov	r0, r4
 8019c94:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8019c98:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8019c9c:	3601      	adds	r6, #1
 8019c9e:	f7ff fc71 	bl	8019584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8019ca2:	b2b6      	uxth	r6, r6
 8019ca4:	e7ef      	b.n	8019c86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8e>
 8019ca6:	4ea8      	ldr	r6, [pc, #672]	; (8019f48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019ca8:	6833      	ldr	r3, [r6, #0]
 8019caa:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8019cae:	2b01      	cmp	r3, #1
 8019cb0:	f040 80d2 	bne.w	8019e58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 8019cb4:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8019cb8:	f8b4 c0e8 	ldrh.w	ip, [r4, #232]	; 0xe8
 8019cbc:	4639      	mov	r1, r7
 8019cbe:	33aa      	adds	r3, #170	; 0xaa
 8019cc0:	2700      	movs	r7, #0
 8019cc2:	458c      	cmp	ip, r1
 8019cc4:	f103 0308 	add.w	r3, r3, #8
 8019cc8:	dd0a      	ble.n	8019ce0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe8>
 8019cca:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8019cce:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8019cd2:	4402      	add	r2, r0
 8019cd4:	b212      	sxth	r2, r2
 8019cd6:	4297      	cmp	r7, r2
 8019cd8:	bfb8      	it	lt
 8019cda:	4617      	movlt	r7, r2
 8019cdc:	3101      	adds	r1, #1
 8019cde:	e7f0      	b.n	8019cc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8019ce0:	4b9a      	ldr	r3, [pc, #616]	; (8019f4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8019ce2:	f8b3 9000 	ldrh.w	r9, [r3]
 8019ce6:	2300      	movs	r3, #0
 8019ce8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8019cec:	f1b9 0f0f 	cmp.w	r9, #15
 8019cf0:	bf8c      	ite	hi
 8019cf2:	ea4f 09d9 	movhi.w	r9, r9, lsr #3
 8019cf6:	f04f 0901 	movls.w	r9, #1
 8019cfa:	f8bd 801a 	ldrh.w	r8, [sp, #26]
 8019cfe:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8019d02:	4440      	add	r0, r8
 8019d04:	fa0f f880 	sxth.w	r8, r0
 8019d08:	6830      	ldr	r0, [r6, #0]
 8019d0a:	4547      	cmp	r7, r8
 8019d0c:	6803      	ldr	r3, [r0, #0]
 8019d0e:	f340 8086 	ble.w	8019e1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x226>
 8019d12:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8019d16:	4798      	blx	r3
 8019d18:	eb08 0309 	add.w	r3, r8, r9
 8019d1c:	4298      	cmp	r0, r3
 8019d1e:	da08      	bge.n	8019d32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8019d20:	4287      	cmp	r7, r0
 8019d22:	dd06      	ble.n	8019d32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8019d24:	4580      	cmp	r8, r0
 8019d26:	dd70      	ble.n	8019e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 8019d28:	f1b8 0f00 	cmp.w	r8, #0
 8019d2c:	dd6d      	ble.n	8019e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 8019d2e:	4638      	mov	r0, r7
 8019d30:	e004      	b.n	8019d3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 8019d32:	4580      	cmp	r8, r0
 8019d34:	dcfb      	bgt.n	8019d2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 8019d36:	42b8      	cmp	r0, r7
 8019d38:	bfa8      	it	ge
 8019d3a:	4638      	movge	r0, r7
 8019d3c:	4b84      	ldr	r3, [pc, #528]	; (8019f50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8019d3e:	f8ad 8016 	strh.w	r8, [sp, #22]
 8019d42:	eba0 0008 	sub.w	r0, r0, r8
 8019d46:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019d4a:	f8b5 8000 	ldrh.w	r8, [r5]
 8019d4e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8019d52:	2200      	movs	r2, #0
 8019d54:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019d58:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019d5c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8019d60:	4543      	cmp	r3, r8
 8019d62:	d9ca      	bls.n	8019cfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 8019d64:	eb04 02c8 	add.w	r2, r4, r8, lsl #3
 8019d68:	ab07      	add	r3, sp, #28
 8019d6a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8019d6e:	6851      	ldr	r1, [r2, #4]
 8019d70:	c303      	stmia	r3!, {r0, r1}
 8019d72:	a905      	add	r1, sp, #20
 8019d74:	a807      	add	r0, sp, #28
 8019d76:	f7fa fbef 	bl	8014558 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019d7a:	2800      	cmp	r0, #0
 8019d7c:	d04c      	beq.n	8019e18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x220>
 8019d7e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8019d82:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8019d86:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8019d8a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8019d8e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8019d92:	4686      	mov	lr, r0
 8019d94:	4290      	cmp	r0, r2
 8019d96:	4450      	add	r0, sl
 8019d98:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8019d9c:	bfb8      	it	lt
 8019d9e:	4696      	movlt	lr, r2
 8019da0:	4452      	add	r2, sl
 8019da2:	b280      	uxth	r0, r0
 8019da4:	b292      	uxth	r2, r2
 8019da6:	4299      	cmp	r1, r3
 8019da8:	fa0f fb80 	sxth.w	fp, r0
 8019dac:	fa0f fa82 	sxth.w	sl, r2
 8019db0:	468c      	mov	ip, r1
 8019db2:	bfb8      	it	lt
 8019db4:	469c      	movlt	ip, r3
 8019db6:	45d3      	cmp	fp, sl
 8019db8:	bfb8      	it	lt
 8019dba:	4602      	movlt	r2, r0
 8019dbc:	eba2 020e 	sub.w	r2, r2, lr
 8019dc0:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019dc4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8019dc8:	f8ad e01c 	strh.w	lr, [sp, #28]
 8019dcc:	4411      	add	r1, r2
 8019dce:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019dd2:	f8ad c01e 	strh.w	ip, [sp, #30]
 8019dd6:	4413      	add	r3, r2
 8019dd8:	b289      	uxth	r1, r1
 8019dda:	b29b      	uxth	r3, r3
 8019ddc:	b208      	sxth	r0, r1
 8019dde:	b21a      	sxth	r2, r3
 8019de0:	4290      	cmp	r0, r2
 8019de2:	bfb8      	it	lt
 8019de4:	460b      	movlt	r3, r1
 8019de6:	eba3 030c 	sub.w	r3, r3, ip
 8019dea:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8019dee:	a807      	add	r0, sp, #28
 8019df0:	f7f8 f9bb 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019df4:	b920      	cbnz	r0, 8019e00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x208>
 8019df6:	6823      	ldr	r3, [r4, #0]
 8019df8:	a907      	add	r1, sp, #28
 8019dfa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019dfc:	4620      	mov	r0, r4
 8019dfe:	4798      	blx	r3
 8019e00:	f108 0801 	add.w	r8, r8, #1
 8019e04:	fa1f f888 	uxth.w	r8, r8
 8019e08:	e7a8      	b.n	8019d5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x164>
 8019e0a:	6830      	ldr	r0, [r6, #0]
 8019e0c:	6803      	ldr	r3, [r0, #0]
 8019e0e:	2101      	movs	r1, #1
 8019e10:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8019e14:	4798      	blx	r3
 8019e16:	e770      	b.n	8019cfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 8019e18:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8019e1c:	e7e7      	b.n	8019dee <_ZN8touchgfx11Application15drawCachedAreasEv+0x1f6>
 8019e1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019e20:	4798      	blx	r3
 8019e22:	4b4c      	ldr	r3, [pc, #304]	; (8019f54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8019e24:	781b      	ldrb	r3, [r3, #0]
 8019e26:	2b00      	cmp	r3, #0
 8019e28:	f43f af29 	beq.w	8019c7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8019e2c:	2300      	movs	r3, #0
 8019e2e:	882d      	ldrh	r5, [r5, #0]
 8019e30:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8019e34:	34ea      	adds	r4, #234	; 0xea
 8019e36:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8019e3a:	42ab      	cmp	r3, r5
 8019e3c:	f67f af1f 	bls.w	8019c7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8019e40:	ab1a      	add	r3, sp, #104	; 0x68
 8019e42:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019e46:	3b44      	subs	r3, #68	; 0x44
 8019e48:	e893 0006 	ldmia.w	r3, {r1, r2}
 8019e4c:	4620      	mov	r0, r4
 8019e4e:	3501      	adds	r5, #1
 8019e50:	f7ff fb76 	bl	8019540 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8019e54:	b2ad      	uxth	r5, r5
 8019e56:	e7ee      	b.n	8019e36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8019e58:	2b02      	cmp	r3, #2
 8019e5a:	f040 8136 	bne.w	801a0ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 8019e5e:	4b3e      	ldr	r3, [pc, #248]	; (8019f58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8019e60:	781b      	ldrb	r3, [r3, #0]
 8019e62:	2b01      	cmp	r3, #1
 8019e64:	d02c      	beq.n	8019ec0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c8>
 8019e66:	f104 0aa8 	add.w	sl, r4, #168	; 0xa8
 8019e6a:	882a      	ldrh	r2, [r5, #0]
 8019e6c:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 8019e70:	3201      	adds	r2, #1
 8019e72:	b292      	uxth	r2, r2
 8019e74:	2900      	cmp	r1, #0
 8019e76:	d0d4      	beq.n	8019e22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 8019e78:	f8b4 70aa 	ldrh.w	r7, [r4, #170]	; 0xaa
 8019e7c:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8019e80:	441f      	add	r7, r3
 8019e82:	b23f      	sxth	r7, r7
 8019e84:	4610      	mov	r0, r2
 8019e86:	f04f 0900 	mov.w	r9, #0
 8019e8a:	b283      	uxth	r3, r0
 8019e8c:	4299      	cmp	r1, r3
 8019e8e:	ea4f 08c9 	mov.w	r8, r9, lsl #3
 8019e92:	f240 80c5 	bls.w	801a020 <_ZN8touchgfx11Application15drawCachedAreasEv+0x428>
 8019e96:	44a0      	add	r8, r4
 8019e98:	eb04 0bc0 	add.w	fp, r4, r0, lsl #3
 8019e9c:	f9b8 30aa 	ldrsh.w	r3, [r8, #170]	; 0xaa
 8019ea0:	f9bb e0aa 	ldrsh.w	lr, [fp, #170]	; 0xaa
 8019ea4:	4573      	cmp	r3, lr
 8019ea6:	4684      	mov	ip, r0
 8019ea8:	f340 80a7 	ble.w	8019ffa <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 8019eac:	f8bb 70ae 	ldrh.w	r7, [fp, #174]	; 0xae
 8019eb0:	4477      	add	r7, lr
 8019eb2:	b23f      	sxth	r7, r7
 8019eb4:	429f      	cmp	r7, r3
 8019eb6:	bfa8      	it	ge
 8019eb8:	461f      	movge	r7, r3
 8019eba:	3001      	adds	r0, #1
 8019ebc:	46e1      	mov	r9, ip
 8019ebe:	e7e4      	b.n	8019e8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x292>
 8019ec0:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8019ec4:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8019ec8:	f1bb 0f00 	cmp.w	fp, #0
 8019ecc:	d0a9      	beq.n	8019e22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 8019ece:	882b      	ldrh	r3, [r5, #0]
 8019ed0:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8019ed4:	3301      	adds	r3, #1
 8019ed6:	b29b      	uxth	r3, r3
 8019ed8:	f04f 0800 	mov.w	r8, #0
 8019edc:	b299      	uxth	r1, r3
 8019ede:	458b      	cmp	fp, r1
 8019ee0:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8019ee4:	d93a      	bls.n	8019f5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8019ee6:	4427      	add	r7, r4
 8019ee8:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8019eec:	f8b7 10ac 	ldrh.w	r1, [r7, #172]	; 0xac
 8019ef0:	f8b7 00a8 	ldrh.w	r0, [r7, #168]	; 0xa8
 8019ef4:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8019ef8:	4408      	add	r0, r1
 8019efa:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8019efe:	4471      	add	r1, lr
 8019f00:	b200      	sxth	r0, r0
 8019f02:	b209      	sxth	r1, r1
 8019f04:	4288      	cmp	r0, r1
 8019f06:	469c      	mov	ip, r3
 8019f08:	da06      	bge.n	8019f18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8019f0a:	4586      	cmp	lr, r0
 8019f0c:	4672      	mov	r2, lr
 8019f0e:	bfb8      	it	lt
 8019f10:	4602      	movlt	r2, r0
 8019f12:	3301      	adds	r3, #1
 8019f14:	46e0      	mov	r8, ip
 8019f16:	e7e1      	b.n	8019edc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>
 8019f18:	d10b      	bne.n	8019f32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8019f1a:	f9b7 c0ae 	ldrsh.w	ip, [r7, #174]	; 0xae
 8019f1e:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8019f22:	458c      	cmp	ip, r1
 8019f24:	bfb4      	ite	lt
 8019f26:	469c      	movlt	ip, r3
 8019f28:	46c4      	movge	ip, r8
 8019f2a:	4572      	cmp	r2, lr
 8019f2c:	bfb8      	it	lt
 8019f2e:	4672      	movlt	r2, lr
 8019f30:	e7ef      	b.n	8019f12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8019f32:	428a      	cmp	r2, r1
 8019f34:	bfb8      	it	lt
 8019f36:	460a      	movlt	r2, r1
 8019f38:	46c4      	mov	ip, r8
 8019f3a:	e7ea      	b.n	8019f12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8019f3c:	2001e218 	.word	0x2001e218
 8019f40:	2001e224 	.word	0x2001e224
 8019f44:	2000009c 	.word	0x2000009c
 8019f48:	2001e1c0 	.word	0x2001e1c0
 8019f4c:	2001e1b6 	.word	0x2001e1b6
 8019f50:	2001e1b4 	.word	0x2001e1b4
 8019f54:	2001e1be 	.word	0x2001e1be
 8019f58:	2001e1b8 	.word	0x2001e1b8
 8019f5c:	19e1      	adds	r1, r4, r7
 8019f5e:	ab07      	add	r3, sp, #28
 8019f60:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8019f64:	6849      	ldr	r1, [r1, #4]
 8019f66:	c303      	stmia	r3!, {r0, r1}
 8019f68:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8019f6c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019f70:	2b13      	cmp	r3, #19
 8019f72:	bfd8      	it	le
 8019f74:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8019f78:	f8ad 201c 	strh.w	r2, [sp, #28]
 8019f7c:	440b      	add	r3, r1
 8019f7e:	1a9b      	subs	r3, r3, r2
 8019f80:	a807      	add	r0, sp, #28
 8019f82:	f8ad 3020 	strh.w	r3, [sp, #32]
 8019f86:	f7ff f82d 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019f8a:	a807      	add	r0, sp, #28
 8019f8c:	f7f8 f8ed 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019f90:	2800      	cmp	r0, #0
 8019f92:	d197      	bne.n	8019ec4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 8019f94:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8019f98:	6830      	ldr	r0, [r6, #0]
 8019f9a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8019f9e:	f8d0 e000 	ldr.w	lr, [r0]
 8019fa2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8019fa6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019faa:	f1bc 0f14 	cmp.w	ip, #20
 8019fae:	bfa8      	it	ge
 8019fb0:	f04f 0c14 	movge.w	ip, #20
 8019fb4:	fa1f fc8c 	uxth.w	ip, ip
 8019fb8:	f8cd c000 	str.w	ip, [sp]
 8019fbc:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8019fc0:	47d0      	blx	sl
 8019fc2:	4682      	mov	sl, r0
 8019fc4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019fc8:	a807      	add	r0, sp, #28
 8019fca:	f7fe fff1 	bl	8018fb0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019fce:	6823      	ldr	r3, [r4, #0]
 8019fd0:	4427      	add	r7, r4
 8019fd2:	4620      	mov	r0, r4
 8019fd4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019fd6:	a907      	add	r1, sp, #28
 8019fd8:	4798      	blx	r3
 8019fda:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	; 0xac
 8019fde:	eba0 000a 	sub.w	r0, r0, sl
 8019fe2:	b200      	sxth	r0, r0
 8019fe4:	f8a7 00ac 	strh.w	r0, [r7, #172]	; 0xac
 8019fe8:	2800      	cmp	r0, #0
 8019fea:	f47f af6b 	bne.w	8019ec4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 8019fee:	fa1f f188 	uxth.w	r1, r8
 8019ff2:	4648      	mov	r0, r9
 8019ff4:	f7ff fa82 	bl	80194fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019ff8:	e764      	b.n	8019ec4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 8019ffa:	d10c      	bne.n	801a016 <_ZN8touchgfx11Application15drawCachedAreasEv+0x41e>
 8019ffc:	f9b8 e0ac 	ldrsh.w	lr, [r8, #172]	; 0xac
 801a000:	f9bb c0ac 	ldrsh.w	ip, [fp, #172]	; 0xac
 801a004:	45e6      	cmp	lr, ip
 801a006:	bfb4      	ite	lt
 801a008:	4684      	movlt	ip, r0
 801a00a:	46cc      	movge	ip, r9
 801a00c:	f8bb e0ae 	ldrh.w	lr, [fp, #174]	; 0xae
 801a010:	4473      	add	r3, lr
 801a012:	b21b      	sxth	r3, r3
 801a014:	e74e      	b.n	8019eb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2bc>
 801a016:	4577      	cmp	r7, lr
 801a018:	bfa8      	it	ge
 801a01a:	4677      	movge	r7, lr
 801a01c:	46cc      	mov	ip, r9
 801a01e:	e74c      	b.n	8019eba <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 801a020:	eb0a 0008 	add.w	r0, sl, r8
 801a024:	44a0      	add	r8, r4
 801a026:	e9cd 1202 	strd	r1, r2, [sp, #8]
 801a02a:	f9b8 b0ae 	ldrsh.w	fp, [r8, #174]	; 0xae
 801a02e:	f1bb 0f13 	cmp.w	fp, #19
 801a032:	bfde      	ittt	le
 801a034:	f8b8 70aa 	ldrhle.w	r7, [r8, #170]	; 0xaa
 801a038:	445f      	addle	r7, fp
 801a03a:	b23f      	sxthle	r7, r7
 801a03c:	f7f8 f895 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 801a040:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801a044:	2800      	cmp	r0, #0
 801a046:	f47f af15 	bne.w	8019e74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27c>
 801a04a:	f9b8 20aa 	ldrsh.w	r2, [r8, #170]	; 0xaa
 801a04e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801a052:	1abf      	subs	r7, r7, r2
 801a054:	2f14      	cmp	r7, #20
 801a056:	f9b8 10a8 	ldrsh.w	r1, [r8, #168]	; 0xa8
 801a05a:	f9b8 30ac 	ldrsh.w	r3, [r8, #172]	; 0xac
 801a05e:	6830      	ldr	r0, [r6, #0]
 801a060:	f8ad 101c 	strh.w	r1, [sp, #28]
 801a064:	f8ad 201e 	strh.w	r2, [sp, #30]
 801a068:	f8ad 3020 	strh.w	r3, [sp, #32]
 801a06c:	bfa8      	it	ge
 801a06e:	2714      	movge	r7, #20
 801a070:	f8d0 c000 	ldr.w	ip, [r0]
 801a074:	b2bf      	uxth	r7, r7
 801a076:	fa1f fb8b 	uxth.w	fp, fp
 801a07a:	455f      	cmp	r7, fp
 801a07c:	bf94      	ite	ls
 801a07e:	9700      	strls	r7, [sp, #0]
 801a080:	f8cd b000 	strhi.w	fp, [sp]
 801a084:	b292      	uxth	r2, r2
 801a086:	f8dc 7090 	ldr.w	r7, [ip, #144]	; 0x90
 801a08a:	b29b      	uxth	r3, r3
 801a08c:	b289      	uxth	r1, r1
 801a08e:	47b8      	blx	r7
 801a090:	6823      	ldr	r3, [r4, #0]
 801a092:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801a096:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801a098:	a907      	add	r1, sp, #28
 801a09a:	4620      	mov	r0, r4
 801a09c:	4798      	blx	r3
 801a09e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801a0a2:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 801a0a6:	f8b8 20aa 	ldrh.w	r2, [r8, #170]	; 0xaa
 801a0aa:	1a5b      	subs	r3, r3, r1
 801a0ac:	440a      	add	r2, r1
 801a0ae:	b21b      	sxth	r3, r3
 801a0b0:	f8a8 20aa 	strh.w	r2, [r8, #170]	; 0xaa
 801a0b4:	f8a8 30ae 	strh.w	r3, [r8, #174]	; 0xae
 801a0b8:	2b00      	cmp	r3, #0
 801a0ba:	f47f aed6 	bne.w	8019e6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 801a0be:	fa1f f189 	uxth.w	r1, r9
 801a0c2:	4650      	mov	r0, sl
 801a0c4:	f7ff fa1a 	bl	80194fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801a0c8:	e6cf      	b.n	8019e6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 801a0ca:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801a0ce:	42bb      	cmp	r3, r7
 801a0d0:	f67f aea7 	bls.w	8019e22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 801a0d4:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 801a0d8:	ab07      	add	r3, sp, #28
 801a0da:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801a0de:	6851      	ldr	r1, [r2, #4]
 801a0e0:	c303      	stmia	r3!, {r0, r1}
 801a0e2:	a807      	add	r0, sp, #28
 801a0e4:	f7f8 f841 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 801a0e8:	b920      	cbnz	r0, 801a0f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fc>
 801a0ea:	6823      	ldr	r3, [r4, #0]
 801a0ec:	a907      	add	r1, sp, #28
 801a0ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801a0f0:	4620      	mov	r0, r4
 801a0f2:	4798      	blx	r3
 801a0f4:	3701      	adds	r7, #1
 801a0f6:	b2bf      	uxth	r7, r7
 801a0f8:	e7e7      	b.n	801a0ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 801a0fa:	bf00      	nop

0801a0fc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801a0fc:	4b03      	ldr	r3, [pc, #12]	; (801a10c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801a0fe:	2200      	movs	r2, #0
 801a100:	801a      	strh	r2, [r3, #0]
 801a102:	805a      	strh	r2, [r3, #2]
 801a104:	809a      	strh	r2, [r3, #4]
 801a106:	80da      	strh	r2, [r3, #6]
 801a108:	4770      	bx	lr
 801a10a:	bf00      	nop
 801a10c:	2001e224 	.word	0x2001e224

0801a110 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801a110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a114:	4606      	mov	r6, r0
 801a116:	b09d      	sub	sp, #116	; 0x74
 801a118:	a803      	add	r0, sp, #12
 801a11a:	4614      	mov	r4, r2
 801a11c:	468a      	mov	sl, r1
 801a11e:	461d      	mov	r5, r3
 801a120:	f000 fe9c 	bl	801ae5c <_ZN8touchgfx12TextProviderC1Ev>
 801a124:	6833      	ldr	r3, [r6, #0]
 801a126:	4630      	mov	r0, r6
 801a128:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a12a:	4798      	blx	r3
 801a12c:	6833      	ldr	r3, [r6, #0]
 801a12e:	4607      	mov	r7, r0
 801a130:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a132:	4630      	mov	r0, r6
 801a134:	4798      	blx	r3
 801a136:	462a      	mov	r2, r5
 801a138:	9000      	str	r0, [sp, #0]
 801a13a:	4621      	mov	r1, r4
 801a13c:	463b      	mov	r3, r7
 801a13e:	a803      	add	r0, sp, #12
 801a140:	f000 fef8 	bl	801af34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a144:	2500      	movs	r5, #0
 801a146:	462c      	mov	r4, r5
 801a148:	46a9      	mov	r9, r5
 801a14a:	46a8      	mov	r8, r5
 801a14c:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801a150:	2300      	movs	r3, #0
 801a152:	9302      	str	r3, [sp, #8]
 801a154:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801a158:	429c      	cmp	r4, r3
 801a15a:	d002      	beq.n	801a162 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801a15c:	455c      	cmp	r4, fp
 801a15e:	bf18      	it	ne
 801a160:	4625      	movne	r5, r4
 801a162:	ab02      	add	r3, sp, #8
 801a164:	4632      	mov	r2, r6
 801a166:	4651      	mov	r1, sl
 801a168:	a803      	add	r0, sp, #12
 801a16a:	f001 f9f3 	bl	801b554 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a16e:	4604      	mov	r4, r0
 801a170:	b108      	cbz	r0, 801a176 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801a172:	280a      	cmp	r0, #10
 801a174:	d10a      	bne.n	801a18c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801a176:	45c1      	cmp	r9, r8
 801a178:	bf38      	it	cc
 801a17a:	46c1      	movcc	r9, r8
 801a17c:	f04f 0800 	mov.w	r8, #0
 801a180:	2c00      	cmp	r4, #0
 801a182:	d1e5      	bne.n	801a150 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801a184:	4648      	mov	r0, r9
 801a186:	b01d      	add	sp, #116	; 0x74
 801a188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a18c:	9a02      	ldr	r2, [sp, #8]
 801a18e:	2a00      	cmp	r2, #0
 801a190:	d0de      	beq.n	801a150 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801a192:	7b57      	ldrb	r7, [r2, #13]
 801a194:	6833      	ldr	r3, [r6, #0]
 801a196:	8894      	ldrh	r4, [r2, #4]
 801a198:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a19a:	007f      	lsls	r7, r7, #1
 801a19c:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801a1a0:	7a97      	ldrb	r7, [r2, #10]
 801a1a2:	4629      	mov	r1, r5
 801a1a4:	4307      	orrs	r7, r0
 801a1a6:	4630      	mov	r0, r6
 801a1a8:	4798      	blx	r3
 801a1aa:	4438      	add	r0, r7
 801a1ac:	4480      	add	r8, r0
 801a1ae:	fa1f f888 	uxth.w	r8, r8
 801a1b2:	e7e5      	b.n	801a180 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801a1b4 <_ZNK8touchgfx4Font12getCharWidthEt>:
 801a1b4:	b508      	push	{r3, lr}
 801a1b6:	6803      	ldr	r3, [r0, #0]
 801a1b8:	68db      	ldr	r3, [r3, #12]
 801a1ba:	4798      	blx	r3
 801a1bc:	b128      	cbz	r0, 801a1ca <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801a1be:	7b43      	ldrb	r3, [r0, #13]
 801a1c0:	7a80      	ldrb	r0, [r0, #10]
 801a1c2:	005b      	lsls	r3, r3, #1
 801a1c4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801a1c8:	4318      	orrs	r0, r3
 801a1ca:	bd08      	pop	{r3, pc}

0801a1cc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801a1cc:	b40e      	push	{r1, r2, r3}
 801a1ce:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a1d0:	b09e      	sub	sp, #120	; 0x78
 801a1d2:	ab23      	add	r3, sp, #140	; 0x8c
 801a1d4:	4605      	mov	r5, r0
 801a1d6:	f853 4b04 	ldr.w	r4, [r3], #4
 801a1da:	9303      	str	r3, [sp, #12]
 801a1dc:	a805      	add	r0, sp, #20
 801a1de:	f000 fe3d 	bl	801ae5c <_ZN8touchgfx12TextProviderC1Ev>
 801a1e2:	682b      	ldr	r3, [r5, #0]
 801a1e4:	4628      	mov	r0, r5
 801a1e6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a1e8:	4798      	blx	r3
 801a1ea:	682b      	ldr	r3, [r5, #0]
 801a1ec:	4606      	mov	r6, r0
 801a1ee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a1f0:	4628      	mov	r0, r5
 801a1f2:	4798      	blx	r3
 801a1f4:	4633      	mov	r3, r6
 801a1f6:	ae1e      	add	r6, sp, #120	; 0x78
 801a1f8:	4621      	mov	r1, r4
 801a1fa:	9000      	str	r0, [sp, #0]
 801a1fc:	9a03      	ldr	r2, [sp, #12]
 801a1fe:	2400      	movs	r4, #0
 801a200:	a805      	add	r0, sp, #20
 801a202:	f000 fe97 	bl	801af34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a206:	f846 4d68 	str.w	r4, [r6, #-104]!
 801a20a:	462a      	mov	r2, r5
 801a20c:	4633      	mov	r3, r6
 801a20e:	4621      	mov	r1, r4
 801a210:	a805      	add	r0, sp, #20
 801a212:	f001 f99f 	bl	801b554 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a216:	b1f0      	cbz	r0, 801a256 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 801a218:	280a      	cmp	r0, #10
 801a21a:	d018      	beq.n	801a24e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801a21c:	9f04      	ldr	r7, [sp, #16]
 801a21e:	b1b7      	cbz	r7, 801a24e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801a220:	7b78      	ldrb	r0, [r7, #13]
 801a222:	7a3b      	ldrb	r3, [r7, #8]
 801a224:	88aa      	ldrh	r2, [r5, #4]
 801a226:	00c1      	lsls	r1, r0, #3
 801a228:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801a22c:	4319      	orrs	r1, r3
 801a22e:	0643      	lsls	r3, r0, #25
 801a230:	bf44      	itt	mi
 801a232:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801a236:	b219      	sxthmi	r1, r3
 801a238:	0100      	lsls	r0, r0, #4
 801a23a:	79fb      	ldrb	r3, [r7, #7]
 801a23c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801a240:	4303      	orrs	r3, r0
 801a242:	4413      	add	r3, r2
 801a244:	1a5b      	subs	r3, r3, r1
 801a246:	b29b      	uxth	r3, r3
 801a248:	42a3      	cmp	r3, r4
 801a24a:	bfc8      	it	gt
 801a24c:	b21c      	sxthgt	r4, r3
 801a24e:	4633      	mov	r3, r6
 801a250:	462a      	mov	r2, r5
 801a252:	2100      	movs	r1, #0
 801a254:	e7dc      	b.n	801a210 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801a256:	b2a0      	uxth	r0, r4
 801a258:	b01e      	add	sp, #120	; 0x78
 801a25a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801a25e:	b003      	add	sp, #12
 801a260:	4770      	bx	lr

0801a262 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801a262:	b40e      	push	{r1, r2, r3}
 801a264:	b570      	push	{r4, r5, r6, lr}
 801a266:	b09d      	sub	sp, #116	; 0x74
 801a268:	ab21      	add	r3, sp, #132	; 0x84
 801a26a:	4604      	mov	r4, r0
 801a26c:	f853 5b04 	ldr.w	r5, [r3], #4
 801a270:	9302      	str	r3, [sp, #8]
 801a272:	a803      	add	r0, sp, #12
 801a274:	f000 fdf2 	bl	801ae5c <_ZN8touchgfx12TextProviderC1Ev>
 801a278:	6823      	ldr	r3, [r4, #0]
 801a27a:	4620      	mov	r0, r4
 801a27c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a27e:	4798      	blx	r3
 801a280:	6823      	ldr	r3, [r4, #0]
 801a282:	4606      	mov	r6, r0
 801a284:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a286:	4620      	mov	r0, r4
 801a288:	4798      	blx	r3
 801a28a:	4633      	mov	r3, r6
 801a28c:	9000      	str	r0, [sp, #0]
 801a28e:	9a02      	ldr	r2, [sp, #8]
 801a290:	4629      	mov	r1, r5
 801a292:	a803      	add	r0, sp, #12
 801a294:	f000 fe4e 	bl	801af34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a298:	a803      	add	r0, sp, #12
 801a29a:	f001 fa55 	bl	801b748 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a29e:	2401      	movs	r4, #1
 801a2a0:	b2a3      	uxth	r3, r4
 801a2a2:	b140      	cbz	r0, 801a2b6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801a2a4:	280a      	cmp	r0, #10
 801a2a6:	bf08      	it	eq
 801a2a8:	3301      	addeq	r3, #1
 801a2aa:	a803      	add	r0, sp, #12
 801a2ac:	bf08      	it	eq
 801a2ae:	b21c      	sxtheq	r4, r3
 801a2b0:	f001 fa4a 	bl	801b748 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a2b4:	e7f4      	b.n	801a2a0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801a2b6:	4618      	mov	r0, r3
 801a2b8:	b01d      	add	sp, #116	; 0x74
 801a2ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a2be:	b003      	add	sp, #12
 801a2c0:	4770      	bx	lr

0801a2c2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801a2c2:	b40e      	push	{r1, r2, r3}
 801a2c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a2c6:	b09e      	sub	sp, #120	; 0x78
 801a2c8:	ab23      	add	r3, sp, #140	; 0x8c
 801a2ca:	4604      	mov	r4, r0
 801a2cc:	f853 5b04 	ldr.w	r5, [r3], #4
 801a2d0:	9303      	str	r3, [sp, #12]
 801a2d2:	a805      	add	r0, sp, #20
 801a2d4:	f000 fdc2 	bl	801ae5c <_ZN8touchgfx12TextProviderC1Ev>
 801a2d8:	6823      	ldr	r3, [r4, #0]
 801a2da:	4620      	mov	r0, r4
 801a2dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a2de:	4798      	blx	r3
 801a2e0:	6823      	ldr	r3, [r4, #0]
 801a2e2:	4606      	mov	r6, r0
 801a2e4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a2e6:	4620      	mov	r0, r4
 801a2e8:	4798      	blx	r3
 801a2ea:	4633      	mov	r3, r6
 801a2ec:	4629      	mov	r1, r5
 801a2ee:	9000      	str	r0, [sp, #0]
 801a2f0:	9a03      	ldr	r2, [sp, #12]
 801a2f2:	a805      	add	r0, sp, #20
 801a2f4:	ad1e      	add	r5, sp, #120	; 0x78
 801a2f6:	f000 fe1d 	bl	801af34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a2fa:	2100      	movs	r1, #0
 801a2fc:	f845 1d68 	str.w	r1, [r5, #-104]!
 801a300:	4622      	mov	r2, r4
 801a302:	462b      	mov	r3, r5
 801a304:	a805      	add	r0, sp, #20
 801a306:	f001 f925 	bl	801b554 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a30a:	26ff      	movs	r6, #255	; 0xff
 801a30c:	b1d8      	cbz	r0, 801a346 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 801a30e:	280a      	cmp	r0, #10
 801a310:	d012      	beq.n	801a338 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801a312:	9804      	ldr	r0, [sp, #16]
 801a314:	b180      	cbz	r0, 801a338 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801a316:	7b47      	ldrb	r7, [r0, #13]
 801a318:	7922      	ldrb	r2, [r4, #4]
 801a31a:	00fb      	lsls	r3, r7, #3
 801a31c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801a320:	7a03      	ldrb	r3, [r0, #8]
 801a322:	430b      	orrs	r3, r1
 801a324:	0679      	lsls	r1, r7, #25
 801a326:	bf44      	itt	mi
 801a328:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a32c:	b21b      	sxthmi	r3, r3
 801a32e:	1ad3      	subs	r3, r2, r3
 801a330:	b2db      	uxtb	r3, r3
 801a332:	429e      	cmp	r6, r3
 801a334:	bf28      	it	cs
 801a336:	461e      	movcs	r6, r3
 801a338:	462b      	mov	r3, r5
 801a33a:	4622      	mov	r2, r4
 801a33c:	2100      	movs	r1, #0
 801a33e:	a805      	add	r0, sp, #20
 801a340:	f001 f908 	bl	801b554 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a344:	e7e2      	b.n	801a30c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 801a346:	4630      	mov	r0, r6
 801a348:	b01e      	add	sp, #120	; 0x78
 801a34a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801a34e:	b003      	add	sp, #12
 801a350:	4770      	bx	lr

0801a352 <_ZNK8touchgfx8Drawable10invalidateEv>:
 801a352:	b513      	push	{r0, r1, r4, lr}
 801a354:	6803      	ldr	r3, [r0, #0]
 801a356:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a35a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a35e:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a362:	2400      	movs	r4, #0
 801a364:	9400      	str	r4, [sp, #0]
 801a366:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a36a:	691b      	ldr	r3, [r3, #16]
 801a36c:	4669      	mov	r1, sp
 801a36e:	4798      	blx	r3
 801a370:	b002      	add	sp, #8
 801a372:	bd10      	pop	{r4, pc}

0801a374 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801a374:	b538      	push	{r3, r4, r5, lr}
 801a376:	680b      	ldr	r3, [r1, #0]
 801a378:	460c      	mov	r4, r1
 801a37a:	68db      	ldr	r3, [r3, #12]
 801a37c:	4605      	mov	r5, r0
 801a37e:	4798      	blx	r3
 801a380:	6823      	ldr	r3, [r4, #0]
 801a382:	4620      	mov	r0, r4
 801a384:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a386:	4629      	mov	r1, r5
 801a388:	4798      	blx	r3
 801a38a:	4628      	mov	r0, r5
 801a38c:	bd38      	pop	{r3, r4, r5, pc}

0801a38e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801a38e:	b410      	push	{r4}
 801a390:	880a      	ldrh	r2, [r1, #0]
 801a392:	8884      	ldrh	r4, [r0, #4]
 801a394:	4422      	add	r2, r4
 801a396:	800a      	strh	r2, [r1, #0]
 801a398:	88c4      	ldrh	r4, [r0, #6]
 801a39a:	884a      	ldrh	r2, [r1, #2]
 801a39c:	4422      	add	r2, r4
 801a39e:	804a      	strh	r2, [r1, #2]
 801a3a0:	6940      	ldr	r0, [r0, #20]
 801a3a2:	b120      	cbz	r0, 801a3ae <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801a3a4:	6803      	ldr	r3, [r0, #0]
 801a3a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a3aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a3ac:	4718      	bx	r3
 801a3ae:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a3b2:	4770      	bx	lr

0801a3b4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801a3b4:	b570      	push	{r4, r5, r6, lr}
 801a3b6:	8882      	ldrh	r2, [r0, #4]
 801a3b8:	880b      	ldrh	r3, [r1, #0]
 801a3ba:	4413      	add	r3, r2
 801a3bc:	800b      	strh	r3, [r1, #0]
 801a3be:	88c2      	ldrh	r2, [r0, #6]
 801a3c0:	884b      	ldrh	r3, [r1, #2]
 801a3c2:	460c      	mov	r4, r1
 801a3c4:	4413      	add	r3, r2
 801a3c6:	804b      	strh	r3, [r1, #2]
 801a3c8:	4605      	mov	r5, r0
 801a3ca:	1d01      	adds	r1, r0, #4
 801a3cc:	4620      	mov	r0, r4
 801a3ce:	f7f7 fe89 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 801a3d2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801a3d6:	2b00      	cmp	r3, #0
 801a3d8:	dd0b      	ble.n	801a3f2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801a3da:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a3de:	2b00      	cmp	r3, #0
 801a3e0:	dd07      	ble.n	801a3f2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801a3e2:	6968      	ldr	r0, [r5, #20]
 801a3e4:	b128      	cbz	r0, 801a3f2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801a3e6:	6803      	ldr	r3, [r0, #0]
 801a3e8:	4621      	mov	r1, r4
 801a3ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a3ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a3f0:	4718      	bx	r3
 801a3f2:	bd70      	pop	{r4, r5, r6, pc}

0801a3f4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801a3f4:	b570      	push	{r4, r5, r6, lr}
 801a3f6:	8882      	ldrh	r2, [r0, #4]
 801a3f8:	880b      	ldrh	r3, [r1, #0]
 801a3fa:	4413      	add	r3, r2
 801a3fc:	800b      	strh	r3, [r1, #0]
 801a3fe:	88c2      	ldrh	r2, [r0, #6]
 801a400:	884b      	ldrh	r3, [r1, #2]
 801a402:	460c      	mov	r4, r1
 801a404:	4413      	add	r3, r2
 801a406:	804b      	strh	r3, [r1, #2]
 801a408:	4605      	mov	r5, r0
 801a40a:	1d01      	adds	r1, r0, #4
 801a40c:	4620      	mov	r0, r4
 801a40e:	f7f7 fe69 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 801a412:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801a416:	2b00      	cmp	r3, #0
 801a418:	dd18      	ble.n	801a44c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801a41a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a41e:	2b00      	cmp	r3, #0
 801a420:	dd14      	ble.n	801a44c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801a422:	6968      	ldr	r0, [r5, #20]
 801a424:	b128      	cbz	r0, 801a432 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801a426:	6803      	ldr	r3, [r0, #0]
 801a428:	4621      	mov	r1, r4
 801a42a:	691b      	ldr	r3, [r3, #16]
 801a42c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a430:	4718      	bx	r3
 801a432:	4b07      	ldr	r3, [pc, #28]	; (801a450 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801a434:	681b      	ldr	r3, [r3, #0]
 801a436:	3304      	adds	r3, #4
 801a438:	429d      	cmp	r5, r3
 801a43a:	d107      	bne.n	801a44c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801a43c:	f7fe ff8c 	bl	8019358 <_ZN8touchgfx11Application11getInstanceEv>
 801a440:	6821      	ldr	r1, [r4, #0]
 801a442:	6862      	ldr	r2, [r4, #4]
 801a444:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a448:	f7ff b89c 	b.w	8019584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801a44c:	bd70      	pop	{r4, r5, r6, pc}
 801a44e:	bf00      	nop
 801a450:	2001e21c 	.word	0x2001e21c

0801a454 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801a454:	b570      	push	{r4, r5, r6, lr}
 801a456:	4604      	mov	r4, r0
 801a458:	4616      	mov	r6, r2
 801a45a:	460d      	mov	r5, r1
 801a45c:	b901      	cbnz	r1, 801a460 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801a45e:	b192      	cbz	r2, 801a486 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801a460:	6823      	ldr	r3, [r4, #0]
 801a462:	4620      	mov	r0, r4
 801a464:	699b      	ldr	r3, [r3, #24]
 801a466:	4798      	blx	r3
 801a468:	88e2      	ldrh	r2, [r4, #6]
 801a46a:	88a1      	ldrh	r1, [r4, #4]
 801a46c:	4432      	add	r2, r6
 801a46e:	4429      	add	r1, r5
 801a470:	4620      	mov	r0, r4
 801a472:	b212      	sxth	r2, r2
 801a474:	b209      	sxth	r1, r1
 801a476:	f7e9 f9e3 	bl	8003840 <_ZN8touchgfx8Drawable5setXYEss>
 801a47a:	6823      	ldr	r3, [r4, #0]
 801a47c:	4620      	mov	r0, r4
 801a47e:	699b      	ldr	r3, [r3, #24]
 801a480:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a484:	4718      	bx	r3
 801a486:	bd70      	pop	{r4, r5, r6, pc}

0801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801a488:	b510      	push	{r4, lr}
 801a48a:	4604      	mov	r4, r0
 801a48c:	4608      	mov	r0, r1
 801a48e:	2300      	movs	r3, #0
 801a490:	8023      	strh	r3, [r4, #0]
 801a492:	8063      	strh	r3, [r4, #2]
 801a494:	6803      	ldr	r3, [r0, #0]
 801a496:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a49a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801a49e:	80a1      	strh	r1, [r4, #4]
 801a4a0:	80e2      	strh	r2, [r4, #6]
 801a4a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a4a4:	4621      	mov	r1, r4
 801a4a6:	4798      	blx	r3
 801a4a8:	4620      	mov	r0, r4
 801a4aa:	bd10      	pop	{r4, pc}

0801a4ac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 801a4ac:	b530      	push	{r4, r5, lr}
 801a4ae:	8083      	strh	r3, [r0, #4]
 801a4b0:	f89d 300c 	ldrb.w	r3, [sp, #12]
 801a4b4:	f89d 5010 	ldrb.w	r5, [sp, #16]
 801a4b8:	7183      	strb	r3, [r0, #6]
 801a4ba:	79c3      	ldrb	r3, [r0, #7]
 801a4bc:	6101      	str	r1, [r0, #16]
 801a4be:	f365 0306 	bfi	r3, r5, #0, #7
 801a4c2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801a4c6:	8282      	strh	r2, [r0, #20]
 801a4c8:	f365 13c7 	bfi	r3, r5, #7, #1
 801a4cc:	71c3      	strb	r3, [r0, #7]
 801a4ce:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801a4d2:	7203      	strb	r3, [r0, #8]
 801a4d4:	f89d 301c 	ldrb.w	r3, [sp, #28]
 801a4d8:	7243      	strb	r3, [r0, #9]
 801a4da:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801a4de:	8143      	strh	r3, [r0, #10]
 801a4e0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801a4e4:	8183      	strh	r3, [r0, #12]
 801a4e6:	4b01      	ldr	r3, [pc, #4]	; (801a4ec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 801a4e8:	6003      	str	r3, [r0, #0]
 801a4ea:	bd30      	pop	{r4, r5, pc}
 801a4ec:	08034fb8 	.word	0x08034fb8

0801a4f0 <_ZNK8touchgfx9ConstFont4findEt>:
 801a4f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a4f2:	6904      	ldr	r4, [r0, #16]
 801a4f4:	b3bc      	cbz	r4, 801a566 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a4f6:	88a3      	ldrh	r3, [r4, #4]
 801a4f8:	8a82      	ldrh	r2, [r0, #20]
 801a4fa:	1acb      	subs	r3, r1, r3
 801a4fc:	f102 32ff 	add.w	r2, r2, #4294967295
 801a500:	d431      	bmi.n	801a566 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a502:	4293      	cmp	r3, r2
 801a504:	dd0c      	ble.n	801a520 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801a506:	230e      	movs	r3, #14
 801a508:	fb03 4302 	mla	r3, r3, r2, r4
 801a50c:	889b      	ldrh	r3, [r3, #4]
 801a50e:	1a5b      	subs	r3, r3, r1
 801a510:	1ad3      	subs	r3, r2, r3
 801a512:	429a      	cmp	r2, r3
 801a514:	db27      	blt.n	801a566 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a516:	2b00      	cmp	r3, #0
 801a518:	bfbc      	itt	lt
 801a51a:	2302      	movlt	r3, #2
 801a51c:	fb92 f3f3 	sdivlt	r3, r2, r3
 801a520:	2500      	movs	r5, #0
 801a522:	260e      	movs	r6, #14
 801a524:	4295      	cmp	r5, r2
 801a526:	dc1e      	bgt.n	801a566 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a528:	fb06 4003 	mla	r0, r6, r3, r4
 801a52c:	8887      	ldrh	r7, [r0, #4]
 801a52e:	42b9      	cmp	r1, r7
 801a530:	d01a      	beq.n	801a568 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801a532:	d20d      	bcs.n	801a550 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801a534:	1e5a      	subs	r2, r3, #1
 801a536:	4295      	cmp	r5, r2
 801a538:	dc15      	bgt.n	801a566 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a53a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801a53e:	1a5b      	subs	r3, r3, r1
 801a540:	1ad3      	subs	r3, r2, r3
 801a542:	429a      	cmp	r2, r3
 801a544:	db0f      	blt.n	801a566 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a546:	429d      	cmp	r5, r3
 801a548:	ddec      	ble.n	801a524 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a54a:	1953      	adds	r3, r2, r5
 801a54c:	105b      	asrs	r3, r3, #1
 801a54e:	e7e9      	b.n	801a524 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a550:	1c5d      	adds	r5, r3, #1
 801a552:	42aa      	cmp	r2, r5
 801a554:	db07      	blt.n	801a566 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a556:	8a43      	ldrh	r3, [r0, #18]
 801a558:	1acb      	subs	r3, r1, r3
 801a55a:	442b      	add	r3, r5
 801a55c:	429d      	cmp	r5, r3
 801a55e:	dc02      	bgt.n	801a566 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a560:	429a      	cmp	r2, r3
 801a562:	dadf      	bge.n	801a524 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a564:	e7f1      	b.n	801a54a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801a566:	2000      	movs	r0, #0
 801a568:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a56a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801a56a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a56c:	4604      	mov	r4, r0
 801a56e:	4617      	mov	r7, r2
 801a570:	461e      	mov	r6, r3
 801a572:	b911      	cbnz	r1, 801a57a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801a574:	2500      	movs	r5, #0
 801a576:	4628      	mov	r0, r5
 801a578:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a57a:	290a      	cmp	r1, #10
 801a57c:	d0fa      	beq.n	801a574 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a57e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801a582:	4291      	cmp	r1, r2
 801a584:	d0f6      	beq.n	801a574 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a586:	f242 020b 	movw	r2, #8203	; 0x200b
 801a58a:	4291      	cmp	r1, r2
 801a58c:	d0f2      	beq.n	801a574 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a58e:	f7ff ffaf 	bl	801a4f0 <_ZNK8touchgfx9ConstFont4findEt>
 801a592:	4605      	mov	r5, r0
 801a594:	b950      	cbnz	r0, 801a5ac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801a596:	6823      	ldr	r3, [r4, #0]
 801a598:	4620      	mov	r0, r4
 801a59a:	691b      	ldr	r3, [r3, #16]
 801a59c:	4798      	blx	r3
 801a59e:	4601      	mov	r1, r0
 801a5a0:	4620      	mov	r0, r4
 801a5a2:	f7ff ffa5 	bl	801a4f0 <_ZNK8touchgfx9ConstFont4findEt>
 801a5a6:	4605      	mov	r5, r0
 801a5a8:	2800      	cmp	r0, #0
 801a5aa:	d0e3      	beq.n	801a574 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a5ac:	6823      	ldr	r3, [r4, #0]
 801a5ae:	4629      	mov	r1, r5
 801a5b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a5b2:	4620      	mov	r0, r4
 801a5b4:	4798      	blx	r3
 801a5b6:	6038      	str	r0, [r7, #0]
 801a5b8:	6823      	ldr	r3, [r4, #0]
 801a5ba:	4620      	mov	r0, r4
 801a5bc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801a5be:	4798      	blx	r3
 801a5c0:	7030      	strb	r0, [r6, #0]
 801a5c2:	e7d8      	b.n	801a576 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801a5c4 <_ZN8touchgfx6memsetEPvhm>:
 801a5c4:	4402      	add	r2, r0
 801a5c6:	4290      	cmp	r0, r2
 801a5c8:	d002      	beq.n	801a5d0 <_ZN8touchgfx6memsetEPvhm+0xc>
 801a5ca:	f800 1b01 	strb.w	r1, [r0], #1
 801a5ce:	e7fa      	b.n	801a5c6 <_ZN8touchgfx6memsetEPvhm+0x2>
 801a5d0:	4770      	bx	lr

0801a5d2 <_ZN8touchgfx4clzuEm>:
 801a5d2:	4603      	mov	r3, r0
 801a5d4:	b1c8      	cbz	r0, 801a60a <_ZN8touchgfx4clzuEm+0x38>
 801a5d6:	0c02      	lsrs	r2, r0, #16
 801a5d8:	0412      	lsls	r2, r2, #16
 801a5da:	b9a2      	cbnz	r2, 801a606 <_ZN8touchgfx4clzuEm+0x34>
 801a5dc:	0403      	lsls	r3, r0, #16
 801a5de:	2010      	movs	r0, #16
 801a5e0:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801a5e4:	bf04      	itt	eq
 801a5e6:	021b      	lsleq	r3, r3, #8
 801a5e8:	3008      	addeq	r0, #8
 801a5ea:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801a5ee:	bf04      	itt	eq
 801a5f0:	011b      	lsleq	r3, r3, #4
 801a5f2:	3004      	addeq	r0, #4
 801a5f4:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801a5f8:	bf04      	itt	eq
 801a5fa:	009b      	lsleq	r3, r3, #2
 801a5fc:	3002      	addeq	r0, #2
 801a5fe:	2b00      	cmp	r3, #0
 801a600:	db04      	blt.n	801a60c <_ZN8touchgfx4clzuEm+0x3a>
 801a602:	3001      	adds	r0, #1
 801a604:	4770      	bx	lr
 801a606:	2000      	movs	r0, #0
 801a608:	e7ea      	b.n	801a5e0 <_ZN8touchgfx4clzuEm+0xe>
 801a60a:	2020      	movs	r0, #32
 801a60c:	4770      	bx	lr

0801a60e <_ZN8touchgfx7muldivuEmmmRm>:
 801a60e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a612:	4680      	mov	r8, r0
 801a614:	460f      	mov	r7, r1
 801a616:	4615      	mov	r5, r2
 801a618:	461e      	mov	r6, r3
 801a61a:	f7ff ffda 	bl	801a5d2 <_ZN8touchgfx4clzuEm>
 801a61e:	b998      	cbnz	r0, 801a648 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801a620:	4608      	mov	r0, r1
 801a622:	f7ff ffd6 	bl	801a5d2 <_ZN8touchgfx4clzuEm>
 801a626:	2800      	cmp	r0, #0
 801a628:	dd08      	ble.n	801a63c <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 801a62a:	4633      	mov	r3, r6
 801a62c:	462a      	mov	r2, r5
 801a62e:	4641      	mov	r1, r8
 801a630:	4638      	mov	r0, r7
 801a632:	f7ff ffec 	bl	801a60e <_ZN8touchgfx7muldivuEmmmRm>
 801a636:	b003      	add	sp, #12
 801a638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a63c:	f04f 33ff 	mov.w	r3, #4294967295
 801a640:	6033      	str	r3, [r6, #0]
 801a642:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801a646:	e7f6      	b.n	801a636 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801a648:	fa31 f900 	lsrs.w	r9, r1, r0
 801a64c:	fb01 f308 	mul.w	r3, r1, r8
 801a650:	d105      	bne.n	801a65e <_ZN8touchgfx7muldivuEmmmRm+0x50>
 801a652:	fbb3 f0f5 	udiv	r0, r3, r5
 801a656:	fb05 3510 	mls	r5, r5, r0, r3
 801a65a:	6035      	str	r5, [r6, #0]
 801a65c:	e7eb      	b.n	801a636 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801a65e:	2301      	movs	r3, #1
 801a660:	fa08 fb00 	lsl.w	fp, r8, r0
 801a664:	fa03 f000 	lsl.w	r0, r3, r0
 801a668:	3801      	subs	r0, #1
 801a66a:	462a      	mov	r2, r5
 801a66c:	4633      	mov	r3, r6
 801a66e:	4641      	mov	r1, r8
 801a670:	4038      	ands	r0, r7
 801a672:	f7ff ffcc 	bl	801a60e <_ZN8touchgfx7muldivuEmmmRm>
 801a676:	fbbb faf5 	udiv	sl, fp, r5
 801a67a:	462a      	mov	r2, r5
 801a67c:	4607      	mov	r7, r0
 801a67e:	ab01      	add	r3, sp, #4
 801a680:	fb05 b11a 	mls	r1, r5, sl, fp
 801a684:	4648      	mov	r0, r9
 801a686:	f7ff ffc2 	bl	801a60e <_ZN8touchgfx7muldivuEmmmRm>
 801a68a:	9b01      	ldr	r3, [sp, #4]
 801a68c:	6832      	ldr	r2, [r6, #0]
 801a68e:	fb09 f40a 	mul.w	r4, r9, sl
 801a692:	441a      	add	r2, r3
 801a694:	fbb2 f3f5 	udiv	r3, r2, r5
 801a698:	441c      	add	r4, r3
 801a69a:	443c      	add	r4, r7
 801a69c:	4420      	add	r0, r4
 801a69e:	fb05 2513 	mls	r5, r5, r3, r2
 801a6a2:	e7da      	b.n	801a65a <_ZN8touchgfx7muldivuEmmmRm+0x4c>

0801a6a4 <_ZN8touchgfx6muldivElllRl>:
 801a6a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a6a6:	2800      	cmp	r0, #0
 801a6a8:	bfba      	itte	lt
 801a6aa:	4240      	neglt	r0, r0
 801a6ac:	f04f 34ff 	movlt.w	r4, #4294967295
 801a6b0:	2401      	movge	r4, #1
 801a6b2:	2900      	cmp	r1, #0
 801a6b4:	bfbc      	itt	lt
 801a6b6:	4249      	neglt	r1, r1
 801a6b8:	4264      	neglt	r4, r4
 801a6ba:	2a00      	cmp	r2, #0
 801a6bc:	bfb6      	itet	lt
 801a6be:	4265      	neglt	r5, r4
 801a6c0:	4625      	movge	r5, r4
 801a6c2:	4252      	neglt	r2, r2
 801a6c4:	4288      	cmp	r0, r1
 801a6c6:	461e      	mov	r6, r3
 801a6c8:	bfc2      	ittt	gt
 801a6ca:	4603      	movgt	r3, r0
 801a6cc:	4608      	movgt	r0, r1
 801a6ce:	4619      	movgt	r1, r3
 801a6d0:	ab01      	add	r3, sp, #4
 801a6d2:	f7ff ff9c 	bl	801a60e <_ZN8touchgfx7muldivuEmmmRm>
 801a6d6:	9b01      	ldr	r3, [sp, #4]
 801a6d8:	4368      	muls	r0, r5
 801a6da:	435c      	muls	r4, r3
 801a6dc:	6034      	str	r4, [r6, #0]
 801a6de:	b002      	add	sp, #8
 801a6e0:	bd70      	pop	{r4, r5, r6, pc}

0801a6e2 <_ZN8touchgfx6muldivElll>:
 801a6e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a6e4:	4606      	mov	r6, r0
 801a6e6:	ab01      	add	r3, sp, #4
 801a6e8:	460d      	mov	r5, r1
 801a6ea:	4614      	mov	r4, r2
 801a6ec:	f7ff ffda 	bl	801a6a4 <_ZN8touchgfx6muldivElllRl>
 801a6f0:	2e00      	cmp	r6, #0
 801a6f2:	db20      	blt.n	801a736 <_ZN8touchgfx6muldivElll+0x54>
 801a6f4:	bf14      	ite	ne
 801a6f6:	2301      	movne	r3, #1
 801a6f8:	2300      	moveq	r3, #0
 801a6fa:	2d00      	cmp	r5, #0
 801a6fc:	db1e      	blt.n	801a73c <_ZN8touchgfx6muldivElll+0x5a>
 801a6fe:	bf14      	ite	ne
 801a700:	2201      	movne	r2, #1
 801a702:	2200      	moveq	r2, #0
 801a704:	2c00      	cmp	r4, #0
 801a706:	fb03 f202 	mul.w	r2, r3, r2
 801a70a:	db1a      	blt.n	801a742 <_ZN8touchgfx6muldivElll+0x60>
 801a70c:	bf14      	ite	ne
 801a70e:	2301      	movne	r3, #1
 801a710:	2300      	moveq	r3, #0
 801a712:	4353      	muls	r3, r2
 801a714:	2b01      	cmp	r3, #1
 801a716:	d117      	bne.n	801a748 <_ZN8touchgfx6muldivElll+0x66>
 801a718:	9b01      	ldr	r3, [sp, #4]
 801a71a:	2c00      	cmp	r4, #0
 801a71c:	bfb8      	it	lt
 801a71e:	4264      	neglt	r4, r4
 801a720:	2b00      	cmp	r3, #0
 801a722:	f104 0401 	add.w	r4, r4, #1
 801a726:	bfb8      	it	lt
 801a728:	425b      	neglt	r3, r3
 801a72a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801a72e:	db00      	blt.n	801a732 <_ZN8touchgfx6muldivElll+0x50>
 801a730:	3001      	adds	r0, #1
 801a732:	b002      	add	sp, #8
 801a734:	bd70      	pop	{r4, r5, r6, pc}
 801a736:	f04f 33ff 	mov.w	r3, #4294967295
 801a73a:	e7de      	b.n	801a6fa <_ZN8touchgfx6muldivElll+0x18>
 801a73c:	f04f 32ff 	mov.w	r2, #4294967295
 801a740:	e7e0      	b.n	801a704 <_ZN8touchgfx6muldivElll+0x22>
 801a742:	f04f 33ff 	mov.w	r3, #4294967295
 801a746:	e7e4      	b.n	801a712 <_ZN8touchgfx6muldivElll+0x30>
 801a748:	3301      	adds	r3, #1
 801a74a:	d1f2      	bne.n	801a732 <_ZN8touchgfx6muldivElll+0x50>
 801a74c:	9b01      	ldr	r3, [sp, #4]
 801a74e:	2c00      	cmp	r4, #0
 801a750:	bfb8      	it	lt
 801a752:	4264      	neglt	r4, r4
 801a754:	2b00      	cmp	r3, #0
 801a756:	bfb8      	it	lt
 801a758:	425b      	neglt	r3, r3
 801a75a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801a75e:	bfc8      	it	gt
 801a760:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801a764:	e7e5      	b.n	801a732 <_ZN8touchgfx6muldivElll+0x50>

0801a766 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801a766:	2000      	movs	r0, #0
 801a768:	4770      	bx	lr

0801a76a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801a76a:	2001      	movs	r0, #1
 801a76c:	4770      	bx	lr

0801a76e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801a76e:	2002      	movs	r0, #2
 801a770:	4770      	bx	lr

0801a772 <_ZN8touchgfx6ScreenD1Ev>:
 801a772:	4770      	bx	lr

0801a774 <_ZN8touchgfx12GestureEventD1Ev>:
 801a774:	4770      	bx	lr

0801a776 <_ZN8touchgfx9DragEventD1Ev>:
 801a776:	4770      	bx	lr

0801a778 <_ZN8touchgfx10ClickEventD1Ev>:
 801a778:	4770      	bx	lr

0801a77a <_ZN8touchgfx10ClickEventD0Ev>:
 801a77a:	b510      	push	{r4, lr}
 801a77c:	210c      	movs	r1, #12
 801a77e:	4604      	mov	r4, r0
 801a780:	f010 fcd3 	bl	802b12a <_ZdlPvj>
 801a784:	4620      	mov	r0, r4
 801a786:	bd10      	pop	{r4, pc}

0801a788 <_ZN8touchgfx9DragEventD0Ev>:
 801a788:	b510      	push	{r4, lr}
 801a78a:	2110      	movs	r1, #16
 801a78c:	4604      	mov	r4, r0
 801a78e:	f010 fccc 	bl	802b12a <_ZdlPvj>
 801a792:	4620      	mov	r0, r4
 801a794:	bd10      	pop	{r4, pc}

0801a796 <_ZN8touchgfx12GestureEventD0Ev>:
 801a796:	b510      	push	{r4, lr}
 801a798:	210c      	movs	r1, #12
 801a79a:	4604      	mov	r4, r0
 801a79c:	f010 fcc5 	bl	802b12a <_ZdlPvj>
 801a7a0:	4620      	mov	r0, r4
 801a7a2:	bd10      	pop	{r4, pc}

0801a7a4 <_ZN8touchgfx6ScreenD0Ev>:
 801a7a4:	b510      	push	{r4, lr}
 801a7a6:	213c      	movs	r1, #60	; 0x3c
 801a7a8:	4604      	mov	r4, r0
 801a7aa:	f010 fcbe 	bl	802b12a <_ZdlPvj>
 801a7ae:	4620      	mov	r0, r4
 801a7b0:	bd10      	pop	{r4, pc}
	...

0801a7b4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801a7b4:	b530      	push	{r4, r5, lr}
 801a7b6:	460d      	mov	r5, r1
 801a7b8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a7ba:	b087      	sub	sp, #28
 801a7bc:	4604      	mov	r4, r0
 801a7be:	b301      	cbz	r1, 801a802 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801a7c0:	a801      	add	r0, sp, #4
 801a7c2:	f7ff fe61 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a7c6:	892a      	ldrh	r2, [r5, #8]
 801a7c8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801a7cc:	7928      	ldrb	r0, [r5, #4]
 801a7ce:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801a7d2:	f88d 0010 	strb.w	r0, [sp, #16]
 801a7d6:	1ad2      	subs	r2, r2, r3
 801a7d8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801a7da:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a7dc:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a7e0:	441a      	add	r2, r3
 801a7e2:	896b      	ldrh	r3, [r5, #10]
 801a7e4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801a7e8:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a7ec:	1b5b      	subs	r3, r3, r5
 801a7ee:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801a7f0:	442b      	add	r3, r5
 801a7f2:	4d05      	ldr	r5, [pc, #20]	; (801a808 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801a7f4:	9503      	str	r5, [sp, #12]
 801a7f6:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a7fa:	6803      	ldr	r3, [r0, #0]
 801a7fc:	a903      	add	r1, sp, #12
 801a7fe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a800:	4798      	blx	r3
 801a802:	b007      	add	sp, #28
 801a804:	bd30      	pop	{r4, r5, pc}
 801a806:	bf00      	nop
 801a808:	08035038 	.word	0x08035038

0801a80c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801a80c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a810:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801a812:	b08a      	sub	sp, #40	; 0x28
 801a814:	4604      	mov	r4, r0
 801a816:	460d      	mov	r5, r1
 801a818:	b113      	cbz	r3, 801a820 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801a81a:	790b      	ldrb	r3, [r1, #4]
 801a81c:	2b00      	cmp	r3, #0
 801a81e:	d044      	beq.n	801a8aa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a820:	f104 0804 	add.w	r8, r4, #4
 801a824:	4641      	mov	r1, r8
 801a826:	a803      	add	r0, sp, #12
 801a828:	f7ff fe2e 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a82c:	792b      	ldrb	r3, [r5, #4]
 801a82e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a832:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801a836:	b983      	cbnz	r3, 801a85a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801a838:	892a      	ldrh	r2, [r5, #8]
 801a83a:	88e9      	ldrh	r1, [r5, #6]
 801a83c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801a840:	1b92      	subs	r2, r2, r6
 801a842:	1bc9      	subs	r1, r1, r7
 801a844:	9301      	str	r3, [sp, #4]
 801a846:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801a84a:	9300      	str	r3, [sp, #0]
 801a84c:	b212      	sxth	r2, r2
 801a84e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801a852:	b209      	sxth	r1, r1
 801a854:	4640      	mov	r0, r8
 801a856:	f7f7 fb61 	bl	8011f1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801a85a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801a85c:	b329      	cbz	r1, 801a8aa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a85e:	a805      	add	r0, sp, #20
 801a860:	f7ff fe12 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a864:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801a868:	792b      	ldrb	r3, [r5, #4]
 801a86a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a86c:	f88d 3020 	strb.w	r3, [sp, #32]
 801a870:	1abf      	subs	r7, r7, r2
 801a872:	88ea      	ldrh	r2, [r5, #6]
 801a874:	4417      	add	r7, r2
 801a876:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801a878:	4417      	add	r7, r2
 801a87a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801a87e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801a882:	1ab6      	subs	r6, r6, r2
 801a884:	892a      	ldrh	r2, [r5, #8]
 801a886:	4416      	add	r6, r2
 801a888:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a88a:	4416      	add	r6, r2
 801a88c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801a890:	4a07      	ldr	r2, [pc, #28]	; (801a8b0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801a892:	9207      	str	r2, [sp, #28]
 801a894:	2600      	movs	r6, #0
 801a896:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801a89a:	6803      	ldr	r3, [r0, #0]
 801a89c:	a907      	add	r1, sp, #28
 801a89e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a8a0:	4798      	blx	r3
 801a8a2:	792b      	ldrb	r3, [r5, #4]
 801a8a4:	b10b      	cbz	r3, 801a8aa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a8a6:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801a8aa:	b00a      	add	sp, #40	; 0x28
 801a8ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a8b0:	08035010 	.word	0x08035010

0801a8b4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801a8b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a8b8:	460c      	mov	r4, r1
 801a8ba:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a8bc:	b088      	sub	sp, #32
 801a8be:	4605      	mov	r5, r0
 801a8c0:	2900      	cmp	r1, #0
 801a8c2:	d06d      	beq.n	801a9a0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801a8c4:	4668      	mov	r0, sp
 801a8c6:	f7ff fddf 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a8ca:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801a8cc:	88e3      	ldrh	r3, [r4, #6]
 801a8ce:	f9bd 8000 	ldrsh.w	r8, [sp]
 801a8d2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801a8d6:	440b      	add	r3, r1
 801a8d8:	b21b      	sxth	r3, r3
 801a8da:	4543      	cmp	r3, r8
 801a8dc:	db31      	blt.n	801a942 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a8de:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801a8e2:	44c4      	add	ip, r8
 801a8e4:	fa0f fc8c 	sxth.w	ip, ip
 801a8e8:	4563      	cmp	r3, ip
 801a8ea:	da2a      	bge.n	801a942 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a8ec:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801a8ee:	8926      	ldrh	r6, [r4, #8]
 801a8f0:	4416      	add	r6, r2
 801a8f2:	b236      	sxth	r6, r6
 801a8f4:	42be      	cmp	r6, r7
 801a8f6:	db24      	blt.n	801a942 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a8f8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801a8fc:	4438      	add	r0, r7
 801a8fe:	b200      	sxth	r0, r0
 801a900:	4286      	cmp	r6, r0
 801a902:	da1e      	bge.n	801a942 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a904:	8963      	ldrh	r3, [r4, #10]
 801a906:	4419      	add	r1, r3
 801a908:	b209      	sxth	r1, r1
 801a90a:	4541      	cmp	r1, r8
 801a90c:	db08      	blt.n	801a920 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a90e:	4561      	cmp	r1, ip
 801a910:	da06      	bge.n	801a920 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a912:	89a3      	ldrh	r3, [r4, #12]
 801a914:	441a      	add	r2, r3
 801a916:	b212      	sxth	r2, r2
 801a918:	42ba      	cmp	r2, r7
 801a91a:	db01      	blt.n	801a920 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a91c:	4282      	cmp	r2, r0
 801a91e:	db10      	blt.n	801a942 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a920:	4b21      	ldr	r3, [pc, #132]	; (801a9a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801a922:	9304      	str	r3, [sp, #16]
 801a924:	2302      	movs	r3, #2
 801a926:	f88d 3014 	strb.w	r3, [sp, #20]
 801a92a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a92c:	2300      	movs	r3, #0
 801a92e:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a932:	f8ad 3018 	strh.w	r3, [sp, #24]
 801a936:	f8ad 301a 	strh.w	r3, [sp, #26]
 801a93a:	6803      	ldr	r3, [r0, #0]
 801a93c:	a904      	add	r1, sp, #16
 801a93e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a940:	4798      	blx	r3
 801a942:	1d29      	adds	r1, r5, #4
 801a944:	a802      	add	r0, sp, #8
 801a946:	f7ff fd9f 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a94a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a94e:	88e0      	ldrh	r0, [r4, #6]
 801a950:	7921      	ldrb	r1, [r4, #4]
 801a952:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801a956:	8922      	ldrh	r2, [r4, #8]
 801a958:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801a95a:	f88d 1014 	strb.w	r1, [sp, #20]
 801a95e:	eba3 0808 	sub.w	r8, r3, r8
 801a962:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a966:	1bdf      	subs	r7, r3, r7
 801a968:	b2bb      	uxth	r3, r7
 801a96a:	fa1f f888 	uxth.w	r8, r8
 801a96e:	8967      	ldrh	r7, [r4, #10]
 801a970:	89a4      	ldrh	r4, [r4, #12]
 801a972:	4440      	add	r0, r8
 801a974:	4460      	add	r0, ip
 801a976:	441a      	add	r2, r3
 801a978:	44b8      	add	r8, r7
 801a97a:	4423      	add	r3, r4
 801a97c:	f8ad 0016 	strh.w	r0, [sp, #22]
 801a980:	4433      	add	r3, r6
 801a982:	4432      	add	r2, r6
 801a984:	44e0      	add	r8, ip
 801a986:	4c09      	ldr	r4, [pc, #36]	; (801a9ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801a988:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a98a:	9404      	str	r4, [sp, #16]
 801a98c:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a990:	f8ad 801a 	strh.w	r8, [sp, #26]
 801a994:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a998:	6803      	ldr	r3, [r0, #0]
 801a99a:	a904      	add	r1, sp, #16
 801a99c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a99e:	4798      	blx	r3
 801a9a0:	b008      	add	sp, #32
 801a9a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a9a6:	bf00      	nop
 801a9a8:	08035010 	.word	0x08035010
 801a9ac:	08035024 	.word	0x08035024

0801a9b0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801a9b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801a9b2:	4604      	mov	r4, r0
 801a9b4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801a9b8:	3201      	adds	r2, #1
 801a9ba:	d112      	bne.n	801a9e2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801a9bc:	6803      	ldr	r3, [r0, #0]
 801a9be:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a9c2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a9c6:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a9ca:	2500      	movs	r5, #0
 801a9cc:	9500      	str	r5, [sp, #0]
 801a9ce:	466d      	mov	r5, sp
 801a9d0:	4629      	mov	r1, r5
 801a9d2:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a9d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a9d8:	4798      	blx	r3
 801a9da:	e895 0003 	ldmia.w	r5, {r0, r1}
 801a9de:	e884 0003 	stmia.w	r4, {r0, r1}
 801a9e2:	4620      	mov	r0, r4
 801a9e4:	b003      	add	sp, #12
 801a9e6:	bd30      	pop	{r4, r5, pc}

0801a9e8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801a9e8:	b513      	push	{r0, r1, r4, lr}
 801a9ea:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801a9ee:	3301      	adds	r3, #1
 801a9f0:	4604      	mov	r4, r0
 801a9f2:	d109      	bne.n	801aa08 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801a9f4:	4601      	mov	r1, r0
 801a9f6:	4668      	mov	r0, sp
 801a9f8:	f7ff fd46 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a9fc:	f8bd 3000 	ldrh.w	r3, [sp]
 801aa00:	8423      	strh	r3, [r4, #32]
 801aa02:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801aa06:	8463      	strh	r3, [r4, #34]	; 0x22
 801aa08:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801aa0c:	b002      	add	sp, #8
 801aa0e:	bd10      	pop	{r4, pc}

0801aa10 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801aa10:	b513      	push	{r0, r1, r4, lr}
 801aa12:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801aa16:	3301      	adds	r3, #1
 801aa18:	4604      	mov	r4, r0
 801aa1a:	d109      	bne.n	801aa30 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801aa1c:	4601      	mov	r1, r0
 801aa1e:	4668      	mov	r0, sp
 801aa20:	f7ff fd32 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801aa24:	f8bd 3000 	ldrh.w	r3, [sp]
 801aa28:	8423      	strh	r3, [r4, #32]
 801aa2a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801aa2e:	8463      	strh	r3, [r4, #34]	; 0x22
 801aa30:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801aa34:	b002      	add	sp, #8
 801aa36:	bd10      	pop	{r4, pc}

0801aa38 <_ZN8touchgfx6ScreenC1Ev>:
 801aa38:	b570      	push	{r4, r5, r6, lr}
 801aa3a:	4605      	mov	r5, r0
 801aa3c:	4b16      	ldr	r3, [pc, #88]	; (801aa98 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801aa3e:	f845 3b04 	str.w	r3, [r5], #4
 801aa42:	2300      	movs	r3, #0
 801aa44:	8103      	strh	r3, [r0, #8]
 801aa46:	8143      	strh	r3, [r0, #10]
 801aa48:	8183      	strh	r3, [r0, #12]
 801aa4a:	81c3      	strh	r3, [r0, #14]
 801aa4c:	8203      	strh	r3, [r0, #16]
 801aa4e:	8243      	strh	r3, [r0, #18]
 801aa50:	8283      	strh	r3, [r0, #20]
 801aa52:	82c3      	strh	r3, [r0, #22]
 801aa54:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801aa58:	6203      	str	r3, [r0, #32]
 801aa5a:	8483      	strh	r3, [r0, #36]	; 0x24
 801aa5c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801aa5e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801aa62:	4a0e      	ldr	r2, [pc, #56]	; (801aa9c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801aa64:	6343      	str	r3, [r0, #52]	; 0x34
 801aa66:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801aa6a:	4b0d      	ldr	r3, [pc, #52]	; (801aaa0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801aa6c:	6042      	str	r2, [r0, #4]
 801aa6e:	f9b3 6000 	ldrsh.w	r6, [r3]
 801aa72:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801aa74:	4a0b      	ldr	r2, [pc, #44]	; (801aaa4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801aa76:	4604      	mov	r4, r0
 801aa78:	2101      	movs	r1, #1
 801aa7a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801aa7e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801aa82:	f9b2 1000 	ldrsh.w	r1, [r2]
 801aa86:	4628      	mov	r0, r5
 801aa88:	4798      	blx	r3
 801aa8a:	6863      	ldr	r3, [r4, #4]
 801aa8c:	4628      	mov	r0, r5
 801aa8e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801aa90:	4631      	mov	r1, r6
 801aa92:	4798      	blx	r3
 801aa94:	4620      	mov	r0, r4
 801aa96:	bd70      	pop	{r4, r5, r6, pc}
 801aa98:	0803504c 	.word	0x0803504c
 801aa9c:	08033264 	.word	0x08033264
 801aaa0:	2001e1b6 	.word	0x2001e1b6
 801aaa4:	2001e1b4 	.word	0x2001e1b4

0801aaa8 <_ZN8touchgfx6Screen4drawEv>:
 801aaa8:	b507      	push	{r0, r1, r2, lr}
 801aaaa:	4b09      	ldr	r3, [pc, #36]	; (801aad0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801aaac:	f9b3 2000 	ldrsh.w	r2, [r3]
 801aab0:	4b08      	ldr	r3, [pc, #32]	; (801aad4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801aab2:	f8ad 2004 	strh.w	r2, [sp, #4]
 801aab6:	f9b3 3000 	ldrsh.w	r3, [r3]
 801aaba:	f8ad 3006 	strh.w	r3, [sp, #6]
 801aabe:	6803      	ldr	r3, [r0, #0]
 801aac0:	2100      	movs	r1, #0
 801aac2:	9100      	str	r1, [sp, #0]
 801aac4:	689b      	ldr	r3, [r3, #8]
 801aac6:	4669      	mov	r1, sp
 801aac8:	4798      	blx	r3
 801aaca:	b003      	add	sp, #12
 801aacc:	f85d fb04 	ldr.w	pc, [sp], #4
 801aad0:	2001e1b4 	.word	0x2001e1b4
 801aad4:	2001e1b6 	.word	0x2001e1b6

0801aad8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801aad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aadc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801aae0:	2b00      	cmp	r3, #0
 801aae2:	b089      	sub	sp, #36	; 0x24
 801aae4:	4680      	mov	r8, r0
 801aae6:	460c      	mov	r4, r1
 801aae8:	4615      	mov	r5, r2
 801aaea:	dd0e      	ble.n	801ab0a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801aaec:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801aaf0:	2b00      	cmp	r3, #0
 801aaf2:	dd0a      	ble.n	801ab0a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801aaf4:	4628      	mov	r0, r5
 801aaf6:	f7ff ff5b 	bl	801a9b0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801aafa:	4621      	mov	r1, r4
 801aafc:	f7f9 fd2c 	bl	8014558 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801ab00:	69eb      	ldr	r3, [r5, #28]
 801ab02:	b928      	cbnz	r0, 801ab10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801ab04:	461d      	mov	r5, r3
 801ab06:	2b00      	cmp	r3, #0
 801ab08:	d1f4      	bne.n	801aaf4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801ab0a:	b009      	add	sp, #36	; 0x24
 801ab0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab10:	ae04      	add	r6, sp, #16
 801ab12:	2b00      	cmp	r3, #0
 801ab14:	f000 80b5 	beq.w	801ac82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801ab18:	682b      	ldr	r3, [r5, #0]
 801ab1a:	4629      	mov	r1, r5
 801ab1c:	68db      	ldr	r3, [r3, #12]
 801ab1e:	a802      	add	r0, sp, #8
 801ab20:	4798      	blx	r3
 801ab22:	4628      	mov	r0, r5
 801ab24:	f7ff ff60 	bl	801a9e8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801ab28:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801ab2c:	4407      	add	r7, r0
 801ab2e:	4628      	mov	r0, r5
 801ab30:	f7ff ff6e 	bl	801aa10 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801ab34:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ab38:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801ab3c:	f8ad 2014 	strh.w	r2, [sp, #20]
 801ab40:	4418      	add	r0, r3
 801ab42:	4621      	mov	r1, r4
 801ab44:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801ab48:	f8ad 0012 	strh.w	r0, [sp, #18]
 801ab4c:	b23f      	sxth	r7, r7
 801ab4e:	4630      	mov	r0, r6
 801ab50:	f8ad 3016 	strh.w	r3, [sp, #22]
 801ab54:	f8ad 7010 	strh.w	r7, [sp, #16]
 801ab58:	f7f7 fac4 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 801ab5c:	4628      	mov	r0, r5
 801ab5e:	f7ff ff27 	bl	801a9b0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801ab62:	4602      	mov	r2, r0
 801ab64:	e896 0003 	ldmia.w	r6, {r0, r1}
 801ab68:	ab06      	add	r3, sp, #24
 801ab6a:	e883 0003 	stmia.w	r3, {r0, r1}
 801ab6e:	4611      	mov	r1, r2
 801ab70:	4618      	mov	r0, r3
 801ab72:	f7f7 fab7 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 801ab76:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801ab7a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801ab7e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801ab82:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801ab86:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801ab8a:	4299      	cmp	r1, r3
 801ab8c:	d10b      	bne.n	801aba6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801ab8e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ab92:	4552      	cmp	r2, sl
 801ab94:	d107      	bne.n	801aba6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801ab96:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801ab9a:	455a      	cmp	r2, fp
 801ab9c:	d103      	bne.n	801aba6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801ab9e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801aba2:	454a      	cmp	r2, r9
 801aba4:	d06d      	beq.n	801ac82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801aba6:	f1bb 0f00 	cmp.w	fp, #0
 801abaa:	dd65      	ble.n	801ac78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801abac:	f1b9 0f00 	cmp.w	r9, #0
 801abb0:	dd62      	ble.n	801ac78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801abb2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801abb6:	fa1f f08a 	uxth.w	r0, sl
 801abba:	4552      	cmp	r2, sl
 801abbc:	9000      	str	r0, [sp, #0]
 801abbe:	da12      	bge.n	801abe6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801abc0:	9301      	str	r3, [sp, #4]
 801abc2:	9b00      	ldr	r3, [sp, #0]
 801abc4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801abc8:	f8ad 2012 	strh.w	r2, [sp, #18]
 801abcc:	1a9a      	subs	r2, r3, r2
 801abce:	f8ad 1010 	strh.w	r1, [sp, #16]
 801abd2:	f8ad 0014 	strh.w	r0, [sp, #20]
 801abd6:	f8ad 2016 	strh.w	r2, [sp, #22]
 801abda:	69ea      	ldr	r2, [r5, #28]
 801abdc:	4631      	mov	r1, r6
 801abde:	4640      	mov	r0, r8
 801abe0:	f7ff ff7a 	bl	801aad8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801abe4:	9b01      	ldr	r3, [sp, #4]
 801abe6:	f9b4 2000 	ldrsh.w	r2, [r4]
 801abea:	429a      	cmp	r2, r3
 801abec:	b29f      	uxth	r7, r3
 801abee:	da0d      	bge.n	801ac0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801abf0:	f8ad 2010 	strh.w	r2, [sp, #16]
 801abf4:	1aba      	subs	r2, r7, r2
 801abf6:	f8ad a012 	strh.w	sl, [sp, #18]
 801abfa:	f8ad 2014 	strh.w	r2, [sp, #20]
 801abfe:	f8ad 9016 	strh.w	r9, [sp, #22]
 801ac02:	69ea      	ldr	r2, [r5, #28]
 801ac04:	4631      	mov	r1, r6
 801ac06:	4640      	mov	r0, r8
 801ac08:	f7ff ff66 	bl	801aad8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ac0c:	8822      	ldrh	r2, [r4, #0]
 801ac0e:	88a3      	ldrh	r3, [r4, #4]
 801ac10:	445f      	add	r7, fp
 801ac12:	4413      	add	r3, r2
 801ac14:	b29b      	uxth	r3, r3
 801ac16:	b2bf      	uxth	r7, r7
 801ac18:	b23a      	sxth	r2, r7
 801ac1a:	b219      	sxth	r1, r3
 801ac1c:	4291      	cmp	r1, r2
 801ac1e:	dd0d      	ble.n	801ac3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801ac20:	1bdb      	subs	r3, r3, r7
 801ac22:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ac26:	f8ad a012 	strh.w	sl, [sp, #18]
 801ac2a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801ac2e:	f8ad 9016 	strh.w	r9, [sp, #22]
 801ac32:	69ea      	ldr	r2, [r5, #28]
 801ac34:	4631      	mov	r1, r6
 801ac36:	4640      	mov	r0, r8
 801ac38:	f7ff ff4e 	bl	801aad8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ac3c:	88e2      	ldrh	r2, [r4, #6]
 801ac3e:	8863      	ldrh	r3, [r4, #2]
 801ac40:	4413      	add	r3, r2
 801ac42:	9a00      	ldr	r2, [sp, #0]
 801ac44:	444a      	add	r2, r9
 801ac46:	b29b      	uxth	r3, r3
 801ac48:	fa1f f982 	uxth.w	r9, r2
 801ac4c:	fa0f f289 	sxth.w	r2, r9
 801ac50:	b219      	sxth	r1, r3
 801ac52:	428a      	cmp	r2, r1
 801ac54:	da15      	bge.n	801ac82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801ac56:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ac5a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ac5e:	f8ad 1014 	strh.w	r1, [sp, #20]
 801ac62:	eba3 0309 	sub.w	r3, r3, r9
 801ac66:	f8ad 0010 	strh.w	r0, [sp, #16]
 801ac6a:	f8ad 2012 	strh.w	r2, [sp, #18]
 801ac6e:	f8ad 3016 	strh.w	r3, [sp, #22]
 801ac72:	69ea      	ldr	r2, [r5, #28]
 801ac74:	4631      	mov	r1, r6
 801ac76:	e001      	b.n	801ac7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801ac78:	69ea      	ldr	r2, [r5, #28]
 801ac7a:	4621      	mov	r1, r4
 801ac7c:	4640      	mov	r0, r8
 801ac7e:	f7ff ff2b 	bl	801aad8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ac82:	4628      	mov	r0, r5
 801ac84:	f7ff fe94 	bl	801a9b0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801ac88:	6861      	ldr	r1, [r4, #4]
 801ac8a:	4602      	mov	r2, r0
 801ac8c:	6820      	ldr	r0, [r4, #0]
 801ac8e:	4633      	mov	r3, r6
 801ac90:	c303      	stmia	r3!, {r0, r1}
 801ac92:	4611      	mov	r1, r2
 801ac94:	4630      	mov	r0, r6
 801ac96:	f7f7 fa25 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 801ac9a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801ac9e:	2b00      	cmp	r3, #0
 801aca0:	f77f af33 	ble.w	801ab0a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801aca4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801aca8:	2b00      	cmp	r3, #0
 801acaa:	f77f af2e 	ble.w	801ab0a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801acae:	4628      	mov	r0, r5
 801acb0:	f7ff fe9a 	bl	801a9e8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801acb4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801acb8:	1a18      	subs	r0, r3, r0
 801acba:	f8ad 0010 	strh.w	r0, [sp, #16]
 801acbe:	4628      	mov	r0, r5
 801acc0:	f7ff fea6 	bl	801aa10 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801acc4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801acc8:	1a18      	subs	r0, r3, r0
 801acca:	f8ad 0012 	strh.w	r0, [sp, #18]
 801acce:	682b      	ldr	r3, [r5, #0]
 801acd0:	4631      	mov	r1, r6
 801acd2:	689b      	ldr	r3, [r3, #8]
 801acd4:	4628      	mov	r0, r5
 801acd6:	4798      	blx	r3
 801acd8:	e717      	b.n	801ab0a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801acda <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801acda:	b570      	push	{r4, r5, r6, lr}
 801acdc:	460c      	mov	r4, r1
 801acde:	b086      	sub	sp, #24
 801ace0:	1d06      	adds	r6, r0, #4
 801ace2:	2300      	movs	r3, #0
 801ace4:	4631      	mov	r1, r6
 801ace6:	4605      	mov	r5, r0
 801ace8:	a802      	add	r0, sp, #8
 801acea:	9301      	str	r3, [sp, #4]
 801acec:	f7ff fbcc 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801acf0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801acf4:	8822      	ldrh	r2, [r4, #0]
 801acf6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801acfa:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801acfe:	f8ad 0014 	strh.w	r0, [sp, #20]
 801ad02:	1ad2      	subs	r2, r2, r3
 801ad04:	8863      	ldrh	r3, [r4, #2]
 801ad06:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ad0a:	1a5b      	subs	r3, r3, r1
 801ad0c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801ad10:	f8ad 1016 	strh.w	r1, [sp, #22]
 801ad14:	aa01      	add	r2, sp, #4
 801ad16:	a904      	add	r1, sp, #16
 801ad18:	4630      	mov	r0, r6
 801ad1a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ad1e:	f7f7 fab9 	bl	8012294 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801ad22:	9a01      	ldr	r2, [sp, #4]
 801ad24:	b11a      	cbz	r2, 801ad2e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801ad26:	4621      	mov	r1, r4
 801ad28:	4628      	mov	r0, r5
 801ad2a:	f7ff fed5 	bl	801aad8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ad2e:	b006      	add	sp, #24
 801ad30:	bd70      	pop	{r4, r5, r6, pc}

0801ad32 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801ad32:	b530      	push	{r4, r5, lr}
 801ad34:	4602      	mov	r2, r0
 801ad36:	4604      	mov	r4, r0
 801ad38:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801ad3c:	b085      	sub	sp, #20
 801ad3e:	460d      	mov	r5, r1
 801ad40:	6851      	ldr	r1, [r2, #4]
 801ad42:	466b      	mov	r3, sp
 801ad44:	c303      	stmia	r3!, {r0, r1}
 801ad46:	4629      	mov	r1, r5
 801ad48:	4668      	mov	r0, sp
 801ad4a:	f7f7 f9cb 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 801ad4e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801ad52:	b12b      	cbz	r3, 801ad60 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801ad54:	4669      	mov	r1, sp
 801ad56:	4620      	mov	r0, r4
 801ad58:	f7ff ffbf 	bl	801acda <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801ad5c:	b005      	add	sp, #20
 801ad5e:	bd30      	pop	{r4, r5, pc}
 801ad60:	3404      	adds	r4, #4
 801ad62:	4621      	mov	r1, r4
 801ad64:	a802      	add	r0, sp, #8
 801ad66:	f7ff fb8f 	bl	801a488 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801ad6a:	f8bd 3000 	ldrh.w	r3, [sp]
 801ad6e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801ad72:	1a9b      	subs	r3, r3, r2
 801ad74:	f8ad 3000 	strh.w	r3, [sp]
 801ad78:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ad7c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801ad80:	4669      	mov	r1, sp
 801ad82:	1a9b      	subs	r3, r3, r2
 801ad84:	4620      	mov	r0, r4
 801ad86:	f8ad 3002 	strh.w	r3, [sp, #2]
 801ad8a:	f7f7 fa4a 	bl	8012222 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801ad8e:	e7e5      	b.n	801ad5c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801ad90 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801ad90:	680a      	ldr	r2, [r1, #0]
 801ad92:	460b      	mov	r3, r1
 801ad94:	6992      	ldr	r2, [r2, #24]
 801ad96:	1d01      	adds	r1, r0, #4
 801ad98:	4618      	mov	r0, r3
 801ad9a:	4710      	bx	r2

0801ad9c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801ad9c:	4298      	cmp	r0, r3
 801ad9e:	d200      	bcs.n	801ada2 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801ada0:	b913      	cbnz	r3, 801ada8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801ada2:	440a      	add	r2, r1
 801ada4:	b210      	sxth	r0, r2
 801ada6:	4770      	bx	lr
 801ada8:	ee07 0a90 	vmov	s15, r0
 801adac:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801adb0:	ee07 3a90 	vmov	s15, r3
 801adb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801adb8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801adbc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801adc0:	ee37 7a66 	vsub.f32	s14, s14, s13
 801adc4:	ee07 2a90 	vmov	s15, r2
 801adc8:	ee67 5a07 	vmul.f32	s11, s14, s14
 801adcc:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801add0:	eee5 6a87 	vfma.f32	s13, s11, s14
 801add4:	ee07 1a90 	vmov	s15, r1
 801add8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801addc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801ade0:	eee6 7a26 	vfma.f32	s15, s12, s13
 801ade4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801ade8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801adec:	bfcc      	ite	gt
 801adee:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801adf2:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801adf6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801adfa:	ee17 3a90 	vmov	r3, s15
 801adfe:	b218      	sxth	r0, r3
 801ae00:	4770      	bx	lr

0801ae02 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801ae02:	4298      	cmp	r0, r3
 801ae04:	d200      	bcs.n	801ae08 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801ae06:	b913      	cbnz	r3, 801ae0e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801ae08:	440a      	add	r2, r1
 801ae0a:	b210      	sxth	r0, r2
 801ae0c:	4770      	bx	lr
 801ae0e:	ee07 2a90 	vmov	s15, r2
 801ae12:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801ae16:	ee07 0a90 	vmov	s15, r0
 801ae1a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801ae1e:	ee67 7a27 	vmul.f32	s15, s14, s15
 801ae22:	ee07 3a10 	vmov	s14, r3
 801ae26:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801ae2a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801ae2e:	ee07 1a90 	vmov	s15, r1
 801ae32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801ae36:	ee77 7a27 	vadd.f32	s15, s14, s15
 801ae3a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801ae3e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801ae42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae46:	bfcc      	ite	gt
 801ae48:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801ae4c:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801ae50:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801ae54:	ee17 3a90 	vmov	r3, s15
 801ae58:	b218      	sxth	r0, r3
 801ae5a:	4770      	bx	lr

0801ae5c <_ZN8touchgfx12TextProviderC1Ev>:
 801ae5c:	b538      	push	{r3, r4, r5, lr}
 801ae5e:	2500      	movs	r5, #0
 801ae60:	2302      	movs	r3, #2
 801ae62:	4604      	mov	r4, r0
 801ae64:	e9c0 5500 	strd	r5, r5, [r0]
 801ae68:	7403      	strb	r3, [r0, #16]
 801ae6a:	6145      	str	r5, [r0, #20]
 801ae6c:	7605      	strb	r5, [r0, #24]
 801ae6e:	83c5      	strh	r5, [r0, #30]
 801ae70:	8405      	strh	r5, [r0, #32]
 801ae72:	86c5      	strh	r5, [r0, #54]	; 0x36
 801ae74:	8705      	strh	r5, [r0, #56]	; 0x38
 801ae76:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801ae78:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801ae7c:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801ae80:	220e      	movs	r2, #14
 801ae82:	4629      	mov	r1, r5
 801ae84:	304c      	adds	r0, #76	; 0x4c
 801ae86:	f011 fa23 	bl	802c2d0 <memset>
 801ae8a:	2301      	movs	r3, #1
 801ae8c:	4620      	mov	r0, r4
 801ae8e:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801ae92:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ae96:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801ae9a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801ae9e:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801aea2:	f7ef fec1 	bl	800ac28 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801aea6:	4620      	mov	r0, r4
 801aea8:	bd38      	pop	{r3, r4, r5, pc}
	...

0801aeac <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801aeac:	b508      	push	{r3, lr}
 801aeae:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801aeb0:	b92b      	cbnz	r3, 801aebe <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 801aeb2:	4b07      	ldr	r3, [pc, #28]	; (801aed0 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 801aeb4:	4a07      	ldr	r2, [pc, #28]	; (801aed4 <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 801aeb6:	4808      	ldr	r0, [pc, #32]	; (801aed8 <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 801aeb8:	21c0      	movs	r1, #192	; 0xc0
 801aeba:	f011 f883 	bl	802bfc4 <__assert_func>
 801aebe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801aec0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aec4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801aec6:	fab0 f080 	clz	r0, r0
 801aeca:	0940      	lsrs	r0, r0, #5
 801aecc:	bd08      	pop	{r3, pc}
 801aece:	bf00      	nop
 801aed0:	08032394 	.word	0x08032394
 801aed4:	080352a7 	.word	0x080352a7
 801aed8:	08032466 	.word	0x08032466

0801aedc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801aedc:	b530      	push	{r4, r5, lr}
 801aede:	2500      	movs	r5, #0
 801aee0:	2401      	movs	r4, #1
 801aee2:	6843      	ldr	r3, [r0, #4]
 801aee4:	b913      	cbnz	r3, 801aeec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801aee6:	6803      	ldr	r3, [r0, #0]
 801aee8:	b313      	cbz	r3, 801af30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801aeea:	6043      	str	r3, [r0, #4]
 801aeec:	7e03      	ldrb	r3, [r0, #24]
 801aeee:	b143      	cbz	r3, 801af02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801aef0:	6943      	ldr	r3, [r0, #20]
 801aef2:	b12b      	cbz	r3, 801af00 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801aef4:	881a      	ldrh	r2, [r3, #0]
 801aef6:	b11a      	cbz	r2, 801af00 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801aef8:	1c9a      	adds	r2, r3, #2
 801aefa:	6142      	str	r2, [r0, #20]
 801aefc:	8818      	ldrh	r0, [r3, #0]
 801aefe:	bd30      	pop	{r4, r5, pc}
 801af00:	7605      	strb	r5, [r0, #24]
 801af02:	6843      	ldr	r3, [r0, #4]
 801af04:	8819      	ldrh	r1, [r3, #0]
 801af06:	b199      	cbz	r1, 801af30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801af08:	1c9a      	adds	r2, r3, #2
 801af0a:	2902      	cmp	r1, #2
 801af0c:	6042      	str	r2, [r0, #4]
 801af0e:	d1f5      	bne.n	801aefc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801af10:	7c03      	ldrb	r3, [r0, #16]
 801af12:	2b01      	cmp	r3, #1
 801af14:	d8e5      	bhi.n	801aee2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801af16:	1c5a      	adds	r2, r3, #1
 801af18:	3302      	adds	r3, #2
 801af1a:	7402      	strb	r2, [r0, #16]
 801af1c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801af20:	6143      	str	r3, [r0, #20]
 801af22:	2b00      	cmp	r3, #0
 801af24:	d0dd      	beq.n	801aee2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801af26:	881b      	ldrh	r3, [r3, #0]
 801af28:	2b00      	cmp	r3, #0
 801af2a:	d0da      	beq.n	801aee2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801af2c:	7604      	strb	r4, [r0, #24]
 801af2e:	e7d8      	b.n	801aee2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801af30:	2000      	movs	r0, #0
 801af32:	e7e4      	b.n	801aefe <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801af34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801af34:	b430      	push	{r4, r5}
 801af36:	6001      	str	r1, [r0, #0]
 801af38:	2100      	movs	r1, #0
 801af3a:	6041      	str	r1, [r0, #4]
 801af3c:	6815      	ldr	r5, [r2, #0]
 801af3e:	6085      	str	r5, [r0, #8]
 801af40:	6852      	ldr	r2, [r2, #4]
 801af42:	6443      	str	r3, [r0, #68]	; 0x44
 801af44:	9b02      	ldr	r3, [sp, #8]
 801af46:	60c2      	str	r2, [r0, #12]
 801af48:	7401      	strb	r1, [r0, #16]
 801af4a:	6141      	str	r1, [r0, #20]
 801af4c:	7601      	strb	r1, [r0, #24]
 801af4e:	8701      	strh	r1, [r0, #56]	; 0x38
 801af50:	8401      	strh	r1, [r0, #32]
 801af52:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801af56:	6483      	str	r3, [r0, #72]	; 0x48
 801af58:	bc30      	pop	{r4, r5}
 801af5a:	f7ef be65 	b.w	800ac28 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801af5e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801af5e:	b408      	push	{r3}
 801af60:	b510      	push	{r4, lr}
 801af62:	b085      	sub	sp, #20
 801af64:	ac07      	add	r4, sp, #28
 801af66:	f854 3b04 	ldr.w	r3, [r4], #4
 801af6a:	9300      	str	r3, [sp, #0]
 801af6c:	4613      	mov	r3, r2
 801af6e:	4622      	mov	r2, r4
 801af70:	9403      	str	r4, [sp, #12]
 801af72:	f7ff ffdf 	bl	801af34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801af76:	b005      	add	sp, #20
 801af78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801af7c:	b001      	add	sp, #4
 801af7e:	4770      	bx	lr

0801af80 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801af80:	b5f0      	push	{r4, r5, r6, r7, lr}
 801af82:	4605      	mov	r5, r0
 801af84:	4608      	mov	r0, r1
 801af86:	b1e9      	cbz	r1, 801afc4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801af88:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801af8c:	460b      	mov	r3, r1
 801af8e:	f101 0708 	add.w	r7, r1, #8
 801af92:	4622      	mov	r2, r4
 801af94:	6818      	ldr	r0, [r3, #0]
 801af96:	6859      	ldr	r1, [r3, #4]
 801af98:	4626      	mov	r6, r4
 801af9a:	c603      	stmia	r6!, {r0, r1}
 801af9c:	3308      	adds	r3, #8
 801af9e:	42bb      	cmp	r3, r7
 801afa0:	4634      	mov	r4, r6
 801afa2:	d1f7      	bne.n	801af94 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801afa4:	6818      	ldr	r0, [r3, #0]
 801afa6:	6030      	str	r0, [r6, #0]
 801afa8:	889b      	ldrh	r3, [r3, #4]
 801afaa:	80b3      	strh	r3, [r6, #4]
 801afac:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801afb0:	015b      	lsls	r3, r3, #5
 801afb2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801afb6:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801afba:	430b      	orrs	r3, r1
 801afbc:	425b      	negs	r3, r3
 801afbe:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801afc2:	4610      	mov	r0, r2
 801afc4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801afc6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801afc6:	b538      	push	{r3, r4, r5, lr}
 801afc8:	460c      	mov	r4, r1
 801afca:	6811      	ldr	r1, [r2, #0]
 801afcc:	4610      	mov	r0, r2
 801afce:	68cd      	ldr	r5, [r1, #12]
 801afd0:	4619      	mov	r1, r3
 801afd2:	47a8      	blx	r5
 801afd4:	2800      	cmp	r0, #0
 801afd6:	bf08      	it	eq
 801afd8:	4620      	moveq	r0, r4
 801afda:	bd38      	pop	{r3, r4, r5, pc}

0801afdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801afdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801afde:	4604      	mov	r4, r0
 801afe0:	4615      	mov	r5, r2
 801afe2:	4608      	mov	r0, r1
 801afe4:	b93a      	cbnz	r2, 801aff6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801afe6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801afea:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801afee:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801aff2:	4628      	mov	r0, r5
 801aff4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801aff6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801affa:	8893      	ldrh	r3, [r2, #4]
 801affc:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801b000:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801b004:	79ee      	ldrb	r6, [r5, #7]
 801b006:	4316      	orrs	r6, r2
 801b008:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 801b00c:	189a      	adds	r2, r3, r2
 801b00e:	b291      	uxth	r1, r2
 801b010:	291d      	cmp	r1, #29
 801b012:	b2b7      	uxth	r7, r6
 801b014:	f200 8083 	bhi.w	801b11e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 801b018:	2201      	movs	r2, #1
 801b01a:	408a      	lsls	r2, r1
 801b01c:	4978      	ldr	r1, [pc, #480]	; (801b200 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 801b01e:	420a      	tst	r2, r1
 801b020:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801b024:	d12d      	bne.n	801b082 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 801b026:	f412 7f60 	tst.w	r2, #896	; 0x380
 801b02a:	d078      	beq.n	801b11e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 801b02c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801b030:	462b      	mov	r3, r5
 801b032:	f105 0e08 	add.w	lr, r5, #8
 801b036:	4615      	mov	r5, r2
 801b038:	6818      	ldr	r0, [r3, #0]
 801b03a:	6859      	ldr	r1, [r3, #4]
 801b03c:	4694      	mov	ip, r2
 801b03e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801b042:	3308      	adds	r3, #8
 801b044:	4573      	cmp	r3, lr
 801b046:	4662      	mov	r2, ip
 801b048:	d1f6      	bne.n	801b038 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 801b04a:	6818      	ldr	r0, [r3, #0]
 801b04c:	f8cc 0000 	str.w	r0, [ip]
 801b050:	889b      	ldrh	r3, [r3, #4]
 801b052:	f8ac 3004 	strh.w	r3, [ip, #4]
 801b056:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801b05a:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801b05e:	b2b3      	uxth	r3, r6
 801b060:	1aca      	subs	r2, r1, r3
 801b062:	b292      	uxth	r2, r2
 801b064:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801b068:	10d2      	asrs	r2, r2, #3
 801b06a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801b06e:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801b072:	4302      	orrs	r2, r0
 801b074:	1bcf      	subs	r7, r1, r7
 801b076:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801b07a:	1afb      	subs	r3, r7, r3
 801b07c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801b080:	e7b7      	b.n	801aff2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801b082:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b084:	b92b      	cbnz	r3, 801b092 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 801b086:	4b5f      	ldr	r3, [pc, #380]	; (801b204 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 801b088:	4a5f      	ldr	r2, [pc, #380]	; (801b208 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 801b08a:	4860      	ldr	r0, [pc, #384]	; (801b20c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 801b08c:	21c0      	movs	r1, #192	; 0xc0
 801b08e:	f010 ff99 	bl	802bfc4 <__assert_func>
 801b092:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b094:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b098:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801b09a:	f640 6333 	movw	r3, #3635	; 0xe33
 801b09e:	4299      	cmp	r1, r3
 801b0a0:	d110      	bne.n	801b0c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 801b0a2:	6803      	ldr	r3, [r0, #0]
 801b0a4:	68db      	ldr	r3, [r3, #12]
 801b0a6:	4798      	blx	r3
 801b0a8:	7b41      	ldrb	r1, [r0, #13]
 801b0aa:	00cb      	lsls	r3, r1, #3
 801b0ac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b0b0:	7a03      	ldrb	r3, [r0, #8]
 801b0b2:	0648      	lsls	r0, r1, #25
 801b0b4:	ea43 0302 	orr.w	r3, r3, r2
 801b0b8:	bf44      	itt	mi
 801b0ba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b0be:	b21b      	sxthmi	r3, r3
 801b0c0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b0c4:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801b0c8:	443b      	add	r3, r7
 801b0ca:	4433      	add	r3, r6
 801b0cc:	b29b      	uxth	r3, r3
 801b0ce:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801b0d2:	462a      	mov	r2, r5
 801b0d4:	f105 0c08 	add.w	ip, r5, #8
 801b0d8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b0dc:	4635      	mov	r5, r6
 801b0de:	6810      	ldr	r0, [r2, #0]
 801b0e0:	6851      	ldr	r1, [r2, #4]
 801b0e2:	4637      	mov	r7, r6
 801b0e4:	c703      	stmia	r7!, {r0, r1}
 801b0e6:	3208      	adds	r2, #8
 801b0e8:	4562      	cmp	r2, ip
 801b0ea:	463e      	mov	r6, r7
 801b0ec:	d1f7      	bne.n	801b0de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 801b0ee:	6810      	ldr	r0, [r2, #0]
 801b0f0:	6038      	str	r0, [r7, #0]
 801b0f2:	8892      	ldrh	r2, [r2, #4]
 801b0f4:	80ba      	strh	r2, [r7, #4]
 801b0f6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b0fa:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b0fe:	10db      	asrs	r3, r3, #3
 801b100:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b104:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b108:	4313      	orrs	r3, r2
 801b10a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b10e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801b112:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801b116:	1a9b      	subs	r3, r3, r2
 801b118:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801b11c:	e769      	b.n	801aff2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801b11e:	f023 0204 	bic.w	r2, r3, #4
 801b122:	f640 611b 	movw	r1, #3611	; 0xe1b
 801b126:	428a      	cmp	r2, r1
 801b128:	d003      	beq.n	801b132 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 801b12a:	f640 621d 	movw	r2, #3613	; 0xe1d
 801b12e:	4293      	cmp	r3, r2
 801b130:	d120      	bne.n	801b174 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 801b132:	3b01      	subs	r3, #1
 801b134:	4602      	mov	r2, r0
 801b136:	b29b      	uxth	r3, r3
 801b138:	4629      	mov	r1, r5
 801b13a:	4620      	mov	r0, r4
 801b13c:	f7ff ff43 	bl	801afc6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801b140:	7b41      	ldrb	r1, [r0, #13]
 801b142:	00cb      	lsls	r3, r1, #3
 801b144:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b148:	7a03      	ldrb	r3, [r0, #8]
 801b14a:	0649      	lsls	r1, r1, #25
 801b14c:	ea43 0302 	orr.w	r3, r3, r2
 801b150:	bf44      	itt	mi
 801b152:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b156:	b21b      	sxthmi	r3, r3
 801b158:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b15c:	7b6b      	ldrb	r3, [r5, #13]
 801b15e:	7aaa      	ldrb	r2, [r5, #10]
 801b160:	005b      	lsls	r3, r3, #1
 801b162:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801b166:	4313      	orrs	r3, r2
 801b168:	115a      	asrs	r2, r3, #5
 801b16a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801b16e:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801b172:	e036      	b.n	801b1e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 801b174:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801b178:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801b17c:	7a2a      	ldrb	r2, [r5, #8]
 801b17e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801b182:	ea42 0201 	orr.w	r2, r2, r1
 801b186:	bf1c      	itt	ne
 801b188:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801b18c:	b212      	sxthne	r2, r2
 801b18e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801b192:	f640 6109 	movw	r1, #3593	; 0xe09
 801b196:	f023 0210 	bic.w	r2, r3, #16
 801b19a:	428a      	cmp	r2, r1
 801b19c:	d003      	beq.n	801b1a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 801b19e:	f640 6213 	movw	r2, #3603	; 0xe13
 801b1a2:	4293      	cmp	r3, r2
 801b1a4:	d12a      	bne.n	801b1fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 801b1a6:	7b6e      	ldrb	r6, [r5, #13]
 801b1a8:	0076      	lsls	r6, r6, #1
 801b1aa:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801b1ae:	7aae      	ldrb	r6, [r5, #10]
 801b1b0:	4316      	orrs	r6, r2
 801b1b2:	f640 6213 	movw	r2, #3603	; 0xe13
 801b1b6:	4293      	cmp	r3, r2
 801b1b8:	bf18      	it	ne
 801b1ba:	f103 33ff 	addne.w	r3, r3, #4294967295
 801b1be:	4602      	mov	r2, r0
 801b1c0:	bf14      	ite	ne
 801b1c2:	b29b      	uxthne	r3, r3
 801b1c4:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801b1c8:	4629      	mov	r1, r5
 801b1ca:	4620      	mov	r0, r4
 801b1cc:	f7ff fefb 	bl	801afc6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801b1d0:	7b43      	ldrb	r3, [r0, #13]
 801b1d2:	7a82      	ldrb	r2, [r0, #10]
 801b1d4:	005b      	lsls	r3, r3, #1
 801b1d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801b1da:	4313      	orrs	r3, r2
 801b1dc:	1af6      	subs	r6, r6, r3
 801b1de:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801b1e2:	7b69      	ldrb	r1, [r5, #13]
 801b1e4:	00cb      	lsls	r3, r1, #3
 801b1e6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b1ea:	7a2b      	ldrb	r3, [r5, #8]
 801b1ec:	4313      	orrs	r3, r2
 801b1ee:	064a      	lsls	r2, r1, #25
 801b1f0:	bf44      	itt	mi
 801b1f2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b1f6:	b21b      	sxthmi	r3, r3
 801b1f8:	1bdb      	subs	r3, r3, r7
 801b1fa:	e73f      	b.n	801b07c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 801b1fc:	2300      	movs	r3, #0
 801b1fe:	e7b6      	b.n	801b16e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 801b200:	3fc00079 	.word	0x3fc00079
 801b204:	08032394 	.word	0x08032394
 801b208:	080352a7 	.word	0x080352a7
 801b20c:	08032466 	.word	0x08032466

0801b210 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801b210:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b214:	4604      	mov	r4, r0
 801b216:	b942      	cbnz	r2, 801b22a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801b218:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b21c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801b220:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801b224:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801b228:	e046      	b.n	801b2b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 801b22a:	7b51      	ldrb	r1, [r2, #13]
 801b22c:	8893      	ldrh	r3, [r2, #4]
 801b22e:	010f      	lsls	r7, r1, #4
 801b230:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801b234:	79d7      	ldrb	r7, [r2, #7]
 801b236:	4307      	orrs	r7, r0
 801b238:	2f04      	cmp	r7, #4
 801b23a:	b2bd      	uxth	r5, r7
 801b23c:	bfcc      	ite	gt
 801b23e:	08bf      	lsrgt	r7, r7, #2
 801b240:	2701      	movle	r7, #1
 801b242:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801b246:	f200 80ab 	bhi.w	801b3a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 801b24a:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801b24e:	4283      	cmp	r3, r0
 801b250:	d216      	bcs.n	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b252:	f240 605b 	movw	r0, #1627	; 0x65b
 801b256:	4283      	cmp	r3, r0
 801b258:	d859      	bhi.n	801b30e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 801b25a:	f240 6057 	movw	r0, #1623	; 0x657
 801b25e:	4283      	cmp	r3, r0
 801b260:	d20e      	bcs.n	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b262:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801b266:	d24a      	bcs.n	801b2fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 801b268:	f240 604e 	movw	r0, #1614	; 0x64e
 801b26c:	4283      	cmp	r3, r0
 801b26e:	d207      	bcs.n	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b270:	f240 601a 	movw	r0, #1562	; 0x61a
 801b274:	4283      	cmp	r3, r0
 801b276:	d02a      	beq.n	801b2ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b278:	d821      	bhi.n	801b2be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 801b27a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801b27e:	d35b      	bcc.n	801b338 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801b280:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801b284:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b288:	f040 80d0 	bne.w	801b42c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 801b28c:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801b290:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b294:	f040 80ca 	bne.w	801b42c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 801b298:	00cb      	lsls	r3, r1, #3
 801b29a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801b29e:	7a13      	ldrb	r3, [r2, #8]
 801b2a0:	0649      	lsls	r1, r1, #25
 801b2a2:	ea43 0300 	orr.w	r3, r3, r0
 801b2a6:	bf44      	itt	mi
 801b2a8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b2ac:	b21b      	sxthmi	r3, r3
 801b2ae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b2b2:	1b5d      	subs	r5, r3, r5
 801b2b4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b2b8:	4610      	mov	r0, r2
 801b2ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b2be:	f240 604b 	movw	r0, #1611	; 0x64b
 801b2c2:	4283      	cmp	r3, r0
 801b2c4:	d338      	bcc.n	801b338 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801b2c6:	f240 604c 	movw	r0, #1612	; 0x64c
 801b2ca:	4283      	cmp	r3, r0
 801b2cc:	d9d8      	bls.n	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b2ce:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801b2d2:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801b2d6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b2da:	f040 80f1 	bne.w	801b4c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 801b2de:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b2e2:	f040 80ed 	bne.w	801b4c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 801b2e6:	00cb      	lsls	r3, r1, #3
 801b2e8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801b2ec:	7a13      	ldrb	r3, [r2, #8]
 801b2ee:	064e      	lsls	r6, r1, #25
 801b2f0:	ea43 0300 	orr.w	r3, r3, r0
 801b2f4:	bf44      	itt	mi
 801b2f6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b2fa:	b21b      	sxthmi	r3, r3
 801b2fc:	e7d9      	b.n	801b2b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 801b2fe:	f240 6054 	movw	r0, #1620	; 0x654
 801b302:	4283      	cmp	r3, r0
 801b304:	d8e3      	bhi.n	801b2ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b306:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801b30a:	d9e0      	bls.n	801b2ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b30c:	e7b8      	b.n	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b30e:	f240 6074 	movw	r0, #1652	; 0x674
 801b312:	4283      	cmp	r3, r0
 801b314:	d0b4      	beq.n	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b316:	d82d      	bhi.n	801b374 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 801b318:	f240 605e 	movw	r0, #1630	; 0x65e
 801b31c:	4283      	cmp	r3, r0
 801b31e:	d804      	bhi.n	801b32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 801b320:	f240 605d 	movw	r0, #1629	; 0x65d
 801b324:	4283      	cmp	r3, r0
 801b326:	d3d2      	bcc.n	801b2ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b328:	e7aa      	b.n	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b32a:	f240 605f 	movw	r0, #1631	; 0x65f
 801b32e:	4283      	cmp	r3, r0
 801b330:	d0cd      	beq.n	801b2ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b332:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801b336:	d0a3      	beq.n	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b338:	00cb      	lsls	r3, r1, #3
 801b33a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801b33e:	7a13      	ldrb	r3, [r2, #8]
 801b340:	0649      	lsls	r1, r1, #25
 801b342:	ea43 0300 	orr.w	r3, r3, r0
 801b346:	bf44      	itt	mi
 801b348:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b34c:	b21b      	sxthmi	r3, r3
 801b34e:	1b5d      	subs	r5, r3, r5
 801b350:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b354:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b358:	7b53      	ldrb	r3, [r2, #13]
 801b35a:	015b      	lsls	r3, r3, #5
 801b35c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801b360:	7993      	ldrb	r3, [r2, #6]
 801b362:	430b      	orrs	r3, r1
 801b364:	005b      	lsls	r3, r3, #1
 801b366:	2105      	movs	r1, #5
 801b368:	fb93 f3f1 	sdiv	r3, r3, r1
 801b36c:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801b370:	440b      	add	r3, r1
 801b372:	e757      	b.n	801b224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801b374:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801b378:	4283      	cmp	r3, r0
 801b37a:	d809      	bhi.n	801b390 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 801b37c:	f240 60df 	movw	r0, #1759	; 0x6df
 801b380:	4283      	cmp	r3, r0
 801b382:	f4bf af7d 	bcs.w	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b386:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801b38a:	2b05      	cmp	r3, #5
 801b38c:	d8d4      	bhi.n	801b338 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801b38e:	e777      	b.n	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b390:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801b394:	4283      	cmp	r3, r0
 801b396:	d09a      	beq.n	801b2ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b398:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801b39c:	4283      	cmp	r3, r0
 801b39e:	e7ca      	b.n	801b336 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 801b3a0:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801b3a4:	d22b      	bcs.n	801b3fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 801b3a6:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801b3aa:	4283      	cmp	r3, r0
 801b3ac:	d28f      	bcs.n	801b2ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b3ae:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801b3b2:	4283      	cmp	r3, r0
 801b3b4:	d816      	bhi.n	801b3e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 801b3b6:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801b3ba:	4283      	cmp	r3, r0
 801b3bc:	f4bf af60 	bcs.w	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b3c0:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801b3c4:	4283      	cmp	r3, r0
 801b3c6:	d80a      	bhi.n	801b3de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 801b3c8:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801b3cc:	4283      	cmp	r3, r0
 801b3ce:	f4bf af57 	bcs.w	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b3d2:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801b3d6:	4283      	cmp	r3, r0
 801b3d8:	f43f af79 	beq.w	801b2ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b3dc:	e7ac      	b.n	801b338 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801b3de:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801b3e2:	e7f8      	b.n	801b3d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 801b3e4:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801b3e8:	4283      	cmp	r3, r0
 801b3ea:	d802      	bhi.n	801b3f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 801b3ec:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801b3f0:	e798      	b.n	801b324 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 801b3f2:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801b3f6:	4283      	cmp	r3, r0
 801b3f8:	f47f af42 	bne.w	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b3fc:	e767      	b.n	801b2ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b3fe:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801b402:	4283      	cmp	r3, r0
 801b404:	f43f af63 	beq.w	801b2ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b408:	d802      	bhi.n	801b410 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 801b40a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801b40e:	e7f2      	b.n	801b3f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 801b410:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801b414:	4283      	cmp	r3, r0
 801b416:	d805      	bhi.n	801b424 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 801b418:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801b41c:	4283      	cmp	r3, r0
 801b41e:	f4ff af2f 	bcc.w	801b280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b422:	e754      	b.n	801b2ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b424:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801b428:	4283      	cmp	r3, r0
 801b42a:	e7af      	b.n	801b38c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 801b42c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801b430:	4617      	mov	r7, r2
 801b432:	f102 0808 	add.w	r8, r2, #8
 801b436:	4666      	mov	r6, ip
 801b438:	6838      	ldr	r0, [r7, #0]
 801b43a:	6879      	ldr	r1, [r7, #4]
 801b43c:	46e6      	mov	lr, ip
 801b43e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801b442:	3708      	adds	r7, #8
 801b444:	4547      	cmp	r7, r8
 801b446:	46f4      	mov	ip, lr
 801b448:	d1f6      	bne.n	801b438 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 801b44a:	6838      	ldr	r0, [r7, #0]
 801b44c:	f8ce 0000 	str.w	r0, [lr]
 801b450:	88b9      	ldrh	r1, [r7, #4]
 801b452:	f8ae 1004 	strh.w	r1, [lr, #4]
 801b456:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801b45a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b45e:	d009      	beq.n	801b474 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 801b460:	7b51      	ldrb	r1, [r2, #13]
 801b462:	7992      	ldrb	r2, [r2, #6]
 801b464:	0149      	lsls	r1, r1, #5
 801b466:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801b46a:	4311      	orrs	r1, r2
 801b46c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801b470:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801b474:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b478:	d00d      	beq.n	801b496 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 801b47a:	442b      	add	r3, r5
 801b47c:	b29b      	uxth	r3, r3
 801b47e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b482:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b486:	10db      	asrs	r3, r3, #3
 801b488:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b48c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b490:	4313      	orrs	r3, r2
 801b492:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b496:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801b49a:	00cb      	lsls	r3, r1, #3
 801b49c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b4a0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801b4a4:	064f      	lsls	r7, r1, #25
 801b4a6:	ea43 0302 	orr.w	r3, r3, r2
 801b4aa:	bf44      	itt	mi
 801b4ac:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b4b0:	b21b      	sxthmi	r3, r3
 801b4b2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b4b6:	1b5d      	subs	r5, r3, r5
 801b4b8:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b4bc:	4632      	mov	r2, r6
 801b4be:	e6fb      	b.n	801b2b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 801b4c0:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 801b4c4:	4694      	mov	ip, r2
 801b4c6:	f102 0908 	add.w	r9, r2, #8
 801b4ca:	4676      	mov	r6, lr
 801b4cc:	f8dc 0000 	ldr.w	r0, [ip]
 801b4d0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801b4d4:	46f0      	mov	r8, lr
 801b4d6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801b4da:	f10c 0c08 	add.w	ip, ip, #8
 801b4de:	45cc      	cmp	ip, r9
 801b4e0:	46c6      	mov	lr, r8
 801b4e2:	d1f3      	bne.n	801b4cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 801b4e4:	f8dc 0000 	ldr.w	r0, [ip]
 801b4e8:	f8c8 0000 	str.w	r0, [r8]
 801b4ec:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 801b4f0:	f8a8 1004 	strh.w	r1, [r8, #4]
 801b4f4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801b4f8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b4fc:	d009      	beq.n	801b512 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 801b4fe:	7b51      	ldrb	r1, [r2, #13]
 801b500:	7992      	ldrb	r2, [r2, #6]
 801b502:	0149      	lsls	r1, r1, #5
 801b504:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801b508:	4311      	orrs	r1, r2
 801b50a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801b50e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801b512:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b516:	d00d      	beq.n	801b534 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 801b518:	1bdb      	subs	r3, r3, r7
 801b51a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b51e:	b29b      	uxth	r3, r3
 801b520:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b524:	10db      	asrs	r3, r3, #3
 801b526:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b52a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b52e:	4313      	orrs	r3, r2
 801b530:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b534:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801b538:	00cb      	lsls	r3, r1, #3
 801b53a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b53e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801b542:	0648      	lsls	r0, r1, #25
 801b544:	ea43 0302 	orr.w	r3, r3, r2
 801b548:	bf44      	itt	mi
 801b54a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b54e:	b21b      	sxthmi	r3, r3
 801b550:	e7b1      	b.n	801b4b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0801b554 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801b554:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b558:	461e      	mov	r6, r3
 801b55a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801b55c:	4604      	mov	r4, r0
 801b55e:	4617      	mov	r7, r2
 801b560:	b92b      	cbnz	r3, 801b56e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 801b562:	4b25      	ldr	r3, [pc, #148]	; (801b5f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 801b564:	4a25      	ldr	r2, [pc, #148]	; (801b5fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 801b566:	4826      	ldr	r0, [pc, #152]	; (801b600 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 801b568:	21c0      	movs	r1, #192	; 0xc0
 801b56a:	f010 fd2b 	bl	802bfc4 <__assert_func>
 801b56e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b570:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b574:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b578:	f7ef fb14 	bl	800aba4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b57c:	4605      	mov	r5, r0
 801b57e:	b918      	cbnz	r0, 801b588 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 801b580:	6030      	str	r0, [r6, #0]
 801b582:	4628      	mov	r0, r5
 801b584:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b588:	683b      	ldr	r3, [r7, #0]
 801b58a:	4601      	mov	r1, r0
 801b58c:	68db      	ldr	r3, [r3, #12]
 801b58e:	4638      	mov	r0, r7
 801b590:	4798      	blx	r3
 801b592:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b596:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b59a:	4602      	mov	r2, r0
 801b59c:	6030      	str	r0, [r6, #0]
 801b59e:	d213      	bcs.n	801b5c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 801b5a0:	4643      	mov	r3, r8
 801b5a2:	4639      	mov	r1, r7
 801b5a4:	4620      	mov	r0, r4
 801b5a6:	f7ff fe33 	bl	801b210 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b5aa:	6030      	str	r0, [r6, #0]
 801b5ac:	6833      	ldr	r3, [r6, #0]
 801b5ae:	b143      	cbz	r3, 801b5c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 801b5b0:	7b5a      	ldrb	r2, [r3, #13]
 801b5b2:	7a9b      	ldrb	r3, [r3, #10]
 801b5b4:	0052      	lsls	r2, r2, #1
 801b5b6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b5ba:	4313      	orrs	r3, r2
 801b5bc:	bf0c      	ite	eq
 801b5be:	2301      	moveq	r3, #1
 801b5c0:	2300      	movne	r3, #0
 801b5c2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b5c6:	e7dc      	b.n	801b582 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 801b5c8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b5cc:	b29b      	uxth	r3, r3
 801b5ce:	2b7f      	cmp	r3, #127	; 0x7f
 801b5d0:	d804      	bhi.n	801b5dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 801b5d2:	4639      	mov	r1, r7
 801b5d4:	4620      	mov	r0, r4
 801b5d6:	f7ff fd01 	bl	801afdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b5da:	e7e6      	b.n	801b5aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801b5dc:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b5e0:	2b00      	cmp	r3, #0
 801b5e2:	d0e3      	beq.n	801b5ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801b5e4:	f640 1302 	movw	r3, #2306	; 0x902
 801b5e8:	429d      	cmp	r5, r3
 801b5ea:	d1df      	bne.n	801b5ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801b5ec:	4601      	mov	r1, r0
 801b5ee:	4620      	mov	r0, r4
 801b5f0:	f7ff fcc6 	bl	801af80 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b5f4:	e7d9      	b.n	801b5aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801b5f6:	bf00      	nop
 801b5f8:	08032394 	.word	0x08032394
 801b5fc:	080352a7 	.word	0x080352a7
 801b600:	08032466 	.word	0x08032466

0801b604 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801b604:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b608:	461e      	mov	r6, r3
 801b60a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801b60c:	4604      	mov	r4, r0
 801b60e:	4617      	mov	r7, r2
 801b610:	b92b      	cbnz	r3, 801b61e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 801b612:	4b26      	ldr	r3, [pc, #152]	; (801b6ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 801b614:	4a26      	ldr	r2, [pc, #152]	; (801b6b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 801b616:	4827      	ldr	r0, [pc, #156]	; (801b6b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 801b618:	21c0      	movs	r1, #192	; 0xc0
 801b61a:	f010 fcd3 	bl	802bfc4 <__assert_func>
 801b61e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b620:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b624:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b628:	f7ef fabc 	bl	800aba4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b62c:	4605      	mov	r5, r0
 801b62e:	b918      	cbnz	r0, 801b638 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 801b630:	6030      	str	r0, [r6, #0]
 801b632:	4628      	mov	r0, r5
 801b634:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b638:	683b      	ldr	r3, [r7, #0]
 801b63a:	4601      	mov	r1, r0
 801b63c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801b640:	4638      	mov	r0, r7
 801b642:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801b646:	47c8      	blx	r9
 801b648:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b64c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b650:	4602      	mov	r2, r0
 801b652:	6030      	str	r0, [r6, #0]
 801b654:	d213      	bcs.n	801b67e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 801b656:	4643      	mov	r3, r8
 801b658:	4639      	mov	r1, r7
 801b65a:	4620      	mov	r0, r4
 801b65c:	f7ff fdd8 	bl	801b210 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b660:	6030      	str	r0, [r6, #0]
 801b662:	6833      	ldr	r3, [r6, #0]
 801b664:	b143      	cbz	r3, 801b678 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 801b666:	7b5a      	ldrb	r2, [r3, #13]
 801b668:	7a9b      	ldrb	r3, [r3, #10]
 801b66a:	0052      	lsls	r2, r2, #1
 801b66c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b670:	4313      	orrs	r3, r2
 801b672:	bf0c      	ite	eq
 801b674:	2301      	moveq	r3, #1
 801b676:	2300      	movne	r3, #0
 801b678:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b67c:	e7d9      	b.n	801b632 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 801b67e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b682:	b29b      	uxth	r3, r3
 801b684:	2b7f      	cmp	r3, #127	; 0x7f
 801b686:	d804      	bhi.n	801b692 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 801b688:	4639      	mov	r1, r7
 801b68a:	4620      	mov	r0, r4
 801b68c:	f7ff fca6 	bl	801afdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b690:	e7e6      	b.n	801b660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801b692:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b696:	2b00      	cmp	r3, #0
 801b698:	d0e3      	beq.n	801b662 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801b69a:	f640 1302 	movw	r3, #2306	; 0x902
 801b69e:	429d      	cmp	r5, r3
 801b6a0:	d1df      	bne.n	801b662 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801b6a2:	4601      	mov	r1, r0
 801b6a4:	4620      	mov	r0, r4
 801b6a6:	f7ff fc6b 	bl	801af80 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b6aa:	e7d9      	b.n	801b660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801b6ac:	08032394 	.word	0x08032394
 801b6b0:	080352a7 	.word	0x080352a7
 801b6b4:	08032466 	.word	0x08032466

0801b6b8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801b6b8:	b510      	push	{r4, lr}
 801b6ba:	4604      	mov	r4, r0
 801b6bc:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801b6c0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b6c2:	b9d9      	cbnz	r1, 801b6fc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 801b6c4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b6c6:	2b0a      	cmp	r3, #10
 801b6c8:	d037      	beq.n	801b73a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 801b6ca:	4620      	mov	r0, r4
 801b6cc:	f7ff fc06 	bl	801aedc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801b6d0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b6d2:	2b09      	cmp	r3, #9
 801b6d4:	d906      	bls.n	801b6e4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 801b6d6:	4b19      	ldr	r3, [pc, #100]	; (801b73c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 801b6d8:	4a19      	ldr	r2, [pc, #100]	; (801b740 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 801b6da:	481a      	ldr	r0, [pc, #104]	; (801b744 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 801b6dc:	f44f 7182 	mov.w	r1, #260	; 0x104
 801b6e0:	f010 fc70 	bl	802bfc4 <__assert_func>
 801b6e4:	1c5a      	adds	r2, r3, #1
 801b6e6:	8722      	strh	r2, [r4, #56]	; 0x38
 801b6e8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b6ea:	4413      	add	r3, r2
 801b6ec:	b29b      	uxth	r3, r3
 801b6ee:	2b09      	cmp	r3, #9
 801b6f0:	bf88      	it	hi
 801b6f2:	3b0a      	subhi	r3, #10
 801b6f4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b6f8:	8458      	strh	r0, [r3, #34]	; 0x22
 801b6fa:	e7e3      	b.n	801b6c4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 801b6fc:	2b0a      	cmp	r3, #10
 801b6fe:	d01c      	beq.n	801b73a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 801b700:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801b702:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801b706:	3901      	subs	r1, #1
 801b708:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801b70a:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801b70e:	1c51      	adds	r1, r2, #1
 801b710:	b289      	uxth	r1, r1
 801b712:	2901      	cmp	r1, #1
 801b714:	bf8a      	itet	hi
 801b716:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801b71a:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801b71c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801b71e:	2b09      	cmp	r3, #9
 801b720:	d8d9      	bhi.n	801b6d6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 801b722:	1c5a      	adds	r2, r3, #1
 801b724:	8722      	strh	r2, [r4, #56]	; 0x38
 801b726:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b728:	4413      	add	r3, r2
 801b72a:	b29b      	uxth	r3, r3
 801b72c:	2b09      	cmp	r3, #9
 801b72e:	bf88      	it	hi
 801b730:	3b0a      	subhi	r3, #10
 801b732:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b736:	8458      	strh	r0, [r3, #34]	; 0x22
 801b738:	e7c0      	b.n	801b6bc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801b73a:	bd10      	pop	{r4, pc}
 801b73c:	08035078 	.word	0x08035078
 801b740:	080353fd 	.word	0x080353fd
 801b744:	08032466 	.word	0x08032466

0801b748 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801b748:	b538      	push	{r3, r4, r5, lr}
 801b74a:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801b74c:	4604      	mov	r4, r0
 801b74e:	b92a      	cbnz	r2, 801b75c <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 801b750:	4b13      	ldr	r3, [pc, #76]	; (801b7a0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 801b752:	4a14      	ldr	r2, [pc, #80]	; (801b7a4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 801b754:	4814      	ldr	r0, [pc, #80]	; (801b7a8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 801b756:	21d5      	movs	r1, #213	; 0xd5
 801b758:	f010 fc34 	bl	802bfc4 <__assert_func>
 801b75c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b75e:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 801b762:	3a01      	subs	r2, #1
 801b764:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 801b766:	8702      	strh	r2, [r0, #56]	; 0x38
 801b768:	1c5a      	adds	r2, r3, #1
 801b76a:	b292      	uxth	r2, r2
 801b76c:	2a09      	cmp	r2, #9
 801b76e:	bf86      	itte	hi
 801b770:	3b09      	subhi	r3, #9
 801b772:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801b774:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801b776:	f7ff ff9f 	bl	801b6b8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801b77a:	8c23      	ldrh	r3, [r4, #32]
 801b77c:	2b01      	cmp	r3, #1
 801b77e:	bf9c      	itt	ls
 801b780:	3301      	addls	r3, #1
 801b782:	8423      	strhls	r3, [r4, #32]
 801b784:	8be3      	ldrh	r3, [r4, #30]
 801b786:	b90b      	cbnz	r3, 801b78c <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 801b788:	2302      	movs	r3, #2
 801b78a:	83e3      	strh	r3, [r4, #30]
 801b78c:	8be3      	ldrh	r3, [r4, #30]
 801b78e:	3b01      	subs	r3, #1
 801b790:	b29b      	uxth	r3, r3
 801b792:	83e3      	strh	r3, [r4, #30]
 801b794:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b798:	4628      	mov	r0, r5
 801b79a:	8365      	strh	r5, [r4, #26]
 801b79c:	bd38      	pop	{r3, r4, r5, pc}
 801b79e:	bf00      	nop
 801b7a0:	08032394 	.word	0x08032394
 801b7a4:	08035352 	.word	0x08035352
 801b7a8:	08032466 	.word	0x08032466

0801b7ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801b7ac:	b538      	push	{r3, r4, r5, lr}
 801b7ae:	428a      	cmp	r2, r1
 801b7b0:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801b7b2:	d90c      	bls.n	801b7ce <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 801b7b4:	b92c      	cbnz	r4, 801b7c2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 801b7b6:	4b1c      	ldr	r3, [pc, #112]	; (801b828 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 801b7b8:	4a1c      	ldr	r2, [pc, #112]	; (801b82c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 801b7ba:	21e1      	movs	r1, #225	; 0xe1
 801b7bc:	481c      	ldr	r0, [pc, #112]	; (801b830 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 801b7be:	f010 fc01 	bl	802bfc4 <__assert_func>
 801b7c2:	3c01      	subs	r4, #1
 801b7c4:	8704      	strh	r4, [r0, #56]	; 0x38
 801b7c6:	4b1b      	ldr	r3, [pc, #108]	; (801b834 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 801b7c8:	4a1b      	ldr	r2, [pc, #108]	; (801b838 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 801b7ca:	21c5      	movs	r1, #197	; 0xc5
 801b7cc:	e7f6      	b.n	801b7bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801b7ce:	428c      	cmp	r4, r1
 801b7d0:	d203      	bcs.n	801b7da <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 801b7d2:	4b1a      	ldr	r3, [pc, #104]	; (801b83c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 801b7d4:	4a1a      	ldr	r2, [pc, #104]	; (801b840 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 801b7d6:	21cb      	movs	r1, #203	; 0xcb
 801b7d8:	e7f0      	b.n	801b7bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801b7da:	1a64      	subs	r4, r4, r1
 801b7dc:	8704      	strh	r4, [r0, #56]	; 0x38
 801b7de:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 801b7e0:	4421      	add	r1, r4
 801b7e2:	b289      	uxth	r1, r1
 801b7e4:	2909      	cmp	r1, #9
 801b7e6:	bf88      	it	hi
 801b7e8:	390a      	subhi	r1, #10
 801b7ea:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b7ec:	250a      	movs	r5, #10
 801b7ee:	b1ba      	cbz	r2, 801b820 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 801b7f0:	3a01      	subs	r2, #1
 801b7f2:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801b7f4:	b292      	uxth	r2, r2
 801b7f6:	2909      	cmp	r1, #9
 801b7f8:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801b7fc:	d903      	bls.n	801b806 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 801b7fe:	4b11      	ldr	r3, [pc, #68]	; (801b844 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 801b800:	4a11      	ldr	r2, [pc, #68]	; (801b848 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 801b802:	21e6      	movs	r1, #230	; 0xe6
 801b804:	e7da      	b.n	801b7bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801b806:	3101      	adds	r1, #1
 801b808:	8701      	strh	r1, [r0, #56]	; 0x38
 801b80a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b80c:	b901      	cbnz	r1, 801b810 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 801b80e:	86c5      	strh	r5, [r0, #54]	; 0x36
 801b810:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b812:	3901      	subs	r1, #1
 801b814:	b289      	uxth	r1, r1
 801b816:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b818:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801b81c:	844c      	strh	r4, [r1, #34]	; 0x22
 801b81e:	e7e6      	b.n	801b7ee <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 801b820:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b824:	f7ff bf48 	b.w	801b6b8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801b828:	08032394 	.word	0x08032394
 801b82c:	0803512b 	.word	0x0803512b
 801b830:	08032466 	.word	0x08032466
 801b834:	08032492 	.word	0x08032492
 801b838:	080351d5 	.word	0x080351d5
 801b83c:	08035084 	.word	0x08035084
 801b840:	080354ac 	.word	0x080354ac
 801b844:	08035090 	.word	0x08035090
 801b848:	080350a3 	.word	0x080350a3

0801b84c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801b84c:	3a01      	subs	r2, #1
 801b84e:	b570      	push	{r4, r5, r6, lr}
 801b850:	b292      	uxth	r2, r2
 801b852:	f64f 76ff 	movw	r6, #65535	; 0xffff
 801b856:	42b2      	cmp	r2, r6
 801b858:	d019      	beq.n	801b88e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 801b85a:	8c04      	ldrh	r4, [r0, #32]
 801b85c:	f831 5b02 	ldrh.w	r5, [r1], #2
 801b860:	4294      	cmp	r4, r2
 801b862:	d805      	bhi.n	801b870 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 801b864:	4b19      	ldr	r3, [pc, #100]	; (801b8cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 801b866:	4a1a      	ldr	r2, [pc, #104]	; (801b8d0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 801b868:	481a      	ldr	r0, [pc, #104]	; (801b8d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 801b86a:	21c5      	movs	r1, #197	; 0xc5
 801b86c:	f010 fbaa 	bl	802bfc4 <__assert_func>
 801b870:	8bc4      	ldrh	r4, [r0, #30]
 801b872:	4414      	add	r4, r2
 801b874:	b2a4      	uxth	r4, r4
 801b876:	2c01      	cmp	r4, #1
 801b878:	bf88      	it	hi
 801b87a:	3c02      	subhi	r4, #2
 801b87c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b880:	3a01      	subs	r2, #1
 801b882:	8b64      	ldrh	r4, [r4, #26]
 801b884:	42ac      	cmp	r4, r5
 801b886:	b292      	uxth	r2, r2
 801b888:	d0e5      	beq.n	801b856 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 801b88a:	2000      	movs	r0, #0
 801b88c:	bd70      	pop	{r4, r5, r6, pc}
 801b88e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b892:	2400      	movs	r4, #0
 801b894:	4413      	add	r3, r2
 801b896:	b2a2      	uxth	r2, r4
 801b898:	429a      	cmp	r2, r3
 801b89a:	da14      	bge.n	801b8c6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 801b89c:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 801b89e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801b8a2:	4296      	cmp	r6, r2
 801b8a4:	d802      	bhi.n	801b8ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 801b8a6:	4b09      	ldr	r3, [pc, #36]	; (801b8cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 801b8a8:	4a0b      	ldr	r2, [pc, #44]	; (801b8d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 801b8aa:	e7dd      	b.n	801b868 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 801b8ac:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801b8ae:	4432      	add	r2, r6
 801b8b0:	b292      	uxth	r2, r2
 801b8b2:	2a09      	cmp	r2, #9
 801b8b4:	bf88      	it	hi
 801b8b6:	3a0a      	subhi	r2, #10
 801b8b8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b8bc:	3401      	adds	r4, #1
 801b8be:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b8c0:	42aa      	cmp	r2, r5
 801b8c2:	d0e8      	beq.n	801b896 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 801b8c4:	e7e1      	b.n	801b88a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 801b8c6:	2001      	movs	r0, #1
 801b8c8:	e7e0      	b.n	801b88c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 801b8ca:	bf00      	nop
 801b8cc:	08032492 	.word	0x08032492
 801b8d0:	08035530 	.word	0x08035530
 801b8d4:	08032466 	.word	0x08032466
 801b8d8:	080351d5 	.word	0x080351d5

0801b8dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801b8dc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b8e0:	4605      	mov	r5, r0
 801b8e2:	4616      	mov	r6, r2
 801b8e4:	1c8c      	adds	r4, r1, #2
 801b8e6:	8809      	ldrh	r1, [r1, #0]
 801b8e8:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801b8ec:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801b8f0:	42b3      	cmp	r3, r6
 801b8f2:	d124      	bne.n	801b93e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801b8f4:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801b8f8:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801b8fc:	f001 070f 	and.w	r7, r1, #15
 801b900:	f8cd 8000 	str.w	r8, [sp]
 801b904:	464b      	mov	r3, r9
 801b906:	4652      	mov	r2, sl
 801b908:	4621      	mov	r1, r4
 801b90a:	4628      	mov	r0, r5
 801b90c:	f7ff ff9e 	bl	801b84c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801b910:	4683      	mov	fp, r0
 801b912:	b168      	cbz	r0, 801b930 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801b914:	eb0a 0109 	add.w	r1, sl, r9
 801b918:	4441      	add	r1, r8
 801b91a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801b91e:	463a      	mov	r2, r7
 801b920:	4649      	mov	r1, r9
 801b922:	4628      	mov	r0, r5
 801b924:	f7ff ff42 	bl	801b7ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801b928:	4658      	mov	r0, fp
 801b92a:	b003      	add	sp, #12
 801b92c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b930:	eb07 010a 	add.w	r1, r7, sl
 801b934:	4449      	add	r1, r9
 801b936:	4441      	add	r1, r8
 801b938:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801b93c:	e7d2      	b.n	801b8e4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801b93e:	f04f 0b00 	mov.w	fp, #0
 801b942:	e7f1      	b.n	801b928 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801b944 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801b944:	b570      	push	{r4, r5, r6, lr}
 801b946:	8810      	ldrh	r0, [r2, #0]
 801b948:	4298      	cmp	r0, r3
 801b94a:	d817      	bhi.n	801b97c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b94c:	1e48      	subs	r0, r1, #1
 801b94e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801b952:	4298      	cmp	r0, r3
 801b954:	d312      	bcc.n	801b97c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b956:	2400      	movs	r4, #0
 801b958:	428c      	cmp	r4, r1
 801b95a:	d20f      	bcs.n	801b97c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b95c:	1860      	adds	r0, r4, r1
 801b95e:	1040      	asrs	r0, r0, #1
 801b960:	0085      	lsls	r5, r0, #2
 801b962:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801b966:	42b3      	cmp	r3, r6
 801b968:	d902      	bls.n	801b970 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801b96a:	3001      	adds	r0, #1
 801b96c:	b284      	uxth	r4, r0
 801b96e:	e7f3      	b.n	801b958 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b970:	d201      	bcs.n	801b976 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b972:	b281      	uxth	r1, r0
 801b974:	e7f0      	b.n	801b958 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b976:	442a      	add	r2, r5
 801b978:	8850      	ldrh	r0, [r2, #2]
 801b97a:	bd70      	pop	{r4, r5, r6, pc}
 801b97c:	2000      	movs	r0, #0
 801b97e:	e7fc      	b.n	801b97a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b980 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b980:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b984:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b986:	886f      	ldrh	r7, [r5, #2]
 801b988:	4604      	mov	r4, r0
 801b98a:	087f      	lsrs	r7, r7, #1
 801b98c:	260b      	movs	r6, #11
 801b98e:	3e01      	subs	r6, #1
 801b990:	d01b      	beq.n	801b9ca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801b992:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b994:	b92b      	cbnz	r3, 801b9a2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 801b996:	4b0e      	ldr	r3, [pc, #56]	; (801b9d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 801b998:	4a0e      	ldr	r2, [pc, #56]	; (801b9d4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 801b99a:	480f      	ldr	r0, [pc, #60]	; (801b9d8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 801b99c:	21c0      	movs	r1, #192	; 0xc0
 801b99e:	f010 fb11 	bl	802bfc4 <__assert_func>
 801b9a2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b9a4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b9a8:	462a      	mov	r2, r5
 801b9aa:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b9ae:	4639      	mov	r1, r7
 801b9b0:	4643      	mov	r3, r8
 801b9b2:	4620      	mov	r0, r4
 801b9b4:	f7ff ffc6 	bl	801b944 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b9b8:	b138      	cbz	r0, 801b9ca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801b9ba:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b9be:	4642      	mov	r2, r8
 801b9c0:	4620      	mov	r0, r4
 801b9c2:	f7ff ff8b 	bl	801b8dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b9c6:	2800      	cmp	r0, #0
 801b9c8:	d1e1      	bne.n	801b98e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b9ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b9ce:	bf00      	nop
 801b9d0:	08032394 	.word	0x08032394
 801b9d4:	080352a7 	.word	0x080352a7
 801b9d8:	08032466 	.word	0x08032466

0801b9dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801b9dc:	b570      	push	{r4, r5, r6, lr}
 801b9de:	694a      	ldr	r2, [r1, #20]
 801b9e0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801b9e2:	684b      	ldr	r3, [r1, #4]
 801b9e4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801b9e6:	1b54      	subs	r4, r2, r5
 801b9e8:	f000 8106 	beq.w	801bbf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801b9ec:	1b9b      	subs	r3, r3, r6
 801b9ee:	d003      	beq.n	801b9f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b9f0:	4363      	muls	r3, r4
 801b9f2:	2210      	movs	r2, #16
 801b9f4:	fb93 f3f2 	sdiv	r3, r3, r2
 801b9f8:	680c      	ldr	r4, [r1, #0]
 801b9fa:	698a      	ldr	r2, [r1, #24]
 801b9fc:	1b65      	subs	r5, r4, r5
 801b9fe:	f000 80fd 	beq.w	801bbfc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801ba02:	1b92      	subs	r2, r2, r6
 801ba04:	d003      	beq.n	801ba0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801ba06:	436a      	muls	r2, r5
 801ba08:	2410      	movs	r4, #16
 801ba0a:	fb92 f2f4 	sdiv	r2, r2, r4
 801ba0e:	1a9b      	subs	r3, r3, r2
 801ba10:	ee07 3a90 	vmov	s15, r3
 801ba14:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801bc38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801ba18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801ba1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ba20:	ee67 7a84 	vmul.f32	s15, s15, s8
 801ba24:	460a      	mov	r2, r1
 801ba26:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801ba2a:	4603      	mov	r3, r0
 801ba2c:	f100 040c 	add.w	r4, r0, #12
 801ba30:	eeb1 6a43 	vneg.f32	s12, s6
 801ba34:	edd2 7a02 	vldr	s15, [r2, #8]
 801ba38:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801ba3c:	3214      	adds	r2, #20
 801ba3e:	ece3 6a01 	vstmia	r3!, {s13}
 801ba42:	ed52 7a02 	vldr	s15, [r2, #-8]
 801ba46:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801ba4a:	429c      	cmp	r4, r3
 801ba4c:	edc3 7a02 	vstr	s15, [r3, #8]
 801ba50:	ed52 7a01 	vldr	s15, [r2, #-4]
 801ba54:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801ba58:	edc3 7a05 	vstr	s15, [r3, #20]
 801ba5c:	d1ea      	bne.n	801ba34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801ba5e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801ba60:	698b      	ldr	r3, [r1, #24]
 801ba62:	edd0 4a02 	vldr	s9, [r0, #8]
 801ba66:	edd0 3a00 	vldr	s7, [r0]
 801ba6a:	edd0 6a01 	vldr	s13, [r0, #4]
 801ba6e:	ed90 5a05 	vldr	s10, [r0, #20]
 801ba72:	ed90 2a03 	vldr	s4, [r0, #12]
 801ba76:	edd0 5a04 	vldr	s11, [r0, #16]
 801ba7a:	ed90 1a07 	vldr	s2, [r0, #28]
 801ba7e:	edd0 2a06 	vldr	s5, [r0, #24]
 801ba82:	1a9b      	subs	r3, r3, r2
 801ba84:	ee07 3a90 	vmov	s15, r3
 801ba88:	684b      	ldr	r3, [r1, #4]
 801ba8a:	1a9b      	subs	r3, r3, r2
 801ba8c:	ee07 3a10 	vmov	s14, r3
 801ba90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801ba94:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801ba98:	ee67 7a84 	vmul.f32	s15, s15, s8
 801ba9c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801baa0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801baa4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801baa8:	ee27 7a04 	vmul.f32	s14, s14, s8
 801baac:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801bab0:	eee6 7a87 	vfma.f32	s15, s13, s14
 801bab4:	ee32 5a45 	vsub.f32	s10, s4, s10
 801bab8:	ee67 7a83 	vmul.f32	s15, s15, s6
 801babc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801bac0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801bac2:	694a      	ldr	r2, [r1, #20]
 801bac4:	1b13      	subs	r3, r2, r4
 801bac6:	ee07 3a10 	vmov	s14, r3
 801baca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bace:	680b      	ldr	r3, [r1, #0]
 801bad0:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bad4:	1b1b      	subs	r3, r3, r4
 801bad6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801bada:	ee07 3a10 	vmov	s14, r3
 801bade:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bae2:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bae6:	eee6 4a87 	vfma.f32	s9, s13, s14
 801baea:	ee64 4a86 	vmul.f32	s9, s9, s12
 801baee:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801baf2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801baf4:	698b      	ldr	r3, [r1, #24]
 801baf6:	1a9b      	subs	r3, r3, r2
 801baf8:	ee06 3a90 	vmov	s13, r3
 801bafc:	684b      	ldr	r3, [r1, #4]
 801bafe:	1a9b      	subs	r3, r3, r2
 801bb00:	ee07 3a10 	vmov	s14, r3
 801bb04:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801bb08:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bb0c:	ee66 6a84 	vmul.f32	s13, s13, s8
 801bb10:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bb14:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801bb18:	eee5 6a87 	vfma.f32	s13, s11, s14
 801bb1c:	ee66 6a83 	vmul.f32	s13, s13, s6
 801bb20:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801bb24:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801bb26:	694a      	ldr	r2, [r1, #20]
 801bb28:	1b13      	subs	r3, r2, r4
 801bb2a:	ee07 3a10 	vmov	s14, r3
 801bb2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bb32:	680b      	ldr	r3, [r1, #0]
 801bb34:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bb38:	1b1b      	subs	r3, r3, r4
 801bb3a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801bb3e:	ee07 3a10 	vmov	s14, r3
 801bb42:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bb46:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bb4a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801bb4e:	edd0 5a08 	vldr	s11, [r0, #32]
 801bb52:	ee25 5a06 	vmul.f32	s10, s10, s12
 801bb56:	ee31 1a65 	vsub.f32	s2, s2, s11
 801bb5a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801bb5e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801bb60:	698b      	ldr	r3, [r1, #24]
 801bb62:	1a9b      	subs	r3, r3, r2
 801bb64:	ee07 3a10 	vmov	s14, r3
 801bb68:	684b      	ldr	r3, [r1, #4]
 801bb6a:	1a9b      	subs	r3, r3, r2
 801bb6c:	ee01 3a90 	vmov	s3, r3
 801bb70:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bb74:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801bb78:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bb7c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801bb80:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801bb84:	ee61 1a84 	vmul.f32	s3, s3, s8
 801bb88:	eea1 7a21 	vfma.f32	s14, s2, s3
 801bb8c:	ee27 7a03 	vmul.f32	s14, s14, s6
 801bb90:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801bb94:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801bb96:	694a      	ldr	r2, [r1, #20]
 801bb98:	1b13      	subs	r3, r2, r4
 801bb9a:	ee03 3a10 	vmov	s6, r3
 801bb9e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801bba2:	680b      	ldr	r3, [r1, #0]
 801bba4:	ee23 3a04 	vmul.f32	s6, s6, s8
 801bba8:	1b1b      	subs	r3, r3, r4
 801bbaa:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801bbae:	ee03 3a10 	vmov	s6, r3
 801bbb2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801bbb6:	ee23 4a04 	vmul.f32	s8, s6, s8
 801bbba:	eee1 5a04 	vfma.f32	s11, s2, s8
 801bbbe:	ee25 6a86 	vmul.f32	s12, s11, s12
 801bbc2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801bbc6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801bbca:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801bbce:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801bbd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbd6:	dd13      	ble.n	801bc00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801bbd8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801bbdc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801bbe0:	63c3      	str	r3, [r0, #60]	; 0x3c
 801bbe2:	eee3 7a87 	vfma.f32	s15, s7, s14
 801bbe6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801bbea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbee:	dd15      	ble.n	801bc1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801bbf0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801bbf4:	6403      	str	r3, [r0, #64]	; 0x40
 801bbf6:	bd70      	pop	{r4, r5, r6, pc}
 801bbf8:	4623      	mov	r3, r4
 801bbfa:	e6fd      	b.n	801b9f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801bbfc:	462a      	mov	r2, r5
 801bbfe:	e706      	b.n	801ba0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801bc00:	d502      	bpl.n	801bc08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801bc02:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801bc06:	e7e9      	b.n	801bbdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801bc08:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801bc0c:	eea3 2a85 	vfma.f32	s4, s7, s10
 801bc10:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801bc14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc18:	dade      	bge.n	801bbd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801bc1a:	e7f2      	b.n	801bc02 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801bc1c:	d502      	bpl.n	801bc24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801bc1e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801bc22:	e7e7      	b.n	801bbf4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801bc24:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801bc28:	eee3 4a86 	vfma.f32	s9, s7, s12
 801bc2c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801bc30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc34:	dadc      	bge.n	801bbf0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801bc36:	e7f2      	b.n	801bc1e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801bc38:	3d800000 	.word	0x3d800000

0801bc3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801bc3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bc40:	2714      	movs	r7, #20
 801bc42:	435f      	muls	r7, r3
 801bc44:	eb02 0c07 	add.w	ip, r2, r7
 801bc48:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801bc4c:	f115 0e0f 	adds.w	lr, r5, #15
 801bc50:	d432      	bmi.n	801bcb8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x7c>
 801bc52:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801bc56:	9c08      	ldr	r4, [sp, #32]
 801bc58:	f8c0 e014 	str.w	lr, [r0, #20]
 801bc5c:	2614      	movs	r6, #20
 801bc5e:	4366      	muls	r6, r4
 801bc60:	eb02 0806 	add.w	r8, r2, r6
 801bc64:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801bc68:	f115 040f 	adds.w	r4, r5, #15
 801bc6c:	d430      	bmi.n	801bcd0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801bc6e:	1124      	asrs	r4, r4, #4
 801bc70:	eba4 040e 	sub.w	r4, r4, lr
 801bc74:	6184      	str	r4, [r0, #24]
 801bc76:	2c00      	cmp	r4, #0
 801bc78:	f000 80a9 	beq.w	801bdce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x192>
 801bc7c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801bc80:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801bc84:	5995      	ldr	r5, [r2, r6]
 801bc86:	eba4 0809 	sub.w	r8, r4, r9
 801bc8a:	59d4      	ldr	r4, [r2, r7]
 801bc8c:	eba5 0a04 	sub.w	sl, r5, r4
 801bc90:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801bc94:	fb0e fe05 	mul.w	lr, lr, r5
 801bc98:	fb0a ee19 	mls	lr, sl, r9, lr
 801bc9c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801bca0:	fb08 e404 	mla	r4, r8, r4, lr
 801bca4:	3c01      	subs	r4, #1
 801bca6:	2e00      	cmp	r6, #0
 801bca8:	4434      	add	r4, r6
 801bcaa:	dc1d      	bgt.n	801bce8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xac>
 801bcac:	4b5a      	ldr	r3, [pc, #360]	; (801be18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1dc>)
 801bcae:	4a5b      	ldr	r2, [pc, #364]	; (801be1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e0>)
 801bcb0:	485b      	ldr	r0, [pc, #364]	; (801be20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e4>)
 801bcb2:	21f7      	movs	r1, #247	; 0xf7
 801bcb4:	f010 f986 	bl	802bfc4 <__assert_func>
 801bcb8:	f1c5 0501 	rsb	r5, r5, #1
 801bcbc:	f015 050f 	ands.w	r5, r5, #15
 801bcc0:	bf18      	it	ne
 801bcc2:	2501      	movne	r5, #1
 801bcc4:	2410      	movs	r4, #16
 801bcc6:	fb9e fef4 	sdiv	lr, lr, r4
 801bcca:	ebae 0e05 	sub.w	lr, lr, r5
 801bcce:	e7c2      	b.n	801bc56 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a>
 801bcd0:	f1c5 0501 	rsb	r5, r5, #1
 801bcd4:	f015 050f 	ands.w	r5, r5, #15
 801bcd8:	bf18      	it	ne
 801bcda:	2501      	movne	r5, #1
 801bcdc:	f04f 0910 	mov.w	r9, #16
 801bce0:	fb94 f4f9 	sdiv	r4, r4, r9
 801bce4:	1b64      	subs	r4, r4, r5
 801bce6:	e7c3      	b.n	801bc70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x34>
 801bce8:	2c00      	cmp	r4, #0
 801bcea:	db72      	blt.n	801bdd2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x196>
 801bcec:	fb94 fef6 	sdiv	lr, r4, r6
 801bcf0:	f8c0 e000 	str.w	lr, [r0]
 801bcf4:	fb06 441e 	mls	r4, r6, lr, r4
 801bcf8:	6104      	str	r4, [r0, #16]
 801bcfa:	2d00      	cmp	r5, #0
 801bcfc:	db7b      	blt.n	801bdf6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ba>
 801bcfe:	fb95 f4f6 	sdiv	r4, r5, r6
 801bd02:	6044      	str	r4, [r0, #4]
 801bd04:	fb06 5514 	mls	r5, r6, r4, r5
 801bd08:	6085      	str	r5, [r0, #8]
 801bd0a:	60c6      	str	r6, [r0, #12]
 801bd0c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801bd10:	6945      	ldr	r5, [r0, #20]
 801bd12:	59d2      	ldr	r2, [r2, r7]
 801bd14:	eddf 6a43 	vldr	s13, [pc, #268]	; 801be24 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e8>
 801bd18:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801bd1c:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801bd20:	ee07 4a10 	vmov	s14, r4
 801bd24:	6804      	ldr	r4, [r0, #0]
 801bd26:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801bd2a:	ee07 2a90 	vmov	s15, r2
 801bd2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bd32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801bd36:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801bd3a:	ee27 7a26 	vmul.f32	s14, s14, s13
 801bd3e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bd42:	edd3 6a00 	vldr	s13, [r3]
 801bd46:	eee6 6a07 	vfma.f32	s13, s12, s14
 801bd4a:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801bd4e:	eee6 6a27 	vfma.f32	s13, s12, s15
 801bd52:	edc0 6a07 	vstr	s13, [r0, #28]
 801bd56:	edd0 6a01 	vldr	s13, [r0, #4]
 801bd5a:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801bd5e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801bd62:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801bd66:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801bd6a:	ed80 6a08 	vstr	s12, [r0, #32]
 801bd6e:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801bd70:	6242      	str	r2, [r0, #36]	; 0x24
 801bd72:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801bd76:	ed93 6a03 	vldr	s12, [r3, #12]
 801bd7a:	eea5 6a87 	vfma.f32	s12, s11, s14
 801bd7e:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801bd82:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801bd86:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801bd8a:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801bd8e:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801bd92:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801bd96:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801bd9a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801bd9c:	6302      	str	r2, [r0, #48]	; 0x30
 801bd9e:	ed93 6a06 	vldr	s12, [r3, #24]
 801bda2:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801bda6:	eea5 6a87 	vfma.f32	s12, s11, s14
 801bdaa:	eeb0 7a46 	vmov.f32	s14, s12
 801bdae:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801bdb2:	eea6 7a27 	vfma.f32	s14, s12, s15
 801bdb6:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801bdba:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801bdbe:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801bdc2:	eee6 7a87 	vfma.f32	s15, s13, s14
 801bdc6:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801bdca:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801bdcc:	63c3      	str	r3, [r0, #60]	; 0x3c
 801bdce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bdd2:	4264      	negs	r4, r4
 801bdd4:	fb94 fef6 	sdiv	lr, r4, r6
 801bdd8:	f1ce 0800 	rsb	r8, lr, #0
 801bddc:	fb06 441e 	mls	r4, r6, lr, r4
 801bde0:	f8c0 8000 	str.w	r8, [r0]
 801bde4:	6104      	str	r4, [r0, #16]
 801bde6:	2c00      	cmp	r4, #0
 801bde8:	d087      	beq.n	801bcfa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbe>
 801bdea:	ea6f 0e0e 	mvn.w	lr, lr
 801bdee:	f8c0 e000 	str.w	lr, [r0]
 801bdf2:	1b34      	subs	r4, r6, r4
 801bdf4:	e780      	b.n	801bcf8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbc>
 801bdf6:	426d      	negs	r5, r5
 801bdf8:	fb95 f4f6 	sdiv	r4, r5, r6
 801bdfc:	f1c4 0e00 	rsb	lr, r4, #0
 801be00:	fb06 5514 	mls	r5, r6, r4, r5
 801be04:	f8c0 e004 	str.w	lr, [r0, #4]
 801be08:	6085      	str	r5, [r0, #8]
 801be0a:	2d00      	cmp	r5, #0
 801be0c:	f43f af7d 	beq.w	801bd0a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xce>
 801be10:	43e4      	mvns	r4, r4
 801be12:	6044      	str	r4, [r0, #4]
 801be14:	1b75      	subs	r5, r6, r5
 801be16:	e777      	b.n	801bd08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xcc>
 801be18:	08035601 	.word	0x08035601
 801be1c:	08035640 	.word	0x08035640
 801be20:	08035611 	.word	0x08035611
 801be24:	3d800000 	.word	0x3d800000

0801be28 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801be28:	4602      	mov	r2, r0
 801be2a:	b148      	cbz	r0, 801be40 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801be2c:	2300      	movs	r3, #0
 801be2e:	b298      	uxth	r0, r3
 801be30:	3301      	adds	r3, #1
 801be32:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801be36:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801be3a:	2900      	cmp	r1, #0
 801be3c:	d1f7      	bne.n	801be2e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801be3e:	4770      	bx	lr
 801be40:	4770      	bx	lr

0801be42 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801be42:	b530      	push	{r4, r5, lr}
 801be44:	4604      	mov	r4, r0
 801be46:	b159      	cbz	r1, 801be60 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801be48:	b148      	cbz	r0, 801be5e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801be4a:	2300      	movs	r3, #0
 801be4c:	b298      	uxth	r0, r3
 801be4e:	4282      	cmp	r2, r0
 801be50:	d905      	bls.n	801be5e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801be52:	5ccd      	ldrb	r5, [r1, r3]
 801be54:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801be58:	3301      	adds	r3, #1
 801be5a:	2d00      	cmp	r5, #0
 801be5c:	d1f6      	bne.n	801be4c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801be5e:	bd30      	pop	{r4, r5, pc}
 801be60:	4608      	mov	r0, r1
 801be62:	e7fc      	b.n	801be5e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801be64 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 801be64:	b5f0      	push	{r4, r5, r6, r7, lr}
 801be66:	b08b      	sub	sp, #44	; 0x2c
 801be68:	468c      	mov	ip, r1
 801be6a:	2100      	movs	r1, #0
 801be6c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801be70:	ae01      	add	r6, sp, #4
 801be72:	211f      	movs	r1, #31
 801be74:	fbb0 f7f3 	udiv	r7, r0, r3
 801be78:	fb03 0517 	mls	r5, r3, r7, r0
 801be7c:	b2ec      	uxtb	r4, r5
 801be7e:	2d09      	cmp	r5, #9
 801be80:	bfd4      	ite	le
 801be82:	3430      	addle	r4, #48	; 0x30
 801be84:	3457      	addgt	r4, #87	; 0x57
 801be86:	b2e4      	uxtb	r4, r4
 801be88:	558c      	strb	r4, [r1, r6]
 801be8a:	4638      	mov	r0, r7
 801be8c:	1e4c      	subs	r4, r1, #1
 801be8e:	b92f      	cbnz	r7, 801be9c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 801be90:	4431      	add	r1, r6
 801be92:	4660      	mov	r0, ip
 801be94:	f7ff ffd5 	bl	801be42 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801be98:	b00b      	add	sp, #44	; 0x2c
 801be9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801be9c:	4621      	mov	r1, r4
 801be9e:	e7e9      	b.n	801be74 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0801bea0 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801bea0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bea2:	4607      	mov	r7, r0
 801bea4:	b08b      	sub	sp, #44	; 0x2c
 801bea6:	4608      	mov	r0, r1
 801bea8:	b341      	cbz	r1, 801befc <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801beaa:	1e99      	subs	r1, r3, #2
 801beac:	2922      	cmp	r1, #34	; 0x22
 801beae:	d825      	bhi.n	801befc <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801beb0:	2100      	movs	r1, #0
 801beb2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801beb6:	463c      	mov	r4, r7
 801beb8:	261f      	movs	r6, #31
 801beba:	f10d 0c04 	add.w	ip, sp, #4
 801bebe:	fb94 fef3 	sdiv	lr, r4, r3
 801bec2:	fb03 441e 	mls	r4, r3, lr, r4
 801bec6:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801beca:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801bece:	b2ec      	uxtb	r4, r5
 801bed0:	2d09      	cmp	r5, #9
 801bed2:	bfd4      	ite	le
 801bed4:	3430      	addle	r4, #48	; 0x30
 801bed6:	3457      	addgt	r4, #87	; 0x57
 801bed8:	b2e4      	uxtb	r4, r4
 801beda:	f80c 4006 	strb.w	r4, [ip, r6]
 801bede:	4674      	mov	r4, lr
 801bee0:	1e71      	subs	r1, r6, #1
 801bee2:	b96c      	cbnz	r4, 801bf00 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 801bee4:	2f00      	cmp	r7, #0
 801bee6:	da05      	bge.n	801bef4 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 801bee8:	ab0a      	add	r3, sp, #40	; 0x28
 801beea:	4419      	add	r1, r3
 801beec:	232d      	movs	r3, #45	; 0x2d
 801beee:	f801 3c24 	strb.w	r3, [r1, #-36]
 801bef2:	1eb1      	subs	r1, r6, #2
 801bef4:	3101      	adds	r1, #1
 801bef6:	4461      	add	r1, ip
 801bef8:	f7ff ffa3 	bl	801be42 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801befc:	b00b      	add	sp, #44	; 0x2c
 801befe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801bf00:	460e      	mov	r6, r1
 801bf02:	e7dc      	b.n	801bebe <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0801bf04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801bf04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf08:	4691      	mov	r9, r2
 801bf0a:	b085      	sub	sp, #20
 801bf0c:	6802      	ldr	r2, [r0, #0]
 801bf0e:	9201      	str	r2, [sp, #4]
 801bf10:	4688      	mov	r8, r1
 801bf12:	4683      	mov	fp, r0
 801bf14:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801bf18:	9103      	str	r1, [sp, #12]
 801bf1a:	4610      	mov	r0, r2
 801bf1c:	461c      	mov	r4, r3
 801bf1e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801bf22:	9302      	str	r3, [sp, #8]
 801bf24:	f7ff ff80 	bl	801be28 <_ZN8touchgfx7Unicode6strlenEPKt>
 801bf28:	f1b8 0f00 	cmp.w	r8, #0
 801bf2c:	bf0c      	ite	eq
 801bf2e:	4684      	moveq	ip, r0
 801bf30:	f100 0c01 	addne.w	ip, r0, #1
 801bf34:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801bf38:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801bf3c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801bf3e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bf40:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801bf44:	9903      	ldr	r1, [sp, #12]
 801bf46:	fa1f fc8c 	uxth.w	ip, ip
 801bf4a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801bf4e:	d041      	beq.n	801bfd4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801bf50:	d834      	bhi.n	801bfbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801bf52:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801bf56:	d059      	beq.n	801c00c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801bf58:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801bf5c:	d03a      	beq.n	801bfd4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801bf5e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801bf62:	d034      	beq.n	801bfce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801bf64:	2400      	movs	r4, #0
 801bf66:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801bf6a:	3a01      	subs	r2, #1
 801bf6c:	b169      	cbz	r1, 801bf8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801bf6e:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bf70:	458c      	cmp	ip, r1
 801bf72:	da09      	bge.n	801bf88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801bf74:	eba1 010c 	sub.w	r1, r1, ip
 801bf78:	b289      	uxth	r1, r1
 801bf7a:	b933      	cbnz	r3, 801bf8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801bf7c:	2e00      	cmp	r6, #0
 801bf7e:	d051      	beq.n	801c024 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801bf80:	2800      	cmp	r0, #0
 801bf82:	d04f      	beq.n	801c024 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801bf84:	440c      	add	r4, r1
 801bf86:	b2a4      	uxth	r4, r4
 801bf88:	2100      	movs	r1, #0
 801bf8a:	682b      	ldr	r3, [r5, #0]
 801bf8c:	4293      	cmp	r3, r2
 801bf8e:	da07      	bge.n	801bfa0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801bf90:	f1b8 0f00 	cmp.w	r8, #0
 801bf94:	d004      	beq.n	801bfa0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801bf96:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801bf9a:	682b      	ldr	r3, [r5, #0]
 801bf9c:	3301      	adds	r3, #1
 801bf9e:	602b      	str	r3, [r5, #0]
 801bfa0:	2730      	movs	r7, #48	; 0x30
 801bfa2:	2c00      	cmp	r4, #0
 801bfa4:	d04e      	beq.n	801c044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801bfa6:	682e      	ldr	r6, [r5, #0]
 801bfa8:	3c01      	subs	r4, #1
 801bfaa:	42b2      	cmp	r2, r6
 801bfac:	b2a4      	uxth	r4, r4
 801bfae:	dd49      	ble.n	801c044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801bfb0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801bfb4:	682b      	ldr	r3, [r5, #0]
 801bfb6:	3301      	adds	r3, #1
 801bfb8:	602b      	str	r3, [r5, #0]
 801bfba:	e7f2      	b.n	801bfa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801bfbc:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801bfc0:	d01d      	beq.n	801bffe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801bfc2:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801bfc6:	d002      	beq.n	801bfce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801bfc8:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801bfcc:	e7c9      	b.n	801bf62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801bfce:	4684      	mov	ip, r0
 801bfd0:	f04f 0800 	mov.w	r8, #0
 801bfd4:	2c00      	cmp	r4, #0
 801bfd6:	d0c6      	beq.n	801bf66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801bfd8:	b947      	cbnz	r7, 801bfec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801bfda:	2801      	cmp	r0, #1
 801bfdc:	d106      	bne.n	801bfec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801bfde:	8814      	ldrh	r4, [r2, #0]
 801bfe0:	2c30      	cmp	r4, #48	; 0x30
 801bfe2:	bf02      	ittt	eq
 801bfe4:	3202      	addeq	r2, #2
 801bfe6:	f8cb 2000 	streq.w	r2, [fp]
 801bfea:	4638      	moveq	r0, r7
 801bfec:	45bc      	cmp	ip, r7
 801bfee:	da14      	bge.n	801c01a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801bff0:	b2bf      	uxth	r7, r7
 801bff2:	eba7 040c 	sub.w	r4, r7, ip
 801bff6:	b2a4      	uxth	r4, r4
 801bff8:	46bc      	mov	ip, r7
 801bffa:	2600      	movs	r6, #0
 801bffc:	e7b3      	b.n	801bf66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801bffe:	4684      	mov	ip, r0
 801c000:	b16c      	cbz	r4, 801c01e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801c002:	42b8      	cmp	r0, r7
 801c004:	dd00      	ble.n	801c008 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801c006:	b2b8      	uxth	r0, r7
 801c008:	2400      	movs	r4, #0
 801c00a:	e003      	b.n	801c014 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801c00c:	f04f 0c01 	mov.w	ip, #1
 801c010:	2400      	movs	r4, #0
 801c012:	4660      	mov	r0, ip
 801c014:	4626      	mov	r6, r4
 801c016:	46a0      	mov	r8, r4
 801c018:	e7a5      	b.n	801bf66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c01a:	2400      	movs	r4, #0
 801c01c:	e7ed      	b.n	801bffa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801c01e:	4626      	mov	r6, r4
 801c020:	46a0      	mov	r8, r4
 801c022:	e7a0      	b.n	801bf66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c024:	2900      	cmp	r1, #0
 801c026:	d0b0      	beq.n	801bf8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801c028:	2720      	movs	r7, #32
 801c02a:	682e      	ldr	r6, [r5, #0]
 801c02c:	2900      	cmp	r1, #0
 801c02e:	d0ac      	beq.n	801bf8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801c030:	3901      	subs	r1, #1
 801c032:	4296      	cmp	r6, r2
 801c034:	b289      	uxth	r1, r1
 801c036:	daa7      	bge.n	801bf88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801c038:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801c03c:	682b      	ldr	r3, [r5, #0]
 801c03e:	3301      	adds	r3, #1
 801c040:	602b      	str	r3, [r5, #0]
 801c042:	e7f2      	b.n	801c02a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801c044:	b188      	cbz	r0, 801c06a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801c046:	682b      	ldr	r3, [r5, #0]
 801c048:	3801      	subs	r0, #1
 801c04a:	429a      	cmp	r2, r3
 801c04c:	b280      	uxth	r0, r0
 801c04e:	dd0c      	ble.n	801c06a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801c050:	f8db 3000 	ldr.w	r3, [fp]
 801c054:	1c9c      	adds	r4, r3, #2
 801c056:	f8cb 4000 	str.w	r4, [fp]
 801c05a:	881c      	ldrh	r4, [r3, #0]
 801c05c:	682b      	ldr	r3, [r5, #0]
 801c05e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801c062:	682b      	ldr	r3, [r5, #0]
 801c064:	3301      	adds	r3, #1
 801c066:	602b      	str	r3, [r5, #0]
 801c068:	e7ec      	b.n	801c044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801c06a:	2620      	movs	r6, #32
 801c06c:	b151      	cbz	r1, 801c084 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801c06e:	6828      	ldr	r0, [r5, #0]
 801c070:	3901      	subs	r1, #1
 801c072:	4282      	cmp	r2, r0
 801c074:	b289      	uxth	r1, r1
 801c076:	dd05      	ble.n	801c084 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801c078:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801c07c:	682b      	ldr	r3, [r5, #0]
 801c07e:	3301      	adds	r3, #1
 801c080:	602b      	str	r3, [r5, #0]
 801c082:	e7f3      	b.n	801c06c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801c084:	b005      	add	sp, #20
 801c086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c08a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801c08a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c08e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801c092:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801c096:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801c09a:	2400      	movs	r4, #0
 801c09c:	8014      	strh	r4, [r2, #0]
 801c09e:	701c      	strb	r4, [r3, #0]
 801c0a0:	f888 4000 	strb.w	r4, [r8]
 801c0a4:	f88c 4000 	strb.w	r4, [ip]
 801c0a8:	f88e 4000 	strb.w	r4, [lr]
 801c0ac:	703c      	strb	r4, [r7, #0]
 801c0ae:	6804      	ldr	r4, [r0, #0]
 801c0b0:	b1a4      	cbz	r4, 801c0dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801c0b2:	8824      	ldrh	r4, [r4, #0]
 801c0b4:	f04f 0901 	mov.w	r9, #1
 801c0b8:	b314      	cbz	r4, 801c100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801c0ba:	2c2b      	cmp	r4, #43	; 0x2b
 801c0bc:	d001      	beq.n	801c0c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801c0be:	2c20      	cmp	r4, #32
 801c0c0:	d110      	bne.n	801c0e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801c0c2:	8014      	strh	r4, [r2, #0]
 801c0c4:	6804      	ldr	r4, [r0, #0]
 801c0c6:	b10c      	cbz	r4, 801c0cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801c0c8:	3402      	adds	r4, #2
 801c0ca:	6004      	str	r4, [r0, #0]
 801c0cc:	680c      	ldr	r4, [r1, #0]
 801c0ce:	b10c      	cbz	r4, 801c0d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801c0d0:	3401      	adds	r4, #1
 801c0d2:	600c      	str	r4, [r1, #0]
 801c0d4:	6804      	ldr	r4, [r0, #0]
 801c0d6:	b17c      	cbz	r4, 801c0f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801c0d8:	8824      	ldrh	r4, [r4, #0]
 801c0da:	e7ed      	b.n	801c0b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801c0dc:	680c      	ldr	r4, [r1, #0]
 801c0de:	b17c      	cbz	r4, 801c100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801c0e0:	7824      	ldrb	r4, [r4, #0]
 801c0e2:	e7e7      	b.n	801c0b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801c0e4:	2c2d      	cmp	r4, #45	; 0x2d
 801c0e6:	d102      	bne.n	801c0ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801c0e8:	f883 9000 	strb.w	r9, [r3]
 801c0ec:	e7ea      	b.n	801c0c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801c0ee:	2c23      	cmp	r4, #35	; 0x23
 801c0f0:	d107      	bne.n	801c102 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801c0f2:	f888 9000 	strb.w	r9, [r8]
 801c0f6:	e7e5      	b.n	801c0c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801c0f8:	680c      	ldr	r4, [r1, #0]
 801c0fa:	b10c      	cbz	r4, 801c100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801c0fc:	7824      	ldrb	r4, [r4, #0]
 801c0fe:	e7db      	b.n	801c0b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801c100:	2400      	movs	r4, #0
 801c102:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801c106:	2b09      	cmp	r3, #9
 801c108:	d901      	bls.n	801c10e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801c10a:	2c2a      	cmp	r4, #42	; 0x2a
 801c10c:	d122      	bne.n	801c154 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801c10e:	2301      	movs	r3, #1
 801c110:	2c30      	cmp	r4, #48	; 0x30
 801c112:	f88e 3000 	strb.w	r3, [lr]
 801c116:	d10d      	bne.n	801c134 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801c118:	f88c 3000 	strb.w	r3, [ip]
 801c11c:	6803      	ldr	r3, [r0, #0]
 801c11e:	b10b      	cbz	r3, 801c124 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801c120:	3302      	adds	r3, #2
 801c122:	6003      	str	r3, [r0, #0]
 801c124:	680b      	ldr	r3, [r1, #0]
 801c126:	b10b      	cbz	r3, 801c12c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801c128:	3301      	adds	r3, #1
 801c12a:	600b      	str	r3, [r1, #0]
 801c12c:	6803      	ldr	r3, [r0, #0]
 801c12e:	2b00      	cmp	r3, #0
 801c130:	d02f      	beq.n	801c192 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801c132:	881c      	ldrh	r4, [r3, #0]
 801c134:	2c2a      	cmp	r4, #42	; 0x2a
 801c136:	d135      	bne.n	801c1a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801c138:	f04f 33ff 	mov.w	r3, #4294967295
 801c13c:	6033      	str	r3, [r6, #0]
 801c13e:	6803      	ldr	r3, [r0, #0]
 801c140:	b10b      	cbz	r3, 801c146 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801c142:	3302      	adds	r3, #2
 801c144:	6003      	str	r3, [r0, #0]
 801c146:	680b      	ldr	r3, [r1, #0]
 801c148:	b10b      	cbz	r3, 801c14e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801c14a:	3301      	adds	r3, #1
 801c14c:	600b      	str	r3, [r1, #0]
 801c14e:	6803      	ldr	r3, [r0, #0]
 801c150:	b31b      	cbz	r3, 801c19a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801c152:	881c      	ldrh	r4, [r3, #0]
 801c154:	2c2e      	cmp	r4, #46	; 0x2e
 801c156:	d11a      	bne.n	801c18e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801c158:	2301      	movs	r3, #1
 801c15a:	703b      	strb	r3, [r7, #0]
 801c15c:	6803      	ldr	r3, [r0, #0]
 801c15e:	b10b      	cbz	r3, 801c164 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801c160:	3302      	adds	r3, #2
 801c162:	6003      	str	r3, [r0, #0]
 801c164:	680b      	ldr	r3, [r1, #0]
 801c166:	b10b      	cbz	r3, 801c16c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801c168:	3301      	adds	r3, #1
 801c16a:	600b      	str	r3, [r1, #0]
 801c16c:	6803      	ldr	r3, [r0, #0]
 801c16e:	2b00      	cmp	r3, #0
 801c170:	d036      	beq.n	801c1e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801c172:	881b      	ldrh	r3, [r3, #0]
 801c174:	2b2a      	cmp	r3, #42	; 0x2a
 801c176:	d137      	bne.n	801c1e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801c178:	f04f 33ff 	mov.w	r3, #4294967295
 801c17c:	602b      	str	r3, [r5, #0]
 801c17e:	6803      	ldr	r3, [r0, #0]
 801c180:	b10b      	cbz	r3, 801c186 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801c182:	3302      	adds	r3, #2
 801c184:	6003      	str	r3, [r0, #0]
 801c186:	680b      	ldr	r3, [r1, #0]
 801c188:	b10b      	cbz	r3, 801c18e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801c18a:	3301      	adds	r3, #1
 801c18c:	600b      	str	r3, [r1, #0]
 801c18e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c192:	680c      	ldr	r4, [r1, #0]
 801c194:	b134      	cbz	r4, 801c1a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801c196:	7824      	ldrb	r4, [r4, #0]
 801c198:	e7cc      	b.n	801c134 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801c19a:	680b      	ldr	r3, [r1, #0]
 801c19c:	2b00      	cmp	r3, #0
 801c19e:	d0f6      	beq.n	801c18e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801c1a0:	781c      	ldrb	r4, [r3, #0]
 801c1a2:	e7d7      	b.n	801c154 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801c1a4:	2300      	movs	r3, #0
 801c1a6:	6033      	str	r3, [r6, #0]
 801c1a8:	220a      	movs	r2, #10
 801c1aa:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801c1ae:	fa1f f38c 	uxth.w	r3, ip
 801c1b2:	2b09      	cmp	r3, #9
 801c1b4:	d8ce      	bhi.n	801c154 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801c1b6:	6833      	ldr	r3, [r6, #0]
 801c1b8:	fb02 c303 	mla	r3, r2, r3, ip
 801c1bc:	6033      	str	r3, [r6, #0]
 801c1be:	6803      	ldr	r3, [r0, #0]
 801c1c0:	b10b      	cbz	r3, 801c1c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801c1c2:	3302      	adds	r3, #2
 801c1c4:	6003      	str	r3, [r0, #0]
 801c1c6:	680b      	ldr	r3, [r1, #0]
 801c1c8:	b10b      	cbz	r3, 801c1ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801c1ca:	3301      	adds	r3, #1
 801c1cc:	600b      	str	r3, [r1, #0]
 801c1ce:	6803      	ldr	r3, [r0, #0]
 801c1d0:	b10b      	cbz	r3, 801c1d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801c1d2:	881c      	ldrh	r4, [r3, #0]
 801c1d4:	e7e9      	b.n	801c1aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801c1d6:	680c      	ldr	r4, [r1, #0]
 801c1d8:	2c00      	cmp	r4, #0
 801c1da:	d0e6      	beq.n	801c1aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801c1dc:	7824      	ldrb	r4, [r4, #0]
 801c1de:	e7e4      	b.n	801c1aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801c1e0:	680b      	ldr	r3, [r1, #0]
 801c1e2:	b10b      	cbz	r3, 801c1e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801c1e4:	781b      	ldrb	r3, [r3, #0]
 801c1e6:	e7c5      	b.n	801c174 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801c1e8:	2200      	movs	r2, #0
 801c1ea:	602a      	str	r2, [r5, #0]
 801c1ec:	240a      	movs	r4, #10
 801c1ee:	3b30      	subs	r3, #48	; 0x30
 801c1f0:	b29e      	uxth	r6, r3
 801c1f2:	2e09      	cmp	r6, #9
 801c1f4:	682a      	ldr	r2, [r5, #0]
 801c1f6:	d813      	bhi.n	801c220 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801c1f8:	fb04 3302 	mla	r3, r4, r2, r3
 801c1fc:	602b      	str	r3, [r5, #0]
 801c1fe:	6803      	ldr	r3, [r0, #0]
 801c200:	b10b      	cbz	r3, 801c206 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801c202:	3302      	adds	r3, #2
 801c204:	6003      	str	r3, [r0, #0]
 801c206:	680b      	ldr	r3, [r1, #0]
 801c208:	b10b      	cbz	r3, 801c20e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801c20a:	3301      	adds	r3, #1
 801c20c:	600b      	str	r3, [r1, #0]
 801c20e:	6803      	ldr	r3, [r0, #0]
 801c210:	b10b      	cbz	r3, 801c216 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801c212:	881b      	ldrh	r3, [r3, #0]
 801c214:	e7eb      	b.n	801c1ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801c216:	680b      	ldr	r3, [r1, #0]
 801c218:	2b00      	cmp	r3, #0
 801c21a:	d0e8      	beq.n	801c1ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801c21c:	781b      	ldrb	r3, [r3, #0]
 801c21e:	e7e6      	b.n	801c1ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801c220:	2a06      	cmp	r2, #6
 801c222:	bfa8      	it	ge
 801c224:	2206      	movge	r2, #6
 801c226:	602a      	str	r2, [r5, #0]
 801c228:	e7b1      	b.n	801c18e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801c22a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801c22a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c22e:	b0a3      	sub	sp, #140	; 0x8c
 801c230:	2600      	movs	r6, #0
 801c232:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801c236:	4607      	mov	r7, r0
 801c238:	4688      	mov	r8, r1
 801c23a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801c23e:	4631      	mov	r1, r6
 801c240:	2242      	movs	r2, #66	; 0x42
 801c242:	4648      	mov	r0, r9
 801c244:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801c246:	960d      	str	r6, [sp, #52]	; 0x34
 801c248:	f010 f842 	bl	802c2d0 <memset>
 801c24c:	b15f      	cbz	r7, 801c266 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801c24e:	f108 3aff 	add.w	sl, r8, #4294967295
 801c252:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c254:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c256:	b152      	cbz	r2, 801c26e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801c258:	8812      	ldrh	r2, [r2, #0]
 801c25a:	b10a      	cbz	r2, 801c260 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801c25c:	459a      	cmp	sl, r3
 801c25e:	dc2e      	bgt.n	801c2be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801c260:	2200      	movs	r2, #0
 801c262:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801c266:	4638      	mov	r0, r7
 801c268:	b023      	add	sp, #140	; 0x8c
 801c26a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c26e:	9a08      	ldr	r2, [sp, #32]
 801c270:	2a00      	cmp	r2, #0
 801c272:	d0f5      	beq.n	801c260 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801c274:	7812      	ldrb	r2, [r2, #0]
 801c276:	e7f0      	b.n	801c25a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801c278:	2d00      	cmp	r5, #0
 801c27a:	d0ea      	beq.n	801c252 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c27c:	782a      	ldrb	r2, [r5, #0]
 801c27e:	b142      	cbz	r2, 801c292 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801c280:	2a25      	cmp	r2, #37	; 0x25
 801c282:	d001      	beq.n	801c288 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801c284:	459a      	cmp	sl, r3
 801c286:	dc08      	bgt.n	801c29a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801c288:	f1bb 0f00 	cmp.w	fp, #0
 801c28c:	d121      	bne.n	801c2d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801c28e:	2d00      	cmp	r5, #0
 801c290:	d0df      	beq.n	801c252 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c292:	782a      	ldrb	r2, [r5, #0]
 801c294:	f04f 0b00 	mov.w	fp, #0
 801c298:	e01d      	b.n	801c2d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801c29a:	f1bb 0f00 	cmp.w	fp, #0
 801c29e:	d078      	beq.n	801c392 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801c2a0:	f8bb 2000 	ldrh.w	r2, [fp]
 801c2a4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801c2a8:	f1bb 0f00 	cmp.w	fp, #0
 801c2ac:	d002      	beq.n	801c2b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801c2ae:	f10b 0202 	add.w	r2, fp, #2
 801c2b2:	9209      	str	r2, [sp, #36]	; 0x24
 801c2b4:	b10d      	cbz	r5, 801c2ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801c2b6:	3501      	adds	r5, #1
 801c2b8:	9508      	str	r5, [sp, #32]
 801c2ba:	3301      	adds	r3, #1
 801c2bc:	930d      	str	r3, [sp, #52]	; 0x34
 801c2be:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801c2c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c2c4:	f1bb 0f00 	cmp.w	fp, #0
 801c2c8:	d0d6      	beq.n	801c278 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801c2ca:	f8bb 2000 	ldrh.w	r2, [fp]
 801c2ce:	2a00      	cmp	r2, #0
 801c2d0:	d1d6      	bne.n	801c280 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801c2d2:	f8bb 2000 	ldrh.w	r2, [fp]
 801c2d6:	2a00      	cmp	r2, #0
 801c2d8:	d0bb      	beq.n	801c252 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c2da:	459a      	cmp	sl, r3
 801c2dc:	ddb9      	ble.n	801c252 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c2de:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801c2e2:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801c2e6:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801c2ea:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801c2ee:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801c2f2:	960e      	str	r6, [sp, #56]	; 0x38
 801c2f4:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801c2f8:	960f      	str	r6, [sp, #60]	; 0x3c
 801c2fa:	f1bb 0f00 	cmp.w	fp, #0
 801c2fe:	d002      	beq.n	801c306 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801c300:	f10b 0302 	add.w	r3, fp, #2
 801c304:	9309      	str	r3, [sp, #36]	; 0x24
 801c306:	b10d      	cbz	r5, 801c30c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801c308:	1c6b      	adds	r3, r5, #1
 801c30a:	9308      	str	r3, [sp, #32]
 801c30c:	ab0f      	add	r3, sp, #60	; 0x3c
 801c30e:	9305      	str	r3, [sp, #20]
 801c310:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801c314:	9304      	str	r3, [sp, #16]
 801c316:	ab0e      	add	r3, sp, #56	; 0x38
 801c318:	9303      	str	r3, [sp, #12]
 801c31a:	ab0c      	add	r3, sp, #48	; 0x30
 801c31c:	9302      	str	r3, [sp, #8]
 801c31e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801c322:	9301      	str	r3, [sp, #4]
 801c324:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801c328:	9300      	str	r3, [sp, #0]
 801c32a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801c32e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801c332:	a908      	add	r1, sp, #32
 801c334:	a809      	add	r0, sp, #36	; 0x24
 801c336:	f7ff fea8 	bl	801c08a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801c33a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c33c:	2b00      	cmp	r3, #0
 801c33e:	bfbe      	ittt	lt
 801c340:	6823      	ldrlt	r3, [r4, #0]
 801c342:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801c346:	930e      	strlt	r3, [sp, #56]	; 0x38
 801c348:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c34a:	bfb8      	it	lt
 801c34c:	3404      	addlt	r4, #4
 801c34e:	2b00      	cmp	r3, #0
 801c350:	bfb8      	it	lt
 801c352:	6823      	ldrlt	r3, [r4, #0]
 801c354:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c358:	bfbe      	ittt	lt
 801c35a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801c35e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801c360:	3404      	addlt	r4, #4
 801c362:	b1d9      	cbz	r1, 801c39c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801c364:	880b      	ldrh	r3, [r1, #0]
 801c366:	2b69      	cmp	r3, #105	; 0x69
 801c368:	d01f      	beq.n	801c3aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c36a:	d82f      	bhi.n	801c3cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801c36c:	2b58      	cmp	r3, #88	; 0x58
 801c36e:	d01c      	beq.n	801c3aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c370:	d818      	bhi.n	801c3a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801c372:	2b25      	cmp	r3, #37	; 0x25
 801c374:	d034      	beq.n	801c3e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801c376:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801c37a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c37c:	f1bb 0f00 	cmp.w	fp, #0
 801c380:	f000 80b8 	beq.w	801c4f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801c384:	f8bb 5000 	ldrh.w	r5, [fp]
 801c388:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801c38c:	3301      	adds	r3, #1
 801c38e:	930d      	str	r3, [sp, #52]	; 0x34
 801c390:	e029      	b.n	801c3e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801c392:	b10d      	cbz	r5, 801c398 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801c394:	782a      	ldrb	r2, [r5, #0]
 801c396:	e785      	b.n	801c2a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801c398:	462a      	mov	r2, r5
 801c39a:	e783      	b.n	801c2a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801c39c:	2a00      	cmp	r2, #0
 801c39e:	d0ea      	beq.n	801c376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c3a0:	7813      	ldrb	r3, [r2, #0]
 801c3a2:	e7e0      	b.n	801c366 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801c3a4:	3b63      	subs	r3, #99	; 0x63
 801c3a6:	2b01      	cmp	r3, #1
 801c3a8:	d8e5      	bhi.n	801c376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c3aa:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801c3ae:	b329      	cbz	r1, 801c3fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801c3b0:	880b      	ldrh	r3, [r1, #0]
 801c3b2:	2b69      	cmp	r3, #105	; 0x69
 801c3b4:	d063      	beq.n	801c47e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801c3b6:	d825      	bhi.n	801c404 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801c3b8:	2b63      	cmp	r3, #99	; 0x63
 801c3ba:	d038      	beq.n	801c42e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801c3bc:	2b64      	cmp	r3, #100	; 0x64
 801c3be:	d05e      	beq.n	801c47e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801c3c0:	2b58      	cmp	r3, #88	; 0x58
 801c3c2:	d07b      	beq.n	801c4bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801c3c4:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801c3c8:	4625      	mov	r5, r4
 801c3ca:	e036      	b.n	801c43a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c3cc:	2b73      	cmp	r3, #115	; 0x73
 801c3ce:	d0ec      	beq.n	801c3aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c3d0:	d802      	bhi.n	801c3d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801c3d2:	2b6f      	cmp	r3, #111	; 0x6f
 801c3d4:	d1cf      	bne.n	801c376 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c3d6:	e7e8      	b.n	801c3aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c3d8:	2b75      	cmp	r3, #117	; 0x75
 801c3da:	d0e6      	beq.n	801c3aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c3dc:	2b78      	cmp	r3, #120	; 0x78
 801c3de:	e7f9      	b.n	801c3d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801c3e0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c3e2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801c3e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c3e8:	b10b      	cbz	r3, 801c3ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801c3ea:	3302      	adds	r3, #2
 801c3ec:	9309      	str	r3, [sp, #36]	; 0x24
 801c3ee:	9b08      	ldr	r3, [sp, #32]
 801c3f0:	2b00      	cmp	r3, #0
 801c3f2:	f43f af2e 	beq.w	801c252 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c3f6:	3301      	adds	r3, #1
 801c3f8:	9308      	str	r3, [sp, #32]
 801c3fa:	e72a      	b.n	801c252 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c3fc:	2a00      	cmp	r2, #0
 801c3fe:	d0e1      	beq.n	801c3c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c400:	7813      	ldrb	r3, [r2, #0]
 801c402:	e7d6      	b.n	801c3b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801c404:	2b73      	cmp	r3, #115	; 0x73
 801c406:	d036      	beq.n	801c476 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801c408:	d807      	bhi.n	801c41a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801c40a:	2b6f      	cmp	r3, #111	; 0x6f
 801c40c:	d1da      	bne.n	801c3c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c40e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c410:	1d25      	adds	r5, r4, #4
 801c412:	eba8 0202 	sub.w	r2, r8, r2
 801c416:	2308      	movs	r3, #8
 801c418:	e04a      	b.n	801c4b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801c41a:	2b75      	cmp	r3, #117	; 0x75
 801c41c:	d043      	beq.n	801c4a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801c41e:	2b78      	cmp	r3, #120	; 0x78
 801c420:	d1d0      	bne.n	801c3c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c422:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c424:	1d25      	adds	r5, r4, #4
 801c426:	eba8 0202 	sub.w	r2, r8, r2
 801c42a:	2310      	movs	r3, #16
 801c42c:	e040      	b.n	801c4b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801c42e:	7823      	ldrb	r3, [r4, #0]
 801c430:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801c434:	1d25      	adds	r5, r4, #4
 801c436:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801c43a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c43c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801c440:	2b00      	cmp	r3, #0
 801c442:	d052      	beq.n	801c4ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801c444:	881a      	ldrh	r2, [r3, #0]
 801c446:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801c44a:	a80d      	add	r0, sp, #52	; 0x34
 801c44c:	9005      	str	r0, [sp, #20]
 801c44e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801c452:	9004      	str	r0, [sp, #16]
 801c454:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c456:	9003      	str	r0, [sp, #12]
 801c458:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801c45c:	9002      	str	r0, [sp, #8]
 801c45e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c460:	9001      	str	r0, [sp, #4]
 801c462:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801c466:	9000      	str	r0, [sp, #0]
 801c468:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801c46c:	a810      	add	r0, sp, #64	; 0x40
 801c46e:	f7ff fd49 	bl	801bf04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801c472:	462c      	mov	r4, r5
 801c474:	e7b7      	b.n	801c3e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801c476:	6823      	ldr	r3, [r4, #0]
 801c478:	1d25      	adds	r5, r4, #4
 801c47a:	9310      	str	r3, [sp, #64]	; 0x40
 801c47c:	e7dd      	b.n	801c43a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c47e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c480:	6820      	ldr	r0, [r4, #0]
 801c482:	eba8 0202 	sub.w	r2, r8, r2
 801c486:	230a      	movs	r3, #10
 801c488:	b292      	uxth	r2, r2
 801c48a:	4649      	mov	r1, r9
 801c48c:	f7ff fd08 	bl	801bea0 <_ZN8touchgfx7Unicode4itoaElPtti>
 801c490:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801c494:	2b2d      	cmp	r3, #45	; 0x2d
 801c496:	f104 0504 	add.w	r5, r4, #4
 801c49a:	d1ce      	bne.n	801c43a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c49c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c4a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c4a2:	3302      	adds	r3, #2
 801c4a4:	e7e9      	b.n	801c47a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801c4a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c4a8:	1d25      	adds	r5, r4, #4
 801c4aa:	eba8 0202 	sub.w	r2, r8, r2
 801c4ae:	230a      	movs	r3, #10
 801c4b0:	b292      	uxth	r2, r2
 801c4b2:	4649      	mov	r1, r9
 801c4b4:	6820      	ldr	r0, [r4, #0]
 801c4b6:	f7ff fcd5 	bl	801be64 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801c4ba:	e7be      	b.n	801c43a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c4bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c4be:	6820      	ldr	r0, [r4, #0]
 801c4c0:	eba8 0202 	sub.w	r2, r8, r2
 801c4c4:	b292      	uxth	r2, r2
 801c4c6:	2310      	movs	r3, #16
 801c4c8:	4649      	mov	r1, r9
 801c4ca:	f7ff fccb 	bl	801be64 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801c4ce:	1d25      	adds	r5, r4, #4
 801c4d0:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801c4d4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801c4d8:	2b00      	cmp	r3, #0
 801c4da:	d0ae      	beq.n	801c43a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c4dc:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801c4e0:	2919      	cmp	r1, #25
 801c4e2:	d8f7      	bhi.n	801c4d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801c4e4:	3b20      	subs	r3, #32
 801c4e6:	8013      	strh	r3, [r2, #0]
 801c4e8:	e7f4      	b.n	801c4d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801c4ea:	9a08      	ldr	r2, [sp, #32]
 801c4ec:	2a00      	cmp	r2, #0
 801c4ee:	d0aa      	beq.n	801c446 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801c4f0:	7812      	ldrb	r2, [r2, #0]
 801c4f2:	e7a8      	b.n	801c446 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801c4f4:	2d00      	cmp	r5, #0
 801c4f6:	f43f af47 	beq.w	801c388 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801c4fa:	782d      	ldrb	r5, [r5, #0]
 801c4fc:	e744      	b.n	801c388 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801c4fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801c4fe:	b507      	push	{r0, r1, r2, lr}
 801c500:	9300      	str	r3, [sp, #0]
 801c502:	4613      	mov	r3, r2
 801c504:	2200      	movs	r2, #0
 801c506:	f7ff fe90 	bl	801c22a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801c50a:	b003      	add	sp, #12
 801c50c:	f85d fb04 	ldr.w	pc, [sp], #4

0801c510 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801c510:	b40c      	push	{r2, r3}
 801c512:	b507      	push	{r0, r1, r2, lr}
 801c514:	ab04      	add	r3, sp, #16
 801c516:	f853 2b04 	ldr.w	r2, [r3], #4
 801c51a:	9301      	str	r3, [sp, #4]
 801c51c:	f7ff ffef 	bl	801c4fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801c520:	b003      	add	sp, #12
 801c522:	f85d eb04 	ldr.w	lr, [sp], #4
 801c526:	b002      	add	sp, #8
 801c528:	4770      	bx	lr
	...

0801c52c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801c52c:	4b01      	ldr	r3, [pc, #4]	; (801c534 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801c52e:	6018      	str	r0, [r3, #0]
 801c530:	4770      	bx	lr
 801c532:	bf00      	nop
 801c534:	2001e240 	.word	0x2001e240

0801c538 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801c538:	4b06      	ldr	r3, [pc, #24]	; (801c554 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801c53a:	881a      	ldrh	r2, [r3, #0]
 801c53c:	4282      	cmp	r2, r0
 801c53e:	d807      	bhi.n	801c550 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801c540:	4b05      	ldr	r3, [pc, #20]	; (801c558 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801c542:	881b      	ldrh	r3, [r3, #0]
 801c544:	4413      	add	r3, r2
 801c546:	4298      	cmp	r0, r3
 801c548:	bfac      	ite	ge
 801c54a:	2000      	movge	r0, #0
 801c54c:	2001      	movlt	r0, #1
 801c54e:	4770      	bx	lr
 801c550:	2000      	movs	r0, #0
 801c552:	4770      	bx	lr
 801c554:	2001e260 	.word	0x2001e260
 801c558:	2001e264 	.word	0x2001e264

0801c55c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801c55c:	b508      	push	{r3, lr}
 801c55e:	4601      	mov	r1, r0
 801c560:	f7ff ffea 	bl	801c538 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801c564:	b118      	cbz	r0, 801c56e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801c566:	4b02      	ldr	r3, [pc, #8]	; (801c570 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801c568:	681b      	ldr	r3, [r3, #0]
 801c56a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801c56e:	bd08      	pop	{r3, pc}
 801c570:	2001e244 	.word	0x2001e244

0801c574 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801c574:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c576:	4c24      	ldr	r4, [pc, #144]	; (801c608 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801c578:	6823      	ldr	r3, [r4, #0]
 801c57a:	2b00      	cmp	r3, #0
 801c57c:	d042      	beq.n	801c604 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c57e:	4a23      	ldr	r2, [pc, #140]	; (801c60c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801c580:	4d23      	ldr	r5, [pc, #140]	; (801c610 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801c582:	8811      	ldrh	r1, [r2, #0]
 801c584:	f8b5 c000 	ldrh.w	ip, [r5]
 801c588:	4822      	ldr	r0, [pc, #136]	; (801c614 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801c58a:	4461      	add	r1, ip
 801c58c:	1c4a      	adds	r2, r1, #1
 801c58e:	f022 0201 	bic.w	r2, r2, #1
 801c592:	008f      	lsls	r7, r1, #2
 801c594:	0412      	lsls	r2, r2, #16
 801c596:	19de      	adds	r6, r3, r7
 801c598:	0c12      	lsrs	r2, r2, #16
 801c59a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801c59e:	6006      	str	r6, [r0, #0]
 801c5a0:	4e1d      	ldr	r6, [pc, #116]	; (801c618 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801c5a2:	19da      	adds	r2, r3, r7
 801c5a4:	6032      	str	r2, [r6, #0]
 801c5a6:	220e      	movs	r2, #14
 801c5a8:	fb02 f20c 	mul.w	r2, r2, ip
 801c5ac:	3203      	adds	r2, #3
 801c5ae:	f022 0203 	bic.w	r2, r2, #3
 801c5b2:	443a      	add	r2, r7
 801c5b4:	4f19      	ldr	r7, [pc, #100]	; (801c61c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801c5b6:	4413      	add	r3, r2
 801c5b8:	603b      	str	r3, [r7, #0]
 801c5ba:	4f19      	ldr	r7, [pc, #100]	; (801c620 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801c5bc:	2300      	movs	r3, #0
 801c5be:	803b      	strh	r3, [r7, #0]
 801c5c0:	4f18      	ldr	r7, [pc, #96]	; (801c624 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801c5c2:	683f      	ldr	r7, [r7, #0]
 801c5c4:	1aba      	subs	r2, r7, r2
 801c5c6:	4f18      	ldr	r7, [pc, #96]	; (801c628 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c5c8:	603a      	str	r2, [r7, #0]
 801c5ca:	4a18      	ldr	r2, [pc, #96]	; (801c62c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c5cc:	469c      	mov	ip, r3
 801c5ce:	8013      	strh	r3, [r2, #0]
 801c5d0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c5d4:	428b      	cmp	r3, r1
 801c5d6:	d10d      	bne.n	801c5f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c5d8:	882d      	ldrh	r5, [r5, #0]
 801c5da:	6830      	ldr	r0, [r6, #0]
 801c5dc:	2300      	movs	r3, #0
 801c5de:	240e      	movs	r4, #14
 801c5e0:	429d      	cmp	r5, r3
 801c5e2:	d90f      	bls.n	801c604 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c5e4:	fb04 0203 	mla	r2, r4, r3, r0
 801c5e8:	3301      	adds	r3, #1
 801c5ea:	7b11      	ldrb	r1, [r2, #12]
 801c5ec:	f36f 1145 	bfc	r1, #5, #1
 801c5f0:	7311      	strb	r1, [r2, #12]
 801c5f2:	e7f5      	b.n	801c5e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c5f4:	6822      	ldr	r2, [r4, #0]
 801c5f6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c5fa:	6802      	ldr	r2, [r0, #0]
 801c5fc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c600:	3301      	adds	r3, #1
 801c602:	e7e7      	b.n	801c5d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c604:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c606:	bf00      	nop
 801c608:	2001e244 	.word	0x2001e244
 801c60c:	2001e260 	.word	0x2001e260
 801c610:	2001e264 	.word	0x2001e264
 801c614:	2001e258 	.word	0x2001e258
 801c618:	2001e248 	.word	0x2001e248
 801c61c:	2001e250 	.word	0x2001e250
 801c620:	2001e262 	.word	0x2001e262
 801c624:	2001e24c 	.word	0x2001e24c
 801c628:	2001e25c 	.word	0x2001e25c
 801c62c:	2001e254 	.word	0x2001e254

0801c630 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c630:	b510      	push	{r4, lr}
 801c632:	4b10      	ldr	r3, [pc, #64]	; (801c674 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 801c634:	681b      	ldr	r3, [r3, #0]
 801c636:	b9db      	cbnz	r3, 801c670 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801c638:	b1d1      	cbz	r1, 801c670 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801c63a:	4b0f      	ldr	r3, [pc, #60]	; (801c678 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 801c63c:	801a      	strh	r2, [r3, #0]
 801c63e:	4b0f      	ldr	r3, [pc, #60]	; (801c67c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 801c640:	881b      	ldrh	r3, [r3, #0]
 801c642:	b292      	uxth	r2, r2
 801c644:	240e      	movs	r4, #14
 801c646:	4413      	add	r3, r2
 801c648:	4362      	muls	r2, r4
 801c64a:	2406      	movs	r4, #6
 801c64c:	fb04 2203 	mla	r2, r4, r3, r2
 801c650:	428a      	cmp	r2, r1
 801c652:	d305      	bcc.n	801c660 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 801c654:	4b0a      	ldr	r3, [pc, #40]	; (801c680 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 801c656:	4a0b      	ldr	r2, [pc, #44]	; (801c684 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 801c658:	480b      	ldr	r0, [pc, #44]	; (801c688 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 801c65a:	2134      	movs	r1, #52	; 0x34
 801c65c:	f00f fcb2 	bl	802bfc4 <__assert_func>
 801c660:	4b0a      	ldr	r3, [pc, #40]	; (801c68c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 801c662:	6019      	str	r1, [r3, #0]
 801c664:	4b0a      	ldr	r3, [pc, #40]	; (801c690 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 801c666:	6018      	str	r0, [r3, #0]
 801c668:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c66c:	f7ff bf82 	b.w	801c574 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c670:	bd10      	pop	{r4, pc}
 801c672:	bf00      	nop
 801c674:	2001e250 	.word	0x2001e250
 801c678:	2001e264 	.word	0x2001e264
 801c67c:	2001e260 	.word	0x2001e260
 801c680:	080356de 	.word	0x080356de
 801c684:	08035737 	.word	0x08035737
 801c688:	080356b9 	.word	0x080356b9
 801c68c:	2001e24c 	.word	0x2001e24c
 801c690:	2001e244 	.word	0x2001e244

0801c694 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c694:	b470      	push	{r4, r5, r6}
 801c696:	4c07      	ldr	r4, [pc, #28]	; (801c6b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c698:	6826      	ldr	r6, [r4, #0]
 801c69a:	4605      	mov	r5, r0
 801c69c:	4610      	mov	r0, r2
 801c69e:	9a03      	ldr	r2, [sp, #12]
 801c6a0:	b936      	cbnz	r6, 801c6b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c6a2:	6025      	str	r5, [r4, #0]
 801c6a4:	4c04      	ldr	r4, [pc, #16]	; (801c6b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c6a6:	8021      	strh	r1, [r4, #0]
 801c6a8:	bc70      	pop	{r4, r5, r6}
 801c6aa:	4619      	mov	r1, r3
 801c6ac:	f7ff bfc0 	b.w	801c630 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c6b0:	bc70      	pop	{r4, r5, r6}
 801c6b2:	4770      	bx	lr
 801c6b4:	2001e268 	.word	0x2001e268
 801c6b8:	2001e260 	.word	0x2001e260

0801c6bc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c6bc:	b508      	push	{r3, lr}
 801c6be:	4b17      	ldr	r3, [pc, #92]	; (801c71c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c6c0:	6819      	ldr	r1, [r3, #0]
 801c6c2:	b931      	cbnz	r1, 801c6d2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 801c6c4:	4b16      	ldr	r3, [pc, #88]	; (801c720 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c6c6:	4a17      	ldr	r2, [pc, #92]	; (801c724 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 801c6c8:	4817      	ldr	r0, [pc, #92]	; (801c728 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 801c6ca:	f240 4184 	movw	r1, #1156	; 0x484
 801c6ce:	f00f fc79 	bl	802bfc4 <__assert_func>
 801c6d2:	4a16      	ldr	r2, [pc, #88]	; (801c72c <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 801c6d4:	8803      	ldrh	r3, [r0, #0]
 801c6d6:	8812      	ldrh	r2, [r2, #0]
 801c6d8:	4293      	cmp	r3, r2
 801c6da:	d204      	bcs.n	801c6e6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 801c6dc:	2214      	movs	r2, #20
 801c6de:	fb02 1303 	mla	r3, r2, r3, r1
 801c6e2:	8918      	ldrh	r0, [r3, #8]
 801c6e4:	bd08      	pop	{r3, pc}
 801c6e6:	4912      	ldr	r1, [pc, #72]	; (801c730 <_ZNK8touchgfx6Bitmap8getWidthEv+0x74>)
 801c6e8:	8809      	ldrh	r1, [r1, #0]
 801c6ea:	4411      	add	r1, r2
 801c6ec:	428b      	cmp	r3, r1
 801c6ee:	da06      	bge.n	801c6fe <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 801c6f0:	1a9b      	subs	r3, r3, r2
 801c6f2:	4a10      	ldr	r2, [pc, #64]	; (801c734 <_ZNK8touchgfx6Bitmap8getWidthEv+0x78>)
 801c6f4:	6812      	ldr	r2, [r2, #0]
 801c6f6:	210e      	movs	r1, #14
 801c6f8:	fb01 2303 	mla	r3, r1, r3, r2
 801c6fc:	e7f1      	b.n	801c6e2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 801c6fe:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c702:	4293      	cmp	r3, r2
 801c704:	d107      	bne.n	801c716 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5a>
 801c706:	4b0c      	ldr	r3, [pc, #48]	; (801c738 <_ZNK8touchgfx6Bitmap8getWidthEv+0x7c>)
 801c708:	781b      	ldrb	r3, [r3, #0]
 801c70a:	b913      	cbnz	r3, 801c712 <_ZNK8touchgfx6Bitmap8getWidthEv+0x56>
 801c70c:	4b0b      	ldr	r3, [pc, #44]	; (801c73c <_ZNK8touchgfx6Bitmap8getWidthEv+0x80>)
 801c70e:	8818      	ldrh	r0, [r3, #0]
 801c710:	e7e8      	b.n	801c6e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 801c712:	4b0b      	ldr	r3, [pc, #44]	; (801c740 <_ZNK8touchgfx6Bitmap8getWidthEv+0x84>)
 801c714:	e7fb      	b.n	801c70e <_ZNK8touchgfx6Bitmap8getWidthEv+0x52>
 801c716:	2000      	movs	r0, #0
 801c718:	e7e4      	b.n	801c6e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 801c71a:	bf00      	nop
 801c71c:	2001e268 	.word	0x2001e268
 801c720:	08033bd4 	.word	0x08033bd4
 801c724:	080357e4 	.word	0x080357e4
 801c728:	080356b9 	.word	0x080356b9
 801c72c:	2001e260 	.word	0x2001e260
 801c730:	2001e264 	.word	0x2001e264
 801c734:	2001e248 	.word	0x2001e248
 801c738:	2001e1b8 	.word	0x2001e1b8
 801c73c:	2001e1ba 	.word	0x2001e1ba
 801c740:	2001e1bc 	.word	0x2001e1bc

0801c744 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c744:	b508      	push	{r3, lr}
 801c746:	4b17      	ldr	r3, [pc, #92]	; (801c7a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c748:	6819      	ldr	r1, [r3, #0]
 801c74a:	b931      	cbnz	r1, 801c75a <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 801c74c:	4b16      	ldr	r3, [pc, #88]	; (801c7a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c74e:	4a17      	ldr	r2, [pc, #92]	; (801c7ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 801c750:	4817      	ldr	r0, [pc, #92]	; (801c7b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 801c752:	f44f 6193 	mov.w	r1, #1176	; 0x498
 801c756:	f00f fc35 	bl	802bfc4 <__assert_func>
 801c75a:	4a16      	ldr	r2, [pc, #88]	; (801c7b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 801c75c:	8803      	ldrh	r3, [r0, #0]
 801c75e:	8812      	ldrh	r2, [r2, #0]
 801c760:	4293      	cmp	r3, r2
 801c762:	d204      	bcs.n	801c76e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 801c764:	2214      	movs	r2, #20
 801c766:	fb02 1303 	mla	r3, r2, r3, r1
 801c76a:	8958      	ldrh	r0, [r3, #10]
 801c76c:	bd08      	pop	{r3, pc}
 801c76e:	4912      	ldr	r1, [pc, #72]	; (801c7b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x74>)
 801c770:	8809      	ldrh	r1, [r1, #0]
 801c772:	4411      	add	r1, r2
 801c774:	428b      	cmp	r3, r1
 801c776:	da06      	bge.n	801c786 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 801c778:	1a9b      	subs	r3, r3, r2
 801c77a:	4a10      	ldr	r2, [pc, #64]	; (801c7bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x78>)
 801c77c:	6812      	ldr	r2, [r2, #0]
 801c77e:	210e      	movs	r1, #14
 801c780:	fb01 2303 	mla	r3, r1, r3, r2
 801c784:	e7f1      	b.n	801c76a <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 801c786:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c78a:	4293      	cmp	r3, r2
 801c78c:	d107      	bne.n	801c79e <_ZNK8touchgfx6Bitmap9getHeightEv+0x5a>
 801c78e:	4b0c      	ldr	r3, [pc, #48]	; (801c7c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x7c>)
 801c790:	781b      	ldrb	r3, [r3, #0]
 801c792:	b913      	cbnz	r3, 801c79a <_ZNK8touchgfx6Bitmap9getHeightEv+0x56>
 801c794:	4b0b      	ldr	r3, [pc, #44]	; (801c7c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x80>)
 801c796:	8818      	ldrh	r0, [r3, #0]
 801c798:	e7e8      	b.n	801c76c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 801c79a:	4b0b      	ldr	r3, [pc, #44]	; (801c7c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x84>)
 801c79c:	e7fb      	b.n	801c796 <_ZNK8touchgfx6Bitmap9getHeightEv+0x52>
 801c79e:	2000      	movs	r0, #0
 801c7a0:	e7e4      	b.n	801c76c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 801c7a2:	bf00      	nop
 801c7a4:	2001e268 	.word	0x2001e268
 801c7a8:	08033bd4 	.word	0x08033bd4
 801c7ac:	08035810 	.word	0x08035810
 801c7b0:	080356b9 	.word	0x080356b9
 801c7b4:	2001e260 	.word	0x2001e260
 801c7b8:	2001e264 	.word	0x2001e264
 801c7bc:	2001e248 	.word	0x2001e248
 801c7c0:	2001e1b8 	.word	0x2001e1b8
 801c7c4:	2001e1bc 	.word	0x2001e1bc
 801c7c8:	2001e1ba 	.word	0x2001e1ba

0801c7cc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c7cc:	b510      	push	{r4, lr}
 801c7ce:	4b23      	ldr	r3, [pc, #140]	; (801c85c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801c7d0:	681c      	ldr	r4, [r3, #0]
 801c7d2:	b934      	cbnz	r4, 801c7e2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 801c7d4:	4b22      	ldr	r3, [pc, #136]	; (801c860 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801c7d6:	4a23      	ldr	r2, [pc, #140]	; (801c864 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801c7d8:	4823      	ldr	r0, [pc, #140]	; (801c868 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801c7da:	f240 41ac 	movw	r1, #1196	; 0x4ac
 801c7de:	f00f fbf1 	bl	802bfc4 <__assert_func>
 801c7e2:	4a22      	ldr	r2, [pc, #136]	; (801c86c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801c7e4:	880b      	ldrh	r3, [r1, #0]
 801c7e6:	8812      	ldrh	r2, [r2, #0]
 801c7e8:	4293      	cmp	r3, r2
 801c7ea:	d211      	bcs.n	801c810 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 801c7ec:	2214      	movs	r2, #20
 801c7ee:	fb02 4303 	mla	r3, r2, r3, r4
 801c7f2:	8a1a      	ldrh	r2, [r3, #16]
 801c7f4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801c7f8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801c7fc:	8a5b      	ldrh	r3, [r3, #18]
 801c7fe:	8004      	strh	r4, [r0, #0]
 801c800:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c804:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801c808:	8041      	strh	r1, [r0, #2]
 801c80a:	8082      	strh	r2, [r0, #4]
 801c80c:	80c3      	strh	r3, [r0, #6]
 801c80e:	e00e      	b.n	801c82e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801c810:	4917      	ldr	r1, [pc, #92]	; (801c870 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 801c812:	8809      	ldrh	r1, [r1, #0]
 801c814:	4411      	add	r1, r2
 801c816:	428b      	cmp	r3, r1
 801c818:	da0a      	bge.n	801c830 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 801c81a:	1a9b      	subs	r3, r3, r2
 801c81c:	4a15      	ldr	r2, [pc, #84]	; (801c874 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 801c81e:	6812      	ldr	r2, [r2, #0]
 801c820:	210e      	movs	r1, #14
 801c822:	fb01 2303 	mla	r3, r1, r3, r2
 801c826:	681a      	ldr	r2, [r3, #0]
 801c828:	6002      	str	r2, [r0, #0]
 801c82a:	685a      	ldr	r2, [r3, #4]
 801c82c:	6042      	str	r2, [r0, #4]
 801c82e:	bd10      	pop	{r4, pc}
 801c830:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c834:	4293      	cmp	r3, r2
 801c836:	d10b      	bne.n	801c850 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 801c838:	4b0f      	ldr	r3, [pc, #60]	; (801c878 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 801c83a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c83e:	4b0f      	ldr	r3, [pc, #60]	; (801c87c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 801c840:	8081      	strh	r1, [r0, #4]
 801c842:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c846:	80c2      	strh	r2, [r0, #6]
 801c848:	2300      	movs	r3, #0
 801c84a:	8003      	strh	r3, [r0, #0]
 801c84c:	8043      	strh	r3, [r0, #2]
 801c84e:	e7ee      	b.n	801c82e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801c850:	2300      	movs	r3, #0
 801c852:	8003      	strh	r3, [r0, #0]
 801c854:	8043      	strh	r3, [r0, #2]
 801c856:	8083      	strh	r3, [r0, #4]
 801c858:	e7d8      	b.n	801c80c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 801c85a:	bf00      	nop
 801c85c:	2001e268 	.word	0x2001e268
 801c860:	08033bd4 	.word	0x08033bd4
 801c864:	0803577d 	.word	0x0803577d
 801c868:	080356b9 	.word	0x080356b9
 801c86c:	2001e260 	.word	0x2001e260
 801c870:	2001e264 	.word	0x2001e264
 801c874:	2001e248 	.word	0x2001e248
 801c878:	2001e1b4 	.word	0x2001e1b4
 801c87c:	2001e1b6 	.word	0x2001e1b6

0801c880 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801c880:	4b18      	ldr	r3, [pc, #96]	; (801c8e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801c882:	681b      	ldr	r3, [r3, #0]
 801c884:	b34b      	cbz	r3, 801c8da <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801c886:	4a18      	ldr	r2, [pc, #96]	; (801c8e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801c888:	8800      	ldrh	r0, [r0, #0]
 801c88a:	8812      	ldrh	r2, [r2, #0]
 801c88c:	4290      	cmp	r0, r2
 801c88e:	d211      	bcs.n	801c8b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 801c890:	2214      	movs	r2, #20
 801c892:	fb02 3300 	mla	r3, r2, r0, r3
 801c896:	8a1a      	ldrh	r2, [r3, #16]
 801c898:	8919      	ldrh	r1, [r3, #8]
 801c89a:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c89e:	428a      	cmp	r2, r1
 801c8a0:	db1d      	blt.n	801c8de <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801c8a2:	8a58      	ldrh	r0, [r3, #18]
 801c8a4:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801c8a8:	895b      	ldrh	r3, [r3, #10]
 801c8aa:	4298      	cmp	r0, r3
 801c8ac:	bfac      	ite	ge
 801c8ae:	2000      	movge	r0, #0
 801c8b0:	2001      	movlt	r0, #1
 801c8b2:	4770      	bx	lr
 801c8b4:	4b0d      	ldr	r3, [pc, #52]	; (801c8ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801c8b6:	881b      	ldrh	r3, [r3, #0]
 801c8b8:	4413      	add	r3, r2
 801c8ba:	4298      	cmp	r0, r3
 801c8bc:	da0d      	bge.n	801c8da <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801c8be:	4b0c      	ldr	r3, [pc, #48]	; (801c8f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 801c8c0:	681b      	ldr	r3, [r3, #0]
 801c8c2:	1a80      	subs	r0, r0, r2
 801c8c4:	220e      	movs	r2, #14
 801c8c6:	fb02 3300 	mla	r3, r2, r0, r3
 801c8ca:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801c8ce:	891a      	ldrh	r2, [r3, #8]
 801c8d0:	4291      	cmp	r1, r2
 801c8d2:	db04      	blt.n	801c8de <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801c8d4:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801c8d8:	e7e6      	b.n	801c8a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 801c8da:	2000      	movs	r0, #0
 801c8dc:	4770      	bx	lr
 801c8de:	2001      	movs	r0, #1
 801c8e0:	4770      	bx	lr
 801c8e2:	bf00      	nop
 801c8e4:	2001e268 	.word	0x2001e268
 801c8e8:	2001e260 	.word	0x2001e260
 801c8ec:	2001e264 	.word	0x2001e264
 801c8f0:	2001e248 	.word	0x2001e248

0801c8f4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801c8f4:	b508      	push	{r3, lr}
 801c8f6:	4b12      	ldr	r3, [pc, #72]	; (801c940 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801c8f8:	6819      	ldr	r1, [r3, #0]
 801c8fa:	b931      	cbnz	r1, 801c90a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801c8fc:	4b11      	ldr	r3, [pc, #68]	; (801c944 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c8fe:	4a12      	ldr	r2, [pc, #72]	; (801c948 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801c900:	4812      	ldr	r0, [pc, #72]	; (801c94c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801c902:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 801c906:	f00f fb5d 	bl	802bfc4 <__assert_func>
 801c90a:	8803      	ldrh	r3, [r0, #0]
 801c90c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801c910:	4293      	cmp	r3, r2
 801c912:	d012      	beq.n	801c93a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801c914:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c918:	4293      	cmp	r3, r2
 801c91a:	d103      	bne.n	801c924 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 801c91c:	4b0c      	ldr	r3, [pc, #48]	; (801c950 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801c91e:	681b      	ldr	r3, [r3, #0]
 801c920:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801c922:	bd08      	pop	{r3, pc}
 801c924:	4a0b      	ldr	r2, [pc, #44]	; (801c954 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 801c926:	6812      	ldr	r2, [r2, #0]
 801c928:	b11a      	cbz	r2, 801c932 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 801c92a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c92e:	2800      	cmp	r0, #0
 801c930:	d1f7      	bne.n	801c922 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801c932:	2214      	movs	r2, #20
 801c934:	4353      	muls	r3, r2
 801c936:	58c8      	ldr	r0, [r1, r3]
 801c938:	e7f3      	b.n	801c922 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801c93a:	2000      	movs	r0, #0
 801c93c:	e7f1      	b.n	801c922 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801c93e:	bf00      	nop
 801c940:	2001e268 	.word	0x2001e268
 801c944:	08033bd4 	.word	0x08033bd4
 801c948:	080357b3 	.word	0x080357b3
 801c94c:	080356b9 	.word	0x080356b9
 801c950:	2001e1c0 	.word	0x2001e1c0
 801c954:	2001e244 	.word	0x2001e244

0801c958 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801c958:	8802      	ldrh	r2, [r0, #0]
 801c95a:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 801c95e:	429a      	cmp	r2, r3
 801c960:	d845      	bhi.n	801c9ee <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801c962:	4b24      	ldr	r3, [pc, #144]	; (801c9f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c964:	8818      	ldrh	r0, [r3, #0]
 801c966:	4282      	cmp	r2, r0
 801c968:	d221      	bcs.n	801c9ae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 801c96a:	4b23      	ldr	r3, [pc, #140]	; (801c9f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801c96c:	6819      	ldr	r1, [r3, #0]
 801c96e:	2314      	movs	r3, #20
 801c970:	fb03 1302 	mla	r3, r3, r2, r1
 801c974:	6858      	ldr	r0, [r3, #4]
 801c976:	2800      	cmp	r0, #0
 801c978:	d03a      	beq.n	801c9f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801c97a:	4920      	ldr	r1, [pc, #128]	; (801c9fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801c97c:	6809      	ldr	r1, [r1, #0]
 801c97e:	2900      	cmp	r1, #0
 801c980:	d036      	beq.n	801c9f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801c982:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801c986:	2900      	cmp	r1, #0
 801c988:	d032      	beq.n	801c9f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801c98a:	891a      	ldrh	r2, [r3, #8]
 801c98c:	8958      	ldrh	r0, [r3, #10]
 801c98e:	4350      	muls	r0, r2
 801c990:	7c5a      	ldrb	r2, [r3, #17]
 801c992:	7cdb      	ldrb	r3, [r3, #19]
 801c994:	0952      	lsrs	r2, r2, #5
 801c996:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801c99a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801c99e:	2b0b      	cmp	r3, #11
 801c9a0:	bf18      	it	ne
 801c9a2:	0040      	lslne	r0, r0, #1
 801c9a4:	3003      	adds	r0, #3
 801c9a6:	f020 0003 	bic.w	r0, r0, #3
 801c9aa:	4408      	add	r0, r1
 801c9ac:	4770      	bx	lr
 801c9ae:	4b14      	ldr	r3, [pc, #80]	; (801ca00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 801c9b0:	881b      	ldrh	r3, [r3, #0]
 801c9b2:	4403      	add	r3, r0
 801c9b4:	429a      	cmp	r2, r3
 801c9b6:	da1a      	bge.n	801c9ee <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801c9b8:	4b12      	ldr	r3, [pc, #72]	; (801ca04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 801c9ba:	681b      	ldr	r3, [r3, #0]
 801c9bc:	1a10      	subs	r0, r2, r0
 801c9be:	210e      	movs	r1, #14
 801c9c0:	fb01 3000 	mla	r0, r1, r0, r3
 801c9c4:	7b03      	ldrb	r3, [r0, #12]
 801c9c6:	f003 031f 	and.w	r3, r3, #31
 801c9ca:	2b0b      	cmp	r3, #11
 801c9cc:	d10b      	bne.n	801c9e6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c9ce:	8903      	ldrh	r3, [r0, #8]
 801c9d0:	8940      	ldrh	r0, [r0, #10]
 801c9d2:	4358      	muls	r0, r3
 801c9d4:	4b09      	ldr	r3, [pc, #36]	; (801c9fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801c9d6:	6819      	ldr	r1, [r3, #0]
 801c9d8:	3003      	adds	r0, #3
 801c9da:	f020 0303 	bic.w	r3, r0, #3
 801c9de:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801c9e2:	4418      	add	r0, r3
 801c9e4:	4770      	bx	lr
 801c9e6:	2b0d      	cmp	r3, #13
 801c9e8:	d101      	bne.n	801c9ee <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801c9ea:	300d      	adds	r0, #13
 801c9ec:	4770      	bx	lr
 801c9ee:	2000      	movs	r0, #0
 801c9f0:	4770      	bx	lr
 801c9f2:	bf00      	nop
 801c9f4:	2001e260 	.word	0x2001e260
 801c9f8:	2001e268 	.word	0x2001e268
 801c9fc:	2001e244 	.word	0x2001e244
 801ca00:	2001e264 	.word	0x2001e264
 801ca04:	2001e248 	.word	0x2001e248

0801ca08 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801ca08:	b510      	push	{r4, lr}
 801ca0a:	4b17      	ldr	r3, [pc, #92]	; (801ca68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801ca0c:	6819      	ldr	r1, [r3, #0]
 801ca0e:	8803      	ldrh	r3, [r0, #0]
 801ca10:	b1e9      	cbz	r1, 801ca4e <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 801ca12:	4a16      	ldr	r2, [pc, #88]	; (801ca6c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801ca14:	8812      	ldrh	r2, [r2, #0]
 801ca16:	429a      	cmp	r2, r3
 801ca18:	d90a      	bls.n	801ca30 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 801ca1a:	2214      	movs	r2, #20
 801ca1c:	fb02 1303 	mla	r3, r2, r3, r1
 801ca20:	7c58      	ldrb	r0, [r3, #17]
 801ca22:	0942      	lsrs	r2, r0, #5
 801ca24:	7cd8      	ldrb	r0, [r3, #19]
 801ca26:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801ca2a:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801ca2e:	bd10      	pop	{r4, pc}
 801ca30:	490f      	ldr	r1, [pc, #60]	; (801ca70 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801ca32:	8809      	ldrh	r1, [r1, #0]
 801ca34:	4411      	add	r1, r2
 801ca36:	428b      	cmp	r3, r1
 801ca38:	da09      	bge.n	801ca4e <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 801ca3a:	1a9b      	subs	r3, r3, r2
 801ca3c:	4a0d      	ldr	r2, [pc, #52]	; (801ca74 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801ca3e:	6812      	ldr	r2, [r2, #0]
 801ca40:	210e      	movs	r1, #14
 801ca42:	fb01 2303 	mla	r3, r1, r3, r2
 801ca46:	7b18      	ldrb	r0, [r3, #12]
 801ca48:	f000 001f 	and.w	r0, r0, #31
 801ca4c:	e7ef      	b.n	801ca2e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801ca4e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801ca52:	4293      	cmp	r3, r2
 801ca54:	d106      	bne.n	801ca64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 801ca56:	f7f5 fe13 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 801ca5a:	6803      	ldr	r3, [r0, #0]
 801ca5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ca60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ca62:	4718      	bx	r3
 801ca64:	2000      	movs	r0, #0
 801ca66:	e7e2      	b.n	801ca2e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801ca68:	2001e268 	.word	0x2001e268
 801ca6c:	2001e260 	.word	0x2001e260
 801ca70:	2001e264 	.word	0x2001e264
 801ca74:	2001e248 	.word	0x2001e248

0801ca78 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801ca78:	2010      	movs	r0, #16
 801ca7a:	4770      	bx	lr

0801ca7c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801ca7c:	2000      	movs	r0, #0
 801ca7e:	4770      	bx	lr

0801ca80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801ca80:	2bff      	cmp	r3, #255	; 0xff
 801ca82:	d050      	beq.n	801cb26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801ca84:	2a0b      	cmp	r2, #11
 801ca86:	d04a      	beq.n	801cb1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801ca88:	d80e      	bhi.n	801caa8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801ca8a:	2a03      	cmp	r2, #3
 801ca8c:	d03f      	beq.n	801cb0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801ca8e:	d804      	bhi.n	801ca9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801ca90:	2a01      	cmp	r2, #1
 801ca92:	d03e      	beq.n	801cb12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801ca94:	d93f      	bls.n	801cb16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801ca96:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801ca98:	4770      	bx	lr
 801ca9a:	2a09      	cmp	r2, #9
 801ca9c:	d03f      	beq.n	801cb1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801ca9e:	d83c      	bhi.n	801cb1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801caa0:	2a08      	cmp	r2, #8
 801caa2:	d03a      	beq.n	801cb1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801caa4:	2000      	movs	r0, #0
 801caa6:	4770      	bx	lr
 801caa8:	2a2f      	cmp	r2, #47	; 0x2f
 801caaa:	d024      	beq.n	801caf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801caac:	d80d      	bhi.n	801caca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801caae:	2a2d      	cmp	r2, #45	; 0x2d
 801cab0:	d014      	beq.n	801cadc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801cab2:	d826      	bhi.n	801cb02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801cab4:	2a2c      	cmp	r2, #44	; 0x2c
 801cab6:	d1f5      	bne.n	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cab8:	684b      	ldr	r3, [r1, #4]
 801caba:	781b      	ldrb	r3, [r3, #0]
 801cabc:	2b01      	cmp	r3, #1
 801cabe:	d018      	beq.n	801caf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801cac0:	d323      	bcc.n	801cb0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801cac2:	2b02      	cmp	r3, #2
 801cac4:	d1ee      	bne.n	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cac6:	6880      	ldr	r0, [r0, #8]
 801cac8:	4770      	bx	lr
 801caca:	2a31      	cmp	r2, #49	; 0x31
 801cacc:	d004      	beq.n	801cad8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801cace:	d328      	bcc.n	801cb22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801cad0:	2a32      	cmp	r2, #50	; 0x32
 801cad2:	d026      	beq.n	801cb22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801cad4:	2a33      	cmp	r2, #51	; 0x33
 801cad6:	d1e5      	bne.n	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cad8:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801cada:	4770      	bx	lr
 801cadc:	684b      	ldr	r3, [r1, #4]
 801cade:	781b      	ldrb	r3, [r3, #0]
 801cae0:	2b01      	cmp	r3, #1
 801cae2:	d004      	beq.n	801caee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801cae4:	d30b      	bcc.n	801cafe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801cae6:	2b02      	cmp	r3, #2
 801cae8:	d1dc      	bne.n	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801caea:	6900      	ldr	r0, [r0, #16]
 801caec:	4770      	bx	lr
 801caee:	6a00      	ldr	r0, [r0, #32]
 801caf0:	4770      	bx	lr
 801caf2:	6980      	ldr	r0, [r0, #24]
 801caf4:	4770      	bx	lr
 801caf6:	684b      	ldr	r3, [r1, #4]
 801caf8:	781b      	ldrb	r3, [r3, #0]
 801cafa:	2b00      	cmp	r3, #0
 801cafc:	d1d2      	bne.n	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cafe:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801cb00:	4770      	bx	lr
 801cb02:	684b      	ldr	r3, [r1, #4]
 801cb04:	781b      	ldrb	r3, [r3, #0]
 801cb06:	2b00      	cmp	r3, #0
 801cb08:	d1cc      	bne.n	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb0a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801cb0c:	4770      	bx	lr
 801cb0e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801cb10:	4770      	bx	lr
 801cb12:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801cb14:	4770      	bx	lr
 801cb16:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801cb18:	4770      	bx	lr
 801cb1a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801cb1c:	4770      	bx	lr
 801cb1e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801cb20:	4770      	bx	lr
 801cb22:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801cb24:	4770      	bx	lr
 801cb26:	2a0b      	cmp	r2, #11
 801cb28:	d049      	beq.n	801cbbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801cb2a:	d80e      	bhi.n	801cb4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801cb2c:	2a03      	cmp	r2, #3
 801cb2e:	d040      	beq.n	801cbb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801cb30:	d804      	bhi.n	801cb3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801cb32:	2a01      	cmp	r2, #1
 801cb34:	d03f      	beq.n	801cbb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801cb36:	d940      	bls.n	801cbba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801cb38:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801cb3a:	4770      	bx	lr
 801cb3c:	2a09      	cmp	r2, #9
 801cb3e:	d03e      	beq.n	801cbbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801cb40:	d801      	bhi.n	801cb46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801cb42:	2a08      	cmp	r2, #8
 801cb44:	d1ae      	bne.n	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb46:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801cb48:	4770      	bx	lr
 801cb4a:	2a2f      	cmp	r2, #47	; 0x2f
 801cb4c:	d024      	beq.n	801cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801cb4e:	d80d      	bhi.n	801cb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801cb50:	2a2d      	cmp	r2, #45	; 0x2d
 801cb52:	d014      	beq.n	801cb7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801cb54:	d826      	bhi.n	801cba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801cb56:	2a2c      	cmp	r2, #44	; 0x2c
 801cb58:	d1a4      	bne.n	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb5a:	684b      	ldr	r3, [r1, #4]
 801cb5c:	781b      	ldrb	r3, [r3, #0]
 801cb5e:	2b01      	cmp	r3, #1
 801cb60:	d018      	beq.n	801cb94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801cb62:	d324      	bcc.n	801cbae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801cb64:	2b02      	cmp	r3, #2
 801cb66:	d19d      	bne.n	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb68:	68c0      	ldr	r0, [r0, #12]
 801cb6a:	4770      	bx	lr
 801cb6c:	2a31      	cmp	r2, #49	; 0x31
 801cb6e:	d004      	beq.n	801cb7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801cb70:	d327      	bcc.n	801cbc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801cb72:	2a32      	cmp	r2, #50	; 0x32
 801cb74:	d025      	beq.n	801cbc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801cb76:	2a33      	cmp	r2, #51	; 0x33
 801cb78:	d194      	bne.n	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb7a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801cb7c:	4770      	bx	lr
 801cb7e:	684b      	ldr	r3, [r1, #4]
 801cb80:	781b      	ldrb	r3, [r3, #0]
 801cb82:	2b01      	cmp	r3, #1
 801cb84:	d004      	beq.n	801cb90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801cb86:	d30b      	bcc.n	801cba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801cb88:	2b02      	cmp	r3, #2
 801cb8a:	d18b      	bne.n	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb8c:	6940      	ldr	r0, [r0, #20]
 801cb8e:	4770      	bx	lr
 801cb90:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801cb92:	4770      	bx	lr
 801cb94:	69c0      	ldr	r0, [r0, #28]
 801cb96:	4770      	bx	lr
 801cb98:	684b      	ldr	r3, [r1, #4]
 801cb9a:	781b      	ldrb	r3, [r3, #0]
 801cb9c:	2b00      	cmp	r3, #0
 801cb9e:	d181      	bne.n	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cba0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801cba2:	4770      	bx	lr
 801cba4:	684b      	ldr	r3, [r1, #4]
 801cba6:	781b      	ldrb	r3, [r3, #0]
 801cba8:	2b00      	cmp	r3, #0
 801cbaa:	f47f af7b 	bne.w	801caa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cbae:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801cbb0:	4770      	bx	lr
 801cbb2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801cbb4:	4770      	bx	lr
 801cbb6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801cbb8:	4770      	bx	lr
 801cbba:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801cbbc:	4770      	bx	lr
 801cbbe:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801cbc0:	4770      	bx	lr
 801cbc2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801cbc4:	4770      	bx	lr

0801cbc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cbc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbca:	b087      	sub	sp, #28
 801cbcc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cbce:	9205      	str	r2, [sp, #20]
 801cbd0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cbd4:	9202      	str	r2, [sp, #8]
 801cbd6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801cbda:	9101      	str	r1, [sp, #4]
 801cbdc:	6841      	ldr	r1, [r0, #4]
 801cbde:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801cbe2:	fb01 2404 	mla	r4, r1, r4, r2
 801cbe6:	6802      	ldr	r2, [r0, #0]
 801cbe8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cbec:	f8de 2000 	ldr.w	r2, [lr]
 801cbf0:	9203      	str	r2, [sp, #12]
 801cbf2:	f8de 2004 	ldr.w	r2, [lr, #4]
 801cbf6:	3204      	adds	r2, #4
 801cbf8:	9204      	str	r2, [sp, #16]
 801cbfa:	9a02      	ldr	r2, [sp, #8]
 801cbfc:	43d6      	mvns	r6, r2
 801cbfe:	b2f6      	uxtb	r6, r6
 801cc00:	9a01      	ldr	r2, [sp, #4]
 801cc02:	2a00      	cmp	r2, #0
 801cc04:	dc03      	bgt.n	801cc0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cc06:	9a05      	ldr	r2, [sp, #20]
 801cc08:	2a00      	cmp	r2, #0
 801cc0a:	f340 8129 	ble.w	801ce60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801cc0e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cc10:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801cc14:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801cc18:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cc1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cc1e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cc22:	2b00      	cmp	r3, #0
 801cc24:	dd0e      	ble.n	801cc44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cc26:	1408      	asrs	r0, r1, #16
 801cc28:	d405      	bmi.n	801cc36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc2a:	4560      	cmp	r0, ip
 801cc2c:	da03      	bge.n	801cc36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc2e:	1410      	asrs	r0, r2, #16
 801cc30:	d401      	bmi.n	801cc36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc32:	42b8      	cmp	r0, r7
 801cc34:	db07      	blt.n	801cc46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801cc36:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cc38:	4401      	add	r1, r0
 801cc3a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cc3c:	3b01      	subs	r3, #1
 801cc3e:	4402      	add	r2, r0
 801cc40:	3402      	adds	r4, #2
 801cc42:	e7ee      	b.n	801cc22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801cc44:	d071      	beq.n	801cd2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cc46:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cc48:	1e58      	subs	r0, r3, #1
 801cc4a:	fb05 1500 	mla	r5, r5, r0, r1
 801cc4e:	142d      	asrs	r5, r5, #16
 801cc50:	d45f      	bmi.n	801cd12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801cc52:	4565      	cmp	r5, ip
 801cc54:	da5d      	bge.n	801cd12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801cc56:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cc58:	fb05 2000 	mla	r0, r5, r0, r2
 801cc5c:	1400      	asrs	r0, r0, #16
 801cc5e:	d458      	bmi.n	801cd12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801cc60:	42b8      	cmp	r0, r7
 801cc62:	da56      	bge.n	801cd12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801cc64:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801cc68:	4699      	mov	r9, r3
 801cc6a:	46a2      	mov	sl, r4
 801cc6c:	f1b9 0f00 	cmp.w	r9, #0
 801cc70:	dd57      	ble.n	801cd22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801cc72:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801cc76:	9803      	ldr	r0, [sp, #12]
 801cc78:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801cc7c:	140d      	asrs	r5, r1, #16
 801cc7e:	fb07 000c 	mla	r0, r7, ip, r0
 801cc82:	f109 39ff 	add.w	r9, r9, #4294967295
 801cc86:	5d40      	ldrb	r0, [r0, r5]
 801cc88:	9d04      	ldr	r5, [sp, #16]
 801cc8a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801cc8e:	f8ba 5000 	ldrh.w	r5, [sl]
 801cc92:	122f      	asrs	r7, r5, #8
 801cc94:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801cc98:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cc9c:	fb17 f706 	smulbb	r7, r7, r6
 801cca0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801cca4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cca8:	00ed      	lsls	r5, r5, #3
 801ccaa:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801ccae:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801ccb2:	10c7      	asrs	r7, r0, #3
 801ccb4:	b2ed      	uxtb	r5, r5
 801ccb6:	00c0      	lsls	r0, r0, #3
 801ccb8:	fb18 f806 	smulbb	r8, r8, r6
 801ccbc:	fb15 f506 	smulbb	r5, r5, r6
 801ccc0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ccc4:	b2c0      	uxtb	r0, r0
 801ccc6:	fa1f fc8c 	uxth.w	ip, ip
 801ccca:	fb07 870b 	mla	r7, r7, fp, r8
 801ccce:	fb00 500b 	mla	r0, r0, fp, r5
 801ccd2:	b280      	uxth	r0, r0
 801ccd4:	b2bf      	uxth	r7, r7
 801ccd6:	f10c 0501 	add.w	r5, ip, #1
 801ccda:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ccde:	f107 0801 	add.w	r8, r7, #1
 801cce2:	1c45      	adds	r5, r0, #1
 801cce4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801cce8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801ccec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ccee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ccf2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ccf6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ccfa:	ea45 0c0c 	orr.w	ip, r5, ip
 801ccfe:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801cd02:	4401      	add	r1, r0
 801cd04:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cd06:	ea4c 0c08 	orr.w	ip, ip, r8
 801cd0a:	f82a cb02 	strh.w	ip, [sl], #2
 801cd0e:	4402      	add	r2, r0
 801cd10:	e7ac      	b.n	801cc6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801cd12:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801cd16:	f04f 0800 	mov.w	r8, #0
 801cd1a:	eb03 0008 	add.w	r0, r3, r8
 801cd1e:	2800      	cmp	r0, #0
 801cd20:	dc41      	bgt.n	801cda6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801cd22:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cd26:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cd2a:	9b01      	ldr	r3, [sp, #4]
 801cd2c:	2b00      	cmp	r3, #0
 801cd2e:	f340 8097 	ble.w	801ce60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801cd32:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cd36:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cd3a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cd3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cd40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cd44:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cd48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cd4c:	eef0 6a62 	vmov.f32	s13, s5
 801cd50:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cd54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd58:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cd5c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801cd60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd64:	eef0 6a43 	vmov.f32	s13, s6
 801cd68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd6c:	ee12 2a90 	vmov	r2, s5
 801cd70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd74:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd78:	ee13 2a10 	vmov	r2, s6
 801cd7c:	9313      	str	r3, [sp, #76]	; 0x4c
 801cd7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cd80:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd84:	9314      	str	r3, [sp, #80]	; 0x50
 801cd86:	9b01      	ldr	r3, [sp, #4]
 801cd88:	9a05      	ldr	r2, [sp, #20]
 801cd8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd8e:	3b01      	subs	r3, #1
 801cd90:	9301      	str	r3, [sp, #4]
 801cd92:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801cd96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cd98:	eeb0 3a67 	vmov.f32	s6, s15
 801cd9c:	bf08      	it	eq
 801cd9e:	4613      	moveq	r3, r2
 801cda0:	eef0 2a47 	vmov.f32	s5, s14
 801cda4:	e72c      	b.n	801cc00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cda6:	140f      	asrs	r7, r1, #16
 801cda8:	d453      	bmi.n	801ce52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cdaa:	f8de 5008 	ldr.w	r5, [lr, #8]
 801cdae:	42bd      	cmp	r5, r7
 801cdb0:	dd4f      	ble.n	801ce52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cdb2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801cdb6:	d44c      	bmi.n	801ce52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cdb8:	f8de 000c 	ldr.w	r0, [lr, #12]
 801cdbc:	4560      	cmp	r0, ip
 801cdbe:	dd48      	ble.n	801ce52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cdc0:	9803      	ldr	r0, [sp, #12]
 801cdc2:	b22d      	sxth	r5, r5
 801cdc4:	fb0c 0505 	mla	r5, ip, r5, r0
 801cdc8:	5de8      	ldrb	r0, [r5, r7]
 801cdca:	9d04      	ldr	r5, [sp, #16]
 801cdcc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801cdd0:	f06f 0501 	mvn.w	r5, #1
 801cdd4:	fb05 fb08 	mul.w	fp, r5, r8
 801cdd8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801cddc:	f834 500b 	ldrh.w	r5, [r4, fp]
 801cde0:	122f      	asrs	r7, r5, #8
 801cde2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cde6:	fb17 f706 	smulbb	r7, r7, r6
 801cdea:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801cdee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cdf2:	00ed      	lsls	r5, r5, #3
 801cdf4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801cdf8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801cdfc:	10c7      	asrs	r7, r0, #3
 801cdfe:	b2ed      	uxtb	r5, r5
 801ce00:	00c0      	lsls	r0, r0, #3
 801ce02:	fb19 f906 	smulbb	r9, r9, r6
 801ce06:	fb15 f506 	smulbb	r5, r5, r6
 801ce0a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ce0e:	b2c0      	uxtb	r0, r0
 801ce10:	fa1f fc8c 	uxth.w	ip, ip
 801ce14:	fb07 970a 	mla	r7, r7, sl, r9
 801ce18:	fb00 500a 	mla	r0, r0, sl, r5
 801ce1c:	b2bf      	uxth	r7, r7
 801ce1e:	b280      	uxth	r0, r0
 801ce20:	f10c 0501 	add.w	r5, ip, #1
 801ce24:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ce28:	f107 0901 	add.w	r9, r7, #1
 801ce2c:	1c45      	adds	r5, r0, #1
 801ce2e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ce32:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801ce36:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ce3a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ce3e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ce42:	ea45 0c0c 	orr.w	ip, r5, ip
 801ce46:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ce4a:	ea4c 0c09 	orr.w	ip, ip, r9
 801ce4e:	f824 c00b 	strh.w	ip, [r4, fp]
 801ce52:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ce54:	4401      	add	r1, r0
 801ce56:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ce58:	f108 38ff 	add.w	r8, r8, #4294967295
 801ce5c:	4402      	add	r2, r0
 801ce5e:	e75c      	b.n	801cd1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801ce60:	b007      	add	sp, #28
 801ce62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ce66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ce66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce6a:	b085      	sub	sp, #20
 801ce6c:	4693      	mov	fp, r2
 801ce6e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ce70:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ce72:	6870      	ldr	r0, [r6, #4]
 801ce74:	9100      	str	r1, [sp, #0]
 801ce76:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ce7a:	fb00 2404 	mla	r4, r0, r4, r2
 801ce7e:	6832      	ldr	r2, [r6, #0]
 801ce80:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ce84:	682a      	ldr	r2, [r5, #0]
 801ce86:	9201      	str	r2, [sp, #4]
 801ce88:	686a      	ldr	r2, [r5, #4]
 801ce8a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801ce8e:	3204      	adds	r2, #4
 801ce90:	9202      	str	r2, [sp, #8]
 801ce92:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ce96:	9a00      	ldr	r2, [sp, #0]
 801ce98:	2a00      	cmp	r2, #0
 801ce9a:	dc03      	bgt.n	801cea4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ce9c:	f1bb 0f00 	cmp.w	fp, #0
 801cea0:	f340 80a0 	ble.w	801cfe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801cea4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cea6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ceaa:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ceae:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ceb2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ceb4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ceb8:	2b00      	cmp	r3, #0
 801ceba:	dd0c      	ble.n	801ced6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cebc:	1406      	asrs	r6, r0, #16
 801cebe:	d405      	bmi.n	801cecc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cec0:	454e      	cmp	r6, r9
 801cec2:	da03      	bge.n	801cecc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cec4:	1416      	asrs	r6, r2, #16
 801cec6:	d401      	bmi.n	801cecc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cec8:	4546      	cmp	r6, r8
 801ceca:	db05      	blt.n	801ced8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cecc:	4470      	add	r0, lr
 801cece:	4462      	add	r2, ip
 801ced0:	3b01      	subs	r3, #1
 801ced2:	3402      	adds	r4, #2
 801ced4:	e7f0      	b.n	801ceb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ced6:	d00f      	beq.n	801cef8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ced8:	1e5e      	subs	r6, r3, #1
 801ceda:	fb0e 0706 	mla	r7, lr, r6, r0
 801cede:	143f      	asrs	r7, r7, #16
 801cee0:	d541      	bpl.n	801cf66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801cee2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801cee6:	4698      	mov	r8, r3
 801cee8:	9603      	str	r6, [sp, #12]
 801ceea:	f1b8 0f00 	cmp.w	r8, #0
 801ceee:	dc59      	bgt.n	801cfa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cef0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cef4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cef8:	9b00      	ldr	r3, [sp, #0]
 801cefa:	2b00      	cmp	r3, #0
 801cefc:	dd72      	ble.n	801cfe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801cefe:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cf02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cf06:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cf0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cf0c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cf10:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cf14:	eeb0 6a62 	vmov.f32	s12, s5
 801cf18:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cf1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cf20:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cf24:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cf28:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cf2c:	eeb0 6a43 	vmov.f32	s12, s6
 801cf30:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cf34:	ee12 2a90 	vmov	r2, s5
 801cf38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cf3c:	fb92 fef3 	sdiv	lr, r2, r3
 801cf40:	ee13 2a10 	vmov	r2, s6
 801cf44:	fb92 fcf3 	sdiv	ip, r2, r3
 801cf48:	9b00      	ldr	r3, [sp, #0]
 801cf4a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cf4e:	3b01      	subs	r3, #1
 801cf50:	9300      	str	r3, [sp, #0]
 801cf52:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801cf56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cf58:	eeb0 3a67 	vmov.f32	s6, s15
 801cf5c:	bf08      	it	eq
 801cf5e:	465b      	moveq	r3, fp
 801cf60:	eef0 2a47 	vmov.f32	s5, s14
 801cf64:	e797      	b.n	801ce96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801cf66:	454f      	cmp	r7, r9
 801cf68:	dabb      	bge.n	801cee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cf6a:	fb0c 2606 	mla	r6, ip, r6, r2
 801cf6e:	1436      	asrs	r6, r6, #16
 801cf70:	d4b7      	bmi.n	801cee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cf72:	4546      	cmp	r6, r8
 801cf74:	dab5      	bge.n	801cee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cf76:	461e      	mov	r6, r3
 801cf78:	46a0      	mov	r8, r4
 801cf7a:	2e00      	cmp	r6, #0
 801cf7c:	ddb8      	ble.n	801cef0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cf7e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801cf82:	9901      	ldr	r1, [sp, #4]
 801cf84:	1417      	asrs	r7, r2, #16
 801cf86:	ea4f 4920 	mov.w	r9, r0, asr #16
 801cf8a:	fb0a 1707 	mla	r7, sl, r7, r1
 801cf8e:	9902      	ldr	r1, [sp, #8]
 801cf90:	f817 7009 	ldrb.w	r7, [r7, r9]
 801cf94:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801cf98:	f828 7b02 	strh.w	r7, [r8], #2
 801cf9c:	4470      	add	r0, lr
 801cf9e:	4462      	add	r2, ip
 801cfa0:	3e01      	subs	r6, #1
 801cfa2:	e7ea      	b.n	801cf7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801cfa4:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cfa8:	d417      	bmi.n	801cfda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cfaa:	68ae      	ldr	r6, [r5, #8]
 801cfac:	454e      	cmp	r6, r9
 801cfae:	dd14      	ble.n	801cfda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cfb0:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801cfb4:	d411      	bmi.n	801cfda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cfb6:	68ef      	ldr	r7, [r5, #12]
 801cfb8:	4557      	cmp	r7, sl
 801cfba:	dd0e      	ble.n	801cfda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cfbc:	9f01      	ldr	r7, [sp, #4]
 801cfbe:	b236      	sxth	r6, r6
 801cfc0:	fb0a 7606 	mla	r6, sl, r6, r7
 801cfc4:	9f02      	ldr	r7, [sp, #8]
 801cfc6:	f816 6009 	ldrb.w	r6, [r6, r9]
 801cfca:	f06f 0101 	mvn.w	r1, #1
 801cfce:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801cfd2:	fb01 f608 	mul.w	r6, r1, r8
 801cfd6:	9903      	ldr	r1, [sp, #12]
 801cfd8:	538f      	strh	r7, [r1, r6]
 801cfda:	4470      	add	r0, lr
 801cfdc:	4462      	add	r2, ip
 801cfde:	f108 38ff 	add.w	r8, r8, #4294967295
 801cfe2:	e782      	b.n	801ceea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cfe4:	b005      	add	sp, #20
 801cfe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cfea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cfea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfee:	b087      	sub	sp, #28
 801cff0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cff2:	9205      	str	r2, [sp, #20]
 801cff4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cff8:	9203      	str	r2, [sp, #12]
 801cffa:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801cffe:	9102      	str	r1, [sp, #8]
 801d000:	6861      	ldr	r1, [r4, #4]
 801d002:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d006:	fb01 2000 	mla	r0, r1, r0, r2
 801d00a:	6822      	ldr	r2, [r4, #0]
 801d00c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801d010:	9200      	str	r2, [sp, #0]
 801d012:	f8dc 2000 	ldr.w	r2, [ip]
 801d016:	9204      	str	r2, [sp, #16]
 801d018:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801d01c:	3204      	adds	r2, #4
 801d01e:	9201      	str	r2, [sp, #4]
 801d020:	9a03      	ldr	r2, [sp, #12]
 801d022:	43d5      	mvns	r5, r2
 801d024:	b2ed      	uxtb	r5, r5
 801d026:	9a02      	ldr	r2, [sp, #8]
 801d028:	2a00      	cmp	r2, #0
 801d02a:	dc03      	bgt.n	801d034 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d02c:	9a05      	ldr	r2, [sp, #20]
 801d02e:	2a00      	cmp	r2, #0
 801d030:	f340 812c 	ble.w	801d28c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801d034:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d036:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801d03a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801d03e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d042:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d044:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d048:	2b00      	cmp	r3, #0
 801d04a:	dd10      	ble.n	801d06e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d04c:	140c      	asrs	r4, r1, #16
 801d04e:	d405      	bmi.n	801d05c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d050:	4574      	cmp	r4, lr
 801d052:	da03      	bge.n	801d05c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d054:	1414      	asrs	r4, r2, #16
 801d056:	d401      	bmi.n	801d05c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d058:	42bc      	cmp	r4, r7
 801d05a:	db09      	blt.n	801d070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d05c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d05e:	9800      	ldr	r0, [sp, #0]
 801d060:	4421      	add	r1, r4
 801d062:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d064:	3002      	adds	r0, #2
 801d066:	4422      	add	r2, r4
 801d068:	3b01      	subs	r3, #1
 801d06a:	9000      	str	r0, [sp, #0]
 801d06c:	e7ec      	b.n	801d048 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801d06e:	d071      	beq.n	801d154 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801d070:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d072:	1e5c      	subs	r4, r3, #1
 801d074:	fb06 1604 	mla	r6, r6, r4, r1
 801d078:	1436      	asrs	r6, r6, #16
 801d07a:	d45d      	bmi.n	801d138 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d07c:	4576      	cmp	r6, lr
 801d07e:	da5b      	bge.n	801d138 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d080:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801d082:	fb06 2404 	mla	r4, r6, r4, r2
 801d086:	1424      	asrs	r4, r4, #16
 801d088:	d456      	bmi.n	801d138 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d08a:	42bc      	cmp	r4, r7
 801d08c:	da54      	bge.n	801d138 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d08e:	f8dd 9000 	ldr.w	r9, [sp]
 801d092:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801d096:	4698      	mov	r8, r3
 801d098:	f1b8 0f00 	cmp.w	r8, #0
 801d09c:	dd54      	ble.n	801d148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801d09e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d0a2:	9804      	ldr	r0, [sp, #16]
 801d0a4:	1414      	asrs	r4, r2, #16
 801d0a6:	fb07 0404 	mla	r4, r7, r4, r0
 801d0aa:	140e      	asrs	r6, r1, #16
 801d0ac:	9801      	ldr	r0, [sp, #4]
 801d0ae:	f814 e006 	ldrb.w	lr, [r4, r6]
 801d0b2:	f8b9 4000 	ldrh.w	r4, [r9]
 801d0b6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d0ba:	eb00 0b0e 	add.w	fp, r0, lr
 801d0be:	1227      	asrs	r7, r4, #8
 801d0c0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801d0c4:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d0c8:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801d0cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d0ce:	fb16 f60a 	smulbb	r6, r6, sl
 801d0d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d0d6:	fb07 6705 	mla	r7, r7, r5, r6
 801d0da:	10e6      	asrs	r6, r4, #3
 801d0dc:	00e4      	lsls	r4, r4, #3
 801d0de:	b2e4      	uxtb	r4, r4
 801d0e0:	fb1b fb0a 	smulbb	fp, fp, sl
 801d0e4:	fb14 f405 	smulbb	r4, r4, r5
 801d0e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d0ec:	b2bf      	uxth	r7, r7
 801d0ee:	fb06 b605 	mla	r6, r6, r5, fp
 801d0f2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801d0f6:	b2b6      	uxth	r6, r6
 801d0f8:	fa1f fe8e 	uxth.w	lr, lr
 801d0fc:	1c7c      	adds	r4, r7, #1
 801d0fe:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801d102:	f106 0b01 	add.w	fp, r6, #1
 801d106:	f10e 0401 	add.w	r4, lr, #1
 801d10a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801d10e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801d112:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d116:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801d11a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801d11e:	4327      	orrs	r7, r4
 801d120:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d124:	4401      	add	r1, r0
 801d126:	9814      	ldr	r0, [sp, #80]	; 0x50
 801d128:	ea47 070b 	orr.w	r7, r7, fp
 801d12c:	f829 7b02 	strh.w	r7, [r9], #2
 801d130:	4402      	add	r2, r0
 801d132:	f108 38ff 	add.w	r8, r8, #4294967295
 801d136:	e7af      	b.n	801d098 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801d138:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801d13c:	f04f 0e00 	mov.w	lr, #0
 801d140:	eb03 040e 	add.w	r4, r3, lr
 801d144:	2c00      	cmp	r4, #0
 801d146:	dc43      	bgt.n	801d1d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801d148:	9a00      	ldr	r2, [sp, #0]
 801d14a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d14e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d152:	9300      	str	r3, [sp, #0]
 801d154:	9b02      	ldr	r3, [sp, #8]
 801d156:	2b00      	cmp	r3, #0
 801d158:	f340 8098 	ble.w	801d28c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801d15c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d160:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d164:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d168:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d16a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d16e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d172:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d176:	eef0 6a62 	vmov.f32	s13, s5
 801d17a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d17e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d182:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d186:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801d18a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d18e:	eef0 6a43 	vmov.f32	s13, s6
 801d192:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d196:	ee12 2a90 	vmov	r2, s5
 801d19a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d19e:	fb92 f3f3 	sdiv	r3, r2, r3
 801d1a2:	ee13 2a10 	vmov	r2, s6
 801d1a6:	9313      	str	r3, [sp, #76]	; 0x4c
 801d1a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d1aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801d1ae:	9314      	str	r3, [sp, #80]	; 0x50
 801d1b0:	9b02      	ldr	r3, [sp, #8]
 801d1b2:	9a05      	ldr	r2, [sp, #20]
 801d1b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d1b8:	3b01      	subs	r3, #1
 801d1ba:	9302      	str	r3, [sp, #8]
 801d1bc:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801d1c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d1c2:	eeb0 3a67 	vmov.f32	s6, s15
 801d1c6:	bf08      	it	eq
 801d1c8:	4613      	moveq	r3, r2
 801d1ca:	eef0 2a47 	vmov.f32	s5, s14
 801d1ce:	e72a      	b.n	801d026 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d1d0:	140f      	asrs	r7, r1, #16
 801d1d2:	d454      	bmi.n	801d27e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d1d4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801d1d8:	42be      	cmp	r6, r7
 801d1da:	dd50      	ble.n	801d27e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d1dc:	ea5f 4822 	movs.w	r8, r2, asr #16
 801d1e0:	d44d      	bmi.n	801d27e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d1e2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801d1e6:	4544      	cmp	r4, r8
 801d1e8:	dd49      	ble.n	801d27e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d1ea:	9c04      	ldr	r4, [sp, #16]
 801d1ec:	b236      	sxth	r6, r6
 801d1ee:	fb08 4606 	mla	r6, r8, r6, r4
 801d1f2:	f06f 0001 	mvn.w	r0, #1
 801d1f6:	f816 8007 	ldrb.w	r8, [r6, r7]
 801d1fa:	9c01      	ldr	r4, [sp, #4]
 801d1fc:	fb00 fa0e 	mul.w	sl, r0, lr
 801d200:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801d204:	9800      	ldr	r0, [sp, #0]
 801d206:	eb04 0b08 	add.w	fp, r4, r8
 801d20a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801d20e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801d212:	9801      	ldr	r0, [sp, #4]
 801d214:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d218:	f810 8008 	ldrb.w	r8, [r0, r8]
 801d21c:	9800      	ldr	r0, [sp, #0]
 801d21e:	1227      	asrs	r7, r4, #8
 801d220:	fb16 f609 	smulbb	r6, r6, r9
 801d224:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d228:	fb07 6705 	mla	r7, r7, r5, r6
 801d22c:	10e6      	asrs	r6, r4, #3
 801d22e:	00e4      	lsls	r4, r4, #3
 801d230:	b2e4      	uxtb	r4, r4
 801d232:	fb1b fb09 	smulbb	fp, fp, r9
 801d236:	fb14 f405 	smulbb	r4, r4, r5
 801d23a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d23e:	b2bf      	uxth	r7, r7
 801d240:	fb06 b605 	mla	r6, r6, r5, fp
 801d244:	fb08 4809 	mla	r8, r8, r9, r4
 801d248:	b2b6      	uxth	r6, r6
 801d24a:	fa1f f888 	uxth.w	r8, r8
 801d24e:	1c7c      	adds	r4, r7, #1
 801d250:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801d254:	f106 0b01 	add.w	fp, r6, #1
 801d258:	f108 0401 	add.w	r4, r8, #1
 801d25c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801d260:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801d264:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d268:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801d26c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801d270:	4327      	orrs	r7, r4
 801d272:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d276:	ea47 070b 	orr.w	r7, r7, fp
 801d27a:	f820 700a 	strh.w	r7, [r0, sl]
 801d27e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d280:	4401      	add	r1, r0
 801d282:	9814      	ldr	r0, [sp, #80]	; 0x50
 801d284:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d288:	4402      	add	r2, r0
 801d28a:	e759      	b.n	801d140 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801d28c:	b007      	add	sp, #28
 801d28e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801d294 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d298:	b085      	sub	sp, #20
 801d29a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d29e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d2a0:	9203      	str	r2, [sp, #12]
 801d2a2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d2a6:	6870      	ldr	r0, [r6, #4]
 801d2a8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d2aa:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801d2ae:	686f      	ldr	r7, [r5, #4]
 801d2b0:	9101      	str	r1, [sp, #4]
 801d2b2:	fb00 2404 	mla	r4, r0, r4, r2
 801d2b6:	6832      	ldr	r2, [r6, #0]
 801d2b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d2bc:	682a      	ldr	r2, [r5, #0]
 801d2be:	9202      	str	r2, [sp, #8]
 801d2c0:	3704      	adds	r7, #4
 801d2c2:	9a01      	ldr	r2, [sp, #4]
 801d2c4:	2a00      	cmp	r2, #0
 801d2c6:	dc03      	bgt.n	801d2d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d2c8:	9a03      	ldr	r2, [sp, #12]
 801d2ca:	2a00      	cmp	r2, #0
 801d2cc:	f340 80cc 	ble.w	801d468 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801d2d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d2d2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d2d6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801d2da:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d2de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d2e0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d2e4:	2b00      	cmp	r3, #0
 801d2e6:	dd0d      	ble.n	801d304 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d2e8:	1406      	asrs	r6, r0, #16
 801d2ea:	d405      	bmi.n	801d2f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d2ec:	454e      	cmp	r6, r9
 801d2ee:	da03      	bge.n	801d2f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d2f0:	1416      	asrs	r6, r2, #16
 801d2f2:	d401      	bmi.n	801d2f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d2f4:	4546      	cmp	r6, r8
 801d2f6:	db06      	blt.n	801d306 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d2f8:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801d2fa:	4460      	add	r0, ip
 801d2fc:	4432      	add	r2, r6
 801d2fe:	3b01      	subs	r3, #1
 801d300:	3402      	adds	r4, #2
 801d302:	e7ef      	b.n	801d2e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801d304:	d00f      	beq.n	801d326 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d306:	1e5e      	subs	r6, r3, #1
 801d308:	fb0c 0e06 	mla	lr, ip, r6, r0
 801d30c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801d310:	d543      	bpl.n	801d39a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801d312:	4698      	mov	r8, r3
 801d314:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801d318:	f1b8 0f00 	cmp.w	r8, #0
 801d31c:	dc71      	bgt.n	801d402 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801d31e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d322:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d326:	9b01      	ldr	r3, [sp, #4]
 801d328:	2b00      	cmp	r3, #0
 801d32a:	f340 809d 	ble.w	801d468 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801d32e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d332:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d336:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d33a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d33c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d340:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d344:	eeb0 6a62 	vmov.f32	s12, s5
 801d348:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d34c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d350:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d354:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d358:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d35c:	eeb0 6a43 	vmov.f32	s12, s6
 801d360:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d364:	ee12 2a90 	vmov	r2, s5
 801d368:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d36c:	fb92 fcf3 	sdiv	ip, r2, r3
 801d370:	ee13 2a10 	vmov	r2, s6
 801d374:	fb92 f3f3 	sdiv	r3, r2, r3
 801d378:	9312      	str	r3, [sp, #72]	; 0x48
 801d37a:	9b01      	ldr	r3, [sp, #4]
 801d37c:	9a03      	ldr	r2, [sp, #12]
 801d37e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d382:	3b01      	subs	r3, #1
 801d384:	9301      	str	r3, [sp, #4]
 801d386:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d38a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d38c:	eeb0 3a67 	vmov.f32	s6, s15
 801d390:	bf08      	it	eq
 801d392:	4613      	moveq	r3, r2
 801d394:	eef0 2a47 	vmov.f32	s5, s14
 801d398:	e793      	b.n	801d2c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d39a:	45ce      	cmp	lr, r9
 801d39c:	dab9      	bge.n	801d312 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d39e:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d3a0:	fb01 2606 	mla	r6, r1, r6, r2
 801d3a4:	1436      	asrs	r6, r6, #16
 801d3a6:	d4b4      	bmi.n	801d312 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d3a8:	4546      	cmp	r6, r8
 801d3aa:	dab2      	bge.n	801d312 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d3ac:	4698      	mov	r8, r3
 801d3ae:	46a2      	mov	sl, r4
 801d3b0:	f1b8 0f00 	cmp.w	r8, #0
 801d3b4:	ddb3      	ble.n	801d31e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801d3b6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d3ba:	9902      	ldr	r1, [sp, #8]
 801d3bc:	1416      	asrs	r6, r2, #16
 801d3be:	fb09 1606 	mla	r6, r9, r6, r1
 801d3c2:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801d3c6:	492a      	ldr	r1, [pc, #168]	; (801d470 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801d3c8:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801d3cc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d3d0:	eb07 0b0e 	add.w	fp, r7, lr
 801d3d4:	4460      	add	r0, ip
 801d3d6:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801d3da:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801d3de:	00f6      	lsls	r6, r6, #3
 801d3e0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801d3e4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d3e8:	ea49 0606 	orr.w	r6, r9, r6
 801d3ec:	f817 900e 	ldrb.w	r9, [r7, lr]
 801d3f0:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d3f2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801d3f6:	f82a 6b02 	strh.w	r6, [sl], #2
 801d3fa:	440a      	add	r2, r1
 801d3fc:	f108 38ff 	add.w	r8, r8, #4294967295
 801d400:	e7d6      	b.n	801d3b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d402:	ea5f 4920 	movs.w	r9, r0, asr #16
 801d406:	d429      	bmi.n	801d45c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d408:	68ae      	ldr	r6, [r5, #8]
 801d40a:	454e      	cmp	r6, r9
 801d40c:	dd26      	ble.n	801d45c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d40e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801d412:	d423      	bmi.n	801d45c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d414:	68e9      	ldr	r1, [r5, #12]
 801d416:	4559      	cmp	r1, fp
 801d418:	dd20      	ble.n	801d45c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d41a:	9902      	ldr	r1, [sp, #8]
 801d41c:	fa0f fe86 	sxth.w	lr, r6
 801d420:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801d424:	f06f 0101 	mvn.w	r1, #1
 801d428:	f81e e009 	ldrb.w	lr, [lr, r9]
 801d42c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d430:	eb07 060e 	add.w	r6, r7, lr
 801d434:	fb01 f908 	mul.w	r9, r1, r8
 801d438:	f896 b002 	ldrb.w	fp, [r6, #2]
 801d43c:	7876      	ldrb	r6, [r6, #1]
 801d43e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801d442:	00f6      	lsls	r6, r6, #3
 801d444:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801d448:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d44c:	ea4b 0606 	orr.w	r6, fp, r6
 801d450:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801d454:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801d458:	f82a 6009 	strh.w	r6, [sl, r9]
 801d45c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d45e:	4460      	add	r0, ip
 801d460:	440a      	add	r2, r1
 801d462:	f108 38ff 	add.w	r8, r8, #4294967295
 801d466:	e757      	b.n	801d318 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d468:	b005      	add	sp, #20
 801d46a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d46e:	bf00      	nop
 801d470:	fffff800 	.word	0xfffff800

0801d474 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d474:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d478:	b087      	sub	sp, #28
 801d47a:	468b      	mov	fp, r1
 801d47c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d47e:	9204      	str	r2, [sp, #16]
 801d480:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d484:	9205      	str	r2, [sp, #20]
 801d486:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801d48a:	6841      	ldr	r1, [r0, #4]
 801d48c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d490:	fb01 2404 	mla	r4, r1, r4, r2
 801d494:	6802      	ldr	r2, [r0, #0]
 801d496:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d49a:	f8dc 2000 	ldr.w	r2, [ip]
 801d49e:	9201      	str	r2, [sp, #4]
 801d4a0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801d4a4:	3204      	adds	r2, #4
 801d4a6:	9202      	str	r2, [sp, #8]
 801d4a8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d4ac:	f1bb 0f00 	cmp.w	fp, #0
 801d4b0:	dc03      	bgt.n	801d4ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801d4b2:	9a04      	ldr	r2, [sp, #16]
 801d4b4:	2a00      	cmp	r2, #0
 801d4b6:	f340 8138 	ble.w	801d72a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d4ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d4bc:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d4c0:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801d4c4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d4c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d4ca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d4ce:	2b00      	cmp	r3, #0
 801d4d0:	dd0e      	ble.n	801d4f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d4d2:	1402      	asrs	r2, r0, #16
 801d4d4:	d405      	bmi.n	801d4e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d4d6:	42ba      	cmp	r2, r7
 801d4d8:	da03      	bge.n	801d4e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d4da:	140a      	asrs	r2, r1, #16
 801d4dc:	d401      	bmi.n	801d4e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d4de:	42b2      	cmp	r2, r6
 801d4e0:	db07      	blt.n	801d4f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d4e2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d4e4:	4410      	add	r0, r2
 801d4e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d4e8:	3b01      	subs	r3, #1
 801d4ea:	4411      	add	r1, r2
 801d4ec:	3402      	adds	r4, #2
 801d4ee:	e7ee      	b.n	801d4ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d4f0:	d019      	beq.n	801d526 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d4f2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d4f4:	1e5a      	subs	r2, r3, #1
 801d4f6:	fb05 0502 	mla	r5, r5, r2, r0
 801d4fa:	142d      	asrs	r5, r5, #16
 801d4fc:	d409      	bmi.n	801d512 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d4fe:	42bd      	cmp	r5, r7
 801d500:	da07      	bge.n	801d512 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d502:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d504:	fb05 1202 	mla	r2, r5, r2, r1
 801d508:	1412      	asrs	r2, r2, #16
 801d50a:	d402      	bmi.n	801d512 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d50c:	42b2      	cmp	r2, r6
 801d50e:	f2c0 80ac 	blt.w	801d66a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801d512:	f04f 0e00 	mov.w	lr, #0
 801d516:	eb03 020e 	add.w	r2, r3, lr
 801d51a:	2a00      	cmp	r2, #0
 801d51c:	dc3e      	bgt.n	801d59c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d51e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d522:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d526:	f1bb 0f00 	cmp.w	fp, #0
 801d52a:	f340 80fe 	ble.w	801d72a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d52e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d532:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d536:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d53a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d53c:	f1bb 0b01 	subs.w	fp, fp, #1
 801d540:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d544:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d548:	eeb0 6a62 	vmov.f32	s12, s5
 801d54c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d550:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d554:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d558:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d55c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d560:	eeb0 6a43 	vmov.f32	s12, s6
 801d564:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d568:	ee12 2a90 	vmov	r2, s5
 801d56c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d570:	fb92 f3f3 	sdiv	r3, r2, r3
 801d574:	ee13 2a10 	vmov	r2, s6
 801d578:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d57c:	9313      	str	r3, [sp, #76]	; 0x4c
 801d57e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d580:	fb92 f3f3 	sdiv	r3, r2, r3
 801d584:	9a04      	ldr	r2, [sp, #16]
 801d586:	9314      	str	r3, [sp, #80]	; 0x50
 801d588:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d58c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d58e:	eeb0 3a67 	vmov.f32	s6, s15
 801d592:	bf08      	it	eq
 801d594:	4613      	moveq	r3, r2
 801d596:	eef0 2a47 	vmov.f32	s5, s14
 801d59a:	e787      	b.n	801d4ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d59c:	1406      	asrs	r6, r0, #16
 801d59e:	d45d      	bmi.n	801d65c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d5a0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801d5a4:	42b5      	cmp	r5, r6
 801d5a6:	dd59      	ble.n	801d65c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d5a8:	140f      	asrs	r7, r1, #16
 801d5aa:	d457      	bmi.n	801d65c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d5ac:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801d5b0:	42ba      	cmp	r2, r7
 801d5b2:	dd53      	ble.n	801d65c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d5b4:	9a01      	ldr	r2, [sp, #4]
 801d5b6:	b22d      	sxth	r5, r5
 801d5b8:	fb07 2505 	mla	r5, r7, r5, r2
 801d5bc:	5daa      	ldrb	r2, [r5, r6]
 801d5be:	9d02      	ldr	r5, [sp, #8]
 801d5c0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d5c4:	0e2e      	lsrs	r6, r5, #24
 801d5c6:	d049      	beq.n	801d65c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d5c8:	f06f 0201 	mvn.w	r2, #1
 801d5cc:	fb02 f20e 	mul.w	r2, r2, lr
 801d5d0:	9203      	str	r2, [sp, #12]
 801d5d2:	f834 8002 	ldrh.w	r8, [r4, r2]
 801d5d6:	9a05      	ldr	r2, [sp, #20]
 801d5d8:	4356      	muls	r6, r2
 801d5da:	1c72      	adds	r2, r6, #1
 801d5dc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d5e0:	1212      	asrs	r2, r2, #8
 801d5e2:	fa1f f982 	uxth.w	r9, r2
 801d5e6:	ea4f 2728 	mov.w	r7, r8, asr #8
 801d5ea:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d5ee:	43d2      	mvns	r2, r2
 801d5f0:	b2d2      	uxtb	r2, r2
 801d5f2:	fb16 f609 	smulbb	r6, r6, r9
 801d5f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d5fa:	fb07 6702 	mla	r7, r7, r2, r6
 801d5fe:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d602:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d606:	b2ed      	uxtb	r5, r5
 801d608:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d60c:	fa5f f888 	uxtb.w	r8, r8
 801d610:	fb15 f509 	smulbb	r5, r5, r9
 801d614:	fb08 5502 	mla	r5, r8, r2, r5
 801d618:	b2bf      	uxth	r7, r7
 801d61a:	fb1a fa09 	smulbb	sl, sl, r9
 801d61e:	b2ad      	uxth	r5, r5
 801d620:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d624:	fb06 a602 	mla	r6, r6, r2, sl
 801d628:	1c7a      	adds	r2, r7, #1
 801d62a:	f105 0a01 	add.w	sl, r5, #1
 801d62e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d632:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d636:	b2b6      	uxth	r6, r6
 801d638:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d63c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d640:	ea4a 0707 	orr.w	r7, sl, r7
 801d644:	f106 0a01 	add.w	sl, r6, #1
 801d648:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d64c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d650:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d654:	9a03      	ldr	r2, [sp, #12]
 801d656:	ea47 070a 	orr.w	r7, r7, sl
 801d65a:	52a7      	strh	r7, [r4, r2]
 801d65c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d65e:	4410      	add	r0, r2
 801d660:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d662:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d666:	4411      	add	r1, r2
 801d668:	e755      	b.n	801d516 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d66a:	f04f 0800 	mov.w	r8, #0
 801d66e:	eba3 0208 	sub.w	r2, r3, r8
 801d672:	2a00      	cmp	r2, #0
 801d674:	f77f af53 	ble.w	801d51e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d678:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d67c:	9f01      	ldr	r7, [sp, #4]
 801d67e:	140a      	asrs	r2, r1, #16
 801d680:	1405      	asrs	r5, r0, #16
 801d682:	fb06 7202 	mla	r2, r6, r2, r7
 801d686:	5d52      	ldrb	r2, [r2, r5]
 801d688:	9d02      	ldr	r5, [sp, #8]
 801d68a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d68e:	0e2e      	lsrs	r6, r5, #24
 801d690:	d044      	beq.n	801d71c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d692:	9a05      	ldr	r2, [sp, #20]
 801d694:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d698:	4356      	muls	r6, r2
 801d69a:	1c72      	adds	r2, r6, #1
 801d69c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d6a0:	1212      	asrs	r2, r2, #8
 801d6a2:	fa1f f982 	uxth.w	r9, r2
 801d6a6:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d6aa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d6ae:	43d2      	mvns	r2, r2
 801d6b0:	b2d2      	uxtb	r2, r2
 801d6b2:	fb16 f609 	smulbb	r6, r6, r9
 801d6b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d6ba:	fb07 6702 	mla	r7, r7, r2, r6
 801d6be:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d6c2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d6c6:	b2ed      	uxtb	r5, r5
 801d6c8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d6cc:	fa5f fe8e 	uxtb.w	lr, lr
 801d6d0:	fb15 f509 	smulbb	r5, r5, r9
 801d6d4:	fb0e 5502 	mla	r5, lr, r2, r5
 801d6d8:	b2bf      	uxth	r7, r7
 801d6da:	fb1a fa09 	smulbb	sl, sl, r9
 801d6de:	b2ad      	uxth	r5, r5
 801d6e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d6e4:	fb06 a602 	mla	r6, r6, r2, sl
 801d6e8:	1c7a      	adds	r2, r7, #1
 801d6ea:	f105 0a01 	add.w	sl, r5, #1
 801d6ee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d6f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d6f6:	b2b6      	uxth	r6, r6
 801d6f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d6fc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d700:	ea4a 0707 	orr.w	r7, sl, r7
 801d704:	f106 0a01 	add.w	sl, r6, #1
 801d708:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d70c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d710:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d714:	ea47 070a 	orr.w	r7, r7, sl
 801d718:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d71c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d71e:	4410      	add	r0, r2
 801d720:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d722:	f108 0801 	add.w	r8, r8, #1
 801d726:	4411      	add	r1, r2
 801d728:	e7a1      	b.n	801d66e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d72a:	b007      	add	sp, #28
 801d72c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d730 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d734:	b085      	sub	sp, #20
 801d736:	468b      	mov	fp, r1
 801d738:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d73a:	9203      	str	r2, [sp, #12]
 801d73c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d740:	6841      	ldr	r1, [r0, #4]
 801d742:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d746:	fb01 2404 	mla	r4, r1, r4, r2
 801d74a:	6802      	ldr	r2, [r0, #0]
 801d74c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d750:	f8de 2000 	ldr.w	r2, [lr]
 801d754:	9200      	str	r2, [sp, #0]
 801d756:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d75a:	3204      	adds	r2, #4
 801d75c:	9201      	str	r2, [sp, #4]
 801d75e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d762:	f1bb 0f00 	cmp.w	fp, #0
 801d766:	dc03      	bgt.n	801d770 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d768:	9a03      	ldr	r2, [sp, #12]
 801d76a:	2a00      	cmp	r2, #0
 801d76c:	f340 8153 	ble.w	801da16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d770:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d772:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d776:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d77a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d77e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d780:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d784:	2b00      	cmp	r3, #0
 801d786:	dd0e      	ble.n	801d7a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d788:	1408      	asrs	r0, r1, #16
 801d78a:	d405      	bmi.n	801d798 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d78c:	42b8      	cmp	r0, r7
 801d78e:	da03      	bge.n	801d798 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d790:	1410      	asrs	r0, r2, #16
 801d792:	d401      	bmi.n	801d798 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d794:	42b0      	cmp	r0, r6
 801d796:	db07      	blt.n	801d7a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d798:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d79a:	4401      	add	r1, r0
 801d79c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d79e:	3b01      	subs	r3, #1
 801d7a0:	4402      	add	r2, r0
 801d7a2:	3402      	adds	r4, #2
 801d7a4:	e7ee      	b.n	801d784 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d7a6:	d017      	beq.n	801d7d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d7a8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d7aa:	1e58      	subs	r0, r3, #1
 801d7ac:	fb05 1500 	mla	r5, r5, r0, r1
 801d7b0:	142d      	asrs	r5, r5, #16
 801d7b2:	d409      	bmi.n	801d7c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d7b4:	42bd      	cmp	r5, r7
 801d7b6:	da07      	bge.n	801d7c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d7b8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d7ba:	fb05 2000 	mla	r0, r5, r0, r2
 801d7be:	1400      	asrs	r0, r0, #16
 801d7c0:	d402      	bmi.n	801d7c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d7c2:	42b0      	cmp	r0, r6
 801d7c4:	f2c0 80bc 	blt.w	801d940 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d7c8:	2600      	movs	r6, #0
 801d7ca:	1998      	adds	r0, r3, r6
 801d7cc:	2800      	cmp	r0, #0
 801d7ce:	dc3e      	bgt.n	801d84e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d7d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d7d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d7d8:	f1bb 0f00 	cmp.w	fp, #0
 801d7dc:	f340 811b 	ble.w	801da16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d7e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d7e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d7e8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d7ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d7ee:	f1bb 0b01 	subs.w	fp, fp, #1
 801d7f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d7f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d7fa:	eeb0 6a62 	vmov.f32	s12, s5
 801d7fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d802:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d806:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d80a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d80e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d812:	eeb0 6a43 	vmov.f32	s12, s6
 801d816:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d81a:	ee12 2a90 	vmov	r2, s5
 801d81e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d822:	fb92 f3f3 	sdiv	r3, r2, r3
 801d826:	ee13 2a10 	vmov	r2, s6
 801d82a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d82e:	9311      	str	r3, [sp, #68]	; 0x44
 801d830:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d832:	fb92 f3f3 	sdiv	r3, r2, r3
 801d836:	9a03      	ldr	r2, [sp, #12]
 801d838:	9312      	str	r3, [sp, #72]	; 0x48
 801d83a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d83e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d840:	eeb0 3a67 	vmov.f32	s6, s15
 801d844:	bf08      	it	eq
 801d846:	4613      	moveq	r3, r2
 801d848:	eef0 2a47 	vmov.f32	s5, s14
 801d84c:	e789      	b.n	801d762 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d84e:	140f      	asrs	r7, r1, #16
 801d850:	d426      	bmi.n	801d8a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d852:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d856:	42bd      	cmp	r5, r7
 801d858:	dd22      	ble.n	801d8a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d85a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d85e:	d41f      	bmi.n	801d8a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d860:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d864:	4560      	cmp	r0, ip
 801d866:	dd1b      	ble.n	801d8a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d868:	9800      	ldr	r0, [sp, #0]
 801d86a:	b22d      	sxth	r5, r5
 801d86c:	fb0c 0505 	mla	r5, ip, r5, r0
 801d870:	5de8      	ldrb	r0, [r5, r7]
 801d872:	9d01      	ldr	r5, [sp, #4]
 801d874:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801d878:	0e07      	lsrs	r7, r0, #24
 801d87a:	2fff      	cmp	r7, #255	; 0xff
 801d87c:	d116      	bne.n	801d8ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d87e:	f06f 0501 	mvn.w	r5, #1
 801d882:	fb05 f706 	mul.w	r7, r5, r6
 801d886:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d88a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d88e:	0945      	lsrs	r5, r0, #5
 801d890:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d894:	ea4c 0505 	orr.w	r5, ip, r5
 801d898:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d89c:	4305      	orrs	r5, r0
 801d89e:	53e5      	strh	r5, [r4, r7]
 801d8a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d8a2:	4401      	add	r1, r0
 801d8a4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d8a6:	3e01      	subs	r6, #1
 801d8a8:	4402      	add	r2, r0
 801d8aa:	e78e      	b.n	801d7ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d8ac:	b2fd      	uxtb	r5, r7
 801d8ae:	2f00      	cmp	r7, #0
 801d8b0:	d0f6      	beq.n	801d8a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d8b2:	f06f 0701 	mvn.w	r7, #1
 801d8b6:	4377      	muls	r7, r6
 801d8b8:	fa1f f985 	uxth.w	r9, r5
 801d8bc:	f834 8007 	ldrh.w	r8, [r4, r7]
 801d8c0:	9702      	str	r7, [sp, #8]
 801d8c2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d8c6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d8ca:	43ed      	mvns	r5, r5
 801d8cc:	b2ed      	uxtb	r5, r5
 801d8ce:	fb17 f709 	smulbb	r7, r7, r9
 801d8d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d8d6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d8da:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d8de:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801d8e2:	b2c0      	uxtb	r0, r0
 801d8e4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d8e8:	fa5f f888 	uxtb.w	r8, r8
 801d8ec:	fb10 f009 	smulbb	r0, r0, r9
 801d8f0:	fb08 0005 	mla	r0, r8, r5, r0
 801d8f4:	b280      	uxth	r0, r0
 801d8f6:	fa1f fc8c 	uxth.w	ip, ip
 801d8fa:	fb1a fa09 	smulbb	sl, sl, r9
 801d8fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d902:	fb07 a705 	mla	r7, r7, r5, sl
 801d906:	f100 0a01 	add.w	sl, r0, #1
 801d90a:	f10c 0501 	add.w	r5, ip, #1
 801d90e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d912:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d916:	b2bf      	uxth	r7, r7
 801d918:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d91c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d920:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d924:	f107 0a01 	add.w	sl, r7, #1
 801d928:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d92c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d930:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d934:	9802      	ldr	r0, [sp, #8]
 801d936:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d93a:	f824 c000 	strh.w	ip, [r4, r0]
 801d93e:	e7af      	b.n	801d8a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d940:	f04f 0800 	mov.w	r8, #0
 801d944:	eba3 0008 	sub.w	r0, r3, r8
 801d948:	2800      	cmp	r0, #0
 801d94a:	f77f af41 	ble.w	801d7d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d94e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d952:	9f00      	ldr	r7, [sp, #0]
 801d954:	1410      	asrs	r0, r2, #16
 801d956:	140d      	asrs	r5, r1, #16
 801d958:	fb06 7000 	mla	r0, r6, r0, r7
 801d95c:	5d40      	ldrb	r0, [r0, r5]
 801d95e:	9d01      	ldr	r5, [sp, #4]
 801d960:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d964:	0e2e      	lsrs	r6, r5, #24
 801d966:	2eff      	cmp	r6, #255	; 0xff
 801d968:	d112      	bne.n	801d990 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801d96a:	482c      	ldr	r0, [pc, #176]	; (801da1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801d96c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d970:	0968      	lsrs	r0, r5, #5
 801d972:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d976:	4330      	orrs	r0, r6
 801d978:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d97c:	4328      	orrs	r0, r5
 801d97e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801d982:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d984:	4401      	add	r1, r0
 801d986:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d988:	f108 0801 	add.w	r8, r8, #1
 801d98c:	4402      	add	r2, r0
 801d98e:	e7d9      	b.n	801d944 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d990:	b2f0      	uxtb	r0, r6
 801d992:	2e00      	cmp	r6, #0
 801d994:	d0f5      	beq.n	801d982 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d996:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801d99a:	fa1f f980 	uxth.w	r9, r0
 801d99e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d9a2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d9a6:	43c0      	mvns	r0, r0
 801d9a8:	b2c0      	uxtb	r0, r0
 801d9aa:	fb16 f609 	smulbb	r6, r6, r9
 801d9ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d9b2:	fb07 6700 	mla	r7, r7, r0, r6
 801d9b6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d9ba:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d9be:	b2ed      	uxtb	r5, r5
 801d9c0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d9c4:	fa5f fc8c 	uxtb.w	ip, ip
 801d9c8:	fb15 f509 	smulbb	r5, r5, r9
 801d9cc:	fb0c 5500 	mla	r5, ip, r0, r5
 801d9d0:	b2bf      	uxth	r7, r7
 801d9d2:	fb1a fa09 	smulbb	sl, sl, r9
 801d9d6:	b2ad      	uxth	r5, r5
 801d9d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d9dc:	fb06 a600 	mla	r6, r6, r0, sl
 801d9e0:	1c78      	adds	r0, r7, #1
 801d9e2:	f105 0a01 	add.w	sl, r5, #1
 801d9e6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d9ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d9ee:	b2b6      	uxth	r6, r6
 801d9f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d9f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d9f8:	ea4a 0707 	orr.w	r7, sl, r7
 801d9fc:	f106 0a01 	add.w	sl, r6, #1
 801da00:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801da04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801da08:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801da0c:	ea47 070a 	orr.w	r7, r7, sl
 801da10:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801da14:	e7b5      	b.n	801d982 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801da16:	b005      	add	sp, #20
 801da18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da1c:	fffff800 	.word	0xfffff800

0801da20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801da20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da24:	b087      	sub	sp, #28
 801da26:	468b      	mov	fp, r1
 801da28:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801da2a:	9204      	str	r2, [sp, #16]
 801da2c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801da30:	9205      	str	r2, [sp, #20]
 801da32:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801da36:	6861      	ldr	r1, [r4, #4]
 801da38:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801da3c:	fb01 2000 	mla	r0, r1, r0, r2
 801da40:	6822      	ldr	r2, [r4, #0]
 801da42:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801da46:	f8de 2000 	ldr.w	r2, [lr]
 801da4a:	9201      	str	r2, [sp, #4]
 801da4c:	f8de 2004 	ldr.w	r2, [lr, #4]
 801da50:	9202      	str	r2, [sp, #8]
 801da52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801da56:	f1bb 0f00 	cmp.w	fp, #0
 801da5a:	dc03      	bgt.n	801da64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801da5c:	9a04      	ldr	r2, [sp, #16]
 801da5e:	2a00      	cmp	r2, #0
 801da60:	f340 8142 	ble.w	801dce8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801da64:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801da66:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801da6a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801da6e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801da72:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801da74:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801da78:	2b00      	cmp	r3, #0
 801da7a:	dd0e      	ble.n	801da9a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801da7c:	140c      	asrs	r4, r1, #16
 801da7e:	d405      	bmi.n	801da8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801da80:	42bc      	cmp	r4, r7
 801da82:	da03      	bge.n	801da8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801da84:	1414      	asrs	r4, r2, #16
 801da86:	d401      	bmi.n	801da8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801da88:	42b4      	cmp	r4, r6
 801da8a:	db07      	blt.n	801da9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801da8c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801da8e:	4421      	add	r1, r4
 801da90:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801da92:	3b01      	subs	r3, #1
 801da94:	4422      	add	r2, r4
 801da96:	3002      	adds	r0, #2
 801da98:	e7ee      	b.n	801da78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801da9a:	d019      	beq.n	801dad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801da9c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801da9e:	1e5c      	subs	r4, r3, #1
 801daa0:	fb05 1504 	mla	r5, r5, r4, r1
 801daa4:	142d      	asrs	r5, r5, #16
 801daa6:	d409      	bmi.n	801dabc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801daa8:	42bd      	cmp	r5, r7
 801daaa:	da07      	bge.n	801dabc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801daac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801daae:	fb05 2404 	mla	r4, r5, r4, r2
 801dab2:	1424      	asrs	r4, r4, #16
 801dab4:	d402      	bmi.n	801dabc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801dab6:	42b4      	cmp	r4, r6
 801dab8:	f2c0 80b1 	blt.w	801dc1e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801dabc:	f04f 0800 	mov.w	r8, #0
 801dac0:	eb03 0408 	add.w	r4, r3, r8
 801dac4:	2c00      	cmp	r4, #0
 801dac6:	dc3e      	bgt.n	801db46 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801dac8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dacc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dad0:	f1bb 0f00 	cmp.w	fp, #0
 801dad4:	f340 8108 	ble.w	801dce8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801dad8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dadc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dae0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dae4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dae6:	f1bb 0b01 	subs.w	fp, fp, #1
 801daea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801daee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801daf2:	eeb0 6a62 	vmov.f32	s12, s5
 801daf6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dafa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dafe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801db02:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801db06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801db0a:	eeb0 6a43 	vmov.f32	s12, s6
 801db0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801db12:	ee12 2a90 	vmov	r2, s5
 801db16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801db1a:	fb92 f3f3 	sdiv	r3, r2, r3
 801db1e:	ee13 2a10 	vmov	r2, s6
 801db22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801db26:	9313      	str	r3, [sp, #76]	; 0x4c
 801db28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801db2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801db2e:	9a04      	ldr	r2, [sp, #16]
 801db30:	9314      	str	r3, [sp, #80]	; 0x50
 801db32:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801db36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801db38:	eeb0 3a67 	vmov.f32	s6, s15
 801db3c:	bf08      	it	eq
 801db3e:	4613      	moveq	r3, r2
 801db40:	eef0 2a47 	vmov.f32	s5, s14
 801db44:	e787      	b.n	801da56 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801db46:	140e      	asrs	r6, r1, #16
 801db48:	d462      	bmi.n	801dc10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801db4a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801db4e:	42b5      	cmp	r5, r6
 801db50:	dd5e      	ble.n	801dc10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801db52:	1417      	asrs	r7, r2, #16
 801db54:	d45c      	bmi.n	801dc10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801db56:	f8de 400c 	ldr.w	r4, [lr, #12]
 801db5a:	42bc      	cmp	r4, r7
 801db5c:	dd58      	ble.n	801dc10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801db5e:	b22d      	sxth	r5, r5
 801db60:	fb07 6505 	mla	r5, r7, r5, r6
 801db64:	9c02      	ldr	r4, [sp, #8]
 801db66:	5d66      	ldrb	r6, [r4, r5]
 801db68:	2e00      	cmp	r6, #0
 801db6a:	d051      	beq.n	801dc10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801db6c:	9c01      	ldr	r4, [sp, #4]
 801db6e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801db72:	f06f 0401 	mvn.w	r4, #1
 801db76:	fb04 f408 	mul.w	r4, r4, r8
 801db7a:	9403      	str	r4, [sp, #12]
 801db7c:	5b05      	ldrh	r5, [r0, r4]
 801db7e:	9c05      	ldr	r4, [sp, #20]
 801db80:	4366      	muls	r6, r4
 801db82:	1c74      	adds	r4, r6, #1
 801db84:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801db88:	1224      	asrs	r4, r4, #8
 801db8a:	b2a7      	uxth	r7, r4
 801db8c:	122e      	asrs	r6, r5, #8
 801db8e:	43e4      	mvns	r4, r4
 801db90:	b2e4      	uxtb	r4, r4
 801db92:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801db96:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801db9a:	fb16 f604 	smulbb	r6, r6, r4
 801db9e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801dba2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dba6:	00ed      	lsls	r5, r5, #3
 801dba8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801dbac:	b2ed      	uxtb	r5, r5
 801dbae:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801dbb2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801dbb6:	fb15 f504 	smulbb	r5, r5, r4
 801dbba:	fa5f f989 	uxtb.w	r9, r9
 801dbbe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801dbc2:	fb09 5507 	mla	r5, r9, r7, r5
 801dbc6:	fb1a fa04 	smulbb	sl, sl, r4
 801dbca:	fa1f fc8c 	uxth.w	ip, ip
 801dbce:	b2ad      	uxth	r5, r5
 801dbd0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dbd4:	fb06 a607 	mla	r6, r6, r7, sl
 801dbd8:	f10c 0401 	add.w	r4, ip, #1
 801dbdc:	f105 0a01 	add.w	sl, r5, #1
 801dbe0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dbe4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dbe8:	b2b6      	uxth	r6, r6
 801dbea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dbee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dbf2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dbf6:	f106 0a01 	add.w	sl, r6, #1
 801dbfa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dbfe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dc02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dc06:	9c03      	ldr	r4, [sp, #12]
 801dc08:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dc0c:	f820 c004 	strh.w	ip, [r0, r4]
 801dc10:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801dc12:	4421      	add	r1, r4
 801dc14:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dc16:	f108 38ff 	add.w	r8, r8, #4294967295
 801dc1a:	4422      	add	r2, r4
 801dc1c:	e750      	b.n	801dac0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801dc1e:	f04f 0900 	mov.w	r9, #0
 801dc22:	eba3 0409 	sub.w	r4, r3, r9
 801dc26:	2c00      	cmp	r4, #0
 801dc28:	f77f af4e 	ble.w	801dac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801dc2c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801dc30:	140d      	asrs	r5, r1, #16
 801dc32:	1414      	asrs	r4, r2, #16
 801dc34:	fb06 5404 	mla	r4, r6, r4, r5
 801dc38:	9d02      	ldr	r5, [sp, #8]
 801dc3a:	5d2e      	ldrb	r6, [r5, r4]
 801dc3c:	2e00      	cmp	r6, #0
 801dc3e:	d04c      	beq.n	801dcda <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801dc40:	9d01      	ldr	r5, [sp, #4]
 801dc42:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801dc46:	9c05      	ldr	r4, [sp, #20]
 801dc48:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801dc4c:	4366      	muls	r6, r4
 801dc4e:	1c74      	adds	r4, r6, #1
 801dc50:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801dc54:	1224      	asrs	r4, r4, #8
 801dc56:	b2a7      	uxth	r7, r4
 801dc58:	122e      	asrs	r6, r5, #8
 801dc5a:	43e4      	mvns	r4, r4
 801dc5c:	b2e4      	uxtb	r4, r4
 801dc5e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801dc62:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dc66:	fb16 f604 	smulbb	r6, r6, r4
 801dc6a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801dc6e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dc72:	00ed      	lsls	r5, r5, #3
 801dc74:	fb0c 6c07 	mla	ip, ip, r7, r6
 801dc78:	b2ed      	uxtb	r5, r5
 801dc7a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801dc7e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801dc82:	fb15 f504 	smulbb	r5, r5, r4
 801dc86:	fa5f f888 	uxtb.w	r8, r8
 801dc8a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801dc8e:	fb08 5507 	mla	r5, r8, r7, r5
 801dc92:	fb1a fa04 	smulbb	sl, sl, r4
 801dc96:	fa1f fc8c 	uxth.w	ip, ip
 801dc9a:	b2ad      	uxth	r5, r5
 801dc9c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dca0:	fb06 a607 	mla	r6, r6, r7, sl
 801dca4:	f10c 0401 	add.w	r4, ip, #1
 801dca8:	f105 0a01 	add.w	sl, r5, #1
 801dcac:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dcb0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dcb4:	b2b6      	uxth	r6, r6
 801dcb6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dcba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dcbe:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dcc2:	f106 0a01 	add.w	sl, r6, #1
 801dcc6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dcca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dcce:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dcd2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dcd6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801dcda:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801dcdc:	4421      	add	r1, r4
 801dcde:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dce0:	f109 0901 	add.w	r9, r9, #1
 801dce4:	4422      	add	r2, r4
 801dce6:	e79c      	b.n	801dc22 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801dce8:	b007      	add	sp, #28
 801dcea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dcee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dcee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dcf2:	b085      	sub	sp, #20
 801dcf4:	468b      	mov	fp, r1
 801dcf6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801dcf8:	9203      	str	r2, [sp, #12]
 801dcfa:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801dcfe:	6861      	ldr	r1, [r4, #4]
 801dd00:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801dd04:	fb01 2000 	mla	r0, r1, r0, r2
 801dd08:	6822      	ldr	r2, [r4, #0]
 801dd0a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801dd0e:	f8d8 2000 	ldr.w	r2, [r8]
 801dd12:	9200      	str	r2, [sp, #0]
 801dd14:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801dd18:	9201      	str	r2, [sp, #4]
 801dd1a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dd1e:	f1bb 0f00 	cmp.w	fp, #0
 801dd22:	dc03      	bgt.n	801dd2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801dd24:	9a03      	ldr	r2, [sp, #12]
 801dd26:	2a00      	cmp	r2, #0
 801dd28:	f340 8146 	ble.w	801dfb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801dd2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dd2e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801dd32:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801dd36:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801dd3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dd3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801dd40:	2b00      	cmp	r3, #0
 801dd42:	dd0e      	ble.n	801dd62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801dd44:	140c      	asrs	r4, r1, #16
 801dd46:	d405      	bmi.n	801dd54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dd48:	42bc      	cmp	r4, r7
 801dd4a:	da03      	bge.n	801dd54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dd4c:	1414      	asrs	r4, r2, #16
 801dd4e:	d401      	bmi.n	801dd54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dd50:	42b4      	cmp	r4, r6
 801dd52:	db07      	blt.n	801dd64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dd54:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dd56:	4421      	add	r1, r4
 801dd58:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dd5a:	3b01      	subs	r3, #1
 801dd5c:	4422      	add	r2, r4
 801dd5e:	3002      	adds	r0, #2
 801dd60:	e7ee      	b.n	801dd40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801dd62:	d017      	beq.n	801dd94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801dd64:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dd66:	1e5c      	subs	r4, r3, #1
 801dd68:	fb05 1504 	mla	r5, r5, r4, r1
 801dd6c:	142d      	asrs	r5, r5, #16
 801dd6e:	d409      	bmi.n	801dd84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801dd70:	42bd      	cmp	r5, r7
 801dd72:	da07      	bge.n	801dd84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801dd74:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801dd76:	fb05 2404 	mla	r4, r5, r4, r2
 801dd7a:	1424      	asrs	r4, r4, #16
 801dd7c:	d402      	bmi.n	801dd84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801dd7e:	42b4      	cmp	r4, r6
 801dd80:	f2c0 80b3 	blt.w	801deea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801dd84:	2600      	movs	r6, #0
 801dd86:	199c      	adds	r4, r3, r6
 801dd88:	2c00      	cmp	r4, #0
 801dd8a:	dc3e      	bgt.n	801de0a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801dd8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dd90:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dd94:	f1bb 0f00 	cmp.w	fp, #0
 801dd98:	f340 810e 	ble.w	801dfb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801dd9c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dda0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dda4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dda8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ddaa:	f1bb 0b01 	subs.w	fp, fp, #1
 801ddae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ddb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ddb6:	eeb0 6a62 	vmov.f32	s12, s5
 801ddba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ddbe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ddc2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ddc6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ddca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ddce:	eeb0 6a43 	vmov.f32	s12, s6
 801ddd2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ddd6:	ee12 2a90 	vmov	r2, s5
 801ddda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ddde:	fb92 f3f3 	sdiv	r3, r2, r3
 801dde2:	ee13 2a10 	vmov	r2, s6
 801dde6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ddea:	9311      	str	r3, [sp, #68]	; 0x44
 801ddec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ddee:	fb92 f3f3 	sdiv	r3, r2, r3
 801ddf2:	9a03      	ldr	r2, [sp, #12]
 801ddf4:	9312      	str	r3, [sp, #72]	; 0x48
 801ddf6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ddfa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ddfc:	eeb0 3a67 	vmov.f32	s6, s15
 801de00:	bf08      	it	eq
 801de02:	4613      	moveq	r3, r2
 801de04:	eef0 2a47 	vmov.f32	s5, s14
 801de08:	e789      	b.n	801dd1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801de0a:	140f      	asrs	r7, r1, #16
 801de0c:	d418      	bmi.n	801de40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801de0e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801de12:	42bd      	cmp	r5, r7
 801de14:	dd14      	ble.n	801de40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801de16:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801de1a:	d411      	bmi.n	801de40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801de1c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801de20:	4564      	cmp	r4, ip
 801de22:	dd0d      	ble.n	801de40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801de24:	b22d      	sxth	r5, r5
 801de26:	fb0c 7505 	mla	r5, ip, r5, r7
 801de2a:	9c01      	ldr	r4, [sp, #4]
 801de2c:	5d64      	ldrb	r4, [r4, r5]
 801de2e:	2cff      	cmp	r4, #255	; 0xff
 801de30:	d10c      	bne.n	801de4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801de32:	9c00      	ldr	r4, [sp, #0]
 801de34:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801de38:	f06f 0401 	mvn.w	r4, #1
 801de3c:	4374      	muls	r4, r6
 801de3e:	5305      	strh	r5, [r0, r4]
 801de40:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801de42:	4421      	add	r1, r4
 801de44:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801de46:	3e01      	subs	r6, #1
 801de48:	4422      	add	r2, r4
 801de4a:	e79c      	b.n	801dd86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801de4c:	2c00      	cmp	r4, #0
 801de4e:	d0f7      	beq.n	801de40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801de50:	9f00      	ldr	r7, [sp, #0]
 801de52:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801de56:	f06f 0501 	mvn.w	r5, #1
 801de5a:	4375      	muls	r5, r6
 801de5c:	9502      	str	r5, [sp, #8]
 801de5e:	5b45      	ldrh	r5, [r0, r5]
 801de60:	fa1f fc84 	uxth.w	ip, r4
 801de64:	122f      	asrs	r7, r5, #8
 801de66:	43e4      	mvns	r4, r4
 801de68:	b2e4      	uxtb	r4, r4
 801de6a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801de6e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801de72:	fb17 f704 	smulbb	r7, r7, r4
 801de76:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801de7a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801de7e:	00ed      	lsls	r5, r5, #3
 801de80:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801de84:	b2ed      	uxtb	r5, r5
 801de86:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801de8a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801de8e:	fb15 f504 	smulbb	r5, r5, r4
 801de92:	fa5f f989 	uxtb.w	r9, r9
 801de96:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801de9a:	fb09 550c 	mla	r5, r9, ip, r5
 801de9e:	fb1a fa04 	smulbb	sl, sl, r4
 801dea2:	fa1f fe8e 	uxth.w	lr, lr
 801dea6:	b2ad      	uxth	r5, r5
 801dea8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801deac:	fb07 a70c 	mla	r7, r7, ip, sl
 801deb0:	f10e 0401 	add.w	r4, lr, #1
 801deb4:	f105 0a01 	add.w	sl, r5, #1
 801deb8:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801debc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dec0:	b2bf      	uxth	r7, r7
 801dec2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dec6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801deca:	ea4a 0e0e 	orr.w	lr, sl, lr
 801dece:	f107 0a01 	add.w	sl, r7, #1
 801ded2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ded6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801deda:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dede:	9c02      	ldr	r4, [sp, #8]
 801dee0:	ea4e 0e0a 	orr.w	lr, lr, sl
 801dee4:	f820 e004 	strh.w	lr, [r0, r4]
 801dee8:	e7aa      	b.n	801de40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801deea:	f04f 0900 	mov.w	r9, #0
 801deee:	eba3 0409 	sub.w	r4, r3, r9
 801def2:	2c00      	cmp	r4, #0
 801def4:	f77f af4a 	ble.w	801dd8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801def8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801defc:	1414      	asrs	r4, r2, #16
 801defe:	140d      	asrs	r5, r1, #16
 801df00:	fb06 5504 	mla	r5, r6, r4, r5
 801df04:	9c01      	ldr	r4, [sp, #4]
 801df06:	5d64      	ldrb	r4, [r4, r5]
 801df08:	2cff      	cmp	r4, #255	; 0xff
 801df0a:	d10b      	bne.n	801df24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801df0c:	9c00      	ldr	r4, [sp, #0]
 801df0e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801df12:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801df16:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801df18:	4421      	add	r1, r4
 801df1a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801df1c:	f109 0901 	add.w	r9, r9, #1
 801df20:	4422      	add	r2, r4
 801df22:	e7e4      	b.n	801deee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801df24:	2c00      	cmp	r4, #0
 801df26:	d0f6      	beq.n	801df16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801df28:	9e00      	ldr	r6, [sp, #0]
 801df2a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801df2e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801df32:	b2a7      	uxth	r7, r4
 801df34:	122e      	asrs	r6, r5, #8
 801df36:	43e4      	mvns	r4, r4
 801df38:	b2e4      	uxtb	r4, r4
 801df3a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801df3e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801df42:	fb16 f604 	smulbb	r6, r6, r4
 801df46:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801df4a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801df4e:	00ed      	lsls	r5, r5, #3
 801df50:	fb0c 6c07 	mla	ip, ip, r7, r6
 801df54:	b2ed      	uxtb	r5, r5
 801df56:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801df5a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801df5e:	fb15 f504 	smulbb	r5, r5, r4
 801df62:	fa5f fe8e 	uxtb.w	lr, lr
 801df66:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801df6a:	fb0e 5507 	mla	r5, lr, r7, r5
 801df6e:	fb1a fa04 	smulbb	sl, sl, r4
 801df72:	fa1f fc8c 	uxth.w	ip, ip
 801df76:	b2ad      	uxth	r5, r5
 801df78:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801df7c:	fb06 a607 	mla	r6, r6, r7, sl
 801df80:	f10c 0401 	add.w	r4, ip, #1
 801df84:	f105 0a01 	add.w	sl, r5, #1
 801df88:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801df8c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801df90:	b2b6      	uxth	r6, r6
 801df92:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801df96:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801df9a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801df9e:	f106 0a01 	add.w	sl, r6, #1
 801dfa2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dfa6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dfaa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dfae:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dfb2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801dfb6:	e7ae      	b.n	801df16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801dfb8:	b005      	add	sp, #20
 801dfba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dfbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dfbe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfc2:	b085      	sub	sp, #20
 801dfc4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dfc6:	9203      	str	r2, [sp, #12]
 801dfc8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801dfcc:	9201      	str	r2, [sp, #4]
 801dfce:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dfd2:	9100      	str	r1, [sp, #0]
 801dfd4:	6841      	ldr	r1, [r0, #4]
 801dfd6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801dfda:	fb01 2404 	mla	r4, r1, r4, r2
 801dfde:	6802      	ldr	r2, [r0, #0]
 801dfe0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801dfe4:	f8de 2000 	ldr.w	r2, [lr]
 801dfe8:	9202      	str	r2, [sp, #8]
 801dfea:	9a01      	ldr	r2, [sp, #4]
 801dfec:	43d6      	mvns	r6, r2
 801dfee:	b2f6      	uxtb	r6, r6
 801dff0:	9a00      	ldr	r2, [sp, #0]
 801dff2:	2a00      	cmp	r2, #0
 801dff4:	dc03      	bgt.n	801dffe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801dff6:	9a03      	ldr	r2, [sp, #12]
 801dff8:	2a00      	cmp	r2, #0
 801dffa:	f340 8124 	ble.w	801e246 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801dffe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e000:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801e004:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801e008:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e00c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e00e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e012:	2b00      	cmp	r3, #0
 801e014:	dd0e      	ble.n	801e034 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e016:	1408      	asrs	r0, r1, #16
 801e018:	d405      	bmi.n	801e026 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e01a:	4560      	cmp	r0, ip
 801e01c:	da03      	bge.n	801e026 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e01e:	1410      	asrs	r0, r2, #16
 801e020:	d401      	bmi.n	801e026 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e022:	42b8      	cmp	r0, r7
 801e024:	db07      	blt.n	801e036 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e026:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e028:	4401      	add	r1, r0
 801e02a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e02c:	3b01      	subs	r3, #1
 801e02e:	4402      	add	r2, r0
 801e030:	3402      	adds	r4, #2
 801e032:	e7ee      	b.n	801e012 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e034:	d06e      	beq.n	801e114 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801e036:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e038:	1e58      	subs	r0, r3, #1
 801e03a:	fb05 1500 	mla	r5, r5, r0, r1
 801e03e:	142d      	asrs	r5, r5, #16
 801e040:	d45c      	bmi.n	801e0fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e042:	4565      	cmp	r5, ip
 801e044:	da5a      	bge.n	801e0fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e046:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e048:	fb05 2000 	mla	r0, r5, r0, r2
 801e04c:	1400      	asrs	r0, r0, #16
 801e04e:	d455      	bmi.n	801e0fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e050:	42b8      	cmp	r0, r7
 801e052:	da53      	bge.n	801e0fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e054:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801e058:	4699      	mov	r9, r3
 801e05a:	46a2      	mov	sl, r4
 801e05c:	f1b9 0f00 	cmp.w	r9, #0
 801e060:	dd54      	ble.n	801e10c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801e062:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801e066:	140d      	asrs	r5, r1, #16
 801e068:	1410      	asrs	r0, r2, #16
 801e06a:	fb07 5000 	mla	r0, r7, r0, r5
 801e06e:	9d02      	ldr	r5, [sp, #8]
 801e070:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801e074:	f8ba 5000 	ldrh.w	r5, [sl]
 801e078:	122f      	asrs	r7, r5, #8
 801e07a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801e07e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e082:	fb17 f706 	smulbb	r7, r7, r6
 801e086:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801e08a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e08e:	00ed      	lsls	r5, r5, #3
 801e090:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801e094:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801e098:	10c7      	asrs	r7, r0, #3
 801e09a:	b2ed      	uxtb	r5, r5
 801e09c:	00c0      	lsls	r0, r0, #3
 801e09e:	fb18 f806 	smulbb	r8, r8, r6
 801e0a2:	fb15 f506 	smulbb	r5, r5, r6
 801e0a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e0aa:	b2c0      	uxtb	r0, r0
 801e0ac:	fa1f fc8c 	uxth.w	ip, ip
 801e0b0:	fb07 870b 	mla	r7, r7, fp, r8
 801e0b4:	fb00 500b 	mla	r0, r0, fp, r5
 801e0b8:	b280      	uxth	r0, r0
 801e0ba:	b2bf      	uxth	r7, r7
 801e0bc:	f10c 0501 	add.w	r5, ip, #1
 801e0c0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e0c4:	f107 0801 	add.w	r8, r7, #1
 801e0c8:	1c45      	adds	r5, r0, #1
 801e0ca:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e0ce:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801e0d2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e0d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e0d8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e0dc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e0e0:	ea45 0c0c 	orr.w	ip, r5, ip
 801e0e4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e0e8:	4401      	add	r1, r0
 801e0ea:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e0ec:	ea4c 0c08 	orr.w	ip, ip, r8
 801e0f0:	f82a cb02 	strh.w	ip, [sl], #2
 801e0f4:	4402      	add	r2, r0
 801e0f6:	f109 39ff 	add.w	r9, r9, #4294967295
 801e0fa:	e7af      	b.n	801e05c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e0fc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801e100:	f04f 0800 	mov.w	r8, #0
 801e104:	eb03 0008 	add.w	r0, r3, r8
 801e108:	2800      	cmp	r0, #0
 801e10a:	dc41      	bgt.n	801e190 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801e10c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e110:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e114:	9b00      	ldr	r3, [sp, #0]
 801e116:	2b00      	cmp	r3, #0
 801e118:	f340 8095 	ble.w	801e246 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801e11c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e120:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e124:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e128:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e12a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e12e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e132:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e136:	eef0 6a62 	vmov.f32	s13, s5
 801e13a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e13e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e142:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e146:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801e14a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e14e:	eef0 6a43 	vmov.f32	s13, s6
 801e152:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e156:	ee12 2a90 	vmov	r2, s5
 801e15a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e15e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e162:	ee13 2a10 	vmov	r2, s6
 801e166:	9311      	str	r3, [sp, #68]	; 0x44
 801e168:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e16a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e16e:	9312      	str	r3, [sp, #72]	; 0x48
 801e170:	9b00      	ldr	r3, [sp, #0]
 801e172:	9a03      	ldr	r2, [sp, #12]
 801e174:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e178:	3b01      	subs	r3, #1
 801e17a:	9300      	str	r3, [sp, #0]
 801e17c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801e180:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e182:	eeb0 3a67 	vmov.f32	s6, s15
 801e186:	bf08      	it	eq
 801e188:	4613      	moveq	r3, r2
 801e18a:	eef0 2a47 	vmov.f32	s5, s14
 801e18e:	e72f      	b.n	801dff0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801e190:	140f      	asrs	r7, r1, #16
 801e192:	d451      	bmi.n	801e238 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e194:	f8de 5008 	ldr.w	r5, [lr, #8]
 801e198:	42bd      	cmp	r5, r7
 801e19a:	dd4d      	ble.n	801e238 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e19c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e1a0:	d44a      	bmi.n	801e238 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e1a2:	f8de 000c 	ldr.w	r0, [lr, #12]
 801e1a6:	4560      	cmp	r0, ip
 801e1a8:	dd46      	ble.n	801e238 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e1aa:	b22d      	sxth	r5, r5
 801e1ac:	fb0c 7505 	mla	r5, ip, r5, r7
 801e1b0:	9802      	ldr	r0, [sp, #8]
 801e1b2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801e1b6:	f06f 0501 	mvn.w	r5, #1
 801e1ba:	fb05 fb08 	mul.w	fp, r5, r8
 801e1be:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801e1c2:	f834 500b 	ldrh.w	r5, [r4, fp]
 801e1c6:	122f      	asrs	r7, r5, #8
 801e1c8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e1cc:	fb17 f706 	smulbb	r7, r7, r6
 801e1d0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e1d4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e1d8:	00ed      	lsls	r5, r5, #3
 801e1da:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801e1de:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e1e2:	10c7      	asrs	r7, r0, #3
 801e1e4:	b2ed      	uxtb	r5, r5
 801e1e6:	00c0      	lsls	r0, r0, #3
 801e1e8:	fb19 f906 	smulbb	r9, r9, r6
 801e1ec:	fb15 f506 	smulbb	r5, r5, r6
 801e1f0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e1f4:	b2c0      	uxtb	r0, r0
 801e1f6:	fa1f fc8c 	uxth.w	ip, ip
 801e1fa:	fb07 970a 	mla	r7, r7, sl, r9
 801e1fe:	fb00 500a 	mla	r0, r0, sl, r5
 801e202:	b2bf      	uxth	r7, r7
 801e204:	b280      	uxth	r0, r0
 801e206:	f10c 0501 	add.w	r5, ip, #1
 801e20a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e20e:	f107 0901 	add.w	r9, r7, #1
 801e212:	1c45      	adds	r5, r0, #1
 801e214:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e218:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801e21c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e220:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e224:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e228:	ea45 0c0c 	orr.w	ip, r5, ip
 801e22c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e230:	ea4c 0c09 	orr.w	ip, ip, r9
 801e234:	f824 c00b 	strh.w	ip, [r4, fp]
 801e238:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e23a:	4401      	add	r1, r0
 801e23c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e23e:	f108 38ff 	add.w	r8, r8, #4294967295
 801e242:	4402      	add	r2, r0
 801e244:	e75e      	b.n	801e104 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801e246:	b005      	add	sp, #20
 801e248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e24c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e24c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e250:	b085      	sub	sp, #20
 801e252:	4693      	mov	fp, r2
 801e254:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801e256:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e258:	6870      	ldr	r0, [r6, #4]
 801e25a:	9101      	str	r1, [sp, #4]
 801e25c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e260:	fb00 2404 	mla	r4, r0, r4, r2
 801e264:	6832      	ldr	r2, [r6, #0]
 801e266:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801e26a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e26e:	682a      	ldr	r2, [r5, #0]
 801e270:	9202      	str	r2, [sp, #8]
 801e272:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e276:	9a01      	ldr	r2, [sp, #4]
 801e278:	2a00      	cmp	r2, #0
 801e27a:	dc03      	bgt.n	801e284 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e27c:	f1bb 0f00 	cmp.w	fp, #0
 801e280:	f340 809a 	ble.w	801e3b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801e284:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e286:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801e28a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801e28e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e292:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e294:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e298:	2b00      	cmp	r3, #0
 801e29a:	dd0c      	ble.n	801e2b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801e29c:	1406      	asrs	r6, r0, #16
 801e29e:	d405      	bmi.n	801e2ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e2a0:	454e      	cmp	r6, r9
 801e2a2:	da03      	bge.n	801e2ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e2a4:	1416      	asrs	r6, r2, #16
 801e2a6:	d401      	bmi.n	801e2ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e2a8:	4546      	cmp	r6, r8
 801e2aa:	db05      	blt.n	801e2b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e2ac:	4470      	add	r0, lr
 801e2ae:	4462      	add	r2, ip
 801e2b0:	3b01      	subs	r3, #1
 801e2b2:	3402      	adds	r4, #2
 801e2b4:	e7f0      	b.n	801e298 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e2b6:	d00f      	beq.n	801e2d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801e2b8:	1e5e      	subs	r6, r3, #1
 801e2ba:	fb0e 0706 	mla	r7, lr, r6, r0
 801e2be:	143f      	asrs	r7, r7, #16
 801e2c0:	d541      	bpl.n	801e346 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801e2c2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801e2c6:	4698      	mov	r8, r3
 801e2c8:	9603      	str	r6, [sp, #12]
 801e2ca:	f1b8 0f00 	cmp.w	r8, #0
 801e2ce:	dc56      	bgt.n	801e37e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801e2d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e2d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e2d8:	9b01      	ldr	r3, [sp, #4]
 801e2da:	2b00      	cmp	r3, #0
 801e2dc:	dd6c      	ble.n	801e3b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801e2de:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e2e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e2e6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e2ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e2ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e2f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e2f4:	eeb0 6a62 	vmov.f32	s12, s5
 801e2f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e2fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e300:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e304:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e308:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e30c:	eeb0 6a43 	vmov.f32	s12, s6
 801e310:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e314:	ee12 2a90 	vmov	r2, s5
 801e318:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e31c:	fb92 fef3 	sdiv	lr, r2, r3
 801e320:	ee13 2a10 	vmov	r2, s6
 801e324:	fb92 fcf3 	sdiv	ip, r2, r3
 801e328:	9b01      	ldr	r3, [sp, #4]
 801e32a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e32e:	3b01      	subs	r3, #1
 801e330:	9301      	str	r3, [sp, #4]
 801e332:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e336:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e338:	eeb0 3a67 	vmov.f32	s6, s15
 801e33c:	bf08      	it	eq
 801e33e:	465b      	moveq	r3, fp
 801e340:	eef0 2a47 	vmov.f32	s5, s14
 801e344:	e797      	b.n	801e276 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e346:	454f      	cmp	r7, r9
 801e348:	dabb      	bge.n	801e2c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e34a:	fb0c 2606 	mla	r6, ip, r6, r2
 801e34e:	1436      	asrs	r6, r6, #16
 801e350:	d4b7      	bmi.n	801e2c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e352:	4546      	cmp	r6, r8
 801e354:	dab5      	bge.n	801e2c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e356:	461e      	mov	r6, r3
 801e358:	46a0      	mov	r8, r4
 801e35a:	2e00      	cmp	r6, #0
 801e35c:	ddb8      	ble.n	801e2d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e35e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801e362:	9902      	ldr	r1, [sp, #8]
 801e364:	1417      	asrs	r7, r2, #16
 801e366:	ea4f 4920 	mov.w	r9, r0, asr #16
 801e36a:	fb0a 9707 	mla	r7, sl, r7, r9
 801e36e:	4470      	add	r0, lr
 801e370:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801e374:	f828 7b02 	strh.w	r7, [r8], #2
 801e378:	4462      	add	r2, ip
 801e37a:	3e01      	subs	r6, #1
 801e37c:	e7ed      	b.n	801e35a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801e37e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801e382:	d414      	bmi.n	801e3ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e384:	68ae      	ldr	r6, [r5, #8]
 801e386:	454e      	cmp	r6, r9
 801e388:	dd11      	ble.n	801e3ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e38a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801e38e:	d40e      	bmi.n	801e3ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e390:	68ef      	ldr	r7, [r5, #12]
 801e392:	4557      	cmp	r7, sl
 801e394:	dd0b      	ble.n	801e3ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e396:	b236      	sxth	r6, r6
 801e398:	fb0a 9606 	mla	r6, sl, r6, r9
 801e39c:	9f02      	ldr	r7, [sp, #8]
 801e39e:	f06f 0101 	mvn.w	r1, #1
 801e3a2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801e3a6:	fb01 f608 	mul.w	r6, r1, r8
 801e3aa:	9903      	ldr	r1, [sp, #12]
 801e3ac:	538f      	strh	r7, [r1, r6]
 801e3ae:	4470      	add	r0, lr
 801e3b0:	4462      	add	r2, ip
 801e3b2:	f108 38ff 	add.w	r8, r8, #4294967295
 801e3b6:	e788      	b.n	801e2ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e3b8:	b005      	add	sp, #20
 801e3ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e3be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e3be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e3c2:	b087      	sub	sp, #28
 801e3c4:	468b      	mov	fp, r1
 801e3c6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e3c8:	9203      	str	r2, [sp, #12]
 801e3ca:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e3ce:	9204      	str	r2, [sp, #16]
 801e3d0:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801e3d4:	6841      	ldr	r1, [r0, #4]
 801e3d6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e3da:	fb01 2505 	mla	r5, r1, r5, r2
 801e3de:	6802      	ldr	r2, [r0, #0]
 801e3e0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801e3e4:	f8d9 2000 	ldr.w	r2, [r9]
 801e3e8:	9201      	str	r2, [sp, #4]
 801e3ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e3ee:	f1bb 0f00 	cmp.w	fp, #0
 801e3f2:	dc03      	bgt.n	801e3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e3f4:	9a03      	ldr	r2, [sp, #12]
 801e3f6:	2a00      	cmp	r2, #0
 801e3f8:	f340 8159 	ble.w	801e6ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e3fc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e3fe:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e402:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e406:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e40a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e40c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e410:	2b00      	cmp	r3, #0
 801e412:	dd0e      	ble.n	801e432 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e414:	1402      	asrs	r2, r0, #16
 801e416:	d405      	bmi.n	801e424 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e418:	42ba      	cmp	r2, r7
 801e41a:	da03      	bge.n	801e424 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e41c:	140a      	asrs	r2, r1, #16
 801e41e:	d401      	bmi.n	801e424 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e420:	42b2      	cmp	r2, r6
 801e422:	db07      	blt.n	801e434 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e424:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e426:	4410      	add	r0, r2
 801e428:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e42a:	3b01      	subs	r3, #1
 801e42c:	4411      	add	r1, r2
 801e42e:	3502      	adds	r5, #2
 801e430:	e7ee      	b.n	801e410 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801e432:	d017      	beq.n	801e464 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e434:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e436:	1e5a      	subs	r2, r3, #1
 801e438:	fb04 0402 	mla	r4, r4, r2, r0
 801e43c:	1424      	asrs	r4, r4, #16
 801e43e:	d409      	bmi.n	801e454 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e440:	42bc      	cmp	r4, r7
 801e442:	da07      	bge.n	801e454 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e444:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e446:	fb04 1202 	mla	r2, r4, r2, r1
 801e44a:	1412      	asrs	r2, r2, #16
 801e44c:	d402      	bmi.n	801e454 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e44e:	42b2      	cmp	r2, r6
 801e450:	f2c0 80bf 	blt.w	801e5d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e454:	2700      	movs	r7, #0
 801e456:	19da      	adds	r2, r3, r7
 801e458:	2a00      	cmp	r2, #0
 801e45a:	dc3e      	bgt.n	801e4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e45c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e460:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e464:	f1bb 0f00 	cmp.w	fp, #0
 801e468:	f340 8121 	ble.w	801e6ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e46c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e470:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e474:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e478:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e47a:	f1bb 0b01 	subs.w	fp, fp, #1
 801e47e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e482:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e486:	eeb0 6a62 	vmov.f32	s12, s5
 801e48a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e48e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e492:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e496:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e49a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e49e:	eeb0 6a43 	vmov.f32	s12, s6
 801e4a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e4a6:	ee12 2a90 	vmov	r2, s5
 801e4aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e4ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801e4b2:	ee13 2a10 	vmov	r2, s6
 801e4b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e4ba:	9313      	str	r3, [sp, #76]	; 0x4c
 801e4bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e4be:	fb92 f3f3 	sdiv	r3, r2, r3
 801e4c2:	9a03      	ldr	r2, [sp, #12]
 801e4c4:	9314      	str	r3, [sp, #80]	; 0x50
 801e4c6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e4ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e4cc:	eeb0 3a67 	vmov.f32	s6, s15
 801e4d0:	bf08      	it	eq
 801e4d2:	4613      	moveq	r3, r2
 801e4d4:	eef0 2a47 	vmov.f32	s5, s14
 801e4d8:	e789      	b.n	801e3ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e4da:	1406      	asrs	r6, r0, #16
 801e4dc:	d42d      	bmi.n	801e53a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e4de:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801e4e2:	42b4      	cmp	r4, r6
 801e4e4:	dd29      	ble.n	801e53a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e4e6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801e4ea:	d426      	bmi.n	801e53a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e4ec:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e4f0:	4562      	cmp	r2, ip
 801e4f2:	dd22      	ble.n	801e53a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e4f4:	b224      	sxth	r4, r4
 801e4f6:	9a01      	ldr	r2, [sp, #4]
 801e4f8:	fb0c 6404 	mla	r4, ip, r4, r6
 801e4fc:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801e500:	0e22      	lsrs	r2, r4, #24
 801e502:	d01a      	beq.n	801e53a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e504:	9e04      	ldr	r6, [sp, #16]
 801e506:	4372      	muls	r2, r6
 801e508:	1c56      	adds	r6, r2, #1
 801e50a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e50e:	1212      	asrs	r2, r2, #8
 801e510:	0a26      	lsrs	r6, r4, #8
 801e512:	2aff      	cmp	r2, #255	; 0xff
 801e514:	9605      	str	r6, [sp, #20]
 801e516:	d116      	bne.n	801e546 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801e518:	f06f 0201 	mvn.w	r2, #1
 801e51c:	fb02 fc07 	mul.w	ip, r2, r7
 801e520:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e524:	0962      	lsrs	r2, r4, #5
 801e526:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e52a:	f026 0607 	bic.w	r6, r6, #7
 801e52e:	4316      	orrs	r6, r2
 801e530:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e534:	4326      	orrs	r6, r4
 801e536:	f825 600c 	strh.w	r6, [r5, ip]
 801e53a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e53c:	4410      	add	r0, r2
 801e53e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e540:	3f01      	subs	r7, #1
 801e542:	4411      	add	r1, r2
 801e544:	e787      	b.n	801e456 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e546:	f06f 0601 	mvn.w	r6, #1
 801e54a:	437e      	muls	r6, r7
 801e54c:	fa1f fa82 	uxth.w	sl, r2
 801e550:	f835 8006 	ldrh.w	r8, [r5, r6]
 801e554:	9602      	str	r6, [sp, #8]
 801e556:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e55a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801e55e:	43d2      	mvns	r2, r2
 801e560:	b2d2      	uxtb	r2, r2
 801e562:	fb1c fc0a 	smulbb	ip, ip, sl
 801e566:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e56a:	fb0e ce02 	mla	lr, lr, r2, ip
 801e56e:	b2e4      	uxtb	r4, r4
 801e570:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e574:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e578:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e57c:	fa5f f888 	uxtb.w	r8, r8
 801e580:	fb14 f40a 	smulbb	r4, r4, sl
 801e584:	fb08 4402 	mla	r4, r8, r2, r4
 801e588:	fa1f fe8e 	uxth.w	lr, lr
 801e58c:	fb16 f60a 	smulbb	r6, r6, sl
 801e590:	b2a4      	uxth	r4, r4
 801e592:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e596:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e59a:	f10e 0201 	add.w	r2, lr, #1
 801e59e:	1c66      	adds	r6, r4, #1
 801e5a0:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e5a4:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e5a8:	fa1f fc8c 	uxth.w	ip, ip
 801e5ac:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e5b0:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e5b4:	ea46 0e0e 	orr.w	lr, r6, lr
 801e5b8:	f10c 0601 	add.w	r6, ip, #1
 801e5bc:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e5c0:	0976      	lsrs	r6, r6, #5
 801e5c2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e5c6:	9a02      	ldr	r2, [sp, #8]
 801e5c8:	ea4e 0e06 	orr.w	lr, lr, r6
 801e5cc:	f825 e002 	strh.w	lr, [r5, r2]
 801e5d0:	e7b3      	b.n	801e53a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e5d2:	f04f 0800 	mov.w	r8, #0
 801e5d6:	eba3 0208 	sub.w	r2, r3, r8
 801e5da:	2a00      	cmp	r2, #0
 801e5dc:	f77f af3e 	ble.w	801e45c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e5e0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801e5e4:	1404      	asrs	r4, r0, #16
 801e5e6:	140a      	asrs	r2, r1, #16
 801e5e8:	fb06 4202 	mla	r2, r6, r2, r4
 801e5ec:	9c01      	ldr	r4, [sp, #4]
 801e5ee:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801e5f2:	0e22      	lsrs	r2, r4, #24
 801e5f4:	d016      	beq.n	801e624 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e5f6:	9e04      	ldr	r6, [sp, #16]
 801e5f8:	4372      	muls	r2, r6
 801e5fa:	1c56      	adds	r6, r2, #1
 801e5fc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e600:	1212      	asrs	r2, r2, #8
 801e602:	2aff      	cmp	r2, #255	; 0xff
 801e604:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801e608:	d113      	bne.n	801e632 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e60a:	0962      	lsrs	r2, r4, #5
 801e60c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e610:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e614:	f026 0607 	bic.w	r6, r6, #7
 801e618:	4316      	orrs	r6, r2
 801e61a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e61e:	4326      	orrs	r6, r4
 801e620:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801e624:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e626:	4410      	add	r0, r2
 801e628:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e62a:	f108 0801 	add.w	r8, r8, #1
 801e62e:	4411      	add	r1, r2
 801e630:	e7d1      	b.n	801e5d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801e632:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801e636:	fa1f fa82 	uxth.w	sl, r2
 801e63a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e63e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801e642:	43d2      	mvns	r2, r2
 801e644:	b2d2      	uxtb	r2, r2
 801e646:	fb17 f70a 	smulbb	r7, r7, sl
 801e64a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e64e:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e652:	b2e4      	uxtb	r4, r4
 801e654:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e658:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e65c:	fa5f fe8e 	uxtb.w	lr, lr
 801e660:	fb14 f40a 	smulbb	r4, r4, sl
 801e664:	fb0e 4402 	mla	r4, lr, r2, r4
 801e668:	b2f6      	uxtb	r6, r6
 801e66a:	fa1f fc8c 	uxth.w	ip, ip
 801e66e:	fb16 f60a 	smulbb	r6, r6, sl
 801e672:	b2a4      	uxth	r4, r4
 801e674:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e678:	fb07 6702 	mla	r7, r7, r2, r6
 801e67c:	f10c 0201 	add.w	r2, ip, #1
 801e680:	1c66      	adds	r6, r4, #1
 801e682:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e686:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e68a:	b2bf      	uxth	r7, r7
 801e68c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e690:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e694:	ea46 0c0c 	orr.w	ip, r6, ip
 801e698:	1c7e      	adds	r6, r7, #1
 801e69a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e69e:	0976      	lsrs	r6, r6, #5
 801e6a0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e6a4:	ea4c 0c06 	orr.w	ip, ip, r6
 801e6a8:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e6ac:	e7ba      	b.n	801e624 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e6ae:	b007      	add	sp, #28
 801e6b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e6b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e6b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6b8:	b085      	sub	sp, #20
 801e6ba:	468b      	mov	fp, r1
 801e6bc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e6be:	9203      	str	r2, [sp, #12]
 801e6c0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e6c4:	6841      	ldr	r1, [r0, #4]
 801e6c6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e6ca:	fb01 2404 	mla	r4, r1, r4, r2
 801e6ce:	6802      	ldr	r2, [r0, #0]
 801e6d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e6d4:	f8d8 2000 	ldr.w	r2, [r8]
 801e6d8:	9201      	str	r2, [sp, #4]
 801e6da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e6de:	f1bb 0f00 	cmp.w	fp, #0
 801e6e2:	dc03      	bgt.n	801e6ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e6e4:	9a03      	ldr	r2, [sp, #12]
 801e6e6:	2a00      	cmp	r2, #0
 801e6e8:	f340 814f 	ble.w	801e98a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e6ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e6ee:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e6f2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e6f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e6fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e6fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e700:	2b00      	cmp	r3, #0
 801e702:	dd0e      	ble.n	801e722 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e704:	1408      	asrs	r0, r1, #16
 801e706:	d405      	bmi.n	801e714 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e708:	42b8      	cmp	r0, r7
 801e70a:	da03      	bge.n	801e714 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e70c:	1410      	asrs	r0, r2, #16
 801e70e:	d401      	bmi.n	801e714 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e710:	42b0      	cmp	r0, r6
 801e712:	db07      	blt.n	801e724 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e714:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e716:	4401      	add	r1, r0
 801e718:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e71a:	3b01      	subs	r3, #1
 801e71c:	4402      	add	r2, r0
 801e71e:	3402      	adds	r4, #2
 801e720:	e7ee      	b.n	801e700 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e722:	d017      	beq.n	801e754 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e724:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e726:	1e58      	subs	r0, r3, #1
 801e728:	fb05 1500 	mla	r5, r5, r0, r1
 801e72c:	142d      	asrs	r5, r5, #16
 801e72e:	d409      	bmi.n	801e744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e730:	42bd      	cmp	r5, r7
 801e732:	da07      	bge.n	801e744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e734:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e736:	fb05 2000 	mla	r0, r5, r0, r2
 801e73a:	1400      	asrs	r0, r0, #16
 801e73c:	d402      	bmi.n	801e744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e73e:	42b0      	cmp	r0, r6
 801e740:	f2c0 80ba 	blt.w	801e8b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e744:	2600      	movs	r6, #0
 801e746:	1998      	adds	r0, r3, r6
 801e748:	2800      	cmp	r0, #0
 801e74a:	dc3e      	bgt.n	801e7ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e74c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e750:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e754:	f1bb 0f00 	cmp.w	fp, #0
 801e758:	f340 8117 	ble.w	801e98a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e75c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e760:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e764:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e768:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e76a:	f1bb 0b01 	subs.w	fp, fp, #1
 801e76e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e772:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e776:	eeb0 6a62 	vmov.f32	s12, s5
 801e77a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e77e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e782:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e786:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e78a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e78e:	eeb0 6a43 	vmov.f32	s12, s6
 801e792:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e796:	ee12 2a90 	vmov	r2, s5
 801e79a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e79e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7a2:	ee13 2a10 	vmov	r2, s6
 801e7a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e7aa:	9311      	str	r3, [sp, #68]	; 0x44
 801e7ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e7ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7b2:	9a03      	ldr	r2, [sp, #12]
 801e7b4:	9312      	str	r3, [sp, #72]	; 0x48
 801e7b6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e7ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e7bc:	eeb0 3a67 	vmov.f32	s6, s15
 801e7c0:	bf08      	it	eq
 801e7c2:	4613      	moveq	r3, r2
 801e7c4:	eef0 2a47 	vmov.f32	s5, s14
 801e7c8:	e789      	b.n	801e6de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e7ca:	140f      	asrs	r7, r1, #16
 801e7cc:	d424      	bmi.n	801e818 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e7ce:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e7d2:	42bd      	cmp	r5, r7
 801e7d4:	dd20      	ble.n	801e818 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e7d6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e7da:	d41d      	bmi.n	801e818 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e7dc:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e7e0:	4560      	cmp	r0, ip
 801e7e2:	dd19      	ble.n	801e818 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e7e4:	b22d      	sxth	r5, r5
 801e7e6:	fb0c 7505 	mla	r5, ip, r5, r7
 801e7ea:	9801      	ldr	r0, [sp, #4]
 801e7ec:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801e7f0:	0e07      	lsrs	r7, r0, #24
 801e7f2:	2fff      	cmp	r7, #255	; 0xff
 801e7f4:	d116      	bne.n	801e824 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801e7f6:	f06f 0501 	mvn.w	r5, #1
 801e7fa:	fb05 f706 	mul.w	r7, r5, r6
 801e7fe:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801e802:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801e806:	0945      	lsrs	r5, r0, #5
 801e808:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e80c:	ea4c 0505 	orr.w	r5, ip, r5
 801e810:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e814:	4305      	orrs	r5, r0
 801e816:	53e5      	strh	r5, [r4, r7]
 801e818:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e81a:	4401      	add	r1, r0
 801e81c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e81e:	3e01      	subs	r6, #1
 801e820:	4402      	add	r2, r0
 801e822:	e790      	b.n	801e746 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e824:	b2fd      	uxtb	r5, r7
 801e826:	2f00      	cmp	r7, #0
 801e828:	d0f6      	beq.n	801e818 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e82a:	f06f 0701 	mvn.w	r7, #1
 801e82e:	4377      	muls	r7, r6
 801e830:	fa1f f985 	uxth.w	r9, r5
 801e834:	f834 e007 	ldrh.w	lr, [r4, r7]
 801e838:	9702      	str	r7, [sp, #8]
 801e83a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e83e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801e842:	43ed      	mvns	r5, r5
 801e844:	b2ed      	uxtb	r5, r5
 801e846:	fb17 f709 	smulbb	r7, r7, r9
 801e84a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e84e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801e852:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801e856:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e85a:	b2c0      	uxtb	r0, r0
 801e85c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e860:	fa5f fe8e 	uxtb.w	lr, lr
 801e864:	fb10 f009 	smulbb	r0, r0, r9
 801e868:	fb0e 0005 	mla	r0, lr, r5, r0
 801e86c:	b280      	uxth	r0, r0
 801e86e:	fa1f fc8c 	uxth.w	ip, ip
 801e872:	fb1a fa09 	smulbb	sl, sl, r9
 801e876:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e87a:	fb07 a705 	mla	r7, r7, r5, sl
 801e87e:	f100 0a01 	add.w	sl, r0, #1
 801e882:	f10c 0501 	add.w	r5, ip, #1
 801e886:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801e88a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e88e:	b2bf      	uxth	r7, r7
 801e890:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e894:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e898:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e89c:	f107 0a01 	add.w	sl, r7, #1
 801e8a0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e8a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e8a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e8ac:	9802      	ldr	r0, [sp, #8]
 801e8ae:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e8b2:	f824 c000 	strh.w	ip, [r4, r0]
 801e8b6:	e7af      	b.n	801e818 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e8b8:	f04f 0e00 	mov.w	lr, #0
 801e8bc:	eba3 000e 	sub.w	r0, r3, lr
 801e8c0:	2800      	cmp	r0, #0
 801e8c2:	f77f af43 	ble.w	801e74c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e8c6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e8ca:	140d      	asrs	r5, r1, #16
 801e8cc:	1410      	asrs	r0, r2, #16
 801e8ce:	fb06 5000 	mla	r0, r6, r0, r5
 801e8d2:	9d01      	ldr	r5, [sp, #4]
 801e8d4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801e8d8:	0e2e      	lsrs	r6, r5, #24
 801e8da:	2eff      	cmp	r6, #255	; 0xff
 801e8dc:	d112      	bne.n	801e904 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801e8de:	482c      	ldr	r0, [pc, #176]	; (801e990 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801e8e0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801e8e4:	0968      	lsrs	r0, r5, #5
 801e8e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e8ea:	4330      	orrs	r0, r6
 801e8ec:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e8f0:	4328      	orrs	r0, r5
 801e8f2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801e8f6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e8f8:	4401      	add	r1, r0
 801e8fa:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e8fc:	f10e 0e01 	add.w	lr, lr, #1
 801e900:	4402      	add	r2, r0
 801e902:	e7db      	b.n	801e8bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801e904:	b2f0      	uxtb	r0, r6
 801e906:	2e00      	cmp	r6, #0
 801e908:	d0f5      	beq.n	801e8f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e90a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801e90e:	fa1f f980 	uxth.w	r9, r0
 801e912:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e916:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801e91a:	43c0      	mvns	r0, r0
 801e91c:	b2c0      	uxtb	r0, r0
 801e91e:	fb16 f609 	smulbb	r6, r6, r9
 801e922:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e926:	fb07 6700 	mla	r7, r7, r0, r6
 801e92a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801e92e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e932:	b2ed      	uxtb	r5, r5
 801e934:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e938:	fa5f fc8c 	uxtb.w	ip, ip
 801e93c:	fb15 f509 	smulbb	r5, r5, r9
 801e940:	fb0c 5500 	mla	r5, ip, r0, r5
 801e944:	b2bf      	uxth	r7, r7
 801e946:	fb1a fa09 	smulbb	sl, sl, r9
 801e94a:	b2ad      	uxth	r5, r5
 801e94c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e950:	fb06 a600 	mla	r6, r6, r0, sl
 801e954:	1c78      	adds	r0, r7, #1
 801e956:	f105 0a01 	add.w	sl, r5, #1
 801e95a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e95e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e962:	b2b6      	uxth	r6, r6
 801e964:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e968:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e96c:	ea4a 0707 	orr.w	r7, sl, r7
 801e970:	f106 0a01 	add.w	sl, r6, #1
 801e974:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e978:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e97c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e980:	ea47 070a 	orr.w	r7, r7, sl
 801e984:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801e988:	e7b5      	b.n	801e8f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e98a:	b005      	add	sp, #20
 801e98c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e990:	fffff800 	.word	0xfffff800

0801e994 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e998:	b087      	sub	sp, #28
 801e99a:	468b      	mov	fp, r1
 801e99c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e99e:	9203      	str	r2, [sp, #12]
 801e9a0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e9a4:	9204      	str	r2, [sp, #16]
 801e9a6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e9aa:	6841      	ldr	r1, [r0, #4]
 801e9ac:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e9b0:	fb01 2404 	mla	r4, r1, r4, r2
 801e9b4:	6802      	ldr	r2, [r0, #0]
 801e9b6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e9ba:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e9be:	3201      	adds	r2, #1
 801e9c0:	f022 0201 	bic.w	r2, r2, #1
 801e9c4:	9200      	str	r2, [sp, #0]
 801e9c6:	f8d9 2000 	ldr.w	r2, [r9]
 801e9ca:	9201      	str	r2, [sp, #4]
 801e9cc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e9d0:	f1bb 0f00 	cmp.w	fp, #0
 801e9d4:	dc03      	bgt.n	801e9de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e9d6:	9a03      	ldr	r2, [sp, #12]
 801e9d8:	2a00      	cmp	r2, #0
 801e9da:	f340 8169 	ble.w	801ecb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e9de:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e9e0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e9e4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e9e8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e9ec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e9ee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e9f2:	2b00      	cmp	r3, #0
 801e9f4:	dd0e      	ble.n	801ea14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e9f6:	1402      	asrs	r2, r0, #16
 801e9f8:	d405      	bmi.n	801ea06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e9fa:	42ba      	cmp	r2, r7
 801e9fc:	da03      	bge.n	801ea06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e9fe:	140a      	asrs	r2, r1, #16
 801ea00:	d401      	bmi.n	801ea06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ea02:	42b2      	cmp	r2, r6
 801ea04:	db07      	blt.n	801ea16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ea06:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ea08:	4410      	add	r0, r2
 801ea0a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ea0c:	3b01      	subs	r3, #1
 801ea0e:	4411      	add	r1, r2
 801ea10:	3402      	adds	r4, #2
 801ea12:	e7ee      	b.n	801e9f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ea14:	d017      	beq.n	801ea46 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ea16:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ea18:	1e5a      	subs	r2, r3, #1
 801ea1a:	fb05 0502 	mla	r5, r5, r2, r0
 801ea1e:	142d      	asrs	r5, r5, #16
 801ea20:	d409      	bmi.n	801ea36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ea22:	42bd      	cmp	r5, r7
 801ea24:	da07      	bge.n	801ea36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ea26:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ea28:	fb05 1202 	mla	r2, r5, r2, r1
 801ea2c:	1412      	asrs	r2, r2, #16
 801ea2e:	d402      	bmi.n	801ea36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ea30:	42b2      	cmp	r2, r6
 801ea32:	f2c0 80c7 	blt.w	801ebc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801ea36:	2700      	movs	r7, #0
 801ea38:	19da      	adds	r2, r3, r7
 801ea3a:	2a00      	cmp	r2, #0
 801ea3c:	dc3e      	bgt.n	801eabc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ea3e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ea42:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ea46:	f1bb 0f00 	cmp.w	fp, #0
 801ea4a:	f340 8131 	ble.w	801ecb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ea4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ea52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ea56:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ea5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ea5c:	f1bb 0b01 	subs.w	fp, fp, #1
 801ea60:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ea64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ea68:	eeb0 6a62 	vmov.f32	s12, s5
 801ea6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ea70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ea74:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ea78:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ea7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ea80:	eeb0 6a43 	vmov.f32	s12, s6
 801ea84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ea88:	ee12 2a90 	vmov	r2, s5
 801ea8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ea90:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea94:	ee13 2a10 	vmov	r2, s6
 801ea98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ea9c:	9313      	str	r3, [sp, #76]	; 0x4c
 801ea9e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eaa0:	fb92 f3f3 	sdiv	r3, r2, r3
 801eaa4:	9a03      	ldr	r2, [sp, #12]
 801eaa6:	9314      	str	r3, [sp, #80]	; 0x50
 801eaa8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801eaac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eaae:	eeb0 3a67 	vmov.f32	s6, s15
 801eab2:	bf08      	it	eq
 801eab4:	4613      	moveq	r3, r2
 801eab6:	eef0 2a47 	vmov.f32	s5, s14
 801eaba:	e789      	b.n	801e9d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801eabc:	1405      	asrs	r5, r0, #16
 801eabe:	d435      	bmi.n	801eb2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eac0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801eac4:	42aa      	cmp	r2, r5
 801eac6:	dd31      	ble.n	801eb2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eac8:	140e      	asrs	r6, r1, #16
 801eaca:	d42f      	bmi.n	801eb2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eacc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801ead0:	42b2      	cmp	r2, r6
 801ead2:	dd2b      	ble.n	801eb2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ead4:	9a00      	ldr	r2, [sp, #0]
 801ead6:	fb06 5502 	mla	r5, r6, r2, r5
 801eada:	086a      	lsrs	r2, r5, #1
 801eadc:	9e01      	ldr	r6, [sp, #4]
 801eade:	5cb2      	ldrb	r2, [r6, r2]
 801eae0:	07ee      	lsls	r6, r5, #31
 801eae2:	bf54      	ite	pl
 801eae4:	f002 020f 	andpl.w	r2, r2, #15
 801eae8:	1112      	asrmi	r2, r2, #4
 801eaea:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801eaee:	b2d2      	uxtb	r2, r2
 801eaf0:	b1e2      	cbz	r2, 801eb2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eaf2:	9d04      	ldr	r5, [sp, #16]
 801eaf4:	436a      	muls	r2, r5
 801eaf6:	1c55      	adds	r5, r2, #1
 801eaf8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801eafc:	4d6e      	ldr	r5, [pc, #440]	; (801ecb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801eafe:	682d      	ldr	r5, [r5, #0]
 801eb00:	1212      	asrs	r2, r2, #8
 801eb02:	0a2e      	lsrs	r6, r5, #8
 801eb04:	2aff      	cmp	r2, #255	; 0xff
 801eb06:	9605      	str	r6, [sp, #20]
 801eb08:	d116      	bne.n	801eb38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801eb0a:	f06f 0201 	mvn.w	r2, #1
 801eb0e:	fb02 fc07 	mul.w	ip, r2, r7
 801eb12:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801eb16:	096a      	lsrs	r2, r5, #5
 801eb18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb1c:	f026 0607 	bic.w	r6, r6, #7
 801eb20:	4316      	orrs	r6, r2
 801eb22:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801eb26:	432e      	orrs	r6, r5
 801eb28:	f824 600c 	strh.w	r6, [r4, ip]
 801eb2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801eb2e:	4410      	add	r0, r2
 801eb30:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801eb32:	3f01      	subs	r7, #1
 801eb34:	4411      	add	r1, r2
 801eb36:	e77f      	b.n	801ea38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801eb38:	f06f 0601 	mvn.w	r6, #1
 801eb3c:	437e      	muls	r6, r7
 801eb3e:	fa1f fa82 	uxth.w	sl, r2
 801eb42:	f834 8006 	ldrh.w	r8, [r4, r6]
 801eb46:	9602      	str	r6, [sp, #8]
 801eb48:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801eb4c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801eb50:	43d2      	mvns	r2, r2
 801eb52:	b2d2      	uxtb	r2, r2
 801eb54:	fb1c fc0a 	smulbb	ip, ip, sl
 801eb58:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801eb5c:	fb0e ce02 	mla	lr, lr, r2, ip
 801eb60:	b2ed      	uxtb	r5, r5
 801eb62:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801eb66:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801eb6a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801eb6e:	fa5f f888 	uxtb.w	r8, r8
 801eb72:	fb15 f50a 	smulbb	r5, r5, sl
 801eb76:	fb08 5502 	mla	r5, r8, r2, r5
 801eb7a:	fa1f fe8e 	uxth.w	lr, lr
 801eb7e:	fb16 f60a 	smulbb	r6, r6, sl
 801eb82:	b2ad      	uxth	r5, r5
 801eb84:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801eb88:	fb0c 6c02 	mla	ip, ip, r2, r6
 801eb8c:	f10e 0201 	add.w	r2, lr, #1
 801eb90:	1c6e      	adds	r6, r5, #1
 801eb92:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801eb96:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801eb9a:	fa1f fc8c 	uxth.w	ip, ip
 801eb9e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801eba2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801eba6:	ea46 0e0e 	orr.w	lr, r6, lr
 801ebaa:	f10c 0601 	add.w	r6, ip, #1
 801ebae:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ebb2:	0976      	lsrs	r6, r6, #5
 801ebb4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ebb8:	9a02      	ldr	r2, [sp, #8]
 801ebba:	ea4e 0e06 	orr.w	lr, lr, r6
 801ebbe:	f824 e002 	strh.w	lr, [r4, r2]
 801ebc2:	e7b3      	b.n	801eb2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ebc4:	f04f 0800 	mov.w	r8, #0
 801ebc8:	eba3 0208 	sub.w	r2, r3, r8
 801ebcc:	2a00      	cmp	r2, #0
 801ebce:	f77f af36 	ble.w	801ea3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ebd2:	9e00      	ldr	r6, [sp, #0]
 801ebd4:	1402      	asrs	r2, r0, #16
 801ebd6:	140d      	asrs	r5, r1, #16
 801ebd8:	fb06 2505 	mla	r5, r6, r5, r2
 801ebdc:	086a      	lsrs	r2, r5, #1
 801ebde:	9e01      	ldr	r6, [sp, #4]
 801ebe0:	5cb2      	ldrb	r2, [r6, r2]
 801ebe2:	07ed      	lsls	r5, r5, #31
 801ebe4:	bf54      	ite	pl
 801ebe6:	f002 020f 	andpl.w	r2, r2, #15
 801ebea:	1112      	asrmi	r2, r2, #4
 801ebec:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ebf0:	b2d2      	uxtb	r2, r2
 801ebf2:	b1c2      	cbz	r2, 801ec26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ebf4:	9d04      	ldr	r5, [sp, #16]
 801ebf6:	436a      	muls	r2, r5
 801ebf8:	1c55      	adds	r5, r2, #1
 801ebfa:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ebfe:	4d2e      	ldr	r5, [pc, #184]	; (801ecb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ec00:	1212      	asrs	r2, r2, #8
 801ec02:	682e      	ldr	r6, [r5, #0]
 801ec04:	2aff      	cmp	r2, #255	; 0xff
 801ec06:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801ec0a:	d113      	bne.n	801ec34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ec0c:	0972      	lsrs	r2, r6, #5
 801ec0e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ec12:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ec16:	f025 0507 	bic.w	r5, r5, #7
 801ec1a:	4315      	orrs	r5, r2
 801ec1c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ec20:	4335      	orrs	r5, r6
 801ec22:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801ec26:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ec28:	4410      	add	r0, r2
 801ec2a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ec2c:	f108 0801 	add.w	r8, r8, #1
 801ec30:	4411      	add	r1, r2
 801ec32:	e7c9      	b.n	801ebc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ec34:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ec38:	fa1f fa82 	uxth.w	sl, r2
 801ec3c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ec40:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801ec44:	43d2      	mvns	r2, r2
 801ec46:	b2d2      	uxtb	r2, r2
 801ec48:	fb17 f70a 	smulbb	r7, r7, sl
 801ec4c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ec50:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ec54:	b2f6      	uxtb	r6, r6
 801ec56:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ec5a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ec5e:	fa5f fe8e 	uxtb.w	lr, lr
 801ec62:	fb16 f60a 	smulbb	r6, r6, sl
 801ec66:	fb0e 6602 	mla	r6, lr, r2, r6
 801ec6a:	b2ed      	uxtb	r5, r5
 801ec6c:	fa1f fc8c 	uxth.w	ip, ip
 801ec70:	fb15 f50a 	smulbb	r5, r5, sl
 801ec74:	b2b6      	uxth	r6, r6
 801ec76:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ec7a:	fb07 5702 	mla	r7, r7, r2, r5
 801ec7e:	f10c 0201 	add.w	r2, ip, #1
 801ec82:	1c75      	adds	r5, r6, #1
 801ec84:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ec88:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ec8c:	b2bf      	uxth	r7, r7
 801ec8e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ec92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ec96:	ea45 0c0c 	orr.w	ip, r5, ip
 801ec9a:	1c7d      	adds	r5, r7, #1
 801ec9c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801eca0:	096d      	lsrs	r5, r5, #5
 801eca2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801eca6:	ea4c 0c05 	orr.w	ip, ip, r5
 801ecaa:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801ecae:	e7ba      	b.n	801ec26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ecb0:	b007      	add	sp, #28
 801ecb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ecb6:	bf00      	nop
 801ecb8:	2001e1e8 	.word	0x2001e1e8

0801ecbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ecbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ecc0:	b087      	sub	sp, #28
 801ecc2:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801efd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801ecc6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ecc8:	9205      	str	r2, [sp, #20]
 801ecca:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ecce:	9101      	str	r1, [sp, #4]
 801ecd0:	6841      	ldr	r1, [r0, #4]
 801ecd2:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801ecd6:	fb01 2404 	mla	r4, r1, r4, r2
 801ecda:	6802      	ldr	r2, [r0, #0]
 801ecdc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ece0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ece4:	3201      	adds	r2, #1
 801ece6:	f022 0201 	bic.w	r2, r2, #1
 801ecea:	9202      	str	r2, [sp, #8]
 801ecec:	f8db 2000 	ldr.w	r2, [fp]
 801ecf0:	9203      	str	r2, [sp, #12]
 801ecf2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ecf6:	9a01      	ldr	r2, [sp, #4]
 801ecf8:	2a00      	cmp	r2, #0
 801ecfa:	dc03      	bgt.n	801ed04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ecfc:	9a05      	ldr	r2, [sp, #20]
 801ecfe:	2a00      	cmp	r2, #0
 801ed00:	f340 8162 	ble.w	801efc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ed04:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ed06:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801ed0a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801ed0e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ed12:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ed14:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ed18:	2b00      	cmp	r3, #0
 801ed1a:	dd0e      	ble.n	801ed3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ed1c:	1402      	asrs	r2, r0, #16
 801ed1e:	d405      	bmi.n	801ed2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ed20:	42ba      	cmp	r2, r7
 801ed22:	da03      	bge.n	801ed2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ed24:	140a      	asrs	r2, r1, #16
 801ed26:	d401      	bmi.n	801ed2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ed28:	42b2      	cmp	r2, r6
 801ed2a:	db07      	blt.n	801ed3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ed2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ed2e:	4410      	add	r0, r2
 801ed30:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ed32:	3b01      	subs	r3, #1
 801ed34:	4411      	add	r1, r2
 801ed36:	3402      	adds	r4, #2
 801ed38:	e7ee      	b.n	801ed18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ed3a:	d017      	beq.n	801ed6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ed3c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ed3e:	1e5a      	subs	r2, r3, #1
 801ed40:	fb05 0502 	mla	r5, r5, r2, r0
 801ed44:	142d      	asrs	r5, r5, #16
 801ed46:	d409      	bmi.n	801ed5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ed48:	42bd      	cmp	r5, r7
 801ed4a:	da07      	bge.n	801ed5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ed4c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ed4e:	fb05 1202 	mla	r2, r5, r2, r1
 801ed52:	1412      	asrs	r2, r2, #16
 801ed54:	d402      	bmi.n	801ed5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ed56:	42b2      	cmp	r2, r6
 801ed58:	f2c0 80c3 	blt.w	801eee2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801ed5c:	2500      	movs	r5, #0
 801ed5e:	195a      	adds	r2, r3, r5
 801ed60:	2a00      	cmp	r2, #0
 801ed62:	dc3f      	bgt.n	801ede4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ed64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ed68:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ed6c:	9b01      	ldr	r3, [sp, #4]
 801ed6e:	2b00      	cmp	r3, #0
 801ed70:	f340 812a 	ble.w	801efc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ed74:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ed78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ed7c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ed80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ed82:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ed86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ed8a:	eeb0 6a62 	vmov.f32	s12, s5
 801ed8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ed92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ed96:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ed9a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ed9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eda2:	eeb0 6a43 	vmov.f32	s12, s6
 801eda6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801edaa:	ee12 2a90 	vmov	r2, s5
 801edae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801edb2:	fb92 f3f3 	sdiv	r3, r2, r3
 801edb6:	ee13 2a10 	vmov	r2, s6
 801edba:	9313      	str	r3, [sp, #76]	; 0x4c
 801edbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801edbe:	fb92 f3f3 	sdiv	r3, r2, r3
 801edc2:	9314      	str	r3, [sp, #80]	; 0x50
 801edc4:	9b01      	ldr	r3, [sp, #4]
 801edc6:	9a05      	ldr	r2, [sp, #20]
 801edc8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801edcc:	3b01      	subs	r3, #1
 801edce:	9301      	str	r3, [sp, #4]
 801edd0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801edd4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801edd6:	eeb0 3a67 	vmov.f32	s6, s15
 801edda:	bf08      	it	eq
 801eddc:	4613      	moveq	r3, r2
 801edde:	eef0 2a47 	vmov.f32	s5, s14
 801ede2:	e788      	b.n	801ecf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ede4:	1406      	asrs	r6, r0, #16
 801ede6:	d42c      	bmi.n	801ee42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ede8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801edec:	42b2      	cmp	r2, r6
 801edee:	dd28      	ble.n	801ee42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801edf0:	140f      	asrs	r7, r1, #16
 801edf2:	d426      	bmi.n	801ee42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801edf4:	f8db 200c 	ldr.w	r2, [fp, #12]
 801edf8:	42ba      	cmp	r2, r7
 801edfa:	dd22      	ble.n	801ee42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801edfc:	9a02      	ldr	r2, [sp, #8]
 801edfe:	fb07 6602 	mla	r6, r7, r2, r6
 801ee02:	0872      	lsrs	r2, r6, #1
 801ee04:	9f03      	ldr	r7, [sp, #12]
 801ee06:	5cba      	ldrb	r2, [r7, r2]
 801ee08:	07f6      	lsls	r6, r6, #31
 801ee0a:	bf54      	ite	pl
 801ee0c:	f002 020f 	andpl.w	r2, r2, #15
 801ee10:	1112      	asrmi	r2, r2, #4
 801ee12:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ee16:	b2d2      	uxtb	r2, r2
 801ee18:	2aff      	cmp	r2, #255	; 0xff
 801ee1a:	d118      	bne.n	801ee4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801ee1c:	f8d8 2000 	ldr.w	r2, [r8]
 801ee20:	f06f 0601 	mvn.w	r6, #1
 801ee24:	fb06 f705 	mul.w	r7, r6, r5
 801ee28:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ee2c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ee30:	0956      	lsrs	r6, r2, #5
 801ee32:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ee36:	ea4c 0606 	orr.w	r6, ip, r6
 801ee3a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ee3e:	4316      	orrs	r6, r2
 801ee40:	53e6      	strh	r6, [r4, r7]
 801ee42:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ee44:	4410      	add	r0, r2
 801ee46:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ee48:	3d01      	subs	r5, #1
 801ee4a:	4411      	add	r1, r2
 801ee4c:	e787      	b.n	801ed5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ee4e:	2a00      	cmp	r2, #0
 801ee50:	d0f7      	beq.n	801ee42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee52:	f06f 0601 	mvn.w	r6, #1
 801ee56:	436e      	muls	r6, r5
 801ee58:	f8d8 c000 	ldr.w	ip, [r8]
 801ee5c:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ee60:	9604      	str	r6, [sp, #16]
 801ee62:	fa1f f982 	uxth.w	r9, r2
 801ee66:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ee6a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ee6e:	43d2      	mvns	r2, r2
 801ee70:	b2d2      	uxtb	r2, r2
 801ee72:	fb16 f609 	smulbb	r6, r6, r9
 801ee76:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ee7a:	fb07 6702 	mla	r7, r7, r2, r6
 801ee7e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801ee82:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ee86:	fa5f fc8c 	uxtb.w	ip, ip
 801ee8a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ee8e:	fa5f fe8e 	uxtb.w	lr, lr
 801ee92:	fb1c fc09 	smulbb	ip, ip, r9
 801ee96:	fb0e cc02 	mla	ip, lr, r2, ip
 801ee9a:	b2bf      	uxth	r7, r7
 801ee9c:	fb1a fa09 	smulbb	sl, sl, r9
 801eea0:	fa1f fc8c 	uxth.w	ip, ip
 801eea4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801eea8:	fb06 a602 	mla	r6, r6, r2, sl
 801eeac:	1c7a      	adds	r2, r7, #1
 801eeae:	f10c 0a01 	add.w	sl, ip, #1
 801eeb2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801eeb6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801eeba:	b2b6      	uxth	r6, r6
 801eebc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eec0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801eec4:	ea4a 0707 	orr.w	r7, sl, r7
 801eec8:	f106 0a01 	add.w	sl, r6, #1
 801eecc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801eed0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eed4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801eed8:	9a04      	ldr	r2, [sp, #16]
 801eeda:	ea47 070a 	orr.w	r7, r7, sl
 801eede:	52a7      	strh	r7, [r4, r2]
 801eee0:	e7af      	b.n	801ee42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eee2:	f04f 0e00 	mov.w	lr, #0
 801eee6:	eba3 020e 	sub.w	r2, r3, lr
 801eeea:	2a00      	cmp	r2, #0
 801eeec:	f77f af3a 	ble.w	801ed64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801eef0:	9e02      	ldr	r6, [sp, #8]
 801eef2:	1402      	asrs	r2, r0, #16
 801eef4:	140d      	asrs	r5, r1, #16
 801eef6:	fb06 2505 	mla	r5, r6, r5, r2
 801eefa:	086a      	lsrs	r2, r5, #1
 801eefc:	9e03      	ldr	r6, [sp, #12]
 801eefe:	5cb2      	ldrb	r2, [r6, r2]
 801ef00:	07ed      	lsls	r5, r5, #31
 801ef02:	bf54      	ite	pl
 801ef04:	f002 020f 	andpl.w	r2, r2, #15
 801ef08:	1112      	asrmi	r2, r2, #4
 801ef0a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ef0e:	b2d2      	uxtb	r2, r2
 801ef10:	2aff      	cmp	r2, #255	; 0xff
 801ef12:	d115      	bne.n	801ef40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ef14:	f8d8 5000 	ldr.w	r5, [r8]
 801ef18:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ef1c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ef20:	096a      	lsrs	r2, r5, #5
 801ef22:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ef26:	4332      	orrs	r2, r6
 801ef28:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ef2c:	432a      	orrs	r2, r5
 801ef2e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ef32:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ef34:	4410      	add	r0, r2
 801ef36:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ef38:	f10e 0e01 	add.w	lr, lr, #1
 801ef3c:	4411      	add	r1, r2
 801ef3e:	e7d2      	b.n	801eee6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ef40:	2a00      	cmp	r2, #0
 801ef42:	d0f6      	beq.n	801ef32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ef44:	f8d8 7000 	ldr.w	r7, [r8]
 801ef48:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ef4c:	fa1f f982 	uxth.w	r9, r2
 801ef50:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ef54:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ef58:	43d2      	mvns	r2, r2
 801ef5a:	b2d2      	uxtb	r2, r2
 801ef5c:	fb15 f509 	smulbb	r5, r5, r9
 801ef60:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ef64:	fb06 5602 	mla	r6, r6, r2, r5
 801ef68:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801ef6c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ef70:	b2ff      	uxtb	r7, r7
 801ef72:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ef76:	fa5f fc8c 	uxtb.w	ip, ip
 801ef7a:	fb17 f709 	smulbb	r7, r7, r9
 801ef7e:	fb0c 7702 	mla	r7, ip, r2, r7
 801ef82:	b2b6      	uxth	r6, r6
 801ef84:	fb1a fa09 	smulbb	sl, sl, r9
 801ef88:	b2bf      	uxth	r7, r7
 801ef8a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ef8e:	fb05 a502 	mla	r5, r5, r2, sl
 801ef92:	1c72      	adds	r2, r6, #1
 801ef94:	f107 0a01 	add.w	sl, r7, #1
 801ef98:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ef9c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801efa0:	b2ad      	uxth	r5, r5
 801efa2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801efa6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801efaa:	ea4a 0606 	orr.w	r6, sl, r6
 801efae:	f105 0a01 	add.w	sl, r5, #1
 801efb2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801efb6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801efba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801efbe:	ea46 060a 	orr.w	r6, r6, sl
 801efc2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801efc6:	e7b4      	b.n	801ef32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801efc8:	b007      	add	sp, #28
 801efca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801efce:	bf00      	nop
 801efd0:	2001e1e8 	.word	0x2001e1e8

0801efd4 <_ZN8touchgfx8LCD16bppD1Ev>:
 801efd4:	4770      	bx	lr

0801efd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801efd6:	4770      	bx	lr

0801efd8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801efd8:	4770      	bx	lr

0801efda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801efda:	4770      	bx	lr

0801efdc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801efdc:	4770      	bx	lr

0801efde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801efde:	4770      	bx	lr

0801efe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801efe0:	4770      	bx	lr

0801efe2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801efe2:	4770      	bx	lr

0801efe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801efe4:	4770      	bx	lr

0801efe6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801efe6:	4770      	bx	lr

0801efe8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801efe8:	4770      	bx	lr

0801efea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801efea:	4770      	bx	lr

0801efec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801efec:	4770      	bx	lr

0801efee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801efee:	4770      	bx	lr

0801eff0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801eff0:	4770      	bx	lr

0801eff2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eff2:	4770      	bx	lr

0801eff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eff4:	4770      	bx	lr

0801eff6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eff6:	4770      	bx	lr

0801eff8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eff8:	4770      	bx	lr

0801effa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801effa:	4770      	bx	lr

0801effc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801effc:	4770      	bx	lr

0801effe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801effe:	4770      	bx	lr

0801f000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801f000:	4770      	bx	lr

0801f002 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801f002:	4770      	bx	lr

0801f004 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801f004:	4770      	bx	lr

0801f006 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801f006:	4770      	bx	lr

0801f008 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801f008:	4770      	bx	lr

0801f00a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801f00a:	4770      	bx	lr

0801f00c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801f00c:	4770      	bx	lr
	...

0801f010 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801f010:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f014:	4692      	mov	sl, r2
 801f016:	4a22      	ldr	r2, [pc, #136]	; (801f0a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x90>)
 801f018:	6812      	ldr	r2, [r2, #0]
 801f01a:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801f01e:	2a02      	cmp	r2, #2
 801f020:	b088      	sub	sp, #32
 801f022:	4605      	mov	r5, r0
 801f024:	4689      	mov	r9, r1
 801f026:	d106      	bne.n	801f036 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 801f028:	4b1e      	ldr	r3, [pc, #120]	; (801f0a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x94>)
 801f02a:	4a1f      	ldr	r2, [pc, #124]	; (801f0a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801f02c:	f44f 7158 	mov.w	r1, #864	; 0x360
 801f030:	481e      	ldr	r0, [pc, #120]	; (801f0ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x9c>)
 801f032:	f00c ffc7 	bl	802bfc4 <__assert_func>
 801f036:	ac08      	add	r4, sp, #32
 801f038:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801f03c:	4620      	mov	r0, r4
 801f03e:	f7fd fce3 	bl	801ca08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801f042:	682b      	ldr	r3, [r5, #0]
 801f044:	4606      	mov	r6, r0
 801f046:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f048:	4628      	mov	r0, r5
 801f04a:	4798      	blx	r3
 801f04c:	4286      	cmp	r6, r0
 801f04e:	d004      	beq.n	801f05a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 801f050:	4b17      	ldr	r3, [pc, #92]	; (801f0b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 801f052:	4a15      	ldr	r2, [pc, #84]	; (801f0a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801f054:	f240 3162 	movw	r1, #866	; 0x362
 801f058:	e7ea      	b.n	801f030 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801f05a:	4620      	mov	r0, r4
 801f05c:	f7fd fc4a 	bl	801c8f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801f060:	4606      	mov	r6, r0
 801f062:	b920      	cbnz	r0, 801f06e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801f064:	4b13      	ldr	r3, [pc, #76]	; (801f0b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa4>)
 801f066:	4a10      	ldr	r2, [pc, #64]	; (801f0a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801f068:	f44f 7159 	mov.w	r1, #868	; 0x364
 801f06c:	e7e0      	b.n	801f030 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801f06e:	682b      	ldr	r3, [r5, #0]
 801f070:	4620      	mov	r0, r4
 801f072:	f8d3 8018 	ldr.w	r8, [r3, #24]
 801f076:	f7fd fb21 	bl	801c6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f07a:	4607      	mov	r7, r0
 801f07c:	4620      	mov	r0, r4
 801f07e:	f7fd fb61 	bl	801c744 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f082:	b23f      	sxth	r7, r7
 801f084:	b200      	sxth	r0, r0
 801f086:	9002      	str	r0, [sp, #8]
 801f088:	e9cd 6700 	strd	r6, r7, [sp]
 801f08c:	a806      	add	r0, sp, #24
 801f08e:	4653      	mov	r3, sl
 801f090:	464a      	mov	r2, r9
 801f092:	4629      	mov	r1, r5
 801f094:	47c0      	blx	r8
 801f096:	4630      	mov	r0, r6
 801f098:	b008      	add	sp, #32
 801f09a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f09e:	bf00      	nop
 801f0a0:	2001e1c0 	.word	0x2001e1c0
 801f0a4:	080359da 	.word	0x080359da
 801f0a8:	080362d7 	.word	0x080362d7
 801f0ac:	08035a8c 	.word	0x08035a8c
 801f0b0:	08035abe 	.word	0x08035abe
 801f0b4:	08035b13 	.word	0x08035b13

0801f0b8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801f0b8:	b508      	push	{r3, lr}
 801f0ba:	4b06      	ldr	r3, [pc, #24]	; (801f0d4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 801f0bc:	8818      	ldrh	r0, [r3, #0]
 801f0be:	b928      	cbnz	r0, 801f0cc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 801f0c0:	4b05      	ldr	r3, [pc, #20]	; (801f0d8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801f0c2:	4a06      	ldr	r2, [pc, #24]	; (801f0dc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801f0c4:	4806      	ldr	r0, [pc, #24]	; (801f0e0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801f0c6:	2153      	movs	r1, #83	; 0x53
 801f0c8:	f00c ff7c 	bl	802bfc4 <__assert_func>
 801f0cc:	0040      	lsls	r0, r0, #1
 801f0ce:	b280      	uxth	r0, r0
 801f0d0:	bd08      	pop	{r3, pc}
 801f0d2:	bf00      	nop
 801f0d4:	2001e1ba 	.word	0x2001e1ba
 801f0d8:	08035b82 	.word	0x08035b82
 801f0dc:	08036194 	.word	0x08036194
 801f0e0:	08035bc4 	.word	0x08035bc4

0801f0e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801f0e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801f0e8:	2300      	movs	r3, #0
 801f0ea:	9300      	str	r3, [sp, #0]
 801f0ec:	4b3d      	ldr	r3, [pc, #244]	; (801f1e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801f0ee:	781b      	ldrb	r3, [r3, #0]
 801f0f0:	2b00      	cmp	r3, #0
 801f0f2:	d137      	bne.n	801f164 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801f0f4:	4a3c      	ldr	r2, [pc, #240]	; (801f1e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801f0f6:	f9b2 2000 	ldrsh.w	r2, [r2]
 801f0fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 801f0fe:	2b00      	cmp	r3, #0
 801f100:	d132      	bne.n	801f168 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801f102:	4b3a      	ldr	r3, [pc, #232]	; (801f1ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801f104:	f9b3 3000 	ldrsh.w	r3, [r3]
 801f108:	6808      	ldr	r0, [r1, #0]
 801f10a:	6849      	ldr	r1, [r1, #4]
 801f10c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801f110:	ac02      	add	r4, sp, #8
 801f112:	ab02      	add	r3, sp, #8
 801f114:	c303      	stmia	r3!, {r0, r1}
 801f116:	4669      	mov	r1, sp
 801f118:	4620      	mov	r0, r4
 801f11a:	f7f9 ff8b 	bl	8019034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f11e:	4668      	mov	r0, sp
 801f120:	f7f9 ff60 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f124:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801f128:	f8bd 2000 	ldrh.w	r2, [sp]
 801f12c:	4d30      	ldr	r5, [pc, #192]	; (801f1f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801f12e:	4413      	add	r3, r2
 801f130:	f8ad 3008 	strh.w	r3, [sp, #8]
 801f134:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801f138:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801f13c:	6828      	ldr	r0, [r5, #0]
 801f13e:	4413      	add	r3, r2
 801f140:	f8ad 300a 	strh.w	r3, [sp, #10]
 801f144:	6803      	ldr	r3, [r0, #0]
 801f146:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f148:	4798      	blx	r3
 801f14a:	f010 0f01 	tst.w	r0, #1
 801f14e:	462f      	mov	r7, r5
 801f150:	d00c      	beq.n	801f16c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801f152:	6828      	ldr	r0, [r5, #0]
 801f154:	6803      	ldr	r3, [r0, #0]
 801f156:	e894 0006 	ldmia.w	r4, {r1, r2}
 801f15a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801f15c:	4798      	blx	r3
 801f15e:	b004      	add	sp, #16
 801f160:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f164:	4a21      	ldr	r2, [pc, #132]	; (801f1ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801f166:	e7c6      	b.n	801f0f6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801f168:	4b1f      	ldr	r3, [pc, #124]	; (801f1e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801f16a:	e7cb      	b.n	801f104 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801f16c:	6838      	ldr	r0, [r7, #0]
 801f16e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801f172:	6803      	ldr	r3, [r0, #0]
 801f174:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801f178:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801f17a:	4798      	blx	r3
 801f17c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801f180:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f184:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801f188:	fb16 3602 	smlabb	r6, r6, r2, r3
 801f18c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801f190:	6838      	ldr	r0, [r7, #0]
 801f192:	6803      	ldr	r3, [r0, #0]
 801f194:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f196:	4798      	blx	r3
 801f198:	4a13      	ldr	r2, [pc, #76]	; (801f1e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801f19a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801f19e:	8813      	ldrh	r3, [r2, #0]
 801f1a0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801f1a4:	fb03 1404 	mla	r4, r3, r4, r1
 801f1a8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f1ac:	435d      	muls	r5, r3
 801f1ae:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f1b2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801f1b6:	4691      	mov	r9, r2
 801f1b8:	6838      	ldr	r0, [r7, #0]
 801f1ba:	42ac      	cmp	r4, r5
 801f1bc:	6803      	ldr	r3, [r0, #0]
 801f1be:	d20e      	bcs.n	801f1de <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801f1c0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801f1c4:	4632      	mov	r2, r6
 801f1c6:	4643      	mov	r3, r8
 801f1c8:	4621      	mov	r1, r4
 801f1ca:	47d0      	blx	sl
 801f1cc:	f8b9 3000 	ldrh.w	r3, [r9]
 801f1d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f1d4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801f1d8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f1dc:	e7ec      	b.n	801f1b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801f1de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f1e0:	4798      	blx	r3
 801f1e2:	e7bc      	b.n	801f15e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801f1e4:	2001e1b8 	.word	0x2001e1b8
 801f1e8:	2001e1ba 	.word	0x2001e1ba
 801f1ec:	2001e1bc 	.word	0x2001e1bc
 801f1f0:	2001e1c0 	.word	0x2001e1c0

0801f1f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801f1f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f1f8:	b08b      	sub	sp, #44	; 0x2c
 801f1fa:	460f      	mov	r7, r1
 801f1fc:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801f200:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801f204:	4616      	mov	r6, r2
 801f206:	f1bb 0f00 	cmp.w	fp, #0
 801f20a:	d049      	beq.n	801f2a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801f20c:	6810      	ldr	r0, [r2, #0]
 801f20e:	6851      	ldr	r1, [r2, #4]
 801f210:	ad06      	add	r5, sp, #24
 801f212:	c503      	stmia	r5!, {r0, r1}
 801f214:	6818      	ldr	r0, [r3, #0]
 801f216:	6859      	ldr	r1, [r3, #4]
 801f218:	ad08      	add	r5, sp, #32
 801f21a:	c503      	stmia	r5!, {r0, r1}
 801f21c:	a806      	add	r0, sp, #24
 801f21e:	f7f9 fee1 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f222:	4631      	mov	r1, r6
 801f224:	a808      	add	r0, sp, #32
 801f226:	f7f9 ff05 	bl	8019034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f22a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801f22e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801f232:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801f236:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801f23a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801f23e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801f242:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801f246:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801f24a:	4f5f      	ldr	r7, [pc, #380]	; (801f3c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801f24c:	440a      	add	r2, r1
 801f24e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801f252:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801f256:	6838      	ldr	r0, [r7, #0]
 801f258:	4413      	add	r3, r2
 801f25a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801f25e:	6803      	ldr	r3, [r0, #0]
 801f260:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f262:	4798      	blx	r3
 801f264:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801f268:	46b9      	mov	r9, r7
 801f26a:	d01c      	beq.n	801f2a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 801f26c:	f010 0f04 	tst.w	r0, #4
 801f270:	d01d      	beq.n	801f2ae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801f272:	f8d9 0000 	ldr.w	r0, [r9]
 801f276:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801f27a:	6801      	ldr	r1, [r0, #0]
 801f27c:	f8cd b00c 	str.w	fp, [sp, #12]
 801f280:	2700      	movs	r7, #0
 801f282:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801f286:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801f28a:	9402      	str	r4, [sp, #8]
 801f28c:	b2ad      	uxth	r5, r5
 801f28e:	fa1f f488 	uxth.w	r4, r8
 801f292:	9501      	str	r5, [sp, #4]
 801f294:	9400      	str	r4, [sp, #0]
 801f296:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801f298:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f29c:	4631      	mov	r1, r6
 801f29e:	47a0      	blx	r4
 801f2a0:	b00b      	add	sp, #44	; 0x2c
 801f2a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f2a6:	b914      	cbnz	r4, 801f2ae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801f2a8:	f010 0f01 	tst.w	r0, #1
 801f2ac:	e7e0      	b.n	801f270 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801f2ae:	f8d9 0000 	ldr.w	r0, [r9]
 801f2b2:	6803      	ldr	r3, [r0, #0]
 801f2b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f2b6:	4798      	blx	r3
 801f2b8:	4b44      	ldr	r3, [pc, #272]	; (801f3cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801f2ba:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801f2be:	881a      	ldrh	r2, [r3, #0]
 801f2c0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801f2c4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801f2c8:	fb02 1404 	mla	r4, r2, r4, r1
 801f2cc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f2d0:	469a      	mov	sl, r3
 801f2d2:	fb05 f502 	mul.w	r5, r5, r2
 801f2d6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801f2da:	d059      	beq.n	801f390 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801f2dc:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801f2e0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f2e4:	fa1f f28b 	uxth.w	r2, fp
 801f2e8:	fa1f f989 	uxth.w	r9, r9
 801f2ec:	469e      	mov	lr, r3
 801f2ee:	42ac      	cmp	r4, r5
 801f2f0:	d264      	bcs.n	801f3bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801f2f2:	eb04 0a07 	add.w	sl, r4, r7
 801f2f6:	4554      	cmp	r4, sl
 801f2f8:	d23d      	bcs.n	801f376 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801f2fa:	8821      	ldrh	r1, [r4, #0]
 801f2fc:	f836 3b02 	ldrh.w	r3, [r6], #2
 801f300:	1208      	asrs	r0, r1, #8
 801f302:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f306:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f30a:	fb10 f009 	smulbb	r0, r0, r9
 801f30e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801f312:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f316:	00c9      	lsls	r1, r1, #3
 801f318:	fb0c 0c02 	mla	ip, ip, r2, r0
 801f31c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f320:	10d8      	asrs	r0, r3, #3
 801f322:	b2c9      	uxtb	r1, r1
 801f324:	00db      	lsls	r3, r3, #3
 801f326:	fa1f fc8c 	uxth.w	ip, ip
 801f32a:	fb1b fb09 	smulbb	fp, fp, r9
 801f32e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f332:	b2db      	uxtb	r3, r3
 801f334:	fb11 f109 	smulbb	r1, r1, r9
 801f338:	fb00 b002 	mla	r0, r0, r2, fp
 801f33c:	fb03 1302 	mla	r3, r3, r2, r1
 801f340:	f10c 0b01 	add.w	fp, ip, #1
 801f344:	b29b      	uxth	r3, r3
 801f346:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801f34a:	b280      	uxth	r0, r0
 801f34c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801f350:	f103 0c01 	add.w	ip, r3, #1
 801f354:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f358:	1c43      	adds	r3, r0, #1
 801f35a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f35e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f362:	0940      	lsrs	r0, r0, #5
 801f364:	ea4c 0c0b 	orr.w	ip, ip, fp
 801f368:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f36c:	ea4c 0c00 	orr.w	ip, ip, r0
 801f370:	f824 cb02 	strh.w	ip, [r4], #2
 801f374:	e7bf      	b.n	801f2f6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801f376:	f8be 3000 	ldrh.w	r3, [lr]
 801f37a:	eba3 0308 	sub.w	r3, r3, r8
 801f37e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f382:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801f386:	eba3 0308 	sub.w	r3, r3, r8
 801f38a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f38e:	e7ae      	b.n	801f2ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801f390:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f394:	f8d9 0000 	ldr.w	r0, [r9]
 801f398:	42ac      	cmp	r4, r5
 801f39a:	6803      	ldr	r3, [r0, #0]
 801f39c:	d20e      	bcs.n	801f3bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801f39e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801f3a2:	4632      	mov	r2, r6
 801f3a4:	463b      	mov	r3, r7
 801f3a6:	4621      	mov	r1, r4
 801f3a8:	47c0      	blx	r8
 801f3aa:	f8ba 3000 	ldrh.w	r3, [sl]
 801f3ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f3b2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801f3b6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f3ba:	e7eb      	b.n	801f394 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801f3bc:	4b02      	ldr	r3, [pc, #8]	; (801f3c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801f3be:	6818      	ldr	r0, [r3, #0]
 801f3c0:	6803      	ldr	r3, [r0, #0]
 801f3c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f3c4:	4798      	blx	r3
 801f3c6:	e76b      	b.n	801f2a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801f3c8:	2001e1c0 	.word	0x2001e1c0
 801f3cc:	2001e1ba 	.word	0x2001e1ba

0801f3d0 <_ZN8touchgfx8LCD16bppD0Ev>:
 801f3d0:	b510      	push	{r4, lr}
 801f3d2:	2178      	movs	r1, #120	; 0x78
 801f3d4:	4604      	mov	r4, r0
 801f3d6:	f00b fea8 	bl	802b12a <_ZdlPvj>
 801f3da:	4620      	mov	r0, r4
 801f3dc:	bd10      	pop	{r4, pc}

0801f3de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f3de:	b510      	push	{r4, lr}
 801f3e0:	2104      	movs	r1, #4
 801f3e2:	4604      	mov	r4, r0
 801f3e4:	f00b fea1 	bl	802b12a <_ZdlPvj>
 801f3e8:	4620      	mov	r0, r4
 801f3ea:	bd10      	pop	{r4, pc}

0801f3ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f3ec:	b510      	push	{r4, lr}
 801f3ee:	2104      	movs	r1, #4
 801f3f0:	4604      	mov	r4, r0
 801f3f2:	f00b fe9a 	bl	802b12a <_ZdlPvj>
 801f3f6:	4620      	mov	r0, r4
 801f3f8:	bd10      	pop	{r4, pc}

0801f3fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f3fa:	b510      	push	{r4, lr}
 801f3fc:	2104      	movs	r1, #4
 801f3fe:	4604      	mov	r4, r0
 801f400:	f00b fe93 	bl	802b12a <_ZdlPvj>
 801f404:	4620      	mov	r0, r4
 801f406:	bd10      	pop	{r4, pc}

0801f408 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f408:	b510      	push	{r4, lr}
 801f40a:	2104      	movs	r1, #4
 801f40c:	4604      	mov	r4, r0
 801f40e:	f00b fe8c 	bl	802b12a <_ZdlPvj>
 801f412:	4620      	mov	r0, r4
 801f414:	bd10      	pop	{r4, pc}

0801f416 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f416:	b510      	push	{r4, lr}
 801f418:	2104      	movs	r1, #4
 801f41a:	4604      	mov	r4, r0
 801f41c:	f00b fe85 	bl	802b12a <_ZdlPvj>
 801f420:	4620      	mov	r0, r4
 801f422:	bd10      	pop	{r4, pc}

0801f424 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801f424:	b510      	push	{r4, lr}
 801f426:	2104      	movs	r1, #4
 801f428:	4604      	mov	r4, r0
 801f42a:	f00b fe7e 	bl	802b12a <_ZdlPvj>
 801f42e:	4620      	mov	r0, r4
 801f430:	bd10      	pop	{r4, pc}

0801f432 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f432:	b510      	push	{r4, lr}
 801f434:	2104      	movs	r1, #4
 801f436:	4604      	mov	r4, r0
 801f438:	f00b fe77 	bl	802b12a <_ZdlPvj>
 801f43c:	4620      	mov	r0, r4
 801f43e:	bd10      	pop	{r4, pc}

0801f440 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801f440:	b510      	push	{r4, lr}
 801f442:	2104      	movs	r1, #4
 801f444:	4604      	mov	r4, r0
 801f446:	f00b fe70 	bl	802b12a <_ZdlPvj>
 801f44a:	4620      	mov	r0, r4
 801f44c:	bd10      	pop	{r4, pc}

0801f44e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f44e:	b510      	push	{r4, lr}
 801f450:	2104      	movs	r1, #4
 801f452:	4604      	mov	r4, r0
 801f454:	f00b fe69 	bl	802b12a <_ZdlPvj>
 801f458:	4620      	mov	r0, r4
 801f45a:	bd10      	pop	{r4, pc}

0801f45c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f45c:	b510      	push	{r4, lr}
 801f45e:	2104      	movs	r1, #4
 801f460:	4604      	mov	r4, r0
 801f462:	f00b fe62 	bl	802b12a <_ZdlPvj>
 801f466:	4620      	mov	r0, r4
 801f468:	bd10      	pop	{r4, pc}

0801f46a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f46a:	b510      	push	{r4, lr}
 801f46c:	2104      	movs	r1, #4
 801f46e:	4604      	mov	r4, r0
 801f470:	f00b fe5b 	bl	802b12a <_ZdlPvj>
 801f474:	4620      	mov	r0, r4
 801f476:	bd10      	pop	{r4, pc}

0801f478 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f478:	b510      	push	{r4, lr}
 801f47a:	2104      	movs	r1, #4
 801f47c:	4604      	mov	r4, r0
 801f47e:	f00b fe54 	bl	802b12a <_ZdlPvj>
 801f482:	4620      	mov	r0, r4
 801f484:	bd10      	pop	{r4, pc}

0801f486 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f486:	b510      	push	{r4, lr}
 801f488:	2104      	movs	r1, #4
 801f48a:	4604      	mov	r4, r0
 801f48c:	f00b fe4d 	bl	802b12a <_ZdlPvj>
 801f490:	4620      	mov	r0, r4
 801f492:	bd10      	pop	{r4, pc}

0801f494 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f494:	b510      	push	{r4, lr}
 801f496:	2104      	movs	r1, #4
 801f498:	4604      	mov	r4, r0
 801f49a:	f00b fe46 	bl	802b12a <_ZdlPvj>
 801f49e:	4620      	mov	r0, r4
 801f4a0:	bd10      	pop	{r4, pc}

0801f4a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f4a2:	b510      	push	{r4, lr}
 801f4a4:	2104      	movs	r1, #4
 801f4a6:	4604      	mov	r4, r0
 801f4a8:	f00b fe3f 	bl	802b12a <_ZdlPvj>
 801f4ac:	4620      	mov	r0, r4
 801f4ae:	bd10      	pop	{r4, pc}

0801f4b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f4b0:	b510      	push	{r4, lr}
 801f4b2:	2104      	movs	r1, #4
 801f4b4:	4604      	mov	r4, r0
 801f4b6:	f00b fe38 	bl	802b12a <_ZdlPvj>
 801f4ba:	4620      	mov	r0, r4
 801f4bc:	bd10      	pop	{r4, pc}

0801f4be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f4be:	b510      	push	{r4, lr}
 801f4c0:	2104      	movs	r1, #4
 801f4c2:	4604      	mov	r4, r0
 801f4c4:	f00b fe31 	bl	802b12a <_ZdlPvj>
 801f4c8:	4620      	mov	r0, r4
 801f4ca:	bd10      	pop	{r4, pc}

0801f4cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f4cc:	b510      	push	{r4, lr}
 801f4ce:	2104      	movs	r1, #4
 801f4d0:	4604      	mov	r4, r0
 801f4d2:	f00b fe2a 	bl	802b12a <_ZdlPvj>
 801f4d6:	4620      	mov	r0, r4
 801f4d8:	bd10      	pop	{r4, pc}

0801f4da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f4da:	b510      	push	{r4, lr}
 801f4dc:	2104      	movs	r1, #4
 801f4de:	4604      	mov	r4, r0
 801f4e0:	f00b fe23 	bl	802b12a <_ZdlPvj>
 801f4e4:	4620      	mov	r0, r4
 801f4e6:	bd10      	pop	{r4, pc}

0801f4e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f4e8:	b510      	push	{r4, lr}
 801f4ea:	2104      	movs	r1, #4
 801f4ec:	4604      	mov	r4, r0
 801f4ee:	f00b fe1c 	bl	802b12a <_ZdlPvj>
 801f4f2:	4620      	mov	r0, r4
 801f4f4:	bd10      	pop	{r4, pc}

0801f4f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f4f6:	b510      	push	{r4, lr}
 801f4f8:	2104      	movs	r1, #4
 801f4fa:	4604      	mov	r4, r0
 801f4fc:	f00b fe15 	bl	802b12a <_ZdlPvj>
 801f500:	4620      	mov	r0, r4
 801f502:	bd10      	pop	{r4, pc}

0801f504 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f504:	b510      	push	{r4, lr}
 801f506:	2104      	movs	r1, #4
 801f508:	4604      	mov	r4, r0
 801f50a:	f00b fe0e 	bl	802b12a <_ZdlPvj>
 801f50e:	4620      	mov	r0, r4
 801f510:	bd10      	pop	{r4, pc}

0801f512 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f512:	b510      	push	{r4, lr}
 801f514:	2104      	movs	r1, #4
 801f516:	4604      	mov	r4, r0
 801f518:	f00b fe07 	bl	802b12a <_ZdlPvj>
 801f51c:	4620      	mov	r0, r4
 801f51e:	bd10      	pop	{r4, pc}

0801f520 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f520:	b510      	push	{r4, lr}
 801f522:	2104      	movs	r1, #4
 801f524:	4604      	mov	r4, r0
 801f526:	f00b fe00 	bl	802b12a <_ZdlPvj>
 801f52a:	4620      	mov	r0, r4
 801f52c:	bd10      	pop	{r4, pc}

0801f52e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801f52e:	b510      	push	{r4, lr}
 801f530:	2104      	movs	r1, #4
 801f532:	4604      	mov	r4, r0
 801f534:	f00b fdf9 	bl	802b12a <_ZdlPvj>
 801f538:	4620      	mov	r0, r4
 801f53a:	bd10      	pop	{r4, pc}

0801f53c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801f53c:	b510      	push	{r4, lr}
 801f53e:	2104      	movs	r1, #4
 801f540:	4604      	mov	r4, r0
 801f542:	f00b fdf2 	bl	802b12a <_ZdlPvj>
 801f546:	4620      	mov	r0, r4
 801f548:	bd10      	pop	{r4, pc}

0801f54a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801f54a:	b510      	push	{r4, lr}
 801f54c:	2104      	movs	r1, #4
 801f54e:	4604      	mov	r4, r0
 801f550:	f00b fdeb 	bl	802b12a <_ZdlPvj>
 801f554:	4620      	mov	r0, r4
 801f556:	bd10      	pop	{r4, pc}

0801f558 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801f558:	b510      	push	{r4, lr}
 801f55a:	2104      	movs	r1, #4
 801f55c:	4604      	mov	r4, r0
 801f55e:	f00b fde4 	bl	802b12a <_ZdlPvj>
 801f562:	4620      	mov	r0, r4
 801f564:	bd10      	pop	{r4, pc}
	...

0801f568 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801f568:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f56a:	4606      	mov	r6, r0
 801f56c:	b087      	sub	sp, #28
 801f56e:	460c      	mov	r4, r1
 801f570:	4617      	mov	r7, r2
 801f572:	461d      	mov	r5, r3
 801f574:	b333      	cbz	r3, 801f5c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801f576:	4608      	mov	r0, r1
 801f578:	f7f2 fdf7 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 801f57c:	bb10      	cbnz	r0, 801f5c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801f57e:	6820      	ldr	r0, [r4, #0]
 801f580:	6861      	ldr	r1, [r4, #4]
 801f582:	4c1c      	ldr	r4, [pc, #112]	; (801f5f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801f584:	ab04      	add	r3, sp, #16
 801f586:	c303      	stmia	r3!, {r0, r1}
 801f588:	a804      	add	r0, sp, #16
 801f58a:	f7f9 fd2b 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f58e:	6820      	ldr	r0, [r4, #0]
 801f590:	6803      	ldr	r3, [r0, #0]
 801f592:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f594:	4798      	blx	r3
 801f596:	2dff      	cmp	r5, #255	; 0xff
 801f598:	d016      	beq.n	801f5c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801f59a:	f010 0f08 	tst.w	r0, #8
 801f59e:	6820      	ldr	r0, [r4, #0]
 801f5a0:	d015      	beq.n	801f5ce <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801f5a2:	2400      	movs	r4, #0
 801f5a4:	6801      	ldr	r1, [r0, #0]
 801f5a6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801f5aa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f5ae:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801f5b2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801f5b6:	9401      	str	r4, [sp, #4]
 801f5b8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801f5bc:	9400      	str	r4, [sp, #0]
 801f5be:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801f5c0:	4639      	mov	r1, r7
 801f5c2:	47a0      	blx	r4
 801f5c4:	b007      	add	sp, #28
 801f5c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f5c8:	f010 0f02 	tst.w	r0, #2
 801f5cc:	e7e7      	b.n	801f59e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801f5ce:	6803      	ldr	r3, [r0, #0]
 801f5d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f5d2:	4798      	blx	r3
 801f5d4:	4b08      	ldr	r3, [pc, #32]	; (801f5f8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801f5d6:	881a      	ldrh	r2, [r3, #0]
 801f5d8:	6833      	ldr	r3, [r6, #0]
 801f5da:	e9cd 7500 	strd	r7, r5, [sp]
 801f5de:	4601      	mov	r1, r0
 801f5e0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801f5e2:	4630      	mov	r0, r6
 801f5e4:	ab04      	add	r3, sp, #16
 801f5e6:	47a8      	blx	r5
 801f5e8:	6820      	ldr	r0, [r4, #0]
 801f5ea:	6803      	ldr	r3, [r0, #0]
 801f5ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f5ee:	4798      	blx	r3
 801f5f0:	e7e8      	b.n	801f5c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801f5f2:	bf00      	nop
 801f5f4:	2001e1c0 	.word	0x2001e1c0
 801f5f8:	2001e1ba 	.word	0x2001e1ba

0801f5fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801f5fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f600:	4690      	mov	r8, r2
 801f602:	4a8d      	ldr	r2, [pc, #564]	; (801f838 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>)
 801f604:	6812      	ldr	r2, [r2, #0]
 801f606:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801f60a:	b091      	sub	sp, #68	; 0x44
 801f60c:	2a02      	cmp	r2, #2
 801f60e:	4606      	mov	r6, r0
 801f610:	460d      	mov	r5, r1
 801f612:	461c      	mov	r4, r3
 801f614:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	; 0x6c
 801f618:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f61c:	d106      	bne.n	801f62c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x30>
 801f61e:	4b87      	ldr	r3, [pc, #540]	; (801f83c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x240>)
 801f620:	4a87      	ldr	r2, [pc, #540]	; (801f840 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 801f622:	f240 316b 	movw	r1, #875	; 0x36b
 801f626:	4887      	ldr	r0, [pc, #540]	; (801f844 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>)
 801f628:	f00c fccc 	bl	802bfc4 <__assert_func>
 801f62c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801f62e:	b923      	cbnz	r3, 801f63a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e>
 801f630:	4b85      	ldr	r3, [pc, #532]	; (801f848 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x24c>)
 801f632:	4a83      	ldr	r2, [pc, #524]	; (801f840 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 801f634:	f44f 715b 	mov.w	r1, #876	; 0x36c
 801f638:	e7f5      	b.n	801f626 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x2a>
 801f63a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801f63e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f642:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 801f646:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 801f64a:	4621      	mov	r1, r4
 801f64c:	4648      	mov	r0, r9
 801f64e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801f652:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 801f656:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801f65a:	f7f2 fd43 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 801f65e:	4641      	mov	r1, r8
 801f660:	4648      	mov	r0, r9
 801f662:	f7f2 fd3f 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 801f666:	4a79      	ldr	r2, [pc, #484]	; (801f84c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 801f668:	f8b2 c000 	ldrh.w	ip, [r2]
 801f66c:	4a78      	ldr	r2, [pc, #480]	; (801f850 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x254>)
 801f66e:	8810      	ldrh	r0, [r2, #0]
 801f670:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801f674:	2a00      	cmp	r2, #0
 801f676:	fa0f f18c 	sxth.w	r1, ip
 801f67a:	fa0f fe80 	sxth.w	lr, r0
 801f67e:	da07      	bge.n	801f690 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x94>
 801f680:	f8bd 802c 	ldrh.w	r8, [sp, #44]	; 0x2c
 801f684:	4442      	add	r2, r8
 801f686:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801f68a:	2200      	movs	r2, #0
 801f68c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801f690:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801f694:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801f698:	1a89      	subs	r1, r1, r2
 801f69a:	4588      	cmp	r8, r1
 801f69c:	bfc4      	itt	gt
 801f69e:	ebac 0102 	subgt.w	r1, ip, r2
 801f6a2:	f8ad 102c 	strhgt.w	r1, [sp, #44]	; 0x2c
 801f6a6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801f6aa:	2900      	cmp	r1, #0
 801f6ac:	da07      	bge.n	801f6be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xc2>
 801f6ae:	f8bd 802e 	ldrh.w	r8, [sp, #46]	; 0x2e
 801f6b2:	4441      	add	r1, r8
 801f6b4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801f6b8:	2100      	movs	r1, #0
 801f6ba:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 801f6be:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801f6c2:	f9bd 102e 	ldrsh.w	r1, [sp, #46]	; 0x2e
 801f6c6:	ebae 0e0a 	sub.w	lr, lr, sl
 801f6ca:	4571      	cmp	r1, lr
 801f6cc:	bfc4      	itt	gt
 801f6ce:	eba0 010a 	subgt.w	r1, r0, sl
 801f6d2:	f8ad 102e 	strhgt.w	r1, [sp, #46]	; 0x2e
 801f6d6:	495f      	ldr	r1, [pc, #380]	; (801f854 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x258>)
 801f6d8:	7809      	ldrb	r1, [r1, #0]
 801f6da:	b9a9      	cbnz	r1, 801f708 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x10c>
 801f6dc:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801f6e0:	45e0      	cmp	r8, ip
 801f6e2:	bf14      	ite	ne
 801f6e4:	2300      	movne	r3, #0
 801f6e6:	2301      	moveq	r3, #1
 801f6e8:	4648      	mov	r0, r9
 801f6ea:	9202      	str	r2, [sp, #8]
 801f6ec:	9305      	str	r3, [sp, #20]
 801f6ee:	f7f2 fd3c 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 801f6f2:	9a02      	ldr	r2, [sp, #8]
 801f6f4:	b160      	cbz	r0, 801f710 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x114>
 801f6f6:	2300      	movs	r3, #0
 801f6f8:	8033      	strh	r3, [r6, #0]
 801f6fa:	8073      	strh	r3, [r6, #2]
 801f6fc:	80b3      	strh	r3, [r6, #4]
 801f6fe:	4630      	mov	r0, r6
 801f700:	80f3      	strh	r3, [r6, #6]
 801f702:	b011      	add	sp, #68	; 0x44
 801f704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f708:	f9bd 802e 	ldrsh.w	r8, [sp, #46]	; 0x2e
 801f70c:	4580      	cmp	r8, r0
 801f70e:	e7e8      	b.n	801f6e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe6>
 801f710:	8821      	ldrh	r1, [r4, #0]
 801f712:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801f716:	9304      	str	r3, [sp, #16]
 801f718:	1a52      	subs	r2, r2, r1
 801f71a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801f71e:	9306      	str	r3, [sp, #24]
 801f720:	b213      	sxth	r3, r2
 801f722:	9302      	str	r3, [sp, #8]
 801f724:	8863      	ldrh	r3, [r4, #2]
 801f726:	900e      	str	r0, [sp, #56]	; 0x38
 801f728:	ebaa 0a03 	sub.w	sl, sl, r3
 801f72c:	fa0f f38a 	sxth.w	r3, sl
 801f730:	9303      	str	r3, [sp, #12]
 801f732:	9b02      	ldr	r3, [sp, #8]
 801f734:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801f738:	9b03      	ldr	r3, [sp, #12]
 801f73a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801f73e:	9b04      	ldr	r3, [sp, #16]
 801f740:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801f744:	a90e      	add	r1, sp, #56	; 0x38
 801f746:	9b06      	ldr	r3, [sp, #24]
 801f748:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801f74c:	a80c      	add	r0, sp, #48	; 0x30
 801f74e:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801f752:	f8ad b03c 	strh.w	fp, [sp, #60]	; 0x3c
 801f756:	f7f9 fc6d 	bl	8019034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f75a:	4648      	mov	r0, r9
 801f75c:	f7f9 fc42 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f760:	a80e      	add	r0, sp, #56	; 0x38
 801f762:	f7f9 fc3f 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f766:	4b3c      	ldr	r3, [pc, #240]	; (801f858 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25c>)
 801f768:	f9bd 703c 	ldrsh.w	r7, [sp, #60]	; 0x3c
 801f76c:	881b      	ldrh	r3, [r3, #0]
 801f76e:	9307      	str	r3, [sp, #28]
 801f770:	682b      	ldr	r3, [r5, #0]
 801f772:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 801f838 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 801f776:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801f778:	4628      	mov	r0, r5
 801f77a:	4798      	blx	r3
 801f77c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801f780:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801f784:	4682      	mov	sl, r0
 801f786:	fb17 2303 	smlabb	r3, r7, r3, r2
 801f78a:	f8d8 0000 	ldr.w	r0, [r8]
 801f78e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801f790:	eb02 0443 	add.w	r4, r2, r3, lsl #1
 801f794:	6803      	ldr	r3, [r0, #0]
 801f796:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801f798:	4798      	blx	r3
 801f79a:	9009      	str	r0, [sp, #36]	; 0x24
 801f79c:	f8d8 0000 	ldr.w	r0, [r8]
 801f7a0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f7a4:	6802      	ldr	r2, [r0, #0]
 801f7a6:	9308      	str	r3, [sp, #32]
 801f7a8:	6b92      	ldr	r2, [r2, #56]	; 0x38
 801f7aa:	f9bd 502a 	ldrsh.w	r5, [sp, #42]	; 0x2a
 801f7ae:	4790      	blx	r2
 801f7b0:	f010 0f01 	tst.w	r0, #1
 801f7b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7b6:	d011      	beq.n	801f7dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 801f7b8:	f8d8 0000 	ldr.w	r0, [r8]
 801f7bc:	6803      	ldr	r3, [r0, #0]
 801f7be:	f8cd b000 	str.w	fp, [sp]
 801f7c2:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 801f7c4:	e899 0006 	ldmia.w	r9, {r1, r2}
 801f7c8:	4623      	mov	r3, r4
 801f7ca:	47a8      	blx	r5
 801f7cc:	9b02      	ldr	r3, [sp, #8]
 801f7ce:	8033      	strh	r3, [r6, #0]
 801f7d0:	9b03      	ldr	r3, [sp, #12]
 801f7d2:	8073      	strh	r3, [r6, #2]
 801f7d4:	9b04      	ldr	r3, [sp, #16]
 801f7d6:	80b3      	strh	r3, [r6, #4]
 801f7d8:	9b06      	ldr	r3, [sp, #24]
 801f7da:	e790      	b.n	801f6fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x102>
 801f7dc:	9a08      	ldr	r2, [sp, #32]
 801f7de:	fb0a f505 	mul.w	r5, sl, r5
 801f7e2:	eb05 0542 	add.w	r5, r5, r2, lsl #1
 801f7e6:	9a05      	ldr	r2, [sp, #20]
 801f7e8:	441d      	add	r5, r3
 801f7ea:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801f7ee:	b162      	cbz	r2, 801f80a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 801f7f0:	9a07      	ldr	r2, [sp, #28]
 801f7f2:	4297      	cmp	r7, r2
 801f7f4:	d109      	bne.n	801f80a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 801f7f6:	f8d8 0000 	ldr.w	r0, [r8]
 801f7fa:	6802      	ldr	r2, [r0, #0]
 801f7fc:	fb03 f30a 	mul.w	r3, r3, sl
 801f800:	6b57      	ldr	r7, [r2, #52]	; 0x34
 801f802:	4621      	mov	r1, r4
 801f804:	462a      	mov	r2, r5
 801f806:	47b8      	blx	r7
 801f808:	e7e0      	b.n	801f7cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 801f80a:	437b      	muls	r3, r7
 801f80c:	f8df b028 	ldr.w	fp, [pc, #40]	; 801f838 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 801f810:	eb04 0843 	add.w	r8, r4, r3, lsl #1
 801f814:	007f      	lsls	r7, r7, #1
 801f816:	4544      	cmp	r4, r8
 801f818:	d2d8      	bcs.n	801f7cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 801f81a:	f8db 0000 	ldr.w	r0, [fp]
 801f81e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f822:	6802      	ldr	r2, [r0, #0]
 801f824:	4621      	mov	r1, r4
 801f826:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 801f82a:	005b      	lsls	r3, r3, #1
 801f82c:	462a      	mov	r2, r5
 801f82e:	47c8      	blx	r9
 801f830:	4455      	add	r5, sl
 801f832:	443c      	add	r4, r7
 801f834:	e7ef      	b.n	801f816 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 801f836:	bf00      	nop
 801f838:	2001e1c0 	.word	0x2001e1c0
 801f83c:	080359da 	.word	0x080359da
 801f840:	08036244 	.word	0x08036244
 801f844:	08035a8c 	.word	0x08035a8c
 801f848:	0803598c 	.word	0x0803598c
 801f84c:	2001e1b4 	.word	0x2001e1b4
 801f850:	2001e1b6 	.word	0x2001e1b6
 801f854:	2001e1b8 	.word	0x2001e1b8
 801f858:	2001e1ba 	.word	0x2001e1ba

0801f85c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801f85c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f860:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801f864:	9e08      	ldr	r6, [sp, #32]
 801f866:	4688      	mov	r8, r1
 801f868:	4614      	mov	r4, r2
 801f86a:	461d      	mov	r5, r3
 801f86c:	2f00      	cmp	r7, #0
 801f86e:	f000 80b3 	beq.w	801f9d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801f872:	4618      	mov	r0, r3
 801f874:	f7f2 fc79 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 801f878:	2800      	cmp	r0, #0
 801f87a:	f040 80ad 	bne.w	801f9d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801f87e:	f9b5 1000 	ldrsh.w	r1, [r5]
 801f882:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801f886:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801f88a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801f88e:	fb04 1303 	mla	r3, r4, r3, r1
 801f892:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801f896:	4365      	muls	r5, r4
 801f898:	2fff      	cmp	r7, #255	; 0xff
 801f89a:	eba4 0200 	sub.w	r2, r4, r0
 801f89e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801f8a2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801f8a6:	d04b      	beq.n	801f940 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801f8a8:	b2bc      	uxth	r4, r7
 801f8aa:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801f8ae:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801f8b2:	fa5f f788 	uxtb.w	r7, r8
 801f8b6:	b2f3      	uxtb	r3, r6
 801f8b8:	0040      	lsls	r0, r0, #1
 801f8ba:	fb0e fe04 	mul.w	lr, lr, r4
 801f8be:	4367      	muls	r7, r4
 801f8c0:	4363      	muls	r3, r4
 801f8c2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801f8c6:	fa1f fc8c 	uxth.w	ip, ip
 801f8ca:	42a9      	cmp	r1, r5
 801f8cc:	f080 8084 	bcs.w	801f9d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801f8d0:	eb01 0900 	add.w	r9, r1, r0
 801f8d4:	4549      	cmp	r1, r9
 801f8d6:	d231      	bcs.n	801f93c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 801f8d8:	880a      	ldrh	r2, [r1, #0]
 801f8da:	1214      	asrs	r4, r2, #8
 801f8dc:	10d6      	asrs	r6, r2, #3
 801f8de:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f8e2:	00d2      	lsls	r2, r2, #3
 801f8e4:	b2d2      	uxtb	r2, r2
 801f8e6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f8ea:	fb14 f40c 	smulbb	r4, r4, ip
 801f8ee:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f8f2:	4474      	add	r4, lr
 801f8f4:	fb12 f20c 	smulbb	r2, r2, ip
 801f8f8:	b2a4      	uxth	r4, r4
 801f8fa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f8fe:	441a      	add	r2, r3
 801f900:	b292      	uxth	r2, r2
 801f902:	f104 0a01 	add.w	sl, r4, #1
 801f906:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801f90a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f90e:	fb16 f60c 	smulbb	r6, r6, ip
 801f912:	f102 0a01 	add.w	sl, r2, #1
 801f916:	443e      	add	r6, r7
 801f918:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801f91c:	b2b6      	uxth	r6, r6
 801f91e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f922:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f926:	4322      	orrs	r2, r4
 801f928:	1c74      	adds	r4, r6, #1
 801f92a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801f92e:	0976      	lsrs	r6, r6, #5
 801f930:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f934:	4332      	orrs	r2, r6
 801f936:	f821 2b02 	strh.w	r2, [r1], #2
 801f93a:	e7cb      	b.n	801f8d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 801f93c:	4441      	add	r1, r8
 801f93e:	e7c4      	b.n	801f8ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801f940:	4f26      	ldr	r7, [pc, #152]	; (801f9dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 801f942:	0973      	lsrs	r3, r6, #5
 801f944:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f948:	ea08 0707 	and.w	r7, r8, r7
 801f94c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801f950:	433b      	orrs	r3, r7
 801f952:	4333      	orrs	r3, r6
 801f954:	07e6      	lsls	r6, r4, #31
 801f956:	b29b      	uxth	r3, r3
 801f958:	d50b      	bpl.n	801f972 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 801f95a:	0040      	lsls	r0, r0, #1
 801f95c:	0052      	lsls	r2, r2, #1
 801f95e:	42a9      	cmp	r1, r5
 801f960:	d23a      	bcs.n	801f9d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801f962:	180c      	adds	r4, r1, r0
 801f964:	42a1      	cmp	r1, r4
 801f966:	d202      	bcs.n	801f96e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 801f968:	f821 3b02 	strh.w	r3, [r1], #2
 801f96c:	e7fa      	b.n	801f964 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 801f96e:	4411      	add	r1, r2
 801f970:	e7f5      	b.n	801f95e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 801f972:	078f      	lsls	r7, r1, #30
 801f974:	d008      	beq.n	801f988 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 801f976:	0066      	lsls	r6, r4, #1
 801f978:	460a      	mov	r2, r1
 801f97a:	42aa      	cmp	r2, r5
 801f97c:	d202      	bcs.n	801f984 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 801f97e:	8013      	strh	r3, [r2, #0]
 801f980:	4432      	add	r2, r6
 801f982:	e7fa      	b.n	801f97a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 801f984:	3102      	adds	r1, #2
 801f986:	3801      	subs	r0, #1
 801f988:	07c6      	lsls	r6, r0, #31
 801f98a:	d50b      	bpl.n	801f9a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801f98c:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801f990:	3a01      	subs	r2, #1
 801f992:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801f996:	0066      	lsls	r6, r4, #1
 801f998:	42aa      	cmp	r2, r5
 801f99a:	d202      	bcs.n	801f9a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801f99c:	8013      	strh	r3, [r2, #0]
 801f99e:	4432      	add	r2, r6
 801f9a0:	e7fa      	b.n	801f998 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 801f9a2:	3801      	subs	r0, #1
 801f9a4:	b1c0      	cbz	r0, 801f9d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801f9a6:	1040      	asrs	r0, r0, #1
 801f9a8:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801f9ac:	0080      	lsls	r0, r0, #2
 801f9ae:	0064      	lsls	r4, r4, #1
 801f9b0:	42a9      	cmp	r1, r5
 801f9b2:	d211      	bcs.n	801f9d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801f9b4:	078a      	lsls	r2, r1, #30
 801f9b6:	d006      	beq.n	801f9c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 801f9b8:	4b09      	ldr	r3, [pc, #36]	; (801f9e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 801f9ba:	4a0a      	ldr	r2, [pc, #40]	; (801f9e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 801f9bc:	480a      	ldr	r0, [pc, #40]	; (801f9e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 801f9be:	f240 4137 	movw	r1, #1079	; 0x437
 801f9c2:	f00c faff 	bl	802bfc4 <__assert_func>
 801f9c6:	180e      	adds	r6, r1, r0
 801f9c8:	460a      	mov	r2, r1
 801f9ca:	42b2      	cmp	r2, r6
 801f9cc:	d202      	bcs.n	801f9d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 801f9ce:	f842 3b04 	str.w	r3, [r2], #4
 801f9d2:	e7fa      	b.n	801f9ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 801f9d4:	4421      	add	r1, r4
 801f9d6:	e7eb      	b.n	801f9b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 801f9d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f9dc:	00fff800 	.word	0x00fff800
 801f9e0:	0803583d 	.word	0x0803583d
 801f9e4:	08035e90 	.word	0x08035e90
 801f9e8:	08035a8c 	.word	0x08035a8c

0801f9ec <_ZN8touchgfx8LCD16bppC1Ev>:
 801f9ec:	2200      	movs	r2, #0
 801f9ee:	4910      	ldr	r1, [pc, #64]	; (801fa30 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 801f9f0:	6042      	str	r2, [r0, #4]
 801f9f2:	6001      	str	r1, [r0, #0]
 801f9f4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801f9f8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801f9fc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801fa00:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801fa04:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801fa08:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801fa0c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801fa10:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801fa14:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801fa18:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801fa1c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801fa20:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801fa24:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801fa28:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801fa2c:	4770      	bx	lr
 801fa2e:	bf00      	nop
 801fa30:	08035e40 	.word	0x08035e40

0801fa34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801fa34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa38:	460d      	mov	r5, r1
 801fa3a:	b08d      	sub	sp, #52	; 0x34
 801fa3c:	4604      	mov	r4, r0
 801fa3e:	6808      	ldr	r0, [r1, #0]
 801fa40:	6849      	ldr	r1, [r1, #4]
 801fa42:	4699      	mov	r9, r3
 801fa44:	ab08      	add	r3, sp, #32
 801fa46:	c303      	stmia	r3!, {r0, r1}
 801fa48:	6810      	ldr	r0, [r2, #0]
 801fa4a:	6851      	ldr	r1, [r2, #4]
 801fa4c:	ab0a      	add	r3, sp, #40	; 0x28
 801fa4e:	c303      	stmia	r3!, {r0, r1}
 801fa50:	a808      	add	r0, sp, #32
 801fa52:	f7f9 fac7 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fa56:	4629      	mov	r1, r5
 801fa58:	a80a      	add	r0, sp, #40	; 0x28
 801fa5a:	f7f9 faeb 	bl	8019034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fa5e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801fa62:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801fa66:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801fa6a:	4d63      	ldr	r5, [pc, #396]	; (801fbf8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801fa6c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801fa70:	6828      	ldr	r0, [r5, #0]
 801fa72:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801fa76:	fb11 2103 	smlabb	r1, r1, r3, r2
 801fa7a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801fa7e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801fa82:	440a      	add	r2, r1
 801fa84:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801fa88:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801fa8c:	4413      	add	r3, r2
 801fa8e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801fa92:	6803      	ldr	r3, [r0, #0]
 801fa94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fa96:	4798      	blx	r3
 801fa98:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801fa9c:	d119      	bne.n	801fad2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801fa9e:	f010 0f20 	tst.w	r0, #32
 801faa2:	6828      	ldr	r0, [r5, #0]
 801faa4:	d018      	beq.n	801fad8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801faa6:	2500      	movs	r5, #0
 801faa8:	6801      	ldr	r1, [r0, #0]
 801faaa:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801faae:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801fab2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801fab6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801faba:	9502      	str	r5, [sp, #8]
 801fabc:	b2b6      	uxth	r6, r6
 801fabe:	fa1f f588 	uxth.w	r5, r8
 801fac2:	9601      	str	r6, [sp, #4]
 801fac4:	9500      	str	r5, [sp, #0]
 801fac6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801fac8:	4621      	mov	r1, r4
 801faca:	47a8      	blx	r5
 801facc:	b00d      	add	sp, #52	; 0x34
 801face:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fad2:	f010 0f40 	tst.w	r0, #64	; 0x40
 801fad6:	e7e4      	b.n	801faa2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801fad8:	6803      	ldr	r3, [r0, #0]
 801fada:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fadc:	4798      	blx	r3
 801fade:	4947      	ldr	r1, [pc, #284]	; (801fbfc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801fae0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801fae4:	880b      	ldrh	r3, [r1, #0]
 801fae6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801faea:	fb03 5202 	mla	r2, r3, r2, r5
 801faee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801faf2:	4373      	muls	r3, r6
 801faf4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801faf8:	9307      	str	r3, [sp, #28]
 801fafa:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801fafe:	9306      	str	r3, [sp, #24]
 801fb00:	468a      	mov	sl, r1
 801fb02:	9b07      	ldr	r3, [sp, #28]
 801fb04:	4298      	cmp	r0, r3
 801fb06:	d270      	bcs.n	801fbea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801fb08:	9b06      	ldr	r3, [sp, #24]
 801fb0a:	4621      	mov	r1, r4
 801fb0c:	eb00 0b03 	add.w	fp, r0, r3
 801fb10:	4558      	cmp	r0, fp
 801fb12:	d25d      	bcs.n	801fbd0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801fb14:	f851 4b04 	ldr.w	r4, [r1], #4
 801fb18:	0e23      	lsrs	r3, r4, #24
 801fb1a:	d014      	beq.n	801fb46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801fb1c:	2bff      	cmp	r3, #255	; 0xff
 801fb1e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801fb22:	d112      	bne.n	801fb4a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801fb24:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801fb28:	d10f      	bne.n	801fb4a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801fb2a:	0963      	lsrs	r3, r4, #5
 801fb2c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801fb30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fb34:	f02c 0c07 	bic.w	ip, ip, #7
 801fb38:	ea43 0c0c 	orr.w	ip, r3, ip
 801fb3c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801fb40:	ea4c 0404 	orr.w	r4, ip, r4
 801fb44:	8004      	strh	r4, [r0, #0]
 801fb46:	3002      	adds	r0, #2
 801fb48:	e7e2      	b.n	801fb10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801fb4a:	fb09 f303 	mul.w	r3, r9, r3
 801fb4e:	8807      	ldrh	r7, [r0, #0]
 801fb50:	1c5a      	adds	r2, r3, #1
 801fb52:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801fb56:	1212      	asrs	r2, r2, #8
 801fb58:	123e      	asrs	r6, r7, #8
 801fb5a:	b293      	uxth	r3, r2
 801fb5c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801fb60:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801fb64:	43d2      	mvns	r2, r2
 801fb66:	b2d2      	uxtb	r2, r2
 801fb68:	10fd      	asrs	r5, r7, #3
 801fb6a:	fb1e fe03 	smulbb	lr, lr, r3
 801fb6e:	00ff      	lsls	r7, r7, #3
 801fb70:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801fb74:	fb06 e602 	mla	r6, r6, r2, lr
 801fb78:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801fb7c:	b2ff      	uxtb	r7, r7
 801fb7e:	fa5f fc8c 	uxtb.w	ip, ip
 801fb82:	b2e4      	uxtb	r4, r4
 801fb84:	b2b6      	uxth	r6, r6
 801fb86:	fb1c fc03 	smulbb	ip, ip, r3
 801fb8a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801fb8e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801fb92:	fb14 f403 	smulbb	r4, r4, r3
 801fb96:	fb05 c502 	mla	r5, r5, r2, ip
 801fb9a:	f106 0e01 	add.w	lr, r6, #1
 801fb9e:	fb07 4702 	mla	r7, r7, r2, r4
 801fba2:	b2ad      	uxth	r5, r5
 801fba4:	b2bf      	uxth	r7, r7
 801fba6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801fbaa:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801fbae:	f105 0c01 	add.w	ip, r5, #1
 801fbb2:	1c7e      	adds	r6, r7, #1
 801fbb4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801fbb8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fbbc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801fbc0:	096d      	lsrs	r5, r5, #5
 801fbc2:	ea46 060e 	orr.w	r6, r6, lr
 801fbc6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fbca:	432e      	orrs	r6, r5
 801fbcc:	8006      	strh	r6, [r0, #0]
 801fbce:	e7ba      	b.n	801fb46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801fbd0:	f8ba 3000 	ldrh.w	r3, [sl]
 801fbd4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801fbd8:	eba3 0308 	sub.w	r3, r3, r8
 801fbdc:	eba4 0408 	sub.w	r4, r4, r8
 801fbe0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fbe4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801fbe8:	e78b      	b.n	801fb02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801fbea:	4b03      	ldr	r3, [pc, #12]	; (801fbf8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801fbec:	6818      	ldr	r0, [r3, #0]
 801fbee:	6803      	ldr	r3, [r0, #0]
 801fbf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fbf2:	4798      	blx	r3
 801fbf4:	e76a      	b.n	801facc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801fbf6:	bf00      	nop
 801fbf8:	2001e1c0 	.word	0x2001e1c0
 801fbfc:	2001e1ba 	.word	0x2001e1ba

0801fc00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801fc00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801fc04:	460c      	mov	r4, r1
 801fc06:	b085      	sub	sp, #20
 801fc08:	6810      	ldr	r0, [r2, #0]
 801fc0a:	6851      	ldr	r1, [r2, #4]
 801fc0c:	466d      	mov	r5, sp
 801fc0e:	c503      	stmia	r5!, {r0, r1}
 801fc10:	6818      	ldr	r0, [r3, #0]
 801fc12:	6859      	ldr	r1, [r3, #4]
 801fc14:	4616      	mov	r6, r2
 801fc16:	c503      	stmia	r5!, {r0, r1}
 801fc18:	4668      	mov	r0, sp
 801fc1a:	f7f9 f9e3 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fc1e:	4631      	mov	r1, r6
 801fc20:	a802      	add	r0, sp, #8
 801fc22:	f7f9 fa07 	bl	8019034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fc26:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801fc2a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801fc2e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801fc32:	4d28      	ldr	r5, [pc, #160]	; (801fcd4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801fc34:	4e28      	ldr	r6, [pc, #160]	; (801fcd8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801fc36:	6828      	ldr	r0, [r5, #0]
 801fc38:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801fc3c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801fc40:	fb11 2103 	smlabb	r1, r1, r3, r2
 801fc44:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801fc48:	f8bd 1000 	ldrh.w	r1, [sp]
 801fc4c:	440a      	add	r2, r1
 801fc4e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801fc52:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801fc56:	4413      	add	r3, r2
 801fc58:	f8ad 300a 	strh.w	r3, [sp, #10]
 801fc5c:	6803      	ldr	r3, [r0, #0]
 801fc5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fc60:	4798      	blx	r3
 801fc62:	8833      	ldrh	r3, [r6, #0]
 801fc64:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801fc68:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801fc6c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801fcdc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801fc70:	fb03 1202 	mla	r2, r3, r2, r1
 801fc74:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fc78:	fb08 f303 	mul.w	r3, r8, r3
 801fc7c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fc80:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801fc84:	4298      	cmp	r0, r3
 801fc86:	d21d      	bcs.n	801fcc4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801fc88:	eb00 080c 	add.w	r8, r0, ip
 801fc8c:	4540      	cmp	r0, r8
 801fc8e:	d20f      	bcs.n	801fcb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801fc90:	f854 1b04 	ldr.w	r1, [r4], #4
 801fc94:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801fc98:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801fc9c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801fca0:	ea42 0209 	orr.w	r2, r2, r9
 801fca4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801fca8:	430a      	orrs	r2, r1
 801fcaa:	f820 2b02 	strh.w	r2, [r0], #2
 801fcae:	e7ed      	b.n	801fc8c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801fcb0:	8832      	ldrh	r2, [r6, #0]
 801fcb2:	1bd2      	subs	r2, r2, r7
 801fcb4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fcb8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801fcbc:	1bd2      	subs	r2, r2, r7
 801fcbe:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801fcc2:	e7df      	b.n	801fc84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801fcc4:	6828      	ldr	r0, [r5, #0]
 801fcc6:	6803      	ldr	r3, [r0, #0]
 801fcc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fcca:	4798      	blx	r3
 801fccc:	b005      	add	sp, #20
 801fcce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801fcd2:	bf00      	nop
 801fcd4:	2001e1c0 	.word	0x2001e1c0
 801fcd8:	2001e1ba 	.word	0x2001e1ba
 801fcdc:	fffff800 	.word	0xfffff800

0801fce0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801fce0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fce4:	460e      	mov	r6, r1
 801fce6:	b08e      	sub	sp, #56	; 0x38
 801fce8:	4604      	mov	r4, r0
 801fcea:	6808      	ldr	r0, [r1, #0]
 801fcec:	6849      	ldr	r1, [r1, #4]
 801fcee:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801fec8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801fcf2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801fecc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801fcf6:	461d      	mov	r5, r3
 801fcf8:	ab0a      	add	r3, sp, #40	; 0x28
 801fcfa:	c303      	stmia	r3!, {r0, r1}
 801fcfc:	6810      	ldr	r0, [r2, #0]
 801fcfe:	6851      	ldr	r1, [r2, #4]
 801fd00:	ab0c      	add	r3, sp, #48	; 0x30
 801fd02:	c303      	stmia	r3!, {r0, r1}
 801fd04:	a80a      	add	r0, sp, #40	; 0x28
 801fd06:	f7f9 f96d 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fd0a:	4631      	mov	r1, r6
 801fd0c:	a80c      	add	r0, sp, #48	; 0x30
 801fd0e:	f7f9 f991 	bl	8019034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fd12:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801fd16:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801fd1a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801fd1e:	f8d8 0000 	ldr.w	r0, [r8]
 801fd22:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801fd26:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801fd2a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801fd2e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801fd32:	440c      	add	r4, r1
 801fd34:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801fd38:	440a      	add	r2, r1
 801fd3a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801fd3e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801fd42:	4413      	add	r3, r2
 801fd44:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801fd48:	6803      	ldr	r3, [r0, #0]
 801fd4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fd4c:	4798      	blx	r3
 801fd4e:	2dff      	cmp	r5, #255	; 0xff
 801fd50:	d124      	bne.n	801fd9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801fd52:	f010 0f01 	tst.w	r0, #1
 801fd56:	f8d8 0000 	ldr.w	r0, [r8]
 801fd5a:	d022      	beq.n	801fda2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801fd5c:	2100      	movs	r1, #0
 801fd5e:	f8d0 c000 	ldr.w	ip, [r0]
 801fd62:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801fd66:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801fd6a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801fd6e:	f04f 0e01 	mov.w	lr, #1
 801fd72:	f8cd e018 	str.w	lr, [sp, #24]
 801fd76:	f8b9 e000 	ldrh.w	lr, [r9]
 801fd7a:	9503      	str	r5, [sp, #12]
 801fd7c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801fd80:	b2b6      	uxth	r6, r6
 801fd82:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801fd86:	9102      	str	r1, [sp, #8]
 801fd88:	b2bf      	uxth	r7, r7
 801fd8a:	9601      	str	r6, [sp, #4]
 801fd8c:	9700      	str	r7, [sp, #0]
 801fd8e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801fd92:	4621      	mov	r1, r4
 801fd94:	47a8      	blx	r5
 801fd96:	b00e      	add	sp, #56	; 0x38
 801fd98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fd9c:	f010 0f04 	tst.w	r0, #4
 801fda0:	e7d9      	b.n	801fd56 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801fda2:	6803      	ldr	r3, [r0, #0]
 801fda4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fda6:	4798      	blx	r3
 801fda8:	f8b9 3000 	ldrh.w	r3, [r9]
 801fdac:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801fdb0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801fdb4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801fdb8:	fb03 1202 	mla	r2, r3, r2, r1
 801fdbc:	ebac 0c07 	sub.w	ip, ip, r7
 801fdc0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fdc4:	435e      	muls	r6, r3
 801fdc6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801fdca:	2dff      	cmp	r5, #255	; 0xff
 801fdcc:	eba3 0707 	sub.w	r7, r3, r7
 801fdd0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801fdd4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801fdd8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801fddc:	d049      	beq.n	801fe72 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801fdde:	43eb      	mvns	r3, r5
 801fde0:	fa1f f985 	uxth.w	r9, r5
 801fde4:	b2db      	uxtb	r3, r3
 801fde6:	42b0      	cmp	r0, r6
 801fde8:	d266      	bcs.n	801feb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801fdea:	eb00 0a0e 	add.w	sl, r0, lr
 801fdee:	4550      	cmp	r0, sl
 801fdf0:	4621      	mov	r1, r4
 801fdf2:	f104 0403 	add.w	r4, r4, #3
 801fdf6:	d25b      	bcs.n	801feb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801fdf8:	8802      	ldrh	r2, [r0, #0]
 801fdfa:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801fdfe:	ea4f 2822 	mov.w	r8, r2, asr #8
 801fe02:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801fe06:	fb11 f109 	smulbb	r1, r1, r9
 801fe0a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801fe0e:	10d5      	asrs	r5, r2, #3
 801fe10:	fb08 1803 	mla	r8, r8, r3, r1
 801fe14:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801fe18:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801fe1c:	fb11 f109 	smulbb	r1, r1, r9
 801fe20:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801fe24:	fb05 1503 	mla	r5, r5, r3, r1
 801fe28:	00d2      	lsls	r2, r2, #3
 801fe2a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801fe2e:	b2d2      	uxtb	r2, r2
 801fe30:	fb11 f109 	smulbb	r1, r1, r9
 801fe34:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fe38:	fa1f f888 	uxth.w	r8, r8
 801fe3c:	fb02 1203 	mla	r2, r2, r3, r1
 801fe40:	b292      	uxth	r2, r2
 801fe42:	f108 0101 	add.w	r1, r8, #1
 801fe46:	b2ad      	uxth	r5, r5
 801fe48:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801fe4c:	1c51      	adds	r1, r2, #1
 801fe4e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fe52:	1c69      	adds	r1, r5, #1
 801fe54:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801fe58:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801fe5c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fe60:	096d      	lsrs	r5, r5, #5
 801fe62:	ea42 0208 	orr.w	r2, r2, r8
 801fe66:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fe6a:	432a      	orrs	r2, r5
 801fe6c:	f820 2b02 	strh.w	r2, [r0], #2
 801fe70:	e7bd      	b.n	801fdee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801fe72:	4a14      	ldr	r2, [pc, #80]	; (801fec4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801fe74:	42b0      	cmp	r0, r6
 801fe76:	d21f      	bcs.n	801feb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801fe78:	eb00 050e 	add.w	r5, r0, lr
 801fe7c:	42a8      	cmp	r0, r5
 801fe7e:	4621      	mov	r1, r4
 801fe80:	f104 0403 	add.w	r4, r4, #3
 801fe84:	d210      	bcs.n	801fea8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801fe86:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801fe8a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801fe8e:	00db      	lsls	r3, r3, #3
 801fe90:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801fe94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fe98:	430b      	orrs	r3, r1
 801fe9a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801fe9e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801fea2:	f820 3b02 	strh.w	r3, [r0], #2
 801fea6:	e7e9      	b.n	801fe7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801fea8:	4438      	add	r0, r7
 801feaa:	eb01 040c 	add.w	r4, r1, ip
 801feae:	e7e1      	b.n	801fe74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801feb0:	4438      	add	r0, r7
 801feb2:	eb01 040c 	add.w	r4, r1, ip
 801feb6:	e796      	b.n	801fde6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801feb8:	4b03      	ldr	r3, [pc, #12]	; (801fec8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801feba:	6818      	ldr	r0, [r3, #0]
 801febc:	6803      	ldr	r3, [r0, #0]
 801febe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fec0:	4798      	blx	r3
 801fec2:	e768      	b.n	801fd96 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801fec4:	fffff800 	.word	0xfffff800
 801fec8:	2001e1c0 	.word	0x2001e1c0
 801fecc:	2001e1ba 	.word	0x2001e1ba

0801fed0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801fed0:	b570      	push	{r4, r5, r6, lr}
 801fed2:	9c04      	ldr	r4, [sp, #16]
 801fed4:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801fed8:	4605      	mov	r5, r0
 801feda:	4608      	mov	r0, r1
 801fedc:	4619      	mov	r1, r3
 801fede:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801fee2:	2a0d      	cmp	r2, #13
 801fee4:	d825      	bhi.n	801ff32 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 801fee6:	e8df f002 	tbb	[pc, r2]
 801feea:	1807      	.short	0x1807
 801feec:	1d1d1d13 	.word	0x1d1d1d13
 801fef0:	1d1d1d1d 	.word	0x1d1d1d1d
 801fef4:	1d1d1d1d 	.word	0x1d1d1d1d
 801fef8:	e9cd 3604 	strd	r3, r6, [sp, #16]
 801fefc:	682a      	ldr	r2, [r5, #0]
 801fefe:	68d6      	ldr	r6, [r2, #12]
 801ff00:	4623      	mov	r3, r4
 801ff02:	460a      	mov	r2, r1
 801ff04:	46b4      	mov	ip, r6
 801ff06:	4601      	mov	r1, r0
 801ff08:	4628      	mov	r0, r5
 801ff0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ff0e:	4760      	bx	ip
 801ff10:	4622      	mov	r2, r4
 801ff12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ff16:	f7ff bd8d 	b.w	801fa34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ff1a:	4622      	mov	r2, r4
 801ff1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ff20:	f7ff bede 	b.w	801fce0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801ff24:	4b03      	ldr	r3, [pc, #12]	; (801ff34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 801ff26:	4a04      	ldr	r2, [pc, #16]	; (801ff38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 801ff28:	4804      	ldr	r0, [pc, #16]	; (801ff3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 801ff2a:	f240 3159 	movw	r1, #857	; 0x359
 801ff2e:	f00c f849 	bl	802bfc4 <__assert_func>
 801ff32:	bd70      	pop	{r4, r5, r6, pc}
 801ff34:	08035b51 	.word	0x08035b51
 801ff38:	0803635d 	.word	0x0803635d
 801ff3c:	08035a8c 	.word	0x08035a8c

0801ff40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801ff40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff44:	b093      	sub	sp, #76	; 0x4c
 801ff46:	880e      	ldrh	r6, [r1, #0]
 801ff48:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801ff4c:	4681      	mov	r9, r0
 801ff4e:	4688      	mov	r8, r1
 801ff50:	4615      	mov	r5, r2
 801ff52:	b136      	cbz	r6, 801ff62 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 801ff54:	4b70      	ldr	r3, [pc, #448]	; (8020118 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801ff56:	4a71      	ldr	r2, [pc, #452]	; (802011c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801ff58:	4871      	ldr	r0, [pc, #452]	; (8020120 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801ff5a:	f44f 71c3 	mov.w	r1, #390	; 0x186
 801ff5e:	f00c f831 	bl	802bfc4 <__assert_func>
 801ff62:	6810      	ldr	r0, [r2, #0]
 801ff64:	6851      	ldr	r1, [r2, #4]
 801ff66:	4f6f      	ldr	r7, [pc, #444]	; (8020124 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801ff68:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8020128 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 801ff6c:	ac0e      	add	r4, sp, #56	; 0x38
 801ff6e:	c403      	stmia	r4!, {r0, r1}
 801ff70:	6818      	ldr	r0, [r3, #0]
 801ff72:	6859      	ldr	r1, [r3, #4]
 801ff74:	ac10      	add	r4, sp, #64	; 0x40
 801ff76:	c403      	stmia	r4!, {r0, r1}
 801ff78:	a80e      	add	r0, sp, #56	; 0x38
 801ff7a:	f7f9 f833 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ff7e:	4629      	mov	r1, r5
 801ff80:	a810      	add	r0, sp, #64	; 0x40
 801ff82:	f7f9 f857 	bl	8019034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ff86:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801ff8a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801ff8e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801ff92:	6838      	ldr	r0, [r7, #0]
 801ff94:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801ff98:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801ff9c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ffa0:	4489      	add	r9, r1
 801ffa2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801ffa6:	440a      	add	r2, r1
 801ffa8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801ffac:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801ffb0:	4413      	add	r3, r2
 801ffb2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801ffb6:	6803      	ldr	r3, [r0, #0]
 801ffb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ffba:	4798      	blx	r3
 801ffbc:	f010 0f80 	tst.w	r0, #128	; 0x80
 801ffc0:	6838      	ldr	r0, [r7, #0]
 801ffc2:	d01d      	beq.n	8020000 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 801ffc4:	6802      	ldr	r2, [r0, #0]
 801ffc6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801ffca:	e9cd 6608 	strd	r6, r6, [sp, #32]
 801ffce:	210b      	movs	r1, #11
 801ffd0:	9107      	str	r1, [sp, #28]
 801ffd2:	f8bb 1000 	ldrh.w	r1, [fp]
 801ffd6:	9106      	str	r1, [sp, #24]
 801ffd8:	2101      	movs	r1, #1
 801ffda:	e9cd a104 	strd	sl, r1, [sp, #16]
 801ffde:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801ffe2:	9103      	str	r1, [sp, #12]
 801ffe4:	b2a4      	uxth	r4, r4
 801ffe6:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 801ffea:	9100      	str	r1, [sp, #0]
 801ffec:	b2ad      	uxth	r5, r5
 801ffee:	9502      	str	r5, [sp, #8]
 801fff0:	9401      	str	r4, [sp, #4]
 801fff2:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 801fff4:	4649      	mov	r1, r9
 801fff6:	4642      	mov	r2, r8
 801fff8:	47a0      	blx	r4
 801fffa:	b013      	add	sp, #76	; 0x4c
 801fffc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020000:	6803      	ldr	r3, [r0, #0]
 8020002:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020004:	4798      	blx	r3
 8020006:	f8bb 3000 	ldrh.w	r3, [fp]
 802000a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 802000e:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8020012:	fb03 1202 	mla	r2, r3, r2, r1
 8020016:	435d      	muls	r5, r3
 8020018:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802001c:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8020020:	920c      	str	r2, [sp, #48]	; 0x30
 8020022:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8020026:	1b12      	subs	r2, r2, r4
 8020028:	920d      	str	r2, [sp, #52]	; 0x34
 802002a:	0062      	lsls	r2, r4, #1
 802002c:	1b1c      	subs	r4, r3, r4
 802002e:	0063      	lsls	r3, r4, #1
 8020030:	920a      	str	r2, [sp, #40]	; 0x28
 8020032:	930b      	str	r3, [sp, #44]	; 0x2c
 8020034:	f04f 0e04 	mov.w	lr, #4
 8020038:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802003a:	4298      	cmp	r0, r3
 802003c:	d266      	bcs.n	802010c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 802003e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020040:	eb00 0b03 	add.w	fp, r0, r3
 8020044:	4558      	cmp	r0, fp
 8020046:	d25c      	bcs.n	8020102 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 8020048:	f819 3b01 	ldrb.w	r3, [r9], #1
 802004c:	fb1e e303 	smlabb	r3, lr, r3, lr
 8020050:	f858 2003 	ldr.w	r2, [r8, r3]
 8020054:	0e11      	lsrs	r1, r2, #24
 8020056:	d012      	beq.n	802007e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8020058:	29ff      	cmp	r1, #255	; 0xff
 802005a:	ea4f 2712 	mov.w	r7, r2, lsr #8
 802005e:	d110      	bne.n	8020082 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8020060:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020064:	d10d      	bne.n	8020082 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8020066:	0953      	lsrs	r3, r2, #5
 8020068:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 802006c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020070:	f027 0707 	bic.w	r7, r7, #7
 8020074:	431f      	orrs	r7, r3
 8020076:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802007a:	433a      	orrs	r2, r7
 802007c:	8002      	strh	r2, [r0, #0]
 802007e:	3002      	adds	r0, #2
 8020080:	e7e0      	b.n	8020044 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 8020082:	fb0a f101 	mul.w	r1, sl, r1
 8020086:	8806      	ldrh	r6, [r0, #0]
 8020088:	1c4b      	adds	r3, r1, #1
 802008a:	eb03 2321 	add.w	r3, r3, r1, asr #8
 802008e:	1235      	asrs	r5, r6, #8
 8020090:	10f4      	asrs	r4, r6, #3
 8020092:	121b      	asrs	r3, r3, #8
 8020094:	00f6      	lsls	r6, r6, #3
 8020096:	b299      	uxth	r1, r3
 8020098:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 802009c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80200a0:	b2f6      	uxtb	r6, r6
 80200a2:	43db      	mvns	r3, r3
 80200a4:	b2d2      	uxtb	r2, r2
 80200a6:	b2db      	uxtb	r3, r3
 80200a8:	fb1c fc01 	smulbb	ip, ip, r1
 80200ac:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80200b0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80200b4:	fb12 f201 	smulbb	r2, r2, r1
 80200b8:	fb05 c503 	mla	r5, r5, r3, ip
 80200bc:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80200c0:	b2ff      	uxtb	r7, r7
 80200c2:	fb06 2203 	mla	r2, r6, r3, r2
 80200c6:	b2ad      	uxth	r5, r5
 80200c8:	fb17 f701 	smulbb	r7, r7, r1
 80200cc:	b292      	uxth	r2, r2
 80200ce:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80200d2:	fb04 7403 	mla	r4, r4, r3, r7
 80200d6:	f105 0c01 	add.w	ip, r5, #1
 80200da:	1c57      	adds	r7, r2, #1
 80200dc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80200e0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80200e4:	b2a4      	uxth	r4, r4
 80200e6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80200ea:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80200ee:	433d      	orrs	r5, r7
 80200f0:	1c67      	adds	r7, r4, #1
 80200f2:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80200f6:	0964      	lsrs	r4, r4, #5
 80200f8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80200fc:	4325      	orrs	r5, r4
 80200fe:	8005      	strh	r5, [r0, #0]
 8020100:	e7bd      	b.n	802007e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8020102:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020104:	4418      	add	r0, r3
 8020106:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020108:	4499      	add	r9, r3
 802010a:	e795      	b.n	8020038 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 802010c:	4b05      	ldr	r3, [pc, #20]	; (8020124 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 802010e:	6818      	ldr	r0, [r3, #0]
 8020110:	6803      	ldr	r3, [r0, #0]
 8020112:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020114:	4798      	blx	r3
 8020116:	e770      	b.n	801fffa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 8020118:	0803593c 	.word	0x0803593c
 802011c:	0803609b 	.word	0x0803609b
 8020120:	08035a8c 	.word	0x08035a8c
 8020124:	2001e1c0 	.word	0x2001e1c0
 8020128:	2001e1ba 	.word	0x2001e1ba

0802012c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 802012c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020130:	4614      	mov	r4, r2
 8020132:	880a      	ldrh	r2, [r1, #0]
 8020134:	b087      	sub	sp, #28
 8020136:	2a02      	cmp	r2, #2
 8020138:	4680      	mov	r8, r0
 802013a:	460d      	mov	r5, r1
 802013c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8020140:	d006      	beq.n	8020150 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8020142:	4b63      	ldr	r3, [pc, #396]	; (80202d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8020144:	4a63      	ldr	r2, [pc, #396]	; (80202d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8020146:	4864      	ldr	r0, [pc, #400]	; (80202d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8020148:	f240 11dd 	movw	r1, #477	; 0x1dd
 802014c:	f00b ff3a 	bl	802bfc4 <__assert_func>
 8020150:	2e00      	cmp	r6, #0
 8020152:	f000 80b9 	beq.w	80202c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8020156:	6820      	ldr	r0, [r4, #0]
 8020158:	6861      	ldr	r1, [r4, #4]
 802015a:	af02      	add	r7, sp, #8
 802015c:	c703      	stmia	r7!, {r0, r1}
 802015e:	6818      	ldr	r0, [r3, #0]
 8020160:	6859      	ldr	r1, [r3, #4]
 8020162:	af04      	add	r7, sp, #16
 8020164:	c703      	stmia	r7!, {r0, r1}
 8020166:	a802      	add	r0, sp, #8
 8020168:	f7f8 ff3c 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802016c:	4621      	mov	r1, r4
 802016e:	a804      	add	r0, sp, #16
 8020170:	f7f8 ff60 	bl	8019034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020174:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8020178:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802017c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8020180:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8020184:	fb14 2103 	smlabb	r1, r4, r3, r2
 8020188:	eb08 0401 	add.w	r4, r8, r1
 802018c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8020190:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8020194:	440a      	add	r2, r1
 8020196:	f8ad 2010 	strh.w	r2, [sp, #16]
 802019a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 802019e:	4413      	add	r3, r2
 80201a0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80201a4:	4b4d      	ldr	r3, [pc, #308]	; (80202dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80201a6:	6818      	ldr	r0, [r3, #0]
 80201a8:	6803      	ldr	r3, [r0, #0]
 80201aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80201ac:	4798      	blx	r3
 80201ae:	4b4c      	ldr	r3, [pc, #304]	; (80202e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 80201b0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80201b4:	881a      	ldrh	r2, [r3, #0]
 80201b6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80201ba:	2eff      	cmp	r6, #255	; 0xff
 80201bc:	fb02 c101 	mla	r1, r2, r1, ip
 80201c0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80201c4:	fb02 f207 	mul.w	r2, r2, r7
 80201c8:	f105 0104 	add.w	r1, r5, #4
 80201cc:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80201d0:	461d      	mov	r5, r3
 80201d2:	d05a      	beq.n	802028a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 80201d4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 80201d8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80201dc:	b2b6      	uxth	r6, r6
 80201de:	fa1f fe8e 	uxth.w	lr, lr
 80201e2:	9301      	str	r3, [sp, #4]
 80201e4:	4282      	cmp	r2, r0
 80201e6:	d96a      	bls.n	80202be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80201e8:	eb00 0b0a 	add.w	fp, r0, sl
 80201ec:	4583      	cmp	fp, r0
 80201ee:	d940      	bls.n	8020272 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 80201f0:	f814 3b01 	ldrb.w	r3, [r4], #1
 80201f4:	8805      	ldrh	r5, [r0, #0]
 80201f6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80201fa:	122f      	asrs	r7, r5, #8
 80201fc:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8020200:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020204:	fb17 f70e 	smulbb	r7, r7, lr
 8020208:	ea4f 09e5 	mov.w	r9, r5, asr #3
 802020c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020210:	00ed      	lsls	r5, r5, #3
 8020212:	fb0c 7c06 	mla	ip, ip, r6, r7
 8020216:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 802021a:	10df      	asrs	r7, r3, #3
 802021c:	b2ed      	uxtb	r5, r5
 802021e:	00db      	lsls	r3, r3, #3
 8020220:	fa1f fc8c 	uxth.w	ip, ip
 8020224:	fb19 f90e 	smulbb	r9, r9, lr
 8020228:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802022c:	b2db      	uxtb	r3, r3
 802022e:	fb15 f50e 	smulbb	r5, r5, lr
 8020232:	fb07 9706 	mla	r7, r7, r6, r9
 8020236:	fb03 5306 	mla	r3, r3, r6, r5
 802023a:	f10c 0901 	add.w	r9, ip, #1
 802023e:	b29b      	uxth	r3, r3
 8020240:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8020244:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8020248:	f103 0c01 	add.w	ip, r3, #1
 802024c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020250:	b2bf      	uxth	r7, r7
 8020252:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020256:	ea4c 0c09 	orr.w	ip, ip, r9
 802025a:	f107 0901 	add.w	r9, r7, #1
 802025e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8020262:	097f      	lsrs	r7, r7, #5
 8020264:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020268:	ea4c 0c07 	orr.w	ip, ip, r7
 802026c:	f820 cb02 	strh.w	ip, [r0], #2
 8020270:	e7bc      	b.n	80201ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8020272:	9b01      	ldr	r3, [sp, #4]
 8020274:	881b      	ldrh	r3, [r3, #0]
 8020276:	eba3 0308 	sub.w	r3, r3, r8
 802027a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802027e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8020282:	eba3 0308 	sub.w	r3, r3, r8
 8020286:	441c      	add	r4, r3
 8020288:	e7ac      	b.n	80201e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 802028a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802028e:	4282      	cmp	r2, r0
 8020290:	d915      	bls.n	80202be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8020292:	eb00 060a 	add.w	r6, r0, sl
 8020296:	4286      	cmp	r6, r0
 8020298:	d906      	bls.n	80202a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 802029a:	f814 3b01 	ldrb.w	r3, [r4], #1
 802029e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80202a2:	f820 3b02 	strh.w	r3, [r0], #2
 80202a6:	e7f6      	b.n	8020296 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 80202a8:	882b      	ldrh	r3, [r5, #0]
 80202aa:	eba3 0308 	sub.w	r3, r3, r8
 80202ae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80202b2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80202b6:	eba3 0308 	sub.w	r3, r3, r8
 80202ba:	441c      	add	r4, r3
 80202bc:	e7e7      	b.n	802028e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 80202be:	4b07      	ldr	r3, [pc, #28]	; (80202dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80202c0:	6818      	ldr	r0, [r3, #0]
 80202c2:	6803      	ldr	r3, [r0, #0]
 80202c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80202c6:	4798      	blx	r3
 80202c8:	b007      	add	sp, #28
 80202ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80202ce:	bf00      	nop
 80202d0:	0803586c 	.word	0x0803586c
 80202d4:	08035f05 	.word	0x08035f05
 80202d8:	08035a8c 	.word	0x08035a8c
 80202dc:	2001e1c0 	.word	0x2001e1c0
 80202e0:	2001e1ba 	.word	0x2001e1ba

080202e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80202e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202e8:	f8b1 9000 	ldrh.w	r9, [r1]
 80202ec:	b091      	sub	sp, #68	; 0x44
 80202ee:	f1b9 0f01 	cmp.w	r9, #1
 80202f2:	4604      	mov	r4, r0
 80202f4:	460f      	mov	r7, r1
 80202f6:	4690      	mov	r8, r2
 80202f8:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80202fc:	d006      	beq.n	802030c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 80202fe:	4b84      	ldr	r3, [pc, #528]	; (8020510 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 8020300:	4a84      	ldr	r2, [pc, #528]	; (8020514 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 8020302:	4885      	ldr	r0, [pc, #532]	; (8020518 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 8020304:	f240 212b 	movw	r1, #555	; 0x22b
 8020308:	f00b fe5c 	bl	802bfc4 <__assert_func>
 802030c:	2d00      	cmp	r5, #0
 802030e:	d04f      	beq.n	80203b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8020310:	6810      	ldr	r0, [r2, #0]
 8020312:	6851      	ldr	r1, [r2, #4]
 8020314:	f8df b208 	ldr.w	fp, [pc, #520]	; 8020520 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 8020318:	ae0c      	add	r6, sp, #48	; 0x30
 802031a:	c603      	stmia	r6!, {r0, r1}
 802031c:	6818      	ldr	r0, [r3, #0]
 802031e:	6859      	ldr	r1, [r3, #4]
 8020320:	ae0e      	add	r6, sp, #56	; 0x38
 8020322:	c603      	stmia	r6!, {r0, r1}
 8020324:	a80c      	add	r0, sp, #48	; 0x30
 8020326:	f7f8 fe5d 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802032a:	4641      	mov	r1, r8
 802032c:	a80e      	add	r0, sp, #56	; 0x38
 802032e:	f7f8 fe81 	bl	8019034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020332:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8020336:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 802033a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 802033e:	f8db 0000 	ldr.w	r0, [fp]
 8020342:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8020346:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 802034a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8020524 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 802034e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020352:	440c      	add	r4, r1
 8020354:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8020358:	440a      	add	r2, r1
 802035a:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 802035e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8020362:	4413      	add	r3, r2
 8020364:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8020368:	6803      	ldr	r3, [r0, #0]
 802036a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802036c:	4798      	blx	r3
 802036e:	f010 0f80 	tst.w	r0, #128	; 0x80
 8020372:	f8db 0000 	ldr.w	r0, [fp]
 8020376:	d01e      	beq.n	80203b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 8020378:	2200      	movs	r2, #0
 802037a:	6801      	ldr	r1, [r0, #0]
 802037c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8020380:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8020384:	220b      	movs	r2, #11
 8020386:	9207      	str	r2, [sp, #28]
 8020388:	f8b8 2000 	ldrh.w	r2, [r8]
 802038c:	9504      	str	r5, [sp, #16]
 802038e:	e9cd 9205 	strd	r9, r2, [sp, #20]
 8020392:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8020396:	9203      	str	r2, [sp, #12]
 8020398:	fa1f f28a 	uxth.w	r2, sl
 802039c:	9202      	str	r2, [sp, #8]
 802039e:	b2b6      	uxth	r6, r6
 80203a0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80203a4:	9200      	str	r2, [sp, #0]
 80203a6:	9601      	str	r6, [sp, #4]
 80203a8:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80203aa:	463a      	mov	r2, r7
 80203ac:	4621      	mov	r1, r4
 80203ae:	47a8      	blx	r5
 80203b0:	b011      	add	sp, #68	; 0x44
 80203b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80203b6:	6803      	ldr	r3, [r0, #0]
 80203b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80203ba:	4798      	blx	r3
 80203bc:	f8b8 2000 	ldrh.w	r2, [r8]
 80203c0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80203c4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80203c8:	2dff      	cmp	r5, #255	; 0xff
 80203ca:	fb02 1303 	mla	r3, r2, r3, r1
 80203ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80203d2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80203d6:	fb0a fa02 	mul.w	sl, sl, r2
 80203da:	d062      	beq.n	80204a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 80203dc:	ea6f 0c05 	mvn.w	ip, r5
 80203e0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80203e4:	930a      	str	r3, [sp, #40]	; 0x28
 80203e6:	b2ad      	uxth	r5, r5
 80203e8:	fa5f fc8c 	uxtb.w	ip, ip
 80203ec:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80203f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80203f2:	4298      	cmp	r0, r3
 80203f4:	f080 8085 	bcs.w	8020502 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80203f8:	eb00 0b09 	add.w	fp, r0, r9
 80203fc:	4558      	cmp	r0, fp
 80203fe:	d246      	bcs.n	802048e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8020400:	f814 eb01 	ldrb.w	lr, [r4], #1
 8020404:	2303      	movs	r3, #3
 8020406:	2204      	movs	r2, #4
 8020408:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 802040c:	eb07 0a0e 	add.w	sl, r7, lr
 8020410:	8803      	ldrh	r3, [r0, #0]
 8020412:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8020416:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802041a:	1219      	asrs	r1, r3, #8
 802041c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020420:	fb18 f805 	smulbb	r8, r8, r5
 8020424:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8020428:	10da      	asrs	r2, r3, #3
 802042a:	fb01 810c 	mla	r1, r1, ip, r8
 802042e:	00db      	lsls	r3, r3, #3
 8020430:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020434:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020438:	b2db      	uxtb	r3, r3
 802043a:	fb18 f805 	smulbb	r8, r8, r5
 802043e:	fb1e fe05 	smulbb	lr, lr, r5
 8020442:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8020446:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 802044a:	b289      	uxth	r1, r1
 802044c:	fb02 820c 	mla	r2, r2, ip, r8
 8020450:	fb03 e30c 	mla	r3, r3, ip, lr
 8020454:	b292      	uxth	r2, r2
 8020456:	b29b      	uxth	r3, r3
 8020458:	f101 0801 	add.w	r8, r1, #1
 802045c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8020460:	f103 0e01 	add.w	lr, r3, #1
 8020464:	f102 0801 	add.w	r8, r2, #1
 8020468:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 802046c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8020470:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020474:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020478:	ea4f 1858 	mov.w	r8, r8, lsr #5
 802047c:	ea4e 0101 	orr.w	r1, lr, r1
 8020480:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8020484:	ea41 0108 	orr.w	r1, r1, r8
 8020488:	f820 1b02 	strh.w	r1, [r0], #2
 802048c:	e7b6      	b.n	80203fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 802048e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020490:	881b      	ldrh	r3, [r3, #0]
 8020492:	1b9b      	subs	r3, r3, r6
 8020494:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020498:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802049c:	1b9b      	subs	r3, r3, r6
 802049e:	441c      	add	r4, r3
 80204a0:	e7a6      	b.n	80203f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 80204a2:	491e      	ldr	r1, [pc, #120]	; (802051c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 80204a4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80204a8:	2203      	movs	r2, #3
 80204aa:	2504      	movs	r5, #4
 80204ac:	4550      	cmp	r0, sl
 80204ae:	d228      	bcs.n	8020502 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80204b0:	eb00 0c09 	add.w	ip, r0, r9
 80204b4:	4560      	cmp	r0, ip
 80204b6:	4623      	mov	r3, r4
 80204b8:	d219      	bcs.n	80204ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80204ba:	f893 e000 	ldrb.w	lr, [r3]
 80204be:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80204c2:	eb07 0b0e 	add.w	fp, r7, lr
 80204c6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80204ca:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80204ce:	f89b b001 	ldrb.w	fp, [fp, #1]
 80204d2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80204d6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80204da:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80204de:	ea43 030b 	orr.w	r3, r3, fp
 80204e2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80204e6:	3401      	adds	r4, #1
 80204e8:	f820 3b02 	strh.w	r3, [r0], #2
 80204ec:	e7e2      	b.n	80204b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 80204ee:	f8b8 3000 	ldrh.w	r3, [r8]
 80204f2:	1b9b      	subs	r3, r3, r6
 80204f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80204f8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80204fc:	1b9b      	subs	r3, r3, r6
 80204fe:	441c      	add	r4, r3
 8020500:	e7d4      	b.n	80204ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 8020502:	4b07      	ldr	r3, [pc, #28]	; (8020520 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 8020504:	6818      	ldr	r0, [r3, #0]
 8020506:	6803      	ldr	r3, [r0, #0]
 8020508:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802050a:	4798      	blx	r3
 802050c:	e750      	b.n	80203b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 802050e:	bf00      	nop
 8020510:	080358ba 	.word	0x080358ba
 8020514:	08035f8e 	.word	0x08035f8e
 8020518:	08035a8c 	.word	0x08035a8c
 802051c:	fffff800 	.word	0xfffff800
 8020520:	2001e1c0 	.word	0x2001e1c0
 8020524:	2001e1ba 	.word	0x2001e1ba

08020528 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8020528:	b430      	push	{r4, r5}
 802052a:	780d      	ldrb	r5, [r1, #0]
 802052c:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8020530:	2d01      	cmp	r5, #1
 8020532:	d00a      	beq.n	802054a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8020534:	d305      	bcc.n	8020542 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8020536:	2d02      	cmp	r5, #2
 8020538:	d10b      	bne.n	8020552 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 802053a:	9402      	str	r4, [sp, #8]
 802053c:	bc30      	pop	{r4, r5}
 802053e:	f7ff bdf5 	b.w	802012c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8020542:	9402      	str	r4, [sp, #8]
 8020544:	bc30      	pop	{r4, r5}
 8020546:	f7ff bcfb 	b.w	801ff40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 802054a:	9402      	str	r4, [sp, #8]
 802054c:	bc30      	pop	{r4, r5}
 802054e:	f7ff bec9 	b.w	80202e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8020552:	bc30      	pop	{r4, r5}
 8020554:	4770      	bx	lr
	...

08020558 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8020558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802055c:	4604      	mov	r4, r0
 802055e:	b087      	sub	sp, #28
 8020560:	6810      	ldr	r0, [r2, #0]
 8020562:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8020566:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80207a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 802056a:	460e      	mov	r6, r1
 802056c:	6851      	ldr	r1, [r2, #4]
 802056e:	ad02      	add	r5, sp, #8
 8020570:	c503      	stmia	r5!, {r0, r1}
 8020572:	6818      	ldr	r0, [r3, #0]
 8020574:	6859      	ldr	r1, [r3, #4]
 8020576:	ad04      	add	r5, sp, #16
 8020578:	4617      	mov	r7, r2
 802057a:	c503      	stmia	r5!, {r0, r1}
 802057c:	a802      	add	r0, sp, #8
 802057e:	f7f8 fd31 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020582:	4639      	mov	r1, r7
 8020584:	a804      	add	r0, sp, #16
 8020586:	f7f8 fd55 	bl	8019034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802058a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802058e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020592:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8020596:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 802059a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 802059e:	fb11 2103 	smlabb	r1, r1, r3, r2
 80205a2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80205a6:	440e      	add	r6, r1
 80205a8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80205ac:	440a      	add	r2, r1
 80205ae:	f8ad 2010 	strh.w	r2, [sp, #16]
 80205b2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80205b6:	4413      	add	r3, r2
 80205b8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80205bc:	4b77      	ldr	r3, [pc, #476]	; (802079c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80205be:	6818      	ldr	r0, [r3, #0]
 80205c0:	6803      	ldr	r3, [r0, #0]
 80205c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80205c4:	4798      	blx	r3
 80205c6:	f8b9 b000 	ldrh.w	fp, [r9]
 80205ca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80205ce:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80205d2:	fb0b 2303 	mla	r3, fp, r3, r2
 80205d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80205da:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80205de:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80205e2:	fb05 f50b 	mul.w	r5, r5, fp
 80205e6:	9300      	str	r3, [sp, #0]
 80205e8:	d069      	beq.n	80206be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80205ea:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80205ee:	4558      	cmp	r0, fp
 80205f0:	f080 80cc 	bcs.w	802078c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80205f4:	9b00      	ldr	r3, [sp, #0]
 80205f6:	18c3      	adds	r3, r0, r3
 80205f8:	9301      	str	r3, [sp, #4]
 80205fa:	4631      	mov	r1, r6
 80205fc:	9b01      	ldr	r3, [sp, #4]
 80205fe:	4298      	cmp	r0, r3
 8020600:	d24f      	bcs.n	80206a2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8020602:	f811 2b01 	ldrb.w	r2, [r1], #1
 8020606:	2a00      	cmp	r2, #0
 8020608:	d048      	beq.n	802069c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 802060a:	fb0a f202 	mul.w	r2, sl, r2
 802060e:	1c53      	adds	r3, r2, #1
 8020610:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020614:	121b      	asrs	r3, r3, #8
 8020616:	d041      	beq.n	802069c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8020618:	8802      	ldrh	r2, [r0, #0]
 802061a:	f8b4 c000 	ldrh.w	ip, [r4]
 802061e:	b29e      	uxth	r6, r3
 8020620:	1215      	asrs	r5, r2, #8
 8020622:	43db      	mvns	r3, r3
 8020624:	b2db      	uxtb	r3, r3
 8020626:	ea4f 272c 	mov.w	r7, ip, asr #8
 802062a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802062e:	fb15 f503 	smulbb	r5, r5, r3
 8020632:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8020636:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 802063a:	00d2      	lsls	r2, r2, #3
 802063c:	fb07 5706 	mla	r7, r7, r6, r5
 8020640:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8020644:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8020648:	b2d2      	uxtb	r2, r2
 802064a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802064e:	b2bf      	uxth	r7, r7
 8020650:	fb1e fe03 	smulbb	lr, lr, r3
 8020654:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020658:	fa5f fc8c 	uxtb.w	ip, ip
 802065c:	fb12 f203 	smulbb	r2, r2, r3
 8020660:	fb05 e506 	mla	r5, r5, r6, lr
 8020664:	fb0c 2c06 	mla	ip, ip, r6, r2
 8020668:	f107 0e01 	add.w	lr, r7, #1
 802066c:	fa1f fc8c 	uxth.w	ip, ip
 8020670:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8020674:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8020678:	f10c 0701 	add.w	r7, ip, #1
 802067c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020680:	b2ad      	uxth	r5, r5
 8020682:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020686:	ea47 070e 	orr.w	r7, r7, lr
 802068a:	f105 0e01 	add.w	lr, r5, #1
 802068e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8020692:	096d      	lsrs	r5, r5, #5
 8020694:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020698:	432f      	orrs	r7, r5
 802069a:	8007      	strh	r7, [r0, #0]
 802069c:	3002      	adds	r0, #2
 802069e:	3402      	adds	r4, #2
 80206a0:	e7ac      	b.n	80205fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80206a2:	f8b9 3000 	ldrh.w	r3, [r9]
 80206a6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80206aa:	eba3 0308 	sub.w	r3, r3, r8
 80206ae:	eba6 0608 	sub.w	r6, r6, r8
 80206b2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80206b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80206ba:	440e      	add	r6, r1
 80206bc:	e797      	b.n	80205ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80206be:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80206c2:	42a8      	cmp	r0, r5
 80206c4:	d262      	bcs.n	802078c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80206c6:	9b00      	ldr	r3, [sp, #0]
 80206c8:	4631      	mov	r1, r6
 80206ca:	eb00 0b03 	add.w	fp, r0, r3
 80206ce:	4558      	cmp	r0, fp
 80206d0:	d24e      	bcs.n	8020770 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80206d2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80206d6:	b12b      	cbz	r3, 80206e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80206d8:	2bff      	cmp	r3, #255	; 0xff
 80206da:	f8b4 e000 	ldrh.w	lr, [r4]
 80206de:	d104      	bne.n	80206ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80206e0:	f8a0 e000 	strh.w	lr, [r0]
 80206e4:	3002      	adds	r0, #2
 80206e6:	3402      	adds	r4, #2
 80206e8:	e7f1      	b.n	80206ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80206ea:	8802      	ldrh	r2, [r0, #0]
 80206ec:	b29f      	uxth	r7, r3
 80206ee:	1216      	asrs	r6, r2, #8
 80206f0:	43db      	mvns	r3, r3
 80206f2:	b2db      	uxtb	r3, r3
 80206f4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80206f8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80206fc:	fb16 f603 	smulbb	r6, r6, r3
 8020700:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8020704:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020708:	00d2      	lsls	r2, r2, #3
 802070a:	fb0c 6c07 	mla	ip, ip, r7, r6
 802070e:	b2d2      	uxtb	r2, r2
 8020710:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8020714:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8020718:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802071c:	fb1a fa03 	smulbb	sl, sl, r3
 8020720:	fa1f fc8c 	uxth.w	ip, ip
 8020724:	fb12 f303 	smulbb	r3, r2, r3
 8020728:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802072c:	fa5f fe8e 	uxtb.w	lr, lr
 8020730:	fb06 a607 	mla	r6, r6, r7, sl
 8020734:	f10c 0201 	add.w	r2, ip, #1
 8020738:	fb0e 3307 	mla	r3, lr, r7, r3
 802073c:	b2b6      	uxth	r6, r6
 802073e:	b29b      	uxth	r3, r3
 8020740:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8020744:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8020748:	f106 0a01 	add.w	sl, r6, #1
 802074c:	f103 0c01 	add.w	ip, r3, #1
 8020750:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020754:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8020758:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802075c:	0976      	lsrs	r6, r6, #5
 802075e:	ea4c 0c02 	orr.w	ip, ip, r2
 8020762:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8020766:	ea4c 0c06 	orr.w	ip, ip, r6
 802076a:	f8a0 c000 	strh.w	ip, [r0]
 802076e:	e7b9      	b.n	80206e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8020770:	f8b9 3000 	ldrh.w	r3, [r9]
 8020774:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8020778:	eba3 0308 	sub.w	r3, r3, r8
 802077c:	eba6 0608 	sub.w	r6, r6, r8
 8020780:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8020784:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020788:	440e      	add	r6, r1
 802078a:	e79a      	b.n	80206c2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 802078c:	4b03      	ldr	r3, [pc, #12]	; (802079c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802078e:	6818      	ldr	r0, [r3, #0]
 8020790:	6803      	ldr	r3, [r0, #0]
 8020792:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020794:	4798      	blx	r3
 8020796:	b007      	add	sp, #28
 8020798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802079c:	2001e1c0 	.word	0x2001e1c0
 80207a0:	2001e1ba 	.word	0x2001e1ba

080207a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80207a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207a8:	b089      	sub	sp, #36	; 0x24
 80207aa:	4682      	mov	sl, r0
 80207ac:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80207b0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80207b2:	460f      	mov	r7, r1
 80207b4:	4691      	mov	r9, r2
 80207b6:	4698      	mov	r8, r3
 80207b8:	2e00      	cmp	r6, #0
 80207ba:	d03d      	beq.n	8020838 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80207bc:	4608      	mov	r0, r1
 80207be:	f7fb ff7d 	bl	801c6bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80207c2:	4605      	mov	r5, r0
 80207c4:	4638      	mov	r0, r7
 80207c6:	f7fb ffbd 	bl	801c744 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80207ca:	f8ad 000e 	strh.w	r0, [sp, #14]
 80207ce:	4638      	mov	r0, r7
 80207d0:	f8ad 9008 	strh.w	r9, [sp, #8]
 80207d4:	f8ad 500c 	strh.w	r5, [sp, #12]
 80207d8:	f8ad 800a 	strh.w	r8, [sp, #10]
 80207dc:	f7fc f88a 	bl	801c8f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 80207e0:	4605      	mov	r5, r0
 80207e2:	4638      	mov	r0, r7
 80207e4:	f7fc f8b8 	bl	801c958 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80207e8:	4681      	mov	r9, r0
 80207ea:	4638      	mov	r0, r7
 80207ec:	f7fc f90c 	bl	801ca08 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80207f0:	280b      	cmp	r0, #11
 80207f2:	f200 816f 	bhi.w	8020ad4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 80207f6:	e8df f010 	tbh	[pc, r0, lsl #1]
 80207fa:	00c3      	.short	0x00c3
 80207fc:	000c00b4 	.word	0x000c00b4
 8020800:	016d016d 	.word	0x016d016d
 8020804:	016d016d 	.word	0x016d016d
 8020808:	016d016d 	.word	0x016d016d
 802080c:	016d016d 	.word	0x016d016d
 8020810:	00bb      	.short	0x00bb
 8020812:	4bb3      	ldr	r3, [pc, #716]	; (8020ae0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 8020814:	6818      	ldr	r0, [r3, #0]
 8020816:	6803      	ldr	r3, [r0, #0]
 8020818:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802081a:	4798      	blx	r3
 802081c:	2eff      	cmp	r6, #255	; 0xff
 802081e:	d121      	bne.n	8020864 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8020820:	0683      	lsls	r3, r0, #26
 8020822:	d41f      	bmi.n	8020864 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8020824:	4638      	mov	r0, r7
 8020826:	f7fc f82b 	bl	801c880 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 802082a:	b940      	cbnz	r0, 802083e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 802082c:	4623      	mov	r3, r4
 802082e:	aa02      	add	r2, sp, #8
 8020830:	4629      	mov	r1, r5
 8020832:	4650      	mov	r0, sl
 8020834:	f7ff f9e4 	bl	801fc00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8020838:	b009      	add	sp, #36	; 0x24
 802083a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802083e:	f10d 0818 	add.w	r8, sp, #24
 8020842:	4639      	mov	r1, r7
 8020844:	4640      	mov	r0, r8
 8020846:	f7fb ffc1 	bl	801c7cc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802084a:	e898 0003 	ldmia.w	r8, {r0, r1}
 802084e:	af04      	add	r7, sp, #16
 8020850:	e887 0003 	stmia.w	r7, {r0, r1}
 8020854:	4638      	mov	r0, r7
 8020856:	4621      	mov	r1, r4
 8020858:	f7f1 fc44 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 802085c:	4638      	mov	r0, r7
 802085e:	f7f1 fc84 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 8020862:	b130      	cbz	r0, 8020872 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 8020864:	4633      	mov	r3, r6
 8020866:	4622      	mov	r2, r4
 8020868:	a902      	add	r1, sp, #8
 802086a:	4628      	mov	r0, r5
 802086c:	f7ff f8e2 	bl	801fa34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020870:	e7e2      	b.n	8020838 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8020872:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020876:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 802087a:	4293      	cmp	r3, r2
 802087c:	dd12      	ble.n	80208a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 802087e:	1a9b      	subs	r3, r3, r2
 8020880:	f9b4 0000 	ldrsh.w	r0, [r4]
 8020884:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020888:	f8ad 0018 	strh.w	r0, [sp, #24]
 802088c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8020890:	f8ad 101c 	strh.w	r1, [sp, #28]
 8020894:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020898:	4642      	mov	r2, r8
 802089a:	4633      	mov	r3, r6
 802089c:	a902      	add	r1, sp, #8
 802089e:	4628      	mov	r0, r5
 80208a0:	f7ff f8c8 	bl	801fa34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80208a4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80208a8:	f9b4 2000 	ldrsh.w	r2, [r4]
 80208ac:	4293      	cmp	r3, r2
 80208ae:	dd12      	ble.n	80208d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 80208b0:	1a9b      	subs	r3, r3, r2
 80208b2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80208b6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80208ba:	f8ad 2018 	strh.w	r2, [sp, #24]
 80208be:	f8ad 001a 	strh.w	r0, [sp, #26]
 80208c2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80208c6:	f8ad 101e 	strh.w	r1, [sp, #30]
 80208ca:	23ff      	movs	r3, #255	; 0xff
 80208cc:	4642      	mov	r2, r8
 80208ce:	a902      	add	r1, sp, #8
 80208d0:	4628      	mov	r0, r5
 80208d2:	f7ff f8af 	bl	801fa34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80208d6:	463b      	mov	r3, r7
 80208d8:	aa02      	add	r2, sp, #8
 80208da:	4629      	mov	r1, r5
 80208dc:	4650      	mov	r0, sl
 80208de:	f7ff f98f 	bl	801fc00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80208e2:	88a2      	ldrh	r2, [r4, #4]
 80208e4:	8823      	ldrh	r3, [r4, #0]
 80208e6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80208ea:	4413      	add	r3, r2
 80208ec:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80208f0:	440a      	add	r2, r1
 80208f2:	b29b      	uxth	r3, r3
 80208f4:	b292      	uxth	r2, r2
 80208f6:	b211      	sxth	r1, r2
 80208f8:	b218      	sxth	r0, r3
 80208fa:	4288      	cmp	r0, r1
 80208fc:	dd12      	ble.n	8020924 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 80208fe:	1a9b      	subs	r3, r3, r2
 8020900:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8020904:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8020908:	f8ad 1018 	strh.w	r1, [sp, #24]
 802090c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020910:	f8ad 001e 	strh.w	r0, [sp, #30]
 8020914:	23ff      	movs	r3, #255	; 0xff
 8020916:	4642      	mov	r2, r8
 8020918:	a902      	add	r1, sp, #8
 802091a:	4628      	mov	r0, r5
 802091c:	f8ad 601a 	strh.w	r6, [sp, #26]
 8020920:	f7ff f888 	bl	801fa34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020924:	88e2      	ldrh	r2, [r4, #6]
 8020926:	8863      	ldrh	r3, [r4, #2]
 8020928:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802092c:	4413      	add	r3, r2
 802092e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8020932:	440a      	add	r2, r1
 8020934:	b29b      	uxth	r3, r3
 8020936:	b292      	uxth	r2, r2
 8020938:	b211      	sxth	r1, r2
 802093a:	b218      	sxth	r0, r3
 802093c:	4288      	cmp	r0, r1
 802093e:	f77f af7b 	ble.w	8020838 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8020942:	1a9b      	subs	r3, r3, r2
 8020944:	f9b4 6000 	ldrsh.w	r6, [r4]
 8020948:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802094c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020950:	f8ad 6018 	strh.w	r6, [sp, #24]
 8020954:	f8ad 101a 	strh.w	r1, [sp, #26]
 8020958:	f8ad 001c 	strh.w	r0, [sp, #28]
 802095c:	23ff      	movs	r3, #255	; 0xff
 802095e:	4642      	mov	r2, r8
 8020960:	e782      	b.n	8020868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 8020962:	4633      	mov	r3, r6
 8020964:	4622      	mov	r2, r4
 8020966:	a902      	add	r1, sp, #8
 8020968:	4628      	mov	r0, r5
 802096a:	f7ff f9b9 	bl	801fce0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 802096e:	e763      	b.n	8020838 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8020970:	9600      	str	r6, [sp, #0]
 8020972:	4623      	mov	r3, r4
 8020974:	aa02      	add	r2, sp, #8
 8020976:	4649      	mov	r1, r9
 8020978:	4628      	mov	r0, r5
 802097a:	f7ff fdd5 	bl	8020528 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802097e:	e75b      	b.n	8020838 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8020980:	4638      	mov	r0, r7
 8020982:	f7fb ff7d 	bl	801c880 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8020986:	b950      	cbnz	r0, 802099e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 8020988:	e9cd 6000 	strd	r6, r0, [sp]
 802098c:	f8da 3000 	ldr.w	r3, [sl]
 8020990:	aa02      	add	r2, sp, #8
 8020992:	68de      	ldr	r6, [r3, #12]
 8020994:	4629      	mov	r1, r5
 8020996:	4623      	mov	r3, r4
 8020998:	4650      	mov	r0, sl
 802099a:	47b0      	blx	r6
 802099c:	e74c      	b.n	8020838 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802099e:	f10d 0818 	add.w	r8, sp, #24
 80209a2:	4639      	mov	r1, r7
 80209a4:	4640      	mov	r0, r8
 80209a6:	f7fb ff11 	bl	801c7cc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80209aa:	e898 0003 	ldmia.w	r8, {r0, r1}
 80209ae:	af04      	add	r7, sp, #16
 80209b0:	e887 0003 	stmia.w	r7, {r0, r1}
 80209b4:	4638      	mov	r0, r7
 80209b6:	4621      	mov	r1, r4
 80209b8:	f7f1 fb94 	bl	80120e4 <_ZN8touchgfx4RectaNERKS0_>
 80209bc:	4638      	mov	r0, r7
 80209be:	f7f1 fbd4 	bl	801216a <_ZNK8touchgfx4Rect7isEmptyEv>
 80209c2:	b138      	cbz	r0, 80209d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 80209c4:	9600      	str	r6, [sp, #0]
 80209c6:	4623      	mov	r3, r4
 80209c8:	aa02      	add	r2, sp, #8
 80209ca:	4649      	mov	r1, r9
 80209cc:	4628      	mov	r0, r5
 80209ce:	f7ff fdc3 	bl	8020558 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80209d2:	e731      	b.n	8020838 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80209d4:	e9cd 6000 	strd	r6, r0, [sp]
 80209d8:	f8da 3000 	ldr.w	r3, [sl]
 80209dc:	aa02      	add	r2, sp, #8
 80209de:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80209e2:	4629      	mov	r1, r5
 80209e4:	463b      	mov	r3, r7
 80209e6:	4650      	mov	r0, sl
 80209e8:	47d8      	blx	fp
 80209ea:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80209ee:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80209f2:	4293      	cmp	r3, r2
 80209f4:	dd13      	ble.n	8020a1e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 80209f6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80209fa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80209fe:	f8ad 0018 	strh.w	r0, [sp, #24]
 8020a02:	1a9b      	subs	r3, r3, r2
 8020a04:	f8ad 201a 	strh.w	r2, [sp, #26]
 8020a08:	f8ad 101c 	strh.w	r1, [sp, #28]
 8020a0c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020a10:	9600      	str	r6, [sp, #0]
 8020a12:	4643      	mov	r3, r8
 8020a14:	aa02      	add	r2, sp, #8
 8020a16:	4649      	mov	r1, r9
 8020a18:	4628      	mov	r0, r5
 8020a1a:	f7ff fd9d 	bl	8020558 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020a1e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8020a22:	f9b4 2000 	ldrsh.w	r2, [r4]
 8020a26:	4293      	cmp	r3, r2
 8020a28:	dd13      	ble.n	8020a52 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 8020a2a:	1a9b      	subs	r3, r3, r2
 8020a2c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8020a30:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8020a34:	f8ad 2018 	strh.w	r2, [sp, #24]
 8020a38:	f8ad 001a 	strh.w	r0, [sp, #26]
 8020a3c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020a40:	f8ad 101e 	strh.w	r1, [sp, #30]
 8020a44:	9600      	str	r6, [sp, #0]
 8020a46:	4643      	mov	r3, r8
 8020a48:	aa02      	add	r2, sp, #8
 8020a4a:	4649      	mov	r1, r9
 8020a4c:	4628      	mov	r0, r5
 8020a4e:	f7ff fd83 	bl	8020558 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020a52:	88a2      	ldrh	r2, [r4, #4]
 8020a54:	8823      	ldrh	r3, [r4, #0]
 8020a56:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8020a5a:	4413      	add	r3, r2
 8020a5c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020a60:	440a      	add	r2, r1
 8020a62:	b29b      	uxth	r3, r3
 8020a64:	b292      	uxth	r2, r2
 8020a66:	b211      	sxth	r1, r2
 8020a68:	b218      	sxth	r0, r3
 8020a6a:	4288      	cmp	r0, r1
 8020a6c:	dd13      	ble.n	8020a96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 8020a6e:	1a9b      	subs	r3, r3, r2
 8020a70:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8020a74:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8020a78:	f8ad 1018 	strh.w	r1, [sp, #24]
 8020a7c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020a80:	f8ad 001e 	strh.w	r0, [sp, #30]
 8020a84:	9600      	str	r6, [sp, #0]
 8020a86:	4643      	mov	r3, r8
 8020a88:	aa02      	add	r2, sp, #8
 8020a8a:	4649      	mov	r1, r9
 8020a8c:	4628      	mov	r0, r5
 8020a8e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8020a92:	f7ff fd61 	bl	8020558 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020a96:	88e2      	ldrh	r2, [r4, #6]
 8020a98:	8863      	ldrh	r3, [r4, #2]
 8020a9a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8020a9e:	4413      	add	r3, r2
 8020aa0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8020aa4:	440a      	add	r2, r1
 8020aa6:	b29b      	uxth	r3, r3
 8020aa8:	b292      	uxth	r2, r2
 8020aaa:	b211      	sxth	r1, r2
 8020aac:	b218      	sxth	r0, r3
 8020aae:	4288      	cmp	r0, r1
 8020ab0:	f77f aec2 	ble.w	8020838 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8020ab4:	f9b4 7000 	ldrsh.w	r7, [r4]
 8020ab8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020abc:	f8ad 7018 	strh.w	r7, [sp, #24]
 8020ac0:	1a9b      	subs	r3, r3, r2
 8020ac2:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020ac6:	f8ad 101a 	strh.w	r1, [sp, #26]
 8020aca:	f8ad 001c 	strh.w	r0, [sp, #28]
 8020ace:	9600      	str	r6, [sp, #0]
 8020ad0:	4643      	mov	r3, r8
 8020ad2:	e779      	b.n	80209c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8020ad4:	4b03      	ldr	r3, [pc, #12]	; (8020ae4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 8020ad6:	4a04      	ldr	r2, [pc, #16]	; (8020ae8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 8020ad8:	4804      	ldr	r0, [pc, #16]	; (8020aec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 8020ada:	21b0      	movs	r1, #176	; 0xb0
 8020adc:	f00b fa72 	bl	802bfc4 <__assert_func>
 8020ae0:	2001e1c0 	.word	0x2001e1c0
 8020ae4:	08035908 	.word	0x08035908
 8020ae8:	08036017 	.word	0x08036017
 8020aec:	08035a8c 	.word	0x08035a8c

08020af0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8020af0:	b508      	push	{r3, lr}
 8020af2:	b180      	cbz	r0, 8020b16 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8020af4:	2902      	cmp	r1, #2
 8020af6:	d014      	beq.n	8020b22 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8020af8:	2903      	cmp	r1, #3
 8020afa:	d01d      	beq.n	8020b38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8020afc:	2901      	cmp	r1, #1
 8020afe:	d101      	bne.n	8020b04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8020b00:	2001      	movs	r0, #1
 8020b02:	bd08      	pop	{r3, pc}
 8020b04:	4b0e      	ldr	r3, [pc, #56]	; (8020b40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8020b06:	8818      	ldrh	r0, [r3, #0]
 8020b08:	b990      	cbnz	r0, 8020b30 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8020b0a:	4b0e      	ldr	r3, [pc, #56]	; (8020b44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8020b0c:	4a0e      	ldr	r2, [pc, #56]	; (8020b48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8020b0e:	480f      	ldr	r0, [pc, #60]	; (8020b4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8020b10:	2153      	movs	r1, #83	; 0x53
 8020b12:	f00b fa57 	bl	802bfc4 <__assert_func>
 8020b16:	2902      	cmp	r1, #2
 8020b18:	d00e      	beq.n	8020b38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8020b1a:	2903      	cmp	r1, #3
 8020b1c:	d0f2      	beq.n	8020b04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8020b1e:	2901      	cmp	r1, #1
 8020b20:	d1ee      	bne.n	8020b00 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8020b22:	4b07      	ldr	r3, [pc, #28]	; (8020b40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8020b24:	8818      	ldrh	r0, [r3, #0]
 8020b26:	2800      	cmp	r0, #0
 8020b28:	d0ef      	beq.n	8020b0a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8020b2a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020b2e:	e7e8      	b.n	8020b02 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8020b30:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020b34:	4240      	negs	r0, r0
 8020b36:	e7e4      	b.n	8020b02 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8020b38:	f04f 30ff 	mov.w	r0, #4294967295
 8020b3c:	e7e1      	b.n	8020b02 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8020b3e:	bf00      	nop
 8020b40:	2001e1ba 	.word	0x2001e1ba
 8020b44:	08035b82 	.word	0x08035b82
 8020b48:	08036194 	.word	0x08036194
 8020b4c:	08035bc4 	.word	0x08035bc4

08020b50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8020b50:	b508      	push	{r3, lr}
 8020b52:	b180      	cbz	r0, 8020b76 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8020b54:	2902      	cmp	r1, #2
 8020b56:	d014      	beq.n	8020b82 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8020b58:	2903      	cmp	r1, #3
 8020b5a:	d018      	beq.n	8020b8e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8020b5c:	2901      	cmp	r1, #1
 8020b5e:	d001      	beq.n	8020b64 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8020b60:	2001      	movs	r0, #1
 8020b62:	e013      	b.n	8020b8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8020b64:	4b0e      	ldr	r3, [pc, #56]	; (8020ba0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8020b66:	8818      	ldrh	r0, [r3, #0]
 8020b68:	b970      	cbnz	r0, 8020b88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8020b6a:	4b0e      	ldr	r3, [pc, #56]	; (8020ba4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8020b6c:	4a0e      	ldr	r2, [pc, #56]	; (8020ba8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8020b6e:	480f      	ldr	r0, [pc, #60]	; (8020bac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8020b70:	2153      	movs	r1, #83	; 0x53
 8020b72:	f00b fa27 	bl	802bfc4 <__assert_func>
 8020b76:	2902      	cmp	r1, #2
 8020b78:	d009      	beq.n	8020b8e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8020b7a:	2903      	cmp	r1, #3
 8020b7c:	d0f0      	beq.n	8020b60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8020b7e:	2901      	cmp	r1, #1
 8020b80:	d1f0      	bne.n	8020b64 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8020b82:	f04f 30ff 	mov.w	r0, #4294967295
 8020b86:	e001      	b.n	8020b8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8020b88:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020b8c:	bd08      	pop	{r3, pc}
 8020b8e:	4b04      	ldr	r3, [pc, #16]	; (8020ba0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8020b90:	8818      	ldrh	r0, [r3, #0]
 8020b92:	2800      	cmp	r0, #0
 8020b94:	d0e9      	beq.n	8020b6a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8020b96:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020b9a:	4240      	negs	r0, r0
 8020b9c:	e7f6      	b.n	8020b8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8020b9e:	bf00      	nop
 8020ba0:	2001e1ba 	.word	0x2001e1ba
 8020ba4:	08035b82 	.word	0x08035b82
 8020ba8:	08036194 	.word	0x08036194
 8020bac:	08035bc4 	.word	0x08035bc4

08020bb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8020bb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020bb4:	b099      	sub	sp, #100	; 0x64
 8020bb6:	910b      	str	r1, [sp, #44]	; 0x2c
 8020bb8:	a914      	add	r1, sp, #80	; 0x50
 8020bba:	e881 000c 	stmia.w	r1, {r2, r3}
 8020bbe:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8020bc2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8020bc6:	930a      	str	r3, [sp, #40]	; 0x28
 8020bc8:	f891 900d 	ldrb.w	r9, [r1, #13]
 8020bcc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8020bd0:	9311      	str	r3, [sp, #68]	; 0x44
 8020bd2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8020bd6:	930c      	str	r3, [sp, #48]	; 0x30
 8020bd8:	7988      	ldrb	r0, [r1, #6]
 8020bda:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8020bde:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8020be2:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8020be6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8020bea:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8020bee:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8020bf2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8020bf6:	4303      	orrs	r3, r0
 8020bf8:	9309      	str	r3, [sp, #36]	; 0x24
 8020bfa:	f000 81a1 	beq.w	8020f40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8020bfe:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8020c02:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8020c06:	f891 9007 	ldrb.w	r9, [r1, #7]
 8020c0a:	ea59 0903 	orrs.w	r9, r9, r3
 8020c0e:	f000 8197 	beq.w	8020f40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8020c12:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8020c16:	b29b      	uxth	r3, r3
 8020c18:	2e00      	cmp	r6, #0
 8020c1a:	f000 813a 	beq.w	8020e92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8020c1e:	1af6      	subs	r6, r6, r3
 8020c20:	b2b6      	uxth	r6, r6
 8020c22:	0433      	lsls	r3, r6, #16
 8020c24:	d502      	bpl.n	8020c2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8020c26:	1bad      	subs	r5, r5, r6
 8020c28:	b22d      	sxth	r5, r5
 8020c2a:	2600      	movs	r6, #0
 8020c2c:	f9b2 1000 	ldrsh.w	r1, [r2]
 8020c30:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8020c34:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8020c38:	428d      	cmp	r5, r1
 8020c3a:	b28b      	uxth	r3, r1
 8020c3c:	bfbf      	itttt	lt
 8020c3e:	18f6      	addlt	r6, r6, r3
 8020c40:	1b75      	sublt	r5, r6, r5
 8020c42:	b2ae      	uxthlt	r6, r5
 8020c44:	460d      	movlt	r5, r1
 8020c46:	8891      	ldrh	r1, [r2, #4]
 8020c48:	440b      	add	r3, r1
 8020c4a:	b21b      	sxth	r3, r3
 8020c4c:	9310      	str	r3, [sp, #64]	; 0x40
 8020c4e:	88d3      	ldrh	r3, [r2, #6]
 8020c50:	8852      	ldrh	r2, [r2, #2]
 8020c52:	4413      	add	r3, r2
 8020c54:	b21b      	sxth	r3, r3
 8020c56:	930f      	str	r3, [sp, #60]	; 0x3c
 8020c58:	4bbc      	ldr	r3, [pc, #752]	; (8020f4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8020c5a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020c5c:	f893 b000 	ldrb.w	fp, [r3]
 8020c60:	f10b 3cff 	add.w	ip, fp, #4294967295
 8020c64:	f1dc 0300 	rsbs	r3, ip, #0
 8020c68:	eb43 030c 	adc.w	r3, r3, ip
 8020c6c:	930e      	str	r3, [sp, #56]	; 0x38
 8020c6e:	4629      	mov	r1, r5
 8020c70:	4653      	mov	r3, sl
 8020c72:	a814      	add	r0, sp, #80	; 0x50
 8020c74:	f7f8 f83b 	bl	8018cee <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8020c78:	4629      	mov	r1, r5
 8020c7a:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8020c7e:	4653      	mov	r3, sl
 8020c80:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020c82:	a814      	add	r0, sp, #80	; 0x50
 8020c84:	f7f8 f84b 	bl	8018d1e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8020c88:	a918      	add	r1, sp, #96	; 0x60
 8020c8a:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8020c8e:	a817      	add	r0, sp, #92	; 0x5c
 8020c90:	f7f8 f966 	bl	8018f60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8020c94:	f1ba 0f00 	cmp.w	sl, #0
 8020c98:	f040 80fe 	bne.w	8020e98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8020c9c:	f1bb 0f01 	cmp.w	fp, #1
 8020ca0:	f040 8102 	bne.w	8020ea8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 8020ca4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020ca6:	b153      	cbz	r3, 8020cbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8020ca8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020caa:	2408      	movs	r4, #8
 8020cac:	fb94 f3f8 	sdiv	r3, r4, r8
 8020cb0:	1e5c      	subs	r4, r3, #1
 8020cb2:	4414      	add	r4, r2
 8020cb4:	fb94 f4f3 	sdiv	r4, r4, r3
 8020cb8:	fb14 f403 	smulbb	r4, r4, r3
 8020cbc:	b2a4      	uxth	r4, r4
 8020cbe:	b906      	cbnz	r6, 8020cc2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8020cc0:	b16f      	cbz	r7, 8020cde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 8020cc2:	fb07 6304 	mla	r3, r7, r4, r6
 8020cc6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020cc8:	fb08 f303 	mul.w	r3, r8, r3
 8020ccc:	463a      	mov	r2, r7
 8020cce:	f003 0707 	and.w	r7, r3, #7
 8020cd2:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 8020cd6:	9328      	str	r3, [sp, #160]	; 0xa0
 8020cd8:	eba9 0302 	sub.w	r3, r9, r2
 8020cdc:	930d      	str	r3, [sp, #52]	; 0x34
 8020cde:	4651      	mov	r1, sl
 8020ce0:	980e      	ldr	r0, [sp, #56]	; 0x38
 8020ce2:	f7ff ff05 	bl	8020af0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8020ce6:	4651      	mov	r1, sl
 8020ce8:	4681      	mov	r9, r0
 8020cea:	980e      	ldr	r0, [sp, #56]	; 0x38
 8020cec:	f7ff ff30 	bl	8020b50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8020cf0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020cf2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020cf4:	eba3 0a02 	sub.w	sl, r3, r2
 8020cf8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020cfa:	459a      	cmp	sl, r3
 8020cfc:	bfa8      	it	ge
 8020cfe:	469a      	movge	sl, r3
 8020d00:	f1ba 0f00 	cmp.w	sl, #0
 8020d04:	4683      	mov	fp, r0
 8020d06:	f340 811b 	ble.w	8020f40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8020d0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020d0c:	1bad      	subs	r5, r5, r6
 8020d0e:	1b5d      	subs	r5, r3, r5
 8020d10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d12:	429d      	cmp	r5, r3
 8020d14:	bfd4      	ite	le
 8020d16:	ebc6 0605 	rsble	r6, r6, r5
 8020d1a:	ebc6 0603 	rsbgt	r6, r6, r3
 8020d1e:	2e00      	cmp	r6, #0
 8020d20:	f340 810e 	ble.w	8020f40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8020d24:	1ba4      	subs	r4, r4, r6
 8020d26:	fb08 f304 	mul.w	r3, r8, r4
 8020d2a:	930f      	str	r3, [sp, #60]	; 0x3c
 8020d2c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020d2e:	2b00      	cmp	r3, #0
 8020d30:	f040 8114 	bne.w	8020f5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8020d34:	4b86      	ldr	r3, [pc, #536]	; (8020f50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8020d36:	6818      	ldr	r0, [r3, #0]
 8020d38:	6803      	ldr	r3, [r0, #0]
 8020d3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020d3c:	4798      	blx	r3
 8020d3e:	2301      	movs	r3, #1
 8020d40:	fa03 f308 	lsl.w	r3, r3, r8
 8020d44:	4a83      	ldr	r2, [pc, #524]	; (8020f54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8020d46:	3b01      	subs	r3, #1
 8020d48:	b2db      	uxtb	r3, r3
 8020d4a:	8811      	ldrh	r1, [r2, #0]
 8020d4c:	930e      	str	r3, [sp, #56]	; 0x38
 8020d4e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8020d52:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8020d56:	fb01 2303 	mla	r3, r1, r3, r2
 8020d5a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020d5e:	930a      	str	r3, [sp, #40]	; 0x28
 8020d60:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020d62:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8020d66:	9313      	str	r3, [sp, #76]	; 0x4c
 8020d68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020d6a:	0a19      	lsrs	r1, r3, #8
 8020d6c:	b2cb      	uxtb	r3, r1
 8020d6e:	9312      	str	r3, [sp, #72]	; 0x48
 8020d70:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020d72:	b2db      	uxtb	r3, r3
 8020d74:	9311      	str	r3, [sp, #68]	; 0x44
 8020d76:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020d78:	095a      	lsrs	r2, r3, #5
 8020d7a:	4b77      	ldr	r3, [pc, #476]	; (8020f58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8020d7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020d80:	400b      	ands	r3, r1
 8020d82:	4313      	orrs	r3, r2
 8020d84:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8020d86:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020d8a:	4313      	orrs	r3, r2
 8020d8c:	b29b      	uxth	r3, r3
 8020d8e:	9310      	str	r3, [sp, #64]	; 0x40
 8020d90:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020d92:	781a      	ldrb	r2, [r3, #0]
 8020d94:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8020d98:	413a      	asrs	r2, r7
 8020d9a:	fb06 b919 	mls	r9, r6, r9, fp
 8020d9e:	fb03 fb06 	mul.w	fp, r3, r6
 8020da2:	b2d2      	uxtb	r2, r2
 8020da4:	930d      	str	r3, [sp, #52]	; 0x34
 8020da6:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8020daa:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8020dae:	f0c0 80ea 	bcc.w	8020f86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 8020db2:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8020db6:	46b6      	mov	lr, r6
 8020db8:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8020dbc:	f0c0 80d2 	bcc.w	8020f64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8020dc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020dc2:	4013      	ands	r3, r2
 8020dc4:	d055      	beq.n	8020e72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 8020dc6:	20ff      	movs	r0, #255	; 0xff
 8020dc8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8020dca:	fb90 f1f1 	sdiv	r1, r0, r1
 8020dce:	434b      	muls	r3, r1
 8020dd0:	2bfe      	cmp	r3, #254	; 0xfe
 8020dd2:	dd03      	ble.n	8020ddc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 8020dd4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020dd6:	4281      	cmp	r1, r0
 8020dd8:	f000 80c2 	beq.w	8020f60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8020ddc:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020dde:	f8bc 4000 	ldrh.w	r4, [ip]
 8020de2:	fb11 f303 	smulbb	r3, r1, r3
 8020de6:	b29b      	uxth	r3, r3
 8020de8:	1c59      	adds	r1, r3, #1
 8020dea:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8020dee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020df2:	b29d      	uxth	r5, r3
 8020df4:	43db      	mvns	r3, r3
 8020df6:	b2db      	uxtb	r3, r3
 8020df8:	9309      	str	r3, [sp, #36]	; 0x24
 8020dfa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020dfc:	1220      	asrs	r0, r4, #8
 8020dfe:	fb13 f905 	smulbb	r9, r3, r5
 8020e02:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020e06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e08:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8020e0c:	fb00 9003 	mla	r0, r0, r3, r9
 8020e10:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020e12:	10e1      	asrs	r1, r4, #3
 8020e14:	fb13 f905 	smulbb	r9, r3, r5
 8020e18:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020e1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e1e:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8020e22:	fb01 9103 	mla	r1, r1, r3, r9
 8020e26:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020e28:	00e4      	lsls	r4, r4, #3
 8020e2a:	fb13 f505 	smulbb	r5, r3, r5
 8020e2e:	b2e4      	uxtb	r4, r4
 8020e30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e32:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020e36:	fb04 5403 	mla	r4, r4, r3, r5
 8020e3a:	b280      	uxth	r0, r0
 8020e3c:	b2a4      	uxth	r4, r4
 8020e3e:	1c43      	adds	r3, r0, #1
 8020e40:	f104 0901 	add.w	r9, r4, #1
 8020e44:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020e48:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8020e4c:	b289      	uxth	r1, r1
 8020e4e:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8020e52:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020e56:	ea49 0000 	orr.w	r0, r9, r0
 8020e5a:	f101 0901 	add.w	r9, r1, #1
 8020e5e:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8020e62:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8020e66:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020e6a:	ea40 0009 	orr.w	r0, r0, r9
 8020e6e:	f8ac 0000 	strh.w	r0, [ip]
 8020e72:	4447      	add	r7, r8
 8020e74:	b2bf      	uxth	r7, r7
 8020e76:	2f07      	cmp	r7, #7
 8020e78:	bf81      	itttt	hi
 8020e7a:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8020e7c:	785a      	ldrbhi	r2, [r3, #1]
 8020e7e:	3301      	addhi	r3, #1
 8020e80:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8020e82:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020e84:	bf9a      	itte	ls
 8020e86:	fa42 f208 	asrls.w	r2, r2, r8
 8020e8a:	b2d2      	uxtbls	r2, r2
 8020e8c:	2700      	movhi	r7, #0
 8020e8e:	449c      	add	ip, r3
 8020e90:	e792      	b.n	8020db8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8020e92:	441d      	add	r5, r3
 8020e94:	b22d      	sxth	r5, r5
 8020e96:	e6c9      	b.n	8020c2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8020e98:	f1ba 0f01 	cmp.w	sl, #1
 8020e9c:	f47f af02 	bne.w	8020ca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020ea0:	f1bb 0f01 	cmp.w	fp, #1
 8020ea4:	f47f aefe 	bne.w	8020ca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020ea8:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 8020f50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8020eac:	f8db 0000 	ldr.w	r0, [fp]
 8020eb0:	6803      	ldr	r3, [r0, #0]
 8020eb2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020eb4:	4798      	blx	r3
 8020eb6:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8020eba:	465a      	mov	r2, fp
 8020ebc:	d006      	beq.n	8020ecc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8020ebe:	f1b8 0f04 	cmp.w	r8, #4
 8020ec2:	d140      	bne.n	8020f46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8020ec4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020ec6:	3300      	adds	r3, #0
 8020ec8:	bf18      	it	ne
 8020eca:	2301      	movne	r3, #1
 8020ecc:	0580      	lsls	r0, r0, #22
 8020ece:	d563      	bpl.n	8020f98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8020ed0:	f1b8 0f08 	cmp.w	r8, #8
 8020ed4:	d160      	bne.n	8020f98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8020ed6:	2b00      	cmp	r3, #0
 8020ed8:	bf0c      	ite	eq
 8020eda:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8020ede:	f44f 7180 	movne.w	r1, #256	; 0x100
 8020ee2:	2e00      	cmp	r6, #0
 8020ee4:	f47f aede 	bne.w	8020ca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020ee8:	2f00      	cmp	r7, #0
 8020eea:	f47f aedb 	bne.w	8020ca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020eee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020ef0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020ef2:	18eb      	adds	r3, r5, r3
 8020ef4:	4283      	cmp	r3, r0
 8020ef6:	f73f aed5 	bgt.w	8020ca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020efa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020efc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8020efe:	444b      	add	r3, r9
 8020f00:	4283      	cmp	r3, r0
 8020f02:	f73f aecf 	bgt.w	8020ca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020f06:	6810      	ldr	r0, [r2, #0]
 8020f08:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8020f0c:	6805      	ldr	r5, [r0, #0]
 8020f0e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8020f12:	f1b8 0f08 	cmp.w	r8, #8
 8020f16:	f04f 0600 	mov.w	r6, #0
 8020f1a:	bf18      	it	ne
 8020f1c:	3401      	addne	r4, #1
 8020f1e:	e9cd 1605 	strd	r1, r6, [sp, #20]
 8020f22:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020f24:	9104      	str	r1, [sp, #16]
 8020f26:	bf18      	it	ne
 8020f28:	f024 0401 	bicne.w	r4, r4, #1
 8020f2c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8020f2e:	bf18      	it	ne
 8020f30:	b2a4      	uxthne	r4, r4
 8020f32:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8020f36:	e9cd 4900 	strd	r4, r9, [sp]
 8020f3a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020f3c:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 8020f3e:	47a0      	blx	r4
 8020f40:	b019      	add	sp, #100	; 0x64
 8020f42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f46:	2300      	movs	r3, #0
 8020f48:	e7c0      	b.n	8020ecc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8020f4a:	bf00      	nop
 8020f4c:	2001e1b8 	.word	0x2001e1b8
 8020f50:	2001e1c0 	.word	0x2001e1c0
 8020f54:	2001e1ba 	.word	0x2001e1ba
 8020f58:	00fff800 	.word	0x00fff800
 8020f5c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8020f5e:	e6ee      	b.n	8020d3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 8020f60:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020f62:	e784      	b.n	8020e6e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 8020f64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020f66:	b153      	cbz	r3, 8020f7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 8020f68:	441f      	add	r7, r3
 8020f6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020f6c:	b2bf      	uxth	r7, r7
 8020f6e:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8020f72:	f007 0707 	and.w	r7, r7, #7
 8020f76:	781a      	ldrb	r2, [r3, #0]
 8020f78:	9328      	str	r3, [sp, #160]	; 0xa0
 8020f7a:	413a      	asrs	r2, r7
 8020f7c:	b2d2      	uxtb	r2, r2
 8020f7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020f80:	445b      	add	r3, fp
 8020f82:	930a      	str	r3, [sp, #40]	; 0x28
 8020f84:	e711      	b.n	8020daa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 8020f86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020f88:	2b00      	cmp	r3, #0
 8020f8a:	d1d9      	bne.n	8020f40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8020f8c:	4b05      	ldr	r3, [pc, #20]	; (8020fa4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 8020f8e:	6818      	ldr	r0, [r3, #0]
 8020f90:	6803      	ldr	r3, [r0, #0]
 8020f92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020f94:	4798      	blx	r3
 8020f96:	e7d3      	b.n	8020f40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8020f98:	2b00      	cmp	r3, #0
 8020f9a:	f43f ae83 	beq.w	8020ca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020f9e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8020fa2:	e79e      	b.n	8020ee2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 8020fa4:	2001e1c0 	.word	0x2001e1c0

08020fa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8020fa8:	b538      	push	{r3, r4, r5, lr}
 8020faa:	4c15      	ldr	r4, [pc, #84]	; (8021000 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8020fac:	7823      	ldrb	r3, [r4, #0]
 8020fae:	f3bf 8f5b 	dmb	ish
 8020fb2:	07da      	lsls	r2, r3, #31
 8020fb4:	4605      	mov	r5, r0
 8020fb6:	d40b      	bmi.n	8020fd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020fb8:	4620      	mov	r0, r4
 8020fba:	f00a f8b8 	bl	802b12e <__cxa_guard_acquire>
 8020fbe:	b138      	cbz	r0, 8020fd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020fc0:	4620      	mov	r0, r4
 8020fc2:	f00a f8c0 	bl	802b146 <__cxa_guard_release>
 8020fc6:	4a0f      	ldr	r2, [pc, #60]	; (8021004 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020fc8:	490f      	ldr	r1, [pc, #60]	; (8021008 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8020fca:	4810      	ldr	r0, [pc, #64]	; (802100c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020fcc:	f00a f8a8 	bl	802b120 <__aeabi_atexit>
 8020fd0:	4c0f      	ldr	r4, [pc, #60]	; (8021010 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8020fd2:	7823      	ldrb	r3, [r4, #0]
 8020fd4:	f3bf 8f5b 	dmb	ish
 8020fd8:	07db      	lsls	r3, r3, #31
 8020fda:	d40b      	bmi.n	8020ff4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020fdc:	4620      	mov	r0, r4
 8020fde:	f00a f8a6 	bl	802b12e <__cxa_guard_acquire>
 8020fe2:	b138      	cbz	r0, 8020ff4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020fe4:	4620      	mov	r0, r4
 8020fe6:	f00a f8ae 	bl	802b146 <__cxa_guard_release>
 8020fea:	4a06      	ldr	r2, [pc, #24]	; (8021004 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020fec:	4909      	ldr	r1, [pc, #36]	; (8021014 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8020fee:	480a      	ldr	r0, [pc, #40]	; (8021018 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8020ff0:	f00a f896 	bl	802b120 <__aeabi_atexit>
 8020ff4:	4b05      	ldr	r3, [pc, #20]	; (802100c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020ff6:	612b      	str	r3, [r5, #16]
 8020ff8:	4b07      	ldr	r3, [pc, #28]	; (8021018 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8020ffa:	616b      	str	r3, [r5, #20]
 8020ffc:	bd38      	pop	{r3, r4, r5, pc}
 8020ffe:	bf00      	nop
 8021000:	2001e2ac 	.word	0x2001e2ac
 8021004:	20000000 	.word	0x20000000
 8021008:	0801f009 	.word	0x0801f009
 802100c:	200000e0 	.word	0x200000e0
 8021010:	2001e2b0 	.word	0x2001e2b0
 8021014:	0801f007 	.word	0x0801f007
 8021018:	200000e4 	.word	0x200000e4

0802101c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 802101c:	b538      	push	{r3, r4, r5, lr}
 802101e:	4c15      	ldr	r4, [pc, #84]	; (8021074 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8021020:	7823      	ldrb	r3, [r4, #0]
 8021022:	f3bf 8f5b 	dmb	ish
 8021026:	07da      	lsls	r2, r3, #31
 8021028:	4605      	mov	r5, r0
 802102a:	d40b      	bmi.n	8021044 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 802102c:	4620      	mov	r0, r4
 802102e:	f00a f87e 	bl	802b12e <__cxa_guard_acquire>
 8021032:	b138      	cbz	r0, 8021044 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021034:	4620      	mov	r0, r4
 8021036:	f00a f886 	bl	802b146 <__cxa_guard_release>
 802103a:	4a0f      	ldr	r2, [pc, #60]	; (8021078 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 802103c:	490f      	ldr	r1, [pc, #60]	; (802107c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 802103e:	4810      	ldr	r0, [pc, #64]	; (8021080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021040:	f00a f86e 	bl	802b120 <__aeabi_atexit>
 8021044:	4c0f      	ldr	r4, [pc, #60]	; (8021084 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8021046:	7823      	ldrb	r3, [r4, #0]
 8021048:	f3bf 8f5b 	dmb	ish
 802104c:	07db      	lsls	r3, r3, #31
 802104e:	d40b      	bmi.n	8021068 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021050:	4620      	mov	r0, r4
 8021052:	f00a f86c 	bl	802b12e <__cxa_guard_acquire>
 8021056:	b138      	cbz	r0, 8021068 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021058:	4620      	mov	r0, r4
 802105a:	f00a f874 	bl	802b146 <__cxa_guard_release>
 802105e:	4a06      	ldr	r2, [pc, #24]	; (8021078 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021060:	4909      	ldr	r1, [pc, #36]	; (8021088 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8021062:	480a      	ldr	r0, [pc, #40]	; (802108c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021064:	f00a f85c 	bl	802b120 <__aeabi_atexit>
 8021068:	4b05      	ldr	r3, [pc, #20]	; (8021080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 802106a:	60ab      	str	r3, [r5, #8]
 802106c:	4b07      	ldr	r3, [pc, #28]	; (802108c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 802106e:	60eb      	str	r3, [r5, #12]
 8021070:	bd38      	pop	{r3, r4, r5, pc}
 8021072:	bf00      	nop
 8021074:	2001e284 	.word	0x2001e284
 8021078:	20000000 	.word	0x20000000
 802107c:	0801f00d 	.word	0x0801f00d
 8021080:	200000b8 	.word	0x200000b8
 8021084:	2001e288 	.word	0x2001e288
 8021088:	0801f00b 	.word	0x0801f00b
 802108c:	200000bc 	.word	0x200000bc

08021090 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8021090:	b510      	push	{r4, lr}
 8021092:	4604      	mov	r4, r0
 8021094:	f7ff ff88 	bl	8020fa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8021098:	4620      	mov	r0, r4
 802109a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802109e:	f7ff bfbd 	b.w	802101c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080210a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80210a4:	b538      	push	{r3, r4, r5, lr}
 80210a6:	4c15      	ldr	r4, [pc, #84]	; (80210fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80210a8:	7823      	ldrb	r3, [r4, #0]
 80210aa:	f3bf 8f5b 	dmb	ish
 80210ae:	07da      	lsls	r2, r3, #31
 80210b0:	4605      	mov	r5, r0
 80210b2:	d40b      	bmi.n	80210cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80210b4:	4620      	mov	r0, r4
 80210b6:	f00a f83a 	bl	802b12e <__cxa_guard_acquire>
 80210ba:	b138      	cbz	r0, 80210cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80210bc:	4620      	mov	r0, r4
 80210be:	f00a f842 	bl	802b146 <__cxa_guard_release>
 80210c2:	4a0f      	ldr	r2, [pc, #60]	; (8021100 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80210c4:	490f      	ldr	r1, [pc, #60]	; (8021104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80210c6:	4810      	ldr	r0, [pc, #64]	; (8021108 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80210c8:	f00a f82a 	bl	802b120 <__aeabi_atexit>
 80210cc:	4c0f      	ldr	r4, [pc, #60]	; (802110c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80210ce:	7823      	ldrb	r3, [r4, #0]
 80210d0:	f3bf 8f5b 	dmb	ish
 80210d4:	07db      	lsls	r3, r3, #31
 80210d6:	d40b      	bmi.n	80210f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80210d8:	4620      	mov	r0, r4
 80210da:	f00a f828 	bl	802b12e <__cxa_guard_acquire>
 80210de:	b138      	cbz	r0, 80210f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80210e0:	4620      	mov	r0, r4
 80210e2:	f00a f830 	bl	802b146 <__cxa_guard_release>
 80210e6:	4a06      	ldr	r2, [pc, #24]	; (8021100 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80210e8:	4909      	ldr	r1, [pc, #36]	; (8021110 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80210ea:	480a      	ldr	r0, [pc, #40]	; (8021114 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80210ec:	f00a f818 	bl	802b120 <__aeabi_atexit>
 80210f0:	4b05      	ldr	r3, [pc, #20]	; (8021108 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80210f2:	622b      	str	r3, [r5, #32]
 80210f4:	4b07      	ldr	r3, [pc, #28]	; (8021114 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80210f6:	626b      	str	r3, [r5, #36]	; 0x24
 80210f8:	bd38      	pop	{r3, r4, r5, pc}
 80210fa:	bf00      	nop
 80210fc:	2001e2b4 	.word	0x2001e2b4
 8021100:	20000000 	.word	0x20000000
 8021104:	0801f001 	.word	0x0801f001
 8021108:	200000e8 	.word	0x200000e8
 802110c:	2001e2b8 	.word	0x2001e2b8
 8021110:	0801efff 	.word	0x0801efff
 8021114:	200000ec 	.word	0x200000ec

08021118 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8021118:	b538      	push	{r3, r4, r5, lr}
 802111a:	4c15      	ldr	r4, [pc, #84]	; (8021170 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 802111c:	7823      	ldrb	r3, [r4, #0]
 802111e:	f3bf 8f5b 	dmb	ish
 8021122:	07da      	lsls	r2, r3, #31
 8021124:	4605      	mov	r5, r0
 8021126:	d40b      	bmi.n	8021140 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021128:	4620      	mov	r0, r4
 802112a:	f00a f800 	bl	802b12e <__cxa_guard_acquire>
 802112e:	b138      	cbz	r0, 8021140 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021130:	4620      	mov	r0, r4
 8021132:	f00a f808 	bl	802b146 <__cxa_guard_release>
 8021136:	4a0f      	ldr	r2, [pc, #60]	; (8021174 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021138:	490f      	ldr	r1, [pc, #60]	; (8021178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 802113a:	4810      	ldr	r0, [pc, #64]	; (802117c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 802113c:	f009 fff0 	bl	802b120 <__aeabi_atexit>
 8021140:	4c0f      	ldr	r4, [pc, #60]	; (8021180 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8021142:	7823      	ldrb	r3, [r4, #0]
 8021144:	f3bf 8f5b 	dmb	ish
 8021148:	07db      	lsls	r3, r3, #31
 802114a:	d40b      	bmi.n	8021164 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 802114c:	4620      	mov	r0, r4
 802114e:	f009 ffee 	bl	802b12e <__cxa_guard_acquire>
 8021152:	b138      	cbz	r0, 8021164 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021154:	4620      	mov	r0, r4
 8021156:	f009 fff6 	bl	802b146 <__cxa_guard_release>
 802115a:	4a06      	ldr	r2, [pc, #24]	; (8021174 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 802115c:	4909      	ldr	r1, [pc, #36]	; (8021184 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 802115e:	480a      	ldr	r0, [pc, #40]	; (8021188 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021160:	f009 ffde 	bl	802b120 <__aeabi_atexit>
 8021164:	4b05      	ldr	r3, [pc, #20]	; (802117c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021166:	61ab      	str	r3, [r5, #24]
 8021168:	4b07      	ldr	r3, [pc, #28]	; (8021188 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 802116a:	61eb      	str	r3, [r5, #28]
 802116c:	bd38      	pop	{r3, r4, r5, pc}
 802116e:	bf00      	nop
 8021170:	2001e28c 	.word	0x2001e28c
 8021174:	20000000 	.word	0x20000000
 8021178:	0801f005 	.word	0x0801f005
 802117c:	200000c0 	.word	0x200000c0
 8021180:	2001e290 	.word	0x2001e290
 8021184:	0801f003 	.word	0x0801f003
 8021188:	200000c4 	.word	0x200000c4

0802118c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 802118c:	b510      	push	{r4, lr}
 802118e:	4604      	mov	r4, r0
 8021190:	f7ff ff88 	bl	80210a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8021194:	4620      	mov	r0, r4
 8021196:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802119a:	f7ff bfbd 	b.w	8021118 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080211a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80211a0:	b538      	push	{r3, r4, r5, lr}
 80211a2:	4c15      	ldr	r4, [pc, #84]	; (80211f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80211a4:	7823      	ldrb	r3, [r4, #0]
 80211a6:	f3bf 8f5b 	dmb	ish
 80211aa:	07da      	lsls	r2, r3, #31
 80211ac:	4605      	mov	r5, r0
 80211ae:	d40b      	bmi.n	80211c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80211b0:	4620      	mov	r0, r4
 80211b2:	f009 ffbc 	bl	802b12e <__cxa_guard_acquire>
 80211b6:	b138      	cbz	r0, 80211c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80211b8:	4620      	mov	r0, r4
 80211ba:	f009 ffc4 	bl	802b146 <__cxa_guard_release>
 80211be:	4a0f      	ldr	r2, [pc, #60]	; (80211fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80211c0:	490f      	ldr	r1, [pc, #60]	; (8021200 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80211c2:	4810      	ldr	r0, [pc, #64]	; (8021204 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80211c4:	f009 ffac 	bl	802b120 <__aeabi_atexit>
 80211c8:	4c0f      	ldr	r4, [pc, #60]	; (8021208 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80211ca:	7823      	ldrb	r3, [r4, #0]
 80211cc:	f3bf 8f5b 	dmb	ish
 80211d0:	07db      	lsls	r3, r3, #31
 80211d2:	d40b      	bmi.n	80211ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80211d4:	4620      	mov	r0, r4
 80211d6:	f009 ffaa 	bl	802b12e <__cxa_guard_acquire>
 80211da:	b138      	cbz	r0, 80211ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80211dc:	4620      	mov	r0, r4
 80211de:	f009 ffb2 	bl	802b146 <__cxa_guard_release>
 80211e2:	4a06      	ldr	r2, [pc, #24]	; (80211fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80211e4:	4909      	ldr	r1, [pc, #36]	; (802120c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80211e6:	480a      	ldr	r0, [pc, #40]	; (8021210 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80211e8:	f009 ff9a 	bl	802b120 <__aeabi_atexit>
 80211ec:	4b05      	ldr	r3, [pc, #20]	; (8021204 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80211ee:	632b      	str	r3, [r5, #48]	; 0x30
 80211f0:	4b07      	ldr	r3, [pc, #28]	; (8021210 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80211f2:	636b      	str	r3, [r5, #52]	; 0x34
 80211f4:	bd38      	pop	{r3, r4, r5, pc}
 80211f6:	bf00      	nop
 80211f8:	2001e2c4 	.word	0x2001e2c4
 80211fc:	20000000 	.word	0x20000000
 8021200:	0801eff9 	.word	0x0801eff9
 8021204:	200000f8 	.word	0x200000f8
 8021208:	2001e2c8 	.word	0x2001e2c8
 802120c:	0801eff7 	.word	0x0801eff7
 8021210:	200000fc 	.word	0x200000fc

08021214 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8021214:	b538      	push	{r3, r4, r5, lr}
 8021216:	4c15      	ldr	r4, [pc, #84]	; (802126c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8021218:	7823      	ldrb	r3, [r4, #0]
 802121a:	f3bf 8f5b 	dmb	ish
 802121e:	07da      	lsls	r2, r3, #31
 8021220:	4605      	mov	r5, r0
 8021222:	d40b      	bmi.n	802123c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021224:	4620      	mov	r0, r4
 8021226:	f009 ff82 	bl	802b12e <__cxa_guard_acquire>
 802122a:	b138      	cbz	r0, 802123c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 802122c:	4620      	mov	r0, r4
 802122e:	f009 ff8a 	bl	802b146 <__cxa_guard_release>
 8021232:	4a0f      	ldr	r2, [pc, #60]	; (8021270 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021234:	490f      	ldr	r1, [pc, #60]	; (8021274 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8021236:	4810      	ldr	r0, [pc, #64]	; (8021278 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021238:	f009 ff72 	bl	802b120 <__aeabi_atexit>
 802123c:	4c0f      	ldr	r4, [pc, #60]	; (802127c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 802123e:	7823      	ldrb	r3, [r4, #0]
 8021240:	f3bf 8f5b 	dmb	ish
 8021244:	07db      	lsls	r3, r3, #31
 8021246:	d40b      	bmi.n	8021260 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021248:	4620      	mov	r0, r4
 802124a:	f009 ff70 	bl	802b12e <__cxa_guard_acquire>
 802124e:	b138      	cbz	r0, 8021260 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021250:	4620      	mov	r0, r4
 8021252:	f009 ff78 	bl	802b146 <__cxa_guard_release>
 8021256:	4a06      	ldr	r2, [pc, #24]	; (8021270 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021258:	4909      	ldr	r1, [pc, #36]	; (8021280 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 802125a:	480a      	ldr	r0, [pc, #40]	; (8021284 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 802125c:	f009 ff60 	bl	802b120 <__aeabi_atexit>
 8021260:	4b05      	ldr	r3, [pc, #20]	; (8021278 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021262:	62ab      	str	r3, [r5, #40]	; 0x28
 8021264:	4b07      	ldr	r3, [pc, #28]	; (8021284 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8021266:	62eb      	str	r3, [r5, #44]	; 0x2c
 8021268:	bd38      	pop	{r3, r4, r5, pc}
 802126a:	bf00      	nop
 802126c:	2001e294 	.word	0x2001e294
 8021270:	20000000 	.word	0x20000000
 8021274:	0801effd 	.word	0x0801effd
 8021278:	200000c8 	.word	0x200000c8
 802127c:	2001e298 	.word	0x2001e298
 8021280:	0801effb 	.word	0x0801effb
 8021284:	200000cc 	.word	0x200000cc

08021288 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8021288:	b510      	push	{r4, lr}
 802128a:	4604      	mov	r4, r0
 802128c:	f7ff ff88 	bl	80211a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8021290:	4620      	mov	r0, r4
 8021292:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021296:	f7ff bfbd 	b.w	8021214 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0802129c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 802129c:	b538      	push	{r3, r4, r5, lr}
 802129e:	4c15      	ldr	r4, [pc, #84]	; (80212f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80212a0:	7823      	ldrb	r3, [r4, #0]
 80212a2:	f3bf 8f5b 	dmb	ish
 80212a6:	07da      	lsls	r2, r3, #31
 80212a8:	4605      	mov	r5, r0
 80212aa:	d40b      	bmi.n	80212c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80212ac:	4620      	mov	r0, r4
 80212ae:	f009 ff3e 	bl	802b12e <__cxa_guard_acquire>
 80212b2:	b138      	cbz	r0, 80212c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80212b4:	4620      	mov	r0, r4
 80212b6:	f009 ff46 	bl	802b146 <__cxa_guard_release>
 80212ba:	4a0f      	ldr	r2, [pc, #60]	; (80212f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80212bc:	490f      	ldr	r1, [pc, #60]	; (80212fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80212be:	4810      	ldr	r0, [pc, #64]	; (8021300 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80212c0:	f009 ff2e 	bl	802b120 <__aeabi_atexit>
 80212c4:	4c0f      	ldr	r4, [pc, #60]	; (8021304 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80212c6:	7823      	ldrb	r3, [r4, #0]
 80212c8:	f3bf 8f5b 	dmb	ish
 80212cc:	07db      	lsls	r3, r3, #31
 80212ce:	d40b      	bmi.n	80212e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80212d0:	4620      	mov	r0, r4
 80212d2:	f009 ff2c 	bl	802b12e <__cxa_guard_acquire>
 80212d6:	b138      	cbz	r0, 80212e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80212d8:	4620      	mov	r0, r4
 80212da:	f009 ff34 	bl	802b146 <__cxa_guard_release>
 80212de:	4a06      	ldr	r2, [pc, #24]	; (80212f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80212e0:	4909      	ldr	r1, [pc, #36]	; (8021308 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80212e2:	480a      	ldr	r0, [pc, #40]	; (802130c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80212e4:	f009 ff1c 	bl	802b120 <__aeabi_atexit>
 80212e8:	4b05      	ldr	r3, [pc, #20]	; (8021300 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80212ea:	652b      	str	r3, [r5, #80]	; 0x50
 80212ec:	4b07      	ldr	r3, [pc, #28]	; (802130c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80212ee:	656b      	str	r3, [r5, #84]	; 0x54
 80212f0:	bd38      	pop	{r3, r4, r5, pc}
 80212f2:	bf00      	nop
 80212f4:	2001e2cc 	.word	0x2001e2cc
 80212f8:	20000000 	.word	0x20000000
 80212fc:	0801efe9 	.word	0x0801efe9
 8021300:	20000100 	.word	0x20000100
 8021304:	2001e2d0 	.word	0x2001e2d0
 8021308:	0801efe7 	.word	0x0801efe7
 802130c:	20000104 	.word	0x20000104

08021310 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8021310:	b538      	push	{r3, r4, r5, lr}
 8021312:	4c15      	ldr	r4, [pc, #84]	; (8021368 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8021314:	7823      	ldrb	r3, [r4, #0]
 8021316:	f3bf 8f5b 	dmb	ish
 802131a:	07da      	lsls	r2, r3, #31
 802131c:	4605      	mov	r5, r0
 802131e:	d40b      	bmi.n	8021338 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8021320:	4620      	mov	r0, r4
 8021322:	f009 ff04 	bl	802b12e <__cxa_guard_acquire>
 8021326:	b138      	cbz	r0, 8021338 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8021328:	4620      	mov	r0, r4
 802132a:	f009 ff0c 	bl	802b146 <__cxa_guard_release>
 802132e:	4a0f      	ldr	r2, [pc, #60]	; (802136c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8021330:	490f      	ldr	r1, [pc, #60]	; (8021370 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8021332:	4810      	ldr	r0, [pc, #64]	; (8021374 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8021334:	f009 fef4 	bl	802b120 <__aeabi_atexit>
 8021338:	4c0f      	ldr	r4, [pc, #60]	; (8021378 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 802133a:	7823      	ldrb	r3, [r4, #0]
 802133c:	f3bf 8f5b 	dmb	ish
 8021340:	07db      	lsls	r3, r3, #31
 8021342:	d40b      	bmi.n	802135c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8021344:	4620      	mov	r0, r4
 8021346:	f009 fef2 	bl	802b12e <__cxa_guard_acquire>
 802134a:	b138      	cbz	r0, 802135c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 802134c:	4620      	mov	r0, r4
 802134e:	f009 fefa 	bl	802b146 <__cxa_guard_release>
 8021352:	4a06      	ldr	r2, [pc, #24]	; (802136c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8021354:	4909      	ldr	r1, [pc, #36]	; (802137c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8021356:	480a      	ldr	r0, [pc, #40]	; (8021380 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8021358:	f009 fee2 	bl	802b120 <__aeabi_atexit>
 802135c:	4b05      	ldr	r3, [pc, #20]	; (8021374 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802135e:	64ab      	str	r3, [r5, #72]	; 0x48
 8021360:	4b07      	ldr	r3, [pc, #28]	; (8021380 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8021362:	64eb      	str	r3, [r5, #76]	; 0x4c
 8021364:	bd38      	pop	{r3, r4, r5, pc}
 8021366:	bf00      	nop
 8021368:	2001e2d4 	.word	0x2001e2d4
 802136c:	20000000 	.word	0x20000000
 8021370:	0801efed 	.word	0x0801efed
 8021374:	20000108 	.word	0x20000108
 8021378:	2001e2d8 	.word	0x2001e2d8
 802137c:	0801efeb 	.word	0x0801efeb
 8021380:	2000010c 	.word	0x2000010c

08021384 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8021384:	b538      	push	{r3, r4, r5, lr}
 8021386:	4c15      	ldr	r4, [pc, #84]	; (80213dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8021388:	7823      	ldrb	r3, [r4, #0]
 802138a:	f3bf 8f5b 	dmb	ish
 802138e:	07da      	lsls	r2, r3, #31
 8021390:	4605      	mov	r5, r0
 8021392:	d40b      	bmi.n	80213ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8021394:	4620      	mov	r0, r4
 8021396:	f009 feca 	bl	802b12e <__cxa_guard_acquire>
 802139a:	b138      	cbz	r0, 80213ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 802139c:	4620      	mov	r0, r4
 802139e:	f009 fed2 	bl	802b146 <__cxa_guard_release>
 80213a2:	4a0f      	ldr	r2, [pc, #60]	; (80213e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80213a4:	490f      	ldr	r1, [pc, #60]	; (80213e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80213a6:	4810      	ldr	r0, [pc, #64]	; (80213e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80213a8:	f009 feba 	bl	802b120 <__aeabi_atexit>
 80213ac:	4c0f      	ldr	r4, [pc, #60]	; (80213ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80213ae:	7823      	ldrb	r3, [r4, #0]
 80213b0:	f3bf 8f5b 	dmb	ish
 80213b4:	07db      	lsls	r3, r3, #31
 80213b6:	d40b      	bmi.n	80213d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80213b8:	4620      	mov	r0, r4
 80213ba:	f009 feb8 	bl	802b12e <__cxa_guard_acquire>
 80213be:	b138      	cbz	r0, 80213d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80213c0:	4620      	mov	r0, r4
 80213c2:	f009 fec0 	bl	802b146 <__cxa_guard_release>
 80213c6:	4a06      	ldr	r2, [pc, #24]	; (80213e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80213c8:	4909      	ldr	r1, [pc, #36]	; (80213f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80213ca:	480a      	ldr	r0, [pc, #40]	; (80213f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80213cc:	f009 fea8 	bl	802b120 <__aeabi_atexit>
 80213d0:	4b05      	ldr	r3, [pc, #20]	; (80213e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80213d2:	642b      	str	r3, [r5, #64]	; 0x40
 80213d4:	4b07      	ldr	r3, [pc, #28]	; (80213f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80213d6:	646b      	str	r3, [r5, #68]	; 0x44
 80213d8:	bd38      	pop	{r3, r4, r5, pc}
 80213da:	bf00      	nop
 80213dc:	2001e29c 	.word	0x2001e29c
 80213e0:	20000000 	.word	0x20000000
 80213e4:	0801eff1 	.word	0x0801eff1
 80213e8:	200000d0 	.word	0x200000d0
 80213ec:	2001e2a0 	.word	0x2001e2a0
 80213f0:	0801efef 	.word	0x0801efef
 80213f4:	200000d4 	.word	0x200000d4

080213f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80213f8:	b538      	push	{r3, r4, r5, lr}
 80213fa:	4c15      	ldr	r4, [pc, #84]	; (8021450 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80213fc:	7823      	ldrb	r3, [r4, #0]
 80213fe:	f3bf 8f5b 	dmb	ish
 8021402:	07da      	lsls	r2, r3, #31
 8021404:	4605      	mov	r5, r0
 8021406:	d40b      	bmi.n	8021420 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8021408:	4620      	mov	r0, r4
 802140a:	f009 fe90 	bl	802b12e <__cxa_guard_acquire>
 802140e:	b138      	cbz	r0, 8021420 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8021410:	4620      	mov	r0, r4
 8021412:	f009 fe98 	bl	802b146 <__cxa_guard_release>
 8021416:	4a0f      	ldr	r2, [pc, #60]	; (8021454 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8021418:	490f      	ldr	r1, [pc, #60]	; (8021458 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 802141a:	4810      	ldr	r0, [pc, #64]	; (802145c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 802141c:	f009 fe80 	bl	802b120 <__aeabi_atexit>
 8021420:	4c0f      	ldr	r4, [pc, #60]	; (8021460 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8021422:	7823      	ldrb	r3, [r4, #0]
 8021424:	f3bf 8f5b 	dmb	ish
 8021428:	07db      	lsls	r3, r3, #31
 802142a:	d40b      	bmi.n	8021444 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 802142c:	4620      	mov	r0, r4
 802142e:	f009 fe7e 	bl	802b12e <__cxa_guard_acquire>
 8021432:	b138      	cbz	r0, 8021444 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8021434:	4620      	mov	r0, r4
 8021436:	f009 fe86 	bl	802b146 <__cxa_guard_release>
 802143a:	4a06      	ldr	r2, [pc, #24]	; (8021454 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 802143c:	4909      	ldr	r1, [pc, #36]	; (8021464 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 802143e:	480a      	ldr	r0, [pc, #40]	; (8021468 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8021440:	f009 fe6e 	bl	802b120 <__aeabi_atexit>
 8021444:	4b05      	ldr	r3, [pc, #20]	; (802145c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8021446:	63ab      	str	r3, [r5, #56]	; 0x38
 8021448:	4b07      	ldr	r3, [pc, #28]	; (8021468 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 802144a:	63eb      	str	r3, [r5, #60]	; 0x3c
 802144c:	bd38      	pop	{r3, r4, r5, pc}
 802144e:	bf00      	nop
 8021450:	2001e2bc 	.word	0x2001e2bc
 8021454:	20000000 	.word	0x20000000
 8021458:	0801eff5 	.word	0x0801eff5
 802145c:	200000f0 	.word	0x200000f0
 8021460:	2001e2c0 	.word	0x2001e2c0
 8021464:	0801eff3 	.word	0x0801eff3
 8021468:	200000f4 	.word	0x200000f4

0802146c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 802146c:	b510      	push	{r4, lr}
 802146e:	4604      	mov	r4, r0
 8021470:	f7ff ff14 	bl	802129c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8021474:	4620      	mov	r0, r4
 8021476:	f7ff ff85 	bl	8021384 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 802147a:	4620      	mov	r0, r4
 802147c:	f7ff ff48 	bl	8021310 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8021480:	4620      	mov	r0, r4
 8021482:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021486:	f7ff bfb7 	b.w	80213f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0802148c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 802148c:	b538      	push	{r3, r4, r5, lr}
 802148e:	4c15      	ldr	r4, [pc, #84]	; (80214e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8021490:	7823      	ldrb	r3, [r4, #0]
 8021492:	f3bf 8f5b 	dmb	ish
 8021496:	07da      	lsls	r2, r3, #31
 8021498:	4605      	mov	r5, r0
 802149a:	d40b      	bmi.n	80214b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 802149c:	4620      	mov	r0, r4
 802149e:	f009 fe46 	bl	802b12e <__cxa_guard_acquire>
 80214a2:	b138      	cbz	r0, 80214b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80214a4:	4620      	mov	r0, r4
 80214a6:	f009 fe4e 	bl	802b146 <__cxa_guard_release>
 80214aa:	4a0f      	ldr	r2, [pc, #60]	; (80214e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80214ac:	490f      	ldr	r1, [pc, #60]	; (80214ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80214ae:	4810      	ldr	r0, [pc, #64]	; (80214f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80214b0:	f009 fe36 	bl	802b120 <__aeabi_atexit>
 80214b4:	4c0f      	ldr	r4, [pc, #60]	; (80214f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80214b6:	7823      	ldrb	r3, [r4, #0]
 80214b8:	f3bf 8f5b 	dmb	ish
 80214bc:	07db      	lsls	r3, r3, #31
 80214be:	d40b      	bmi.n	80214d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80214c0:	4620      	mov	r0, r4
 80214c2:	f009 fe34 	bl	802b12e <__cxa_guard_acquire>
 80214c6:	b138      	cbz	r0, 80214d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80214c8:	4620      	mov	r0, r4
 80214ca:	f009 fe3c 	bl	802b146 <__cxa_guard_release>
 80214ce:	4a06      	ldr	r2, [pc, #24]	; (80214e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80214d0:	4909      	ldr	r1, [pc, #36]	; (80214f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80214d2:	480a      	ldr	r0, [pc, #40]	; (80214fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80214d4:	f009 fe24 	bl	802b120 <__aeabi_atexit>
 80214d8:	4b05      	ldr	r3, [pc, #20]	; (80214f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80214da:	662b      	str	r3, [r5, #96]	; 0x60
 80214dc:	4b07      	ldr	r3, [pc, #28]	; (80214fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80214de:	666b      	str	r3, [r5, #100]	; 0x64
 80214e0:	bd38      	pop	{r3, r4, r5, pc}
 80214e2:	bf00      	nop
 80214e4:	2001e2a4 	.word	0x2001e2a4
 80214e8:	20000000 	.word	0x20000000
 80214ec:	0801efe1 	.word	0x0801efe1
 80214f0:	200000d8 	.word	0x200000d8
 80214f4:	2001e2a8 	.word	0x2001e2a8
 80214f8:	0801efdf 	.word	0x0801efdf
 80214fc:	200000dc 	.word	0x200000dc

08021500 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8021500:	b538      	push	{r3, r4, r5, lr}
 8021502:	4c15      	ldr	r4, [pc, #84]	; (8021558 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8021504:	7823      	ldrb	r3, [r4, #0]
 8021506:	f3bf 8f5b 	dmb	ish
 802150a:	07da      	lsls	r2, r3, #31
 802150c:	4605      	mov	r5, r0
 802150e:	d40b      	bmi.n	8021528 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8021510:	4620      	mov	r0, r4
 8021512:	f009 fe0c 	bl	802b12e <__cxa_guard_acquire>
 8021516:	b138      	cbz	r0, 8021528 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8021518:	4620      	mov	r0, r4
 802151a:	f009 fe14 	bl	802b146 <__cxa_guard_release>
 802151e:	4a0f      	ldr	r2, [pc, #60]	; (802155c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8021520:	490f      	ldr	r1, [pc, #60]	; (8021560 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8021522:	4810      	ldr	r0, [pc, #64]	; (8021564 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8021524:	f009 fdfc 	bl	802b120 <__aeabi_atexit>
 8021528:	4c0f      	ldr	r4, [pc, #60]	; (8021568 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 802152a:	7823      	ldrb	r3, [r4, #0]
 802152c:	f3bf 8f5b 	dmb	ish
 8021530:	07db      	lsls	r3, r3, #31
 8021532:	d40b      	bmi.n	802154c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8021534:	4620      	mov	r0, r4
 8021536:	f009 fdfa 	bl	802b12e <__cxa_guard_acquire>
 802153a:	b138      	cbz	r0, 802154c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 802153c:	4620      	mov	r0, r4
 802153e:	f009 fe02 	bl	802b146 <__cxa_guard_release>
 8021542:	4a06      	ldr	r2, [pc, #24]	; (802155c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8021544:	4909      	ldr	r1, [pc, #36]	; (802156c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8021546:	480a      	ldr	r0, [pc, #40]	; (8021570 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8021548:	f009 fdea 	bl	802b120 <__aeabi_atexit>
 802154c:	4b05      	ldr	r3, [pc, #20]	; (8021564 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802154e:	65ab      	str	r3, [r5, #88]	; 0x58
 8021550:	4b07      	ldr	r3, [pc, #28]	; (8021570 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8021552:	65eb      	str	r3, [r5, #92]	; 0x5c
 8021554:	bd38      	pop	{r3, r4, r5, pc}
 8021556:	bf00      	nop
 8021558:	2001e27c 	.word	0x2001e27c
 802155c:	20000000 	.word	0x20000000
 8021560:	0801efe5 	.word	0x0801efe5
 8021564:	200000b0 	.word	0x200000b0
 8021568:	2001e280 	.word	0x2001e280
 802156c:	0801efe3 	.word	0x0801efe3
 8021570:	200000b4 	.word	0x200000b4

08021574 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8021574:	b510      	push	{r4, lr}
 8021576:	4604      	mov	r4, r0
 8021578:	f7ff ff88 	bl	802148c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 802157c:	4620      	mov	r0, r4
 802157e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021582:	f7ff bfbd 	b.w	8021500 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08021588 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8021588:	b538      	push	{r3, r4, r5, lr}
 802158a:	4c15      	ldr	r4, [pc, #84]	; (80215e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 802158c:	7823      	ldrb	r3, [r4, #0]
 802158e:	f3bf 8f5b 	dmb	ish
 8021592:	07da      	lsls	r2, r3, #31
 8021594:	4605      	mov	r5, r0
 8021596:	d40b      	bmi.n	80215b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8021598:	4620      	mov	r0, r4
 802159a:	f009 fdc8 	bl	802b12e <__cxa_guard_acquire>
 802159e:	b138      	cbz	r0, 80215b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80215a0:	4620      	mov	r0, r4
 80215a2:	f009 fdd0 	bl	802b146 <__cxa_guard_release>
 80215a6:	4a0f      	ldr	r2, [pc, #60]	; (80215e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80215a8:	490f      	ldr	r1, [pc, #60]	; (80215e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80215aa:	4810      	ldr	r0, [pc, #64]	; (80215ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80215ac:	f009 fdb8 	bl	802b120 <__aeabi_atexit>
 80215b0:	4c0f      	ldr	r4, [pc, #60]	; (80215f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80215b2:	7823      	ldrb	r3, [r4, #0]
 80215b4:	f3bf 8f5b 	dmb	ish
 80215b8:	07db      	lsls	r3, r3, #31
 80215ba:	d40b      	bmi.n	80215d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80215bc:	4620      	mov	r0, r4
 80215be:	f009 fdb6 	bl	802b12e <__cxa_guard_acquire>
 80215c2:	b138      	cbz	r0, 80215d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80215c4:	4620      	mov	r0, r4
 80215c6:	f009 fdbe 	bl	802b146 <__cxa_guard_release>
 80215ca:	4a06      	ldr	r2, [pc, #24]	; (80215e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80215cc:	4909      	ldr	r1, [pc, #36]	; (80215f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80215ce:	480a      	ldr	r0, [pc, #40]	; (80215f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80215d0:	f009 fda6 	bl	802b120 <__aeabi_atexit>
 80215d4:	4b05      	ldr	r3, [pc, #20]	; (80215ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80215d6:	672b      	str	r3, [r5, #112]	; 0x70
 80215d8:	4b07      	ldr	r3, [pc, #28]	; (80215f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80215da:	676b      	str	r3, [r5, #116]	; 0x74
 80215dc:	bd38      	pop	{r3, r4, r5, pc}
 80215de:	bf00      	nop
 80215e0:	2001e274 	.word	0x2001e274
 80215e4:	20000000 	.word	0x20000000
 80215e8:	0801efd9 	.word	0x0801efd9
 80215ec:	200000a8 	.word	0x200000a8
 80215f0:	2001e278 	.word	0x2001e278
 80215f4:	0801efd7 	.word	0x0801efd7
 80215f8:	200000ac 	.word	0x200000ac

080215fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80215fc:	b538      	push	{r3, r4, r5, lr}
 80215fe:	4c15      	ldr	r4, [pc, #84]	; (8021654 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8021600:	7823      	ldrb	r3, [r4, #0]
 8021602:	f3bf 8f5b 	dmb	ish
 8021606:	07da      	lsls	r2, r3, #31
 8021608:	4605      	mov	r5, r0
 802160a:	d40b      	bmi.n	8021624 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 802160c:	4620      	mov	r0, r4
 802160e:	f009 fd8e 	bl	802b12e <__cxa_guard_acquire>
 8021612:	b138      	cbz	r0, 8021624 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8021614:	4620      	mov	r0, r4
 8021616:	f009 fd96 	bl	802b146 <__cxa_guard_release>
 802161a:	4a0f      	ldr	r2, [pc, #60]	; (8021658 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 802161c:	490f      	ldr	r1, [pc, #60]	; (802165c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 802161e:	4810      	ldr	r0, [pc, #64]	; (8021660 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8021620:	f009 fd7e 	bl	802b120 <__aeabi_atexit>
 8021624:	4c0f      	ldr	r4, [pc, #60]	; (8021664 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8021626:	7823      	ldrb	r3, [r4, #0]
 8021628:	f3bf 8f5b 	dmb	ish
 802162c:	07db      	lsls	r3, r3, #31
 802162e:	d40b      	bmi.n	8021648 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8021630:	4620      	mov	r0, r4
 8021632:	f009 fd7c 	bl	802b12e <__cxa_guard_acquire>
 8021636:	b138      	cbz	r0, 8021648 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8021638:	4620      	mov	r0, r4
 802163a:	f009 fd84 	bl	802b146 <__cxa_guard_release>
 802163e:	4a06      	ldr	r2, [pc, #24]	; (8021658 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8021640:	4909      	ldr	r1, [pc, #36]	; (8021668 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8021642:	480a      	ldr	r0, [pc, #40]	; (802166c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8021644:	f009 fd6c 	bl	802b120 <__aeabi_atexit>
 8021648:	4b05      	ldr	r3, [pc, #20]	; (8021660 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 802164a:	66ab      	str	r3, [r5, #104]	; 0x68
 802164c:	4b07      	ldr	r3, [pc, #28]	; (802166c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802164e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8021650:	bd38      	pop	{r3, r4, r5, pc}
 8021652:	bf00      	nop
 8021654:	2001e26c 	.word	0x2001e26c
 8021658:	20000000 	.word	0x20000000
 802165c:	0801efdd 	.word	0x0801efdd
 8021660:	200000a0 	.word	0x200000a0
 8021664:	2001e270 	.word	0x2001e270
 8021668:	0801efdb 	.word	0x0801efdb
 802166c:	200000a4 	.word	0x200000a4

08021670 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8021670:	b510      	push	{r4, lr}
 8021672:	4604      	mov	r4, r0
 8021674:	f7ff ff88 	bl	8021588 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8021678:	4620      	mov	r0, r4
 802167a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802167e:	f7ff bfbd 	b.w	80215fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08021682 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8021682:	b510      	push	{r4, lr}
 8021684:	4604      	mov	r4, r0
 8021686:	f7ff fff3 	bl	8021670 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 802168a:	4620      	mov	r0, r4
 802168c:	f7ff ff72 	bl	8021574 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8021690:	4620      	mov	r0, r4
 8021692:	f7ff fdf9 	bl	8021288 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8021696:	4620      	mov	r0, r4
 8021698:	f7ff fcfa 	bl	8021090 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 802169c:	4620      	mov	r0, r4
 802169e:	f7ff fd75 	bl	802118c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80216a2:	4620      	mov	r0, r4
 80216a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80216a8:	f7ff bee0 	b.w	802146c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080216ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80216ac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80216b0:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 80216b4:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80216b8:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80216bc:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80216c0:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 80216c4:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80216c8:	8808      	ldrh	r0, [r1, #0]
 80216ca:	fb0e 4708 	mla	r7, lr, r8, r4
 80216ce:	f1be 0f00 	cmp.w	lr, #0
 80216d2:	eb02 0a07 	add.w	sl, r2, r7
 80216d6:	db37      	blt.n	8021748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80216d8:	45f3      	cmp	fp, lr
 80216da:	dd35      	ble.n	8021748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80216dc:	2c00      	cmp	r4, #0
 80216de:	db31      	blt.n	8021744 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80216e0:	45a0      	cmp	r8, r4
 80216e2:	dd2f      	ble.n	8021744 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80216e4:	5dd2      	ldrb	r2, [r2, r7]
 80216e6:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80216ea:	1c62      	adds	r2, r4, #1
 80216ec:	d42f      	bmi.n	802174e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80216ee:	4590      	cmp	r8, r2
 80216f0:	dd2d      	ble.n	802174e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80216f2:	b366      	cbz	r6, 802174e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80216f4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80216f8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80216fc:	f11e 0e01 	adds.w	lr, lr, #1
 8021700:	d429      	bmi.n	8021756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8021702:	45f3      	cmp	fp, lr
 8021704:	dd27      	ble.n	8021756 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8021706:	f1bc 0f00 	cmp.w	ip, #0
 802170a:	f000 80a1 	beq.w	8021850 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 802170e:	2c00      	cmp	r4, #0
 8021710:	db1f      	blt.n	8021752 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8021712:	45a0      	cmp	r8, r4
 8021714:	dd1d      	ble.n	8021752 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8021716:	f81a 2008 	ldrb.w	r2, [sl, r8]
 802171a:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 802171e:	3401      	adds	r4, #1
 8021720:	d41c      	bmi.n	802175c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8021722:	45a0      	cmp	r8, r4
 8021724:	dd1a      	ble.n	802175c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8021726:	b1de      	cbz	r6, 8021760 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8021728:	44d0      	add	r8, sl
 802172a:	f898 2001 	ldrb.w	r2, [r8, #1]
 802172e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8021732:	2e0f      	cmp	r6, #15
 8021734:	d915      	bls.n	8021762 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8021736:	4b49      	ldr	r3, [pc, #292]	; (802185c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8021738:	4a49      	ldr	r2, [pc, #292]	; (8021860 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 802173a:	484a      	ldr	r0, [pc, #296]	; (8021864 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 802173c:	f240 11db 	movw	r1, #475	; 0x1db
 8021740:	f00a fc40 	bl	802bfc4 <__assert_func>
 8021744:	4681      	mov	r9, r0
 8021746:	e7d0      	b.n	80216ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8021748:	4607      	mov	r7, r0
 802174a:	4681      	mov	r9, r0
 802174c:	e7d6      	b.n	80216fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 802174e:	4607      	mov	r7, r0
 8021750:	e7d4      	b.n	80216fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8021752:	4686      	mov	lr, r0
 8021754:	e7e3      	b.n	802171e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8021756:	4603      	mov	r3, r0
 8021758:	4686      	mov	lr, r0
 802175a:	e7ea      	b.n	8021732 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 802175c:	4603      	mov	r3, r0
 802175e:	e7e8      	b.n	8021732 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8021760:	4603      	mov	r3, r0
 8021762:	f1bc 0f0f 	cmp.w	ip, #15
 8021766:	d8e6      	bhi.n	8021736 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8021768:	ea4f 4409 	mov.w	r4, r9, lsl #16
 802176c:	fb16 f80c 	smulbb	r8, r6, ip
 8021770:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021774:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021778:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802177c:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8021780:	ea44 0909 	orr.w	r9, r4, r9
 8021784:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021788:	f1cc 0410 	rsb	r4, ip, #16
 802178c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021790:	1ba4      	subs	r4, r4, r6
 8021792:	041a      	lsls	r2, r3, #16
 8021794:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8021798:	ea4a 0707 	orr.w	r7, sl, r7
 802179c:	4377      	muls	r7, r6
 802179e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80217a2:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80217a6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80217aa:	fb04 7409 	mla	r4, r4, r9, r7
 80217ae:	4313      	orrs	r3, r2
 80217b0:	ea4f 420e 	mov.w	r2, lr, lsl #16
 80217b4:	fb08 4303 	mla	r3, r8, r3, r4
 80217b8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80217bc:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 80217c0:	4322      	orrs	r2, r4
 80217c2:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80217c6:	fb0c 3202 	mla	r2, ip, r2, r3
 80217ca:	0d53      	lsrs	r3, r2, #21
 80217cc:	0952      	lsrs	r2, r2, #5
 80217ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80217d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80217d6:	431a      	orrs	r2, r3
 80217d8:	b293      	uxth	r3, r2
 80217da:	b2af      	uxth	r7, r5
 80217dc:	1202      	asrs	r2, r0, #8
 80217de:	43ed      	mvns	r5, r5
 80217e0:	b2ed      	uxtb	r5, r5
 80217e2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80217e6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80217ea:	fb12 f205 	smulbb	r2, r2, r5
 80217ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80217f2:	fb0c 2c07 	mla	ip, ip, r7, r2
 80217f6:	00dc      	lsls	r4, r3, #3
 80217f8:	10da      	asrs	r2, r3, #3
 80217fa:	10c6      	asrs	r6, r0, #3
 80217fc:	00c3      	lsls	r3, r0, #3
 80217fe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021802:	b2db      	uxtb	r3, r3
 8021804:	fb16 f605 	smulbb	r6, r6, r5
 8021808:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802180c:	b2e4      	uxtb	r4, r4
 802180e:	fb13 f305 	smulbb	r3, r3, r5
 8021812:	fa1f fc8c 	uxth.w	ip, ip
 8021816:	fb02 6207 	mla	r2, r2, r7, r6
 802181a:	fb04 3307 	mla	r3, r4, r7, r3
 802181e:	b296      	uxth	r6, r2
 8021820:	b29a      	uxth	r2, r3
 8021822:	f10c 0301 	add.w	r3, ip, #1
 8021826:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802182a:	1c53      	adds	r3, r2, #1
 802182c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021830:	1c72      	adds	r2, r6, #1
 8021832:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8021836:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 802183a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802183e:	0952      	lsrs	r2, r2, #5
 8021840:	ea43 030c 	orr.w	r3, r3, ip
 8021844:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021848:	4313      	orrs	r3, r2
 802184a:	800b      	strh	r3, [r1, #0]
 802184c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021850:	2e0f      	cmp	r6, #15
 8021852:	f63f af70 	bhi.w	8021736 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8021856:	4603      	mov	r3, r0
 8021858:	4686      	mov	lr, r0
 802185a:	e785      	b.n	8021768 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 802185c:	08035bf7 	.word	0x08035bf7
 8021860:	080361cf 	.word	0x080361cf
 8021864:	08035bc4 	.word	0x08035bc4

08021868 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802186c:	ed2d 8b08 	vpush	{d8-d11}
 8021870:	b099      	sub	sp, #100	; 0x64
 8021872:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8021876:	9215      	str	r2, [sp, #84]	; 0x54
 8021878:	9309      	str	r3, [sp, #36]	; 0x24
 802187a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 802187c:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8021880:	930d      	str	r3, [sp, #52]	; 0x34
 8021882:	910c      	str	r1, [sp, #48]	; 0x30
 8021884:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8021888:	9016      	str	r0, [sp, #88]	; 0x58
 802188a:	6850      	ldr	r0, [r2, #4]
 802188c:	6812      	ldr	r2, [r2, #0]
 802188e:	fb00 1303 	mla	r3, r0, r3, r1
 8021892:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8021896:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8021898:	681b      	ldr	r3, [r3, #0]
 802189a:	930b      	str	r3, [sp, #44]	; 0x2c
 802189c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 802189e:	685e      	ldr	r6, [r3, #4]
 80218a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80218a2:	43db      	mvns	r3, r3
 80218a4:	b2db      	uxtb	r3, r3
 80218a6:	eeb0 aa40 	vmov.f32	s20, s0
 80218aa:	eef0 9a60 	vmov.f32	s19, s1
 80218ae:	eeb0 9a41 	vmov.f32	s18, s2
 80218b2:	eeb0 8a62 	vmov.f32	s16, s5
 80218b6:	eef0 8a43 	vmov.f32	s17, s6
 80218ba:	eef0 ba44 	vmov.f32	s23, s8
 80218be:	eeb0 ba64 	vmov.f32	s22, s9
 80218c2:	eef0 aa45 	vmov.f32	s21, s10
 80218c6:	3604      	adds	r6, #4
 80218c8:	930a      	str	r3, [sp, #40]	; 0x28
 80218ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80218cc:	2b00      	cmp	r3, #0
 80218ce:	dc03      	bgt.n	80218d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80218d0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80218d2:	2b00      	cmp	r3, #0
 80218d4:	f340 8225 	ble.w	8021d22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 80218d8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80218da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80218de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80218e2:	1e48      	subs	r0, r1, #1
 80218e4:	1e57      	subs	r7, r2, #1
 80218e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80218e8:	2b00      	cmp	r3, #0
 80218ea:	f340 80e3 	ble.w	8021ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 80218ee:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80218f2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80218f6:	d406      	bmi.n	8021906 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80218f8:	4584      	cmp	ip, r0
 80218fa:	da04      	bge.n	8021906 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80218fc:	2b00      	cmp	r3, #0
 80218fe:	db02      	blt.n	8021906 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8021900:	42bb      	cmp	r3, r7
 8021902:	f2c0 80d8 	blt.w	8021ab6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8021906:	f11c 0c01 	adds.w	ip, ip, #1
 802190a:	f100 80c9 	bmi.w	8021aa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802190e:	4561      	cmp	r1, ip
 8021910:	f2c0 80c6 	blt.w	8021aa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021914:	3301      	adds	r3, #1
 8021916:	f100 80c3 	bmi.w	8021aa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802191a:	429a      	cmp	r2, r3
 802191c:	f2c0 80c0 	blt.w	8021aa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021920:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021924:	4647      	mov	r7, r8
 8021926:	f1bb 0f00 	cmp.w	fp, #0
 802192a:	f340 80e3 	ble.w	8021af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802192e:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8021930:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8021932:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021936:	689b      	ldr	r3, [r3, #8]
 8021938:	ea5f 422a 	movs.w	r2, sl, asr #16
 802193c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021940:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8021944:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021948:	f100 8121 	bmi.w	8021b8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 802194c:	f103 39ff 	add.w	r9, r3, #4294967295
 8021950:	454a      	cmp	r2, r9
 8021952:	f280 811c 	bge.w	8021b8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8021956:	f1bc 0f00 	cmp.w	ip, #0
 802195a:	f2c0 8118 	blt.w	8021b8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 802195e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8021962:	45cc      	cmp	ip, r9
 8021964:	f280 8113 	bge.w	8021b8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8021968:	b21b      	sxth	r3, r3
 802196a:	fb0c 2203 	mla	r2, ip, r3, r2
 802196e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021970:	eb04 0902 	add.w	r9, r4, r2
 8021974:	5ca2      	ldrb	r2, [r4, r2]
 8021976:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 802197a:	2800      	cmp	r0, #0
 802197c:	f000 80fe 	beq.w	8021b7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8021980:	f899 2001 	ldrb.w	r2, [r9, #1]
 8021984:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8021988:	9211      	str	r2, [sp, #68]	; 0x44
 802198a:	b151      	cbz	r1, 80219a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 802198c:	eb09 0203 	add.w	r2, r9, r3
 8021990:	f819 3003 	ldrb.w	r3, [r9, r3]
 8021994:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021998:	930f      	str	r3, [sp, #60]	; 0x3c
 802199a:	7853      	ldrb	r3, [r2, #1]
 802199c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80219a0:	9312      	str	r3, [sp, #72]	; 0x48
 80219a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80219a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80219a6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80219aa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80219ae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80219b2:	ea4c 0c03 	orr.w	ip, ip, r3
 80219b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80219b8:	041b      	lsls	r3, r3, #16
 80219ba:	fb10 f201 	smulbb	r2, r0, r1
 80219be:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80219c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80219c6:	10d2      	asrs	r2, r2, #3
 80219c8:	4323      	orrs	r3, r4
 80219ca:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80219ce:	4353      	muls	r3, r2
 80219d0:	fb09 330c 	mla	r3, r9, ip, r3
 80219d4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80219d8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80219dc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80219e0:	ea4c 0e0e 	orr.w	lr, ip, lr
 80219e4:	f1c1 0c10 	rsb	ip, r1, #16
 80219e8:	ebac 0c00 	sub.w	ip, ip, r0
 80219ec:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80219f0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80219f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80219f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80219f8:	0418      	lsls	r0, r3, #16
 80219fa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80219fe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021a02:	4318      	orrs	r0, r3
 8021a04:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8021a08:	fb02 c200 	mla	r2, r2, r0, ip
 8021a0c:	0d53      	lsrs	r3, r2, #21
 8021a0e:	0952      	lsrs	r2, r2, #5
 8021a10:	8838      	ldrh	r0, [r7, #0]
 8021a12:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021a16:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021a1a:	431a      	orrs	r2, r3
 8021a1c:	b292      	uxth	r2, r2
 8021a1e:	1201      	asrs	r1, r0, #8
 8021a20:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8021a24:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8021a28:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021a2c:	fb11 f104 	smulbb	r1, r1, r4
 8021a30:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8021a34:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021a38:	00c0      	lsls	r0, r0, #3
 8021a3a:	fb0c 1c03 	mla	ip, ip, r3, r1
 8021a3e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8021a42:	10d1      	asrs	r1, r2, #3
 8021a44:	b2c0      	uxtb	r0, r0
 8021a46:	00d2      	lsls	r2, r2, #3
 8021a48:	b2d2      	uxtb	r2, r2
 8021a4a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021a4e:	fb1e fe04 	smulbb	lr, lr, r4
 8021a52:	fb10 f004 	smulbb	r0, r0, r4
 8021a56:	fa1f fc8c 	uxth.w	ip, ip
 8021a5a:	fb01 e103 	mla	r1, r1, r3, lr
 8021a5e:	fb02 0303 	mla	r3, r2, r3, r0
 8021a62:	b29a      	uxth	r2, r3
 8021a64:	f10c 0301 	add.w	r3, ip, #1
 8021a68:	b289      	uxth	r1, r1
 8021a6a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8021a6e:	1c53      	adds	r3, r2, #1
 8021a70:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021a74:	1c4a      	adds	r2, r1, #1
 8021a76:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021a7a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8021a7e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021a82:	0949      	lsrs	r1, r1, #5
 8021a84:	ea43 030c 	orr.w	r3, r3, ip
 8021a88:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021a8c:	430b      	orrs	r3, r1
 8021a8e:	803b      	strh	r3, [r7, #0]
 8021a90:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8021a92:	449a      	add	sl, r3
 8021a94:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021a96:	3702      	adds	r7, #2
 8021a98:	441d      	add	r5, r3
 8021a9a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021a9e:	e742      	b.n	8021926 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8021aa0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8021aa2:	449a      	add	sl, r3
 8021aa4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021aa6:	441d      	add	r5, r3
 8021aa8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021aaa:	3b01      	subs	r3, #1
 8021aac:	9309      	str	r3, [sp, #36]	; 0x24
 8021aae:	f108 0802 	add.w	r8, r8, #2
 8021ab2:	e718      	b.n	80218e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021ab4:	d023      	beq.n	8021afe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8021ab6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021ab8:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8021aba:	3b01      	subs	r3, #1
 8021abc:	fb00 a003 	mla	r0, r0, r3, sl
 8021ac0:	1400      	asrs	r0, r0, #16
 8021ac2:	f53f af2d 	bmi.w	8021920 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8021ac6:	3901      	subs	r1, #1
 8021ac8:	4288      	cmp	r0, r1
 8021aca:	f6bf af29 	bge.w	8021920 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8021ace:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8021ad0:	fb01 5303 	mla	r3, r1, r3, r5
 8021ad4:	141b      	asrs	r3, r3, #16
 8021ad6:	f53f af23 	bmi.w	8021920 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8021ada:	3a01      	subs	r2, #1
 8021adc:	4293      	cmp	r3, r2
 8021ade:	f6bf af1f 	bge.w	8021920 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8021ae2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021ae6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8021aea:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8021aee:	f1be 0f00 	cmp.w	lr, #0
 8021af2:	dc6c      	bgt.n	8021bce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8021af4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021af6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021afa:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8021afe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021b00:	2b00      	cmp	r3, #0
 8021b02:	f340 810e 	ble.w	8021d22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8021b06:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8021b0a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021b0e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8021b12:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021b14:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8021b18:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8021b1c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8021b20:	eef0 6a48 	vmov.f32	s13, s16
 8021b24:	ee69 7a27 	vmul.f32	s15, s18, s15
 8021b28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b2c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8021b30:	ee16 aa90 	vmov	sl, s13
 8021b34:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8021b38:	eef0 6a68 	vmov.f32	s13, s17
 8021b3c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8021b40:	ee18 2a10 	vmov	r2, s16
 8021b44:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8021b48:	fb92 f3f3 	sdiv	r3, r2, r3
 8021b4c:	ee18 2a90 	vmov	r2, s17
 8021b50:	932d      	str	r3, [sp, #180]	; 0xb4
 8021b52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021b54:	fb92 f3f3 	sdiv	r3, r2, r3
 8021b58:	932e      	str	r3, [sp, #184]	; 0xb8
 8021b5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021b5c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8021b5e:	3b01      	subs	r3, #1
 8021b60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b64:	930c      	str	r3, [sp, #48]	; 0x30
 8021b66:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021b68:	bf08      	it	eq
 8021b6a:	4613      	moveq	r3, r2
 8021b6c:	ee16 5a90 	vmov	r5, s13
 8021b70:	9309      	str	r3, [sp, #36]	; 0x24
 8021b72:	eef0 8a67 	vmov.f32	s17, s15
 8021b76:	eeb0 8a47 	vmov.f32	s16, s14
 8021b7a:	e6a6      	b.n	80218ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8021b7c:	2900      	cmp	r1, #0
 8021b7e:	f43f af10 	beq.w	80219a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8021b82:	f819 3003 	ldrb.w	r3, [r9, r3]
 8021b86:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021b8a:	930f      	str	r3, [sp, #60]	; 0x3c
 8021b8c:	e709      	b.n	80219a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8021b8e:	f112 0901 	adds.w	r9, r2, #1
 8021b92:	f53f af7d 	bmi.w	8021a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8021b96:	454b      	cmp	r3, r9
 8021b98:	f6ff af7a 	blt.w	8021a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8021b9c:	f11c 0901 	adds.w	r9, ip, #1
 8021ba0:	f53f af76 	bmi.w	8021a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8021ba4:	45ce      	cmp	lr, r9
 8021ba6:	f6ff af73 	blt.w	8021a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8021baa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021bac:	9202      	str	r2, [sp, #8]
 8021bae:	b21b      	sxth	r3, r3
 8021bb0:	fa0f f28e 	sxth.w	r2, lr
 8021bb4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8021bb8:	e9cd c003 	strd	ip, r0, [sp, #12]
 8021bbc:	9201      	str	r2, [sp, #4]
 8021bbe:	9300      	str	r3, [sp, #0]
 8021bc0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021bc2:	9816      	ldr	r0, [sp, #88]	; 0x58
 8021bc4:	4633      	mov	r3, r6
 8021bc6:	4639      	mov	r1, r7
 8021bc8:	f7ff fd70 	bl	80216ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8021bcc:	e760      	b.n	8021a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8021bce:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8021bd0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021bd2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021bd6:	ea4f 422a 	mov.w	r2, sl, asr #16
 8021bda:	1429      	asrs	r1, r5, #16
 8021bdc:	fb03 2101 	mla	r1, r3, r1, r2
 8021be0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021be2:	440a      	add	r2, r1
 8021be4:	5c61      	ldrb	r1, [r4, r1]
 8021be6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8021bea:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021bee:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8021bf2:	f1bc 0f00 	cmp.w	ip, #0
 8021bf6:	f000 808c 	beq.w	8021d12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8021bfa:	7857      	ldrb	r7, [r2, #1]
 8021bfc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8021c00:	9413      	str	r4, [sp, #76]	; 0x4c
 8021c02:	b140      	cbz	r0, 8021c16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8021c04:	18d7      	adds	r7, r2, r3
 8021c06:	5cd3      	ldrb	r3, [r2, r3]
 8021c08:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021c0c:	9310      	str	r3, [sp, #64]	; 0x40
 8021c0e:	787b      	ldrb	r3, [r7, #1]
 8021c10:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021c14:	9314      	str	r3, [sp, #80]	; 0x50
 8021c16:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021c18:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021c1a:	fb1c f200 	smulbb	r2, ip, r0
 8021c1e:	041f      	lsls	r7, r3, #16
 8021c20:	10d2      	asrs	r2, r2, #3
 8021c22:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021c26:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8021c2a:	431f      	orrs	r7, r3
 8021c2c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8021c30:	9317      	str	r3, [sp, #92]	; 0x5c
 8021c32:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021c34:	041b      	lsls	r3, r3, #16
 8021c36:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8021c3a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021c3e:	ea43 030b 	orr.w	r3, r3, fp
 8021c42:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021c44:	4353      	muls	r3, r2
 8021c46:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021c4a:	fb04 3707 	mla	r7, r4, r7, r3
 8021c4e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021c52:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8021c56:	ea43 0b01 	orr.w	fp, r3, r1
 8021c5a:	f1c0 0110 	rsb	r1, r0, #16
 8021c5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021c60:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021c62:	eba1 0c0c 	sub.w	ip, r1, ip
 8021c66:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8021c6a:	fb0c 770b 	mla	r7, ip, fp, r7
 8021c6e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021c72:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8021c76:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021c7a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8021c7e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8021c82:	fb02 770c 	mla	r7, r2, ip, r7
 8021c86:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8021c88:	0d79      	lsrs	r1, r7, #21
 8021c8a:	097f      	lsrs	r7, r7, #5
 8021c8c:	8812      	ldrh	r2, [r2, #0]
 8021c8e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021c92:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021c96:	430f      	orrs	r7, r1
 8021c98:	b2bb      	uxth	r3, r7
 8021c9a:	1211      	asrs	r1, r2, #8
 8021c9c:	1218      	asrs	r0, r3, #8
 8021c9e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021ca2:	fb11 f104 	smulbb	r1, r1, r4
 8021ca6:	10d7      	asrs	r7, r2, #3
 8021ca8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021cac:	00d2      	lsls	r2, r2, #3
 8021cae:	fb00 1009 	mla	r0, r0, r9, r1
 8021cb2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021cb6:	10d9      	asrs	r1, r3, #3
 8021cb8:	b2d2      	uxtb	r2, r2
 8021cba:	00db      	lsls	r3, r3, #3
 8021cbc:	fb17 f704 	smulbb	r7, r7, r4
 8021cc0:	fb12 f204 	smulbb	r2, r2, r4
 8021cc4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021cc8:	b2db      	uxtb	r3, r3
 8021cca:	b280      	uxth	r0, r0
 8021ccc:	fb01 7109 	mla	r1, r1, r9, r7
 8021cd0:	fb03 2309 	mla	r3, r3, r9, r2
 8021cd4:	b29b      	uxth	r3, r3
 8021cd6:	b289      	uxth	r1, r1
 8021cd8:	1c42      	adds	r2, r0, #1
 8021cda:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021cde:	1c4f      	adds	r7, r1, #1
 8021ce0:	1c5a      	adds	r2, r3, #1
 8021ce2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021ce6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021cea:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021cee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021cf2:	0949      	lsrs	r1, r1, #5
 8021cf4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021cf6:	4310      	orrs	r0, r2
 8021cf8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021cfc:	4308      	orrs	r0, r1
 8021cfe:	f823 0b02 	strh.w	r0, [r3], #2
 8021d02:	930e      	str	r3, [sp, #56]	; 0x38
 8021d04:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8021d06:	449a      	add	sl, r3
 8021d08:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021d0a:	f10e 3eff 	add.w	lr, lr, #4294967295
 8021d0e:	441d      	add	r5, r3
 8021d10:	e6ed      	b.n	8021aee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8021d12:	2800      	cmp	r0, #0
 8021d14:	f43f af7f 	beq.w	8021c16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8021d18:	5cd3      	ldrb	r3, [r2, r3]
 8021d1a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021d1e:	9310      	str	r3, [sp, #64]	; 0x40
 8021d20:	e779      	b.n	8021c16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8021d22:	b019      	add	sp, #100	; 0x64
 8021d24:	ecbd 8b08 	vpop	{d8-d11}
 8021d28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021d2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021d2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021d30:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8021d34:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8021d38:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8021d3c:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8021d40:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8021d44:	8808      	ldrh	r0, [r1, #0]
 8021d46:	fb06 570e 	mla	r7, r6, lr, r5
 8021d4a:	2e00      	cmp	r6, #0
 8021d4c:	eb02 0807 	add.w	r8, r2, r7
 8021d50:	db38      	blt.n	8021dc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8021d52:	45b1      	cmp	r9, r6
 8021d54:	dd36      	ble.n	8021dc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8021d56:	2d00      	cmp	r5, #0
 8021d58:	db32      	blt.n	8021dc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8021d5a:	45ae      	cmp	lr, r5
 8021d5c:	dd30      	ble.n	8021dc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8021d5e:	5dd2      	ldrb	r2, [r2, r7]
 8021d60:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8021d64:	1c6a      	adds	r2, r5, #1
 8021d66:	d430      	bmi.n	8021dca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8021d68:	4596      	cmp	lr, r2
 8021d6a:	dd2e      	ble.n	8021dca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8021d6c:	b36c      	cbz	r4, 8021dca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8021d6e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8021d72:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8021d76:	3601      	adds	r6, #1
 8021d78:	d42b      	bmi.n	8021dd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8021d7a:	45b1      	cmp	r9, r6
 8021d7c:	dd29      	ble.n	8021dd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8021d7e:	f1bc 0f00 	cmp.w	ip, #0
 8021d82:	d028      	beq.n	8021dd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8021d84:	2d00      	cmp	r5, #0
 8021d86:	db22      	blt.n	8021dce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8021d88:	45ae      	cmp	lr, r5
 8021d8a:	dd20      	ble.n	8021dce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8021d8c:	f818 600e 	ldrb.w	r6, [r8, lr]
 8021d90:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8021d94:	3501      	adds	r5, #1
 8021d96:	d407      	bmi.n	8021da8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8021d98:	45ae      	cmp	lr, r5
 8021d9a:	dd05      	ble.n	8021da8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8021d9c:	b134      	cbz	r4, 8021dac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021d9e:	44c6      	add	lr, r8
 8021da0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8021da4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8021da8:	2c0f      	cmp	r4, #15
 8021daa:	d802      	bhi.n	8021db2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8021dac:	f1bc 0f0f 	cmp.w	ip, #15
 8021db0:	d914      	bls.n	8021ddc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8021db2:	4b26      	ldr	r3, [pc, #152]	; (8021e4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8021db4:	4a26      	ldr	r2, [pc, #152]	; (8021e50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8021db6:	4827      	ldr	r0, [pc, #156]	; (8021e54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8021db8:	f240 11db 	movw	r1, #475	; 0x1db
 8021dbc:	f00a f902 	bl	802bfc4 <__assert_func>
 8021dc0:	4607      	mov	r7, r0
 8021dc2:	e7cf      	b.n	8021d64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8021dc4:	4602      	mov	r2, r0
 8021dc6:	4607      	mov	r7, r0
 8021dc8:	e7d5      	b.n	8021d76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8021dca:	4602      	mov	r2, r0
 8021dcc:	e7d3      	b.n	8021d76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8021dce:	4606      	mov	r6, r0
 8021dd0:	e7e0      	b.n	8021d94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8021dd2:	4606      	mov	r6, r0
 8021dd4:	e7e8      	b.n	8021da8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8021dd6:	2c0f      	cmp	r4, #15
 8021dd8:	d8eb      	bhi.n	8021db2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8021dda:	4606      	mov	r6, r0
 8021ddc:	043d      	lsls	r5, r7, #16
 8021dde:	fb14 f30c 	smulbb	r3, r4, ip
 8021de2:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8021de6:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8021dea:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021dee:	10db      	asrs	r3, r3, #3
 8021df0:	432f      	orrs	r7, r5
 8021df2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021df6:	f1cc 0510 	rsb	r5, ip, #16
 8021dfa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021dfe:	1b2d      	subs	r5, r5, r4
 8021e00:	ea4e 0202 	orr.w	r2, lr, r2
 8021e04:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8021e08:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8021e0c:	4354      	muls	r4, r2
 8021e0e:	fb05 4507 	mla	r5, r5, r7, r4
 8021e12:	0404      	lsls	r4, r0, #16
 8021e14:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021e18:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021e1c:	4320      	orrs	r0, r4
 8021e1e:	fb03 5400 	mla	r4, r3, r0, r5
 8021e22:	0430      	lsls	r0, r6, #16
 8021e24:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021e28:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8021e2c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021e30:	4330      	orrs	r0, r6
 8021e32:	fb03 4000 	mla	r0, r3, r0, r4
 8021e36:	0d43      	lsrs	r3, r0, #21
 8021e38:	0940      	lsrs	r0, r0, #5
 8021e3a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021e3e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021e42:	4318      	orrs	r0, r3
 8021e44:	8008      	strh	r0, [r1, #0]
 8021e46:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021e4a:	bf00      	nop
 8021e4c:	08035bf7 	.word	0x08035bf7
 8021e50:	080361cf 	.word	0x080361cf
 8021e54:	08035bc4 	.word	0x08035bc4

08021e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e5c:	ed2d 8b0a 	vpush	{d8-d12}
 8021e60:	b093      	sub	sp, #76	; 0x4c
 8021e62:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8021e66:	920f      	str	r2, [sp, #60]	; 0x3c
 8021e68:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8021e6a:	9108      	str	r1, [sp, #32]
 8021e6c:	9306      	str	r3, [sp, #24]
 8021e6e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8021e72:	9010      	str	r0, [sp, #64]	; 0x40
 8021e74:	6850      	ldr	r0, [r2, #4]
 8021e76:	6812      	ldr	r2, [r2, #0]
 8021e78:	fb00 1303 	mla	r3, r0, r3, r1
 8021e7c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021e80:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021e82:	681b      	ldr	r3, [r3, #0]
 8021e84:	9307      	str	r3, [sp, #28]
 8021e86:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021e88:	685f      	ldr	r7, [r3, #4]
 8021e8a:	eeb0 aa40 	vmov.f32	s20, s0
 8021e8e:	eef0 9a60 	vmov.f32	s19, s1
 8021e92:	eeb0 9a41 	vmov.f32	s18, s2
 8021e96:	eeb0 8a62 	vmov.f32	s16, s5
 8021e9a:	eef0 8a43 	vmov.f32	s17, s6
 8021e9e:	eeb0 ca44 	vmov.f32	s24, s8
 8021ea2:	eef0 ba64 	vmov.f32	s23, s9
 8021ea6:	eeb0 ba45 	vmov.f32	s22, s10
 8021eaa:	3704      	adds	r7, #4
 8021eac:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8021eb0:	9b08      	ldr	r3, [sp, #32]
 8021eb2:	2b00      	cmp	r3, #0
 8021eb4:	dc03      	bgt.n	8021ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021eb6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021eb8:	2b00      	cmp	r3, #0
 8021eba:	f340 81b2 	ble.w	8022222 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8021ebe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021ec0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021ec4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021ec8:	1e48      	subs	r0, r1, #1
 8021eca:	f102 3cff 	add.w	ip, r2, #4294967295
 8021ece:	9b06      	ldr	r3, [sp, #24]
 8021ed0:	2b00      	cmp	r3, #0
 8021ed2:	f340 80a9 	ble.w	8022028 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8021ed6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021eda:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021ede:	d406      	bmi.n	8021eee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021ee0:	4586      	cmp	lr, r0
 8021ee2:	da04      	bge.n	8021eee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021ee4:	2b00      	cmp	r3, #0
 8021ee6:	db02      	blt.n	8021eee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021ee8:	4563      	cmp	r3, ip
 8021eea:	f2c0 809e 	blt.w	802202a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021eee:	f11e 0e01 	adds.w	lr, lr, #1
 8021ef2:	f100 808f 	bmi.w	8022014 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021ef6:	4571      	cmp	r1, lr
 8021ef8:	f2c0 808c 	blt.w	8022014 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021efc:	3301      	adds	r3, #1
 8021efe:	f100 8089 	bmi.w	8022014 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021f02:	429a      	cmp	r2, r3
 8021f04:	f2c0 8086 	blt.w	8022014 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021f08:	f8dd b018 	ldr.w	fp, [sp, #24]
 8021f0c:	46c8      	mov	r8, r9
 8021f0e:	f1bb 0f00 	cmp.w	fp, #0
 8021f12:	f340 80a6 	ble.w	8022062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8021f16:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8021f18:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021f1a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021f1e:	689b      	ldr	r3, [r3, #8]
 8021f20:	1422      	asrs	r2, r4, #16
 8021f22:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021f26:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021f2a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021f2e:	f100 80e3 	bmi.w	80220f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8021f32:	f103 3aff 	add.w	sl, r3, #4294967295
 8021f36:	4552      	cmp	r2, sl
 8021f38:	f280 80de 	bge.w	80220f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8021f3c:	f1bc 0f00 	cmp.w	ip, #0
 8021f40:	f2c0 80da 	blt.w	80220f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8021f44:	f10e 3aff 	add.w	sl, lr, #4294967295
 8021f48:	45d4      	cmp	ip, sl
 8021f4a:	f280 80d5 	bge.w	80220f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8021f4e:	b21b      	sxth	r3, r3
 8021f50:	fb0c 2203 	mla	r2, ip, r3, r2
 8021f54:	9d07      	ldr	r5, [sp, #28]
 8021f56:	eb05 0a02 	add.w	sl, r5, r2
 8021f5a:	5caa      	ldrb	r2, [r5, r2]
 8021f5c:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8021f60:	2800      	cmp	r0, #0
 8021f62:	f000 80c0 	beq.w	80220e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8021f66:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021f6a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8021f6e:	920b      	str	r2, [sp, #44]	; 0x2c
 8021f70:	b151      	cbz	r1, 8021f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8021f72:	eb0a 0203 	add.w	r2, sl, r3
 8021f76:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8021f7a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021f7e:	9309      	str	r3, [sp, #36]	; 0x24
 8021f80:	7853      	ldrb	r3, [r2, #1]
 8021f82:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021f86:	930c      	str	r3, [sp, #48]	; 0x30
 8021f88:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021f8a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021f8c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021f90:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021f94:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021f98:	ea4c 0c03 	orr.w	ip, ip, r3
 8021f9c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021f9e:	041b      	lsls	r3, r3, #16
 8021fa0:	fb10 f201 	smulbb	r2, r0, r1
 8021fa4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021fa8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021fac:	10d2      	asrs	r2, r2, #3
 8021fae:	432b      	orrs	r3, r5
 8021fb0:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8021fb4:	4353      	muls	r3, r2
 8021fb6:	fb0a 330c 	mla	r3, sl, ip, r3
 8021fba:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8021fbe:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021fc2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021fc6:	ea4c 0e0e 	orr.w	lr, ip, lr
 8021fca:	f1c1 0c10 	rsb	ip, r1, #16
 8021fce:	ebac 0c00 	sub.w	ip, ip, r0
 8021fd2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8021fd6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8021fda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021fdc:	0418      	lsls	r0, r3, #16
 8021fde:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021fe2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021fe6:	4318      	orrs	r0, r3
 8021fe8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8021fec:	fb02 c200 	mla	r2, r2, r0, ip
 8021ff0:	0d53      	lsrs	r3, r2, #21
 8021ff2:	0952      	lsrs	r2, r2, #5
 8021ff4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021ff8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021ffc:	431a      	orrs	r2, r3
 8021ffe:	f8a8 2000 	strh.w	r2, [r8]
 8022002:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022004:	441c      	add	r4, r3
 8022006:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022008:	f108 0802 	add.w	r8, r8, #2
 802200c:	441e      	add	r6, r3
 802200e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022012:	e77c      	b.n	8021f0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8022014:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022016:	441c      	add	r4, r3
 8022018:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802201a:	441e      	add	r6, r3
 802201c:	9b06      	ldr	r3, [sp, #24]
 802201e:	3b01      	subs	r3, #1
 8022020:	9306      	str	r3, [sp, #24]
 8022022:	f109 0902 	add.w	r9, r9, #2
 8022026:	e752      	b.n	8021ece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022028:	d020      	beq.n	802206c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802202a:	9b06      	ldr	r3, [sp, #24]
 802202c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 802202e:	3b01      	subs	r3, #1
 8022030:	fb00 4003 	mla	r0, r0, r3, r4
 8022034:	1400      	asrs	r0, r0, #16
 8022036:	f53f af67 	bmi.w	8021f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802203a:	3901      	subs	r1, #1
 802203c:	4288      	cmp	r0, r1
 802203e:	f6bf af63 	bge.w	8021f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8022042:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8022044:	fb01 6303 	mla	r3, r1, r3, r6
 8022048:	141b      	asrs	r3, r3, #16
 802204a:	f53f af5d 	bmi.w	8021f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802204e:	3a01      	subs	r2, #1
 8022050:	4293      	cmp	r3, r2
 8022052:	f6bf af59 	bge.w	8021f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8022056:	f8dd 8018 	ldr.w	r8, [sp, #24]
 802205a:	46ca      	mov	sl, r9
 802205c:	f1b8 0f00 	cmp.w	r8, #0
 8022060:	dc67      	bgt.n	8022132 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8022062:	9b06      	ldr	r3, [sp, #24]
 8022064:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022068:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802206c:	9b08      	ldr	r3, [sp, #32]
 802206e:	2b00      	cmp	r3, #0
 8022070:	f340 80d7 	ble.w	8022222 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8022074:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8022078:	ee79 9aab 	vadd.f32	s19, s19, s23
 802207c:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8022080:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022082:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8022086:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802208a:	eef0 6a48 	vmov.f32	s13, s16
 802208e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8022092:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022096:	ee37 8a48 	vsub.f32	s16, s14, s16
 802209a:	ee16 4a90 	vmov	r4, s13
 802209e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80220a2:	eef0 6a68 	vmov.f32	s13, s17
 80220a6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80220aa:	ee18 2a10 	vmov	r2, s16
 80220ae:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80220b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80220b6:	ee18 2a90 	vmov	r2, s17
 80220ba:	9329      	str	r3, [sp, #164]	; 0xa4
 80220bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80220be:	fb92 f3f3 	sdiv	r3, r2, r3
 80220c2:	932a      	str	r3, [sp, #168]	; 0xa8
 80220c4:	9b08      	ldr	r3, [sp, #32]
 80220c6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80220c8:	3b01      	subs	r3, #1
 80220ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80220ce:	9308      	str	r3, [sp, #32]
 80220d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80220d2:	bf08      	it	eq
 80220d4:	4613      	moveq	r3, r2
 80220d6:	ee16 6a90 	vmov	r6, s13
 80220da:	9306      	str	r3, [sp, #24]
 80220dc:	eef0 8a67 	vmov.f32	s17, s15
 80220e0:	eeb0 8a47 	vmov.f32	s16, s14
 80220e4:	e6e4      	b.n	8021eb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80220e6:	2900      	cmp	r1, #0
 80220e8:	f43f af4e 	beq.w	8021f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80220ec:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80220f0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80220f4:	9309      	str	r3, [sp, #36]	; 0x24
 80220f6:	e747      	b.n	8021f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80220f8:	f112 0a01 	adds.w	sl, r2, #1
 80220fc:	d481      	bmi.n	8022002 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80220fe:	4553      	cmp	r3, sl
 8022100:	f6ff af7f 	blt.w	8022002 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8022104:	f11c 0a01 	adds.w	sl, ip, #1
 8022108:	f53f af7b 	bmi.w	8022002 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802210c:	45d6      	cmp	lr, sl
 802210e:	f6ff af78 	blt.w	8022002 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8022112:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8022116:	b21b      	sxth	r3, r3
 8022118:	fa0f f28e 	sxth.w	r2, lr
 802211c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8022120:	9201      	str	r2, [sp, #4]
 8022122:	9300      	str	r3, [sp, #0]
 8022124:	9a07      	ldr	r2, [sp, #28]
 8022126:	9810      	ldr	r0, [sp, #64]	; 0x40
 8022128:	463b      	mov	r3, r7
 802212a:	4641      	mov	r1, r8
 802212c:	f7ff fdfe 	bl	8021d2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022130:	e767      	b.n	8022002 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8022132:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022134:	9d07      	ldr	r5, [sp, #28]
 8022136:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802213a:	1422      	asrs	r2, r4, #16
 802213c:	1431      	asrs	r1, r6, #16
 802213e:	fb03 2101 	mla	r1, r3, r1, r2
 8022142:	9a07      	ldr	r2, [sp, #28]
 8022144:	440a      	add	r2, r1
 8022146:	5c69      	ldrb	r1, [r5, r1]
 8022148:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 802214c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022150:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8022154:	f1be 0f00 	cmp.w	lr, #0
 8022158:	d05c      	beq.n	8022214 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 802215a:	f892 c001 	ldrb.w	ip, [r2, #1]
 802215e:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8022162:	950d      	str	r5, [sp, #52]	; 0x34
 8022164:	b150      	cbz	r0, 802217c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8022166:	eb02 0c03 	add.w	ip, r2, r3
 802216a:	5cd3      	ldrb	r3, [r2, r3]
 802216c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022170:	930a      	str	r3, [sp, #40]	; 0x28
 8022172:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8022176:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802217a:	930e      	str	r3, [sp, #56]	; 0x38
 802217c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802217e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022180:	fb1e f200 	smulbb	r2, lr, r0
 8022184:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022188:	10d2      	asrs	r2, r2, #3
 802218a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802218e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022192:	ea4c 0c03 	orr.w	ip, ip, r3
 8022196:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 802219a:	9311      	str	r3, [sp, #68]	; 0x44
 802219c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802219e:	041b      	lsls	r3, r3, #16
 80221a0:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80221a4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80221a8:	ea43 030b 	orr.w	r3, r3, fp
 80221ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80221ae:	4353      	muls	r3, r2
 80221b0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80221b4:	fb05 3c0c 	mla	ip, r5, ip, r3
 80221b8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80221bc:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80221c0:	ea43 0b01 	orr.w	fp, r3, r1
 80221c4:	f1c0 0110 	rsb	r1, r0, #16
 80221c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80221ca:	eba1 0e0e 	sub.w	lr, r1, lr
 80221ce:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80221d2:	fb0e cc0b 	mla	ip, lr, fp, ip
 80221d6:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80221da:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80221de:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80221e2:	ea4b 0e0e 	orr.w	lr, fp, lr
 80221e6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80221ea:	fb02 cc0e 	mla	ip, r2, lr, ip
 80221ee:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80221f2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80221f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80221fa:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80221fe:	ea43 0c0c 	orr.w	ip, r3, ip
 8022202:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022204:	f82a cb02 	strh.w	ip, [sl], #2
 8022208:	441c      	add	r4, r3
 802220a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802220c:	f108 38ff 	add.w	r8, r8, #4294967295
 8022210:	441e      	add	r6, r3
 8022212:	e723      	b.n	802205c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022214:	2800      	cmp	r0, #0
 8022216:	d0b1      	beq.n	802217c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8022218:	5cd3      	ldrb	r3, [r2, r3]
 802221a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802221e:	930a      	str	r3, [sp, #40]	; 0x28
 8022220:	e7ac      	b.n	802217c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8022222:	b013      	add	sp, #76	; 0x4c
 8022224:	ecbd 8b0a 	vpop	{d8-d12}
 8022228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802222c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802222c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022230:	468b      	mov	fp, r1
 8022232:	8809      	ldrh	r1, [r1, #0]
 8022234:	b089      	sub	sp, #36	; 0x24
 8022236:	10cd      	asrs	r5, r1, #3
 8022238:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 802223c:	ea4f 2921 	mov.w	r9, r1, asr #8
 8022240:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022244:	00c9      	lsls	r1, r1, #3
 8022246:	9500      	str	r5, [sp, #0]
 8022248:	b2c9      	uxtb	r1, r1
 802224a:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 802224e:	9101      	str	r1, [sp, #4]
 8022250:	9900      	ldr	r1, [sp, #0]
 8022252:	9202      	str	r2, [sp, #8]
 8022254:	fb04 650e 	mla	r5, r4, lr, r6
 8022258:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 802225c:	eb02 0805 	add.w	r8, r2, r5
 8022260:	0209      	lsls	r1, r1, #8
 8022262:	9a01      	ldr	r2, [sp, #4]
 8022264:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8022268:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 802226c:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8022270:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8022274:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8022278:	4311      	orrs	r1, r2
 802227a:	2c00      	cmp	r4, #0
 802227c:	9107      	str	r1, [sp, #28]
 802227e:	db43      	blt.n	8022308 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8022280:	45a2      	cmp	sl, r4
 8022282:	dd41      	ble.n	8022308 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8022284:	2e00      	cmp	r6, #0
 8022286:	db3d      	blt.n	8022304 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8022288:	45b6      	cmp	lr, r6
 802228a:	dd3b      	ble.n	8022304 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 802228c:	9a02      	ldr	r2, [sp, #8]
 802228e:	5d55      	ldrb	r5, [r2, r5]
 8022290:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8022294:	441d      	add	r5, r3
 8022296:	1c72      	adds	r2, r6, #1
 8022298:	d439      	bmi.n	802230e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 802229a:	4596      	cmp	lr, r2
 802229c:	dd37      	ble.n	802230e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 802229e:	2f00      	cmp	r7, #0
 80222a0:	d035      	beq.n	802230e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80222a2:	f898 1001 	ldrb.w	r1, [r8, #1]
 80222a6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80222aa:	4419      	add	r1, r3
 80222ac:	3401      	adds	r4, #1
 80222ae:	d432      	bmi.n	8022316 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80222b0:	45a2      	cmp	sl, r4
 80222b2:	dd30      	ble.n	8022316 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80222b4:	b378      	cbz	r0, 8022316 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80222b6:	2e00      	cmp	r6, #0
 80222b8:	db2b      	blt.n	8022312 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80222ba:	45b6      	cmp	lr, r6
 80222bc:	dd29      	ble.n	8022312 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80222be:	f818 400e 	ldrb.w	r4, [r8, lr]
 80222c2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80222c6:	441c      	add	r4, r3
 80222c8:	3601      	adds	r6, #1
 80222ca:	d427      	bmi.n	802231c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80222cc:	45b6      	cmp	lr, r6
 80222ce:	dd25      	ble.n	802231c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80222d0:	b327      	cbz	r7, 802231c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80222d2:	44c6      	add	lr, r8
 80222d4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80222d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80222dc:	4413      	add	r3, r2
 80222de:	782a      	ldrb	r2, [r5, #0]
 80222e0:	9202      	str	r2, [sp, #8]
 80222e2:	780a      	ldrb	r2, [r1, #0]
 80222e4:	9203      	str	r2, [sp, #12]
 80222e6:	7822      	ldrb	r2, [r4, #0]
 80222e8:	9204      	str	r2, [sp, #16]
 80222ea:	2f0f      	cmp	r7, #15
 80222ec:	781a      	ldrb	r2, [r3, #0]
 80222ee:	9205      	str	r2, [sp, #20]
 80222f0:	d801      	bhi.n	80222f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 80222f2:	280f      	cmp	r0, #15
 80222f4:	d914      	bls.n	8022320 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 80222f6:	4b3f      	ldr	r3, [pc, #252]	; (80223f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 80222f8:	4a3f      	ldr	r2, [pc, #252]	; (80223f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 80222fa:	4840      	ldr	r0, [pc, #256]	; (80223fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 80222fc:	f240 11f9 	movw	r1, #505	; 0x1f9
 8022300:	f009 fe60 	bl	802bfc4 <__assert_func>
 8022304:	ad07      	add	r5, sp, #28
 8022306:	e7c6      	b.n	8022296 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8022308:	a907      	add	r1, sp, #28
 802230a:	460d      	mov	r5, r1
 802230c:	e7ce      	b.n	80222ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802230e:	a907      	add	r1, sp, #28
 8022310:	e7cc      	b.n	80222ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8022312:	ac07      	add	r4, sp, #28
 8022314:	e7d8      	b.n	80222c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8022316:	ab07      	add	r3, sp, #28
 8022318:	461c      	mov	r4, r3
 802231a:	e7e0      	b.n	80222de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 802231c:	ab07      	add	r3, sp, #28
 802231e:	e7de      	b.n	80222de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8022320:	b2ba      	uxth	r2, r7
 8022322:	b280      	uxth	r0, r0
 8022324:	fb02 fa00 	mul.w	sl, r2, r0
 8022328:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 802232c:	0112      	lsls	r2, r2, #4
 802232e:	b280      	uxth	r0, r0
 8022330:	f891 8002 	ldrb.w	r8, [r1, #2]
 8022334:	7849      	ldrb	r1, [r1, #1]
 8022336:	78ae      	ldrb	r6, [r5, #2]
 8022338:	786d      	ldrb	r5, [r5, #1]
 802233a:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 802233e:	eba2 020a 	sub.w	r2, r2, sl
 8022342:	b292      	uxth	r2, r2
 8022344:	ebae 0e00 	sub.w	lr, lr, r0
 8022348:	fa1f fe8e 	uxth.w	lr, lr
 802234c:	4351      	muls	r1, r2
 802234e:	fb02 f808 	mul.w	r8, r2, r8
 8022352:	fb0e 8806 	mla	r8, lr, r6, r8
 8022356:	fb0e 1505 	mla	r5, lr, r5, r1
 802235a:	78a6      	ldrb	r6, [r4, #2]
 802235c:	7861      	ldrb	r1, [r4, #1]
 802235e:	fa1f f78c 	uxth.w	r7, ip
 8022362:	fb00 8806 	mla	r8, r0, r6, r8
 8022366:	fb00 5501 	mla	r5, r0, r1, r5
 802236a:	789e      	ldrb	r6, [r3, #2]
 802236c:	7859      	ldrb	r1, [r3, #1]
 802236e:	9b00      	ldr	r3, [sp, #0]
 8022370:	ea6f 0c0c 	mvn.w	ip, ip
 8022374:	fa5f fc8c 	uxtb.w	ip, ip
 8022378:	fb0a 5101 	mla	r1, sl, r1, r5
 802237c:	fb13 f50c 	smulbb	r5, r3, ip
 8022380:	9b03      	ldr	r3, [sp, #12]
 8022382:	435a      	muls	r2, r3
 8022384:	9b02      	ldr	r3, [sp, #8]
 8022386:	fb0e 2203 	mla	r2, lr, r3, r2
 802238a:	9b04      	ldr	r3, [sp, #16]
 802238c:	fb00 2003 	mla	r0, r0, r3, r2
 8022390:	9b05      	ldr	r3, [sp, #20]
 8022392:	fb0a 8606 	mla	r6, sl, r6, r8
 8022396:	fb19 f90c 	smulbb	r9, r9, ip
 802239a:	fb0a 0a03 	mla	sl, sl, r3, r0
 802239e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80223a2:	9b01      	ldr	r3, [sp, #4]
 80223a4:	fb06 9607 	mla	r6, r6, r7, r9
 80223a8:	b2b6      	uxth	r6, r6
 80223aa:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80223ae:	fb13 fc0c 	smulbb	ip, r3, ip
 80223b2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80223b6:	fb01 5107 	mla	r1, r1, r7, r5
 80223ba:	f106 0901 	add.w	r9, r6, #1
 80223be:	fb0a c707 	mla	r7, sl, r7, ip
 80223c2:	b2bf      	uxth	r7, r7
 80223c4:	b289      	uxth	r1, r1
 80223c6:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80223ca:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 80223ce:	1c4d      	adds	r5, r1, #1
 80223d0:	1c7e      	adds	r6, r7, #1
 80223d2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80223d6:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80223da:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80223de:	0949      	lsrs	r1, r1, #5
 80223e0:	ea46 0609 	orr.w	r6, r6, r9
 80223e4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80223e8:	430e      	orrs	r6, r1
 80223ea:	f8ab 6000 	strh.w	r6, [fp]
 80223ee:	b009      	add	sp, #36	; 0x24
 80223f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80223f4:	08035bf7 	.word	0x08035bf7
 80223f8:	08036126 	.word	0x08036126
 80223fc:	08035bc4 	.word	0x08035bc4

08022400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022404:	ed2d 8b08 	vpush	{d8-d11}
 8022408:	b095      	sub	sp, #84	; 0x54
 802240a:	eeb0 aa40 	vmov.f32	s20, s0
 802240e:	9212      	str	r2, [sp, #72]	; 0x48
 8022410:	9309      	str	r3, [sp, #36]	; 0x24
 8022412:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8022414:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8022418:	930f      	str	r3, [sp, #60]	; 0x3c
 802241a:	910e      	str	r1, [sp, #56]	; 0x38
 802241c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8022420:	9013      	str	r0, [sp, #76]	; 0x4c
 8022422:	6850      	ldr	r0, [r2, #4]
 8022424:	6812      	ldr	r2, [r2, #0]
 8022426:	fb00 1303 	mla	r3, r0, r3, r1
 802242a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802242e:	930a      	str	r3, [sp, #40]	; 0x28
 8022430:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022432:	681b      	ldr	r3, [r3, #0]
 8022434:	930d      	str	r3, [sp, #52]	; 0x34
 8022436:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022438:	685c      	ldr	r4, [r3, #4]
 802243a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802243c:	43db      	mvns	r3, r3
 802243e:	b2db      	uxtb	r3, r3
 8022440:	eef0 9a60 	vmov.f32	s19, s1
 8022444:	eeb0 9a41 	vmov.f32	s18, s2
 8022448:	eeb0 8a62 	vmov.f32	s16, s5
 802244c:	eef0 8a43 	vmov.f32	s17, s6
 8022450:	eef0 ba44 	vmov.f32	s23, s8
 8022454:	eeb0 ba64 	vmov.f32	s22, s9
 8022458:	eef0 aa45 	vmov.f32	s21, s10
 802245c:	3404      	adds	r4, #4
 802245e:	930b      	str	r3, [sp, #44]	; 0x2c
 8022460:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022462:	2b00      	cmp	r3, #0
 8022464:	dc03      	bgt.n	802246e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022466:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8022468:	2b00      	cmp	r3, #0
 802246a:	f340 8255 	ble.w	8022918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 802246e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022470:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022474:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022478:	1e48      	subs	r0, r1, #1
 802247a:	1e55      	subs	r5, r2, #1
 802247c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802247e:	2b00      	cmp	r3, #0
 8022480:	f340 80f9 	ble.w	8022676 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022484:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8022486:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022488:	1436      	asrs	r6, r6, #16
 802248a:	ea4f 4323 	mov.w	r3, r3, asr #16
 802248e:	d406      	bmi.n	802249e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8022490:	4286      	cmp	r6, r0
 8022492:	da04      	bge.n	802249e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8022494:	2b00      	cmp	r3, #0
 8022496:	db02      	blt.n	802249e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8022498:	42ab      	cmp	r3, r5
 802249a:	f2c0 80ed 	blt.w	8022678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802249e:	3601      	adds	r6, #1
 80224a0:	f100 80da 	bmi.w	8022658 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80224a4:	42b1      	cmp	r1, r6
 80224a6:	f2c0 80d7 	blt.w	8022658 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80224aa:	3301      	adds	r3, #1
 80224ac:	f100 80d4 	bmi.w	8022658 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80224b0:	429a      	cmp	r2, r3
 80224b2:	f2c0 80d1 	blt.w	8022658 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80224b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80224b8:	9311      	str	r3, [sp, #68]	; 0x44
 80224ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80224bc:	930c      	str	r3, [sp, #48]	; 0x30
 80224be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80224c0:	2b00      	cmp	r3, #0
 80224c2:	f340 80fa 	ble.w	80226ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80224c6:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80224c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80224ca:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80224cc:	68c6      	ldr	r6, [r0, #12]
 80224ce:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80224d0:	141d      	asrs	r5, r3, #16
 80224d2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80224d6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80224d8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80224da:	1400      	asrs	r0, r0, #16
 80224dc:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80224e0:	6892      	ldr	r2, [r2, #8]
 80224e2:	f100 813e 	bmi.w	8022762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80224e6:	1e57      	subs	r7, r2, #1
 80224e8:	42b8      	cmp	r0, r7
 80224ea:	f280 813a 	bge.w	8022762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80224ee:	2d00      	cmp	r5, #0
 80224f0:	f2c0 8137 	blt.w	8022762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80224f4:	1e77      	subs	r7, r6, #1
 80224f6:	42bd      	cmp	r5, r7
 80224f8:	f280 8133 	bge.w	8022762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80224fc:	b212      	sxth	r2, r2
 80224fe:	fb05 0002 	mla	r0, r5, r2, r0
 8022502:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022504:	f815 a000 	ldrb.w	sl, [r5, r0]
 8022508:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802250c:	182e      	adds	r6, r5, r0
 802250e:	eb04 050a 	add.w	r5, r4, sl
 8022512:	2b00      	cmp	r3, #0
 8022514:	f000 8117 	beq.w	8022746 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8022518:	f896 c001 	ldrb.w	ip, [r6, #1]
 802251c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8022520:	44a4      	add	ip, r4
 8022522:	2900      	cmp	r1, #0
 8022524:	f000 8117 	beq.w	8022756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022528:	18b0      	adds	r0, r6, r2
 802252a:	5cb2      	ldrb	r2, [r6, r2]
 802252c:	7840      	ldrb	r0, [r0, #1]
 802252e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022532:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022536:	4422      	add	r2, r4
 8022538:	4420      	add	r0, r4
 802253a:	b29b      	uxth	r3, r3
 802253c:	b289      	uxth	r1, r1
 802253e:	fb03 f901 	mul.w	r9, r3, r1
 8022542:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022546:	011b      	lsls	r3, r3, #4
 8022548:	b289      	uxth	r1, r1
 802254a:	f89c 7002 	ldrb.w	r7, [ip, #2]
 802254e:	f895 b002 	ldrb.w	fp, [r5, #2]
 8022552:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8022554:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8022558:	f8b6 e000 	ldrh.w	lr, [r6]
 802255c:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8022560:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8022564:	eba3 0309 	sub.w	r3, r3, r9
 8022568:	b29b      	uxth	r3, r3
 802256a:	eba8 0801 	sub.w	r8, r8, r1
 802256e:	fa1f f888 	uxth.w	r8, r8
 8022572:	435f      	muls	r7, r3
 8022574:	fb08 770b 	mla	r7, r8, fp, r7
 8022578:	f892 b002 	ldrb.w	fp, [r2, #2]
 802257c:	9310      	str	r3, [sp, #64]	; 0x40
 802257e:	fb01 770b 	mla	r7, r1, fp, r7
 8022582:	f890 b002 	ldrb.w	fp, [r0, #2]
 8022586:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022588:	fb09 770b 	mla	r7, r9, fp, r7
 802258c:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8022590:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8022594:	fb1b fb03 	smulbb	fp, fp, r3
 8022598:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802259c:	fb07 b706 	mla	r7, r7, r6, fp
 80225a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80225a2:	f895 b001 	ldrb.w	fp, [r5, #1]
 80225a6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80225aa:	f89c c000 	ldrb.w	ip, [ip]
 80225ae:	435d      	muls	r5, r3
 80225b0:	fb08 550b 	mla	r5, r8, fp, r5
 80225b4:	f892 b001 	ldrb.w	fp, [r2, #1]
 80225b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80225ba:	fb01 550b 	mla	r5, r1, fp, r5
 80225be:	f890 b001 	ldrb.w	fp, [r0, #1]
 80225c2:	fb09 550b 	mla	r5, r9, fp, r5
 80225c6:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80225ca:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80225ce:	fb1b fb03 	smulbb	fp, fp, r3
 80225d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80225d4:	fb03 f30c 	mul.w	r3, r3, ip
 80225d8:	f892 c000 	ldrb.w	ip, [r2]
 80225dc:	fb08 330a 	mla	r3, r8, sl, r3
 80225e0:	fb01 330c 	mla	r3, r1, ip, r3
 80225e4:	f890 c000 	ldrb.w	ip, [r0]
 80225e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80225ec:	fb09 3c0c 	mla	ip, r9, ip, r3
 80225f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80225f2:	fa5f fe8e 	uxtb.w	lr, lr
 80225f6:	b2bf      	uxth	r7, r7
 80225f8:	fb1e fe03 	smulbb	lr, lr, r3
 80225fc:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8022600:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8022604:	fb05 b506 	mla	r5, r5, r6, fp
 8022608:	1c7b      	adds	r3, r7, #1
 802260a:	fb0c e606 	mla	r6, ip, r6, lr
 802260e:	b2ad      	uxth	r5, r5
 8022610:	b2b6      	uxth	r6, r6
 8022612:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022616:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 802261a:	f105 0b01 	add.w	fp, r5, #1
 802261e:	1c77      	adds	r7, r6, #1
 8022620:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8022624:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8022628:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802262c:	096d      	lsrs	r5, r5, #5
 802262e:	431f      	orrs	r7, r3
 8022630:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022634:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022636:	433d      	orrs	r5, r7
 8022638:	801d      	strh	r5, [r3, #0]
 802263a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802263c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802263e:	3302      	adds	r3, #2
 8022640:	930c      	str	r3, [sp, #48]	; 0x30
 8022642:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022644:	4413      	add	r3, r2
 8022646:	9327      	str	r3, [sp, #156]	; 0x9c
 8022648:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 802264a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802264c:	4413      	add	r3, r2
 802264e:	9328      	str	r3, [sp, #160]	; 0xa0
 8022650:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022652:	3b01      	subs	r3, #1
 8022654:	9311      	str	r3, [sp, #68]	; 0x44
 8022656:	e732      	b.n	80224be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8022658:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802265a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 802265c:	4433      	add	r3, r6
 802265e:	9327      	str	r3, [sp, #156]	; 0x9c
 8022660:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8022662:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022664:	4433      	add	r3, r6
 8022666:	9328      	str	r3, [sp, #160]	; 0xa0
 8022668:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802266a:	3b01      	subs	r3, #1
 802266c:	9309      	str	r3, [sp, #36]	; 0x24
 802266e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022670:	3302      	adds	r3, #2
 8022672:	930a      	str	r3, [sp, #40]	; 0x28
 8022674:	e702      	b.n	802247c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022676:	d027      	beq.n	80226c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8022678:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802267a:	9829      	ldr	r0, [sp, #164]	; 0xa4
 802267c:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 802267e:	3b01      	subs	r3, #1
 8022680:	fb00 5003 	mla	r0, r0, r3, r5
 8022684:	1400      	asrs	r0, r0, #16
 8022686:	f53f af16 	bmi.w	80224b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802268a:	3901      	subs	r1, #1
 802268c:	4288      	cmp	r0, r1
 802268e:	f6bf af12 	bge.w	80224b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8022692:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8022694:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8022696:	fb01 0303 	mla	r3, r1, r3, r0
 802269a:	141b      	asrs	r3, r3, #16
 802269c:	f53f af0b 	bmi.w	80224b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80226a0:	3a01      	subs	r2, #1
 80226a2:	4293      	cmp	r3, r2
 80226a4:	f6bf af07 	bge.w	80224b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80226a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80226aa:	9311      	str	r3, [sp, #68]	; 0x44
 80226ac:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80226b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80226b2:	930c      	str	r3, [sp, #48]	; 0x30
 80226b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80226b6:	2b00      	cmp	r3, #0
 80226b8:	dc70      	bgt.n	802279c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80226ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80226bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80226be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80226c2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80226c6:	930a      	str	r3, [sp, #40]	; 0x28
 80226c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80226ca:	2b00      	cmp	r3, #0
 80226cc:	f340 8124 	ble.w	8022918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80226d0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80226d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80226d8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80226dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80226de:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80226e2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80226e6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80226ea:	eef0 6a48 	vmov.f32	s13, s16
 80226ee:	ee69 7a27 	vmul.f32	s15, s18, s15
 80226f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80226f6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80226fa:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80226fe:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8022702:	eef0 6a68 	vmov.f32	s13, s17
 8022706:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802270a:	ee18 2a10 	vmov	r2, s16
 802270e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8022712:	fb92 f3f3 	sdiv	r3, r2, r3
 8022716:	ee18 2a90 	vmov	r2, s17
 802271a:	9329      	str	r3, [sp, #164]	; 0xa4
 802271c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802271e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022722:	932a      	str	r3, [sp, #168]	; 0xa8
 8022724:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022726:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8022728:	3b01      	subs	r3, #1
 802272a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802272e:	930e      	str	r3, [sp, #56]	; 0x38
 8022730:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022732:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8022736:	bf08      	it	eq
 8022738:	4613      	moveq	r3, r2
 802273a:	9309      	str	r3, [sp, #36]	; 0x24
 802273c:	eef0 8a67 	vmov.f32	s17, s15
 8022740:	eeb0 8a47 	vmov.f32	s16, s14
 8022744:	e68c      	b.n	8022460 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8022746:	b149      	cbz	r1, 802275c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8022748:	5cb2      	ldrb	r2, [r6, r2]
 802274a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802274e:	4422      	add	r2, r4
 8022750:	4628      	mov	r0, r5
 8022752:	46ac      	mov	ip, r5
 8022754:	e6f1      	b.n	802253a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8022756:	4628      	mov	r0, r5
 8022758:	462a      	mov	r2, r5
 802275a:	e6ee      	b.n	802253a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 802275c:	4628      	mov	r0, r5
 802275e:	462a      	mov	r2, r5
 8022760:	e7f7      	b.n	8022752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8022762:	1c47      	adds	r7, r0, #1
 8022764:	f53f af69 	bmi.w	802263a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8022768:	42ba      	cmp	r2, r7
 802276a:	f6ff af66 	blt.w	802263a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802276e:	1c6f      	adds	r7, r5, #1
 8022770:	f53f af63 	bmi.w	802263a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8022774:	42be      	cmp	r6, r7
 8022776:	f6ff af60 	blt.w	802263a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802277a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 802277c:	9002      	str	r0, [sp, #8]
 802277e:	b236      	sxth	r6, r6
 8022780:	b212      	sxth	r2, r2
 8022782:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8022786:	e9cd 5303 	strd	r5, r3, [sp, #12]
 802278a:	9200      	str	r2, [sp, #0]
 802278c:	9601      	str	r6, [sp, #4]
 802278e:	4623      	mov	r3, r4
 8022790:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8022794:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8022796:	f7ff fd49 	bl	802222c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 802279a:	e74e      	b.n	802263a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802279c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 802279e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80227a0:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80227a2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80227a4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80227a8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80227aa:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80227ae:	142d      	asrs	r5, r5, #16
 80227b0:	1400      	asrs	r0, r0, #16
 80227b2:	fb02 5000 	mla	r0, r2, r0, r5
 80227b6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80227b8:	f815 9000 	ldrb.w	r9, [r5, r0]
 80227bc:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80227c0:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80227c4:	182e      	adds	r6, r5, r0
 80227c6:	eb04 0509 	add.w	r5, r4, r9
 80227ca:	2b00      	cmp	r3, #0
 80227cc:	f000 8096 	beq.w	80228fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 80227d0:	7877      	ldrb	r7, [r6, #1]
 80227d2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80227d6:	4427      	add	r7, r4
 80227d8:	2900      	cmp	r1, #0
 80227da:	f000 8097 	beq.w	802290c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 80227de:	18b0      	adds	r0, r6, r2
 80227e0:	5cb2      	ldrb	r2, [r6, r2]
 80227e2:	7840      	ldrb	r0, [r0, #1]
 80227e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80227e8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80227ec:	4422      	add	r2, r4
 80227ee:	4420      	add	r0, r4
 80227f0:	b29b      	uxth	r3, r3
 80227f2:	b289      	uxth	r1, r1
 80227f4:	fb03 f801 	mul.w	r8, r3, r1
 80227f8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80227fa:	f895 b002 	ldrb.w	fp, [r5, #2]
 80227fe:	f8b6 c000 	ldrh.w	ip, [r6]
 8022802:	78be      	ldrb	r6, [r7, #2]
 8022804:	f814 9009 	ldrb.w	r9, [r4, r9]
 8022808:	011b      	lsls	r3, r3, #4
 802280a:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 802280e:	b289      	uxth	r1, r1
 8022810:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8022814:	eba3 0308 	sub.w	r3, r3, r8
 8022818:	b29b      	uxth	r3, r3
 802281a:	ebae 0e01 	sub.w	lr, lr, r1
 802281e:	fa1f fe8e 	uxth.w	lr, lr
 8022822:	435e      	muls	r6, r3
 8022824:	fb0e 660b 	mla	r6, lr, fp, r6
 8022828:	f892 b002 	ldrb.w	fp, [r2, #2]
 802282c:	9310      	str	r3, [sp, #64]	; 0x40
 802282e:	fb01 660b 	mla	r6, r1, fp, r6
 8022832:	f890 b002 	ldrb.w	fp, [r0, #2]
 8022836:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022838:	fb08 660b 	mla	r6, r8, fp, r6
 802283c:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8022840:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8022844:	fb1b fb03 	smulbb	fp, fp, r3
 8022848:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802284c:	fb06 b60a 	mla	r6, r6, sl, fp
 8022850:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022852:	f895 b001 	ldrb.w	fp, [r5, #1]
 8022856:	787d      	ldrb	r5, [r7, #1]
 8022858:	783f      	ldrb	r7, [r7, #0]
 802285a:	435d      	muls	r5, r3
 802285c:	fb0e 550b 	mla	r5, lr, fp, r5
 8022860:	f892 b001 	ldrb.w	fp, [r2, #1]
 8022864:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022866:	fb01 550b 	mla	r5, r1, fp, r5
 802286a:	f890 b001 	ldrb.w	fp, [r0, #1]
 802286e:	fb08 550b 	mla	r5, r8, fp, r5
 8022872:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8022876:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 802287a:	fb1b fb03 	smulbb	fp, fp, r3
 802287e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022880:	437b      	muls	r3, r7
 8022882:	7817      	ldrb	r7, [r2, #0]
 8022884:	fb0e 3309 	mla	r3, lr, r9, r3
 8022888:	fb01 3307 	mla	r3, r1, r7, r3
 802288c:	7807      	ldrb	r7, [r0, #0]
 802288e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022892:	fb08 3707 	mla	r7, r8, r7, r3
 8022896:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022898:	fa5f fc8c 	uxtb.w	ip, ip
 802289c:	fb1c fc03 	smulbb	ip, ip, r3
 80228a0:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80228a4:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80228a8:	fb05 b50a 	mla	r5, r5, sl, fp
 80228ac:	fb07 c70a 	mla	r7, r7, sl, ip
 80228b0:	b2b6      	uxth	r6, r6
 80228b2:	b2ad      	uxth	r5, r5
 80228b4:	b2bf      	uxth	r7, r7
 80228b6:	1c73      	adds	r3, r6, #1
 80228b8:	1c7a      	adds	r2, r7, #1
 80228ba:	f105 0b01 	add.w	fp, r5, #1
 80228be:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80228c2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80228c6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80228ca:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80228ce:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80228d2:	096d      	lsrs	r5, r5, #5
 80228d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80228d6:	4316      	orrs	r6, r2
 80228d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80228dc:	432e      	orrs	r6, r5
 80228de:	f823 6b02 	strh.w	r6, [r3], #2
 80228e2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80228e4:	930c      	str	r3, [sp, #48]	; 0x30
 80228e6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80228e8:	4413      	add	r3, r2
 80228ea:	9327      	str	r3, [sp, #156]	; 0x9c
 80228ec:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80228ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80228f0:	4413      	add	r3, r2
 80228f2:	9328      	str	r3, [sp, #160]	; 0xa0
 80228f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80228f6:	3b01      	subs	r3, #1
 80228f8:	9311      	str	r3, [sp, #68]	; 0x44
 80228fa:	e6db      	b.n	80226b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 80228fc:	b149      	cbz	r1, 8022912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 80228fe:	5cb2      	ldrb	r2, [r6, r2]
 8022900:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022904:	4422      	add	r2, r4
 8022906:	4628      	mov	r0, r5
 8022908:	462f      	mov	r7, r5
 802290a:	e771      	b.n	80227f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 802290c:	4628      	mov	r0, r5
 802290e:	462a      	mov	r2, r5
 8022910:	e76e      	b.n	80227f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8022912:	4628      	mov	r0, r5
 8022914:	462a      	mov	r2, r5
 8022916:	e7f7      	b.n	8022908 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8022918:	b015      	add	sp, #84	; 0x54
 802291a:	ecbd 8b08 	vpop	{d8-d11}
 802291e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08022924 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8022924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022928:	880e      	ldrh	r6, [r1, #0]
 802292a:	b085      	sub	sp, #20
 802292c:	0230      	lsls	r0, r6, #8
 802292e:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8022932:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8022936:	0170      	lsls	r0, r6, #5
 8022938:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 802293c:	9101      	str	r1, [sp, #4]
 802293e:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8022942:	00f6      	lsls	r6, r6, #3
 8022944:	ea4b 0000 	orr.w	r0, fp, r0
 8022948:	b2f6      	uxtb	r6, r6
 802294a:	4691      	mov	r9, r2
 802294c:	fb05 7a0c 	mla	sl, r5, ip, r7
 8022950:	4306      	orrs	r6, r0
 8022952:	2d00      	cmp	r5, #0
 8022954:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8022958:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 802295c:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8022960:	9603      	str	r6, [sp, #12]
 8022962:	eb09 0e0a 	add.w	lr, r9, sl
 8022966:	db42      	blt.n	80229ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8022968:	45a8      	cmp	r8, r5
 802296a:	dd40      	ble.n	80229ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 802296c:	2f00      	cmp	r7, #0
 802296e:	db3c      	blt.n	80229ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8022970:	45bc      	cmp	ip, r7
 8022972:	dd3a      	ble.n	80229ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8022974:	f819 600a 	ldrb.w	r6, [r9, sl]
 8022978:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802297c:	441e      	add	r6, r3
 802297e:	1c78      	adds	r0, r7, #1
 8022980:	d438      	bmi.n	80229f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8022982:	4584      	cmp	ip, r0
 8022984:	dd36      	ble.n	80229f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8022986:	b3aa      	cbz	r2, 80229f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8022988:	f89e 0001 	ldrb.w	r0, [lr, #1]
 802298c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022990:	4418      	add	r0, r3
 8022992:	3501      	adds	r5, #1
 8022994:	d432      	bmi.n	80229fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8022996:	45a8      	cmp	r8, r5
 8022998:	dd30      	ble.n	80229fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 802299a:	b37c      	cbz	r4, 80229fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 802299c:	2f00      	cmp	r7, #0
 802299e:	db2b      	blt.n	80229f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 80229a0:	45bc      	cmp	ip, r7
 80229a2:	dd29      	ble.n	80229f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 80229a4:	f81e 500c 	ldrb.w	r5, [lr, ip]
 80229a8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80229ac:	441d      	add	r5, r3
 80229ae:	3701      	adds	r7, #1
 80229b0:	d427      	bmi.n	8022a02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 80229b2:	45bc      	cmp	ip, r7
 80229b4:	dd25      	ble.n	8022a02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 80229b6:	b322      	cbz	r2, 8022a02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 80229b8:	44f4      	add	ip, lr
 80229ba:	f89c 7001 	ldrb.w	r7, [ip, #1]
 80229be:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80229c2:	443b      	add	r3, r7
 80229c4:	781f      	ldrb	r7, [r3, #0]
 80229c6:	f896 9000 	ldrb.w	r9, [r6]
 80229ca:	f890 a000 	ldrb.w	sl, [r0]
 80229ce:	f895 8000 	ldrb.w	r8, [r5]
 80229d2:	2a0f      	cmp	r2, #15
 80229d4:	4639      	mov	r1, r7
 80229d6:	d801      	bhi.n	80229dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 80229d8:	2c0f      	cmp	r4, #15
 80229da:	d914      	bls.n	8022a06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 80229dc:	4b2c      	ldr	r3, [pc, #176]	; (8022a90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 80229de:	4a2d      	ldr	r2, [pc, #180]	; (8022a94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 80229e0:	482d      	ldr	r0, [pc, #180]	; (8022a98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 80229e2:	f240 11f9 	movw	r1, #505	; 0x1f9
 80229e6:	f009 faed 	bl	802bfc4 <__assert_func>
 80229ea:	ae03      	add	r6, sp, #12
 80229ec:	e7c7      	b.n	802297e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 80229ee:	a803      	add	r0, sp, #12
 80229f0:	4606      	mov	r6, r0
 80229f2:	e7ce      	b.n	8022992 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80229f4:	a803      	add	r0, sp, #12
 80229f6:	e7cc      	b.n	8022992 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80229f8:	ad03      	add	r5, sp, #12
 80229fa:	e7d8      	b.n	80229ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 80229fc:	ab03      	add	r3, sp, #12
 80229fe:	461d      	mov	r5, r3
 8022a00:	e7e0      	b.n	80229c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8022a02:	ab03      	add	r3, sp, #12
 8022a04:	e7de      	b.n	80229c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8022a06:	b292      	uxth	r2, r2
 8022a08:	b2a4      	uxth	r4, r4
 8022a0a:	fb02 fe04 	mul.w	lr, r2, r4
 8022a0e:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8022a12:	0112      	lsls	r2, r2, #4
 8022a14:	b2a4      	uxth	r4, r4
 8022a16:	f890 c002 	ldrb.w	ip, [r0, #2]
 8022a1a:	f896 b002 	ldrb.w	fp, [r6, #2]
 8022a1e:	7840      	ldrb	r0, [r0, #1]
 8022a20:	7876      	ldrb	r6, [r6, #1]
 8022a22:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8022a26:	eba2 020e 	sub.w	r2, r2, lr
 8022a2a:	b292      	uxth	r2, r2
 8022a2c:	1b3f      	subs	r7, r7, r4
 8022a2e:	b2bf      	uxth	r7, r7
 8022a30:	fb02 fc0c 	mul.w	ip, r2, ip
 8022a34:	fb07 cc0b 	mla	ip, r7, fp, ip
 8022a38:	f895 b002 	ldrb.w	fp, [r5, #2]
 8022a3c:	fb04 cc0b 	mla	ip, r4, fp, ip
 8022a40:	f893 b002 	ldrb.w	fp, [r3, #2]
 8022a44:	785b      	ldrb	r3, [r3, #1]
 8022a46:	fb0e cc0b 	mla	ip, lr, fp, ip
 8022a4a:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8022a4e:	fb02 fc0a 	mul.w	ip, r2, sl
 8022a52:	4342      	muls	r2, r0
 8022a54:	7868      	ldrb	r0, [r5, #1]
 8022a56:	fb07 cc09 	mla	ip, r7, r9, ip
 8022a5a:	fb07 2206 	mla	r2, r7, r6, r2
 8022a5e:	fb04 cc08 	mla	ip, r4, r8, ip
 8022a62:	fb04 2400 	mla	r4, r4, r0, r2
 8022a66:	fb0e cc01 	mla	ip, lr, r1, ip
 8022a6a:	fb0e 4e03 	mla	lr, lr, r3, r4
 8022a6e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8022a72:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022a76:	ea4c 0c0b 	orr.w	ip, ip, fp
 8022a7a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022a7e:	9b01      	ldr	r3, [sp, #4]
 8022a80:	ea4c 0c0e 	orr.w	ip, ip, lr
 8022a84:	f8a3 c000 	strh.w	ip, [r3]
 8022a88:	b005      	add	sp, #20
 8022a8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022a8e:	bf00      	nop
 8022a90:	08035bf7 	.word	0x08035bf7
 8022a94:	08036126 	.word	0x08036126
 8022a98:	08035bc4 	.word	0x08035bc4

08022a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022aa0:	ed2d 8b08 	vpush	{d8-d11}
 8022aa4:	b08f      	sub	sp, #60	; 0x3c
 8022aa6:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8022aaa:	920c      	str	r2, [sp, #48]	; 0x30
 8022aac:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022aae:	910a      	str	r1, [sp, #40]	; 0x28
 8022ab0:	9306      	str	r3, [sp, #24]
 8022ab2:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8022ab6:	900d      	str	r0, [sp, #52]	; 0x34
 8022ab8:	6850      	ldr	r0, [r2, #4]
 8022aba:	6812      	ldr	r2, [r2, #0]
 8022abc:	fb00 1303 	mla	r3, r0, r3, r1
 8022ac0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022ac4:	9307      	str	r3, [sp, #28]
 8022ac6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022ac8:	681b      	ldr	r3, [r3, #0]
 8022aca:	9308      	str	r3, [sp, #32]
 8022acc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022ace:	685c      	ldr	r4, [r3, #4]
 8022ad0:	eeb0 aa40 	vmov.f32	s20, s0
 8022ad4:	eef0 9a60 	vmov.f32	s19, s1
 8022ad8:	eeb0 9a41 	vmov.f32	s18, s2
 8022adc:	eeb0 8a62 	vmov.f32	s16, s5
 8022ae0:	eef0 8a43 	vmov.f32	s17, s6
 8022ae4:	eef0 ba44 	vmov.f32	s23, s8
 8022ae8:	eeb0 ba64 	vmov.f32	s22, s9
 8022aec:	eef0 aa45 	vmov.f32	s21, s10
 8022af0:	3404      	adds	r4, #4
 8022af2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022af4:	2b00      	cmp	r3, #0
 8022af6:	dc03      	bgt.n	8022b00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8022af8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022afa:	2b00      	cmp	r3, #0
 8022afc:	f340 81d6 	ble.w	8022eac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8022b00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022b02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022b06:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022b0a:	1e48      	subs	r0, r1, #1
 8022b0c:	1e56      	subs	r6, r2, #1
 8022b0e:	9b06      	ldr	r3, [sp, #24]
 8022b10:	2b00      	cmp	r3, #0
 8022b12:	f340 80b7 	ble.w	8022c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8022b16:	ea5f 472b 	movs.w	r7, fp, asr #16
 8022b1a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022b1e:	d406      	bmi.n	8022b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022b20:	4287      	cmp	r7, r0
 8022b22:	da04      	bge.n	8022b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022b24:	2b00      	cmp	r3, #0
 8022b26:	db02      	blt.n	8022b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022b28:	42b3      	cmp	r3, r6
 8022b2a:	f2c0 80ac 	blt.w	8022c86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8022b2e:	3701      	adds	r7, #1
 8022b30:	f100 809d 	bmi.w	8022c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022b34:	42b9      	cmp	r1, r7
 8022b36:	f2c0 809a 	blt.w	8022c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022b3a:	3301      	adds	r3, #1
 8022b3c:	f100 8097 	bmi.w	8022c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022b40:	429a      	cmp	r2, r3
 8022b42:	f2c0 8094 	blt.w	8022c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022b46:	9b06      	ldr	r3, [sp, #24]
 8022b48:	930b      	str	r3, [sp, #44]	; 0x2c
 8022b4a:	9b07      	ldr	r3, [sp, #28]
 8022b4c:	9309      	str	r3, [sp, #36]	; 0x24
 8022b4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022b50:	2b00      	cmp	r3, #0
 8022b52:	f340 80b5 	ble.w	8022cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8022b56:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8022b58:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8022b5a:	68c7      	ldr	r7, [r0, #12]
 8022b5c:	6892      	ldr	r2, [r2, #8]
 8022b5e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8022b62:	ea4f 4625 	mov.w	r6, r5, asr #16
 8022b66:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8022b6a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022b6e:	f100 80fb 	bmi.w	8022d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8022b72:	f102 3cff 	add.w	ip, r2, #4294967295
 8022b76:	4560      	cmp	r0, ip
 8022b78:	f280 80f6 	bge.w	8022d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8022b7c:	2e00      	cmp	r6, #0
 8022b7e:	f2c0 80f3 	blt.w	8022d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8022b82:	f107 3cff 	add.w	ip, r7, #4294967295
 8022b86:	4566      	cmp	r6, ip
 8022b88:	f280 80ee 	bge.w	8022d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8022b8c:	b212      	sxth	r2, r2
 8022b8e:	fb06 0002 	mla	r0, r6, r2, r0
 8022b92:	9e08      	ldr	r6, [sp, #32]
 8022b94:	1837      	adds	r7, r6, r0
 8022b96:	5c30      	ldrb	r0, [r6, r0]
 8022b98:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8022b9c:	eb04 0c08 	add.w	ip, r4, r8
 8022ba0:	2b00      	cmp	r3, #0
 8022ba2:	f000 80d3 	beq.w	8022d4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8022ba6:	787e      	ldrb	r6, [r7, #1]
 8022ba8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022bac:	4426      	add	r6, r4
 8022bae:	2900      	cmp	r1, #0
 8022bb0:	f000 80d4 	beq.w	8022d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8022bb4:	18b8      	adds	r0, r7, r2
 8022bb6:	5cba      	ldrb	r2, [r7, r2]
 8022bb8:	7840      	ldrb	r0, [r0, #1]
 8022bba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022bbe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022bc2:	4422      	add	r2, r4
 8022bc4:	4420      	add	r0, r4
 8022bc6:	b29b      	uxth	r3, r3
 8022bc8:	b289      	uxth	r1, r1
 8022bca:	fb03 f901 	mul.w	r9, r3, r1
 8022bce:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022bd2:	011b      	lsls	r3, r3, #4
 8022bd4:	b289      	uxth	r1, r1
 8022bd6:	78b7      	ldrb	r7, [r6, #2]
 8022bd8:	f89c a002 	ldrb.w	sl, [ip, #2]
 8022bdc:	f89c c001 	ldrb.w	ip, [ip, #1]
 8022be0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8022be4:	eba3 0309 	sub.w	r3, r3, r9
 8022be8:	b29b      	uxth	r3, r3
 8022bea:	ebae 0e01 	sub.w	lr, lr, r1
 8022bee:	fa1f fe8e 	uxth.w	lr, lr
 8022bf2:	435f      	muls	r7, r3
 8022bf4:	fb0e 770a 	mla	r7, lr, sl, r7
 8022bf8:	f892 a002 	ldrb.w	sl, [r2, #2]
 8022bfc:	fb01 770a 	mla	r7, r1, sl, r7
 8022c00:	f890 a002 	ldrb.w	sl, [r0, #2]
 8022c04:	fb09 7a0a 	mla	sl, r9, sl, r7
 8022c08:	f814 7008 	ldrb.w	r7, [r4, r8]
 8022c0c:	f896 8000 	ldrb.w	r8, [r6]
 8022c10:	7876      	ldrb	r6, [r6, #1]
 8022c12:	fb03 f808 	mul.w	r8, r3, r8
 8022c16:	fb0e 8807 	mla	r8, lr, r7, r8
 8022c1a:	7817      	ldrb	r7, [r2, #0]
 8022c1c:	fb01 8807 	mla	r8, r1, r7, r8
 8022c20:	7807      	ldrb	r7, [r0, #0]
 8022c22:	fb09 8707 	mla	r7, r9, r7, r8
 8022c26:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8022c2a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022c2e:	ea47 070a 	orr.w	r7, r7, sl
 8022c32:	4373      	muls	r3, r6
 8022c34:	f892 a001 	ldrb.w	sl, [r2, #1]
 8022c38:	fb0e 330c 	mla	r3, lr, ip, r3
 8022c3c:	fb01 310a 	mla	r1, r1, sl, r3
 8022c40:	f890 a001 	ldrb.w	sl, [r0, #1]
 8022c44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022c46:	fb09 1a0a 	mla	sl, r9, sl, r1
 8022c4a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022c4e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8022c52:	ea47 070a 	orr.w	r7, r7, sl
 8022c56:	801f      	strh	r7, [r3, #0]
 8022c58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022c5a:	3302      	adds	r3, #2
 8022c5c:	9309      	str	r3, [sp, #36]	; 0x24
 8022c5e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8022c60:	449b      	add	fp, r3
 8022c62:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c64:	441d      	add	r5, r3
 8022c66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022c68:	3b01      	subs	r3, #1
 8022c6a:	930b      	str	r3, [sp, #44]	; 0x2c
 8022c6c:	e76f      	b.n	8022b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8022c6e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8022c70:	449b      	add	fp, r3
 8022c72:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c74:	441d      	add	r5, r3
 8022c76:	9b06      	ldr	r3, [sp, #24]
 8022c78:	3b01      	subs	r3, #1
 8022c7a:	9306      	str	r3, [sp, #24]
 8022c7c:	9b07      	ldr	r3, [sp, #28]
 8022c7e:	3302      	adds	r3, #2
 8022c80:	9307      	str	r3, [sp, #28]
 8022c82:	e744      	b.n	8022b0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022c84:	d023      	beq.n	8022cce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8022c86:	9b06      	ldr	r3, [sp, #24]
 8022c88:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022c8a:	3b01      	subs	r3, #1
 8022c8c:	fb00 b003 	mla	r0, r0, r3, fp
 8022c90:	1400      	asrs	r0, r0, #16
 8022c92:	f53f af58 	bmi.w	8022b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8022c96:	3901      	subs	r1, #1
 8022c98:	4288      	cmp	r0, r1
 8022c9a:	f6bf af54 	bge.w	8022b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8022c9e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8022ca0:	fb01 5303 	mla	r3, r1, r3, r5
 8022ca4:	141b      	asrs	r3, r3, #16
 8022ca6:	f53f af4e 	bmi.w	8022b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8022caa:	3a01      	subs	r2, #1
 8022cac:	4293      	cmp	r3, r2
 8022cae:	f6bf af4a 	bge.w	8022b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8022cb2:	9b06      	ldr	r3, [sp, #24]
 8022cb4:	9309      	str	r3, [sp, #36]	; 0x24
 8022cb6:	9b07      	ldr	r3, [sp, #28]
 8022cb8:	930b      	str	r3, [sp, #44]	; 0x2c
 8022cba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022cbc:	2b00      	cmp	r3, #0
 8022cbe:	dc70      	bgt.n	8022da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022cc0:	9b06      	ldr	r3, [sp, #24]
 8022cc2:	9a07      	ldr	r2, [sp, #28]
 8022cc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8022cc8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022ccc:	9307      	str	r3, [sp, #28]
 8022cce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022cd0:	2b00      	cmp	r3, #0
 8022cd2:	f340 80eb 	ble.w	8022eac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8022cd6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8022cda:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022cde:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8022ce2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022ce4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8022ce8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8022cec:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8022cf0:	eef0 6a48 	vmov.f32	s13, s16
 8022cf4:	ee69 7a27 	vmul.f32	s15, s18, s15
 8022cf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022cfc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8022d00:	ee16 ba90 	vmov	fp, s13
 8022d04:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8022d08:	eef0 6a68 	vmov.f32	s13, s17
 8022d0c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8022d10:	ee18 2a10 	vmov	r2, s16
 8022d14:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8022d18:	fb92 f3f3 	sdiv	r3, r2, r3
 8022d1c:	ee18 2a90 	vmov	r2, s17
 8022d20:	9323      	str	r3, [sp, #140]	; 0x8c
 8022d22:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d24:	fb92 f3f3 	sdiv	r3, r2, r3
 8022d28:	9324      	str	r3, [sp, #144]	; 0x90
 8022d2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022d2c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022d2e:	3b01      	subs	r3, #1
 8022d30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022d34:	930a      	str	r3, [sp, #40]	; 0x28
 8022d36:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d38:	bf08      	it	eq
 8022d3a:	4613      	moveq	r3, r2
 8022d3c:	ee16 5a90 	vmov	r5, s13
 8022d40:	9306      	str	r3, [sp, #24]
 8022d42:	eef0 8a67 	vmov.f32	s17, s15
 8022d46:	eeb0 8a47 	vmov.f32	s16, s14
 8022d4a:	e6d2      	b.n	8022af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8022d4c:	b149      	cbz	r1, 8022d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8022d4e:	5cba      	ldrb	r2, [r7, r2]
 8022d50:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022d54:	4422      	add	r2, r4
 8022d56:	4660      	mov	r0, ip
 8022d58:	4666      	mov	r6, ip
 8022d5a:	e734      	b.n	8022bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8022d5c:	4660      	mov	r0, ip
 8022d5e:	4662      	mov	r2, ip
 8022d60:	e731      	b.n	8022bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8022d62:	4660      	mov	r0, ip
 8022d64:	4662      	mov	r2, ip
 8022d66:	e7f7      	b.n	8022d58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8022d68:	f110 0c01 	adds.w	ip, r0, #1
 8022d6c:	f53f af74 	bmi.w	8022c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8022d70:	4562      	cmp	r2, ip
 8022d72:	f6ff af71 	blt.w	8022c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8022d76:	f116 0c01 	adds.w	ip, r6, #1
 8022d7a:	f53f af6d 	bmi.w	8022c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8022d7e:	4567      	cmp	r7, ip
 8022d80:	f6ff af6a 	blt.w	8022c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8022d84:	b23f      	sxth	r7, r7
 8022d86:	b212      	sxth	r2, r2
 8022d88:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8022d8c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8022d90:	9200      	str	r2, [sp, #0]
 8022d92:	9701      	str	r7, [sp, #4]
 8022d94:	4623      	mov	r3, r4
 8022d96:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8022d9a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8022d9c:	f7ff fdc2 	bl	8022924 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8022da0:	e75a      	b.n	8022c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8022da2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8022da4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8022da8:	ea4f 462b 	mov.w	r6, fp, asr #16
 8022dac:	1428      	asrs	r0, r5, #16
 8022dae:	fb02 6000 	mla	r0, r2, r0, r6
 8022db2:	9e08      	ldr	r6, [sp, #32]
 8022db4:	f816 8000 	ldrb.w	r8, [r6, r0]
 8022db8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8022dbc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8022dc0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022dc4:	1837      	adds	r7, r6, r0
 8022dc6:	eb04 0c08 	add.w	ip, r4, r8
 8022dca:	2b00      	cmp	r3, #0
 8022dcc:	d060      	beq.n	8022e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022dce:	787e      	ldrb	r6, [r7, #1]
 8022dd0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022dd4:	4426      	add	r6, r4
 8022dd6:	2900      	cmp	r1, #0
 8022dd8:	d062      	beq.n	8022ea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8022dda:	18b8      	adds	r0, r7, r2
 8022ddc:	5cba      	ldrb	r2, [r7, r2]
 8022dde:	7840      	ldrb	r0, [r0, #1]
 8022de0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022de4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022de8:	4422      	add	r2, r4
 8022dea:	4420      	add	r0, r4
 8022dec:	b29b      	uxth	r3, r3
 8022dee:	b289      	uxth	r1, r1
 8022df0:	fb03 f901 	mul.w	r9, r3, r1
 8022df4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022df8:	011b      	lsls	r3, r3, #4
 8022dfa:	b289      	uxth	r1, r1
 8022dfc:	78b7      	ldrb	r7, [r6, #2]
 8022dfe:	f89c a002 	ldrb.w	sl, [ip, #2]
 8022e02:	f89c c001 	ldrb.w	ip, [ip, #1]
 8022e06:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8022e0a:	eba3 0309 	sub.w	r3, r3, r9
 8022e0e:	b29b      	uxth	r3, r3
 8022e10:	ebae 0e01 	sub.w	lr, lr, r1
 8022e14:	fa1f fe8e 	uxth.w	lr, lr
 8022e18:	435f      	muls	r7, r3
 8022e1a:	fb0e 770a 	mla	r7, lr, sl, r7
 8022e1e:	f892 a002 	ldrb.w	sl, [r2, #2]
 8022e22:	fb01 770a 	mla	r7, r1, sl, r7
 8022e26:	f890 a002 	ldrb.w	sl, [r0, #2]
 8022e2a:	fb09 7a0a 	mla	sl, r9, sl, r7
 8022e2e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8022e32:	f896 8000 	ldrb.w	r8, [r6]
 8022e36:	7876      	ldrb	r6, [r6, #1]
 8022e38:	fb03 f808 	mul.w	r8, r3, r8
 8022e3c:	fb0e 8807 	mla	r8, lr, r7, r8
 8022e40:	7817      	ldrb	r7, [r2, #0]
 8022e42:	fb01 8807 	mla	r8, r1, r7, r8
 8022e46:	7807      	ldrb	r7, [r0, #0]
 8022e48:	fb09 8707 	mla	r7, r9, r7, r8
 8022e4c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8022e50:	4373      	muls	r3, r6
 8022e52:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022e56:	7856      	ldrb	r6, [r2, #1]
 8022e58:	ea47 070a 	orr.w	r7, r7, sl
 8022e5c:	fb0e 330c 	mla	r3, lr, ip, r3
 8022e60:	f890 a001 	ldrb.w	sl, [r0, #1]
 8022e64:	fb01 3306 	mla	r3, r1, r6, r3
 8022e68:	fb09 3a0a 	mla	sl, r9, sl, r3
 8022e6c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022e70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022e72:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8022e76:	ea47 070a 	orr.w	r7, r7, sl
 8022e7a:	f823 7b02 	strh.w	r7, [r3], #2
 8022e7e:	930b      	str	r3, [sp, #44]	; 0x2c
 8022e80:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8022e82:	449b      	add	fp, r3
 8022e84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e86:	441d      	add	r5, r3
 8022e88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022e8a:	3b01      	subs	r3, #1
 8022e8c:	9309      	str	r3, [sp, #36]	; 0x24
 8022e8e:	e714      	b.n	8022cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8022e90:	b149      	cbz	r1, 8022ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8022e92:	5cba      	ldrb	r2, [r7, r2]
 8022e94:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022e98:	4422      	add	r2, r4
 8022e9a:	4660      	mov	r0, ip
 8022e9c:	4666      	mov	r6, ip
 8022e9e:	e7a5      	b.n	8022dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022ea0:	4660      	mov	r0, ip
 8022ea2:	4662      	mov	r2, ip
 8022ea4:	e7a2      	b.n	8022dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022ea6:	4660      	mov	r0, ip
 8022ea8:	4662      	mov	r2, ip
 8022eaa:	e7f7      	b.n	8022e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8022eac:	b00f      	add	sp, #60	; 0x3c
 8022eae:	ecbd 8b08 	vpop	{d8-d11}
 8022eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08022eb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8022eb8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ebc:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 8022ec0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8022ec4:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8022ec8:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8022ecc:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 8022ed0:	fb04 560c 	mla	r6, r4, ip, r5
 8022ed4:	2c00      	cmp	r4, #0
 8022ed6:	eb02 0e06 	add.w	lr, r2, r6
 8022eda:	db3d      	blt.n	8022f58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8022edc:	45a0      	cmp	r8, r4
 8022ede:	dd3b      	ble.n	8022f58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8022ee0:	2d00      	cmp	r5, #0
 8022ee2:	db37      	blt.n	8022f54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8022ee4:	45ac      	cmp	ip, r5
 8022ee6:	dd35      	ble.n	8022f54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8022ee8:	5d92      	ldrb	r2, [r2, r6]
 8022eea:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8022eee:	1c6e      	adds	r6, r5, #1
 8022ef0:	d435      	bmi.n	8022f5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8022ef2:	45b4      	cmp	ip, r6
 8022ef4:	dd33      	ble.n	8022f5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8022ef6:	b3a0      	cbz	r0, 8022f62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 8022ef8:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8022efc:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8022f00:	3401      	adds	r4, #1
 8022f02:	d432      	bmi.n	8022f6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8022f04:	45a0      	cmp	r8, r4
 8022f06:	dd30      	ble.n	8022f6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8022f08:	b397      	cbz	r7, 8022f70 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 8022f0a:	2d00      	cmp	r5, #0
 8022f0c:	db2b      	blt.n	8022f66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8022f0e:	45ac      	cmp	ip, r5
 8022f10:	dd29      	ble.n	8022f66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8022f12:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8022f16:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8022f1a:	3501      	adds	r5, #1
 8022f1c:	d42b      	bmi.n	8022f76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8022f1e:	45ac      	cmp	ip, r5
 8022f20:	dd29      	ble.n	8022f76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8022f22:	b350      	cbz	r0, 8022f7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8022f24:	44f4      	add	ip, lr
 8022f26:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8022f2a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8022f2e:	280f      	cmp	r0, #15
 8022f30:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8022f34:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8022f38:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022f3c:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8022f40:	d801      	bhi.n	8022f46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 8022f42:	2f0f      	cmp	r7, #15
 8022f44:	d91b      	bls.n	8022f7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 8022f46:	4b8d      	ldr	r3, [pc, #564]	; (802317c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8022f48:	4a8d      	ldr	r2, [pc, #564]	; (8023180 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8022f4a:	488e      	ldr	r0, [pc, #568]	; (8023184 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8022f4c:	f240 11f9 	movw	r1, #505	; 0x1f9
 8022f50:	f009 f838 	bl	802bfc4 <__assert_func>
 8022f54:	2200      	movs	r2, #0
 8022f56:	e7ca      	b.n	8022eee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 8022f58:	2600      	movs	r6, #0
 8022f5a:	4632      	mov	r2, r6
 8022f5c:	e7d0      	b.n	8022f00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8022f5e:	2600      	movs	r6, #0
 8022f60:	e7ce      	b.n	8022f00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8022f62:	4606      	mov	r6, r0
 8022f64:	e7cc      	b.n	8022f00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8022f66:	2400      	movs	r4, #0
 8022f68:	e7d7      	b.n	8022f1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 8022f6a:	2300      	movs	r3, #0
 8022f6c:	461c      	mov	r4, r3
 8022f6e:	e7de      	b.n	8022f2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8022f70:	463b      	mov	r3, r7
 8022f72:	463c      	mov	r4, r7
 8022f74:	e7db      	b.n	8022f2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8022f76:	2300      	movs	r3, #0
 8022f78:	e7d9      	b.n	8022f2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8022f7a:	4603      	mov	r3, r0
 8022f7c:	e7d7      	b.n	8022f2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8022f7e:	b280      	uxth	r0, r0
 8022f80:	b2bf      	uxth	r7, r7
 8022f82:	fb07 fe00 	mul.w	lr, r7, r0
 8022f86:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8022f8a:	0100      	lsls	r0, r0, #4
 8022f8c:	eba0 0c0e 	sub.w	ip, r0, lr
 8022f90:	b2bf      	uxth	r7, r7
 8022f92:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8022f96:	fa1f fc8c 	uxth.w	ip, ip
 8022f9a:	1bed      	subs	r5, r5, r7
 8022f9c:	b2ad      	uxth	r5, r5
 8022f9e:	fb0a f00c 	mul.w	r0, sl, ip
 8022fa2:	fb0b 0005 	mla	r0, fp, r5, r0
 8022fa6:	fb07 0009 	mla	r0, r7, r9, r0
 8022faa:	fb0e 0008 	mla	r0, lr, r8, r0
 8022fae:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8022fb2:	9001      	str	r0, [sp, #4]
 8022fb4:	2800      	cmp	r0, #0
 8022fb6:	f000 80de 	beq.w	8023176 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 8022fba:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8022fbe:	d018      	beq.n	8022ff2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 8022fc0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8022fc4:	fb0b f000 	mul.w	r0, fp, r0
 8022fc8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022fcc:	fb0b fb02 	mul.w	fp, fp, r2
 8022fd0:	0a02      	lsrs	r2, r0, #8
 8022fd2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022fd6:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8022fda:	4402      	add	r2, r0
 8022fdc:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8022fe0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8022fe4:	0a12      	lsrs	r2, r2, #8
 8022fe6:	0a00      	lsrs	r0, r0, #8
 8022fe8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022fec:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8022ff0:	4302      	orrs	r2, r0
 8022ff2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8022ff6:	d01a      	beq.n	802302e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 8022ff8:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8022ffc:	fb0a f000 	mul.w	r0, sl, r0
 8023000:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8023004:	fb0a fa06 	mul.w	sl, sl, r6
 8023008:	0a06      	lsrs	r6, r0, #8
 802300a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 802300e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8023012:	4406      	add	r6, r0
 8023014:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8023018:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802301c:	0a36      	lsrs	r6, r6, #8
 802301e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023022:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8023026:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802302a:	ea46 060a 	orr.w	r6, r6, sl
 802302e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023032:	d01b      	beq.n	802306c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 8023034:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8023038:	fb09 fa0a 	mul.w	sl, r9, sl
 802303c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023040:	fb09 f004 	mul.w	r0, r9, r4
 8023044:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8023048:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802304c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023050:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8023054:	4454      	add	r4, sl
 8023056:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 802305a:	0a24      	lsrs	r4, r4, #8
 802305c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023060:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023064:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023068:	ea44 0409 	orr.w	r4, r4, r9
 802306c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023070:	d01b      	beq.n	80230aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 8023072:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8023076:	fb08 f909 	mul.w	r9, r8, r9
 802307a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802307e:	fb08 f003 	mul.w	r0, r8, r3
 8023082:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8023086:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802308a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 802308e:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8023092:	444b      	add	r3, r9
 8023094:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8023098:	0a1b      	lsrs	r3, r3, #8
 802309a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802309e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80230a2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80230a6:	ea43 0308 	orr.w	r3, r3, r8
 80230aa:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80230ae:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80230b2:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 80230b6:	fb0c f808 	mul.w	r8, ip, r8
 80230ba:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80230be:	fb0c f606 	mul.w	r6, ip, r6
 80230c2:	fb05 8909 	mla	r9, r5, r9, r8
 80230c6:	fb05 6502 	mla	r5, r5, r2, r6
 80230ca:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80230ce:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80230d2:	9a01      	ldr	r2, [sp, #4]
 80230d4:	8808      	ldrh	r0, [r1, #0]
 80230d6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80230da:	fb07 9908 	mla	r9, r7, r8, r9
 80230de:	fb07 5704 	mla	r7, r7, r4, r5
 80230e2:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80230e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80230ea:	b2b6      	uxth	r6, r6
 80230ec:	fb0e 9808 	mla	r8, lr, r8, r9
 80230f0:	fb0e 7e03 	mla	lr, lr, r3, r7
 80230f4:	4372      	muls	r2, r6
 80230f6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80230fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80230fe:	1c53      	adds	r3, r2, #1
 8023100:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8023104:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8023108:	ea48 0e0e 	orr.w	lr, r8, lr
 802310c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023110:	1205      	asrs	r5, r0, #8
 8023112:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8023116:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802311a:	b2db      	uxtb	r3, r3
 802311c:	fb12 f206 	smulbb	r2, r2, r6
 8023120:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023124:	fb05 2503 	mla	r5, r5, r3, r2
 8023128:	f3ce 2407 	ubfx	r4, lr, #8, #8
 802312c:	10c2      	asrs	r2, r0, #3
 802312e:	fa5f fe8e 	uxtb.w	lr, lr
 8023132:	00c0      	lsls	r0, r0, #3
 8023134:	fb14 f406 	smulbb	r4, r4, r6
 8023138:	b2c0      	uxtb	r0, r0
 802313a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802313e:	fb1e fe06 	smulbb	lr, lr, r6
 8023142:	fb02 4203 	mla	r2, r2, r3, r4
 8023146:	b2ad      	uxth	r5, r5
 8023148:	fb00 e303 	mla	r3, r0, r3, lr
 802314c:	b298      	uxth	r0, r3
 802314e:	b294      	uxth	r4, r2
 8023150:	1c6b      	adds	r3, r5, #1
 8023152:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023156:	1c62      	adds	r2, r4, #1
 8023158:	1c43      	adds	r3, r0, #1
 802315a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802315e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023162:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023166:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802316a:	0952      	lsrs	r2, r2, #5
 802316c:	432b      	orrs	r3, r5
 802316e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023172:	4313      	orrs	r3, r2
 8023174:	800b      	strh	r3, [r1, #0]
 8023176:	b003      	add	sp, #12
 8023178:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802317c:	08035bf7 	.word	0x08035bf7
 8023180:	08036126 	.word	0x08036126
 8023184:	08035bc4 	.word	0x08035bc4

08023188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802318c:	ed2d 8b08 	vpush	{d8-d11}
 8023190:	b09f      	sub	sp, #124	; 0x7c
 8023192:	eeb0 aa40 	vmov.f32	s20, s0
 8023196:	921b      	str	r2, [sp, #108]	; 0x6c
 8023198:	9309      	str	r3, [sp, #36]	; 0x24
 802319a:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 802319c:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 80231a0:	931c      	str	r3, [sp, #112]	; 0x70
 80231a2:	9119      	str	r1, [sp, #100]	; 0x64
 80231a4:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 80231a8:	901d      	str	r0, [sp, #116]	; 0x74
 80231aa:	6850      	ldr	r0, [r2, #4]
 80231ac:	6812      	ldr	r2, [r2, #0]
 80231ae:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 80231b0:	fb00 1303 	mla	r3, r0, r3, r1
 80231b4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80231b8:	930c      	str	r3, [sp, #48]	; 0x30
 80231ba:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80231bc:	681b      	ldr	r3, [r3, #0]
 80231be:	9312      	str	r3, [sp, #72]	; 0x48
 80231c0:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80231c2:	685e      	ldr	r6, [r3, #4]
 80231c4:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80231c8:	930d      	str	r3, [sp, #52]	; 0x34
 80231ca:	eef0 9a60 	vmov.f32	s19, s1
 80231ce:	eeb0 9a41 	vmov.f32	s18, s2
 80231d2:	eeb0 8a62 	vmov.f32	s16, s5
 80231d6:	eef0 8a43 	vmov.f32	s17, s6
 80231da:	eef0 ba44 	vmov.f32	s23, s8
 80231de:	eeb0 ba64 	vmov.f32	s22, s9
 80231e2:	eef0 aa45 	vmov.f32	s21, s10
 80231e6:	3604      	adds	r6, #4
 80231e8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80231ea:	2b00      	cmp	r3, #0
 80231ec:	dc03      	bgt.n	80231f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80231ee:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80231f0:	2b00      	cmp	r3, #0
 80231f2:	f340 8388 	ble.w	8023906 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80231f6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80231f8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80231fc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023200:	1e48      	subs	r0, r1, #1
 8023202:	1e57      	subs	r7, r2, #1
 8023204:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023206:	2b00      	cmp	r3, #0
 8023208:	f340 8195 	ble.w	8023536 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802320c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 802320e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023212:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023216:	d406      	bmi.n	8023226 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023218:	4584      	cmp	ip, r0
 802321a:	da04      	bge.n	8023226 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802321c:	2b00      	cmp	r3, #0
 802321e:	db02      	blt.n	8023226 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023220:	42bb      	cmp	r3, r7
 8023222:	f2c0 8189 	blt.w	8023538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8023226:	f11c 0c01 	adds.w	ip, ip, #1
 802322a:	f100 8177 	bmi.w	802351c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802322e:	4561      	cmp	r1, ip
 8023230:	f2c0 8174 	blt.w	802351c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8023234:	3301      	adds	r3, #1
 8023236:	f100 8171 	bmi.w	802351c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802323a:	429a      	cmp	r2, r3
 802323c:	f2c0 816e 	blt.w	802351c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8023240:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023242:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8023244:	931a      	str	r3, [sp, #104]	; 0x68
 8023246:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8023248:	2b00      	cmp	r3, #0
 802324a:	f340 8193 	ble.w	8023574 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802324e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8023250:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023254:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8023256:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 802325a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 802325c:	141b      	asrs	r3, r3, #16
 802325e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8023262:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023266:	f100 81d6 	bmi.w	8023616 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802326a:	f100 38ff 	add.w	r8, r0, #4294967295
 802326e:	4543      	cmp	r3, r8
 8023270:	f280 81d1 	bge.w	8023616 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023274:	f1bc 0f00 	cmp.w	ip, #0
 8023278:	f2c0 81cd 	blt.w	8023616 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802327c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023280:	45c4      	cmp	ip, r8
 8023282:	f280 81c8 	bge.w	8023616 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023286:	b200      	sxth	r0, r0
 8023288:	fb0c 3300 	mla	r3, ip, r0, r3
 802328c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802328e:	eb04 0803 	add.w	r8, r4, r3
 8023292:	5ce3      	ldrb	r3, [r4, r3]
 8023294:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023298:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802329c:	2a00      	cmp	r2, #0
 802329e:	f000 81af 	beq.w	8023600 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 80232a2:	f898 c001 	ldrb.w	ip, [r8, #1]
 80232a6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80232aa:	940e      	str	r4, [sp, #56]	; 0x38
 80232ac:	0e24      	lsrs	r4, r4, #24
 80232ae:	9415      	str	r4, [sp, #84]	; 0x54
 80232b0:	b179      	cbz	r1, 80232d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80232b2:	eb08 0c00 	add.w	ip, r8, r0
 80232b6:	f818 0000 	ldrb.w	r0, [r8, r0]
 80232ba:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80232be:	900a      	str	r0, [sp, #40]	; 0x28
 80232c0:	0e00      	lsrs	r0, r0, #24
 80232c2:	9013      	str	r0, [sp, #76]	; 0x4c
 80232c4:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80232c8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80232cc:	900f      	str	r0, [sp, #60]	; 0x3c
 80232ce:	0e00      	lsrs	r0, r0, #24
 80232d0:	9016      	str	r0, [sp, #88]	; 0x58
 80232d2:	b292      	uxth	r2, r2
 80232d4:	b289      	uxth	r1, r1
 80232d6:	fb02 f901 	mul.w	r9, r2, r1
 80232da:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80232de:	0112      	lsls	r2, r2, #4
 80232e0:	eba2 0809 	sub.w	r8, r2, r9
 80232e4:	b289      	uxth	r1, r1
 80232e6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80232ea:	9815      	ldr	r0, [sp, #84]	; 0x54
 80232ec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80232ee:	fa1f f888 	uxth.w	r8, r8
 80232f2:	1a52      	subs	r2, r2, r1
 80232f4:	b292      	uxth	r2, r2
 80232f6:	fb08 f000 	mul.w	r0, r8, r0
 80232fa:	fb02 000e 	mla	r0, r2, lr, r0
 80232fe:	fb01 0004 	mla	r0, r1, r4, r0
 8023302:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8023304:	fb09 0004 	mla	r0, r9, r4, r0
 8023308:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802330c:	2800      	cmp	r0, #0
 802330e:	f000 80fa 	beq.w	8023506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023312:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023316:	d01b      	beq.n	8023350 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8023318:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802331c:	fb0e fa0a 	mul.w	sl, lr, sl
 8023320:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023324:	fb0e fe03 	mul.w	lr, lr, r3
 8023328:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802332c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023330:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023334:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023338:	4453      	add	r3, sl
 802333a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802333e:	0a1b      	lsrs	r3, r3, #8
 8023340:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023344:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023348:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802334c:	ea43 030c 	orr.w	r3, r3, ip
 8023350:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023352:	2cff      	cmp	r4, #255	; 0xff
 8023354:	d021      	beq.n	802339a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023356:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023358:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802335c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802335e:	fb04 fb0b 	mul.w	fp, r4, fp
 8023362:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023364:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023368:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802336a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802336e:	fb04 fa0a 	mul.w	sl, r4, sl
 8023372:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023376:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802337a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802337e:	44de      	add	lr, fp
 8023380:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023384:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023388:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802338c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023390:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023394:	ea4e 040a 	orr.w	r4, lr, sl
 8023398:	940e      	str	r4, [sp, #56]	; 0x38
 802339a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802339c:	2cff      	cmp	r4, #255	; 0xff
 802339e:	d021      	beq.n	80233e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 80233a0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80233a2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80233a6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80233a8:	fb04 fb0b 	mul.w	fp, r4, fp
 80233ac:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80233ae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80233b2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80233b4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80233b8:	fb04 fa0a 	mul.w	sl, r4, sl
 80233bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80233c0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80233c4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80233c8:	44de      	add	lr, fp
 80233ca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80233ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80233d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80233d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80233da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80233de:	ea4e 040a 	orr.w	r4, lr, sl
 80233e2:	940a      	str	r4, [sp, #40]	; 0x28
 80233e4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80233e6:	2cff      	cmp	r4, #255	; 0xff
 80233e8:	d021      	beq.n	802342e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80233ea:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80233ec:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80233f0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80233f2:	fb04 fb0b 	mul.w	fp, r4, fp
 80233f6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80233f8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80233fc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80233fe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023402:	fb04 fa0a 	mul.w	sl, r4, sl
 8023406:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802340a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802340e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023412:	44de      	add	lr, fp
 8023414:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023418:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802341c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023420:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023424:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023428:	ea4e 040a 	orr.w	r4, lr, sl
 802342c:	940f      	str	r4, [sp, #60]	; 0x3c
 802342e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023430:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023434:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023436:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802343a:	fb08 fc0c 	mul.w	ip, r8, ip
 802343e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023442:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023446:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023448:	fb01 cc0e 	mla	ip, r1, lr, ip
 802344c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023450:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023452:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023456:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802345a:	fb08 f80e 	mul.w	r8, r8, lr
 802345e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023462:	fb02 8303 	mla	r3, r2, r3, r8
 8023466:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023468:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802346a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802346e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023470:	fb01 330a 	mla	r3, r1, sl, r3
 8023474:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8023478:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802347a:	fb09 3901 	mla	r9, r9, r1, r3
 802347e:	4342      	muls	r2, r0
 8023480:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023484:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023488:	883b      	ldrh	r3, [r7, #0]
 802348a:	1c50      	adds	r0, r2, #1
 802348c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023490:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023494:	ea4c 0c09 	orr.w	ip, ip, r9
 8023498:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802349c:	1219      	asrs	r1, r3, #8
 802349e:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80234a2:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80234a6:	b2c0      	uxtb	r0, r0
 80234a8:	fb12 f204 	smulbb	r2, r2, r4
 80234ac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80234b0:	fb01 2100 	mla	r1, r1, r0, r2
 80234b4:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80234b8:	10da      	asrs	r2, r3, #3
 80234ba:	fa5f fc8c 	uxtb.w	ip, ip
 80234be:	00db      	lsls	r3, r3, #3
 80234c0:	fb1c fc04 	smulbb	ip, ip, r4
 80234c4:	b2db      	uxtb	r3, r3
 80234c6:	b289      	uxth	r1, r1
 80234c8:	fb03 c300 	mla	r3, r3, r0, ip
 80234cc:	fa1f fc83 	uxth.w	ip, r3
 80234d0:	1c4b      	adds	r3, r1, #1
 80234d2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80234d6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80234da:	fb1e fe04 	smulbb	lr, lr, r4
 80234de:	f10c 0301 	add.w	r3, ip, #1
 80234e2:	fb02 e200 	mla	r2, r2, r0, lr
 80234e6:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80234ea:	b292      	uxth	r2, r2
 80234ec:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80234f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80234f4:	430b      	orrs	r3, r1
 80234f6:	1c51      	adds	r1, r2, #1
 80234f8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80234fc:	0952      	lsrs	r2, r2, #5
 80234fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023502:	4313      	orrs	r3, r2
 8023504:	803b      	strh	r3, [r7, #0]
 8023506:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8023508:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 802350a:	441a      	add	r2, r3
 802350c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 802350e:	9231      	str	r2, [sp, #196]	; 0xc4
 8023510:	441d      	add	r5, r3
 8023512:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8023514:	3b01      	subs	r3, #1
 8023516:	3702      	adds	r7, #2
 8023518:	931a      	str	r3, [sp, #104]	; 0x68
 802351a:	e694      	b.n	8023246 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802351c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 802351e:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8023520:	441c      	add	r4, r3
 8023522:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023524:	9431      	str	r4, [sp, #196]	; 0xc4
 8023526:	441d      	add	r5, r3
 8023528:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802352a:	3b01      	subs	r3, #1
 802352c:	9309      	str	r3, [sp, #36]	; 0x24
 802352e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023530:	3302      	adds	r3, #2
 8023532:	930c      	str	r3, [sp, #48]	; 0x30
 8023534:	e666      	b.n	8023204 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023536:	d024      	beq.n	8023582 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8023538:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802353a:	9833      	ldr	r0, [sp, #204]	; 0xcc
 802353c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 802353e:	3b01      	subs	r3, #1
 8023540:	fb00 4003 	mla	r0, r0, r3, r4
 8023544:	1400      	asrs	r0, r0, #16
 8023546:	f53f ae7b 	bmi.w	8023240 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802354a:	3901      	subs	r1, #1
 802354c:	4288      	cmp	r0, r1
 802354e:	f6bf ae77 	bge.w	8023240 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8023552:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8023554:	fb01 5303 	mla	r3, r1, r3, r5
 8023558:	141b      	asrs	r3, r3, #16
 802355a:	f53f ae71 	bmi.w	8023240 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802355e:	3a01      	subs	r2, #1
 8023560:	4293      	cmp	r3, r2
 8023562:	f6bf ae6d 	bge.w	8023240 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8023566:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802356a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 802356e:	f1bb 0f00 	cmp.w	fp, #0
 8023572:	dc70      	bgt.n	8023656 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8023574:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023576:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802357a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802357c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023580:	930c      	str	r3, [sp, #48]	; 0x30
 8023582:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023584:	2b00      	cmp	r3, #0
 8023586:	f340 81be 	ble.w	8023906 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 802358a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802358e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023592:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8023596:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023598:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802359c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80235a0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80235a4:	eef0 6a48 	vmov.f32	s13, s16
 80235a8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80235ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235b0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80235b4:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 80235b8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80235bc:	eef0 6a68 	vmov.f32	s13, s17
 80235c0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80235c4:	ee18 2a10 	vmov	r2, s16
 80235c8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80235cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80235d0:	ee18 2a90 	vmov	r2, s17
 80235d4:	9333      	str	r3, [sp, #204]	; 0xcc
 80235d6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80235d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80235dc:	9334      	str	r3, [sp, #208]	; 0xd0
 80235de:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80235e0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80235e2:	3b01      	subs	r3, #1
 80235e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235e8:	9319      	str	r3, [sp, #100]	; 0x64
 80235ea:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80235ec:	bf08      	it	eq
 80235ee:	4613      	moveq	r3, r2
 80235f0:	ee16 5a90 	vmov	r5, s13
 80235f4:	9309      	str	r3, [sp, #36]	; 0x24
 80235f6:	eef0 8a67 	vmov.f32	s17, s15
 80235fa:	eeb0 8a47 	vmov.f32	s16, s14
 80235fe:	e5f3      	b.n	80231e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8023600:	2900      	cmp	r1, #0
 8023602:	f43f ae66 	beq.w	80232d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023606:	f818 0000 	ldrb.w	r0, [r8, r0]
 802360a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802360e:	900a      	str	r0, [sp, #40]	; 0x28
 8023610:	0e00      	lsrs	r0, r0, #24
 8023612:	9013      	str	r0, [sp, #76]	; 0x4c
 8023614:	e65d      	b.n	80232d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023616:	f113 0801 	adds.w	r8, r3, #1
 802361a:	f53f af74 	bmi.w	8023506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802361e:	4540      	cmp	r0, r8
 8023620:	f6ff af71 	blt.w	8023506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023624:	f11c 0801 	adds.w	r8, ip, #1
 8023628:	f53f af6d 	bmi.w	8023506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802362c:	45c6      	cmp	lr, r8
 802362e:	f6ff af6a 	blt.w	8023506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023632:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8023634:	9302      	str	r3, [sp, #8]
 8023636:	b200      	sxth	r0, r0
 8023638:	fa0f f38e 	sxth.w	r3, lr
 802363c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8023640:	e9cd c203 	strd	ip, r2, [sp, #12]
 8023644:	9301      	str	r3, [sp, #4]
 8023646:	9000      	str	r0, [sp, #0]
 8023648:	4633      	mov	r3, r6
 802364a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802364c:	981d      	ldr	r0, [sp, #116]	; 0x74
 802364e:	4639      	mov	r1, r7
 8023650:	f7ff fc32 	bl	8022eb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8023654:	e757      	b.n	8023506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023656:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8023658:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 802365a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802365e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8023660:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023664:	1427      	asrs	r7, r4, #16
 8023666:	142b      	asrs	r3, r5, #16
 8023668:	fb01 7303 	mla	r3, r1, r3, r7
 802366c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802366e:	18e7      	adds	r7, r4, r3
 8023670:	5ce3      	ldrb	r3, [r4, r3]
 8023672:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023676:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802367a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802367e:	2a00      	cmp	r2, #0
 8023680:	f000 8137 	beq.w	80238f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8023684:	f897 e001 	ldrb.w	lr, [r7, #1]
 8023688:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802368c:	9410      	str	r4, [sp, #64]	; 0x40
 802368e:	0e24      	lsrs	r4, r4, #24
 8023690:	9417      	str	r4, [sp, #92]	; 0x5c
 8023692:	b170      	cbz	r0, 80236b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8023694:	eb07 0e01 	add.w	lr, r7, r1
 8023698:	5c79      	ldrb	r1, [r7, r1]
 802369a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802369e:	910b      	str	r1, [sp, #44]	; 0x2c
 80236a0:	0e09      	lsrs	r1, r1, #24
 80236a2:	9114      	str	r1, [sp, #80]	; 0x50
 80236a4:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80236a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80236ac:	9111      	str	r1, [sp, #68]	; 0x44
 80236ae:	0e09      	lsrs	r1, r1, #24
 80236b0:	9118      	str	r1, [sp, #96]	; 0x60
 80236b2:	b292      	uxth	r2, r2
 80236b4:	b280      	uxth	r0, r0
 80236b6:	fb02 f800 	mul.w	r8, r2, r0
 80236ba:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80236be:	0112      	lsls	r2, r2, #4
 80236c0:	eba2 0e08 	sub.w	lr, r2, r8
 80236c4:	b280      	uxth	r0, r0
 80236c6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80236ca:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80236cc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80236ce:	fa1f fe8e 	uxth.w	lr, lr
 80236d2:	1a12      	subs	r2, r2, r0
 80236d4:	b292      	uxth	r2, r2
 80236d6:	fb0e f101 	mul.w	r1, lr, r1
 80236da:	fb02 110c 	mla	r1, r2, ip, r1
 80236de:	fb00 1104 	mla	r1, r0, r4, r1
 80236e2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80236e4:	fb08 1104 	mla	r1, r8, r4, r1
 80236e8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80236ec:	2900      	cmp	r1, #0
 80236ee:	f000 80f5 	beq.w	80238dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 80236f2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80236f6:	d019      	beq.n	802372c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80236f8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80236fc:	fb0c fa0a 	mul.w	sl, ip, sl
 8023700:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023704:	fb0c fc03 	mul.w	ip, ip, r3
 8023708:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802370c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023710:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023714:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023718:	4453      	add	r3, sl
 802371a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802371e:	0a1b      	lsrs	r3, r3, #8
 8023720:	0a3f      	lsrs	r7, r7, #8
 8023722:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023726:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802372a:	433b      	orrs	r3, r7
 802372c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802372e:	2cff      	cmp	r4, #255	; 0xff
 8023730:	d020      	beq.n	8023774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023732:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023734:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023738:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802373a:	4367      	muls	r7, r4
 802373c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802373e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023742:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8023744:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023748:	fb04 fa0a 	mul.w	sl, r4, sl
 802374c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023750:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023754:	44bc      	add	ip, r7
 8023756:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802375a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802375e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023762:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023766:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802376a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802376e:	ea4c 040a 	orr.w	r4, ip, sl
 8023772:	9410      	str	r4, [sp, #64]	; 0x40
 8023774:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023776:	2cff      	cmp	r4, #255	; 0xff
 8023778:	d020      	beq.n	80237bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802377a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802377c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023780:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023782:	4367      	muls	r7, r4
 8023784:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023786:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802378a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802378c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023790:	fb04 fa0a 	mul.w	sl, r4, sl
 8023794:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023798:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802379c:	44bc      	add	ip, r7
 802379e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80237a2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80237a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80237aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80237ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80237b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80237b6:	ea4c 040a 	orr.w	r4, ip, sl
 80237ba:	940b      	str	r4, [sp, #44]	; 0x2c
 80237bc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80237be:	2cff      	cmp	r4, #255	; 0xff
 80237c0:	d020      	beq.n	8023804 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 80237c2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80237c4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80237c8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80237ca:	4367      	muls	r7, r4
 80237cc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80237ce:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80237d2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80237d4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80237d8:	fb04 fa0a 	mul.w	sl, r4, sl
 80237dc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80237e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80237e4:	44bc      	add	ip, r7
 80237e6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80237ea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80237ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80237f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80237f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80237fa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80237fe:	ea4c 040a 	orr.w	r4, ip, sl
 8023802:	9411      	str	r4, [sp, #68]	; 0x44
 8023804:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023806:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802380a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802380c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023810:	fb0e f707 	mul.w	r7, lr, r7
 8023814:	fb02 770c 	mla	r7, r2, ip, r7
 8023818:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802381c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802381e:	fb00 770c 	mla	r7, r0, ip, r7
 8023822:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023826:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023828:	fb08 770c 	mla	r7, r8, ip, r7
 802382c:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8023830:	fb0e fe0c 	mul.w	lr, lr, ip
 8023834:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023838:	fb02 e303 	mla	r3, r2, r3, lr
 802383c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802383e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023840:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023844:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8023846:	fb00 330a 	mla	r3, r0, sl, r3
 802384a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802384e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023852:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023854:	f8b9 0000 	ldrh.w	r0, [r9]
 8023858:	434b      	muls	r3, r1
 802385a:	0a3f      	lsrs	r7, r7, #8
 802385c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023860:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023864:	1c59      	adds	r1, r3, #1
 8023866:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802386a:	ea47 070c 	orr.w	r7, r7, ip
 802386e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023872:	1202      	asrs	r2, r0, #8
 8023874:	0c3b      	lsrs	r3, r7, #16
 8023876:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802387a:	b2c9      	uxtb	r1, r1
 802387c:	fb13 f304 	smulbb	r3, r3, r4
 8023880:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023884:	fb02 3201 	mla	r2, r2, r1, r3
 8023888:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802388c:	10c3      	asrs	r3, r0, #3
 802388e:	b2ff      	uxtb	r7, r7
 8023890:	00c0      	lsls	r0, r0, #3
 8023892:	b292      	uxth	r2, r2
 8023894:	fb1c fc04 	smulbb	ip, ip, r4
 8023898:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802389c:	b2c0      	uxtb	r0, r0
 802389e:	fb17 f704 	smulbb	r7, r7, r4
 80238a2:	fb03 c301 	mla	r3, r3, r1, ip
 80238a6:	fb00 7001 	mla	r0, r0, r1, r7
 80238aa:	f102 0c01 	add.w	ip, r2, #1
 80238ae:	b280      	uxth	r0, r0
 80238b0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80238b4:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80238b8:	1c42      	adds	r2, r0, #1
 80238ba:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80238be:	b29b      	uxth	r3, r3
 80238c0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80238c4:	ea42 020c 	orr.w	r2, r2, ip
 80238c8:	f103 0c01 	add.w	ip, r3, #1
 80238cc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80238d0:	095b      	lsrs	r3, r3, #5
 80238d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80238d6:	431a      	orrs	r2, r3
 80238d8:	f8a9 2000 	strh.w	r2, [r9]
 80238dc:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80238de:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80238e0:	441a      	add	r2, r3
 80238e2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80238e4:	9231      	str	r2, [sp, #196]	; 0xc4
 80238e6:	f109 0902 	add.w	r9, r9, #2
 80238ea:	441d      	add	r5, r3
 80238ec:	f10b 3bff 	add.w	fp, fp, #4294967295
 80238f0:	e63d      	b.n	802356e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80238f2:	2800      	cmp	r0, #0
 80238f4:	f43f aedd 	beq.w	80236b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80238f8:	5c79      	ldrb	r1, [r7, r1]
 80238fa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80238fe:	910b      	str	r1, [sp, #44]	; 0x2c
 8023900:	0e09      	lsrs	r1, r1, #24
 8023902:	9114      	str	r1, [sp, #80]	; 0x50
 8023904:	e6d5      	b.n	80236b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8023906:	b01f      	add	sp, #124	; 0x7c
 8023908:	ecbd 8b08 	vpop	{d8-d11}
 802390c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023910 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8023910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023914:	880e      	ldrh	r6, [r1, #0]
 8023916:	b085      	sub	sp, #20
 8023918:	ea4f 2826 	mov.w	r8, r6, asr #8
 802391c:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8023920:	4691      	mov	r9, r2
 8023922:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8023926:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 802392a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802392e:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8023932:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8023936:	ea4f 08e6 	mov.w	r8, r6, asr #3
 802393a:	9200      	str	r2, [sp, #0]
 802393c:	00f6      	lsls	r6, r6, #3
 802393e:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8023942:	9201      	str	r2, [sp, #4]
 8023944:	2c00      	cmp	r4, #0
 8023946:	b2f2      	uxtb	r2, r6
 8023948:	fb04 560c 	mla	r6, r4, ip, r5
 802394c:	9202      	str	r2, [sp, #8]
 802394e:	eb09 0806 	add.w	r8, r9, r6
 8023952:	db3f      	blt.n	80239d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8023954:	45a6      	cmp	lr, r4
 8023956:	dd3d      	ble.n	80239d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8023958:	2d00      	cmp	r5, #0
 802395a:	db39      	blt.n	80239d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 802395c:	45ac      	cmp	ip, r5
 802395e:	dd37      	ble.n	80239d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8023960:	f819 2006 	ldrb.w	r2, [r9, r6]
 8023964:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8023968:	1c6e      	adds	r6, r5, #1
 802396a:	d436      	bmi.n	80239da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 802396c:	45b4      	cmp	ip, r6
 802396e:	dd34      	ble.n	80239da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8023970:	b3a8      	cbz	r0, 80239de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8023972:	f898 6001 	ldrb.w	r6, [r8, #1]
 8023976:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 802397a:	3401      	adds	r4, #1
 802397c:	d433      	bmi.n	80239e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 802397e:	45a6      	cmp	lr, r4
 8023980:	dd31      	ble.n	80239e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8023982:	b39f      	cbz	r7, 80239ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8023984:	2d00      	cmp	r5, #0
 8023986:	eb08 0e0c 	add.w	lr, r8, ip
 802398a:	db2a      	blt.n	80239e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 802398c:	45ac      	cmp	ip, r5
 802398e:	dd28      	ble.n	80239e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8023990:	f818 400c 	ldrb.w	r4, [r8, ip]
 8023994:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8023998:	3501      	adds	r5, #1
 802399a:	d42a      	bmi.n	80239f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 802399c:	45ac      	cmp	ip, r5
 802399e:	dd28      	ble.n	80239f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 80239a0:	b348      	cbz	r0, 80239f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 80239a2:	f89e 5001 	ldrb.w	r5, [lr, #1]
 80239a6:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80239aa:	280f      	cmp	r0, #15
 80239ac:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80239b0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80239b4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80239b8:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80239bc:	d801      	bhi.n	80239c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 80239be:	2f0f      	cmp	r7, #15
 80239c0:	d91b      	bls.n	80239fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 80239c2:	4b7d      	ldr	r3, [pc, #500]	; (8023bb8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 80239c4:	4a7d      	ldr	r2, [pc, #500]	; (8023bbc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 80239c6:	487e      	ldr	r0, [pc, #504]	; (8023bc0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 80239c8:	f240 11f9 	movw	r1, #505	; 0x1f9
 80239cc:	f008 fafa 	bl	802bfc4 <__assert_func>
 80239d0:	2200      	movs	r2, #0
 80239d2:	e7c9      	b.n	8023968 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 80239d4:	2600      	movs	r6, #0
 80239d6:	4632      	mov	r2, r6
 80239d8:	e7cf      	b.n	802397a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80239da:	2600      	movs	r6, #0
 80239dc:	e7cd      	b.n	802397a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80239de:	4606      	mov	r6, r0
 80239e0:	e7cb      	b.n	802397a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80239e2:	2400      	movs	r4, #0
 80239e4:	e7d8      	b.n	8023998 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 80239e6:	2300      	movs	r3, #0
 80239e8:	461c      	mov	r4, r3
 80239ea:	e7de      	b.n	80239aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80239ec:	463b      	mov	r3, r7
 80239ee:	463c      	mov	r4, r7
 80239f0:	e7db      	b.n	80239aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80239f2:	2300      	movs	r3, #0
 80239f4:	e7d9      	b.n	80239aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80239f6:	4603      	mov	r3, r0
 80239f8:	e7d7      	b.n	80239aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80239fa:	b280      	uxth	r0, r0
 80239fc:	b2bf      	uxth	r7, r7
 80239fe:	fb00 fe07 	mul.w	lr, r0, r7
 8023a02:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8023a06:	0100      	lsls	r0, r0, #4
 8023a08:	eba0 0c0e 	sub.w	ip, r0, lr
 8023a0c:	b2bf      	uxth	r7, r7
 8023a0e:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8023a12:	fa1f fc8c 	uxth.w	ip, ip
 8023a16:	1bed      	subs	r5, r5, r7
 8023a18:	b2ad      	uxth	r5, r5
 8023a1a:	fb0c f00a 	mul.w	r0, ip, sl
 8023a1e:	fb05 000b 	mla	r0, r5, fp, r0
 8023a22:	fb07 0009 	mla	r0, r7, r9, r0
 8023a26:	fb0e 0008 	mla	r0, lr, r8, r0
 8023a2a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023a2e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8023a32:	9003      	str	r0, [sp, #12]
 8023a34:	d018      	beq.n	8023a68 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8023a36:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8023a3a:	fb0b f000 	mul.w	r0, fp, r0
 8023a3e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023a42:	fb0b fb02 	mul.w	fp, fp, r2
 8023a46:	0a02      	lsrs	r2, r0, #8
 8023a48:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023a4c:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8023a50:	4402      	add	r2, r0
 8023a52:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8023a56:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8023a5a:	0a12      	lsrs	r2, r2, #8
 8023a5c:	0a00      	lsrs	r0, r0, #8
 8023a5e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023a62:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8023a66:	4302      	orrs	r2, r0
 8023a68:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8023a6c:	d019      	beq.n	8023aa2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8023a6e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8023a72:	fb0a fb0b 	mul.w	fp, sl, fp
 8023a76:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8023a7a:	fb0a fa06 	mul.w	sl, sl, r6
 8023a7e:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8023a82:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8023a86:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023a8a:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8023a8e:	445e      	add	r6, fp
 8023a90:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023a94:	0a36      	lsrs	r6, r6, #8
 8023a96:	0a00      	lsrs	r0, r0, #8
 8023a98:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8023a9c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8023aa0:	4306      	orrs	r6, r0
 8023aa2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023aa6:	d019      	beq.n	8023adc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8023aa8:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8023aac:	fb09 fa0a 	mul.w	sl, r9, sl
 8023ab0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023ab4:	fb09 f904 	mul.w	r9, r9, r4
 8023ab8:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8023abc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023ac0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023ac4:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8023ac8:	4454      	add	r4, sl
 8023aca:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8023ace:	0a24      	lsrs	r4, r4, #8
 8023ad0:	0a00      	lsrs	r0, r0, #8
 8023ad2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023ad6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8023ada:	4304      	orrs	r4, r0
 8023adc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023ae0:	d019      	beq.n	8023b16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8023ae2:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8023ae6:	fb08 f909 	mul.w	r9, r8, r9
 8023aea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023aee:	fb08 f803 	mul.w	r8, r8, r3
 8023af2:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8023af6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023afa:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8023afe:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8023b02:	444b      	add	r3, r9
 8023b04:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023b08:	0a1b      	lsrs	r3, r3, #8
 8023b0a:	0a00      	lsrs	r0, r0, #8
 8023b0c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023b10:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8023b14:	4303      	orrs	r3, r0
 8023b16:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8023b1a:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8023b1e:	fb0c f808 	mul.w	r8, ip, r8
 8023b22:	fb05 8800 	mla	r8, r5, r0, r8
 8023b26:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8023b2a:	fb07 8800 	mla	r8, r7, r0, r8
 8023b2e:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8023b32:	fb0e 8000 	mla	r0, lr, r0, r8
 8023b36:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8023b3a:	fb0c f606 	mul.w	r6, ip, r6
 8023b3e:	0a00      	lsrs	r0, r0, #8
 8023b40:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023b44:	fb05 6202 	mla	r2, r5, r2, r6
 8023b48:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8023b4c:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8023b50:	fb07 2700 	mla	r7, r7, r0, r2
 8023b54:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8023b58:	9b03      	ldr	r3, [sp, #12]
 8023b5a:	9d00      	ldr	r5, [sp, #0]
 8023b5c:	9a02      	ldr	r2, [sp, #8]
 8023b5e:	fb0e 7000 	mla	r0, lr, r0, r7
 8023b62:	43dc      	mvns	r4, r3
 8023b64:	9b01      	ldr	r3, [sp, #4]
 8023b66:	b2e4      	uxtb	r4, r4
 8023b68:	0a00      	lsrs	r0, r0, #8
 8023b6a:	4363      	muls	r3, r4
 8023b6c:	4365      	muls	r5, r4
 8023b6e:	4362      	muls	r2, r4
 8023b70:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8023b74:	ea48 0000 	orr.w	r0, r8, r0
 8023b78:	4614      	mov	r4, r2
 8023b7a:	1c5e      	adds	r6, r3, #1
 8023b7c:	1c6a      	adds	r2, r5, #1
 8023b7e:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8023b82:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8023b86:	0a03      	lsrs	r3, r0, #8
 8023b88:	0c02      	lsrs	r2, r0, #16
 8023b8a:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8023b8e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8023b92:	00db      	lsls	r3, r3, #3
 8023b94:	0212      	lsls	r2, r2, #8
 8023b96:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023b9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023b9e:	4313      	orrs	r3, r2
 8023ba0:	1c62      	adds	r2, r4, #1
 8023ba2:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8023ba6:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8023baa:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8023bae:	4318      	orrs	r0, r3
 8023bb0:	8008      	strh	r0, [r1, #0]
 8023bb2:	b005      	add	sp, #20
 8023bb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023bb8:	08035bf7 	.word	0x08035bf7
 8023bbc:	08036126 	.word	0x08036126
 8023bc0:	08035bc4 	.word	0x08035bc4

08023bc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023bc8:	ed2d 8b08 	vpush	{d8-d11}
 8023bcc:	b09b      	sub	sp, #108	; 0x6c
 8023bce:	eeb0 aa40 	vmov.f32	s20, s0
 8023bd2:	9218      	str	r2, [sp, #96]	; 0x60
 8023bd4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8023bd6:	9116      	str	r1, [sp, #88]	; 0x58
 8023bd8:	9307      	str	r3, [sp, #28]
 8023bda:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8023bde:	9019      	str	r0, [sp, #100]	; 0x64
 8023be0:	6850      	ldr	r0, [r2, #4]
 8023be2:	6812      	ldr	r2, [r2, #0]
 8023be4:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8023be6:	fb00 1303 	mla	r3, r0, r3, r1
 8023bea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023bee:	930a      	str	r3, [sp, #40]	; 0x28
 8023bf0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023bf2:	681b      	ldr	r3, [r3, #0]
 8023bf4:	930f      	str	r3, [sp, #60]	; 0x3c
 8023bf6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023bf8:	685e      	ldr	r6, [r3, #4]
 8023bfa:	eef0 9a60 	vmov.f32	s19, s1
 8023bfe:	eeb0 9a41 	vmov.f32	s18, s2
 8023c02:	eeb0 8a62 	vmov.f32	s16, s5
 8023c06:	eef0 8a43 	vmov.f32	s17, s6
 8023c0a:	eef0 ba44 	vmov.f32	s23, s8
 8023c0e:	eeb0 ba64 	vmov.f32	s22, s9
 8023c12:	eef0 aa45 	vmov.f32	s21, s10
 8023c16:	3604      	adds	r6, #4
 8023c18:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023c1a:	2b00      	cmp	r3, #0
 8023c1c:	dc03      	bgt.n	8023c26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8023c1e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023c20:	2b00      	cmp	r3, #0
 8023c22:	f340 8373 	ble.w	802430c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8023c26:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023c28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023c2c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023c30:	1e48      	subs	r0, r1, #1
 8023c32:	1e57      	subs	r7, r2, #1
 8023c34:	9b07      	ldr	r3, [sp, #28]
 8023c36:	2b00      	cmp	r3, #0
 8023c38:	f340 8190 	ble.w	8023f5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8023c3c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8023c3e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023c42:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023c46:	d406      	bmi.n	8023c56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023c48:	4584      	cmp	ip, r0
 8023c4a:	da04      	bge.n	8023c56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023c4c:	2b00      	cmp	r3, #0
 8023c4e:	db02      	blt.n	8023c56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023c50:	42bb      	cmp	r3, r7
 8023c52:	f2c0 8184 	blt.w	8023f5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8023c56:	f11c 0c01 	adds.w	ip, ip, #1
 8023c5a:	f100 8172 	bmi.w	8023f42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023c5e:	4561      	cmp	r1, ip
 8023c60:	f2c0 816f 	blt.w	8023f42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023c64:	3301      	adds	r3, #1
 8023c66:	f100 816c 	bmi.w	8023f42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023c6a:	429a      	cmp	r2, r3
 8023c6c:	f2c0 8169 	blt.w	8023f42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023c70:	9b07      	ldr	r3, [sp, #28]
 8023c72:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023c74:	9317      	str	r3, [sp, #92]	; 0x5c
 8023c76:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023c78:	2b00      	cmp	r3, #0
 8023c7a:	f340 818e 	ble.w	8023f9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8023c7e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8023c80:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023c84:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023c86:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8023c8a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8023c8c:	141b      	asrs	r3, r3, #16
 8023c8e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8023c92:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8023c96:	f100 81d1 	bmi.w	802403c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8023c9a:	f101 38ff 	add.w	r8, r1, #4294967295
 8023c9e:	4543      	cmp	r3, r8
 8023ca0:	f280 81cc 	bge.w	802403c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8023ca4:	f1bc 0f00 	cmp.w	ip, #0
 8023ca8:	f2c0 81c8 	blt.w	802403c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8023cac:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023cb0:	45c4      	cmp	ip, r8
 8023cb2:	f280 81c3 	bge.w	802403c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8023cb6:	b209      	sxth	r1, r1
 8023cb8:	fb0c 3301 	mla	r3, ip, r1, r3
 8023cbc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023cbe:	eb04 0803 	add.w	r8, r4, r3
 8023cc2:	5ce3      	ldrb	r3, [r4, r3]
 8023cc4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023cc8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8023ccc:	2a00      	cmp	r2, #0
 8023cce:	f000 81aa 	beq.w	8024026 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8023cd2:	f898 c001 	ldrb.w	ip, [r8, #1]
 8023cd6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8023cda:	940b      	str	r4, [sp, #44]	; 0x2c
 8023cdc:	0e24      	lsrs	r4, r4, #24
 8023cde:	9412      	str	r4, [sp, #72]	; 0x48
 8023ce0:	b178      	cbz	r0, 8023d02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8023ce2:	eb08 0c01 	add.w	ip, r8, r1
 8023ce6:	f818 1001 	ldrb.w	r1, [r8, r1]
 8023cea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023cee:	9108      	str	r1, [sp, #32]
 8023cf0:	0e09      	lsrs	r1, r1, #24
 8023cf2:	9110      	str	r1, [sp, #64]	; 0x40
 8023cf4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8023cf8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023cfc:	910c      	str	r1, [sp, #48]	; 0x30
 8023cfe:	0e09      	lsrs	r1, r1, #24
 8023d00:	9113      	str	r1, [sp, #76]	; 0x4c
 8023d02:	b292      	uxth	r2, r2
 8023d04:	b280      	uxth	r0, r0
 8023d06:	fb02 f900 	mul.w	r9, r2, r0
 8023d0a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023d0e:	0112      	lsls	r2, r2, #4
 8023d10:	eba2 0809 	sub.w	r8, r2, r9
 8023d14:	b280      	uxth	r0, r0
 8023d16:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023d1a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023d1c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023d1e:	fa1f f888 	uxth.w	r8, r8
 8023d22:	1a12      	subs	r2, r2, r0
 8023d24:	b292      	uxth	r2, r2
 8023d26:	fb08 f101 	mul.w	r1, r8, r1
 8023d2a:	fb02 110e 	mla	r1, r2, lr, r1
 8023d2e:	fb00 1104 	mla	r1, r0, r4, r1
 8023d32:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023d34:	fb09 1104 	mla	r1, r9, r4, r1
 8023d38:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023d3c:	2900      	cmp	r1, #0
 8023d3e:	f000 80f5 	beq.w	8023f2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023d42:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023d46:	d01b      	beq.n	8023d80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8023d48:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023d4c:	fb0e fa0a 	mul.w	sl, lr, sl
 8023d50:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023d54:	fb0e fe03 	mul.w	lr, lr, r3
 8023d58:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023d5c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023d60:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023d64:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023d68:	4453      	add	r3, sl
 8023d6a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023d6e:	0a1b      	lsrs	r3, r3, #8
 8023d70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d74:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023d78:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023d7c:	ea43 030c 	orr.w	r3, r3, ip
 8023d80:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023d82:	2cff      	cmp	r4, #255	; 0xff
 8023d84:	d021      	beq.n	8023dca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8023d86:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023d88:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023d8c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023d8e:	fb04 fb0b 	mul.w	fp, r4, fp
 8023d92:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023d94:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023d98:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023d9a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023d9e:	fb04 fa0a 	mul.w	sl, r4, sl
 8023da2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023da6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023daa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023dae:	44de      	add	lr, fp
 8023db0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023db4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023db8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023dbc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023dc0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023dc4:	ea4e 040a 	orr.w	r4, lr, sl
 8023dc8:	940b      	str	r4, [sp, #44]	; 0x2c
 8023dca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023dcc:	2cff      	cmp	r4, #255	; 0xff
 8023dce:	d021      	beq.n	8023e14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8023dd0:	9c08      	ldr	r4, [sp, #32]
 8023dd2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023dd6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023dd8:	fb04 fb0b 	mul.w	fp, r4, fp
 8023ddc:	9c08      	ldr	r4, [sp, #32]
 8023dde:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023de2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023de4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023de8:	fb04 fa0a 	mul.w	sl, r4, sl
 8023dec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023df0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023df4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023df8:	44de      	add	lr, fp
 8023dfa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023dfe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e0a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e0e:	ea4e 040a 	orr.w	r4, lr, sl
 8023e12:	9408      	str	r4, [sp, #32]
 8023e14:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023e16:	2cff      	cmp	r4, #255	; 0xff
 8023e18:	d021      	beq.n	8023e5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8023e1a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023e1c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023e20:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023e22:	fb04 fb0b 	mul.w	fp, r4, fp
 8023e26:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023e28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023e2c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023e2e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023e32:	fb04 fa0a 	mul.w	sl, r4, sl
 8023e36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e3a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023e3e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023e42:	44de      	add	lr, fp
 8023e44:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023e48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e58:	ea4e 040a 	orr.w	r4, lr, sl
 8023e5c:	940c      	str	r4, [sp, #48]	; 0x30
 8023e5e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023e60:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023e64:	9c08      	ldr	r4, [sp, #32]
 8023e66:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8023e6a:	fb08 fc0c 	mul.w	ip, r8, ip
 8023e6e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023e72:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023e76:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023e78:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023e7c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023e80:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023e82:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023e86:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8023e8a:	fb08 f80e 	mul.w	r8, r8, lr
 8023e8e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023e92:	fb02 8303 	mla	r3, r2, r3, r8
 8023e96:	9a08      	ldr	r2, [sp, #32]
 8023e98:	f8b7 8000 	ldrh.w	r8, [r7]
 8023e9c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023ea0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023ea2:	fb00 330a 	mla	r3, r0, sl, r3
 8023ea6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8023eaa:	fb09 3900 	mla	r9, r9, r0, r3
 8023eae:	43c9      	mvns	r1, r1
 8023eb0:	ea4f 2228 	mov.w	r2, r8, asr #8
 8023eb4:	fa5f fe81 	uxtb.w	lr, r1
 8023eb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ebc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023ec0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023ec4:	fb02 f20e 	mul.w	r2, r2, lr
 8023ec8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023ecc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023ed0:	ea4c 0c09 	orr.w	ip, ip, r9
 8023ed4:	1c53      	adds	r3, r2, #1
 8023ed6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8023eda:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8023ede:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8023ee2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023ee6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023eea:	4a63      	ldr	r2, [pc, #396]	; (8024078 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8023eec:	fb00 f00e 	mul.w	r0, r0, lr
 8023ef0:	b2db      	uxtb	r3, r3
 8023ef2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8023ef6:	1c43      	adds	r3, r0, #1
 8023ef8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023efc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8023f00:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8023f04:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023f08:	b2c9      	uxtb	r1, r1
 8023f0a:	00db      	lsls	r3, r3, #3
 8023f0c:	fb01 f10e 	mul.w	r1, r1, lr
 8023f10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023f14:	4313      	orrs	r3, r2
 8023f16:	1c4a      	adds	r2, r1, #1
 8023f18:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023f1c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023f20:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023f24:	ea4c 0c03 	orr.w	ip, ip, r3
 8023f28:	f8a7 c000 	strh.w	ip, [r7]
 8023f2c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8023f2e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8023f30:	441a      	add	r2, r3
 8023f32:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f34:	922d      	str	r2, [sp, #180]	; 0xb4
 8023f36:	441d      	add	r5, r3
 8023f38:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023f3a:	3b01      	subs	r3, #1
 8023f3c:	3702      	adds	r7, #2
 8023f3e:	9317      	str	r3, [sp, #92]	; 0x5c
 8023f40:	e699      	b.n	8023c76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8023f42:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8023f44:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8023f46:	441c      	add	r4, r3
 8023f48:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f4a:	942d      	str	r4, [sp, #180]	; 0xb4
 8023f4c:	441d      	add	r5, r3
 8023f4e:	9b07      	ldr	r3, [sp, #28]
 8023f50:	3b01      	subs	r3, #1
 8023f52:	9307      	str	r3, [sp, #28]
 8023f54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023f56:	3302      	adds	r3, #2
 8023f58:	930a      	str	r3, [sp, #40]	; 0x28
 8023f5a:	e66b      	b.n	8023c34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023f5c:	d024      	beq.n	8023fa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8023f5e:	9b07      	ldr	r3, [sp, #28]
 8023f60:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8023f62:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8023f64:	3b01      	subs	r3, #1
 8023f66:	fb00 4003 	mla	r0, r0, r3, r4
 8023f6a:	1400      	asrs	r0, r0, #16
 8023f6c:	f53f ae80 	bmi.w	8023c70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8023f70:	3901      	subs	r1, #1
 8023f72:	4288      	cmp	r0, r1
 8023f74:	f6bf ae7c 	bge.w	8023c70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8023f78:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8023f7a:	fb01 5303 	mla	r3, r1, r3, r5
 8023f7e:	141b      	asrs	r3, r3, #16
 8023f80:	f53f ae76 	bmi.w	8023c70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8023f84:	3a01      	subs	r2, #1
 8023f86:	4293      	cmp	r3, r2
 8023f88:	f6bf ae72 	bge.w	8023c70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8023f8c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023f90:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023f94:	f1bb 0f00 	cmp.w	fp, #0
 8023f98:	dc70      	bgt.n	802407c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8023f9a:	9b07      	ldr	r3, [sp, #28]
 8023f9c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023fa0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023fa2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023fa6:	930a      	str	r3, [sp, #40]	; 0x28
 8023fa8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023faa:	2b00      	cmp	r3, #0
 8023fac:	f340 81ae 	ble.w	802430c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8023fb0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8023fb4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023fb8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8023fbc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023fbe:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8023fc2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8023fc6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8023fca:	eef0 6a48 	vmov.f32	s13, s16
 8023fce:	ee69 7a27 	vmul.f32	s15, s18, s15
 8023fd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023fd6:	ee37 8a48 	vsub.f32	s16, s14, s16
 8023fda:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8023fde:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8023fe2:	eef0 6a68 	vmov.f32	s13, s17
 8023fe6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8023fea:	ee18 2a10 	vmov	r2, s16
 8023fee:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8023ff2:	fb92 f3f3 	sdiv	r3, r2, r3
 8023ff6:	ee18 2a90 	vmov	r2, s17
 8023ffa:	932f      	str	r3, [sp, #188]	; 0xbc
 8023ffc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023ffe:	fb92 f3f3 	sdiv	r3, r2, r3
 8024002:	9330      	str	r3, [sp, #192]	; 0xc0
 8024004:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024006:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024008:	3b01      	subs	r3, #1
 802400a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802400e:	9316      	str	r3, [sp, #88]	; 0x58
 8024010:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024012:	bf08      	it	eq
 8024014:	4613      	moveq	r3, r2
 8024016:	ee16 5a90 	vmov	r5, s13
 802401a:	9307      	str	r3, [sp, #28]
 802401c:	eef0 8a67 	vmov.f32	s17, s15
 8024020:	eeb0 8a47 	vmov.f32	s16, s14
 8024024:	e5f8      	b.n	8023c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8024026:	2800      	cmp	r0, #0
 8024028:	f43f ae6b 	beq.w	8023d02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802402c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024030:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024034:	9108      	str	r1, [sp, #32]
 8024036:	0e09      	lsrs	r1, r1, #24
 8024038:	9110      	str	r1, [sp, #64]	; 0x40
 802403a:	e662      	b.n	8023d02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802403c:	f113 0801 	adds.w	r8, r3, #1
 8024040:	f53f af74 	bmi.w	8023f2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8024044:	4541      	cmp	r1, r8
 8024046:	f6ff af71 	blt.w	8023f2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802404a:	f11c 0801 	adds.w	r8, ip, #1
 802404e:	f53f af6d 	bmi.w	8023f2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8024052:	45c6      	cmp	lr, r8
 8024054:	f6ff af6a 	blt.w	8023f2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8024058:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 802405c:	b209      	sxth	r1, r1
 802405e:	fa0f f38e 	sxth.w	r3, lr
 8024062:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8024066:	9301      	str	r3, [sp, #4]
 8024068:	9100      	str	r1, [sp, #0]
 802406a:	4633      	mov	r3, r6
 802406c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802406e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024070:	4639      	mov	r1, r7
 8024072:	f7ff fc4d 	bl	8023910 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8024076:	e759      	b.n	8023f2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8024078:	fffff800 	.word	0xfffff800
 802407c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 802407e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8024080:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024084:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8024086:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802408a:	1427      	asrs	r7, r4, #16
 802408c:	142b      	asrs	r3, r5, #16
 802408e:	fb01 7303 	mla	r3, r1, r3, r7
 8024092:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024094:	18e7      	adds	r7, r4, r3
 8024096:	5ce3      	ldrb	r3, [r4, r3]
 8024098:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802409c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80240a0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80240a4:	2a00      	cmp	r2, #0
 80240a6:	f000 8127 	beq.w	80242f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80240aa:	f897 e001 	ldrb.w	lr, [r7, #1]
 80240ae:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80240b2:	940d      	str	r4, [sp, #52]	; 0x34
 80240b4:	0e24      	lsrs	r4, r4, #24
 80240b6:	9414      	str	r4, [sp, #80]	; 0x50
 80240b8:	b170      	cbz	r0, 80240d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80240ba:	eb07 0e01 	add.w	lr, r7, r1
 80240be:	5c79      	ldrb	r1, [r7, r1]
 80240c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80240c4:	9109      	str	r1, [sp, #36]	; 0x24
 80240c6:	0e09      	lsrs	r1, r1, #24
 80240c8:	9111      	str	r1, [sp, #68]	; 0x44
 80240ca:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80240ce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80240d2:	910e      	str	r1, [sp, #56]	; 0x38
 80240d4:	0e09      	lsrs	r1, r1, #24
 80240d6:	9115      	str	r1, [sp, #84]	; 0x54
 80240d8:	b292      	uxth	r2, r2
 80240da:	b280      	uxth	r0, r0
 80240dc:	fb02 f800 	mul.w	r8, r2, r0
 80240e0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80240e4:	0112      	lsls	r2, r2, #4
 80240e6:	eba2 0e08 	sub.w	lr, r2, r8
 80240ea:	b280      	uxth	r0, r0
 80240ec:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80240f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80240f2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80240f4:	fa1f fe8e 	uxth.w	lr, lr
 80240f8:	1a09      	subs	r1, r1, r0
 80240fa:	b289      	uxth	r1, r1
 80240fc:	fb0e f202 	mul.w	r2, lr, r2
 8024100:	fb01 220c 	mla	r2, r1, ip, r2
 8024104:	fb00 2204 	mla	r2, r0, r4, r2
 8024108:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802410a:	fb08 2204 	mla	r2, r8, r4, r2
 802410e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024112:	2a00      	cmp	r2, #0
 8024114:	f000 80e5 	beq.w	80242e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8024118:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802411c:	d019      	beq.n	8024152 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 802411e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024122:	fb0c fa0a 	mul.w	sl, ip, sl
 8024126:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802412a:	fb0c fc03 	mul.w	ip, ip, r3
 802412e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024132:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024136:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802413a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802413e:	4453      	add	r3, sl
 8024140:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024144:	0a1b      	lsrs	r3, r3, #8
 8024146:	0a3f      	lsrs	r7, r7, #8
 8024148:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802414c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024150:	433b      	orrs	r3, r7
 8024152:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024154:	2cff      	cmp	r4, #255	; 0xff
 8024156:	d020      	beq.n	802419a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8024158:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802415a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802415e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024160:	4367      	muls	r7, r4
 8024162:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024164:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024168:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802416a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802416e:	fb04 fa0a 	mul.w	sl, r4, sl
 8024172:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024176:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802417a:	44bc      	add	ip, r7
 802417c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024180:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024184:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024188:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802418c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024190:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024194:	ea4c 040a 	orr.w	r4, ip, sl
 8024198:	940d      	str	r4, [sp, #52]	; 0x34
 802419a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802419c:	2cff      	cmp	r4, #255	; 0xff
 802419e:	d020      	beq.n	80241e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 80241a0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80241a2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80241a6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80241a8:	4367      	muls	r7, r4
 80241aa:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80241ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80241b0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80241b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80241b6:	fb04 fa0a 	mul.w	sl, r4, sl
 80241ba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80241be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241c2:	44bc      	add	ip, r7
 80241c4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80241c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80241cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241dc:	ea4c 040a 	orr.w	r4, ip, sl
 80241e0:	9409      	str	r4, [sp, #36]	; 0x24
 80241e2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80241e4:	2cff      	cmp	r4, #255	; 0xff
 80241e6:	d020      	beq.n	802422a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 80241e8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80241ea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80241ee:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80241f0:	4367      	muls	r7, r4
 80241f2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80241f4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80241f8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80241fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80241fe:	fb04 fa0a 	mul.w	sl, r4, sl
 8024202:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024206:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802420a:	44bc      	add	ip, r7
 802420c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024210:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024214:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024218:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802421c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024220:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024224:	ea4c 040a 	orr.w	r4, ip, sl
 8024228:	940e      	str	r4, [sp, #56]	; 0x38
 802422a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802422c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024230:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024232:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024236:	fb0e f707 	mul.w	r7, lr, r7
 802423a:	fb01 770c 	mla	r7, r1, ip, r7
 802423e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024242:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024244:	fb00 770c 	mla	r7, r0, ip, r7
 8024248:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802424c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802424e:	fb08 770c 	mla	r7, r8, ip, r7
 8024252:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024256:	fb0e fe0c 	mul.w	lr, lr, ip
 802425a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802425e:	fb01 e303 	mla	r3, r1, r3, lr
 8024262:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024264:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024268:	990e      	ldr	r1, [sp, #56]	; 0x38
 802426a:	fb00 330a 	mla	r3, r0, sl, r3
 802426e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024272:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024276:	f8b9 3000 	ldrh.w	r3, [r9]
 802427a:	43d2      	mvns	r2, r2
 802427c:	1218      	asrs	r0, r3, #8
 802427e:	b2d2      	uxtb	r2, r2
 8024280:	10d9      	asrs	r1, r3, #3
 8024282:	0a3f      	lsrs	r7, r7, #8
 8024284:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024288:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802428c:	00db      	lsls	r3, r3, #3
 802428e:	4350      	muls	r0, r2
 8024290:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024294:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024298:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802429c:	b2db      	uxtb	r3, r3
 802429e:	ea47 070c 	orr.w	r7, r7, ip
 80242a2:	4351      	muls	r1, r2
 80242a4:	4353      	muls	r3, r2
 80242a6:	1c42      	adds	r2, r0, #1
 80242a8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80242ac:	0c3a      	lsrs	r2, r7, #16
 80242ae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80242b2:	4a19      	ldr	r2, [pc, #100]	; (8024318 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 80242b4:	b2c0      	uxtb	r0, r0
 80242b6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80242ba:	1c4a      	adds	r2, r1, #1
 80242bc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80242c0:	0a3a      	lsrs	r2, r7, #8
 80242c2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80242c6:	00c9      	lsls	r1, r1, #3
 80242c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80242cc:	4301      	orrs	r1, r0
 80242ce:	1c58      	adds	r0, r3, #1
 80242d0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80242d4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80242d8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80242dc:	4308      	orrs	r0, r1
 80242de:	f8a9 0000 	strh.w	r0, [r9]
 80242e2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80242e4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80242e6:	441a      	add	r2, r3
 80242e8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80242ea:	922d      	str	r2, [sp, #180]	; 0xb4
 80242ec:	f109 0902 	add.w	r9, r9, #2
 80242f0:	441d      	add	r5, r3
 80242f2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80242f6:	e64d      	b.n	8023f94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80242f8:	2800      	cmp	r0, #0
 80242fa:	f43f aeed 	beq.w	80240d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80242fe:	5c79      	ldrb	r1, [r7, r1]
 8024300:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024304:	9109      	str	r1, [sp, #36]	; 0x24
 8024306:	0e09      	lsrs	r1, r1, #24
 8024308:	9111      	str	r1, [sp, #68]	; 0x44
 802430a:	e6e5      	b.n	80240d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 802430c:	b01b      	add	sp, #108	; 0x6c
 802430e:	ecbd 8b08 	vpop	{d8-d11}
 8024312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024316:	bf00      	nop
 8024318:	fffff800 	.word	0xfffff800

0802431c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 802431c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024320:	b085      	sub	sp, #20
 8024322:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8024326:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802432a:	9103      	str	r1, [sp, #12]
 802432c:	fb05 7106 	mla	r1, r5, r6, r7
 8024330:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8024334:	2d00      	cmp	r5, #0
 8024336:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 802433a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802433e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8024342:	9401      	str	r4, [sp, #4]
 8024344:	eb03 0901 	add.w	r9, r3, r1
 8024348:	f2c0 80c0 	blt.w	80244cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 802434c:	45a8      	cmp	r8, r5
 802434e:	f340 80bd 	ble.w	80244cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8024352:	2f00      	cmp	r7, #0
 8024354:	f2c0 80b6 	blt.w	80244c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8024358:	42be      	cmp	r6, r7
 802435a:	f340 80b3 	ble.w	80244c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 802435e:	f813 c001 	ldrb.w	ip, [r3, r1]
 8024362:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8024366:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802436a:	d019      	beq.n	80243a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 802436c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8024370:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024374:	435a      	muls	r2, r3
 8024376:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 802437a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 802437e:	fb0c f403 	mul.w	r4, ip, r3
 8024382:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8024386:	f602 0201 	addw	r2, r2, #2049	; 0x801
 802438a:	441a      	add	r2, r3
 802438c:	f104 0320 	add.w	r3, r4, #32
 8024390:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8024394:	0a1b      	lsrs	r3, r3, #8
 8024396:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 802439a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802439e:	4319      	orrs	r1, r3
 80243a0:	b289      	uxth	r1, r1
 80243a2:	1c7b      	adds	r3, r7, #1
 80243a4:	f100 8097 	bmi.w	80244d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80243a8:	429e      	cmp	r6, r3
 80243aa:	f340 8094 	ble.w	80244d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80243ae:	2800      	cmp	r0, #0
 80243b0:	f000 8094 	beq.w	80244dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 80243b4:	f899 4001 	ldrb.w	r4, [r9, #1]
 80243b8:	9b01      	ldr	r3, [sp, #4]
 80243ba:	2cff      	cmp	r4, #255	; 0xff
 80243bc:	885b      	ldrh	r3, [r3, #2]
 80243be:	d01b      	beq.n	80243f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 80243c0:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80243c4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80243c8:	fb0a f202 	mul.w	r2, sl, r2
 80243cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80243d0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80243d4:	fb04 fa03 	mul.w	sl, r4, r3
 80243d8:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80243dc:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80243e0:	441a      	add	r2, r3
 80243e2:	f10a 0320 	add.w	r3, sl, #32
 80243e6:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80243ea:	0a1b      	lsrs	r3, r3, #8
 80243ec:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80243f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80243f4:	ea4b 0303 	orr.w	r3, fp, r3
 80243f8:	b29b      	uxth	r3, r3
 80243fa:	3501      	adds	r5, #1
 80243fc:	d474      	bmi.n	80244e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80243fe:	45a8      	cmp	r8, r5
 8024400:	dd72      	ble.n	80244e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8024402:	f1be 0f00 	cmp.w	lr, #0
 8024406:	f000 8120 	beq.w	802464a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 802440a:	2f00      	cmp	r7, #0
 802440c:	db69      	blt.n	80244e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 802440e:	42be      	cmp	r6, r7
 8024410:	dd67      	ble.n	80244e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8024412:	f819 5006 	ldrb.w	r5, [r9, r6]
 8024416:	9a01      	ldr	r2, [sp, #4]
 8024418:	2dff      	cmp	r5, #255	; 0xff
 802441a:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 802441e:	d01c      	beq.n	802445a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8024420:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8024424:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8024428:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802442c:	fb05 fa0b 	mul.w	sl, r5, fp
 8024430:	fb08 f802 	mul.w	r8, r8, r2
 8024434:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8024438:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 802443c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024440:	4490      	add	r8, r2
 8024442:	f10a 0220 	add.w	r2, sl, #32
 8024446:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 802444a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802444e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8024452:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8024456:	ea4b 0b0a 	orr.w	fp, fp, sl
 802445a:	fa1f fb8b 	uxth.w	fp, fp
 802445e:	3701      	adds	r7, #1
 8024460:	d447      	bmi.n	80244f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8024462:	42be      	cmp	r6, r7
 8024464:	dd45      	ble.n	80244f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8024466:	2800      	cmp	r0, #0
 8024468:	d046      	beq.n	80244f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 802446a:	3601      	adds	r6, #1
 802446c:	9a01      	ldr	r2, [sp, #4]
 802446e:	f819 7006 	ldrb.w	r7, [r9, r6]
 8024472:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8024476:	2fff      	cmp	r7, #255	; 0xff
 8024478:	d01a      	beq.n	80244b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 802447a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 802447e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8024482:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024486:	fb07 f902 	mul.w	r9, r7, r2
 802448a:	fb08 f806 	mul.w	r8, r8, r6
 802448e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8024492:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8024496:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802449a:	44b0      	add	r8, r6
 802449c:	f109 0620 	add.w	r6, r9, #32
 80244a0:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80244a4:	0a36      	lsrs	r6, r6, #8
 80244a6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80244aa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80244ae:	4332      	orrs	r2, r6
 80244b0:	b292      	uxth	r2, r2
 80244b2:	280f      	cmp	r0, #15
 80244b4:	d922      	bls.n	80244fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80244b6:	4b69      	ldr	r3, [pc, #420]	; (802465c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 80244b8:	4a69      	ldr	r2, [pc, #420]	; (8024660 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 80244ba:	486a      	ldr	r0, [pc, #424]	; (8024664 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 80244bc:	f240 11f9 	movw	r1, #505	; 0x1f9
 80244c0:	f007 fd80 	bl	802bfc4 <__assert_func>
 80244c4:	f04f 0c00 	mov.w	ip, #0
 80244c8:	4661      	mov	r1, ip
 80244ca:	e76a      	b.n	80243a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 80244cc:	2400      	movs	r4, #0
 80244ce:	46a4      	mov	ip, r4
 80244d0:	4623      	mov	r3, r4
 80244d2:	4621      	mov	r1, r4
 80244d4:	e791      	b.n	80243fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80244d6:	2400      	movs	r4, #0
 80244d8:	4623      	mov	r3, r4
 80244da:	e78e      	b.n	80243fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80244dc:	4604      	mov	r4, r0
 80244de:	4603      	mov	r3, r0
 80244e0:	e78b      	b.n	80243fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80244e2:	2500      	movs	r5, #0
 80244e4:	46ab      	mov	fp, r5
 80244e6:	e7ba      	b.n	802445e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 80244e8:	2700      	movs	r7, #0
 80244ea:	463d      	mov	r5, r7
 80244ec:	463a      	mov	r2, r7
 80244ee:	46bb      	mov	fp, r7
 80244f0:	e7df      	b.n	80244b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80244f2:	2700      	movs	r7, #0
 80244f4:	463a      	mov	r2, r7
 80244f6:	e7dc      	b.n	80244b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80244f8:	4607      	mov	r7, r0
 80244fa:	4602      	mov	r2, r0
 80244fc:	f1be 0f0f 	cmp.w	lr, #15
 8024500:	d8d9      	bhi.n	80244b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8024502:	b286      	uxth	r6, r0
 8024504:	fa1f f98e 	uxth.w	r9, lr
 8024508:	fb06 f809 	mul.w	r8, r6, r9
 802450c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024510:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8024514:	0136      	lsls	r6, r6, #4
 8024516:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802451a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802451e:	9601      	str	r6, [sp, #4]
 8024520:	ea4a 0101 	orr.w	r1, sl, r1
 8024524:	fa1f f689 	uxth.w	r6, r9
 8024528:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 802452c:	fb10 f90e 	smulbb	r9, r0, lr
 8024530:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8024534:	9602      	str	r6, [sp, #8]
 8024536:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802453a:	460e      	mov	r6, r1
 802453c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024540:	f1ce 0110 	rsb	r1, lr, #16
 8024544:	1a09      	subs	r1, r1, r0
 8024546:	ea4a 0303 	orr.w	r3, sl, r3
 802454a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 802454e:	4343      	muls	r3, r0
 8024550:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8024554:	9801      	ldr	r0, [sp, #4]
 8024556:	fb01 3106 	mla	r1, r1, r6, r3
 802455a:	9e02      	ldr	r6, [sp, #8]
 802455c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8024560:	1b80      	subs	r0, r0, r6
 8024562:	9e01      	ldr	r6, [sp, #4]
 8024564:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024568:	eba6 0608 	sub.w	r6, r6, r8
 802456c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024570:	b2b6      	uxth	r6, r6
 8024572:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024576:	ea4a 0202 	orr.w	r2, sl, r2
 802457a:	b280      	uxth	r0, r0
 802457c:	4374      	muls	r4, r6
 802457e:	fb09 1302 	mla	r3, r9, r2, r1
 8024582:	fb0c 4400 	mla	r4, ip, r0, r4
 8024586:	9a03      	ldr	r2, [sp, #12]
 8024588:	9802      	ldr	r0, [sp, #8]
 802458a:	8811      	ldrh	r1, [r2, #0]
 802458c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8024590:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8024594:	fb00 4505 	mla	r5, r0, r5, r4
 8024598:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802459c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80245a0:	fb08 5707 	mla	r7, r8, r7, r5
 80245a4:	ea4a 0b0b 	orr.w	fp, sl, fp
 80245a8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80245ac:	b292      	uxth	r2, r2
 80245ae:	fb0e 3e0b 	mla	lr, lr, fp, r3
 80245b2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80245b6:	4357      	muls	r7, r2
 80245b8:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80245bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80245c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80245c4:	f107 0801 	add.w	r8, r7, #1
 80245c8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80245cc:	ea43 0e0e 	orr.w	lr, r3, lr
 80245d0:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80245d4:	fa1f f38e 	uxth.w	r3, lr
 80245d8:	1208      	asrs	r0, r1, #8
 80245da:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80245de:	b2ff      	uxtb	r7, r7
 80245e0:	121c      	asrs	r4, r3, #8
 80245e2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80245e6:	fb10 f007 	smulbb	r0, r0, r7
 80245ea:	10cd      	asrs	r5, r1, #3
 80245ec:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80245f0:	fb04 0402 	mla	r4, r4, r2, r0
 80245f4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80245f8:	10d8      	asrs	r0, r3, #3
 80245fa:	fb15 f507 	smulbb	r5, r5, r7
 80245fe:	00db      	lsls	r3, r3, #3
 8024600:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024604:	fb00 5002 	mla	r0, r0, r2, r5
 8024608:	b2dd      	uxtb	r5, r3
 802460a:	00cb      	lsls	r3, r1, #3
 802460c:	b2db      	uxtb	r3, r3
 802460e:	fb13 f307 	smulbb	r3, r3, r7
 8024612:	fb05 3202 	mla	r2, r5, r2, r3
 8024616:	b2a4      	uxth	r4, r4
 8024618:	b292      	uxth	r2, r2
 802461a:	1c63      	adds	r3, r4, #1
 802461c:	b280      	uxth	r0, r0
 802461e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024622:	1c53      	adds	r3, r2, #1
 8024624:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024628:	1c42      	adds	r2, r0, #1
 802462a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802462e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024632:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024636:	0940      	lsrs	r0, r0, #5
 8024638:	4323      	orrs	r3, r4
 802463a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802463e:	9a03      	ldr	r2, [sp, #12]
 8024640:	4303      	orrs	r3, r0
 8024642:	8013      	strh	r3, [r2, #0]
 8024644:	b005      	add	sp, #20
 8024646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802464a:	280f      	cmp	r0, #15
 802464c:	f63f af33 	bhi.w	80244b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8024650:	4677      	mov	r7, lr
 8024652:	4675      	mov	r5, lr
 8024654:	4672      	mov	r2, lr
 8024656:	46f3      	mov	fp, lr
 8024658:	e753      	b.n	8024502 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 802465a:	bf00      	nop
 802465c:	08035bf7 	.word	0x08035bf7
 8024660:	08036126 	.word	0x08036126
 8024664:	08035bc4 	.word	0x08035bc4

08024668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802466c:	ed2d 8b08 	vpush	{d8-d11}
 8024670:	b097      	sub	sp, #92	; 0x5c
 8024672:	eeb0 aa40 	vmov.f32	s20, s0
 8024676:	9214      	str	r2, [sp, #80]	; 0x50
 8024678:	9308      	str	r3, [sp, #32]
 802467a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802467c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8024680:	9312      	str	r3, [sp, #72]	; 0x48
 8024682:	9111      	str	r1, [sp, #68]	; 0x44
 8024684:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8024688:	9015      	str	r0, [sp, #84]	; 0x54
 802468a:	6850      	ldr	r0, [r2, #4]
 802468c:	6812      	ldr	r2, [r2, #0]
 802468e:	fb00 1303 	mla	r3, r0, r3, r1
 8024692:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024696:	9309      	str	r3, [sp, #36]	; 0x24
 8024698:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802469a:	681b      	ldr	r3, [r3, #0]
 802469c:	930b      	str	r3, [sp, #44]	; 0x2c
 802469e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80246a0:	685b      	ldr	r3, [r3, #4]
 80246a2:	930c      	str	r3, [sp, #48]	; 0x30
 80246a4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80246a8:	930a      	str	r3, [sp, #40]	; 0x28
 80246aa:	eef0 9a60 	vmov.f32	s19, s1
 80246ae:	eeb0 9a41 	vmov.f32	s18, s2
 80246b2:	eeb0 8a62 	vmov.f32	s16, s5
 80246b6:	eef0 8a43 	vmov.f32	s17, s6
 80246ba:	eef0 ba44 	vmov.f32	s23, s8
 80246be:	eeb0 ba64 	vmov.f32	s22, s9
 80246c2:	eef0 aa45 	vmov.f32	s21, s10
 80246c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80246c8:	2b00      	cmp	r3, #0
 80246ca:	dc03      	bgt.n	80246d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80246cc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80246ce:	2b00      	cmp	r3, #0
 80246d0:	f340 83cb 	ble.w	8024e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80246d4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80246d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80246da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80246de:	1e48      	subs	r0, r1, #1
 80246e0:	1e55      	subs	r5, r2, #1
 80246e2:	9b08      	ldr	r3, [sp, #32]
 80246e4:	2b00      	cmp	r3, #0
 80246e6:	f340 81a3 	ble.w	8024a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80246ea:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80246ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80246ee:	1436      	asrs	r6, r6, #16
 80246f0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80246f4:	d406      	bmi.n	8024704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80246f6:	4286      	cmp	r6, r0
 80246f8:	da04      	bge.n	8024704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80246fa:	2b00      	cmp	r3, #0
 80246fc:	db02      	blt.n	8024704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80246fe:	42ab      	cmp	r3, r5
 8024700:	f2c0 8197 	blt.w	8024a32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8024704:	3601      	adds	r6, #1
 8024706:	f100 8184 	bmi.w	8024a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802470a:	42b1      	cmp	r1, r6
 802470c:	f2c0 8181 	blt.w	8024a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8024710:	3301      	adds	r3, #1
 8024712:	f100 817e 	bmi.w	8024a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8024716:	429a      	cmp	r2, r3
 8024718:	f2c0 817b 	blt.w	8024a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802471c:	9b08      	ldr	r3, [sp, #32]
 802471e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8024720:	9313      	str	r3, [sp, #76]	; 0x4c
 8024722:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8024726:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024728:	2b00      	cmp	r3, #0
 802472a:	f340 81a4 	ble.w	8024a76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 802472e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024730:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8024732:	1418      	asrs	r0, r3, #16
 8024734:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024736:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802473a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802473c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8024740:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024742:	142d      	asrs	r5, r5, #16
 8024744:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8024748:	f100 81f8 	bmi.w	8024b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 802474c:	f102 3eff 	add.w	lr, r2, #4294967295
 8024750:	4575      	cmp	r5, lr
 8024752:	f280 81f3 	bge.w	8024b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8024756:	2800      	cmp	r0, #0
 8024758:	f2c0 81f0 	blt.w	8024b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 802475c:	f103 3eff 	add.w	lr, r3, #4294967295
 8024760:	4570      	cmp	r0, lr
 8024762:	f280 81eb 	bge.w	8024b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8024766:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024768:	b212      	sxth	r2, r2
 802476a:	fb00 5002 	mla	r0, r0, r2, r5
 802476e:	fa1f fe81 	uxth.w	lr, r1
 8024772:	eb03 0a00 	add.w	sl, r3, r0
 8024776:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802477a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802477e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024782:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8024786:	b29b      	uxth	r3, r3
 8024788:	f1bc 0f00 	cmp.w	ip, #0
 802478c:	f000 81b9 	beq.w	8024b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024790:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8024794:	940d      	str	r4, [sp, #52]	; 0x34
 8024796:	eb0a 0b02 	add.w	fp, sl, r2
 802479a:	fa1f fa8c 	uxth.w	sl, ip
 802479e:	fb0a fe0e 	mul.w	lr, sl, lr
 80247a2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80247a6:	fa1f fa8a 	uxth.w	sl, sl
 80247aa:	eba5 050e 	sub.w	r5, r5, lr
 80247ae:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80247b2:	940e      	str	r4, [sp, #56]	; 0x38
 80247b4:	eba3 030a 	sub.w	r3, r3, sl
 80247b8:	b2ad      	uxth	r5, r5
 80247ba:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80247bc:	b29b      	uxth	r3, r3
 80247be:	fb08 f505 	mul.w	r5, r8, r5
 80247c2:	fb09 5303 	mla	r3, r9, r3, r5
 80247c6:	fb0a 3304 	mla	r3, sl, r4, r3
 80247ca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80247cc:	fb0e 3304 	mla	r3, lr, r4, r3
 80247d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80247d4:	2b00      	cmp	r3, #0
 80247d6:	f000 810f 	beq.w	80249f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80247da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80247dc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80247e0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80247e4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80247e8:	f000 8190 	beq.w	8024b0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 80247ec:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80247f0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80247f4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80247f8:	fb09 f000 	mul.w	r0, r9, r0
 80247fc:	fb0a fe0e 	mul.w	lr, sl, lr
 8024800:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8024804:	f100 0b20 	add.w	fp, r0, #32
 8024808:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802480c:	44ce      	add	lr, r9
 802480e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8024812:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024816:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802481a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802481e:	ea4e 0909 	orr.w	r9, lr, r9
 8024822:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8024826:	8868      	ldrh	r0, [r5, #2]
 8024828:	d019      	beq.n	802485e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 802482a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802482e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024832:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024836:	fb08 f800 	mul.w	r8, r8, r0
 802483a:	fb0a fe0e 	mul.w	lr, sl, lr
 802483e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8024842:	f108 0b20 	add.w	fp, r8, #32
 8024846:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802484a:	4486      	add	lr, r0
 802484c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8024850:	0a00      	lsrs	r0, r0, #8
 8024852:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8024856:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802485a:	ea4e 0000 	orr.w	r0, lr, r0
 802485e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8024862:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8024866:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802486a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802486e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024872:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024876:	ea4e 0909 	orr.w	r9, lr, r9
 802487a:	ea4a 0000 	orr.w	r0, sl, r0
 802487e:	f1bc 0f00 	cmp.w	ip, #0
 8024882:	f000 8145 	beq.w	8024b10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8024886:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802488a:	3a01      	subs	r2, #1
 802488c:	0052      	lsls	r2, r2, #1
 802488e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024890:	3202      	adds	r2, #2
 8024892:	2cff      	cmp	r4, #255	; 0xff
 8024894:	eb05 0e02 	add.w	lr, r5, r2
 8024898:	5aaa      	ldrh	r2, [r5, r2]
 802489a:	d018      	beq.n	80248ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 802489c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80248a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80248a4:	fb04 fa02 	mul.w	sl, r4, r2
 80248a8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80248ac:	fb08 f805 	mul.w	r8, r8, r5
 80248b0:	f10a 0520 	add.w	r5, sl, #32
 80248b4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80248b8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80248bc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80248c0:	4442      	add	r2, r8
 80248c2:	0a2d      	lsrs	r5, r5, #8
 80248c4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80248c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80248cc:	432a      	orrs	r2, r5
 80248ce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80248d0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80248d4:	2cff      	cmp	r4, #255	; 0xff
 80248d6:	d01a      	beq.n	802490e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80248d8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80248dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80248e0:	fb04 fa05 	mul.w	sl, r4, r5
 80248e4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80248e8:	fb08 f80e 	mul.w	r8, r8, lr
 80248ec:	f10a 0e20 	add.w	lr, sl, #32
 80248f0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80248f4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80248f8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80248fc:	4445      	add	r5, r8
 80248fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024902:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8024906:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802490a:	ea45 050e 	orr.w	r5, r5, lr
 802490e:	fb1c fe01 	smulbb	lr, ip, r1
 8024912:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8024916:	f1cc 0810 	rsb	r8, ip, #16
 802491a:	eba8 0801 	sub.w	r8, r8, r1
 802491e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024922:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8024926:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802492a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802492e:	4341      	muls	r1, r0
 8024930:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024934:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024938:	ea4a 0202 	orr.w	r2, sl, r2
 802493c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8024940:	fb09 1108 	mla	r1, r9, r8, r1
 8024944:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024948:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802494c:	fb0c 1102 	mla	r1, ip, r2, r1
 8024950:	ea4b 0505 	orr.w	r5, fp, r5
 8024954:	fb0e 1e05 	mla	lr, lr, r5, r1
 8024958:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802495c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024960:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024964:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024968:	ea42 0e0e 	orr.w	lr, r2, lr
 802496c:	fa1f f28e 	uxth.w	r2, lr
 8024970:	2bff      	cmp	r3, #255	; 0xff
 8024972:	d103      	bne.n	802497c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8024974:	9912      	ldr	r1, [sp, #72]	; 0x48
 8024976:	29ff      	cmp	r1, #255	; 0xff
 8024978:	f000 80de 	beq.w	8024b38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 802497c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802497e:	8838      	ldrh	r0, [r7, #0]
 8024980:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024982:	434b      	muls	r3, r1
 8024984:	f103 0c01 	add.w	ip, r3, #1
 8024988:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 802498c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8024990:	fa5f fc83 	uxtb.w	ip, r3
 8024994:	1203      	asrs	r3, r0, #8
 8024996:	1215      	asrs	r5, r2, #8
 8024998:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802499c:	fb13 f30c 	smulbb	r3, r3, ip
 80249a0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80249a4:	fb05 3501 	mla	r5, r5, r1, r3
 80249a8:	10c3      	asrs	r3, r0, #3
 80249aa:	10d1      	asrs	r1, r2, #3
 80249ac:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80249b0:	fb13 f30c 	smulbb	r3, r3, ip
 80249b4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80249b8:	fb01 3104 	mla	r1, r1, r4, r3
 80249bc:	00c3      	lsls	r3, r0, #3
 80249be:	00d2      	lsls	r2, r2, #3
 80249c0:	b2db      	uxtb	r3, r3
 80249c2:	b2d2      	uxtb	r2, r2
 80249c4:	fb13 f30c 	smulbb	r3, r3, ip
 80249c8:	b2ad      	uxth	r5, r5
 80249ca:	fb02 3304 	mla	r3, r2, r4, r3
 80249ce:	b29a      	uxth	r2, r3
 80249d0:	1c6b      	adds	r3, r5, #1
 80249d2:	b289      	uxth	r1, r1
 80249d4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80249d8:	1c53      	adds	r3, r2, #1
 80249da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80249de:	1c4a      	adds	r2, r1, #1
 80249e0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80249e4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80249e8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80249ec:	0949      	lsrs	r1, r1, #5
 80249ee:	432b      	orrs	r3, r5
 80249f0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80249f4:	430b      	orrs	r3, r1
 80249f6:	803b      	strh	r3, [r7, #0]
 80249f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80249fa:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80249fc:	4413      	add	r3, r2
 80249fe:	9329      	str	r3, [sp, #164]	; 0xa4
 8024a00:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8024a02:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a04:	441a      	add	r2, r3
 8024a06:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024a08:	922a      	str	r2, [sp, #168]	; 0xa8
 8024a0a:	3b01      	subs	r3, #1
 8024a0c:	3702      	adds	r7, #2
 8024a0e:	9313      	str	r3, [sp, #76]	; 0x4c
 8024a10:	e689      	b.n	8024726 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8024a12:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024a14:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8024a16:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8024a18:	4433      	add	r3, r6
 8024a1a:	9329      	str	r3, [sp, #164]	; 0xa4
 8024a1c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a1e:	441c      	add	r4, r3
 8024a20:	9b08      	ldr	r3, [sp, #32]
 8024a22:	942a      	str	r4, [sp, #168]	; 0xa8
 8024a24:	3b01      	subs	r3, #1
 8024a26:	9308      	str	r3, [sp, #32]
 8024a28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a2a:	3302      	adds	r3, #2
 8024a2c:	9309      	str	r3, [sp, #36]	; 0x24
 8024a2e:	e658      	b.n	80246e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8024a30:	d028      	beq.n	8024a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8024a32:	9b08      	ldr	r3, [sp, #32]
 8024a34:	982b      	ldr	r0, [sp, #172]	; 0xac
 8024a36:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8024a38:	3b01      	subs	r3, #1
 8024a3a:	fb00 5003 	mla	r0, r0, r3, r5
 8024a3e:	1400      	asrs	r0, r0, #16
 8024a40:	f53f ae6c 	bmi.w	802471c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8024a44:	3901      	subs	r1, #1
 8024a46:	4288      	cmp	r0, r1
 8024a48:	f6bf ae68 	bge.w	802471c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8024a4c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8024a4e:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8024a50:	fb01 0303 	mla	r3, r1, r3, r0
 8024a54:	141b      	asrs	r3, r3, #16
 8024a56:	f53f ae61 	bmi.w	802471c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8024a5a:	3a01      	subs	r2, #1
 8024a5c:	4293      	cmp	r3, r2
 8024a5e:	f6bf ae5d 	bge.w	802471c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8024a62:	9b08      	ldr	r3, [sp, #32]
 8024a64:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8024a68:	9313      	str	r3, [sp, #76]	; 0x4c
 8024a6a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8024a6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024a70:	2b00      	cmp	r3, #0
 8024a72:	f300 8082 	bgt.w	8024b7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8024a76:	9b08      	ldr	r3, [sp, #32]
 8024a78:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024a7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a7e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024a82:	9309      	str	r3, [sp, #36]	; 0x24
 8024a84:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8024a86:	2b00      	cmp	r3, #0
 8024a88:	f340 81ef 	ble.w	8024e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8024a8c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8024a90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024a94:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8024a98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024a9a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8024a9e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8024aa2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8024aa6:	eef0 6a48 	vmov.f32	s13, s16
 8024aaa:	ee69 7a27 	vmul.f32	s15, s18, s15
 8024aae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024ab2:	ee37 8a48 	vsub.f32	s16, s14, s16
 8024ab6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8024aba:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8024abe:	eef0 6a68 	vmov.f32	s13, s17
 8024ac2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8024ac6:	ee18 2a10 	vmov	r2, s16
 8024aca:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8024ace:	fb92 f3f3 	sdiv	r3, r2, r3
 8024ad2:	ee18 2a90 	vmov	r2, s17
 8024ad6:	932b      	str	r3, [sp, #172]	; 0xac
 8024ad8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024ada:	fb92 f3f3 	sdiv	r3, r2, r3
 8024ade:	932c      	str	r3, [sp, #176]	; 0xb0
 8024ae0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8024ae2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024ae4:	3b01      	subs	r3, #1
 8024ae6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024aea:	9311      	str	r3, [sp, #68]	; 0x44
 8024aec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024aee:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8024af2:	bf08      	it	eq
 8024af4:	4613      	moveq	r3, r2
 8024af6:	9308      	str	r3, [sp, #32]
 8024af8:	eef0 8a67 	vmov.f32	s17, s15
 8024afc:	eeb0 8a47 	vmov.f32	s16, s14
 8024b00:	e5e1      	b.n	80246c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8024b02:	fb08 f505 	mul.w	r5, r8, r5
 8024b06:	fb09 5303 	mla	r3, r9, r3, r5
 8024b0a:	e661      	b.n	80247d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8024b0c:	4681      	mov	r9, r0
 8024b0e:	e688      	b.n	8024822 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024b10:	f1c1 0210 	rsb	r2, r1, #16
 8024b14:	4341      	muls	r1, r0
 8024b16:	fb09 1902 	mla	r9, r9, r2, r1
 8024b1a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024b1e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8024b22:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8024b26:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024b2a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8024b2e:	ea42 0909 	orr.w	r9, r2, r9
 8024b32:	fa1f f289 	uxth.w	r2, r9
 8024b36:	e71b      	b.n	8024970 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8024b38:	803a      	strh	r2, [r7, #0]
 8024b3a:	e75d      	b.n	80249f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8024b3c:	f115 0e01 	adds.w	lr, r5, #1
 8024b40:	f53f af5a 	bmi.w	80249f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8024b44:	4572      	cmp	r2, lr
 8024b46:	f6ff af57 	blt.w	80249f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8024b4a:	f110 0e01 	adds.w	lr, r0, #1
 8024b4e:	f53f af53 	bmi.w	80249f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8024b52:	4573      	cmp	r3, lr
 8024b54:	f6ff af50 	blt.w	80249f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8024b58:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024b5a:	9502      	str	r5, [sp, #8]
 8024b5c:	b21b      	sxth	r3, r3
 8024b5e:	b212      	sxth	r2, r2
 8024b60:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8024b64:	9301      	str	r3, [sp, #4]
 8024b66:	9200      	str	r2, [sp, #0]
 8024b68:	e9cd c405 	strd	ip, r4, [sp, #20]
 8024b6c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8024b70:	4639      	mov	r1, r7
 8024b72:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024b74:	f7ff fbd2 	bl	802431c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8024b78:	e73e      	b.n	80249f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8024b7a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024b7c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024b80:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024b82:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8024b86:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024b88:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024b8c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024b8e:	141f      	asrs	r7, r3, #16
 8024b90:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024b92:	141b      	asrs	r3, r3, #16
 8024b94:	fb01 3707 	mla	r7, r1, r7, r3
 8024b98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024b9a:	fa1f fc82 	uxth.w	ip, r2
 8024b9e:	eb03 0a07 	add.w	sl, r3, r7
 8024ba2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8024ba6:	f813 9007 	ldrb.w	r9, [r3, r7]
 8024baa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024bae:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8024bb2:	b29b      	uxth	r3, r3
 8024bb4:	2d00      	cmp	r5, #0
 8024bb6:	f000 813d 	beq.w	8024e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8024bba:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8024bbe:	940f      	str	r4, [sp, #60]	; 0x3c
 8024bc0:	eb0a 0b01 	add.w	fp, sl, r1
 8024bc4:	fa1f fa85 	uxth.w	sl, r5
 8024bc8:	fb0a fc0c 	mul.w	ip, sl, ip
 8024bcc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8024bd0:	fa1f fa8a 	uxth.w	sl, sl
 8024bd4:	eba0 000c 	sub.w	r0, r0, ip
 8024bd8:	eba3 030a 	sub.w	r3, r3, sl
 8024bdc:	b280      	uxth	r0, r0
 8024bde:	fb08 f000 	mul.w	r0, r8, r0
 8024be2:	b29b      	uxth	r3, r3
 8024be4:	fb09 0303 	mla	r3, r9, r3, r0
 8024be8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8024bea:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8024bee:	9410      	str	r4, [sp, #64]	; 0x40
 8024bf0:	fb0a 3300 	mla	r3, sl, r0, r3
 8024bf4:	fb0c 3304 	mla	r3, ip, r4, r3
 8024bf8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024bfc:	2b00      	cmp	r3, #0
 8024bfe:	f000 810b 	beq.w	8024e18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8024c02:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8024c04:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024c06:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024c0a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8024c0e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8024c12:	f000 8114 	beq.w	8024e3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8024c16:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024c1a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8024c1e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024c22:	fb09 f707 	mul.w	r7, r9, r7
 8024c26:	fb0a fc0c 	mul.w	ip, sl, ip
 8024c2a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8024c2e:	f107 0b20 	add.w	fp, r7, #32
 8024c32:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024c36:	44cc      	add	ip, r9
 8024c38:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8024c3c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024c40:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024c44:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024c48:	ea4c 0909 	orr.w	r9, ip, r9
 8024c4c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8024c50:	8847      	ldrh	r7, [r0, #2]
 8024c52:	d019      	beq.n	8024c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8024c54:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024c58:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024c5c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024c60:	fb08 f807 	mul.w	r8, r8, r7
 8024c64:	fb0a fc0c 	mul.w	ip, sl, ip
 8024c68:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024c6c:	f108 0b20 	add.w	fp, r8, #32
 8024c70:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024c74:	44bc      	add	ip, r7
 8024c76:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8024c7a:	0a3f      	lsrs	r7, r7, #8
 8024c7c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024c80:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024c84:	ea4c 0707 	orr.w	r7, ip, r7
 8024c88:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8024c8c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8024c90:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8024c94:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8024c98:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024c9c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8024ca0:	ea4c 0909 	orr.w	r9, ip, r9
 8024ca4:	ea4a 0707 	orr.w	r7, sl, r7
 8024ca8:	2d00      	cmp	r5, #0
 8024caa:	f000 80ca 	beq.w	8024e42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8024cae:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8024cb2:	3901      	subs	r1, #1
 8024cb4:	0049      	lsls	r1, r1, #1
 8024cb6:	3102      	adds	r1, #2
 8024cb8:	eb00 0c01 	add.w	ip, r0, r1
 8024cbc:	5a41      	ldrh	r1, [r0, r1]
 8024cbe:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8024cc0:	28ff      	cmp	r0, #255	; 0xff
 8024cc2:	d019      	beq.n	8024cf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8024cc4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024cc6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8024cca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024cce:	fb04 fa01 	mul.w	sl, r4, r1
 8024cd2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024cd6:	fb08 f800 	mul.w	r8, r8, r0
 8024cda:	f10a 0020 	add.w	r0, sl, #32
 8024cde:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8024ce2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8024ce6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024cea:	4441      	add	r1, r8
 8024cec:	0a00      	lsrs	r0, r0, #8
 8024cee:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8024cf2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024cf6:	4301      	orrs	r1, r0
 8024cf8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024cfa:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8024cfe:	2cff      	cmp	r4, #255	; 0xff
 8024d00:	d01a      	beq.n	8024d38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8024d02:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8024d06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024d0a:	fb04 fa00 	mul.w	sl, r4, r0
 8024d0e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024d12:	fb08 f80c 	mul.w	r8, r8, ip
 8024d16:	f10a 0c20 	add.w	ip, sl, #32
 8024d1a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8024d1e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8024d22:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024d26:	4440      	add	r0, r8
 8024d28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024d2c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8024d30:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024d34:	ea40 000c 	orr.w	r0, r0, ip
 8024d38:	fb15 fc02 	smulbb	ip, r5, r2
 8024d3c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8024d40:	f1c5 0810 	rsb	r8, r5, #16
 8024d44:	eba8 0802 	sub.w	r8, r8, r2
 8024d48:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024d4c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8024d50:	437a      	muls	r2, r7
 8024d52:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024d56:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024d5a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024d5e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024d62:	fb09 2208 	mla	r2, r9, r8, r2
 8024d66:	ea4a 0101 	orr.w	r1, sl, r1
 8024d6a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8024d6e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024d72:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024d76:	fb05 2201 	mla	r2, r5, r1, r2
 8024d7a:	ea4b 0000 	orr.w	r0, fp, r0
 8024d7e:	fb0c 2200 	mla	r2, ip, r0, r2
 8024d82:	0d57      	lsrs	r7, r2, #21
 8024d84:	0952      	lsrs	r2, r2, #5
 8024d86:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024d8a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024d8e:	433a      	orrs	r2, r7
 8024d90:	2bff      	cmp	r3, #255	; 0xff
 8024d92:	b292      	uxth	r2, r2
 8024d94:	d102      	bne.n	8024d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8024d96:	9912      	ldr	r1, [sp, #72]	; 0x48
 8024d98:	29ff      	cmp	r1, #255	; 0xff
 8024d9a:	d063      	beq.n	8024e64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8024d9c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8024d9e:	f8be 1000 	ldrh.w	r1, [lr]
 8024da2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024da4:	4343      	muls	r3, r0
 8024da6:	1c58      	adds	r0, r3, #1
 8024da8:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8024dac:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8024db0:	1208      	asrs	r0, r1, #8
 8024db2:	b2db      	uxtb	r3, r3
 8024db4:	1215      	asrs	r5, r2, #8
 8024db6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024dba:	fb10 f003 	smulbb	r0, r0, r3
 8024dbe:	10cf      	asrs	r7, r1, #3
 8024dc0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024dc4:	00c9      	lsls	r1, r1, #3
 8024dc6:	fb05 0504 	mla	r5, r5, r4, r0
 8024dca:	b2c9      	uxtb	r1, r1
 8024dcc:	10d0      	asrs	r0, r2, #3
 8024dce:	00d2      	lsls	r2, r2, #3
 8024dd0:	fb11 f103 	smulbb	r1, r1, r3
 8024dd4:	b2d2      	uxtb	r2, r2
 8024dd6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8024dda:	fb02 1204 	mla	r2, r2, r4, r1
 8024dde:	fb17 f703 	smulbb	r7, r7, r3
 8024de2:	b2ad      	uxth	r5, r5
 8024de4:	b292      	uxth	r2, r2
 8024de6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024dea:	fb00 7004 	mla	r0, r0, r4, r7
 8024dee:	1c6b      	adds	r3, r5, #1
 8024df0:	1c57      	adds	r7, r2, #1
 8024df2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024df6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024dfa:	b280      	uxth	r0, r0
 8024dfc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8024e00:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024e04:	433d      	orrs	r5, r7
 8024e06:	1c47      	adds	r7, r0, #1
 8024e08:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8024e0c:	097f      	lsrs	r7, r7, #5
 8024e0e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024e12:	433d      	orrs	r5, r7
 8024e14:	f8ae 5000 	strh.w	r5, [lr]
 8024e18:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024e1a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8024e1c:	4413      	add	r3, r2
 8024e1e:	9329      	str	r3, [sp, #164]	; 0xa4
 8024e20:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8024e22:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024e24:	441a      	add	r2, r3
 8024e26:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024e28:	922a      	str	r2, [sp, #168]	; 0xa8
 8024e2a:	3b01      	subs	r3, #1
 8024e2c:	f10e 0e02 	add.w	lr, lr, #2
 8024e30:	9313      	str	r3, [sp, #76]	; 0x4c
 8024e32:	e61c      	b.n	8024a6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8024e34:	fb08 f000 	mul.w	r0, r8, r0
 8024e38:	fb09 0303 	mla	r3, r9, r3, r0
 8024e3c:	e6dc      	b.n	8024bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8024e3e:	46b9      	mov	r9, r7
 8024e40:	e704      	b.n	8024c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8024e42:	f1c2 0110 	rsb	r1, r2, #16
 8024e46:	437a      	muls	r2, r7
 8024e48:	fb09 2901 	mla	r9, r9, r1, r2
 8024e4c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024e50:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8024e54:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8024e58:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024e5c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024e60:	4302      	orrs	r2, r0
 8024e62:	e795      	b.n	8024d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8024e64:	f8ae 2000 	strh.w	r2, [lr]
 8024e68:	e7d6      	b.n	8024e18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8024e6a:	b017      	add	sp, #92	; 0x5c
 8024e6c:	ecbd 8b08 	vpop	{d8-d11}
 8024e70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024e74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8024e74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e78:	b085      	sub	sp, #20
 8024e7a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8024e7e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8024e82:	9103      	str	r1, [sp, #12]
 8024e84:	fb05 7106 	mla	r1, r5, r6, r7
 8024e88:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8024e8c:	2d00      	cmp	r5, #0
 8024e8e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8024e92:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024e96:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8024e9a:	9401      	str	r4, [sp, #4]
 8024e9c:	eb02 0901 	add.w	r9, r2, r1
 8024ea0:	f2c0 80c0 	blt.w	8025024 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8024ea4:	45a8      	cmp	r8, r5
 8024ea6:	f340 80bd 	ble.w	8025024 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8024eaa:	2f00      	cmp	r7, #0
 8024eac:	f2c0 80b6 	blt.w	802501c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8024eb0:	42be      	cmp	r6, r7
 8024eb2:	f340 80b3 	ble.w	802501c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8024eb6:	f812 c001 	ldrb.w	ip, [r2, r1]
 8024eba:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8024ebe:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024ec2:	d019      	beq.n	8024ef8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8024ec4:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8024ec8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024ecc:	435a      	muls	r2, r3
 8024ece:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8024ed2:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8024ed6:	fb0c f403 	mul.w	r4, ip, r3
 8024eda:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8024ede:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8024ee2:	441a      	add	r2, r3
 8024ee4:	f104 0320 	add.w	r3, r4, #32
 8024ee8:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8024eec:	0a1b      	lsrs	r3, r3, #8
 8024eee:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8024ef2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024ef6:	4319      	orrs	r1, r3
 8024ef8:	b289      	uxth	r1, r1
 8024efa:	1c7b      	adds	r3, r7, #1
 8024efc:	f100 8097 	bmi.w	802502e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8024f00:	429e      	cmp	r6, r3
 8024f02:	f340 8094 	ble.w	802502e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8024f06:	2800      	cmp	r0, #0
 8024f08:	f000 8094 	beq.w	8025034 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8024f0c:	f899 4001 	ldrb.w	r4, [r9, #1]
 8024f10:	9b01      	ldr	r3, [sp, #4]
 8024f12:	2cff      	cmp	r4, #255	; 0xff
 8024f14:	885b      	ldrh	r3, [r3, #2]
 8024f16:	d01b      	beq.n	8024f50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8024f18:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8024f1c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8024f20:	fb0a f202 	mul.w	r2, sl, r2
 8024f24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024f28:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8024f2c:	fb04 fa03 	mul.w	sl, r4, r3
 8024f30:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8024f34:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8024f38:	441a      	add	r2, r3
 8024f3a:	f10a 0320 	add.w	r3, sl, #32
 8024f3e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8024f42:	0a1b      	lsrs	r3, r3, #8
 8024f44:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8024f48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024f4c:	ea4b 0303 	orr.w	r3, fp, r3
 8024f50:	b29b      	uxth	r3, r3
 8024f52:	3501      	adds	r5, #1
 8024f54:	d474      	bmi.n	8025040 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8024f56:	45a8      	cmp	r8, r5
 8024f58:	dd72      	ble.n	8025040 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8024f5a:	f1be 0f00 	cmp.w	lr, #0
 8024f5e:	f000 8110 	beq.w	8025182 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8024f62:	2f00      	cmp	r7, #0
 8024f64:	db69      	blt.n	802503a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8024f66:	42be      	cmp	r6, r7
 8024f68:	dd67      	ble.n	802503a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8024f6a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8024f6e:	9a01      	ldr	r2, [sp, #4]
 8024f70:	2dff      	cmp	r5, #255	; 0xff
 8024f72:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8024f76:	d01c      	beq.n	8024fb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8024f78:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8024f7c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8024f80:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8024f84:	fb05 fa0b 	mul.w	sl, r5, fp
 8024f88:	fb08 f802 	mul.w	r8, r8, r2
 8024f8c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8024f90:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8024f94:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024f98:	4490      	add	r8, r2
 8024f9a:	f10a 0220 	add.w	r2, sl, #32
 8024f9e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8024fa2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024fa6:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8024faa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8024fae:	ea4b 0b0a 	orr.w	fp, fp, sl
 8024fb2:	fa1f fb8b 	uxth.w	fp, fp
 8024fb6:	3701      	adds	r7, #1
 8024fb8:	d447      	bmi.n	802504a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8024fba:	42be      	cmp	r6, r7
 8024fbc:	dd45      	ble.n	802504a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8024fbe:	2800      	cmp	r0, #0
 8024fc0:	d046      	beq.n	8025050 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8024fc2:	3601      	adds	r6, #1
 8024fc4:	9a01      	ldr	r2, [sp, #4]
 8024fc6:	f819 7006 	ldrb.w	r7, [r9, r6]
 8024fca:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8024fce:	2fff      	cmp	r7, #255	; 0xff
 8024fd0:	d01a      	beq.n	8025008 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8024fd2:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8024fd6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8024fda:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024fde:	fb07 f902 	mul.w	r9, r7, r2
 8024fe2:	fb08 f806 	mul.w	r8, r8, r6
 8024fe6:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8024fea:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8024fee:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024ff2:	44b0      	add	r8, r6
 8024ff4:	f109 0620 	add.w	r6, r9, #32
 8024ff8:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8024ffc:	0a36      	lsrs	r6, r6, #8
 8024ffe:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025002:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8025006:	4332      	orrs	r2, r6
 8025008:	b292      	uxth	r2, r2
 802500a:	280f      	cmp	r0, #15
 802500c:	d922      	bls.n	8025054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 802500e:	4b61      	ldr	r3, [pc, #388]	; (8025194 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8025010:	4a61      	ldr	r2, [pc, #388]	; (8025198 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8025012:	4862      	ldr	r0, [pc, #392]	; (802519c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8025014:	f240 11f9 	movw	r1, #505	; 0x1f9
 8025018:	f006 ffd4 	bl	802bfc4 <__assert_func>
 802501c:	f04f 0c00 	mov.w	ip, #0
 8025020:	4661      	mov	r1, ip
 8025022:	e76a      	b.n	8024efa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8025024:	2400      	movs	r4, #0
 8025026:	46a4      	mov	ip, r4
 8025028:	4623      	mov	r3, r4
 802502a:	4621      	mov	r1, r4
 802502c:	e791      	b.n	8024f52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 802502e:	2400      	movs	r4, #0
 8025030:	4623      	mov	r3, r4
 8025032:	e78e      	b.n	8024f52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8025034:	4604      	mov	r4, r0
 8025036:	4603      	mov	r3, r0
 8025038:	e78b      	b.n	8024f52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 802503a:	2500      	movs	r5, #0
 802503c:	46ab      	mov	fp, r5
 802503e:	e7ba      	b.n	8024fb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8025040:	2700      	movs	r7, #0
 8025042:	463d      	mov	r5, r7
 8025044:	463a      	mov	r2, r7
 8025046:	46bb      	mov	fp, r7
 8025048:	e7df      	b.n	802500a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 802504a:	2700      	movs	r7, #0
 802504c:	463a      	mov	r2, r7
 802504e:	e7dc      	b.n	802500a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8025050:	4607      	mov	r7, r0
 8025052:	4602      	mov	r2, r0
 8025054:	f1be 0f0f 	cmp.w	lr, #15
 8025058:	d8d9      	bhi.n	802500e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 802505a:	b286      	uxth	r6, r0
 802505c:	fa1f f98e 	uxth.w	r9, lr
 8025060:	fb06 f809 	mul.w	r8, r6, r9
 8025064:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025068:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802506c:	0136      	lsls	r6, r6, #4
 802506e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025072:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025076:	9601      	str	r6, [sp, #4]
 8025078:	ea4a 0101 	orr.w	r1, sl, r1
 802507c:	fa1f f689 	uxth.w	r6, r9
 8025080:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8025084:	fb10 f90e 	smulbb	r9, r0, lr
 8025088:	ea4f 09e9 	mov.w	r9, r9, asr #3
 802508c:	9602      	str	r6, [sp, #8]
 802508e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025092:	460e      	mov	r6, r1
 8025094:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8025098:	f1ce 0110 	rsb	r1, lr, #16
 802509c:	1a09      	subs	r1, r1, r0
 802509e:	ea4a 0303 	orr.w	r3, sl, r3
 80250a2:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80250a6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80250aa:	4343      	muls	r3, r0
 80250ac:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80250b0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80250b4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80250b8:	fb01 3106 	mla	r1, r1, r6, r3
 80250bc:	ea4a 0202 	orr.w	r2, sl, r2
 80250c0:	fb09 1302 	mla	r3, r9, r2, r1
 80250c4:	9a03      	ldr	r2, [sp, #12]
 80250c6:	9802      	ldr	r0, [sp, #8]
 80250c8:	8811      	ldrh	r1, [r2, #0]
 80250ca:	9a01      	ldr	r2, [sp, #4]
 80250cc:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80250d0:	1a12      	subs	r2, r2, r0
 80250d2:	9801      	ldr	r0, [sp, #4]
 80250d4:	eba0 0608 	sub.w	r6, r0, r8
 80250d8:	b2b6      	uxth	r6, r6
 80250da:	b292      	uxth	r2, r2
 80250dc:	4374      	muls	r4, r6
 80250de:	fb0c 4402 	mla	r4, ip, r2, r4
 80250e2:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80250e6:	9a02      	ldr	r2, [sp, #8]
 80250e8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80250ec:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80250f0:	fb02 4505 	mla	r5, r2, r5, r4
 80250f4:	ea4a 0b0b 	orr.w	fp, sl, fp
 80250f8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80250fc:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8025100:	fb08 5707 	mla	r7, r8, r7, r5
 8025104:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8025108:	120a      	asrs	r2, r1, #8
 802510a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802510e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8025112:	b2ff      	uxtb	r7, r7
 8025114:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025118:	10c8      	asrs	r0, r1, #3
 802511a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802511e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025122:	00c9      	lsls	r1, r1, #3
 8025124:	437a      	muls	r2, r7
 8025126:	ea43 0e0e 	orr.w	lr, r3, lr
 802512a:	b2c9      	uxtb	r1, r1
 802512c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025130:	fa1f f38e 	uxth.w	r3, lr
 8025134:	4378      	muls	r0, r7
 8025136:	434f      	muls	r7, r1
 8025138:	1c51      	adds	r1, r2, #1
 802513a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802513e:	121a      	asrs	r2, r3, #8
 8025140:	f022 0207 	bic.w	r2, r2, #7
 8025144:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8025148:	1c41      	adds	r1, r0, #1
 802514a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802514e:	10d9      	asrs	r1, r3, #3
 8025150:	f021 0103 	bic.w	r1, r1, #3
 8025154:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025158:	0212      	lsls	r2, r2, #8
 802515a:	00c9      	lsls	r1, r1, #3
 802515c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025160:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8025164:	430a      	orrs	r2, r1
 8025166:	1c79      	adds	r1, r7, #1
 8025168:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 802516c:	00db      	lsls	r3, r3, #3
 802516e:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8025172:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8025176:	4313      	orrs	r3, r2
 8025178:	9a03      	ldr	r2, [sp, #12]
 802517a:	8013      	strh	r3, [r2, #0]
 802517c:	b005      	add	sp, #20
 802517e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025182:	280f      	cmp	r0, #15
 8025184:	f63f af43 	bhi.w	802500e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8025188:	4677      	mov	r7, lr
 802518a:	4675      	mov	r5, lr
 802518c:	4672      	mov	r2, lr
 802518e:	46f3      	mov	fp, lr
 8025190:	e763      	b.n	802505a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8025192:	bf00      	nop
 8025194:	08035bf7 	.word	0x08035bf7
 8025198:	08036126 	.word	0x08036126
 802519c:	08035bc4 	.word	0x08035bc4

080251a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80251a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80251a4:	ed2d 8b08 	vpush	{d8-d11}
 80251a8:	b093      	sub	sp, #76	; 0x4c
 80251aa:	eeb0 aa40 	vmov.f32	s20, s0
 80251ae:	9210      	str	r2, [sp, #64]	; 0x40
 80251b0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80251b2:	910e      	str	r1, [sp, #56]	; 0x38
 80251b4:	9306      	str	r3, [sp, #24]
 80251b6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80251ba:	9011      	str	r0, [sp, #68]	; 0x44
 80251bc:	6850      	ldr	r0, [r2, #4]
 80251be:	6812      	ldr	r2, [r2, #0]
 80251c0:	fb00 1303 	mla	r3, r0, r3, r1
 80251c4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80251c8:	9307      	str	r3, [sp, #28]
 80251ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80251cc:	681b      	ldr	r3, [r3, #0]
 80251ce:	9308      	str	r3, [sp, #32]
 80251d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80251d2:	685b      	ldr	r3, [r3, #4]
 80251d4:	9309      	str	r3, [sp, #36]	; 0x24
 80251d6:	eef0 9a60 	vmov.f32	s19, s1
 80251da:	eeb0 9a41 	vmov.f32	s18, s2
 80251de:	eeb0 8a62 	vmov.f32	s16, s5
 80251e2:	eef0 8a43 	vmov.f32	s17, s6
 80251e6:	eef0 ba44 	vmov.f32	s23, s8
 80251ea:	eeb0 ba64 	vmov.f32	s22, s9
 80251ee:	eef0 aa45 	vmov.f32	s21, s10
 80251f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80251f4:	2b00      	cmp	r3, #0
 80251f6:	dc03      	bgt.n	8025200 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80251f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80251fa:	2b00      	cmp	r3, #0
 80251fc:	f340 83b4 	ble.w	8025968 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8025200:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025202:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025206:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802520a:	1e48      	subs	r0, r1, #1
 802520c:	1e55      	subs	r5, r2, #1
 802520e:	9b06      	ldr	r3, [sp, #24]
 8025210:	2b00      	cmp	r3, #0
 8025212:	f340 8163 	ble.w	80254dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8025216:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8025218:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802521a:	1436      	asrs	r6, r6, #16
 802521c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025220:	d406      	bmi.n	8025230 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025222:	4286      	cmp	r6, r0
 8025224:	da04      	bge.n	8025230 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025226:	2b00      	cmp	r3, #0
 8025228:	db02      	blt.n	8025230 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802522a:	42ab      	cmp	r3, r5
 802522c:	f2c0 8157 	blt.w	80254de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8025230:	3601      	adds	r6, #1
 8025232:	f100 8144 	bmi.w	80254be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025236:	42b1      	cmp	r1, r6
 8025238:	f2c0 8141 	blt.w	80254be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802523c:	3301      	adds	r3, #1
 802523e:	f100 813e 	bmi.w	80254be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025242:	429a      	cmp	r2, r3
 8025244:	f2c0 813b 	blt.w	80254be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025248:	9b06      	ldr	r3, [sp, #24]
 802524a:	9f07      	ldr	r7, [sp, #28]
 802524c:	930f      	str	r3, [sp, #60]	; 0x3c
 802524e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025252:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025254:	2b00      	cmp	r3, #0
 8025256:	f340 8164 	ble.w	8025522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802525a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802525c:	9d25      	ldr	r5, [sp, #148]	; 0x94
 802525e:	1418      	asrs	r0, r3, #16
 8025260:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8025262:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025266:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025268:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802526c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802526e:	142d      	asrs	r5, r5, #16
 8025270:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025274:	f100 81ee 	bmi.w	8025654 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8025278:	f102 3eff 	add.w	lr, r2, #4294967295
 802527c:	4575      	cmp	r5, lr
 802527e:	f280 81e9 	bge.w	8025654 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8025282:	2800      	cmp	r0, #0
 8025284:	f2c0 81e6 	blt.w	8025654 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8025288:	f103 3eff 	add.w	lr, r3, #4294967295
 802528c:	4570      	cmp	r0, lr
 802528e:	f280 81e1 	bge.w	8025654 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8025292:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025294:	b212      	sxth	r2, r2
 8025296:	fb00 5002 	mla	r0, r0, r2, r5
 802529a:	fa1f fe81 	uxth.w	lr, r1
 802529e:	eb03 0a00 	add.w	sl, r3, r0
 80252a2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80252a6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80252aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80252ae:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80252b2:	b29b      	uxth	r3, r3
 80252b4:	f1bc 0f00 	cmp.w	ip, #0
 80252b8:	f000 8179 	beq.w	80255ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80252bc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80252c0:	940a      	str	r4, [sp, #40]	; 0x28
 80252c2:	eb0a 0b02 	add.w	fp, sl, r2
 80252c6:	fa1f fa8c 	uxth.w	sl, ip
 80252ca:	fb0a fe0e 	mul.w	lr, sl, lr
 80252ce:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80252d2:	fa1f fa8a 	uxth.w	sl, sl
 80252d6:	eba5 050e 	sub.w	r5, r5, lr
 80252da:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80252de:	940b      	str	r4, [sp, #44]	; 0x2c
 80252e0:	eba3 030a 	sub.w	r3, r3, sl
 80252e4:	b2ad      	uxth	r5, r5
 80252e6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80252e8:	b29b      	uxth	r3, r3
 80252ea:	fb08 f505 	mul.w	r5, r8, r5
 80252ee:	fb09 5303 	mla	r3, r9, r3, r5
 80252f2:	fb0a 3304 	mla	r3, sl, r4, r3
 80252f6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80252f8:	fb0e 3304 	mla	r3, lr, r4, r3
 80252fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025300:	2b00      	cmp	r3, #0
 8025302:	f000 80cf 	beq.w	80254a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8025306:	9c08      	ldr	r4, [sp, #32]
 8025308:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802530c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025310:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025314:	f000 8150 	beq.w	80255b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8025318:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802531c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025320:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025324:	fb09 f000 	mul.w	r0, r9, r0
 8025328:	fb0a fe0e 	mul.w	lr, sl, lr
 802532c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025330:	f100 0b20 	add.w	fp, r0, #32
 8025334:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025338:	44ce      	add	lr, r9
 802533a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802533e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025342:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025346:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802534a:	ea4e 0909 	orr.w	r9, lr, r9
 802534e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025352:	8868      	ldrh	r0, [r5, #2]
 8025354:	d019      	beq.n	802538a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8025356:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802535a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802535e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025362:	fb08 f800 	mul.w	r8, r8, r0
 8025366:	fb0a fe0e 	mul.w	lr, sl, lr
 802536a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802536e:	f108 0b20 	add.w	fp, r8, #32
 8025372:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025376:	4486      	add	lr, r0
 8025378:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802537c:	0a00      	lsrs	r0, r0, #8
 802537e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025382:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025386:	ea4e 0000 	orr.w	r0, lr, r0
 802538a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802538e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025392:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025396:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802539a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802539e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80253a2:	ea4e 0909 	orr.w	r9, lr, r9
 80253a6:	ea4a 0000 	orr.w	r0, sl, r0
 80253aa:	f1bc 0f00 	cmp.w	ip, #0
 80253ae:	f000 8105 	beq.w	80255bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80253b2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80253b6:	3a01      	subs	r2, #1
 80253b8:	0052      	lsls	r2, r2, #1
 80253ba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80253bc:	3202      	adds	r2, #2
 80253be:	2cff      	cmp	r4, #255	; 0xff
 80253c0:	eb05 0e02 	add.w	lr, r5, r2
 80253c4:	5aaa      	ldrh	r2, [r5, r2]
 80253c6:	d018      	beq.n	80253fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80253c8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80253cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80253d0:	fb04 fa02 	mul.w	sl, r4, r2
 80253d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80253d8:	fb08 f805 	mul.w	r8, r8, r5
 80253dc:	f10a 0520 	add.w	r5, sl, #32
 80253e0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80253e4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80253e8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80253ec:	4442      	add	r2, r8
 80253ee:	0a2d      	lsrs	r5, r5, #8
 80253f0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80253f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80253f8:	432a      	orrs	r2, r5
 80253fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80253fc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025400:	2cff      	cmp	r4, #255	; 0xff
 8025402:	d01a      	beq.n	802543a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8025404:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025408:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802540c:	fb04 fa05 	mul.w	sl, r4, r5
 8025410:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025414:	fb08 f80e 	mul.w	r8, r8, lr
 8025418:	f10a 0e20 	add.w	lr, sl, #32
 802541c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025420:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025424:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025428:	4445      	add	r5, r8
 802542a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802542e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8025432:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025436:	ea45 050e 	orr.w	r5, r5, lr
 802543a:	fb1c fe01 	smulbb	lr, ip, r1
 802543e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8025442:	f1cc 0810 	rsb	r8, ip, #16
 8025446:	eba8 0801 	sub.w	r8, r8, r1
 802544a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802544e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8025452:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8025456:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802545a:	4341      	muls	r1, r0
 802545c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025460:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025464:	ea4a 0202 	orr.w	r2, sl, r2
 8025468:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802546c:	fb09 1108 	mla	r1, r9, r8, r1
 8025470:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025474:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8025478:	fb0c 1102 	mla	r1, ip, r2, r1
 802547c:	ea4b 0505 	orr.w	r5, fp, r5
 8025480:	fb0e 1e05 	mla	lr, lr, r5, r1
 8025484:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025488:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802548c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025490:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025494:	ea42 0e0e 	orr.w	lr, r2, lr
 8025498:	fa1f f28e 	uxth.w	r2, lr
 802549c:	2bff      	cmp	r3, #255	; 0xff
 802549e:	f040 80a1 	bne.w	80255e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 80254a2:	803a      	strh	r2, [r7, #0]
 80254a4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80254a6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80254a8:	4413      	add	r3, r2
 80254aa:	9325      	str	r3, [sp, #148]	; 0x94
 80254ac:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80254ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80254b0:	441a      	add	r2, r3
 80254b2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80254b4:	9226      	str	r2, [sp, #152]	; 0x98
 80254b6:	3b01      	subs	r3, #1
 80254b8:	3702      	adds	r7, #2
 80254ba:	930f      	str	r3, [sp, #60]	; 0x3c
 80254bc:	e6c9      	b.n	8025252 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80254be:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80254c0:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80254c2:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80254c4:	4433      	add	r3, r6
 80254c6:	9325      	str	r3, [sp, #148]	; 0x94
 80254c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80254ca:	441c      	add	r4, r3
 80254cc:	9b06      	ldr	r3, [sp, #24]
 80254ce:	9426      	str	r4, [sp, #152]	; 0x98
 80254d0:	3b01      	subs	r3, #1
 80254d2:	9306      	str	r3, [sp, #24]
 80254d4:	9b07      	ldr	r3, [sp, #28]
 80254d6:	3302      	adds	r3, #2
 80254d8:	9307      	str	r3, [sp, #28]
 80254da:	e698      	b.n	802520e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80254dc:	d028      	beq.n	8025530 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80254de:	9b06      	ldr	r3, [sp, #24]
 80254e0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80254e2:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80254e4:	3b01      	subs	r3, #1
 80254e6:	fb00 5003 	mla	r0, r0, r3, r5
 80254ea:	1400      	asrs	r0, r0, #16
 80254ec:	f53f aeac 	bmi.w	8025248 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80254f0:	3901      	subs	r1, #1
 80254f2:	4288      	cmp	r0, r1
 80254f4:	f6bf aea8 	bge.w	8025248 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80254f8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80254fa:	9826      	ldr	r0, [sp, #152]	; 0x98
 80254fc:	fb01 0303 	mla	r3, r1, r3, r0
 8025500:	141b      	asrs	r3, r3, #16
 8025502:	f53f aea1 	bmi.w	8025248 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8025506:	3a01      	subs	r2, #1
 8025508:	4293      	cmp	r3, r2
 802550a:	f6bf ae9d 	bge.w	8025248 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802550e:	9b06      	ldr	r3, [sp, #24]
 8025510:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8025514:	930f      	str	r3, [sp, #60]	; 0x3c
 8025516:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802551a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802551c:	2b00      	cmp	r3, #0
 802551e:	f300 80b6 	bgt.w	802568e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8025522:	9b06      	ldr	r3, [sp, #24]
 8025524:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025528:	9b07      	ldr	r3, [sp, #28]
 802552a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802552e:	9307      	str	r3, [sp, #28]
 8025530:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025532:	2b00      	cmp	r3, #0
 8025534:	f340 8218 	ble.w	8025968 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8025538:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802553c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025540:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8025544:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025546:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802554a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802554e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8025552:	eef0 6a48 	vmov.f32	s13, s16
 8025556:	ee69 7a27 	vmul.f32	s15, s18, s15
 802555a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802555e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8025562:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8025566:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 802556a:	eef0 6a68 	vmov.f32	s13, s17
 802556e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8025572:	ee18 2a10 	vmov	r2, s16
 8025576:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 802557a:	fb92 f3f3 	sdiv	r3, r2, r3
 802557e:	ee18 2a90 	vmov	r2, s17
 8025582:	9327      	str	r3, [sp, #156]	; 0x9c
 8025584:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025586:	fb92 f3f3 	sdiv	r3, r2, r3
 802558a:	9328      	str	r3, [sp, #160]	; 0xa0
 802558c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802558e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025590:	3b01      	subs	r3, #1
 8025592:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025596:	930e      	str	r3, [sp, #56]	; 0x38
 8025598:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802559a:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 802559e:	bf08      	it	eq
 80255a0:	4613      	moveq	r3, r2
 80255a2:	9306      	str	r3, [sp, #24]
 80255a4:	eef0 8a67 	vmov.f32	s17, s15
 80255a8:	eeb0 8a47 	vmov.f32	s16, s14
 80255ac:	e621      	b.n	80251f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80255ae:	fb08 f505 	mul.w	r5, r8, r5
 80255b2:	fb09 5303 	mla	r3, r9, r3, r5
 80255b6:	e6a1      	b.n	80252fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80255b8:	4681      	mov	r9, r0
 80255ba:	e6c8      	b.n	802534e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80255bc:	f1c1 0210 	rsb	r2, r1, #16
 80255c0:	4341      	muls	r1, r0
 80255c2:	fb09 1902 	mla	r9, r9, r2, r1
 80255c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80255ca:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80255ce:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80255d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80255d6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80255da:	ea42 0909 	orr.w	r9, r2, r9
 80255de:	fa1f f289 	uxth.w	r2, r9
 80255e2:	e75b      	b.n	802549c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80255e4:	f8b7 c000 	ldrh.w	ip, [r7]
 80255e8:	43db      	mvns	r3, r3
 80255ea:	ea4f 202c 	mov.w	r0, ip, asr #8
 80255ee:	fa5f fe83 	uxtb.w	lr, r3
 80255f2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80255f6:	fb00 f00e 	mul.w	r0, r0, lr
 80255fa:	1c41      	adds	r1, r0, #1
 80255fc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025600:	1211      	asrs	r1, r2, #8
 8025602:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8025606:	f021 0107 	bic.w	r1, r1, #7
 802560a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802560e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8025612:	48d8      	ldr	r0, [pc, #864]	; (8025974 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8025614:	fb05 f50e 	mul.w	r5, r5, lr
 8025618:	b2c9      	uxtb	r1, r1
 802561a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802561e:	1c69      	adds	r1, r5, #1
 8025620:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8025624:	10d1      	asrs	r1, r2, #3
 8025626:	f021 0103 	bic.w	r1, r1, #3
 802562a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802562e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8025632:	b2db      	uxtb	r3, r3
 8025634:	00c9      	lsls	r1, r1, #3
 8025636:	fb03 f30e 	mul.w	r3, r3, lr
 802563a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802563e:	4301      	orrs	r1, r0
 8025640:	1c58      	adds	r0, r3, #1
 8025642:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8025646:	00d2      	lsls	r2, r2, #3
 8025648:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802564c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025650:	430a      	orrs	r2, r1
 8025652:	e726      	b.n	80254a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8025654:	f115 0e01 	adds.w	lr, r5, #1
 8025658:	f53f af24 	bmi.w	80254a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802565c:	4572      	cmp	r2, lr
 802565e:	f6ff af21 	blt.w	80254a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8025662:	f110 0e01 	adds.w	lr, r0, #1
 8025666:	f53f af1d 	bmi.w	80254a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802566a:	4573      	cmp	r3, lr
 802566c:	f6ff af1a 	blt.w	80254a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8025670:	b21b      	sxth	r3, r3
 8025672:	b212      	sxth	r2, r2
 8025674:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8025678:	e9cd 5002 	strd	r5, r0, [sp, #8]
 802567c:	9301      	str	r3, [sp, #4]
 802567e:	9200      	str	r2, [sp, #0]
 8025680:	4639      	mov	r1, r7
 8025682:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8025686:	9811      	ldr	r0, [sp, #68]	; 0x44
 8025688:	f7ff fbf4 	bl	8024e74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802568c:	e70a      	b.n	80254a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802568e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8025690:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8025694:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025696:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802569a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802569c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80256a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80256a2:	141f      	asrs	r7, r3, #16
 80256a4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80256a6:	141b      	asrs	r3, r3, #16
 80256a8:	fb01 3707 	mla	r7, r1, r7, r3
 80256ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80256ae:	fa1f fc82 	uxth.w	ip, r2
 80256b2:	eb03 0a07 	add.w	sl, r3, r7
 80256b6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80256ba:	f813 9007 	ldrb.w	r9, [r3, r7]
 80256be:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80256c2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80256c6:	b29b      	uxth	r3, r3
 80256c8:	2d00      	cmp	r5, #0
 80256ca:	f000 80fe 	beq.w	80258ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 80256ce:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80256d2:	940c      	str	r4, [sp, #48]	; 0x30
 80256d4:	eb0a 0b01 	add.w	fp, sl, r1
 80256d8:	fa1f fa85 	uxth.w	sl, r5
 80256dc:	fb0a fc0c 	mul.w	ip, sl, ip
 80256e0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80256e4:	fa1f fa8a 	uxth.w	sl, sl
 80256e8:	eba0 000c 	sub.w	r0, r0, ip
 80256ec:	eba3 030a 	sub.w	r3, r3, sl
 80256f0:	b280      	uxth	r0, r0
 80256f2:	fb08 f000 	mul.w	r0, r8, r0
 80256f6:	b29b      	uxth	r3, r3
 80256f8:	fb09 0303 	mla	r3, r9, r3, r0
 80256fc:	980c      	ldr	r0, [sp, #48]	; 0x30
 80256fe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025702:	940d      	str	r4, [sp, #52]	; 0x34
 8025704:	fb0a 3300 	mla	r3, sl, r0, r3
 8025708:	fb0c 3304 	mla	r3, ip, r4, r3
 802570c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025710:	2b00      	cmp	r3, #0
 8025712:	f000 80cc 	beq.w	80258ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8025716:	9808      	ldr	r0, [sp, #32]
 8025718:	9c08      	ldr	r4, [sp, #32]
 802571a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802571e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8025722:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8025726:	f000 80d5 	beq.w	80258d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 802572a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802572e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025732:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025736:	fb09 f707 	mul.w	r7, r9, r7
 802573a:	fb0a fc0c 	mul.w	ip, sl, ip
 802573e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8025742:	f107 0b20 	add.w	fp, r7, #32
 8025746:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802574a:	44cc      	add	ip, r9
 802574c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025750:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025754:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025758:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802575c:	ea4c 0909 	orr.w	r9, ip, r9
 8025760:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025764:	8847      	ldrh	r7, [r0, #2]
 8025766:	d019      	beq.n	802579c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8025768:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802576c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025770:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025774:	fb08 f807 	mul.w	r8, r8, r7
 8025778:	fb0a fc0c 	mul.w	ip, sl, ip
 802577c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8025780:	f108 0b20 	add.w	fp, r8, #32
 8025784:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025788:	44bc      	add	ip, r7
 802578a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802578e:	0a3f      	lsrs	r7, r7, #8
 8025790:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025794:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025798:	ea4c 0707 	orr.w	r7, ip, r7
 802579c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80257a0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80257a4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80257a8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80257ac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80257b0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80257b4:	ea4c 0909 	orr.w	r9, ip, r9
 80257b8:	ea4a 0707 	orr.w	r7, sl, r7
 80257bc:	2d00      	cmp	r5, #0
 80257be:	f000 808b 	beq.w	80258d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 80257c2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80257c6:	3901      	subs	r1, #1
 80257c8:	0049      	lsls	r1, r1, #1
 80257ca:	3102      	adds	r1, #2
 80257cc:	eb00 0c01 	add.w	ip, r0, r1
 80257d0:	5a41      	ldrh	r1, [r0, r1]
 80257d2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80257d4:	28ff      	cmp	r0, #255	; 0xff
 80257d6:	d019      	beq.n	802580c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80257d8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80257da:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80257de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80257e2:	fb04 fa01 	mul.w	sl, r4, r1
 80257e6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80257ea:	fb08 f800 	mul.w	r8, r8, r0
 80257ee:	f10a 0020 	add.w	r0, sl, #32
 80257f2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80257f6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80257fa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80257fe:	4441      	add	r1, r8
 8025800:	0a00      	lsrs	r0, r0, #8
 8025802:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8025806:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802580a:	4301      	orrs	r1, r0
 802580c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802580e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8025812:	2cff      	cmp	r4, #255	; 0xff
 8025814:	d01a      	beq.n	802584c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8025816:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802581a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802581e:	fb04 fa00 	mul.w	sl, r4, r0
 8025822:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025826:	fb08 f80c 	mul.w	r8, r8, ip
 802582a:	f10a 0c20 	add.w	ip, sl, #32
 802582e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8025832:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8025836:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802583a:	4440      	add	r0, r8
 802583c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025840:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8025844:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025848:	ea40 000c 	orr.w	r0, r0, ip
 802584c:	fb15 fc02 	smulbb	ip, r5, r2
 8025850:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8025854:	f1c5 0810 	rsb	r8, r5, #16
 8025858:	eba8 0802 	sub.w	r8, r8, r2
 802585c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025860:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8025864:	437a      	muls	r2, r7
 8025866:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802586a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802586e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025872:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025876:	fb09 2208 	mla	r2, r9, r8, r2
 802587a:	ea4a 0101 	orr.w	r1, sl, r1
 802587e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8025882:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025886:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802588a:	fb05 2201 	mla	r2, r5, r1, r2
 802588e:	ea4b 0000 	orr.w	r0, fp, r0
 8025892:	fb0c 2200 	mla	r2, ip, r0, r2
 8025896:	0d57      	lsrs	r7, r2, #21
 8025898:	0952      	lsrs	r2, r2, #5
 802589a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802589e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80258a2:	433a      	orrs	r2, r7
 80258a4:	2bff      	cmp	r3, #255	; 0xff
 80258a6:	b292      	uxth	r2, r2
 80258a8:	d127      	bne.n	80258fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80258aa:	f8ae 2000 	strh.w	r2, [lr]
 80258ae:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80258b0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80258b2:	4413      	add	r3, r2
 80258b4:	9325      	str	r3, [sp, #148]	; 0x94
 80258b6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80258b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80258ba:	441a      	add	r2, r3
 80258bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80258be:	9226      	str	r2, [sp, #152]	; 0x98
 80258c0:	3b01      	subs	r3, #1
 80258c2:	f10e 0e02 	add.w	lr, lr, #2
 80258c6:	930f      	str	r3, [sp, #60]	; 0x3c
 80258c8:	e627      	b.n	802551a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80258ca:	fb08 f000 	mul.w	r0, r8, r0
 80258ce:	fb09 0303 	mla	r3, r9, r3, r0
 80258d2:	e71b      	b.n	802570c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80258d4:	46b9      	mov	r9, r7
 80258d6:	e743      	b.n	8025760 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80258d8:	f1c2 0110 	rsb	r1, r2, #16
 80258dc:	437a      	muls	r2, r7
 80258de:	fb09 2901 	mla	r9, r9, r1, r2
 80258e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80258e6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80258ea:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80258ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80258f2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80258f6:	4302      	orrs	r2, r0
 80258f8:	e7d4      	b.n	80258a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80258fa:	f8be 7000 	ldrh.w	r7, [lr]
 80258fe:	4c1d      	ldr	r4, [pc, #116]	; (8025974 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8025900:	43db      	mvns	r3, r3
 8025902:	1238      	asrs	r0, r7, #8
 8025904:	fa5f fc83 	uxtb.w	ip, r3
 8025908:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802590c:	10fd      	asrs	r5, r7, #3
 802590e:	fb00 f00c 	mul.w	r0, r0, ip
 8025912:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8025916:	fb05 f10c 	mul.w	r1, r5, ip
 802591a:	1c45      	adds	r5, r0, #1
 802591c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8025920:	1215      	asrs	r5, r2, #8
 8025922:	f025 0507 	bic.w	r5, r5, #7
 8025926:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802592a:	1c4d      	adds	r5, r1, #1
 802592c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8025930:	10d1      	asrs	r1, r2, #3
 8025932:	f021 0103 	bic.w	r1, r1, #3
 8025936:	00fb      	lsls	r3, r7, #3
 8025938:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802593c:	b2db      	uxtb	r3, r3
 802593e:	b2c0      	uxtb	r0, r0
 8025940:	00c9      	lsls	r1, r1, #3
 8025942:	fb03 f30c 	mul.w	r3, r3, ip
 8025946:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802594a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802594e:	4308      	orrs	r0, r1
 8025950:	1c59      	adds	r1, r3, #1
 8025952:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025956:	00d2      	lsls	r2, r2, #3
 8025958:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802595c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8025960:	4318      	orrs	r0, r3
 8025962:	f8ae 0000 	strh.w	r0, [lr]
 8025966:	e7a2      	b.n	80258ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8025968:	b013      	add	sp, #76	; 0x4c
 802596a:	ecbd 8b08 	vpop	{d8-d11}
 802596e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025972:	bf00      	nop
 8025974:	fffff800 	.word	0xfffff800

08025978 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8025978:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802597c:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8025980:	fb0c 4e03 	mla	lr, ip, r3, r4
 8025984:	f1bc 0f00 	cmp.w	ip, #0
 8025988:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802598c:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8025990:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8025994:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8025998:	8808      	ldrh	r0, [r1, #0]
 802599a:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 802599e:	db2f      	blt.n	8025a00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 80259a0:	45e2      	cmp	sl, ip
 80259a2:	dd2d      	ble.n	8025a00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 80259a4:	2c00      	cmp	r4, #0
 80259a6:	db29      	blt.n	80259fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80259a8:	42a3      	cmp	r3, r4
 80259aa:	dd27      	ble.n	80259fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80259ac:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 80259b0:	1c62      	adds	r2, r4, #1
 80259b2:	d428      	bmi.n	8025a06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80259b4:	4293      	cmp	r3, r2
 80259b6:	dd26      	ble.n	8025a06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80259b8:	b32f      	cbz	r7, 8025a06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80259ba:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 80259be:	f11c 0c01 	adds.w	ip, ip, #1
 80259c2:	d424      	bmi.n	8025a0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80259c4:	45e2      	cmp	sl, ip
 80259c6:	dd22      	ble.n	8025a0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80259c8:	2e00      	cmp	r6, #0
 80259ca:	f000 809d 	beq.w	8025b08 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 80259ce:	2c00      	cmp	r4, #0
 80259d0:	db1b      	blt.n	8025a0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80259d2:	42a3      	cmp	r3, r4
 80259d4:	dd19      	ble.n	8025a0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80259d6:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 80259da:	3401      	adds	r4, #1
 80259dc:	d41a      	bmi.n	8025a14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80259de:	42a3      	cmp	r3, r4
 80259e0:	dd18      	ble.n	8025a14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80259e2:	b1cf      	cbz	r7, 8025a18 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 80259e4:	3301      	adds	r3, #1
 80259e6:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 80259ea:	2f0f      	cmp	r7, #15
 80259ec:	d915      	bls.n	8025a1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 80259ee:	4b49      	ldr	r3, [pc, #292]	; (8025b14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 80259f0:	4a49      	ldr	r2, [pc, #292]	; (8025b18 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 80259f2:	484a      	ldr	r0, [pc, #296]	; (8025b1c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 80259f4:	f240 11db 	movw	r1, #475	; 0x1db
 80259f8:	f006 fae4 	bl	802bfc4 <__assert_func>
 80259fc:	4681      	mov	r9, r0
 80259fe:	e7d7      	b.n	80259b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8025a00:	4686      	mov	lr, r0
 8025a02:	4681      	mov	r9, r0
 8025a04:	e7db      	b.n	80259be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8025a06:	4686      	mov	lr, r0
 8025a08:	e7d9      	b.n	80259be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8025a0a:	4684      	mov	ip, r0
 8025a0c:	e7e5      	b.n	80259da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8025a0e:	4603      	mov	r3, r0
 8025a10:	4684      	mov	ip, r0
 8025a12:	e7ea      	b.n	80259ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8025a14:	4603      	mov	r3, r0
 8025a16:	e7e8      	b.n	80259ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8025a18:	4603      	mov	r3, r0
 8025a1a:	2e0f      	cmp	r6, #15
 8025a1c:	d8e7      	bhi.n	80259ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8025a1e:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8025a22:	fb17 f806 	smulbb	r8, r7, r6
 8025a26:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025a2a:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8025a2e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025a32:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8025a36:	ea44 0909 	orr.w	r9, r4, r9
 8025a3a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025a3e:	f1c6 0410 	rsb	r4, r6, #16
 8025a42:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025a46:	1be4      	subs	r4, r4, r7
 8025a48:	041a      	lsls	r2, r3, #16
 8025a4a:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8025a4e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8025a52:	fb07 fe0e 	mul.w	lr, r7, lr
 8025a56:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025a5a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8025a5e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8025a62:	fb04 e409 	mla	r4, r4, r9, lr
 8025a66:	4313      	orrs	r3, r2
 8025a68:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8025a6c:	fb08 4303 	mla	r3, r8, r3, r4
 8025a70:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025a74:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8025a78:	4322      	orrs	r2, r4
 8025a7a:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8025a7e:	fb06 3202 	mla	r2, r6, r2, r3
 8025a82:	0d53      	lsrs	r3, r2, #21
 8025a84:	0952      	lsrs	r2, r2, #5
 8025a86:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025a8a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025a8e:	431a      	orrs	r2, r3
 8025a90:	b293      	uxth	r3, r2
 8025a92:	b2af      	uxth	r7, r5
 8025a94:	1202      	asrs	r2, r0, #8
 8025a96:	43ed      	mvns	r5, r5
 8025a98:	b2ed      	uxtb	r5, r5
 8025a9a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8025a9e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025aa2:	fb12 f205 	smulbb	r2, r2, r5
 8025aa6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025aaa:	fb0c 2c07 	mla	ip, ip, r7, r2
 8025aae:	00dc      	lsls	r4, r3, #3
 8025ab0:	10da      	asrs	r2, r3, #3
 8025ab2:	10c6      	asrs	r6, r0, #3
 8025ab4:	00c3      	lsls	r3, r0, #3
 8025ab6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8025aba:	b2db      	uxtb	r3, r3
 8025abc:	fb16 f605 	smulbb	r6, r6, r5
 8025ac0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025ac4:	b2e4      	uxtb	r4, r4
 8025ac6:	fb13 f305 	smulbb	r3, r3, r5
 8025aca:	fa1f fc8c 	uxth.w	ip, ip
 8025ace:	fb02 6207 	mla	r2, r2, r7, r6
 8025ad2:	fb04 3307 	mla	r3, r4, r7, r3
 8025ad6:	b296      	uxth	r6, r2
 8025ad8:	b29a      	uxth	r2, r3
 8025ada:	f10c 0301 	add.w	r3, ip, #1
 8025ade:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8025ae2:	1c53      	adds	r3, r2, #1
 8025ae4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025ae8:	1c72      	adds	r2, r6, #1
 8025aea:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8025aee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8025af2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025af6:	0952      	lsrs	r2, r2, #5
 8025af8:	ea43 030c 	orr.w	r3, r3, ip
 8025afc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025b00:	4313      	orrs	r3, r2
 8025b02:	800b      	strh	r3, [r1, #0]
 8025b04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025b08:	2f0f      	cmp	r7, #15
 8025b0a:	f63f af70 	bhi.w	80259ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8025b0e:	4603      	mov	r3, r0
 8025b10:	4684      	mov	ip, r0
 8025b12:	e784      	b.n	8025a1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8025b14:	08035bf7 	.word	0x08035bf7
 8025b18:	080361cf 	.word	0x080361cf
 8025b1c:	08035bc4 	.word	0x08035bc4

08025b20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025b20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025b24:	ed2d 8b08 	vpush	{d8-d11}
 8025b28:	b093      	sub	sp, #76	; 0x4c
 8025b2a:	461d      	mov	r5, r3
 8025b2c:	9210      	str	r2, [sp, #64]	; 0x40
 8025b2e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8025b30:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8025b34:	920b      	str	r2, [sp, #44]	; 0x2c
 8025b36:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8025b3a:	910a      	str	r1, [sp, #40]	; 0x28
 8025b3c:	6859      	ldr	r1, [r3, #4]
 8025b3e:	681b      	ldr	r3, [r3, #0]
 8025b40:	9011      	str	r0, [sp, #68]	; 0x44
 8025b42:	fb01 2707 	mla	r7, r1, r7, r2
 8025b46:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8025b4a:	9307      	str	r3, [sp, #28]
 8025b4c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025b4e:	681b      	ldr	r3, [r3, #0]
 8025b50:	9309      	str	r3, [sp, #36]	; 0x24
 8025b52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8025b54:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8025b58:	43db      	mvns	r3, r3
 8025b5a:	b2db      	uxtb	r3, r3
 8025b5c:	eeb0 aa40 	vmov.f32	s20, s0
 8025b60:	eef0 9a60 	vmov.f32	s19, s1
 8025b64:	eeb0 9a41 	vmov.f32	s18, s2
 8025b68:	eeb0 8a62 	vmov.f32	s16, s5
 8025b6c:	eef0 8a43 	vmov.f32	s17, s6
 8025b70:	eef0 ba44 	vmov.f32	s23, s8
 8025b74:	eeb0 ba64 	vmov.f32	s22, s9
 8025b78:	eef0 aa45 	vmov.f32	s21, s10
 8025b7c:	9308      	str	r3, [sp, #32]
 8025b7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025b80:	2b00      	cmp	r3, #0
 8025b82:	dc03      	bgt.n	8025b8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025b84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8025b86:	2b00      	cmp	r3, #0
 8025b88:	f340 8203 	ble.w	8025f92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8025b8c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025b8e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025b92:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025b96:	1e48      	subs	r0, r1, #1
 8025b98:	f102 3cff 	add.w	ip, r2, #4294967295
 8025b9c:	2d00      	cmp	r5, #0
 8025b9e:	f340 80da 	ble.w	8025d56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8025ba2:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025ba6:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025baa:	d406      	bmi.n	8025bba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8025bac:	4586      	cmp	lr, r0
 8025bae:	da04      	bge.n	8025bba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8025bb0:	2b00      	cmp	r3, #0
 8025bb2:	db02      	blt.n	8025bba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8025bb4:	4563      	cmp	r3, ip
 8025bb6:	f2c0 80cf 	blt.w	8025d58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8025bba:	f11e 0e01 	adds.w	lr, lr, #1
 8025bbe:	f100 80c1 	bmi.w	8025d44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8025bc2:	4571      	cmp	r1, lr
 8025bc4:	f2c0 80be 	blt.w	8025d44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8025bc8:	3301      	adds	r3, #1
 8025bca:	f100 80bb 	bmi.w	8025d44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8025bce:	429a      	cmp	r2, r3
 8025bd0:	f2c0 80b8 	blt.w	8025d44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8025bd4:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8025bd8:	46a9      	mov	r9, r5
 8025bda:	f1b9 0f00 	cmp.w	r9, #0
 8025bde:	f340 80d8 	ble.w	8025d92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8025be2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025be4:	1421      	asrs	r1, r4, #16
 8025be6:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025bea:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025bee:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8025bf2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8025bf6:	f100 8111 	bmi.w	8025e1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8025bfa:	f10e 3aff 	add.w	sl, lr, #4294967295
 8025bfe:	4551      	cmp	r1, sl
 8025c00:	f280 810c 	bge.w	8025e1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8025c04:	2800      	cmp	r0, #0
 8025c06:	f2c0 8109 	blt.w	8025e1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8025c0a:	f103 3aff 	add.w	sl, r3, #4294967295
 8025c0e:	4550      	cmp	r0, sl
 8025c10:	f280 8104 	bge.w	8025e1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8025c14:	fa0f f38e 	sxth.w	r3, lr
 8025c18:	fb00 1103 	mla	r1, r0, r3, r1
 8025c1c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8025c1e:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8025c22:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8025c26:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8025c2a:	f1bc 0f00 	cmp.w	ip, #0
 8025c2e:	d007      	beq.n	8025c40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8025c30:	005b      	lsls	r3, r3, #1
 8025c32:	eb0a 0003 	add.w	r0, sl, r3
 8025c36:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8025c3a:	930c      	str	r3, [sp, #48]	; 0x30
 8025c3c:	8843      	ldrh	r3, [r0, #2]
 8025c3e:	930d      	str	r3, [sp, #52]	; 0x34
 8025c40:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8025c44:	fb12 f30c 	smulbb	r3, r2, ip
 8025c48:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025c4c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025c50:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025c54:	10db      	asrs	r3, r3, #3
 8025c56:	ea40 000e 	orr.w	r0, r0, lr
 8025c5a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c5e:	f1cc 0e10 	rsb	lr, ip, #16
 8025c62:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025c66:	ebae 0e02 	sub.w	lr, lr, r2
 8025c6a:	ea4a 0101 	orr.w	r1, sl, r1
 8025c6e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025c72:	4351      	muls	r1, r2
 8025c74:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8025c76:	9f08      	ldr	r7, [sp, #32]
 8025c78:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8025c7c:	fb0e 1e00 	mla	lr, lr, r0, r1
 8025c80:	0410      	lsls	r0, r2, #16
 8025c82:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025c86:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025c8a:	4310      	orrs	r0, r2
 8025c8c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025c8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025c90:	0412      	lsls	r2, r2, #16
 8025c92:	fb03 e000 	mla	r0, r3, r0, lr
 8025c96:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025c9a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8025c9e:	ea42 020e 	orr.w	r2, r2, lr
 8025ca2:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8025ca6:	fb03 0302 	mla	r3, r3, r2, r0
 8025caa:	0d5a      	lsrs	r2, r3, #21
 8025cac:	095b      	lsrs	r3, r3, #5
 8025cae:	f8b8 0000 	ldrh.w	r0, [r8]
 8025cb2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025cb6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8025cba:	4313      	orrs	r3, r2
 8025cbc:	b29b      	uxth	r3, r3
 8025cbe:	1201      	asrs	r1, r0, #8
 8025cc0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8025cc4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8025cc8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025ccc:	fb11 f107 	smulbb	r1, r1, r7
 8025cd0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8025cd4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025cd8:	00c0      	lsls	r0, r0, #3
 8025cda:	fb0c 1c02 	mla	ip, ip, r2, r1
 8025cde:	b2c0      	uxtb	r0, r0
 8025ce0:	10d9      	asrs	r1, r3, #3
 8025ce2:	00db      	lsls	r3, r3, #3
 8025ce4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8025ce8:	b2db      	uxtb	r3, r3
 8025cea:	fb10 f007 	smulbb	r0, r0, r7
 8025cee:	fa1f fc8c 	uxth.w	ip, ip
 8025cf2:	fb03 0302 	mla	r3, r3, r2, r0
 8025cf6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025cfa:	fb1e fe07 	smulbb	lr, lr, r7
 8025cfe:	fb01 e102 	mla	r1, r1, r2, lr
 8025d02:	b29a      	uxth	r2, r3
 8025d04:	f10c 0301 	add.w	r3, ip, #1
 8025d08:	b289      	uxth	r1, r1
 8025d0a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8025d0e:	1c53      	adds	r3, r2, #1
 8025d10:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025d14:	1c4a      	adds	r2, r1, #1
 8025d16:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025d1a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8025d1e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025d22:	0949      	lsrs	r1, r1, #5
 8025d24:	ea43 030c 	orr.w	r3, r3, ip
 8025d28:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025d2c:	430b      	orrs	r3, r1
 8025d2e:	f8a8 3000 	strh.w	r3, [r8]
 8025d32:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025d34:	441c      	add	r4, r3
 8025d36:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025d38:	f108 0802 	add.w	r8, r8, #2
 8025d3c:	441e      	add	r6, r3
 8025d3e:	f109 39ff 	add.w	r9, r9, #4294967295
 8025d42:	e74a      	b.n	8025bda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8025d44:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025d46:	441c      	add	r4, r3
 8025d48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025d4a:	441e      	add	r6, r3
 8025d4c:	9b07      	ldr	r3, [sp, #28]
 8025d4e:	3302      	adds	r3, #2
 8025d50:	3d01      	subs	r5, #1
 8025d52:	9307      	str	r3, [sp, #28]
 8025d54:	e722      	b.n	8025b9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025d56:	d022      	beq.n	8025d9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8025d58:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8025d5a:	1e6b      	subs	r3, r5, #1
 8025d5c:	fb00 4003 	mla	r0, r0, r3, r4
 8025d60:	1400      	asrs	r0, r0, #16
 8025d62:	f53f af37 	bmi.w	8025bd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8025d66:	3901      	subs	r1, #1
 8025d68:	4288      	cmp	r0, r1
 8025d6a:	f6bf af33 	bge.w	8025bd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8025d6e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8025d70:	fb01 6303 	mla	r3, r1, r3, r6
 8025d74:	141b      	asrs	r3, r3, #16
 8025d76:	f53f af2d 	bmi.w	8025bd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8025d7a:	3a01      	subs	r2, #1
 8025d7c:	4293      	cmp	r3, r2
 8025d7e:	f6bf af29 	bge.w	8025bd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8025d82:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8025d86:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8025d8a:	46a8      	mov	r8, r5
 8025d8c:	f1b8 0f00 	cmp.w	r8, #0
 8025d90:	dc5e      	bgt.n	8025e50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025d92:	9b07      	ldr	r3, [sp, #28]
 8025d94:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025d98:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025d9c:	9307      	str	r3, [sp, #28]
 8025d9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025da0:	2b00      	cmp	r3, #0
 8025da2:	f340 80f6 	ble.w	8025f92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8025da6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8025daa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025dae:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8025db2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025db4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8025db8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8025dbc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8025dc0:	eef0 6a48 	vmov.f32	s13, s16
 8025dc4:	ee69 7a27 	vmul.f32	s15, s18, s15
 8025dc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025dcc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8025dd0:	ee16 4a90 	vmov	r4, s13
 8025dd4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8025dd8:	eef0 6a68 	vmov.f32	s13, s17
 8025ddc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8025de0:	ee18 2a10 	vmov	r2, s16
 8025de4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8025de8:	fb92 f3f3 	sdiv	r3, r2, r3
 8025dec:	ee18 2a90 	vmov	r2, s17
 8025df0:	9327      	str	r3, [sp, #156]	; 0x9c
 8025df2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025df4:	fb92 f3f3 	sdiv	r3, r2, r3
 8025df8:	9328      	str	r3, [sp, #160]	; 0xa0
 8025dfa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025dfc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025dfe:	3b01      	subs	r3, #1
 8025e00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025e04:	930a      	str	r3, [sp, #40]	; 0x28
 8025e06:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e08:	ee16 6a90 	vmov	r6, s13
 8025e0c:	bf14      	ite	ne
 8025e0e:	461d      	movne	r5, r3
 8025e10:	4615      	moveq	r5, r2
 8025e12:	eef0 8a67 	vmov.f32	s17, s15
 8025e16:	eeb0 8a47 	vmov.f32	s16, s14
 8025e1a:	e6b0      	b.n	8025b7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8025e1c:	f111 0a01 	adds.w	sl, r1, #1
 8025e20:	d487      	bmi.n	8025d32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8025e22:	45d6      	cmp	lr, sl
 8025e24:	db85      	blt.n	8025d32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8025e26:	f110 0a01 	adds.w	sl, r0, #1
 8025e2a:	d482      	bmi.n	8025d32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8025e2c:	4553      	cmp	r3, sl
 8025e2e:	db80      	blt.n	8025d32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8025e30:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8025e32:	9101      	str	r1, [sp, #4]
 8025e34:	b21b      	sxth	r3, r3
 8025e36:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8025e3a:	9300      	str	r3, [sp, #0]
 8025e3c:	e9cd c704 	strd	ip, r7, [sp, #16]
 8025e40:	fa0f f38e 	sxth.w	r3, lr
 8025e44:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025e46:	9811      	ldr	r0, [sp, #68]	; 0x44
 8025e48:	4641      	mov	r1, r8
 8025e4a:	f7ff fd95 	bl	8025978 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8025e4e:	e770      	b.n	8025d32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8025e50:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025e52:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8025e54:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025e58:	1430      	asrs	r0, r6, #16
 8025e5a:	1423      	asrs	r3, r4, #16
 8025e5c:	fb01 3000 	mla	r0, r1, r0, r3
 8025e60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e62:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8025e66:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8025e6a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8025e6e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025e72:	8858      	ldrh	r0, [r3, #2]
 8025e74:	f1be 0f00 	cmp.w	lr, #0
 8025e78:	d00b      	beq.n	8025e92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8025e7a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8025e7e:	3901      	subs	r1, #1
 8025e80:	0049      	lsls	r1, r1, #1
 8025e82:	3102      	adds	r1, #2
 8025e84:	eb03 0b01 	add.w	fp, r3, r1
 8025e88:	5a5b      	ldrh	r3, [r3, r1]
 8025e8a:	930e      	str	r3, [sp, #56]	; 0x38
 8025e8c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8025e90:	930f      	str	r3, [sp, #60]	; 0x3c
 8025e92:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8025e96:	fb12 f30e 	smulbb	r3, r2, lr
 8025e9a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8025e9e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025ea2:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8025ea6:	10db      	asrs	r3, r3, #3
 8025ea8:	ea41 010c 	orr.w	r1, r1, ip
 8025eac:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025eb0:	f1ce 0c10 	rsb	ip, lr, #16
 8025eb4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025eb8:	ebac 0c02 	sub.w	ip, ip, r2
 8025ebc:	ea4b 0000 	orr.w	r0, fp, r0
 8025ec0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025ec4:	4350      	muls	r0, r2
 8025ec6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025ec8:	9f08      	ldr	r7, [sp, #32]
 8025eca:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8025ece:	fb0c 0c01 	mla	ip, ip, r1, r0
 8025ed2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8025ed6:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8025eda:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8025edc:	980e      	ldr	r0, [sp, #56]	; 0x38
 8025ede:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025ee2:	0412      	lsls	r2, r2, #16
 8025ee4:	ea4b 0101 	orr.w	r1, fp, r1
 8025ee8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025eec:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025ef0:	fb03 c101 	mla	r1, r3, r1, ip
 8025ef4:	4302      	orrs	r2, r0
 8025ef6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8025efa:	fb03 1202 	mla	r2, r3, r2, r1
 8025efe:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8025f02:	0952      	lsrs	r2, r2, #5
 8025f04:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8025f08:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8025f0c:	f8b9 2000 	ldrh.w	r2, [r9]
 8025f10:	ea4b 0303 	orr.w	r3, fp, r3
 8025f14:	b29b      	uxth	r3, r3
 8025f16:	1211      	asrs	r1, r2, #8
 8025f18:	1218      	asrs	r0, r3, #8
 8025f1a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025f1e:	fb11 f107 	smulbb	r1, r1, r7
 8025f22:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8025f26:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025f2a:	00d2      	lsls	r2, r2, #3
 8025f2c:	fb00 100a 	mla	r0, r0, sl, r1
 8025f30:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8025f34:	10d9      	asrs	r1, r3, #3
 8025f36:	b2d2      	uxtb	r2, r2
 8025f38:	00db      	lsls	r3, r3, #3
 8025f3a:	fb1c fc07 	smulbb	ip, ip, r7
 8025f3e:	fb12 f207 	smulbb	r2, r2, r7
 8025f42:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025f46:	b2db      	uxtb	r3, r3
 8025f48:	b280      	uxth	r0, r0
 8025f4a:	fb01 c10a 	mla	r1, r1, sl, ip
 8025f4e:	fb03 230a 	mla	r3, r3, sl, r2
 8025f52:	b29b      	uxth	r3, r3
 8025f54:	b289      	uxth	r1, r1
 8025f56:	1c42      	adds	r2, r0, #1
 8025f58:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025f5c:	f101 0c01 	add.w	ip, r1, #1
 8025f60:	1c5a      	adds	r2, r3, #1
 8025f62:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025f66:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8025f6a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025f6c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025f70:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8025f74:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025f78:	4310      	orrs	r0, r2
 8025f7a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025f7e:	441c      	add	r4, r3
 8025f80:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025f82:	ea40 000c 	orr.w	r0, r0, ip
 8025f86:	f829 0b02 	strh.w	r0, [r9], #2
 8025f8a:	441e      	add	r6, r3
 8025f8c:	f108 38ff 	add.w	r8, r8, #4294967295
 8025f90:	e6fc      	b.n	8025d8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8025f92:	b013      	add	sp, #76	; 0x4c
 8025f94:	ecbd 8b08 	vpop	{d8-d11}
 8025f98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025f9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8025f9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025fa0:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8025fa4:	fb06 5c03 	mla	ip, r6, r3, r5
 8025fa8:	2e00      	cmp	r6, #0
 8025faa:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8025fae:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8025fb2:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8025fb6:	8808      	ldrh	r0, [r1, #0]
 8025fb8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8025fbc:	db2e      	blt.n	802601c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8025fbe:	45b0      	cmp	r8, r6
 8025fc0:	dd2c      	ble.n	802601c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8025fc2:	2d00      	cmp	r5, #0
 8025fc4:	db28      	blt.n	8026018 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8025fc6:	42ab      	cmp	r3, r5
 8025fc8:	dd26      	ble.n	8026018 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8025fca:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8025fce:	1c6a      	adds	r2, r5, #1
 8025fd0:	d427      	bmi.n	8026022 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8025fd2:	4293      	cmp	r3, r2
 8025fd4:	dd25      	ble.n	8026022 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8025fd6:	b324      	cbz	r4, 8026022 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8025fd8:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8025fdc:	3601      	adds	r6, #1
 8025fde:	d424      	bmi.n	802602a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8025fe0:	45b0      	cmp	r8, r6
 8025fe2:	dd22      	ble.n	802602a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8025fe4:	b31f      	cbz	r7, 802602e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8025fe6:	2d00      	cmp	r5, #0
 8025fe8:	db1d      	blt.n	8026026 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8025fea:	42ab      	cmp	r3, r5
 8025fec:	dd1b      	ble.n	8026026 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8025fee:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8025ff2:	3501      	adds	r5, #1
 8025ff4:	d405      	bmi.n	8026002 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8025ff6:	42ab      	cmp	r3, r5
 8025ff8:	dd03      	ble.n	8026002 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8025ffa:	b124      	cbz	r4, 8026006 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8025ffc:	3301      	adds	r3, #1
 8025ffe:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8026002:	2c0f      	cmp	r4, #15
 8026004:	d801      	bhi.n	802600a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026006:	2f0f      	cmp	r7, #15
 8026008:	d914      	bls.n	8026034 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 802600a:	4b27      	ldr	r3, [pc, #156]	; (80260a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 802600c:	4a27      	ldr	r2, [pc, #156]	; (80260ac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 802600e:	4828      	ldr	r0, [pc, #160]	; (80260b0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8026010:	f240 11db 	movw	r1, #475	; 0x1db
 8026014:	f005 ffd6 	bl	802bfc4 <__assert_func>
 8026018:	4684      	mov	ip, r0
 802601a:	e7d8      	b.n	8025fce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 802601c:	4602      	mov	r2, r0
 802601e:	4684      	mov	ip, r0
 8026020:	e7dc      	b.n	8025fdc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8026022:	4602      	mov	r2, r0
 8026024:	e7da      	b.n	8025fdc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8026026:	4606      	mov	r6, r0
 8026028:	e7e3      	b.n	8025ff2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 802602a:	4606      	mov	r6, r0
 802602c:	e7e9      	b.n	8026002 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 802602e:	2c0f      	cmp	r4, #15
 8026030:	d8eb      	bhi.n	802600a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026032:	4606      	mov	r6, r0
 8026034:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8026038:	fb14 f307 	smulbb	r3, r4, r7
 802603c:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8026040:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8026044:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026048:	10db      	asrs	r3, r3, #3
 802604a:	ea45 0c0c 	orr.w	ip, r5, ip
 802604e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026052:	f1c7 0510 	rsb	r5, r7, #16
 8026056:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802605a:	1b2d      	subs	r5, r5, r4
 802605c:	ea4e 0202 	orr.w	r2, lr, r2
 8026060:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8026064:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8026068:	4354      	muls	r4, r2
 802606a:	fb05 450c 	mla	r5, r5, ip, r4
 802606e:	0404      	lsls	r4, r0, #16
 8026070:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026074:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026078:	4320      	orrs	r0, r4
 802607a:	fb03 5400 	mla	r4, r3, r0, r5
 802607e:	0430      	lsls	r0, r6, #16
 8026080:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026084:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8026088:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 802608c:	4330      	orrs	r0, r6
 802608e:	fb07 4000 	mla	r0, r7, r0, r4
 8026092:	0d43      	lsrs	r3, r0, #21
 8026094:	0940      	lsrs	r0, r0, #5
 8026096:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802609a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802609e:	4318      	orrs	r0, r3
 80260a0:	8008      	strh	r0, [r1, #0]
 80260a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80260a6:	bf00      	nop
 80260a8:	08035bf7 	.word	0x08035bf7
 80260ac:	080361cf 	.word	0x080361cf
 80260b0:	08035bc4 	.word	0x08035bc4

080260b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80260b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80260b8:	ed2d 8b08 	vpush	{d8-d11}
 80260bc:	b08f      	sub	sp, #60	; 0x3c
 80260be:	461d      	mov	r5, r3
 80260c0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80260c2:	920c      	str	r2, [sp, #48]	; 0x30
 80260c4:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 80260c8:	9107      	str	r1, [sp, #28]
 80260ca:	6859      	ldr	r1, [r3, #4]
 80260cc:	681b      	ldr	r3, [r3, #0]
 80260ce:	900d      	str	r0, [sp, #52]	; 0x34
 80260d0:	fb01 2707 	mla	r7, r1, r7, r2
 80260d4:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80260d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80260da:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80260de:	f8d3 8000 	ldr.w	r8, [r3]
 80260e2:	eeb0 aa40 	vmov.f32	s20, s0
 80260e6:	eef0 9a60 	vmov.f32	s19, s1
 80260ea:	eeb0 9a41 	vmov.f32	s18, s2
 80260ee:	eeb0 8a62 	vmov.f32	s16, s5
 80260f2:	eef0 8a43 	vmov.f32	s17, s6
 80260f6:	eef0 ba44 	vmov.f32	s23, s8
 80260fa:	eeb0 ba64 	vmov.f32	s22, s9
 80260fe:	eef0 aa45 	vmov.f32	s21, s10
 8026102:	9b07      	ldr	r3, [sp, #28]
 8026104:	2b00      	cmp	r3, #0
 8026106:	dc03      	bgt.n	8026110 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8026108:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802610a:	2b00      	cmp	r3, #0
 802610c:	f340 8181 	ble.w	8026412 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8026110:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026112:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026116:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802611a:	1e48      	subs	r0, r1, #1
 802611c:	f102 3cff 	add.w	ip, r2, #4294967295
 8026120:	2d00      	cmp	r5, #0
 8026122:	f340 809b 	ble.w	802625c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8026126:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802612a:	ea4f 4326 	mov.w	r3, r6, asr #16
 802612e:	d406      	bmi.n	802613e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026130:	4586      	cmp	lr, r0
 8026132:	da04      	bge.n	802613e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026134:	2b00      	cmp	r3, #0
 8026136:	db02      	blt.n	802613e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026138:	4563      	cmp	r3, ip
 802613a:	f2c0 8090 	blt.w	802625e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802613e:	f11e 0e01 	adds.w	lr, lr, #1
 8026142:	f100 8084 	bmi.w	802624e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8026146:	4571      	cmp	r1, lr
 8026148:	f2c0 8081 	blt.w	802624e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802614c:	3301      	adds	r3, #1
 802614e:	d47e      	bmi.n	802624e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8026150:	429a      	cmp	r2, r3
 8026152:	db7c      	blt.n	802624e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8026154:	46aa      	mov	sl, r5
 8026156:	46b9      	mov	r9, r7
 8026158:	f1ba 0f00 	cmp.w	sl, #0
 802615c:	f340 8099 	ble.w	8026292 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8026160:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026162:	1421      	asrs	r1, r4, #16
 8026164:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026168:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802616c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026170:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026174:	f100 80d0 	bmi.w	8026318 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8026178:	f10e 3bff 	add.w	fp, lr, #4294967295
 802617c:	4559      	cmp	r1, fp
 802617e:	f280 80cb 	bge.w	8026318 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8026182:	2800      	cmp	r0, #0
 8026184:	f2c0 80c8 	blt.w	8026318 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8026188:	f103 3bff 	add.w	fp, r3, #4294967295
 802618c:	4558      	cmp	r0, fp
 802618e:	f280 80c3 	bge.w	8026318 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8026192:	fa0f fe8e 	sxth.w	lr, lr
 8026196:	fb00 110e 	mla	r1, r0, lr, r1
 802619a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802619e:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80261a2:	8841      	ldrh	r1, [r0, #2]
 80261a4:	f1bc 0f00 	cmp.w	ip, #0
 80261a8:	d00b      	beq.n	80261c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80261aa:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80261ae:	3b01      	subs	r3, #1
 80261b0:	005b      	lsls	r3, r3, #1
 80261b2:	3302      	adds	r3, #2
 80261b4:	eb00 0e03 	add.w	lr, r0, r3
 80261b8:	5ac3      	ldrh	r3, [r0, r3]
 80261ba:	9308      	str	r3, [sp, #32]
 80261bc:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80261c0:	9309      	str	r3, [sp, #36]	; 0x24
 80261c2:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80261c6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80261ca:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80261ce:	ea40 000b 	orr.w	r0, r0, fp
 80261d2:	fb12 f30c 	smulbb	r3, r2, ip
 80261d6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80261da:	10db      	asrs	r3, r3, #3
 80261dc:	f1cc 0e10 	rsb	lr, ip, #16
 80261e0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80261e4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80261e8:	ebae 0e02 	sub.w	lr, lr, r2
 80261ec:	ea4b 0101 	orr.w	r1, fp, r1
 80261f0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80261f4:	4351      	muls	r1, r2
 80261f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80261f8:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80261fc:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026200:	0410      	lsls	r0, r2, #16
 8026202:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026206:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802620a:	4310      	orrs	r0, r2
 802620c:	9a08      	ldr	r2, [sp, #32]
 802620e:	9908      	ldr	r1, [sp, #32]
 8026210:	0412      	lsls	r2, r2, #16
 8026212:	fb03 e000 	mla	r0, r3, r0, lr
 8026216:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802621a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802621e:	ea42 020e 	orr.w	r2, r2, lr
 8026222:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026226:	fb03 0302 	mla	r3, r3, r2, r0
 802622a:	0d5a      	lsrs	r2, r3, #21
 802622c:	095b      	lsrs	r3, r3, #5
 802622e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026232:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026236:	4313      	orrs	r3, r2
 8026238:	f8a9 3000 	strh.w	r3, [r9]
 802623c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802623e:	441c      	add	r4, r3
 8026240:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026242:	f109 0902 	add.w	r9, r9, #2
 8026246:	441e      	add	r6, r3
 8026248:	f10a 3aff 	add.w	sl, sl, #4294967295
 802624c:	e784      	b.n	8026158 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802624e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026250:	441c      	add	r4, r3
 8026252:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026254:	3d01      	subs	r5, #1
 8026256:	441e      	add	r6, r3
 8026258:	3702      	adds	r7, #2
 802625a:	e761      	b.n	8026120 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802625c:	d01d      	beq.n	802629a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 802625e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8026260:	1e6b      	subs	r3, r5, #1
 8026262:	fb00 4003 	mla	r0, r0, r3, r4
 8026266:	1400      	asrs	r0, r0, #16
 8026268:	f53f af74 	bmi.w	8026154 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802626c:	3901      	subs	r1, #1
 802626e:	4288      	cmp	r0, r1
 8026270:	f6bf af70 	bge.w	8026154 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8026274:	9924      	ldr	r1, [sp, #144]	; 0x90
 8026276:	fb01 6303 	mla	r3, r1, r3, r6
 802627a:	141b      	asrs	r3, r3, #16
 802627c:	f53f af6a 	bmi.w	8026154 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8026280:	3a01      	subs	r2, #1
 8026282:	4293      	cmp	r3, r2
 8026284:	f6bf af66 	bge.w	8026154 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8026288:	46a9      	mov	r9, r5
 802628a:	46ba      	mov	sl, r7
 802628c:	f1b9 0f00 	cmp.w	r9, #0
 8026290:	dc5a      	bgt.n	8026348 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8026292:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026296:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802629a:	9b07      	ldr	r3, [sp, #28]
 802629c:	2b00      	cmp	r3, #0
 802629e:	f340 80b8 	ble.w	8026412 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80262a2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80262a6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80262aa:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80262ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80262b0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80262b4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80262b8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80262bc:	eef0 6a48 	vmov.f32	s13, s16
 80262c0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80262c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80262c8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80262cc:	ee16 4a90 	vmov	r4, s13
 80262d0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80262d4:	eef0 6a68 	vmov.f32	s13, s17
 80262d8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80262dc:	ee18 2a10 	vmov	r2, s16
 80262e0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80262e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80262e8:	ee18 2a90 	vmov	r2, s17
 80262ec:	9323      	str	r3, [sp, #140]	; 0x8c
 80262ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80262f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80262f4:	9324      	str	r3, [sp, #144]	; 0x90
 80262f6:	9b07      	ldr	r3, [sp, #28]
 80262f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80262fa:	3b01      	subs	r3, #1
 80262fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026300:	9307      	str	r3, [sp, #28]
 8026302:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026304:	ee16 6a90 	vmov	r6, s13
 8026308:	bf14      	ite	ne
 802630a:	461d      	movne	r5, r3
 802630c:	4615      	moveq	r5, r2
 802630e:	eef0 8a67 	vmov.f32	s17, s15
 8026312:	eeb0 8a47 	vmov.f32	s16, s14
 8026316:	e6f4      	b.n	8026102 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8026318:	f111 0b01 	adds.w	fp, r1, #1
 802631c:	d48e      	bmi.n	802623c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802631e:	45de      	cmp	lr, fp
 8026320:	db8c      	blt.n	802623c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8026322:	f110 0b01 	adds.w	fp, r0, #1
 8026326:	d489      	bmi.n	802623c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8026328:	455b      	cmp	r3, fp
 802632a:	db87      	blt.n	802623c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802632c:	b21b      	sxth	r3, r3
 802632e:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8026332:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8026336:	9300      	str	r3, [sp, #0]
 8026338:	4642      	mov	r2, r8
 802633a:	fa0f f38e 	sxth.w	r3, lr
 802633e:	4649      	mov	r1, r9
 8026340:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026342:	f7ff fe2b 	bl	8025f9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8026346:	e779      	b.n	802623c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8026348:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802634a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802634e:	1420      	asrs	r0, r4, #16
 8026350:	1431      	asrs	r1, r6, #16
 8026352:	fb03 0101 	mla	r1, r3, r1, r0
 8026356:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802635a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802635e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8026362:	8841      	ldrh	r1, [r0, #2]
 8026364:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026368:	f1be 0f00 	cmp.w	lr, #0
 802636c:	d00b      	beq.n	8026386 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 802636e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8026372:	3b01      	subs	r3, #1
 8026374:	005b      	lsls	r3, r3, #1
 8026376:	3302      	adds	r3, #2
 8026378:	eb00 0b03 	add.w	fp, r0, r3
 802637c:	5ac3      	ldrh	r3, [r0, r3]
 802637e:	930a      	str	r3, [sp, #40]	; 0x28
 8026380:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026384:	930b      	str	r3, [sp, #44]	; 0x2c
 8026386:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802638a:	fb12 f30e 	smulbb	r3, r2, lr
 802638e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026392:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026396:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802639a:	10db      	asrs	r3, r3, #3
 802639c:	ea40 000c 	orr.w	r0, r0, ip
 80263a0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80263a4:	f1ce 0c10 	rsb	ip, lr, #16
 80263a8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80263ac:	ebac 0c02 	sub.w	ip, ip, r2
 80263b0:	ea4b 0101 	orr.w	r1, fp, r1
 80263b4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80263b8:	4351      	muls	r1, r2
 80263ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80263bc:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80263c0:	fb0c 1c00 	mla	ip, ip, r0, r1
 80263c4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80263c8:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80263cc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80263ce:	990a      	ldr	r1, [sp, #40]	; 0x28
 80263d0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80263d4:	0412      	lsls	r2, r2, #16
 80263d6:	ea4b 0000 	orr.w	r0, fp, r0
 80263da:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80263de:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80263e2:	fb03 c000 	mla	r0, r3, r0, ip
 80263e6:	ea42 0b0b 	orr.w	fp, r2, fp
 80263ea:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80263ee:	fb03 000b 	mla	r0, r3, fp, r0
 80263f2:	0d43      	lsrs	r3, r0, #21
 80263f4:	0940      	lsrs	r0, r0, #5
 80263f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80263fa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80263fe:	4318      	orrs	r0, r3
 8026400:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026402:	f82a 0b02 	strh.w	r0, [sl], #2
 8026406:	441c      	add	r4, r3
 8026408:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802640a:	f109 39ff 	add.w	r9, r9, #4294967295
 802640e:	441e      	add	r6, r3
 8026410:	e73c      	b.n	802628c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8026412:	b00f      	add	sp, #60	; 0x3c
 8026414:	ecbd 8b08 	vpop	{d8-d11}
 8026418:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802641c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802641c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026420:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8026424:	fb04 5603 	mla	r6, r4, r3, r5
 8026428:	2c00      	cmp	r4, #0
 802642a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 802642e:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8026432:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8026436:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 802643a:	db36      	blt.n	80264aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 802643c:	45a6      	cmp	lr, r4
 802643e:	dd34      	ble.n	80264aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8026440:	2d00      	cmp	r5, #0
 8026442:	db30      	blt.n	80264a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8026444:	42ab      	cmp	r3, r5
 8026446:	dd2e      	ble.n	80264a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8026448:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 802644c:	1c6e      	adds	r6, r5, #1
 802644e:	d42f      	bmi.n	80264b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8026450:	42b3      	cmp	r3, r6
 8026452:	dd2d      	ble.n	80264b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8026454:	b370      	cbz	r0, 80264b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8026456:	f8dc 6004 	ldr.w	r6, [ip, #4]
 802645a:	3401      	adds	r4, #1
 802645c:	d42e      	bmi.n	80264bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 802645e:	45a6      	cmp	lr, r4
 8026460:	dd2c      	ble.n	80264bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8026462:	b377      	cbz	r7, 80264c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 8026464:	2d00      	cmp	r5, #0
 8026466:	db27      	blt.n	80264b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8026468:	42ab      	cmp	r3, r5
 802646a:	dd25      	ble.n	80264b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 802646c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8026470:	3501      	adds	r5, #1
 8026472:	d429      	bmi.n	80264c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8026474:	42ab      	cmp	r3, r5
 8026476:	dd27      	ble.n	80264c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8026478:	b340      	cbz	r0, 80264cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 802647a:	3301      	adds	r3, #1
 802647c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8026480:	280f      	cmp	r0, #15
 8026482:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8026486:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 802648a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802648e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8026492:	d801      	bhi.n	8026498 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 8026494:	2f0f      	cmp	r7, #15
 8026496:	d91b      	bls.n	80264d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8026498:	4b8d      	ldr	r3, [pc, #564]	; (80266d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 802649a:	4a8e      	ldr	r2, [pc, #568]	; (80266d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 802649c:	488e      	ldr	r0, [pc, #568]	; (80266d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 802649e:	f240 11f9 	movw	r1, #505	; 0x1f9
 80264a2:	f005 fd8f 	bl	802bfc4 <__assert_func>
 80264a6:	2200      	movs	r2, #0
 80264a8:	e7d0      	b.n	802644c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 80264aa:	2600      	movs	r6, #0
 80264ac:	4632      	mov	r2, r6
 80264ae:	e7d4      	b.n	802645a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80264b0:	2600      	movs	r6, #0
 80264b2:	e7d2      	b.n	802645a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80264b4:	4606      	mov	r6, r0
 80264b6:	e7d0      	b.n	802645a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80264b8:	2400      	movs	r4, #0
 80264ba:	e7d9      	b.n	8026470 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 80264bc:	2300      	movs	r3, #0
 80264be:	461c      	mov	r4, r3
 80264c0:	e7de      	b.n	8026480 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80264c2:	463b      	mov	r3, r7
 80264c4:	463c      	mov	r4, r7
 80264c6:	e7db      	b.n	8026480 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80264c8:	2300      	movs	r3, #0
 80264ca:	e7d9      	b.n	8026480 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80264cc:	4603      	mov	r3, r0
 80264ce:	e7d7      	b.n	8026480 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80264d0:	b280      	uxth	r0, r0
 80264d2:	b2bf      	uxth	r7, r7
 80264d4:	fb07 fe00 	mul.w	lr, r7, r0
 80264d8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80264dc:	0100      	lsls	r0, r0, #4
 80264de:	eba0 0c0e 	sub.w	ip, r0, lr
 80264e2:	b2bf      	uxth	r7, r7
 80264e4:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80264e8:	fa1f fc8c 	uxth.w	ip, ip
 80264ec:	1bed      	subs	r5, r5, r7
 80264ee:	b2ad      	uxth	r5, r5
 80264f0:	fb0a f00c 	mul.w	r0, sl, ip
 80264f4:	fb0b 0005 	mla	r0, fp, r5, r0
 80264f8:	fb07 0009 	mla	r0, r7, r9, r0
 80264fc:	fb0e 0008 	mla	r0, lr, r8, r0
 8026500:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8026504:	9001      	str	r0, [sp, #4]
 8026506:	2800      	cmp	r0, #0
 8026508:	f000 80de 	beq.w	80266c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 802650c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8026510:	d018      	beq.n	8026544 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 8026512:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8026516:	fb0b f000 	mul.w	r0, fp, r0
 802651a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802651e:	fb0b fb02 	mul.w	fp, fp, r2
 8026522:	0a02      	lsrs	r2, r0, #8
 8026524:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026528:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 802652c:	4402      	add	r2, r0
 802652e:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8026532:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8026536:	0a12      	lsrs	r2, r2, #8
 8026538:	0a00      	lsrs	r0, r0, #8
 802653a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802653e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8026542:	4302      	orrs	r2, r0
 8026544:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8026548:	d01a      	beq.n	8026580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 802654a:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 802654e:	fb0a f000 	mul.w	r0, sl, r0
 8026552:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8026556:	fb0a fa06 	mul.w	sl, sl, r6
 802655a:	0a06      	lsrs	r6, r0, #8
 802655c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8026560:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8026564:	4406      	add	r6, r0
 8026566:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 802656a:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802656e:	0a36      	lsrs	r6, r6, #8
 8026570:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026574:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8026578:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802657c:	ea46 060a 	orr.w	r6, r6, sl
 8026580:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8026584:	d01b      	beq.n	80265be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 8026586:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 802658a:	fb09 fa0a 	mul.w	sl, r9, sl
 802658e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8026592:	fb09 f004 	mul.w	r0, r9, r4
 8026596:	ea4f 241a 	mov.w	r4, sl, lsr #8
 802659a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802659e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80265a2:	f500 7980 	add.w	r9, r0, #256	; 0x100
 80265a6:	4454      	add	r4, sl
 80265a8:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 80265ac:	0a24      	lsrs	r4, r4, #8
 80265ae:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80265b2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80265b6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80265ba:	ea44 0409 	orr.w	r4, r4, r9
 80265be:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80265c2:	d01b      	beq.n	80265fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 80265c4:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80265c8:	fb08 f909 	mul.w	r9, r8, r9
 80265cc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80265d0:	fb08 f003 	mul.w	r0, r8, r3
 80265d4:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80265d8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80265dc:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80265e0:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80265e4:	444b      	add	r3, r9
 80265e6:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80265ea:	0a1b      	lsrs	r3, r3, #8
 80265ec:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80265f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80265f4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80265f8:	ea43 0308 	orr.w	r3, r3, r8
 80265fc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8026600:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8026604:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8026608:	fb0c f808 	mul.w	r8, ip, r8
 802660c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026610:	fb0c f606 	mul.w	r6, ip, r6
 8026614:	fb05 8909 	mla	r9, r5, r9, r8
 8026618:	fb05 6502 	mla	r5, r5, r2, r6
 802661c:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8026620:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8026624:	9a01      	ldr	r2, [sp, #4]
 8026626:	8808      	ldrh	r0, [r1, #0]
 8026628:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802662c:	fb07 9908 	mla	r9, r7, r8, r9
 8026630:	fb07 5704 	mla	r7, r7, r4, r5
 8026634:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8026638:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802663c:	b2b6      	uxth	r6, r6
 802663e:	fb0e 9808 	mla	r8, lr, r8, r9
 8026642:	fb0e 7e03 	mla	lr, lr, r3, r7
 8026646:	4372      	muls	r2, r6
 8026648:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802664c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026650:	1c53      	adds	r3, r2, #1
 8026652:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8026656:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 802665a:	ea48 0e0e 	orr.w	lr, r8, lr
 802665e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026662:	1205      	asrs	r5, r0, #8
 8026664:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8026668:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802666c:	b2db      	uxtb	r3, r3
 802666e:	fb12 f206 	smulbb	r2, r2, r6
 8026672:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026676:	fb05 2503 	mla	r5, r5, r3, r2
 802667a:	f3ce 2407 	ubfx	r4, lr, #8, #8
 802667e:	10c2      	asrs	r2, r0, #3
 8026680:	fa5f fe8e 	uxtb.w	lr, lr
 8026684:	00c0      	lsls	r0, r0, #3
 8026686:	fb14 f406 	smulbb	r4, r4, r6
 802668a:	b2c0      	uxtb	r0, r0
 802668c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026690:	fb1e fe06 	smulbb	lr, lr, r6
 8026694:	fb02 4203 	mla	r2, r2, r3, r4
 8026698:	b2ad      	uxth	r5, r5
 802669a:	fb00 e303 	mla	r3, r0, r3, lr
 802669e:	b298      	uxth	r0, r3
 80266a0:	b294      	uxth	r4, r2
 80266a2:	1c6b      	adds	r3, r5, #1
 80266a4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80266a8:	1c62      	adds	r2, r4, #1
 80266aa:	1c43      	adds	r3, r0, #1
 80266ac:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80266b0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80266b4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80266b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80266bc:	0952      	lsrs	r2, r2, #5
 80266be:	432b      	orrs	r3, r5
 80266c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80266c4:	4313      	orrs	r3, r2
 80266c6:	800b      	strh	r3, [r1, #0]
 80266c8:	b003      	add	sp, #12
 80266ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80266ce:	bf00      	nop
 80266d0:	08035bf7 	.word	0x08035bf7
 80266d4:	08036126 	.word	0x08036126
 80266d8:	08035bc4 	.word	0x08035bc4

080266dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80266dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80266e0:	ed2d 8b08 	vpush	{d8-d11}
 80266e4:	b09d      	sub	sp, #116	; 0x74
 80266e6:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 80266ea:	9219      	str	r2, [sp, #100]	; 0x64
 80266ec:	9307      	str	r3, [sp, #28]
 80266ee:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 80266f0:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80266f4:	931a      	str	r3, [sp, #104]	; 0x68
 80266f6:	9117      	str	r1, [sp, #92]	; 0x5c
 80266f8:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 80266fc:	901b      	str	r0, [sp, #108]	; 0x6c
 80266fe:	6850      	ldr	r0, [r2, #4]
 8026700:	6812      	ldr	r2, [r2, #0]
 8026702:	fb00 1303 	mla	r3, r0, r3, r1
 8026706:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802670a:	930a      	str	r3, [sp, #40]	; 0x28
 802670c:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 802670e:	681b      	ldr	r3, [r3, #0]
 8026710:	9310      	str	r3, [sp, #64]	; 0x40
 8026712:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8026716:	930b      	str	r3, [sp, #44]	; 0x2c
 8026718:	eeb0 aa40 	vmov.f32	s20, s0
 802671c:	eef0 9a60 	vmov.f32	s19, s1
 8026720:	eeb0 9a41 	vmov.f32	s18, s2
 8026724:	eeb0 8a62 	vmov.f32	s16, s5
 8026728:	eef0 8a43 	vmov.f32	s17, s6
 802672c:	eef0 ba44 	vmov.f32	s23, s8
 8026730:	eeb0 ba64 	vmov.f32	s22, s9
 8026734:	eef0 aa45 	vmov.f32	s21, s10
 8026738:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802673a:	2b00      	cmp	r3, #0
 802673c:	dc03      	bgt.n	8026746 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802673e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8026740:	2b00      	cmp	r3, #0
 8026742:	f340 8375 	ble.w	8026e30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8026746:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8026748:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802674c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026750:	1e48      	subs	r0, r1, #1
 8026752:	1e57      	subs	r7, r2, #1
 8026754:	9b07      	ldr	r3, [sp, #28]
 8026756:	2b00      	cmp	r3, #0
 8026758:	f340 818e 	ble.w	8026a78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 802675c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8026760:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026764:	d406      	bmi.n	8026774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8026766:	4584      	cmp	ip, r0
 8026768:	da04      	bge.n	8026774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802676a:	2b00      	cmp	r3, #0
 802676c:	db02      	blt.n	8026774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802676e:	42bb      	cmp	r3, r7
 8026770:	f2c0 8183 	blt.w	8026a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8026774:	f11c 0c01 	adds.w	ip, ip, #1
 8026778:	f100 8173 	bmi.w	8026a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802677c:	4561      	cmp	r1, ip
 802677e:	f2c0 8170 	blt.w	8026a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8026782:	3301      	adds	r3, #1
 8026784:	f100 816d 	bmi.w	8026a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8026788:	429a      	cmp	r2, r3
 802678a:	f2c0 816a 	blt.w	8026a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802678e:	9b07      	ldr	r3, [sp, #28]
 8026790:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8026792:	9318      	str	r3, [sp, #96]	; 0x60
 8026794:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026796:	2b00      	cmp	r3, #0
 8026798:	f340 818c 	ble.w	8026ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 802679c:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 802679e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80267a0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80267a4:	689b      	ldr	r3, [r3, #8]
 80267a6:	1422      	asrs	r2, r4, #16
 80267a8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80267ac:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80267b0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80267b4:	f100 81cd 	bmi.w	8026b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80267b8:	f103 38ff 	add.w	r8, r3, #4294967295
 80267bc:	4542      	cmp	r2, r8
 80267be:	f280 81c8 	bge.w	8026b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80267c2:	f1bc 0f00 	cmp.w	ip, #0
 80267c6:	f2c0 81c4 	blt.w	8026b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80267ca:	f10e 38ff 	add.w	r8, lr, #4294967295
 80267ce:	45c4      	cmp	ip, r8
 80267d0:	f280 81bf 	bge.w	8026b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80267d4:	b21b      	sxth	r3, r3
 80267d6:	fb0c 2203 	mla	r2, ip, r3, r2
 80267da:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80267dc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80267e0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80267e4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80267e8:	2800      	cmp	r0, #0
 80267ea:	f000 81a9 	beq.w	8026b40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 80267ee:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80267f2:	950c      	str	r5, [sp, #48]	; 0x30
 80267f4:	0e2d      	lsrs	r5, r5, #24
 80267f6:	9513      	str	r5, [sp, #76]	; 0x4c
 80267f8:	b181      	cbz	r1, 802681c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80267fa:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80267fe:	3b01      	subs	r3, #1
 8026800:	009b      	lsls	r3, r3, #2
 8026802:	3304      	adds	r3, #4
 8026804:	eb08 0c03 	add.w	ip, r8, r3
 8026808:	f858 3003 	ldr.w	r3, [r8, r3]
 802680c:	9308      	str	r3, [sp, #32]
 802680e:	0e1b      	lsrs	r3, r3, #24
 8026810:	9311      	str	r3, [sp, #68]	; 0x44
 8026812:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8026816:	930d      	str	r3, [sp, #52]	; 0x34
 8026818:	0e1b      	lsrs	r3, r3, #24
 802681a:	9314      	str	r3, [sp, #80]	; 0x50
 802681c:	b280      	uxth	r0, r0
 802681e:	b289      	uxth	r1, r1
 8026820:	fb00 f901 	mul.w	r9, r0, r1
 8026824:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8026828:	0100      	lsls	r0, r0, #4
 802682a:	eba0 0809 	sub.w	r8, r0, r9
 802682e:	b289      	uxth	r1, r1
 8026830:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8026834:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8026836:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026838:	fa1f f888 	uxth.w	r8, r8
 802683c:	1a5b      	subs	r3, r3, r1
 802683e:	b29b      	uxth	r3, r3
 8026840:	fb08 f000 	mul.w	r0, r8, r0
 8026844:	fb03 000e 	mla	r0, r3, lr, r0
 8026848:	fb01 0005 	mla	r0, r1, r5, r0
 802684c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802684e:	fb09 0005 	mla	r0, r9, r5, r0
 8026852:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8026856:	2800      	cmp	r0, #0
 8026858:	f000 80fa 	beq.w	8026a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802685c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8026860:	d01b      	beq.n	802689a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8026862:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8026866:	fb0e fa0a 	mul.w	sl, lr, sl
 802686a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802686e:	fb0e fe02 	mul.w	lr, lr, r2
 8026872:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8026876:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802687a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802687e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8026882:	4452      	add	r2, sl
 8026884:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8026888:	0a12      	lsrs	r2, r2, #8
 802688a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802688e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026892:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8026896:	ea42 020c 	orr.w	r2, r2, ip
 802689a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802689c:	2dff      	cmp	r5, #255	; 0xff
 802689e:	d021      	beq.n	80268e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80268a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80268a2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80268a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80268a8:	fb05 fb0b 	mul.w	fp, r5, fp
 80268ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80268ae:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80268b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80268b4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80268b8:	fb05 fa0a 	mul.w	sl, r5, sl
 80268bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80268c0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80268c4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80268c8:	44de      	add	lr, fp
 80268ca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80268ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80268d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80268d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80268da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80268de:	ea4e 050a 	orr.w	r5, lr, sl
 80268e2:	950c      	str	r5, [sp, #48]	; 0x30
 80268e4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80268e6:	2dff      	cmp	r5, #255	; 0xff
 80268e8:	d021      	beq.n	802692e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80268ea:	9d08      	ldr	r5, [sp, #32]
 80268ec:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80268f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80268f2:	fb05 fb0b 	mul.w	fp, r5, fp
 80268f6:	9d08      	ldr	r5, [sp, #32]
 80268f8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80268fc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80268fe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026902:	fb05 fa0a 	mul.w	sl, r5, sl
 8026906:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802690a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802690e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026912:	44de      	add	lr, fp
 8026914:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026918:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802691c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026920:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026924:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026928:	ea4e 050a 	orr.w	r5, lr, sl
 802692c:	9508      	str	r5, [sp, #32]
 802692e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026930:	2dff      	cmp	r5, #255	; 0xff
 8026932:	d021      	beq.n	8026978 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8026934:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026936:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802693a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802693c:	fb05 fb0b 	mul.w	fp, r5, fp
 8026940:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026942:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026946:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026948:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802694c:	fb05 fa0a 	mul.w	sl, r5, sl
 8026950:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026954:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026958:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802695c:	44de      	add	lr, fp
 802695e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026962:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026966:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802696a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802696e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026972:	ea4e 050a 	orr.w	r5, lr, sl
 8026976:	950d      	str	r5, [sp, #52]	; 0x34
 8026978:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802697a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802697e:	9d08      	ldr	r5, [sp, #32]
 8026980:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8026984:	fb08 fc0c 	mul.w	ip, r8, ip
 8026988:	fb03 cc0e 	mla	ip, r3, lr, ip
 802698c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8026990:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026992:	fb01 cc0e 	mla	ip, r1, lr, ip
 8026996:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802699a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802699c:	fb09 cc0e 	mla	ip, r9, lr, ip
 80269a0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80269a4:	fb08 f80e 	mul.w	r8, r8, lr
 80269a8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80269ac:	fb03 8202 	mla	r2, r3, r2, r8
 80269b0:	9b08      	ldr	r3, [sp, #32]
 80269b2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80269b4:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80269b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80269ba:	fb01 220a 	mla	r2, r1, sl, r2
 80269be:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80269c2:	fb09 2901 	mla	r9, r9, r1, r2
 80269c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80269c8:	883b      	ldrh	r3, [r7, #0]
 80269ca:	4342      	muls	r2, r0
 80269cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80269d0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80269d4:	1c50      	adds	r0, r2, #1
 80269d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80269da:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80269de:	ea4c 0c09 	orr.w	ip, ip, r9
 80269e2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80269e6:	1219      	asrs	r1, r3, #8
 80269e8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80269ec:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80269f0:	b2c0      	uxtb	r0, r0
 80269f2:	fb12 f205 	smulbb	r2, r2, r5
 80269f6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80269fa:	fb01 2100 	mla	r1, r1, r0, r2
 80269fe:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8026a02:	10da      	asrs	r2, r3, #3
 8026a04:	fa5f fc8c 	uxtb.w	ip, ip
 8026a08:	00db      	lsls	r3, r3, #3
 8026a0a:	fb1c fc05 	smulbb	ip, ip, r5
 8026a0e:	b2db      	uxtb	r3, r3
 8026a10:	b289      	uxth	r1, r1
 8026a12:	fb03 c300 	mla	r3, r3, r0, ip
 8026a16:	fa1f fc83 	uxth.w	ip, r3
 8026a1a:	1c4b      	adds	r3, r1, #1
 8026a1c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026a20:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026a24:	fb1e fe05 	smulbb	lr, lr, r5
 8026a28:	f10c 0301 	add.w	r3, ip, #1
 8026a2c:	fb02 e200 	mla	r2, r2, r0, lr
 8026a30:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8026a34:	b292      	uxth	r2, r2
 8026a36:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026a3a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026a3e:	430b      	orrs	r3, r1
 8026a40:	1c51      	adds	r1, r2, #1
 8026a42:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8026a46:	0952      	lsrs	r2, r2, #5
 8026a48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026a4c:	4313      	orrs	r3, r2
 8026a4e:	803b      	strh	r3, [r7, #0]
 8026a50:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8026a52:	441c      	add	r4, r3
 8026a54:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8026a56:	441e      	add	r6, r3
 8026a58:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026a5a:	3b01      	subs	r3, #1
 8026a5c:	3702      	adds	r7, #2
 8026a5e:	9318      	str	r3, [sp, #96]	; 0x60
 8026a60:	e698      	b.n	8026794 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8026a62:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8026a64:	441c      	add	r4, r3
 8026a66:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8026a68:	441e      	add	r6, r3
 8026a6a:	9b07      	ldr	r3, [sp, #28]
 8026a6c:	3b01      	subs	r3, #1
 8026a6e:	9307      	str	r3, [sp, #28]
 8026a70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026a72:	3302      	adds	r3, #2
 8026a74:	930a      	str	r3, [sp, #40]	; 0x28
 8026a76:	e66d      	b.n	8026754 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026a78:	d023      	beq.n	8026ac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8026a7a:	9b07      	ldr	r3, [sp, #28]
 8026a7c:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8026a7e:	3b01      	subs	r3, #1
 8026a80:	fb00 4003 	mla	r0, r0, r3, r4
 8026a84:	1400      	asrs	r0, r0, #16
 8026a86:	f53f ae82 	bmi.w	802678e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8026a8a:	3901      	subs	r1, #1
 8026a8c:	4288      	cmp	r0, r1
 8026a8e:	f6bf ae7e 	bge.w	802678e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8026a92:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8026a94:	fb01 6303 	mla	r3, r1, r3, r6
 8026a98:	141b      	asrs	r3, r3, #16
 8026a9a:	f53f ae78 	bmi.w	802678e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8026a9e:	3a01      	subs	r2, #1
 8026aa0:	4293      	cmp	r3, r2
 8026aa2:	f6bf ae74 	bge.w	802678e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8026aa6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8026aaa:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8026aae:	f1bb 0f00 	cmp.w	fp, #0
 8026ab2:	dc6c      	bgt.n	8026b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8026ab4:	9b07      	ldr	r3, [sp, #28]
 8026ab6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026aba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026abc:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026ac0:	930a      	str	r3, [sp, #40]	; 0x28
 8026ac2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8026ac4:	2b00      	cmp	r3, #0
 8026ac6:	f340 81b3 	ble.w	8026e30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8026aca:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8026ace:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026ad2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8026ad6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8026ad8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8026adc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8026ae0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8026ae4:	eef0 6a48 	vmov.f32	s13, s16
 8026ae8:	ee69 7a27 	vmul.f32	s15, s18, s15
 8026aec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026af0:	ee37 8a48 	vsub.f32	s16, s14, s16
 8026af4:	ee16 4a90 	vmov	r4, s13
 8026af8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8026afc:	eef0 6a68 	vmov.f32	s13, s17
 8026b00:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8026b04:	ee18 2a10 	vmov	r2, s16
 8026b08:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8026b0c:	fb92 f3f3 	sdiv	r3, r2, r3
 8026b10:	ee18 2a90 	vmov	r2, s17
 8026b14:	9331      	str	r3, [sp, #196]	; 0xc4
 8026b16:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8026b18:	fb92 f3f3 	sdiv	r3, r2, r3
 8026b1c:	9332      	str	r3, [sp, #200]	; 0xc8
 8026b1e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8026b20:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8026b22:	3b01      	subs	r3, #1
 8026b24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026b28:	9317      	str	r3, [sp, #92]	; 0x5c
 8026b2a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8026b2c:	bf08      	it	eq
 8026b2e:	4613      	moveq	r3, r2
 8026b30:	ee16 6a90 	vmov	r6, s13
 8026b34:	9307      	str	r3, [sp, #28]
 8026b36:	eef0 8a67 	vmov.f32	s17, s15
 8026b3a:	eeb0 8a47 	vmov.f32	s16, s14
 8026b3e:	e5fb      	b.n	8026738 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8026b40:	2900      	cmp	r1, #0
 8026b42:	f43f ae6b 	beq.w	802681c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8026b46:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8026b4a:	9308      	str	r3, [sp, #32]
 8026b4c:	0e1b      	lsrs	r3, r3, #24
 8026b4e:	9311      	str	r3, [sp, #68]	; 0x44
 8026b50:	e664      	b.n	802681c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8026b52:	f112 0801 	adds.w	r8, r2, #1
 8026b56:	f53f af7b 	bmi.w	8026a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8026b5a:	4543      	cmp	r3, r8
 8026b5c:	f6ff af78 	blt.w	8026a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8026b60:	f11c 0801 	adds.w	r8, ip, #1
 8026b64:	f53f af74 	bmi.w	8026a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8026b68:	45c6      	cmp	lr, r8
 8026b6a:	f6ff af71 	blt.w	8026a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8026b6e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8026b70:	9201      	str	r2, [sp, #4]
 8026b72:	fa0f f28e 	sxth.w	r2, lr
 8026b76:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8026b7a:	e9cd c002 	strd	ip, r0, [sp, #8]
 8026b7e:	9200      	str	r2, [sp, #0]
 8026b80:	b21b      	sxth	r3, r3
 8026b82:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026b84:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8026b86:	4639      	mov	r1, r7
 8026b88:	f7ff fc48 	bl	802641c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8026b8c:	e760      	b.n	8026a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8026b8e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8026b90:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026b92:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026b96:	1427      	asrs	r7, r4, #16
 8026b98:	1433      	asrs	r3, r6, #16
 8026b9a:	fb01 7303 	mla	r3, r1, r3, r7
 8026b9e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8026ba2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8026ba6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026baa:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026bae:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8026bb2:	2a00      	cmp	r2, #0
 8026bb4:	f000 8133 	beq.w	8026e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8026bb8:	687d      	ldr	r5, [r7, #4]
 8026bba:	950e      	str	r5, [sp, #56]	; 0x38
 8026bbc:	0e2d      	lsrs	r5, r5, #24
 8026bbe:	9515      	str	r5, [sp, #84]	; 0x54
 8026bc0:	b178      	cbz	r0, 8026be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8026bc2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8026bc6:	3901      	subs	r1, #1
 8026bc8:	0089      	lsls	r1, r1, #2
 8026bca:	3104      	adds	r1, #4
 8026bcc:	eb07 0e01 	add.w	lr, r7, r1
 8026bd0:	5879      	ldr	r1, [r7, r1]
 8026bd2:	9109      	str	r1, [sp, #36]	; 0x24
 8026bd4:	0e09      	lsrs	r1, r1, #24
 8026bd6:	9112      	str	r1, [sp, #72]	; 0x48
 8026bd8:	f8de 1004 	ldr.w	r1, [lr, #4]
 8026bdc:	910f      	str	r1, [sp, #60]	; 0x3c
 8026bde:	0e09      	lsrs	r1, r1, #24
 8026be0:	9116      	str	r1, [sp, #88]	; 0x58
 8026be2:	b292      	uxth	r2, r2
 8026be4:	b280      	uxth	r0, r0
 8026be6:	fb02 f800 	mul.w	r8, r2, r0
 8026bea:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8026bee:	0112      	lsls	r2, r2, #4
 8026bf0:	eba2 0e08 	sub.w	lr, r2, r8
 8026bf4:	b280      	uxth	r0, r0
 8026bf6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8026bfa:	9915      	ldr	r1, [sp, #84]	; 0x54
 8026bfc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026bfe:	fa1f fe8e 	uxth.w	lr, lr
 8026c02:	1a12      	subs	r2, r2, r0
 8026c04:	b292      	uxth	r2, r2
 8026c06:	fb0e f101 	mul.w	r1, lr, r1
 8026c0a:	fb02 110c 	mla	r1, r2, ip, r1
 8026c0e:	fb00 1105 	mla	r1, r0, r5, r1
 8026c12:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8026c14:	fb08 1105 	mla	r1, r8, r5, r1
 8026c18:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8026c1c:	2900      	cmp	r1, #0
 8026c1e:	f000 80f5 	beq.w	8026e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8026c22:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8026c26:	d019      	beq.n	8026c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8026c28:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8026c2c:	fb0c fa0a 	mul.w	sl, ip, sl
 8026c30:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8026c34:	fb0c fc03 	mul.w	ip, ip, r3
 8026c38:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8026c3c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8026c40:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8026c44:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8026c48:	4453      	add	r3, sl
 8026c4a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8026c4e:	0a1b      	lsrs	r3, r3, #8
 8026c50:	0a3f      	lsrs	r7, r7, #8
 8026c52:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8026c56:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8026c5a:	433b      	orrs	r3, r7
 8026c5c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026c5e:	2dff      	cmp	r5, #255	; 0xff
 8026c60:	d020      	beq.n	8026ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8026c62:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026c64:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026c68:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026c6a:	436f      	muls	r7, r5
 8026c6c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026c6e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026c72:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026c74:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026c78:	fb05 fa0a 	mul.w	sl, r5, sl
 8026c7c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026c80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026c84:	44bc      	add	ip, r7
 8026c86:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026c8a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026c8e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026c92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026c96:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026c9a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026c9e:	ea4c 050a 	orr.w	r5, ip, sl
 8026ca2:	950e      	str	r5, [sp, #56]	; 0x38
 8026ca4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026ca6:	2dff      	cmp	r5, #255	; 0xff
 8026ca8:	d020      	beq.n	8026cec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8026caa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026cac:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026cb0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026cb2:	436f      	muls	r7, r5
 8026cb4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026cb6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026cba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026cbc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026cc0:	fb05 fa0a 	mul.w	sl, r5, sl
 8026cc4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026cc8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026ccc:	44bc      	add	ip, r7
 8026cce:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026cd2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026cd6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026cda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026cde:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026ce2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026ce6:	ea4c 050a 	orr.w	r5, ip, sl
 8026cea:	9509      	str	r5, [sp, #36]	; 0x24
 8026cec:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8026cee:	2dff      	cmp	r5, #255	; 0xff
 8026cf0:	d020      	beq.n	8026d34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8026cf2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026cf4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026cf8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8026cfa:	436f      	muls	r7, r5
 8026cfc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026cfe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026d02:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8026d04:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026d08:	fb05 fa0a 	mul.w	sl, r5, sl
 8026d0c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026d10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026d14:	44bc      	add	ip, r7
 8026d16:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026d1a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026d1e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026d22:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026d26:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026d2a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026d2e:	ea4c 050a 	orr.w	r5, ip, sl
 8026d32:	950f      	str	r5, [sp, #60]	; 0x3c
 8026d34:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026d36:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026d3a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026d3c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8026d40:	fb0e f707 	mul.w	r7, lr, r7
 8026d44:	fb02 770c 	mla	r7, r2, ip, r7
 8026d48:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026d4c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026d4e:	fb00 770c 	mla	r7, r0, ip, r7
 8026d52:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026d56:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026d58:	fb08 770c 	mla	r7, r8, ip, r7
 8026d5c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026d60:	fb0e fe0c 	mul.w	lr, lr, ip
 8026d64:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8026d68:	fb02 e303 	mla	r3, r2, r3, lr
 8026d6c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026d6e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026d70:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8026d74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026d76:	fb00 330a 	mla	r3, r0, sl, r3
 8026d7a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8026d7e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8026d82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8026d84:	f8b9 0000 	ldrh.w	r0, [r9]
 8026d88:	4359      	muls	r1, r3
 8026d8a:	0a3f      	lsrs	r7, r7, #8
 8026d8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026d90:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8026d94:	1c4b      	adds	r3, r1, #1
 8026d96:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8026d9a:	ea47 070c 	orr.w	r7, r7, ip
 8026d9e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026da2:	1202      	asrs	r2, r0, #8
 8026da4:	0c3b      	lsrs	r3, r7, #16
 8026da6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8026daa:	b2c9      	uxtb	r1, r1
 8026dac:	fb13 f305 	smulbb	r3, r3, r5
 8026db0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8026db4:	fb02 3201 	mla	r2, r2, r1, r3
 8026db8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8026dbc:	10c3      	asrs	r3, r0, #3
 8026dbe:	b2ff      	uxtb	r7, r7
 8026dc0:	00c0      	lsls	r0, r0, #3
 8026dc2:	b2c0      	uxtb	r0, r0
 8026dc4:	fb17 f705 	smulbb	r7, r7, r5
 8026dc8:	fb00 7001 	mla	r0, r0, r1, r7
 8026dcc:	b292      	uxth	r2, r2
 8026dce:	fb1c fc05 	smulbb	ip, ip, r5
 8026dd2:	b280      	uxth	r0, r0
 8026dd4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026dd8:	fb03 c301 	mla	r3, r3, r1, ip
 8026ddc:	1c51      	adds	r1, r2, #1
 8026dde:	f100 0c01 	add.w	ip, r0, #1
 8026de2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8026de6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8026dea:	b29b      	uxth	r3, r3
 8026dec:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8026df0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8026df4:	ea4c 0202 	orr.w	r2, ip, r2
 8026df8:	f103 0c01 	add.w	ip, r3, #1
 8026dfc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8026e00:	095b      	lsrs	r3, r3, #5
 8026e02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026e06:	431a      	orrs	r2, r3
 8026e08:	f8a9 2000 	strh.w	r2, [r9]
 8026e0c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8026e0e:	441c      	add	r4, r3
 8026e10:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8026e12:	f109 0902 	add.w	r9, r9, #2
 8026e16:	441e      	add	r6, r3
 8026e18:	f10b 3bff 	add.w	fp, fp, #4294967295
 8026e1c:	e647      	b.n	8026aae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 8026e1e:	2800      	cmp	r0, #0
 8026e20:	f43f aedf 	beq.w	8026be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8026e24:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8026e28:	9109      	str	r1, [sp, #36]	; 0x24
 8026e2a:	0e09      	lsrs	r1, r1, #24
 8026e2c:	9112      	str	r1, [sp, #72]	; 0x48
 8026e2e:	e6d8      	b.n	8026be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8026e30:	b01d      	add	sp, #116	; 0x74
 8026e32:	ecbd 8b08 	vpop	{d8-d11}
 8026e36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08026e3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8026e3c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026e40:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8026e44:	fb04 5603 	mla	r6, r4, r3, r5
 8026e48:	2c00      	cmp	r4, #0
 8026e4a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8026e4e:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8026e52:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8026e56:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8026e5a:	db37      	blt.n	8026ecc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8026e5c:	45a6      	cmp	lr, r4
 8026e5e:	dd35      	ble.n	8026ecc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8026e60:	2d00      	cmp	r5, #0
 8026e62:	db31      	blt.n	8026ec8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026e64:	42ab      	cmp	r3, r5
 8026e66:	dd2f      	ble.n	8026ec8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026e68:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8026e6c:	1c6e      	adds	r6, r5, #1
 8026e6e:	d430      	bmi.n	8026ed2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8026e70:	42b3      	cmp	r3, r6
 8026e72:	dd2e      	ble.n	8026ed2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8026e74:	b378      	cbz	r0, 8026ed6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 8026e76:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8026e7a:	3401      	adds	r4, #1
 8026e7c:	d42f      	bmi.n	8026ede <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8026e7e:	45a6      	cmp	lr, r4
 8026e80:	dd2d      	ble.n	8026ede <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8026e82:	b37f      	cbz	r7, 8026ee4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 8026e84:	2d00      	cmp	r5, #0
 8026e86:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 8026e8a:	db26      	blt.n	8026eda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8026e8c:	42ab      	cmp	r3, r5
 8026e8e:	dd24      	ble.n	8026eda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8026e90:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8026e94:	3501      	adds	r5, #1
 8026e96:	d428      	bmi.n	8026eea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8026e98:	42ab      	cmp	r3, r5
 8026e9a:	dd26      	ble.n	8026eea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8026e9c:	b338      	cbz	r0, 8026eee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 8026e9e:	f8de 3004 	ldr.w	r3, [lr, #4]
 8026ea2:	280f      	cmp	r0, #15
 8026ea4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8026ea8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8026eac:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8026eb0:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8026eb4:	d801      	bhi.n	8026eba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 8026eb6:	2f0f      	cmp	r7, #15
 8026eb8:	d91b      	bls.n	8026ef2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 8026eba:	4b87      	ldr	r3, [pc, #540]	; (80270d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 8026ebc:	4a87      	ldr	r2, [pc, #540]	; (80270dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8026ebe:	4888      	ldr	r0, [pc, #544]	; (80270e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8026ec0:	f240 11f9 	movw	r1, #505	; 0x1f9
 8026ec4:	f005 f87e 	bl	802bfc4 <__assert_func>
 8026ec8:	2200      	movs	r2, #0
 8026eca:	e7cf      	b.n	8026e6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 8026ecc:	2600      	movs	r6, #0
 8026ece:	4632      	mov	r2, r6
 8026ed0:	e7d3      	b.n	8026e7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8026ed2:	2600      	movs	r6, #0
 8026ed4:	e7d1      	b.n	8026e7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8026ed6:	4606      	mov	r6, r0
 8026ed8:	e7cf      	b.n	8026e7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8026eda:	2400      	movs	r4, #0
 8026edc:	e7da      	b.n	8026e94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 8026ede:	2300      	movs	r3, #0
 8026ee0:	461c      	mov	r4, r3
 8026ee2:	e7de      	b.n	8026ea2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8026ee4:	463b      	mov	r3, r7
 8026ee6:	463c      	mov	r4, r7
 8026ee8:	e7db      	b.n	8026ea2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8026eea:	2300      	movs	r3, #0
 8026eec:	e7d9      	b.n	8026ea2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8026eee:	4603      	mov	r3, r0
 8026ef0:	e7d7      	b.n	8026ea2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8026ef2:	b280      	uxth	r0, r0
 8026ef4:	b2bf      	uxth	r7, r7
 8026ef6:	fb07 fe00 	mul.w	lr, r7, r0
 8026efa:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8026efe:	0100      	lsls	r0, r0, #4
 8026f00:	eba0 0c0e 	sub.w	ip, r0, lr
 8026f04:	b2bf      	uxth	r7, r7
 8026f06:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8026f0a:	fa1f fc8c 	uxth.w	ip, ip
 8026f0e:	1bed      	subs	r5, r5, r7
 8026f10:	b2ad      	uxth	r5, r5
 8026f12:	fb0c f00a 	mul.w	r0, ip, sl
 8026f16:	fb0b 0005 	mla	r0, fp, r5, r0
 8026f1a:	fb07 0009 	mla	r0, r7, r9, r0
 8026f1e:	fb0e 0008 	mla	r0, lr, r8, r0
 8026f22:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8026f26:	9001      	str	r0, [sp, #4]
 8026f28:	2800      	cmp	r0, #0
 8026f2a:	f000 80d1 	beq.w	80270d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 8026f2e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8026f32:	d018      	beq.n	8026f66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 8026f34:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8026f38:	fb0b f000 	mul.w	r0, fp, r0
 8026f3c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026f40:	fb0b fb02 	mul.w	fp, fp, r2
 8026f44:	0a02      	lsrs	r2, r0, #8
 8026f46:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026f4a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8026f4e:	4402      	add	r2, r0
 8026f50:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8026f54:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8026f58:	0a12      	lsrs	r2, r2, #8
 8026f5a:	0a00      	lsrs	r0, r0, #8
 8026f5c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026f60:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8026f64:	4302      	orrs	r2, r0
 8026f66:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8026f6a:	d01a      	beq.n	8026fa2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 8026f6c:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8026f70:	fb0a f000 	mul.w	r0, sl, r0
 8026f74:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8026f78:	fb0a fa06 	mul.w	sl, sl, r6
 8026f7c:	0a06      	lsrs	r6, r0, #8
 8026f7e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8026f82:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8026f86:	4406      	add	r6, r0
 8026f88:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8026f8c:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8026f90:	0a36      	lsrs	r6, r6, #8
 8026f92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026f96:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8026f9a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026f9e:	ea46 060a 	orr.w	r6, r6, sl
 8026fa2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8026fa6:	d01b      	beq.n	8026fe0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 8026fa8:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8026fac:	fb09 fa0a 	mul.w	sl, r9, sl
 8026fb0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8026fb4:	fb09 f004 	mul.w	r0, r9, r4
 8026fb8:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8026fbc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8026fc0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8026fc4:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8026fc8:	4454      	add	r4, sl
 8026fca:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8026fce:	0a24      	lsrs	r4, r4, #8
 8026fd0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026fd4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8026fd8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8026fdc:	ea44 0409 	orr.w	r4, r4, r9
 8026fe0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8026fe4:	d01b      	beq.n	802701e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 8026fe6:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8026fea:	fb08 f909 	mul.w	r9, r8, r9
 8026fee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8026ff2:	fb08 f003 	mul.w	r0, r8, r3
 8026ff6:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8026ffa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8026ffe:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8027002:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8027006:	444b      	add	r3, r9
 8027008:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 802700c:	0a1b      	lsrs	r3, r3, #8
 802700e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027012:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027016:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802701a:	ea43 0308 	orr.w	r3, r3, r8
 802701e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8027022:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8027026:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 802702a:	fb0c f808 	mul.w	r8, ip, r8
 802702e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027032:	fb0c f606 	mul.w	r6, ip, r6
 8027036:	fb05 8909 	mla	r9, r5, r9, r8
 802703a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 802703e:	fb05 6502 	mla	r5, r5, r2, r6
 8027042:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027046:	fb07 9908 	mla	r9, r7, r8, r9
 802704a:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 802704e:	fb07 5704 	mla	r7, r7, r4, r5
 8027052:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027056:	8808      	ldrh	r0, [r1, #0]
 8027058:	fb0e 9808 	mla	r8, lr, r8, r9
 802705c:	fb0e 7e03 	mla	lr, lr, r3, r7
 8027060:	9b01      	ldr	r3, [sp, #4]
 8027062:	43da      	mvns	r2, r3
 8027064:	1203      	asrs	r3, r0, #8
 8027066:	b2d2      	uxtb	r2, r2
 8027068:	10c4      	asrs	r4, r0, #3
 802706a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802706e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027072:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8027076:	00c0      	lsls	r0, r0, #3
 8027078:	4353      	muls	r3, r2
 802707a:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 802707e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8027082:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8027086:	b2c0      	uxtb	r0, r0
 8027088:	ea48 0e0e 	orr.w	lr, r8, lr
 802708c:	4354      	muls	r4, r2
 802708e:	4350      	muls	r0, r2
 8027090:	1c5a      	adds	r2, r3, #1
 8027092:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8027096:	ea4f 431e 	mov.w	r3, lr, lsr #16
 802709a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802709e:	1c62      	adds	r2, r4, #1
 80270a0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80270a4:	ea4f 221e 	mov.w	r2, lr, lsr #8
 80270a8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80270ac:	021b      	lsls	r3, r3, #8
 80270ae:	00d2      	lsls	r2, r2, #3
 80270b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80270b4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80270b8:	4313      	orrs	r3, r2
 80270ba:	1c42      	adds	r2, r0, #1
 80270bc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80270c0:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 80270c4:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 80270c8:	ea4e 0e03 	orr.w	lr, lr, r3
 80270cc:	f8a1 e000 	strh.w	lr, [r1]
 80270d0:	b003      	add	sp, #12
 80270d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80270d6:	bf00      	nop
 80270d8:	08035bf7 	.word	0x08035bf7
 80270dc:	08036126 	.word	0x08036126
 80270e0:	08035bc4 	.word	0x08035bc4

080270e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80270e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80270e8:	ed2d 8b08 	vpush	{d8-d11}
 80270ec:	b09b      	sub	sp, #108	; 0x6c
 80270ee:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 80270f2:	9218      	str	r2, [sp, #96]	; 0x60
 80270f4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80270f6:	9116      	str	r1, [sp, #88]	; 0x58
 80270f8:	9307      	str	r3, [sp, #28]
 80270fa:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80270fe:	9019      	str	r0, [sp, #100]	; 0x64
 8027100:	6850      	ldr	r0, [r2, #4]
 8027102:	6812      	ldr	r2, [r2, #0]
 8027104:	fb00 1303 	mla	r3, r0, r3, r1
 8027108:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802710c:	930a      	str	r3, [sp, #40]	; 0x28
 802710e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8027110:	681b      	ldr	r3, [r3, #0]
 8027112:	930f      	str	r3, [sp, #60]	; 0x3c
 8027114:	eeb0 aa40 	vmov.f32	s20, s0
 8027118:	eef0 9a60 	vmov.f32	s19, s1
 802711c:	eeb0 9a41 	vmov.f32	s18, s2
 8027120:	eeb0 8a62 	vmov.f32	s16, s5
 8027124:	eef0 8a43 	vmov.f32	s17, s6
 8027128:	eef0 ba44 	vmov.f32	s23, s8
 802712c:	eeb0 ba64 	vmov.f32	s22, s9
 8027130:	eef0 aa45 	vmov.f32	s21, s10
 8027134:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027136:	2b00      	cmp	r3, #0
 8027138:	dc03      	bgt.n	8027142 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 802713a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802713c:	2b00      	cmp	r3, #0
 802713e:	f340 8386 	ble.w	802784e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8027142:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8027144:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027148:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802714c:	1e48      	subs	r0, r1, #1
 802714e:	1e57      	subs	r7, r2, #1
 8027150:	9b07      	ldr	r3, [sp, #28]
 8027152:	2b00      	cmp	r3, #0
 8027154:	f340 8166 	ble.w	8027424 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 8027158:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802715c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027160:	d406      	bmi.n	8027170 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8027162:	4584      	cmp	ip, r0
 8027164:	da04      	bge.n	8027170 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8027166:	2b00      	cmp	r3, #0
 8027168:	db02      	blt.n	8027170 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802716a:	42bb      	cmp	r3, r7
 802716c:	f2c0 815b 	blt.w	8027426 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8027170:	f11c 0c01 	adds.w	ip, ip, #1
 8027174:	f100 814b 	bmi.w	802740e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8027178:	4561      	cmp	r1, ip
 802717a:	f2c0 8148 	blt.w	802740e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802717e:	3301      	adds	r3, #1
 8027180:	f100 8145 	bmi.w	802740e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8027184:	429a      	cmp	r2, r3
 8027186:	f2c0 8142 	blt.w	802740e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 802718a:	9b07      	ldr	r3, [sp, #28]
 802718c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802718e:	9317      	str	r3, [sp, #92]	; 0x5c
 8027190:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027192:	2b00      	cmp	r3, #0
 8027194:	f340 8165 	ble.w	8027462 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8027198:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 802719a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 802719c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80271a0:	689b      	ldr	r3, [r3, #8]
 80271a2:	1422      	asrs	r2, r4, #16
 80271a4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80271a8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80271ac:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80271b0:	f100 81d5 	bmi.w	802755e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80271b4:	f103 38ff 	add.w	r8, r3, #4294967295
 80271b8:	4542      	cmp	r2, r8
 80271ba:	f280 81d0 	bge.w	802755e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80271be:	f1bc 0f00 	cmp.w	ip, #0
 80271c2:	f2c0 81cc 	blt.w	802755e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80271c6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80271ca:	45c4      	cmp	ip, r8
 80271cc:	f280 81c7 	bge.w	802755e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80271d0:	b21b      	sxth	r3, r3
 80271d2:	fb0c 2203 	mla	r2, ip, r3, r2
 80271d6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80271d8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80271dc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80271e0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80271e4:	2900      	cmp	r1, #0
 80271e6:	f000 8182 	beq.w	80274ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 80271ea:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80271ee:	950b      	str	r5, [sp, #44]	; 0x2c
 80271f0:	0e2d      	lsrs	r5, r5, #24
 80271f2:	9512      	str	r5, [sp, #72]	; 0x48
 80271f4:	b180      	cbz	r0, 8027218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 80271f6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80271fa:	3b01      	subs	r3, #1
 80271fc:	009b      	lsls	r3, r3, #2
 80271fe:	3304      	adds	r3, #4
 8027200:	eb08 0c03 	add.w	ip, r8, r3
 8027204:	f858 3003 	ldr.w	r3, [r8, r3]
 8027208:	9308      	str	r3, [sp, #32]
 802720a:	0e1b      	lsrs	r3, r3, #24
 802720c:	9310      	str	r3, [sp, #64]	; 0x40
 802720e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8027212:	930c      	str	r3, [sp, #48]	; 0x30
 8027214:	0e1b      	lsrs	r3, r3, #24
 8027216:	9313      	str	r3, [sp, #76]	; 0x4c
 8027218:	b289      	uxth	r1, r1
 802721a:	b280      	uxth	r0, r0
 802721c:	fb01 f900 	mul.w	r9, r1, r0
 8027220:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027224:	0109      	lsls	r1, r1, #4
 8027226:	eba1 0809 	sub.w	r8, r1, r9
 802722a:	b280      	uxth	r0, r0
 802722c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8027230:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027232:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027234:	fa1f f888 	uxth.w	r8, r8
 8027238:	1a09      	subs	r1, r1, r0
 802723a:	b289      	uxth	r1, r1
 802723c:	fb08 f303 	mul.w	r3, r8, r3
 8027240:	fb01 330e 	mla	r3, r1, lr, r3
 8027244:	fb00 3305 	mla	r3, r0, r5, r3
 8027248:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802724a:	fb09 3305 	mla	r3, r9, r5, r3
 802724e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027252:	2b00      	cmp	r3, #0
 8027254:	f000 80d2 	beq.w	80273fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8027258:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802725c:	d01b      	beq.n	8027296 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 802725e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027262:	fb0e fa0a 	mul.w	sl, lr, sl
 8027266:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802726a:	fb0e fe02 	mul.w	lr, lr, r2
 802726e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8027272:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027276:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802727a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802727e:	4452      	add	r2, sl
 8027280:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027284:	0a12      	lsrs	r2, r2, #8
 8027286:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802728a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802728e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027292:	ea42 020c 	orr.w	r2, r2, ip
 8027296:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027298:	2dff      	cmp	r5, #255	; 0xff
 802729a:	d021      	beq.n	80272e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 802729c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802729e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80272a2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80272a4:	fb05 fb0b 	mul.w	fp, r5, fp
 80272a8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80272aa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80272ae:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80272b0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80272b4:	fb05 fa0a 	mul.w	sl, r5, sl
 80272b8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80272bc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80272c0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80272c4:	44de      	add	lr, fp
 80272c6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80272ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80272ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80272d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80272d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80272da:	ea4e 050a 	orr.w	r5, lr, sl
 80272de:	950b      	str	r5, [sp, #44]	; 0x2c
 80272e0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80272e2:	2dff      	cmp	r5, #255	; 0xff
 80272e4:	d021      	beq.n	802732a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80272e6:	9d08      	ldr	r5, [sp, #32]
 80272e8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80272ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80272ee:	fb05 fb0b 	mul.w	fp, r5, fp
 80272f2:	9d08      	ldr	r5, [sp, #32]
 80272f4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80272f8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80272fa:	fb05 fa0e 	mul.w	sl, r5, lr
 80272fe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027302:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027306:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802730a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802730e:	44de      	add	lr, fp
 8027310:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027314:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027318:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802731c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027320:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027324:	ea4e 050a 	orr.w	r5, lr, sl
 8027328:	9508      	str	r5, [sp, #32]
 802732a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802732c:	2dff      	cmp	r5, #255	; 0xff
 802732e:	d021      	beq.n	8027374 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8027330:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027332:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027336:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027338:	fb05 fb0b 	mul.w	fp, r5, fp
 802733c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802733e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027342:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027344:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027348:	fb05 fa0a 	mul.w	sl, r5, sl
 802734c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027350:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027354:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027358:	44de      	add	lr, fp
 802735a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802735e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027362:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027366:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802736a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802736e:	ea4e 050a 	orr.w	r5, lr, sl
 8027372:	950c      	str	r5, [sp, #48]	; 0x30
 8027374:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027376:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802737a:	9d08      	ldr	r5, [sp, #32]
 802737c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027380:	fb08 fc0c 	mul.w	ip, r8, ip
 8027384:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027388:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802738c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802738e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8027392:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027396:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027398:	fb09 cc0e 	mla	ip, r9, lr, ip
 802739c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80273a0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80273a4:	fb08 f80e 	mul.w	r8, r8, lr
 80273a8:	fb01 8202 	mla	r2, r1, r2, r8
 80273ac:	9908      	ldr	r1, [sp, #32]
 80273ae:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80273b2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80273b4:	fb00 220a 	mla	r2, r0, sl, r2
 80273b8:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80273bc:	fb09 2900 	mla	r9, r9, r0, r2
 80273c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80273c4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80273c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80273cc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80273d0:	ea4c 0c09 	orr.w	ip, ip, r9
 80273d4:	2bff      	cmp	r3, #255	; 0xff
 80273d6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80273da:	f040 8091 	bne.w	8027500 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80273de:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80273e2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80273e6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80273ea:	f022 0207 	bic.w	r2, r2, #7
 80273ee:	431a      	orrs	r2, r3
 80273f0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80273f4:	ea4c 0c02 	orr.w	ip, ip, r2
 80273f8:	f8a7 c000 	strh.w	ip, [r7]
 80273fc:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80273fe:	441c      	add	r4, r3
 8027400:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8027402:	441e      	add	r6, r3
 8027404:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027406:	3b01      	subs	r3, #1
 8027408:	3702      	adds	r7, #2
 802740a:	9317      	str	r3, [sp, #92]	; 0x5c
 802740c:	e6c0      	b.n	8027190 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 802740e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8027410:	441c      	add	r4, r3
 8027412:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8027414:	441e      	add	r6, r3
 8027416:	9b07      	ldr	r3, [sp, #28]
 8027418:	3b01      	subs	r3, #1
 802741a:	9307      	str	r3, [sp, #28]
 802741c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802741e:	3302      	adds	r3, #2
 8027420:	930a      	str	r3, [sp, #40]	; 0x28
 8027422:	e695      	b.n	8027150 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8027424:	d024      	beq.n	8027470 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8027426:	9b07      	ldr	r3, [sp, #28]
 8027428:	982f      	ldr	r0, [sp, #188]	; 0xbc
 802742a:	3b01      	subs	r3, #1
 802742c:	fb00 4003 	mla	r0, r0, r3, r4
 8027430:	1400      	asrs	r0, r0, #16
 8027432:	f53f aeaa 	bmi.w	802718a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8027436:	3901      	subs	r1, #1
 8027438:	4288      	cmp	r0, r1
 802743a:	f6bf aea6 	bge.w	802718a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802743e:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8027440:	fb01 6303 	mla	r3, r1, r3, r6
 8027444:	141b      	asrs	r3, r3, #16
 8027446:	f53f aea0 	bmi.w	802718a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802744a:	3a01      	subs	r2, #1
 802744c:	4293      	cmp	r3, r2
 802744e:	f6bf ae9c 	bge.w	802718a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8027452:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027456:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802745a:	f1bb 0f00 	cmp.w	fp, #0
 802745e:	f300 809a 	bgt.w	8027596 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8027462:	9b07      	ldr	r3, [sp, #28]
 8027464:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027468:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802746a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802746e:	930a      	str	r3, [sp, #40]	; 0x28
 8027470:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027472:	2b00      	cmp	r3, #0
 8027474:	f340 81eb 	ble.w	802784e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8027478:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802747c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027480:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8027484:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027486:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802748a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802748e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8027492:	eef0 6a48 	vmov.f32	s13, s16
 8027496:	ee69 7a27 	vmul.f32	s15, s18, s15
 802749a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802749e:	ee37 8a48 	vsub.f32	s16, s14, s16
 80274a2:	ee16 4a90 	vmov	r4, s13
 80274a6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80274aa:	eef0 6a68 	vmov.f32	s13, s17
 80274ae:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80274b2:	ee18 2a10 	vmov	r2, s16
 80274b6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80274ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80274be:	ee18 2a90 	vmov	r2, s17
 80274c2:	932f      	str	r3, [sp, #188]	; 0xbc
 80274c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80274c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80274ca:	9330      	str	r3, [sp, #192]	; 0xc0
 80274cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80274ce:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80274d0:	3b01      	subs	r3, #1
 80274d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80274d6:	9316      	str	r3, [sp, #88]	; 0x58
 80274d8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80274da:	bf08      	it	eq
 80274dc:	4613      	moveq	r3, r2
 80274de:	ee16 6a90 	vmov	r6, s13
 80274e2:	9307      	str	r3, [sp, #28]
 80274e4:	eef0 8a67 	vmov.f32	s17, s15
 80274e8:	eeb0 8a47 	vmov.f32	s16, s14
 80274ec:	e622      	b.n	8027134 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80274ee:	2800      	cmp	r0, #0
 80274f0:	f43f ae92 	beq.w	8027218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 80274f4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80274f8:	9308      	str	r3, [sp, #32]
 80274fa:	0e1b      	lsrs	r3, r3, #24
 80274fc:	9310      	str	r3, [sp, #64]	; 0x40
 80274fe:	e68b      	b.n	8027218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8027500:	8839      	ldrh	r1, [r7, #0]
 8027502:	4dd5      	ldr	r5, [pc, #852]	; (8027858 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 8027504:	43db      	mvns	r3, r3
 8027506:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802750a:	fa5f f883 	uxtb.w	r8, r3
 802750e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8027512:	fb0e fe08 	mul.w	lr, lr, r8
 8027516:	10c8      	asrs	r0, r1, #3
 8027518:	00cb      	lsls	r3, r1, #3
 802751a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802751e:	f10e 0101 	add.w	r1, lr, #1
 8027522:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8027526:	fb00 f008 	mul.w	r0, r0, r8
 802752a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802752e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8027532:	f100 0e01 	add.w	lr, r0, #1
 8027536:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802753a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802753e:	b2db      	uxtb	r3, r3
 8027540:	b2c9      	uxtb	r1, r1
 8027542:	00d2      	lsls	r2, r2, #3
 8027544:	fb03 f308 	mul.w	r3, r3, r8
 8027548:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802754c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027550:	430a      	orrs	r2, r1
 8027552:	1c59      	adds	r1, r3, #1
 8027554:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027558:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802755c:	e748      	b.n	80273f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802755e:	f112 0801 	adds.w	r8, r2, #1
 8027562:	f53f af4b 	bmi.w	80273fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8027566:	4543      	cmp	r3, r8
 8027568:	f6ff af48 	blt.w	80273fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802756c:	f11c 0801 	adds.w	r8, ip, #1
 8027570:	f53f af44 	bmi.w	80273fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8027574:	45c6      	cmp	lr, r8
 8027576:	f6ff af41 	blt.w	80273fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802757a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802757e:	fa0f f28e 	sxth.w	r2, lr
 8027582:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8027586:	9200      	str	r2, [sp, #0]
 8027588:	b21b      	sxth	r3, r3
 802758a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802758c:	9819      	ldr	r0, [sp, #100]	; 0x64
 802758e:	4639      	mov	r1, r7
 8027590:	f7ff fc54 	bl	8026e3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8027594:	e732      	b.n	80273fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8027596:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8027598:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802759a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802759e:	1421      	asrs	r1, r4, #16
 80275a0:	1433      	asrs	r3, r6, #16
 80275a2:	fb07 1303 	mla	r3, r7, r3, r1
 80275a6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80275a8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80275ac:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80275b0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80275b4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80275b8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80275bc:	2a00      	cmp	r2, #0
 80275be:	f000 8107 	beq.w	80277d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 80275c2:	684d      	ldr	r5, [r1, #4]
 80275c4:	950d      	str	r5, [sp, #52]	; 0x34
 80275c6:	0e2d      	lsrs	r5, r5, #24
 80275c8:	9514      	str	r5, [sp, #80]	; 0x50
 80275ca:	b178      	cbz	r0, 80275ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80275cc:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80275d0:	3f01      	subs	r7, #1
 80275d2:	00bf      	lsls	r7, r7, #2
 80275d4:	3704      	adds	r7, #4
 80275d6:	eb01 0e07 	add.w	lr, r1, r7
 80275da:	59c9      	ldr	r1, [r1, r7]
 80275dc:	9109      	str	r1, [sp, #36]	; 0x24
 80275de:	0e09      	lsrs	r1, r1, #24
 80275e0:	9111      	str	r1, [sp, #68]	; 0x44
 80275e2:	f8de 1004 	ldr.w	r1, [lr, #4]
 80275e6:	910e      	str	r1, [sp, #56]	; 0x38
 80275e8:	0e09      	lsrs	r1, r1, #24
 80275ea:	9115      	str	r1, [sp, #84]	; 0x54
 80275ec:	b292      	uxth	r2, r2
 80275ee:	b280      	uxth	r0, r0
 80275f0:	fb02 f900 	mul.w	r9, r2, r0
 80275f4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80275f8:	0112      	lsls	r2, r2, #4
 80275fa:	eba2 0e09 	sub.w	lr, r2, r9
 80275fe:	b280      	uxth	r0, r0
 8027600:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8027604:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8027606:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027608:	fa1f fe8e 	uxth.w	lr, lr
 802760c:	1a09      	subs	r1, r1, r0
 802760e:	b289      	uxth	r1, r1
 8027610:	fb0e f202 	mul.w	r2, lr, r2
 8027614:	fb01 220c 	mla	r2, r1, ip, r2
 8027618:	fb00 2205 	mla	r2, r0, r5, r2
 802761c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802761e:	fb09 2205 	mla	r2, r9, r5, r2
 8027622:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8027626:	2a00      	cmp	r2, #0
 8027628:	f000 80c9 	beq.w	80277be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802762c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8027630:	d019      	beq.n	8027666 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 8027632:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8027636:	fb0c fa0a 	mul.w	sl, ip, sl
 802763a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802763e:	fb0c fc03 	mul.w	ip, ip, r3
 8027642:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027646:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802764a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802764e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8027652:	4453      	add	r3, sl
 8027654:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027658:	0a1b      	lsrs	r3, r3, #8
 802765a:	0a3f      	lsrs	r7, r7, #8
 802765c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027660:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8027664:	433b      	orrs	r3, r7
 8027666:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027668:	2dff      	cmp	r5, #255	; 0xff
 802766a:	d020      	beq.n	80276ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 802766c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802766e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027672:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027674:	436f      	muls	r7, r5
 8027676:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027678:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802767c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802767e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027682:	fb05 fa0a 	mul.w	sl, r5, sl
 8027686:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802768a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802768e:	44bc      	add	ip, r7
 8027690:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027694:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027698:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802769c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80276a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80276a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80276a8:	ea4c 050a 	orr.w	r5, ip, sl
 80276ac:	950d      	str	r5, [sp, #52]	; 0x34
 80276ae:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80276b0:	2dff      	cmp	r5, #255	; 0xff
 80276b2:	d020      	beq.n	80276f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 80276b4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80276b6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80276ba:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80276bc:	436f      	muls	r7, r5
 80276be:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80276c0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80276c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80276c6:	fb05 fa0c 	mul.w	sl, r5, ip
 80276ca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80276ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80276d2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80276d6:	44bc      	add	ip, r7
 80276d8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80276dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80276e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80276e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80276e8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80276ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80276f0:	ea4c 050a 	orr.w	r5, ip, sl
 80276f4:	9509      	str	r5, [sp, #36]	; 0x24
 80276f6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80276f8:	2dff      	cmp	r5, #255	; 0xff
 80276fa:	d020      	beq.n	802773e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 80276fc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80276fe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027702:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027704:	436f      	muls	r7, r5
 8027706:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027708:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802770c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802770e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027712:	fb05 fa0a 	mul.w	sl, r5, sl
 8027716:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802771a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802771e:	44bc      	add	ip, r7
 8027720:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027724:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027728:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802772c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027730:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027734:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027738:	ea4c 050a 	orr.w	r5, ip, sl
 802773c:	950e      	str	r5, [sp, #56]	; 0x38
 802773e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027740:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027744:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027746:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802774a:	fb0e f707 	mul.w	r7, lr, r7
 802774e:	fb01 770c 	mla	r7, r1, ip, r7
 8027752:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027756:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027758:	fb00 770c 	mla	r7, r0, ip, r7
 802775c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027760:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027762:	fb09 770c 	mla	r7, r9, ip, r7
 8027766:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802776a:	fb0e fe0c 	mul.w	lr, lr, ip
 802776e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027772:	fb01 e303 	mla	r3, r1, r3, lr
 8027776:	9909      	ldr	r1, [sp, #36]	; 0x24
 8027778:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802777c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802777e:	fb00 330a 	mla	r3, r0, sl, r3
 8027782:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8027786:	fb09 3c0c 	mla	ip, r9, ip, r3
 802778a:	0a3f      	lsrs	r7, r7, #8
 802778c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027790:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8027794:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027798:	ea47 070c 	orr.w	r7, r7, ip
 802779c:	2aff      	cmp	r2, #255	; 0xff
 802779e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80277a2:	d11e      	bne.n	80277e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 80277a4:	097a      	lsrs	r2, r7, #5
 80277a6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80277aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80277ae:	f023 0307 	bic.w	r3, r3, #7
 80277b2:	4313      	orrs	r3, r2
 80277b4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80277b8:	431f      	orrs	r7, r3
 80277ba:	f8a8 7000 	strh.w	r7, [r8]
 80277be:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80277c0:	441c      	add	r4, r3
 80277c2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80277c4:	f108 0802 	add.w	r8, r8, #2
 80277c8:	441e      	add	r6, r3
 80277ca:	f10b 3bff 	add.w	fp, fp, #4294967295
 80277ce:	e644      	b.n	802745a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80277d0:	2800      	cmp	r0, #0
 80277d2:	f43f af0b 	beq.w	80275ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80277d6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80277da:	9109      	str	r1, [sp, #36]	; 0x24
 80277dc:	0e09      	lsrs	r1, r1, #24
 80277de:	9111      	str	r1, [sp, #68]	; 0x44
 80277e0:	e704      	b.n	80275ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80277e2:	f8b8 1000 	ldrh.w	r1, [r8]
 80277e6:	43d2      	mvns	r2, r2
 80277e8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80277ec:	fa5f fe82 	uxtb.w	lr, r2
 80277f0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80277f4:	fb0c fc0e 	mul.w	ip, ip, lr
 80277f8:	10c8      	asrs	r0, r1, #3
 80277fa:	00ca      	lsls	r2, r1, #3
 80277fc:	f10c 0101 	add.w	r1, ip, #1
 8027800:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8027804:	0c39      	lsrs	r1, r7, #16
 8027806:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802780a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802780e:	4912      	ldr	r1, [pc, #72]	; (8027858 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 8027810:	fb00 f00e 	mul.w	r0, r0, lr
 8027814:	fa5f fc8c 	uxtb.w	ip, ip
 8027818:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802781c:	b2d2      	uxtb	r2, r2
 802781e:	1c41      	adds	r1, r0, #1
 8027820:	fb02 f20e 	mul.w	r2, r2, lr
 8027824:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8027828:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802782c:	1c51      	adds	r1, r2, #1
 802782e:	00c0      	lsls	r0, r0, #3
 8027830:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8027834:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8027838:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802783c:	ea4c 0c00 	orr.w	ip, ip, r0
 8027840:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8027844:	ea47 0c0c 	orr.w	ip, r7, ip
 8027848:	f8a8 c000 	strh.w	ip, [r8]
 802784c:	e7b7      	b.n	80277be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802784e:	b01b      	add	sp, #108	; 0x6c
 8027850:	ecbd 8b08 	vpop	{d8-d11}
 8027854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027858:	fffff800 	.word	0xfffff800

0802785c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 802785c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027860:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8027864:	2c00      	cmp	r4, #0
 8027866:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802786a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802786e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8027872:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8027876:	fb04 ce03 	mla	lr, r4, r3, ip
 802787a:	db60      	blt.n	802793e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 802787c:	45a1      	cmp	r9, r4
 802787e:	dd5e      	ble.n	802793e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8027880:	f1bc 0f00 	cmp.w	ip, #0
 8027884:	db59      	blt.n	802793a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8027886:	45e0      	cmp	r8, ip
 8027888:	dd57      	ble.n	802793a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 802788a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 802788e:	f01e 0f01 	tst.w	lr, #1
 8027892:	5c16      	ldrb	r6, [r2, r0]
 8027894:	bf0c      	ite	eq
 8027896:	f006 060f 	andeq.w	r6, r6, #15
 802789a:	1136      	asrne	r6, r6, #4
 802789c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80278a0:	b2f6      	uxtb	r6, r6
 80278a2:	f11c 0001 	adds.w	r0, ip, #1
 80278a6:	d44d      	bmi.n	8027944 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80278a8:	4580      	cmp	r8, r0
 80278aa:	dd4b      	ble.n	8027944 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80278ac:	2d00      	cmp	r5, #0
 80278ae:	d04b      	beq.n	8027948 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 80278b0:	f10e 0a01 	add.w	sl, lr, #1
 80278b4:	ea4f 005a 	mov.w	r0, sl, lsr #1
 80278b8:	f01a 0f01 	tst.w	sl, #1
 80278bc:	5c10      	ldrb	r0, [r2, r0]
 80278be:	bf0c      	ite	eq
 80278c0:	f000 000f 	andeq.w	r0, r0, #15
 80278c4:	1100      	asrne	r0, r0, #4
 80278c6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80278ca:	b2c0      	uxtb	r0, r0
 80278cc:	3401      	adds	r4, #1
 80278ce:	d43f      	bmi.n	8027950 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80278d0:	45a1      	cmp	r9, r4
 80278d2:	dd3d      	ble.n	8027950 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80278d4:	2f00      	cmp	r7, #0
 80278d6:	f000 80a8 	beq.w	8027a2a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 80278da:	f1bc 0f00 	cmp.w	ip, #0
 80278de:	db35      	blt.n	802794c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80278e0:	45e0      	cmp	r8, ip
 80278e2:	dd33      	ble.n	802794c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80278e4:	eb03 090e 	add.w	r9, r3, lr
 80278e8:	ea4f 0459 	mov.w	r4, r9, lsr #1
 80278ec:	f019 0f01 	tst.w	r9, #1
 80278f0:	5d14      	ldrb	r4, [r2, r4]
 80278f2:	bf0c      	ite	eq
 80278f4:	f004 040f 	andeq.w	r4, r4, #15
 80278f8:	1124      	asrne	r4, r4, #4
 80278fa:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80278fe:	b2e4      	uxtb	r4, r4
 8027900:	f11c 0c01 	adds.w	ip, ip, #1
 8027904:	d427      	bmi.n	8027956 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8027906:	45e0      	cmp	r8, ip
 8027908:	dd25      	ble.n	8027956 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 802790a:	b335      	cbz	r5, 802795a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 802790c:	3301      	adds	r3, #1
 802790e:	449e      	add	lr, r3
 8027910:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8027914:	f01e 0f01 	tst.w	lr, #1
 8027918:	5cd2      	ldrb	r2, [r2, r3]
 802791a:	bf0c      	ite	eq
 802791c:	f002 020f 	andeq.w	r2, r2, #15
 8027920:	1112      	asrne	r2, r2, #4
 8027922:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8027926:	b2d3      	uxtb	r3, r2
 8027928:	2d0f      	cmp	r5, #15
 802792a:	d917      	bls.n	802795c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 802792c:	4b42      	ldr	r3, [pc, #264]	; (8027a38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 802792e:	4a43      	ldr	r2, [pc, #268]	; (8027a3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 8027930:	4843      	ldr	r0, [pc, #268]	; (8027a40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 8027932:	f240 11f9 	movw	r1, #505	; 0x1f9
 8027936:	f004 fb45 	bl	802bfc4 <__assert_func>
 802793a:	2600      	movs	r6, #0
 802793c:	e7b1      	b.n	80278a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 802793e:	2000      	movs	r0, #0
 8027940:	4606      	mov	r6, r0
 8027942:	e7c3      	b.n	80278cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8027944:	2000      	movs	r0, #0
 8027946:	e7c1      	b.n	80278cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8027948:	4628      	mov	r0, r5
 802794a:	e7bf      	b.n	80278cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 802794c:	2400      	movs	r4, #0
 802794e:	e7d7      	b.n	8027900 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8027950:	2300      	movs	r3, #0
 8027952:	461c      	mov	r4, r3
 8027954:	e7e8      	b.n	8027928 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8027956:	2300      	movs	r3, #0
 8027958:	e7e6      	b.n	8027928 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 802795a:	462b      	mov	r3, r5
 802795c:	2f0f      	cmp	r7, #15
 802795e:	d8e5      	bhi.n	802792c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8027960:	b2ad      	uxth	r5, r5
 8027962:	b2bf      	uxth	r7, r7
 8027964:	fb05 fc07 	mul.w	ip, r5, r7
 8027968:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 802796c:	012d      	lsls	r5, r5, #4
 802796e:	b2bf      	uxth	r7, r7
 8027970:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8027974:	eba5 050c 	sub.w	r5, r5, ip
 8027978:	1bd2      	subs	r2, r2, r7
 802797a:	b2ad      	uxth	r5, r5
 802797c:	b292      	uxth	r2, r2
 802797e:	4368      	muls	r0, r5
 8027980:	fb06 0002 	mla	r0, r6, r2, r0
 8027984:	fb07 0404 	mla	r4, r7, r4, r0
 8027988:	fb0c 4303 	mla	r3, ip, r3, r4
 802798c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027990:	b1b3      	cbz	r3, 80279c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8027992:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8027996:	435a      	muls	r2, r3
 8027998:	1c53      	adds	r3, r2, #1
 802799a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802799e:	4a29      	ldr	r2, [pc, #164]	; (8027a44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 80279a0:	121b      	asrs	r3, r3, #8
 80279a2:	6812      	ldr	r2, [r2, #0]
 80279a4:	2bff      	cmp	r3, #255	; 0xff
 80279a6:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80279aa:	d10b      	bne.n	80279c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 80279ac:	4b26      	ldr	r3, [pc, #152]	; (8027a48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 80279ae:	0950      	lsrs	r0, r2, #5
 80279b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80279b4:	4033      	ands	r3, r6
 80279b6:	4318      	orrs	r0, r3
 80279b8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80279bc:	4302      	orrs	r2, r0
 80279be:	800a      	strh	r2, [r1, #0]
 80279c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80279c4:	880d      	ldrh	r5, [r1, #0]
 80279c6:	b29f      	uxth	r7, r3
 80279c8:	122c      	asrs	r4, r5, #8
 80279ca:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80279ce:	43db      	mvns	r3, r3
 80279d0:	b2db      	uxtb	r3, r3
 80279d2:	fb10 f007 	smulbb	r0, r0, r7
 80279d6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80279da:	fb04 0403 	mla	r4, r4, r3, r0
 80279de:	b2f6      	uxtb	r6, r6
 80279e0:	10e8      	asrs	r0, r5, #3
 80279e2:	b2d2      	uxtb	r2, r2
 80279e4:	00ed      	lsls	r5, r5, #3
 80279e6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80279ea:	fb12 f207 	smulbb	r2, r2, r7
 80279ee:	fb16 f607 	smulbb	r6, r6, r7
 80279f2:	b2ed      	uxtb	r5, r5
 80279f4:	b2a4      	uxth	r4, r4
 80279f6:	fb00 6603 	mla	r6, r0, r3, r6
 80279fa:	fb05 2303 	mla	r3, r5, r3, r2
 80279fe:	b29a      	uxth	r2, r3
 8027a00:	1c63      	adds	r3, r4, #1
 8027a02:	b2b0      	uxth	r0, r6
 8027a04:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8027a08:	1c53      	adds	r3, r2, #1
 8027a0a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027a0e:	1c42      	adds	r2, r0, #1
 8027a10:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027a14:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8027a18:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027a1c:	0940      	lsrs	r0, r0, #5
 8027a1e:	4323      	orrs	r3, r4
 8027a20:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8027a24:	4303      	orrs	r3, r0
 8027a26:	800b      	strh	r3, [r1, #0]
 8027a28:	e7ca      	b.n	80279c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8027a2a:	2d0f      	cmp	r5, #15
 8027a2c:	f63f af7e 	bhi.w	802792c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8027a30:	463b      	mov	r3, r7
 8027a32:	463c      	mov	r4, r7
 8027a34:	e794      	b.n	8027960 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8027a36:	bf00      	nop
 8027a38:	08035bf7 	.word	0x08035bf7
 8027a3c:	08036126 	.word	0x08036126
 8027a40:	08035bc4 	.word	0x08035bc4
 8027a44:	2001e1e8 	.word	0x2001e1e8
 8027a48:	00fff800 	.word	0x00fff800

08027a4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027a50:	ed2d 8b08 	vpush	{d8-d11}
 8027a54:	b097      	sub	sp, #92	; 0x5c
 8027a56:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 8027a5a:	9214      	str	r2, [sp, #80]	; 0x50
 8027a5c:	9309      	str	r3, [sp, #36]	; 0x24
 8027a5e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8027a60:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8027a64:	910d      	str	r1, [sp, #52]	; 0x34
 8027a66:	930f      	str	r3, [sp, #60]	; 0x3c
 8027a68:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8027a6c:	9015      	str	r0, [sp, #84]	; 0x54
 8027a6e:	6850      	ldr	r0, [r2, #4]
 8027a70:	6812      	ldr	r2, [r2, #0]
 8027a72:	fb00 1303 	mla	r3, r0, r3, r1
 8027a76:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8027a7a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8027a7c:	689b      	ldr	r3, [r3, #8]
 8027a7e:	3301      	adds	r3, #1
 8027a80:	f023 0301 	bic.w	r3, r3, #1
 8027a84:	930a      	str	r3, [sp, #40]	; 0x28
 8027a86:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8027a88:	681f      	ldr	r7, [r3, #0]
 8027a8a:	eeb0 aa40 	vmov.f32	s20, s0
 8027a8e:	eef0 9a60 	vmov.f32	s19, s1
 8027a92:	eeb0 9a41 	vmov.f32	s18, s2
 8027a96:	eeb0 8a62 	vmov.f32	s16, s5
 8027a9a:	eef0 8a43 	vmov.f32	s17, s6
 8027a9e:	eef0 ba44 	vmov.f32	s23, s8
 8027aa2:	eeb0 ba64 	vmov.f32	s22, s9
 8027aa6:	eef0 aa45 	vmov.f32	s21, s10
 8027aaa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027aac:	2b00      	cmp	r3, #0
 8027aae:	dc03      	bgt.n	8027ab8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8027ab0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8027ab2:	2b00      	cmp	r3, #0
 8027ab4:	f340 8287 	ble.w	8027fc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8027ab8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8027aba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027abe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027ac2:	1e48      	subs	r0, r1, #1
 8027ac4:	f102 3cff 	add.w	ip, r2, #4294967295
 8027ac8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027aca:	2b00      	cmp	r3, #0
 8027acc:	f340 80c4 	ble.w	8027c58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8027ad0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8027ad4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027ad8:	d406      	bmi.n	8027ae8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8027ada:	4586      	cmp	lr, r0
 8027adc:	da04      	bge.n	8027ae8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8027ade:	2b00      	cmp	r3, #0
 8027ae0:	db02      	blt.n	8027ae8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8027ae2:	4563      	cmp	r3, ip
 8027ae4:	f2c0 80b9 	blt.w	8027c5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8027ae8:	f11e 0e01 	adds.w	lr, lr, #1
 8027aec:	f100 80aa 	bmi.w	8027c44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8027af0:	4571      	cmp	r1, lr
 8027af2:	f2c0 80a7 	blt.w	8027c44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8027af6:	3301      	adds	r3, #1
 8027af8:	f100 80a4 	bmi.w	8027c44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8027afc:	429a      	cmp	r2, r3
 8027afe:	f2c0 80a1 	blt.w	8027c44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8027b02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027b04:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8027b08:	930e      	str	r3, [sp, #56]	; 0x38
 8027b0a:	46c8      	mov	r8, r9
 8027b0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8027b0e:	2b00      	cmp	r3, #0
 8027b10:	f340 80c3 	ble.w	8027c9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8027b14:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8027b16:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8027b1a:	1423      	asrs	r3, r4, #16
 8027b1c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8027b20:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027b24:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8027b28:	f100 814d 	bmi.w	8027dc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8027b2c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8027b30:	455b      	cmp	r3, fp
 8027b32:	f280 8148 	bge.w	8027dc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8027b36:	2800      	cmp	r0, #0
 8027b38:	f2c0 8145 	blt.w	8027dc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8027b3c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8027b40:	4558      	cmp	r0, fp
 8027b42:	f280 8140 	bge.w	8027dc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8027b46:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8027b48:	fb00 3305 	mla	r3, r0, r5, r3
 8027b4c:	0858      	lsrs	r0, r3, #1
 8027b4e:	07dd      	lsls	r5, r3, #31
 8027b50:	f817 c000 	ldrb.w	ip, [r7, r0]
 8027b54:	bf54      	ite	pl
 8027b56:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027b5a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027b5e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027b62:	fa5f fc8c 	uxtb.w	ip, ip
 8027b66:	2a00      	cmp	r2, #0
 8027b68:	f000 80db 	beq.w	8027d22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8027b6c:	1c58      	adds	r0, r3, #1
 8027b6e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8027b72:	07c0      	lsls	r0, r0, #31
 8027b74:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8027b78:	bf54      	ite	pl
 8027b7a:	f00e 0e0f 	andpl.w	lr, lr, #15
 8027b7e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8027b82:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8027b86:	fa5f f08e 	uxtb.w	r0, lr
 8027b8a:	9010      	str	r0, [sp, #64]	; 0x40
 8027b8c:	b1c9      	cbz	r1, 8027bc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8027b8e:	4453      	add	r3, sl
 8027b90:	0858      	lsrs	r0, r3, #1
 8027b92:	07dd      	lsls	r5, r3, #31
 8027b94:	5c38      	ldrb	r0, [r7, r0]
 8027b96:	bf54      	ite	pl
 8027b98:	f000 000f 	andpl.w	r0, r0, #15
 8027b9c:	1100      	asrmi	r0, r0, #4
 8027b9e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8027ba2:	3301      	adds	r3, #1
 8027ba4:	b2c0      	uxtb	r0, r0
 8027ba6:	900b      	str	r0, [sp, #44]	; 0x2c
 8027ba8:	0858      	lsrs	r0, r3, #1
 8027baa:	07dd      	lsls	r5, r3, #31
 8027bac:	f817 e000 	ldrb.w	lr, [r7, r0]
 8027bb0:	bf54      	ite	pl
 8027bb2:	f00e 030f 	andpl.w	r3, lr, #15
 8027bb6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8027bba:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027bbe:	b2db      	uxtb	r3, r3
 8027bc0:	9311      	str	r3, [sp, #68]	; 0x44
 8027bc2:	b292      	uxth	r2, r2
 8027bc4:	b289      	uxth	r1, r1
 8027bc6:	fb02 f301 	mul.w	r3, r2, r1
 8027bca:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8027bce:	0112      	lsls	r2, r2, #4
 8027bd0:	b289      	uxth	r1, r1
 8027bd2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8027bd6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027bd8:	1ad2      	subs	r2, r2, r3
 8027bda:	1a40      	subs	r0, r0, r1
 8027bdc:	b292      	uxth	r2, r2
 8027bde:	436a      	muls	r2, r5
 8027be0:	b280      	uxth	r0, r0
 8027be2:	fb0c 2c00 	mla	ip, ip, r0, r2
 8027be6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8027be8:	fb01 c102 	mla	r1, r1, r2, ip
 8027bec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8027bee:	fb03 1302 	mla	r3, r3, r2, r1
 8027bf2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027bf6:	b1db      	cbz	r3, 8027c30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027bf8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8027bfa:	4353      	muls	r3, r2
 8027bfc:	1c5a      	adds	r2, r3, #1
 8027bfe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8027c02:	4ac6      	ldr	r2, [pc, #792]	; (8027f1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 8027c04:	121b      	asrs	r3, r3, #8
 8027c06:	6812      	ldr	r2, [r2, #0]
 8027c08:	2bff      	cmp	r3, #255	; 0xff
 8027c0a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8027c0e:	f040 8099 	bne.w	8027d44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 8027c12:	0953      	lsrs	r3, r2, #5
 8027c14:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8027c18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027c1c:	f02c 0c07 	bic.w	ip, ip, #7
 8027c20:	ea43 0c0c 	orr.w	ip, r3, ip
 8027c24:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027c28:	ea4c 0202 	orr.w	r2, ip, r2
 8027c2c:	f8a8 2000 	strh.w	r2, [r8]
 8027c30:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8027c32:	441c      	add	r4, r3
 8027c34:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027c36:	441e      	add	r6, r3
 8027c38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8027c3a:	3b01      	subs	r3, #1
 8027c3c:	f108 0802 	add.w	r8, r8, #2
 8027c40:	930e      	str	r3, [sp, #56]	; 0x38
 8027c42:	e763      	b.n	8027b0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 8027c44:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8027c46:	441c      	add	r4, r3
 8027c48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027c4a:	441e      	add	r6, r3
 8027c4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027c4e:	3b01      	subs	r3, #1
 8027c50:	9309      	str	r3, [sp, #36]	; 0x24
 8027c52:	f109 0902 	add.w	r9, r9, #2
 8027c56:	e737      	b.n	8027ac8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8027c58:	d024      	beq.n	8027ca4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8027c5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027c5c:	982b      	ldr	r0, [sp, #172]	; 0xac
 8027c5e:	3b01      	subs	r3, #1
 8027c60:	fb00 4003 	mla	r0, r0, r3, r4
 8027c64:	1400      	asrs	r0, r0, #16
 8027c66:	f53f af4c 	bmi.w	8027b02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8027c6a:	3901      	subs	r1, #1
 8027c6c:	4288      	cmp	r0, r1
 8027c6e:	f6bf af48 	bge.w	8027b02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8027c72:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8027c74:	fb01 6303 	mla	r3, r1, r3, r6
 8027c78:	141b      	asrs	r3, r3, #16
 8027c7a:	f53f af42 	bmi.w	8027b02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8027c7e:	3a01      	subs	r2, #1
 8027c80:	4293      	cmp	r3, r2
 8027c82:	f6bf af3e 	bge.w	8027b02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8027c86:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8027c8a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8027c8e:	930e      	str	r3, [sp, #56]	; 0x38
 8027c90:	46c8      	mov	r8, r9
 8027c92:	f1bb 0f00 	cmp.w	fp, #0
 8027c96:	f300 80b7 	bgt.w	8027e08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8027c9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027c9c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027ca0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8027ca4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027ca6:	2b00      	cmp	r3, #0
 8027ca8:	f340 818d 	ble.w	8027fc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8027cac:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8027cb0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027cb4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8027cb8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027cba:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8027cbe:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8027cc2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8027cc6:	eef0 6a48 	vmov.f32	s13, s16
 8027cca:	ee69 7a27 	vmul.f32	s15, s18, s15
 8027cce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027cd2:	ee37 8a48 	vsub.f32	s16, s14, s16
 8027cd6:	ee16 4a90 	vmov	r4, s13
 8027cda:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8027cde:	eef0 6a68 	vmov.f32	s13, s17
 8027ce2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8027ce6:	ee18 2a10 	vmov	r2, s16
 8027cea:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8027cee:	fb92 f3f3 	sdiv	r3, r2, r3
 8027cf2:	ee18 2a90 	vmov	r2, s17
 8027cf6:	932b      	str	r3, [sp, #172]	; 0xac
 8027cf8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027cfa:	fb92 f3f3 	sdiv	r3, r2, r3
 8027cfe:	932c      	str	r3, [sp, #176]	; 0xb0
 8027d00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027d02:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8027d04:	3b01      	subs	r3, #1
 8027d06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027d0a:	930d      	str	r3, [sp, #52]	; 0x34
 8027d0c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027d0e:	bf08      	it	eq
 8027d10:	4613      	moveq	r3, r2
 8027d12:	ee16 6a90 	vmov	r6, s13
 8027d16:	9309      	str	r3, [sp, #36]	; 0x24
 8027d18:	eef0 8a67 	vmov.f32	s17, s15
 8027d1c:	eeb0 8a47 	vmov.f32	s16, s14
 8027d20:	e6c3      	b.n	8027aaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8027d22:	2900      	cmp	r1, #0
 8027d24:	f43f af4d 	beq.w	8027bc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8027d28:	eb0a 0003 	add.w	r0, sl, r3
 8027d2c:	0843      	lsrs	r3, r0, #1
 8027d2e:	07c0      	lsls	r0, r0, #31
 8027d30:	5cfb      	ldrb	r3, [r7, r3]
 8027d32:	bf54      	ite	pl
 8027d34:	f003 030f 	andpl.w	r3, r3, #15
 8027d38:	111b      	asrmi	r3, r3, #4
 8027d3a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027d3e:	b2db      	uxtb	r3, r3
 8027d40:	930b      	str	r3, [sp, #44]	; 0x2c
 8027d42:	e73e      	b.n	8027bc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8027d44:	f8b8 e000 	ldrh.w	lr, [r8]
 8027d48:	fa1f fb83 	uxth.w	fp, r3
 8027d4c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8027d50:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8027d54:	43db      	mvns	r3, r3
 8027d56:	b2db      	uxtb	r3, r3
 8027d58:	fb11 f10b 	smulbb	r1, r1, fp
 8027d5c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8027d60:	fb00 1003 	mla	r0, r0, r3, r1
 8027d64:	fa5f fc8c 	uxtb.w	ip, ip
 8027d68:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8027d6c:	b2d2      	uxtb	r2, r2
 8027d6e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027d72:	b280      	uxth	r0, r0
 8027d74:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8027d78:	fb1c fc0b 	smulbb	ip, ip, fp
 8027d7c:	fa5f fe8e 	uxtb.w	lr, lr
 8027d80:	fb12 fb0b 	smulbb	fp, r2, fp
 8027d84:	fb01 cc03 	mla	ip, r1, r3, ip
 8027d88:	fb0e bb03 	mla	fp, lr, r3, fp
 8027d8c:	1c43      	adds	r3, r0, #1
 8027d8e:	fa1f fc8c 	uxth.w	ip, ip
 8027d92:	fa1f fb8b 	uxth.w	fp, fp
 8027d96:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8027d9a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8027d9e:	f10c 0101 	add.w	r1, ip, #1
 8027da2:	f10b 0001 	add.w	r0, fp, #1
 8027da6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8027daa:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8027dae:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027db2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8027db6:	4318      	orrs	r0, r3
 8027db8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8027dbc:	ea40 000c 	orr.w	r0, r0, ip
 8027dc0:	f8a8 0000 	strh.w	r0, [r8]
 8027dc4:	e734      	b.n	8027c30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027dc6:	f113 0b01 	adds.w	fp, r3, #1
 8027dca:	f53f af31 	bmi.w	8027c30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027dce:	45dc      	cmp	ip, fp
 8027dd0:	f6ff af2e 	blt.w	8027c30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027dd4:	f110 0b01 	adds.w	fp, r0, #1
 8027dd8:	f53f af2a 	bmi.w	8027c30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027ddc:	45de      	cmp	lr, fp
 8027dde:	f6ff af27 	blt.w	8027c30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027de2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027de4:	9302      	str	r3, [sp, #8]
 8027de6:	fa0f f38e 	sxth.w	r3, lr
 8027dea:	9301      	str	r3, [sp, #4]
 8027dec:	fa0f f38c 	sxth.w	r3, ip
 8027df0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8027df4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8027df8:	9300      	str	r3, [sp, #0]
 8027dfa:	463a      	mov	r2, r7
 8027dfc:	4653      	mov	r3, sl
 8027dfe:	4641      	mov	r1, r8
 8027e00:	9815      	ldr	r0, [sp, #84]	; 0x54
 8027e02:	f7ff fd2b 	bl	802785c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8027e06:	e713      	b.n	8027c30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027e08:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8027e0a:	1422      	asrs	r2, r4, #16
 8027e0c:	1433      	asrs	r3, r6, #16
 8027e0e:	fb05 2303 	mla	r3, r5, r3, r2
 8027e12:	085a      	lsrs	r2, r3, #1
 8027e14:	07dd      	lsls	r5, r3, #31
 8027e16:	5cba      	ldrb	r2, [r7, r2]
 8027e18:	bf54      	ite	pl
 8027e1a:	f002 020f 	andpl.w	r2, r2, #15
 8027e1e:	1112      	asrmi	r2, r2, #4
 8027e20:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8027e24:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027e28:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027e2c:	b2d2      	uxtb	r2, r2
 8027e2e:	2900      	cmp	r1, #0
 8027e30:	d076      	beq.n	8027f20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8027e32:	f103 0e01 	add.w	lr, r3, #1
 8027e36:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8027e3a:	f01e 0f01 	tst.w	lr, #1
 8027e3e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027e42:	bf0c      	ite	eq
 8027e44:	f00c 0c0f 	andeq.w	ip, ip, #15
 8027e48:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8027e4c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027e50:	fa5f f58c 	uxtb.w	r5, ip
 8027e54:	9512      	str	r5, [sp, #72]	; 0x48
 8027e56:	b300      	cbz	r0, 8027e9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8027e58:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027e5a:	442b      	add	r3, r5
 8027e5c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027e60:	07dd      	lsls	r5, r3, #31
 8027e62:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027e66:	bf54      	ite	pl
 8027e68:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027e6c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027e70:	3301      	adds	r3, #1
 8027e72:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027e76:	fa5f f58c 	uxtb.w	r5, ip
 8027e7a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027e7e:	950c      	str	r5, [sp, #48]	; 0x30
 8027e80:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027e84:	07dd      	lsls	r5, r3, #31
 8027e86:	bf54      	ite	pl
 8027e88:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027e8c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027e90:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027e94:	fa5f f38c 	uxtb.w	r3, ip
 8027e98:	9313      	str	r3, [sp, #76]	; 0x4c
 8027e9a:	b289      	uxth	r1, r1
 8027e9c:	b280      	uxth	r0, r0
 8027e9e:	fb01 f300 	mul.w	r3, r1, r0
 8027ea2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8027ea6:	0109      	lsls	r1, r1, #4
 8027ea8:	b280      	uxth	r0, r0
 8027eaa:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8027eae:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027eb0:	1ac9      	subs	r1, r1, r3
 8027eb2:	ebac 0c00 	sub.w	ip, ip, r0
 8027eb6:	b289      	uxth	r1, r1
 8027eb8:	4369      	muls	r1, r5
 8027eba:	fa1f fc8c 	uxth.w	ip, ip
 8027ebe:	fb02 120c 	mla	r2, r2, ip, r1
 8027ec2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8027ec4:	fb00 2001 	mla	r0, r0, r1, r2
 8027ec8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8027eca:	fb03 0302 	mla	r3, r3, r2, r0
 8027ece:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027ed2:	b1d3      	cbz	r3, 8027f0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8027ed4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8027ed6:	4353      	muls	r3, r2
 8027ed8:	1c5a      	adds	r2, r3, #1
 8027eda:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8027ede:	4a0f      	ldr	r2, [pc, #60]	; (8027f1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 8027ee0:	121b      	asrs	r3, r3, #8
 8027ee2:	6812      	ldr	r2, [r2, #0]
 8027ee4:	2bff      	cmp	r3, #255	; 0xff
 8027ee6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8027eea:	d12d      	bne.n	8027f48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8027eec:	0953      	lsrs	r3, r2, #5
 8027eee:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8027ef2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027ef6:	f02c 0c07 	bic.w	ip, ip, #7
 8027efa:	ea43 0c0c 	orr.w	ip, r3, ip
 8027efe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027f02:	ea4c 0202 	orr.w	r2, ip, r2
 8027f06:	f8a8 2000 	strh.w	r2, [r8]
 8027f0a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8027f0c:	441c      	add	r4, r3
 8027f0e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027f10:	f108 0802 	add.w	r8, r8, #2
 8027f14:	441e      	add	r6, r3
 8027f16:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027f1a:	e6ba      	b.n	8027c92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8027f1c:	2001e1e8 	.word	0x2001e1e8
 8027f20:	2800      	cmp	r0, #0
 8027f22:	d0ba      	beq.n	8027e9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8027f24:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027f26:	442b      	add	r3, r5
 8027f28:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027f2c:	07db      	lsls	r3, r3, #31
 8027f2e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027f32:	bf54      	ite	pl
 8027f34:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027f38:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027f3c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027f40:	fa5f f38c 	uxtb.w	r3, ip
 8027f44:	930c      	str	r3, [sp, #48]	; 0x30
 8027f46:	e7a8      	b.n	8027e9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8027f48:	f8b8 e000 	ldrh.w	lr, [r8]
 8027f4c:	fa1f fa83 	uxth.w	sl, r3
 8027f50:	ea4f 202e 	mov.w	r0, lr, asr #8
 8027f54:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8027f58:	43db      	mvns	r3, r3
 8027f5a:	b2db      	uxtb	r3, r3
 8027f5c:	fb11 f10a 	smulbb	r1, r1, sl
 8027f60:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8027f64:	fb00 1003 	mla	r0, r0, r3, r1
 8027f68:	b2d2      	uxtb	r2, r2
 8027f6a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8027f6e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027f72:	fa5f fe8e 	uxtb.w	lr, lr
 8027f76:	fb12 f20a 	smulbb	r2, r2, sl
 8027f7a:	fb0e 2203 	mla	r2, lr, r3, r2
 8027f7e:	fa5f fc8c 	uxtb.w	ip, ip
 8027f82:	b280      	uxth	r0, r0
 8027f84:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8027f88:	b292      	uxth	r2, r2
 8027f8a:	fb1c fc0a 	smulbb	ip, ip, sl
 8027f8e:	fb01 cc03 	mla	ip, r1, r3, ip
 8027f92:	1c43      	adds	r3, r0, #1
 8027f94:	1c51      	adds	r1, r2, #1
 8027f96:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8027f9a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8027f9e:	fa1f fc8c 	uxth.w	ip, ip
 8027fa2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8027fa6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8027faa:	4308      	orrs	r0, r1
 8027fac:	f10c 0101 	add.w	r1, ip, #1
 8027fb0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8027fb4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8027fb8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8027fbc:	ea40 000c 	orr.w	r0, r0, ip
 8027fc0:	f8a8 0000 	strh.w	r0, [r8]
 8027fc4:	e7a1      	b.n	8027f0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8027fc6:	b017      	add	sp, #92	; 0x5c
 8027fc8:	ecbd 8b08 	vpop	{d8-d11}
 8027fcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027fd0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8027fd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027fd4:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8027fd8:	2c00      	cmp	r4, #0
 8027fda:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8027fde:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8027fe2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8027fe6:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8027fea:	fb04 ce03 	mla	lr, r4, r3, ip
 8027fee:	db60      	blt.n	80280b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8027ff0:	45a1      	cmp	r9, r4
 8027ff2:	dd5e      	ble.n	80280b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8027ff4:	f1bc 0f00 	cmp.w	ip, #0
 8027ff8:	db59      	blt.n	80280ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8027ffa:	45e0      	cmp	r8, ip
 8027ffc:	dd57      	ble.n	80280ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8027ffe:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8028002:	f01e 0f01 	tst.w	lr, #1
 8028006:	5c16      	ldrb	r6, [r2, r0]
 8028008:	bf0c      	ite	eq
 802800a:	f006 060f 	andeq.w	r6, r6, #15
 802800e:	1136      	asrne	r6, r6, #4
 8028010:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8028014:	b2f6      	uxtb	r6, r6
 8028016:	f11c 0001 	adds.w	r0, ip, #1
 802801a:	d44d      	bmi.n	80280b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 802801c:	4580      	cmp	r8, r0
 802801e:	dd4b      	ble.n	80280b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8028020:	2d00      	cmp	r5, #0
 8028022:	d04b      	beq.n	80280bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8028024:	f10e 0a01 	add.w	sl, lr, #1
 8028028:	ea4f 005a 	mov.w	r0, sl, lsr #1
 802802c:	f01a 0f01 	tst.w	sl, #1
 8028030:	5c10      	ldrb	r0, [r2, r0]
 8028032:	bf0c      	ite	eq
 8028034:	f000 000f 	andeq.w	r0, r0, #15
 8028038:	1100      	asrne	r0, r0, #4
 802803a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802803e:	b2c0      	uxtb	r0, r0
 8028040:	3401      	adds	r4, #1
 8028042:	d43f      	bmi.n	80280c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8028044:	45a1      	cmp	r9, r4
 8028046:	dd3d      	ble.n	80280c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8028048:	2f00      	cmp	r7, #0
 802804a:	f000 8093 	beq.w	8028174 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802804e:	f1bc 0f00 	cmp.w	ip, #0
 8028052:	db35      	blt.n	80280c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8028054:	45e0      	cmp	r8, ip
 8028056:	dd33      	ble.n	80280c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8028058:	eb03 090e 	add.w	r9, r3, lr
 802805c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8028060:	f019 0f01 	tst.w	r9, #1
 8028064:	5d14      	ldrb	r4, [r2, r4]
 8028066:	bf0c      	ite	eq
 8028068:	f004 040f 	andeq.w	r4, r4, #15
 802806c:	1124      	asrne	r4, r4, #4
 802806e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028072:	b2e4      	uxtb	r4, r4
 8028074:	f11c 0c01 	adds.w	ip, ip, #1
 8028078:	d427      	bmi.n	80280ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 802807a:	45e0      	cmp	r8, ip
 802807c:	dd25      	ble.n	80280ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 802807e:	b335      	cbz	r5, 80280ce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8028080:	3301      	adds	r3, #1
 8028082:	449e      	add	lr, r3
 8028084:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8028088:	f01e 0f01 	tst.w	lr, #1
 802808c:	5cd2      	ldrb	r2, [r2, r3]
 802808e:	bf0c      	ite	eq
 8028090:	f002 020f 	andeq.w	r2, r2, #15
 8028094:	1112      	asrne	r2, r2, #4
 8028096:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802809a:	b2d3      	uxtb	r3, r2
 802809c:	2d0f      	cmp	r5, #15
 802809e:	d917      	bls.n	80280d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 80280a0:	4b37      	ldr	r3, [pc, #220]	; (8028180 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 80280a2:	4a38      	ldr	r2, [pc, #224]	; (8028184 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 80280a4:	4838      	ldr	r0, [pc, #224]	; (8028188 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 80280a6:	f240 11f9 	movw	r1, #505	; 0x1f9
 80280aa:	f003 ff8b 	bl	802bfc4 <__assert_func>
 80280ae:	2600      	movs	r6, #0
 80280b0:	e7b1      	b.n	8028016 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 80280b2:	2000      	movs	r0, #0
 80280b4:	4606      	mov	r6, r0
 80280b6:	e7c3      	b.n	8028040 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80280b8:	2000      	movs	r0, #0
 80280ba:	e7c1      	b.n	8028040 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80280bc:	4628      	mov	r0, r5
 80280be:	e7bf      	b.n	8028040 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80280c0:	2400      	movs	r4, #0
 80280c2:	e7d7      	b.n	8028074 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 80280c4:	2300      	movs	r3, #0
 80280c6:	461c      	mov	r4, r3
 80280c8:	e7e8      	b.n	802809c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80280ca:	2300      	movs	r3, #0
 80280cc:	e7e6      	b.n	802809c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80280ce:	462b      	mov	r3, r5
 80280d0:	2f0f      	cmp	r7, #15
 80280d2:	d8e5      	bhi.n	80280a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 80280d4:	b2ad      	uxth	r5, r5
 80280d6:	b2bf      	uxth	r7, r7
 80280d8:	fb05 fc07 	mul.w	ip, r5, r7
 80280dc:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 80280e0:	012d      	lsls	r5, r5, #4
 80280e2:	b2bf      	uxth	r7, r7
 80280e4:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 80280e8:	eba5 050c 	sub.w	r5, r5, ip
 80280ec:	1bd2      	subs	r2, r2, r7
 80280ee:	b2ad      	uxth	r5, r5
 80280f0:	b292      	uxth	r2, r2
 80280f2:	4368      	muls	r0, r5
 80280f4:	fb06 0002 	mla	r0, r6, r2, r0
 80280f8:	fb07 0404 	mla	r4, r7, r4, r0
 80280fc:	fb0c 4303 	mla	r3, ip, r3, r4
 8028100:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028104:	b3a3      	cbz	r3, 8028170 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028106:	4a21      	ldr	r2, [pc, #132]	; (802818c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8028108:	880e      	ldrh	r6, [r1, #0]
 802810a:	6815      	ldr	r5, [r2, #0]
 802810c:	1234      	asrs	r4, r6, #8
 802810e:	b29a      	uxth	r2, r3
 8028110:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8028114:	43db      	mvns	r3, r3
 8028116:	b2db      	uxtb	r3, r3
 8028118:	fb10 f002 	smulbb	r0, r0, r2
 802811c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028120:	fb04 0403 	mla	r4, r4, r3, r0
 8028124:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8028128:	10f0      	asrs	r0, r6, #3
 802812a:	b2ed      	uxtb	r5, r5
 802812c:	00f6      	lsls	r6, r6, #3
 802812e:	fb17 f702 	smulbb	r7, r7, r2
 8028132:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028136:	fb15 f202 	smulbb	r2, r5, r2
 802813a:	b2f6      	uxtb	r6, r6
 802813c:	b2a4      	uxth	r4, r4
 802813e:	fb00 7003 	mla	r0, r0, r3, r7
 8028142:	fb06 2303 	mla	r3, r6, r3, r2
 8028146:	b29a      	uxth	r2, r3
 8028148:	1c63      	adds	r3, r4, #1
 802814a:	b280      	uxth	r0, r0
 802814c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028150:	1c53      	adds	r3, r2, #1
 8028152:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028156:	1c42      	adds	r2, r0, #1
 8028158:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802815c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028160:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028164:	0940      	lsrs	r0, r0, #5
 8028166:	4323      	orrs	r3, r4
 8028168:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802816c:	4303      	orrs	r3, r0
 802816e:	800b      	strh	r3, [r1, #0]
 8028170:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028174:	2d0f      	cmp	r5, #15
 8028176:	d893      	bhi.n	80280a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8028178:	463b      	mov	r3, r7
 802817a:	463c      	mov	r4, r7
 802817c:	e7aa      	b.n	80280d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 802817e:	bf00      	nop
 8028180:	08035bf7 	.word	0x08035bf7
 8028184:	08036126 	.word	0x08036126
 8028188:	08035bc4 	.word	0x08035bc4
 802818c:	2001e1e8 	.word	0x2001e1e8

08028190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028194:	ed2d 8b08 	vpush	{d8-d11}
 8028198:	b093      	sub	sp, #76	; 0x4c
 802819a:	461d      	mov	r5, r3
 802819c:	920c      	str	r2, [sp, #48]	; 0x30
 802819e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80281a0:	9107      	str	r1, [sp, #28]
 80281a2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80281a6:	9011      	str	r0, [sp, #68]	; 0x44
 80281a8:	6850      	ldr	r0, [r2, #4]
 80281aa:	6812      	ldr	r2, [r2, #0]
 80281ac:	fb00 1303 	mla	r3, r0, r3, r1
 80281b0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80281b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80281b6:	689b      	ldr	r3, [r3, #8]
 80281b8:	3301      	adds	r3, #1
 80281ba:	f023 0301 	bic.w	r3, r3, #1
 80281be:	9306      	str	r3, [sp, #24]
 80281c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80281c2:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80281c6:	681f      	ldr	r7, [r3, #0]
 80281c8:	eeb0 aa40 	vmov.f32	s20, s0
 80281cc:	eef0 9a60 	vmov.f32	s19, s1
 80281d0:	eeb0 9a41 	vmov.f32	s18, s2
 80281d4:	eeb0 8a62 	vmov.f32	s16, s5
 80281d8:	eef0 8a43 	vmov.f32	s17, s6
 80281dc:	eef0 ba44 	vmov.f32	s23, s8
 80281e0:	eeb0 ba64 	vmov.f32	s22, s9
 80281e4:	eef0 aa45 	vmov.f32	s21, s10
 80281e8:	9b07      	ldr	r3, [sp, #28]
 80281ea:	2b00      	cmp	r3, #0
 80281ec:	dc03      	bgt.n	80281f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80281ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80281f0:	2b00      	cmp	r3, #0
 80281f2:	f340 8267 	ble.w	80286c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 80281f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80281f8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80281fc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028200:	1e48      	subs	r0, r1, #1
 8028202:	f102 3cff 	add.w	ip, r2, #4294967295
 8028206:	2d00      	cmp	r5, #0
 8028208:	f340 80b8 	ble.w	802837c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 802820c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028210:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028214:	d406      	bmi.n	8028224 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8028216:	4586      	cmp	lr, r0
 8028218:	da04      	bge.n	8028224 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802821a:	2b00      	cmp	r3, #0
 802821c:	db02      	blt.n	8028224 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802821e:	4563      	cmp	r3, ip
 8028220:	f2c0 80ad 	blt.w	802837e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8028224:	f11e 0e01 	adds.w	lr, lr, #1
 8028228:	f100 80a0 	bmi.w	802836c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 802822c:	4571      	cmp	r1, lr
 802822e:	f2c0 809d 	blt.w	802836c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8028232:	3301      	adds	r3, #1
 8028234:	f100 809a 	bmi.w	802836c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8028238:	429a      	cmp	r2, r3
 802823a:	f2c0 8097 	blt.w	802836c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 802823e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8028242:	9509      	str	r5, [sp, #36]	; 0x24
 8028244:	46c8      	mov	r8, r9
 8028246:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028248:	2b00      	cmp	r3, #0
 802824a:	f340 80b6 	ble.w	80283ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802824e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8028252:	9308      	str	r3, [sp, #32]
 8028254:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028256:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802825a:	1423      	asrs	r3, r4, #16
 802825c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028260:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028264:	f100 813e 	bmi.w	80284e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8028268:	f10c 3bff 	add.w	fp, ip, #4294967295
 802826c:	455b      	cmp	r3, fp
 802826e:	f280 8139 	bge.w	80284e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8028272:	2800      	cmp	r0, #0
 8028274:	f2c0 8136 	blt.w	80284e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8028278:	f10e 3bff 	add.w	fp, lr, #4294967295
 802827c:	4558      	cmp	r0, fp
 802827e:	f280 8131 	bge.w	80284e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8028282:	9a06      	ldr	r2, [sp, #24]
 8028284:	fb00 3302 	mla	r3, r0, r2, r3
 8028288:	0858      	lsrs	r0, r3, #1
 802828a:	07da      	lsls	r2, r3, #31
 802828c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028290:	9a08      	ldr	r2, [sp, #32]
 8028292:	bf54      	ite	pl
 8028294:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028298:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802829c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80282a0:	fa5f fc8c 	uxtb.w	ip, ip
 80282a4:	2a00      	cmp	r2, #0
 80282a6:	f000 80cb 	beq.w	8028440 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80282aa:	1c58      	adds	r0, r3, #1
 80282ac:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80282b0:	07c0      	lsls	r0, r0, #31
 80282b2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80282b6:	bf54      	ite	pl
 80282b8:	f00e 0e0f 	andpl.w	lr, lr, #15
 80282bc:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80282c0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80282c4:	fa5f fe8e 	uxtb.w	lr, lr
 80282c8:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80282cc:	b1b9      	cbz	r1, 80282fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80282ce:	4453      	add	r3, sl
 80282d0:	0858      	lsrs	r0, r3, #1
 80282d2:	07da      	lsls	r2, r3, #31
 80282d4:	5c38      	ldrb	r0, [r7, r0]
 80282d6:	bf54      	ite	pl
 80282d8:	f000 000f 	andpl.w	r0, r0, #15
 80282dc:	1100      	asrmi	r0, r0, #4
 80282de:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80282e2:	b2c0      	uxtb	r0, r0
 80282e4:	900a      	str	r0, [sp, #40]	; 0x28
 80282e6:	1c58      	adds	r0, r3, #1
 80282e8:	0843      	lsrs	r3, r0, #1
 80282ea:	07c2      	lsls	r2, r0, #31
 80282ec:	5cfb      	ldrb	r3, [r7, r3]
 80282ee:	bf54      	ite	pl
 80282f0:	f003 030f 	andpl.w	r3, r3, #15
 80282f4:	111b      	asrmi	r3, r3, #4
 80282f6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80282fa:	b2db      	uxtb	r3, r3
 80282fc:	930e      	str	r3, [sp, #56]	; 0x38
 80282fe:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8028302:	b289      	uxth	r1, r1
 8028304:	fb02 f301 	mul.w	r3, r2, r1
 8028308:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802830c:	0112      	lsls	r2, r2, #4
 802830e:	b289      	uxth	r1, r1
 8028310:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028314:	1a40      	subs	r0, r0, r1
 8028316:	fa1f fe80 	uxth.w	lr, r0
 802831a:	1ad2      	subs	r2, r2, r3
 802831c:	980d      	ldr	r0, [sp, #52]	; 0x34
 802831e:	b292      	uxth	r2, r2
 8028320:	4342      	muls	r2, r0
 8028322:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8028326:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028328:	fb01 c102 	mla	r1, r1, r2, ip
 802832c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802832e:	fb03 1302 	mla	r3, r3, r2, r1
 8028332:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028336:	2bff      	cmp	r3, #255	; 0xff
 8028338:	f040 8093 	bne.w	8028462 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 802833c:	4bbe      	ldr	r3, [pc, #760]	; (8028638 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 802833e:	681a      	ldr	r2, [r3, #0]
 8028340:	4bbe      	ldr	r3, [pc, #760]	; (802863c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028342:	0951      	lsrs	r1, r2, #5
 8028344:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028348:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802834c:	430b      	orrs	r3, r1
 802834e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028352:	4313      	orrs	r3, r2
 8028354:	f8a8 3000 	strh.w	r3, [r8]
 8028358:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802835a:	441c      	add	r4, r3
 802835c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802835e:	441e      	add	r6, r3
 8028360:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028362:	3b01      	subs	r3, #1
 8028364:	f108 0802 	add.w	r8, r8, #2
 8028368:	9309      	str	r3, [sp, #36]	; 0x24
 802836a:	e76c      	b.n	8028246 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802836c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802836e:	441c      	add	r4, r3
 8028370:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028372:	3d01      	subs	r5, #1
 8028374:	441e      	add	r6, r3
 8028376:	f109 0902 	add.w	r9, r9, #2
 802837a:	e744      	b.n	8028206 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802837c:	d021      	beq.n	80283c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 802837e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8028380:	1e6b      	subs	r3, r5, #1
 8028382:	fb00 4003 	mla	r0, r0, r3, r4
 8028386:	1400      	asrs	r0, r0, #16
 8028388:	f53f af59 	bmi.w	802823e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802838c:	3901      	subs	r1, #1
 802838e:	4288      	cmp	r0, r1
 8028390:	f6bf af55 	bge.w	802823e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8028394:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8028396:	fb01 6303 	mla	r3, r1, r3, r6
 802839a:	141b      	asrs	r3, r3, #16
 802839c:	f53f af4f 	bmi.w	802823e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80283a0:	3a01      	subs	r2, #1
 80283a2:	4293      	cmp	r3, r2
 80283a4:	f6bf af4b 	bge.w	802823e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80283a8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80283ac:	9308      	str	r3, [sp, #32]
 80283ae:	46a8      	mov	r8, r5
 80283b0:	46ce      	mov	lr, r9
 80283b2:	f1b8 0f00 	cmp.w	r8, #0
 80283b6:	f300 80b5 	bgt.w	8028524 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80283ba:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80283be:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80283c2:	9b07      	ldr	r3, [sp, #28]
 80283c4:	2b00      	cmp	r3, #0
 80283c6:	f340 817d 	ble.w	80286c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 80283ca:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80283ce:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80283d2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80283d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80283d8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80283dc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80283e0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80283e4:	eef0 6a48 	vmov.f32	s13, s16
 80283e8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80283ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80283f0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80283f4:	ee16 4a90 	vmov	r4, s13
 80283f8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80283fc:	eef0 6a68 	vmov.f32	s13, s17
 8028400:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8028404:	ee18 2a10 	vmov	r2, s16
 8028408:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 802840c:	fb92 f3f3 	sdiv	r3, r2, r3
 8028410:	ee18 2a90 	vmov	r2, s17
 8028414:	9327      	str	r3, [sp, #156]	; 0x9c
 8028416:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028418:	fb92 f3f3 	sdiv	r3, r2, r3
 802841c:	9328      	str	r3, [sp, #160]	; 0xa0
 802841e:	9b07      	ldr	r3, [sp, #28]
 8028420:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8028422:	3b01      	subs	r3, #1
 8028424:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028428:	9307      	str	r3, [sp, #28]
 802842a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802842c:	ee16 6a90 	vmov	r6, s13
 8028430:	bf14      	ite	ne
 8028432:	461d      	movne	r5, r3
 8028434:	4615      	moveq	r5, r2
 8028436:	eef0 8a67 	vmov.f32	s17, s15
 802843a:	eeb0 8a47 	vmov.f32	s16, s14
 802843e:	e6d3      	b.n	80281e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8028440:	2900      	cmp	r1, #0
 8028442:	f43f af5c 	beq.w	80282fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8028446:	eb0a 0003 	add.w	r0, sl, r3
 802844a:	0843      	lsrs	r3, r0, #1
 802844c:	07c0      	lsls	r0, r0, #31
 802844e:	5cfb      	ldrb	r3, [r7, r3]
 8028450:	bf54      	ite	pl
 8028452:	f003 030f 	andpl.w	r3, r3, #15
 8028456:	111b      	asrmi	r3, r3, #4
 8028458:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802845c:	b2db      	uxtb	r3, r3
 802845e:	930a      	str	r3, [sp, #40]	; 0x28
 8028460:	e74d      	b.n	80282fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8028462:	2b00      	cmp	r3, #0
 8028464:	f43f af78 	beq.w	8028358 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028468:	4a73      	ldr	r2, [pc, #460]	; (8028638 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 802846a:	f8b8 c000 	ldrh.w	ip, [r8]
 802846e:	6810      	ldr	r0, [r2, #0]
 8028470:	fa1f fe83 	uxth.w	lr, r3
 8028474:	ea4f 212c 	mov.w	r1, ip, asr #8
 8028478:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802847c:	43db      	mvns	r3, r3
 802847e:	b2db      	uxtb	r3, r3
 8028480:	fb12 f20e 	smulbb	r2, r2, lr
 8028484:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8028488:	fb01 2103 	mla	r1, r1, r3, r2
 802848c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8028490:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028494:	b2c0      	uxtb	r0, r0
 8028496:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802849a:	fb1b fb0e 	smulbb	fp, fp, lr
 802849e:	b289      	uxth	r1, r1
 80284a0:	fb10 fe0e 	smulbb	lr, r0, lr
 80284a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80284a8:	fa5f fc8c 	uxtb.w	ip, ip
 80284ac:	fb02 b203 	mla	r2, r2, r3, fp
 80284b0:	1c48      	adds	r0, r1, #1
 80284b2:	fb0c e303 	mla	r3, ip, r3, lr
 80284b6:	b292      	uxth	r2, r2
 80284b8:	b29b      	uxth	r3, r3
 80284ba:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80284be:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80284c2:	f102 0b01 	add.w	fp, r2, #1
 80284c6:	1c59      	adds	r1, r3, #1
 80284c8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80284cc:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80284d0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80284d4:	0952      	lsrs	r2, r2, #5
 80284d6:	4301      	orrs	r1, r0
 80284d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80284dc:	4311      	orrs	r1, r2
 80284de:	f8a8 1000 	strh.w	r1, [r8]
 80284e2:	e739      	b.n	8028358 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80284e4:	f113 0b01 	adds.w	fp, r3, #1
 80284e8:	f53f af36 	bmi.w	8028358 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80284ec:	45dc      	cmp	ip, fp
 80284ee:	f6ff af33 	blt.w	8028358 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80284f2:	f110 0b01 	adds.w	fp, r0, #1
 80284f6:	f53f af2f 	bmi.w	8028358 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80284fa:	45de      	cmp	lr, fp
 80284fc:	f6ff af2c 	blt.w	8028358 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028500:	9a08      	ldr	r2, [sp, #32]
 8028502:	9302      	str	r3, [sp, #8]
 8028504:	fa0f f38e 	sxth.w	r3, lr
 8028508:	9301      	str	r3, [sp, #4]
 802850a:	fa0f f38c 	sxth.w	r3, ip
 802850e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028512:	9105      	str	r1, [sp, #20]
 8028514:	9300      	str	r3, [sp, #0]
 8028516:	463a      	mov	r2, r7
 8028518:	4653      	mov	r3, sl
 802851a:	4641      	mov	r1, r8
 802851c:	9811      	ldr	r0, [sp, #68]	; 0x44
 802851e:	f7ff fd57 	bl	8027fd0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8028522:	e719      	b.n	8028358 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028524:	9906      	ldr	r1, [sp, #24]
 8028526:	1422      	asrs	r2, r4, #16
 8028528:	1433      	asrs	r3, r6, #16
 802852a:	fb01 2303 	mla	r3, r1, r3, r2
 802852e:	085a      	lsrs	r2, r3, #1
 8028530:	07d9      	lsls	r1, r3, #31
 8028532:	5cba      	ldrb	r2, [r7, r2]
 8028534:	bf54      	ite	pl
 8028536:	f002 020f 	andpl.w	r2, r2, #15
 802853a:	1112      	asrmi	r2, r2, #4
 802853c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028540:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8028544:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8028548:	b2d2      	uxtb	r2, r2
 802854a:	2800      	cmp	r0, #0
 802854c:	d062      	beq.n	8028614 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802854e:	f103 0a01 	add.w	sl, r3, #1
 8028552:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8028556:	f01a 0f01 	tst.w	sl, #1
 802855a:	5c79      	ldrb	r1, [r7, r1]
 802855c:	bf0c      	ite	eq
 802855e:	f001 010f 	andeq.w	r1, r1, #15
 8028562:	1109      	asrne	r1, r1, #4
 8028564:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028568:	b2c9      	uxtb	r1, r1
 802856a:	910f      	str	r1, [sp, #60]	; 0x3c
 802856c:	f1bc 0f00 	cmp.w	ip, #0
 8028570:	d019      	beq.n	80285a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8028572:	9908      	ldr	r1, [sp, #32]
 8028574:	440b      	add	r3, r1
 8028576:	0859      	lsrs	r1, r3, #1
 8028578:	f013 0f01 	tst.w	r3, #1
 802857c:	5c79      	ldrb	r1, [r7, r1]
 802857e:	bf0c      	ite	eq
 8028580:	f001 010f 	andeq.w	r1, r1, #15
 8028584:	1109      	asrne	r1, r1, #4
 8028586:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802858a:	b2c9      	uxtb	r1, r1
 802858c:	3301      	adds	r3, #1
 802858e:	910b      	str	r1, [sp, #44]	; 0x2c
 8028590:	0859      	lsrs	r1, r3, #1
 8028592:	07db      	lsls	r3, r3, #31
 8028594:	5c79      	ldrb	r1, [r7, r1]
 8028596:	bf54      	ite	pl
 8028598:	f001 010f 	andpl.w	r1, r1, #15
 802859c:	1109      	asrmi	r1, r1, #4
 802859e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80285a2:	b2c9      	uxtb	r1, r1
 80285a4:	9110      	str	r1, [sp, #64]	; 0x40
 80285a6:	b280      	uxth	r0, r0
 80285a8:	fa1f fc8c 	uxth.w	ip, ip
 80285ac:	fb00 f30c 	mul.w	r3, r0, ip
 80285b0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80285b4:	0100      	lsls	r0, r0, #4
 80285b6:	fa1f fc8c 	uxth.w	ip, ip
 80285ba:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80285be:	eba1 010c 	sub.w	r1, r1, ip
 80285c2:	fa1f fa81 	uxth.w	sl, r1
 80285c6:	1ac0      	subs	r0, r0, r3
 80285c8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80285ca:	b280      	uxth	r0, r0
 80285cc:	4348      	muls	r0, r1
 80285ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80285d0:	fb02 020a 	mla	r2, r2, sl, r0
 80285d4:	fb0c 2c01 	mla	ip, ip, r1, r2
 80285d8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80285da:	fb03 c302 	mla	r3, r3, r2, ip
 80285de:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80285e2:	2bff      	cmp	r3, #255	; 0xff
 80285e4:	d12c      	bne.n	8028640 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80285e6:	4b14      	ldr	r3, [pc, #80]	; (8028638 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 80285e8:	681a      	ldr	r2, [r3, #0]
 80285ea:	4b14      	ldr	r3, [pc, #80]	; (802863c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80285ec:	0951      	lsrs	r1, r2, #5
 80285ee:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80285f2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80285f6:	430b      	orrs	r3, r1
 80285f8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80285fc:	4313      	orrs	r3, r2
 80285fe:	f8ae 3000 	strh.w	r3, [lr]
 8028602:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8028604:	441c      	add	r4, r3
 8028606:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028608:	f10e 0e02 	add.w	lr, lr, #2
 802860c:	441e      	add	r6, r3
 802860e:	f108 38ff 	add.w	r8, r8, #4294967295
 8028612:	e6ce      	b.n	80283b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8028614:	f1bc 0f00 	cmp.w	ip, #0
 8028618:	d0c5      	beq.n	80285a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 802861a:	9908      	ldr	r1, [sp, #32]
 802861c:	440b      	add	r3, r1
 802861e:	0859      	lsrs	r1, r3, #1
 8028620:	07db      	lsls	r3, r3, #31
 8028622:	5c79      	ldrb	r1, [r7, r1]
 8028624:	bf54      	ite	pl
 8028626:	f001 010f 	andpl.w	r1, r1, #15
 802862a:	1109      	asrmi	r1, r1, #4
 802862c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028630:	b2c9      	uxtb	r1, r1
 8028632:	910b      	str	r1, [sp, #44]	; 0x2c
 8028634:	e7b7      	b.n	80285a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8028636:	bf00      	nop
 8028638:	2001e1e8 	.word	0x2001e1e8
 802863c:	fffff800 	.word	0xfffff800
 8028640:	2b00      	cmp	r3, #0
 8028642:	d0de      	beq.n	8028602 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8028644:	4a22      	ldr	r2, [pc, #136]	; (80286d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 8028646:	f8be c000 	ldrh.w	ip, [lr]
 802864a:	6810      	ldr	r0, [r2, #0]
 802864c:	fa1f fa83 	uxth.w	sl, r3
 8028650:	ea4f 212c 	mov.w	r1, ip, asr #8
 8028654:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028658:	43db      	mvns	r3, r3
 802865a:	b2db      	uxtb	r3, r3
 802865c:	fb12 f20a 	smulbb	r2, r2, sl
 8028660:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8028664:	fb01 2103 	mla	r1, r1, r3, r2
 8028668:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802866c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028670:	b2c0      	uxtb	r0, r0
 8028672:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8028676:	fa5f fc8c 	uxtb.w	ip, ip
 802867a:	fb10 f00a 	smulbb	r0, r0, sl
 802867e:	fb0c 0003 	mla	r0, ip, r3, r0
 8028682:	b289      	uxth	r1, r1
 8028684:	fb1b fb0a 	smulbb	fp, fp, sl
 8028688:	b280      	uxth	r0, r0
 802868a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802868e:	fb02 b203 	mla	r2, r2, r3, fp
 8028692:	1c4b      	adds	r3, r1, #1
 8028694:	f100 0b01 	add.w	fp, r0, #1
 8028698:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802869c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80286a0:	b292      	uxth	r2, r2
 80286a2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80286a6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80286aa:	ea4b 0101 	orr.w	r1, fp, r1
 80286ae:	f102 0b01 	add.w	fp, r2, #1
 80286b2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80286b6:	0952      	lsrs	r2, r2, #5
 80286b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80286bc:	4311      	orrs	r1, r2
 80286be:	f8ae 1000 	strh.w	r1, [lr]
 80286c2:	e79e      	b.n	8028602 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80286c4:	b013      	add	sp, #76	; 0x4c
 80286c6:	ecbd 8b08 	vpop	{d8-d11}
 80286ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80286ce:	bf00      	nop
 80286d0:	2001e1e8 	.word	0x2001e1e8

080286d4 <CRC_Lock>:
 80286d4:	b530      	push	{r4, r5, lr}
 80286d6:	4a20      	ldr	r2, [pc, #128]	; (8028758 <CRC_Lock+0x84>)
 80286d8:	6813      	ldr	r3, [r2, #0]
 80286da:	f023 0301 	bic.w	r3, r3, #1
 80286de:	6013      	str	r3, [r2, #0]
 80286e0:	4b1e      	ldr	r3, [pc, #120]	; (802875c <CRC_Lock+0x88>)
 80286e2:	681a      	ldr	r2, [r3, #0]
 80286e4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80286e8:	4022      	ands	r2, r4
 80286ea:	f24c 2540 	movw	r5, #49728	; 0xc240
 80286ee:	42aa      	cmp	r2, r5
 80286f0:	d005      	beq.n	80286fe <CRC_Lock+0x2a>
 80286f2:	681b      	ldr	r3, [r3, #0]
 80286f4:	f24c 2270 	movw	r2, #49776	; 0xc270
 80286f8:	4023      	ands	r3, r4
 80286fa:	4293      	cmp	r3, r2
 80286fc:	d124      	bne.n	8028748 <CRC_Lock+0x74>
 80286fe:	4b18      	ldr	r3, [pc, #96]	; (8028760 <CRC_Lock+0x8c>)
 8028700:	681b      	ldr	r3, [r3, #0]
 8028702:	bb0b      	cbnz	r3, 8028748 <CRC_Lock+0x74>
 8028704:	4b17      	ldr	r3, [pc, #92]	; (8028764 <CRC_Lock+0x90>)
 8028706:	681a      	ldr	r2, [r3, #0]
 8028708:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802870c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8028710:	d00d      	beq.n	802872e <CRC_Lock+0x5a>
 8028712:	681a      	ldr	r2, [r3, #0]
 8028714:	f240 4483 	movw	r4, #1155	; 0x483
 8028718:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802871c:	42a2      	cmp	r2, r4
 802871e:	d006      	beq.n	802872e <CRC_Lock+0x5a>
 8028720:	681b      	ldr	r3, [r3, #0]
 8028722:	f240 4285 	movw	r2, #1157	; 0x485
 8028726:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802872a:	4293      	cmp	r3, r2
 802872c:	d10c      	bne.n	8028748 <CRC_Lock+0x74>
 802872e:	4b0e      	ldr	r3, [pc, #56]	; (8028768 <CRC_Lock+0x94>)
 8028730:	2201      	movs	r2, #1
 8028732:	601a      	str	r2, [r3, #0]
 8028734:	681a      	ldr	r2, [r3, #0]
 8028736:	2a00      	cmp	r2, #0
 8028738:	d1fc      	bne.n	8028734 <CRC_Lock+0x60>
 802873a:	4b0c      	ldr	r3, [pc, #48]	; (802876c <CRC_Lock+0x98>)
 802873c:	6018      	str	r0, [r3, #0]
 802873e:	6818      	ldr	r0, [r3, #0]
 8028740:	1a43      	subs	r3, r0, r1
 8028742:	4258      	negs	r0, r3
 8028744:	4158      	adcs	r0, r3
 8028746:	bd30      	pop	{r4, r5, pc}
 8028748:	4b09      	ldr	r3, [pc, #36]	; (8028770 <CRC_Lock+0x9c>)
 802874a:	2201      	movs	r2, #1
 802874c:	601a      	str	r2, [r3, #0]
 802874e:	681a      	ldr	r2, [r3, #0]
 8028750:	2a00      	cmp	r2, #0
 8028752:	d1fc      	bne.n	802874e <CRC_Lock+0x7a>
 8028754:	4b07      	ldr	r3, [pc, #28]	; (8028774 <CRC_Lock+0xa0>)
 8028756:	e7f1      	b.n	802873c <CRC_Lock+0x68>
 8028758:	e0002000 	.word	0xe0002000
 802875c:	e000ed00 	.word	0xe000ed00
 8028760:	e0042000 	.word	0xe0042000
 8028764:	5c001000 	.word	0x5c001000
 8028768:	58024c08 	.word	0x58024c08
 802876c:	58024c00 	.word	0x58024c00
 8028770:	40023008 	.word	0x40023008
 8028774:	40023000 	.word	0x40023000

08028778 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8028778:	6101      	str	r1, [r0, #16]
 802877a:	4770      	bx	lr

0802877c <_ZN8touchgfx8Gestures4tickEv>:
 802877c:	7b83      	ldrb	r3, [r0, #14]
 802877e:	b14b      	cbz	r3, 8028794 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8028780:	8903      	ldrh	r3, [r0, #8]
 8028782:	3301      	adds	r3, #1
 8028784:	b29b      	uxth	r3, r3
 8028786:	2b07      	cmp	r3, #7
 8028788:	8103      	strh	r3, [r0, #8]
 802878a:	bf81      	itttt	hi
 802878c:	2300      	movhi	r3, #0
 802878e:	8143      	strhhi	r3, [r0, #10]
 8028790:	8183      	strhhi	r3, [r0, #12]
 8028792:	7383      	strbhi	r3, [r0, #14]
 8028794:	4770      	bx	lr
	...

08028798 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8028798:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 802879c:	4698      	mov	r8, r3
 802879e:	8883      	ldrh	r3, [r0, #4]
 80287a0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80287a4:	eba8 0303 	sub.w	r3, r8, r3
 80287a8:	b21b      	sxth	r3, r3
 80287aa:	4604      	mov	r4, r0
 80287ac:	2b00      	cmp	r3, #0
 80287ae:	4617      	mov	r7, r2
 80287b0:	4a18      	ldr	r2, [pc, #96]	; (8028814 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80287b2:	9200      	str	r2, [sp, #0]
 80287b4:	bfb8      	it	lt
 80287b6:	425b      	neglt	r3, r3
 80287b8:	8aa2      	ldrh	r2, [r4, #20]
 80287ba:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80287be:	f8ad 800a 	strh.w	r8, [sp, #10]
 80287c2:	b21b      	sxth	r3, r3
 80287c4:	460e      	mov	r6, r1
 80287c6:	4293      	cmp	r3, r2
 80287c8:	88c1      	ldrh	r1, [r0, #6]
 80287ca:	f8ad 1008 	strh.w	r1, [sp, #8]
 80287ce:	f04f 0000 	mov.w	r0, #0
 80287d2:	f88d 0004 	strb.w	r0, [sp, #4]
 80287d6:	f8ad 500c 	strh.w	r5, [sp, #12]
 80287da:	dc07      	bgt.n	80287ec <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80287dc:	1a69      	subs	r1, r5, r1
 80287de:	b209      	sxth	r1, r1
 80287e0:	2900      	cmp	r1, #0
 80287e2:	bfb8      	it	lt
 80287e4:	4249      	neglt	r1, r1
 80287e6:	b209      	sxth	r1, r1
 80287e8:	428a      	cmp	r2, r1
 80287ea:	da10      	bge.n	802880e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80287ec:	6920      	ldr	r0, [r4, #16]
 80287ee:	6803      	ldr	r3, [r0, #0]
 80287f0:	4669      	mov	r1, sp
 80287f2:	685b      	ldr	r3, [r3, #4]
 80287f4:	4798      	blx	r3
 80287f6:	eba8 0606 	sub.w	r6, r8, r6
 80287fa:	2300      	movs	r3, #0
 80287fc:	1bef      	subs	r7, r5, r7
 80287fe:	2001      	movs	r0, #1
 8028800:	8123      	strh	r3, [r4, #8]
 8028802:	8166      	strh	r6, [r4, #10]
 8028804:	81a7      	strh	r7, [r4, #12]
 8028806:	f8a4 8004 	strh.w	r8, [r4, #4]
 802880a:	80e5      	strh	r5, [r4, #6]
 802880c:	73a0      	strb	r0, [r4, #14]
 802880e:	b004      	add	sp, #16
 8028810:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028814:	08035024 	.word	0x08035024

08028818 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8028818:	b5f0      	push	{r4, r5, r6, r7, lr}
 802881a:	461e      	mov	r6, r3
 802881c:	1e4b      	subs	r3, r1, #1
 802881e:	2b01      	cmp	r3, #1
 8028820:	b085      	sub	sp, #20
 8028822:	4604      	mov	r4, r0
 8028824:	460d      	mov	r5, r1
 8028826:	4617      	mov	r7, r2
 8028828:	d84b      	bhi.n	80288c2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802882a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802882e:	1cd3      	adds	r3, r2, #3
 8028830:	b29b      	uxth	r3, r3
 8028832:	2b06      	cmp	r3, #6
 8028834:	d916      	bls.n	8028864 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8028836:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80288d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802883a:	f8cd c004 	str.w	ip, [sp, #4]
 802883e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8028842:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8028846:	6900      	ldr	r0, [r0, #16]
 8028848:	f8ad 100c 	strh.w	r1, [sp, #12]
 802884c:	f04f 0c00 	mov.w	ip, #0
 8028850:	f88d c008 	strb.w	ip, [sp, #8]
 8028854:	f8ad 200a 	strh.w	r2, [sp, #10]
 8028858:	f8ad 300e 	strh.w	r3, [sp, #14]
 802885c:	6803      	ldr	r3, [r0, #0]
 802885e:	a901      	add	r1, sp, #4
 8028860:	689b      	ldr	r3, [r3, #8]
 8028862:	4798      	blx	r3
 8028864:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028868:	1cd3      	adds	r3, r2, #3
 802886a:	b29b      	uxth	r3, r3
 802886c:	2b06      	cmp	r3, #6
 802886e:	d916      	bls.n	802889e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8028870:	f8df c064 	ldr.w	ip, [pc, #100]	; 80288d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8028874:	f8cd c004 	str.w	ip, [sp, #4]
 8028878:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802887c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8028880:	6920      	ldr	r0, [r4, #16]
 8028882:	f8ad 100c 	strh.w	r1, [sp, #12]
 8028886:	f04f 0c01 	mov.w	ip, #1
 802888a:	f88d c008 	strb.w	ip, [sp, #8]
 802888e:	f8ad 200a 	strh.w	r2, [sp, #10]
 8028892:	f8ad 300e 	strh.w	r3, [sp, #14]
 8028896:	6803      	ldr	r3, [r0, #0]
 8028898:	a901      	add	r1, sp, #4
 802889a:	689b      	ldr	r3, [r3, #8]
 802889c:	4798      	blx	r3
 802889e:	4b0d      	ldr	r3, [pc, #52]	; (80288d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80288a0:	9301      	str	r3, [sp, #4]
 80288a2:	6920      	ldr	r0, [r4, #16]
 80288a4:	f88d 5008 	strb.w	r5, [sp, #8]
 80288a8:	2300      	movs	r3, #0
 80288aa:	f8ad 700a 	strh.w	r7, [sp, #10]
 80288ae:	f8ad 600c 	strh.w	r6, [sp, #12]
 80288b2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80288b6:	6803      	ldr	r3, [r0, #0]
 80288b8:	a901      	add	r1, sp, #4
 80288ba:	681b      	ldr	r3, [r3, #0]
 80288bc:	4798      	blx	r3
 80288be:	b005      	add	sp, #20
 80288c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80288c2:	2900      	cmp	r1, #0
 80288c4:	d1eb      	bne.n	802889e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80288c6:	80a2      	strh	r2, [r4, #4]
 80288c8:	80c6      	strh	r6, [r0, #6]
 80288ca:	60a1      	str	r1, [r4, #8]
 80288cc:	81a1      	strh	r1, [r4, #12]
 80288ce:	73a1      	strb	r1, [r4, #14]
 80288d0:	e7e5      	b.n	802889e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80288d2:	bf00      	nop
 80288d4:	08035010 	.word	0x08035010
 80288d8:	08035038 	.word	0x08035038

080288dc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>:
 80288dc:	10c9      	asrs	r1, r1, #3
 80288de:	2900      	cmp	r1, #0
 80288e0:	bfb8      	it	lt
 80288e2:	4249      	neglt	r1, r1
 80288e4:	2801      	cmp	r0, #1
 80288e6:	d108      	bne.n	80288fa <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14+0x1e>
 80288e8:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80288ec:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80288f0:	4601      	mov	r1, r0
 80288f2:	dd02      	ble.n	80288fa <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14+0x1e>
 80288f4:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 80288f8:	4770      	bx	lr
 80288fa:	29ff      	cmp	r1, #255	; 0xff
 80288fc:	bfa8      	it	ge
 80288fe:	21ff      	movge	r1, #255	; 0xff
 8028900:	4608      	mov	r0, r1
 8028902:	4770      	bx	lr

08028904 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>:
 8028904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028908:	688c      	ldr	r4, [r1, #8]
 802890a:	2c00      	cmp	r4, #0
 802890c:	b087      	sub	sp, #28
 802890e:	4607      	mov	r7, r0
 8028910:	db2b      	blt.n	802896a <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 8028912:	6803      	ldr	r3, [r0, #0]
 8028914:	691a      	ldr	r2, [r3, #16]
 8028916:	42a2      	cmp	r2, r4
 8028918:	dd27      	ble.n	802896a <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 802891a:	685a      	ldr	r2, [r3, #4]
 802891c:	695e      	ldr	r6, [r3, #20]
 802891e:	68cd      	ldr	r5, [r1, #12]
 8028920:	f8d1 901c 	ldr.w	r9, [r1, #28]
 8028924:	f893 a008 	ldrb.w	sl, [r3, #8]
 8028928:	f8d1 8020 	ldr.w	r8, [r1, #32]
 802892c:	fb06 2604 	mla	r6, r6, r4, r2
 8028930:	698a      	ldr	r2, [r1, #24]
 8028932:	9205      	str	r2, [sp, #20]
 8028934:	f839 2f02 	ldrh.w	r2, [r9, #2]!
 8028938:	9b05      	ldr	r3, [sp, #20]
 802893a:	6839      	ldr	r1, [r7, #0]
 802893c:	eb03 0c02 	add.w	ip, r3, r2
 8028940:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 8028944:	68c9      	ldr	r1, [r1, #12]
 8028946:	1898      	adds	r0, r3, r2
 8028948:	4288      	cmp	r0, r1
 802894a:	db02      	blt.n	8028952 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x4e>
 802894c:	1a8b      	subs	r3, r1, r2
 802894e:	2b00      	cmp	r3, #0
 8028950:	dd09      	ble.n	8028966 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x62>
 8028952:	6878      	ldr	r0, [r7, #4]
 8028954:	6801      	ldr	r1, [r0, #0]
 8028956:	9400      	str	r4, [sp, #0]
 8028958:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 802895c:	4653      	mov	r3, sl
 802895e:	f8d1 b008 	ldr.w	fp, [r1, #8]
 8028962:	4631      	mov	r1, r6
 8028964:	47d8      	blx	fp
 8028966:	3d01      	subs	r5, #1
 8028968:	d1e4      	bne.n	8028934 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x30>
 802896a:	b007      	add	sp, #28
 802896c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028970 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8028970:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
 8028974:	b90b      	cbnz	r3, 802897a <_ZN8touchgfx10Rasterizer6lineToEii+0xa>
 8028976:	f001 b9b9 	b.w	8029cec <_ZN8touchgfx7Outline6lineToEii>
 802897a:	4770      	bx	lr

0802897c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 802897c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028980:	4b90      	ldr	r3, [pc, #576]	; (8028bc4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x248>)
 8028982:	4604      	mov	r4, r0
 8028984:	2600      	movs	r6, #0
 8028986:	f100 0518 	add.w	r5, r0, #24
 802898a:	e9c0 3100 	strd	r3, r1, [r0]
 802898e:	b086      	sub	sp, #24
 8028990:	e9c0 6602 	strd	r6, r6, [r0, #8]
 8028994:	e9c0 6604 	strd	r6, r6, [r0, #16]
 8028998:	f104 0730 	add.w	r7, r4, #48	; 0x30
 802899c:	4628      	mov	r0, r5
 802899e:	4690      	mov	r8, r2
 80289a0:	f001 fbca 	bl	802a138 <_ZN8touchgfx15RenderingBufferC1Ev>
 80289a4:	4638      	mov	r0, r7
 80289a6:	f000 fb65 	bl	8029074 <_ZN8touchgfx7OutlineC1Ev>
 80289aa:	f104 0078 	add.w	r0, r4, #120	; 0x78
 80289ae:	f001 fb6b 	bl	802a088 <_ZN8touchgfx8ScanlineC1Ev>
 80289b2:	2301      	movs	r3, #1
 80289b4:	f884 609c 	strb.w	r6, [r4, #156]	; 0x9c
 80289b8:	f8c4 60a0 	str.w	r6, [r4, #160]	; 0xa0
 80289bc:	f884 60a4 	strb.w	r6, [r4, #164]	; 0xa4
 80289c0:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 80289c4:	f884 60a6 	strb.w	r6, [r4, #166]	; 0xa6
 80289c8:	e9c4 662a 	strd	r6, r6, [r4, #168]	; 0xa8
 80289cc:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80289d0:	e9c4 662d 	strd	r6, r6, [r4, #180]	; 0xb4
 80289d4:	f7ee fff6 	bl	80179c4 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>
 80289d8:	b928      	cbnz	r0, 80289e6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x6a>
 80289da:	4b7b      	ldr	r3, [pc, #492]	; (8028bc8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 80289dc:	4a7b      	ldr	r2, [pc, #492]	; (8028bcc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 80289de:	212a      	movs	r1, #42	; 0x2a
 80289e0:	487b      	ldr	r0, [pc, #492]	; (8028bd0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x254>)
 80289e2:	f003 faef 	bl	802bfc4 <__assert_func>
 80289e6:	f9b8 2000 	ldrsh.w	r2, [r8]
 80289ea:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80289ee:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80289f2:	9602      	str	r6, [sp, #8]
 80289f4:	4410      	add	r0, r2
 80289f6:	b280      	uxth	r0, r0
 80289f8:	fa0f fa80 	sxth.w	sl, r0
 80289fc:	f1ba 0f00 	cmp.w	sl, #0
 8028a00:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8028a04:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8028a08:	dd70      	ble.n	8028aec <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 8028a0a:	4591      	cmp	r9, r2
 8028a0c:	dd6e      	ble.n	8028aec <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 8028a0e:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8028a12:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8028a16:	440b      	add	r3, r1
 8028a18:	b29b      	uxth	r3, r3
 8028a1a:	b21e      	sxth	r6, r3
 8028a1c:	2e00      	cmp	r6, #0
 8028a1e:	dd65      	ble.n	8028aec <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 8028a20:	458e      	cmp	lr, r1
 8028a22:	dd63      	ble.n	8028aec <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 8028a24:	45d1      	cmp	r9, sl
 8028a26:	bfb8      	it	lt
 8028a28:	fa1f f089 	uxthlt.w	r0, r9
 8028a2c:	45b6      	cmp	lr, r6
 8028a2e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8028a32:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8028a36:	bfb8      	it	lt
 8028a38:	fa1f f38e 	uxthlt.w	r3, lr
 8028a3c:	1a80      	subs	r0, r0, r2
 8028a3e:	1a5b      	subs	r3, r3, r1
 8028a40:	f8ad 000c 	strh.w	r0, [sp, #12]
 8028a44:	f8ad 300e 	strh.w	r3, [sp, #14]
 8028a48:	f8ad 2008 	strh.w	r2, [sp, #8]
 8028a4c:	f8ad 100a 	strh.w	r1, [sp, #10]
 8028a50:	f10d 0808 	add.w	r8, sp, #8
 8028a54:	e898 0003 	ldmia.w	r8, {r0, r1}
 8028a58:	ae04      	add	r6, sp, #16
 8028a5a:	e886 0003 	stmia.w	r6, {r0, r1}
 8028a5e:	f8dc 3000 	ldr.w	r3, [ip]
 8028a62:	4660      	mov	r0, ip
 8028a64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028a66:	4631      	mov	r1, r6
 8028a68:	4798      	blx	r3
 8028a6a:	6861      	ldr	r1, [r4, #4]
 8028a6c:	4640      	mov	r0, r8
 8028a6e:	3104      	adds	r1, #4
 8028a70:	f7f0 fae0 	bl	8019034 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028a74:	4630      	mov	r0, r6
 8028a76:	f7f0 fab5 	bl	8018fe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028a7a:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 8028a7e:	f7ee ff31 	bl	80178e4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>
 8028a82:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 8028a86:	4638      	mov	r0, r7
 8028a88:	f000 facf 	bl	802902a <_ZN8touchgfx7Outline5resetEv>
 8028a8c:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8028a90:	f8a4 30a2 	strh.w	r3, [r4, #162]	; 0xa2
 8028a94:	015b      	lsls	r3, r3, #5
 8028a96:	60e3      	str	r3, [r4, #12]
 8028a98:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8028a9c:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8028aa0:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
 8028aa4:	015b      	lsls	r3, r3, #5
 8028aa6:	6123      	str	r3, [r4, #16]
 8028aa8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8028aac:	015b      	lsls	r3, r3, #5
 8028aae:	6163      	str	r3, [r4, #20]
 8028ab0:	4b48      	ldr	r3, [pc, #288]	; (8028bd4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x258>)
 8028ab2:	0152      	lsls	r2, r2, #5
 8028ab4:	6818      	ldr	r0, [r3, #0]
 8028ab6:	60a2      	str	r2, [r4, #8]
 8028ab8:	6803      	ldr	r3, [r0, #0]
 8028aba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8028abc:	4798      	blx	r3
 8028abe:	4606      	mov	r6, r0
 8028ac0:	f7e9 fdde 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 8028ac4:	6803      	ldr	r3, [r0, #0]
 8028ac6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8028ac8:	4798      	blx	r3
 8028aca:	4607      	mov	r7, r0
 8028acc:	f7e9 fdd8 	bl	8012680 <_ZN8touchgfx3HAL3lcdEv>
 8028ad0:	6803      	ldr	r3, [r0, #0]
 8028ad2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028ad4:	4798      	blx	r3
 8028ad6:	280d      	cmp	r0, #13
 8028ad8:	d855      	bhi.n	8028b86 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x20a>
 8028ada:	e8df f000 	tbb	[pc, r0]
 8028ade:	564c      	.short	0x564c
 8028ae0:	2b6f0a67 	.word	0x2b6f0a67
 8028ae4:	6060603b 	.word	0x6060603b
 8028ae8:	6f6f6060 	.word	0x6f6f6060
 8028aec:	2300      	movs	r3, #0
 8028aee:	9303      	str	r3, [sp, #12]
 8028af0:	e7ae      	b.n	8028a50 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xd4>
 8028af2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028af6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8028afa:	2108      	movs	r1, #8
 8028afc:	fb92 f1f1 	sdiv	r1, r2, r1
 8028b00:	fb07 1303 	mla	r3, r7, r3, r1
 8028b04:	441e      	add	r6, r3
 8028b06:	4253      	negs	r3, r2
 8028b08:	f003 0307 	and.w	r3, r3, #7
 8028b0c:	f002 0207 	and.w	r2, r2, #7
 8028b10:	bf58      	it	pl
 8028b12:	425a      	negpl	r2, r3
 8028b14:	b2d2      	uxtb	r2, r2
 8028b16:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8028b1a:	6721      	str	r1, [r4, #112]	; 0x70
 8028b1c:	e9cd 1700 	strd	r1, r7, [sp]
 8028b20:	4628      	mov	r0, r5
 8028b22:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8028b26:	4631      	mov	r1, r6
 8028b28:	f001 fb12 	bl	802a150 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>
 8028b2c:	4620      	mov	r0, r4
 8028b2e:	b006      	add	sp, #24
 8028b30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028b34:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028b38:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8028b3c:	2104      	movs	r1, #4
 8028b3e:	fb92 f1f1 	sdiv	r1, r2, r1
 8028b42:	fb07 1303 	mla	r3, r7, r3, r1
 8028b46:	441e      	add	r6, r3
 8028b48:	4253      	negs	r3, r2
 8028b4a:	f003 0303 	and.w	r3, r3, #3
 8028b4e:	f002 0203 	and.w	r2, r2, #3
 8028b52:	e7dd      	b.n	8028b10 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x194>
 8028b54:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8028b58:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028b5c:	2a00      	cmp	r2, #0
 8028b5e:	f04f 0102 	mov.w	r1, #2
 8028b62:	fb92 f1f1 	sdiv	r1, r2, r1
 8028b66:	f002 0201 	and.w	r2, r2, #1
 8028b6a:	fb07 1303 	mla	r3, r7, r3, r1
 8028b6e:	441e      	add	r6, r3
 8028b70:	bfb8      	it	lt
 8028b72:	4252      	neglt	r2, r2
 8028b74:	e7ce      	b.n	8028b14 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x198>
 8028b76:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028b7a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8028b7e:	437b      	muls	r3, r7
 8028b80:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028b84:	441e      	add	r6, r3
 8028b86:	2200      	movs	r2, #0
 8028b88:	e7c5      	b.n	8028b16 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x19a>
 8028b8a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028b8e:	fb07 f203 	mul.w	r2, r7, r3
 8028b92:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8028b96:	2103      	movs	r1, #3
 8028b98:	fb13 2301 	smlabb	r3, r3, r1, r2
 8028b9c:	e7f2      	b.n	8028b84 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 8028b9e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028ba2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8028ba6:	fb07 2303 	mla	r3, r7, r3, r2
 8028baa:	e7eb      	b.n	8028b84 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 8028bac:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028bb0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8028bb4:	437b      	muls	r3, r7
 8028bb6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8028bba:	e7e3      	b.n	8028b84 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 8028bbc:	4b06      	ldr	r3, [pc, #24]	; (8028bd8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x25c>)
 8028bbe:	4a03      	ldr	r2, [pc, #12]	; (8028bcc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 8028bc0:	2169      	movs	r1, #105	; 0x69
 8028bc2:	e70d      	b.n	80289e0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x64>
 8028bc4:	080364ac 	.word	0x080364ac
 8028bc8:	080363f4 	.word	0x080363f4
 8028bcc:	080364b4 	.word	0x080364b4
 8028bd0:	08036450 	.word	0x08036450
 8028bd4:	2001e1c0 	.word	0x2001e1c0
 8028bd8:	08036484 	.word	0x08036484

08028bdc <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>:
 8028bdc:	6812      	ldr	r2, [r2, #0]
 8028bde:	2a00      	cmp	r2, #0
 8028be0:	db0b      	blt.n	8028bfa <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x1e>
 8028be2:	9800      	ldr	r0, [sp, #0]
 8028be4:	6800      	ldr	r0, [r0, #0]
 8028be6:	4290      	cmp	r0, r2
 8028be8:	bfd4      	ite	le
 8028bea:	2002      	movle	r0, #2
 8028bec:	2000      	movgt	r0, #0
 8028bee:	680a      	ldr	r2, [r1, #0]
 8028bf0:	2a00      	cmp	r2, #0
 8028bf2:	da04      	bge.n	8028bfe <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x22>
 8028bf4:	f040 0004 	orr.w	r0, r0, #4
 8028bf8:	4770      	bx	lr
 8028bfa:	2001      	movs	r0, #1
 8028bfc:	e7f7      	b.n	8028bee <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x12>
 8028bfe:	681b      	ldr	r3, [r3, #0]
 8028c00:	4293      	cmp	r3, r2
 8028c02:	bfd8      	it	le
 8028c04:	f040 0008 	orrle.w	r0, r0, #8
 8028c08:	4770      	bx	lr
	...

08028c0c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8028c0c:	b510      	push	{r4, lr}
 8028c0e:	4b07      	ldr	r3, [pc, #28]	; (8028c2c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8028c10:	781b      	ldrb	r3, [r3, #0]
 8028c12:	2b01      	cmp	r3, #1
 8028c14:	d108      	bne.n	8028c28 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8028c16:	6843      	ldr	r3, [r0, #4]
 8028c18:	6814      	ldr	r4, [r2, #0]
 8028c1a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8028c1e:	680b      	ldr	r3, [r1, #0]
 8028c20:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8028c24:	6013      	str	r3, [r2, #0]
 8028c26:	600c      	str	r4, [r1, #0]
 8028c28:	bd10      	pop	{r4, pc}
 8028c2a:	bf00      	nop
 8028c2c:	2001e1b8 	.word	0x2001e1b8

08028c30 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8028c30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028c32:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 8028c36:	b085      	sub	sp, #20
 8028c38:	4604      	mov	r4, r0
 8028c3a:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8028c3e:	b33b      	cbz	r3, 8028c90 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x60>
 8028c40:	aa02      	add	r2, sp, #8
 8028c42:	a903      	add	r1, sp, #12
 8028c44:	f7ff ffe2 	bl	8028c0c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8028c48:	68a3      	ldr	r3, [r4, #8]
 8028c4a:	9e03      	ldr	r6, [sp, #12]
 8028c4c:	9f02      	ldr	r7, [sp, #8]
 8028c4e:	1af6      	subs	r6, r6, r3
 8028c50:	68e3      	ldr	r3, [r4, #12]
 8028c52:	9603      	str	r6, [sp, #12]
 8028c54:	1aff      	subs	r7, r7, r3
 8028c56:	f104 0314 	add.w	r3, r4, #20
 8028c5a:	9300      	str	r3, [sp, #0]
 8028c5c:	aa02      	add	r2, sp, #8
 8028c5e:	f104 0310 	add.w	r3, r4, #16
 8028c62:	a903      	add	r1, sp, #12
 8028c64:	4620      	mov	r0, r4
 8028c66:	9702      	str	r7, [sp, #8]
 8028c68:	f7ff ffb8 	bl	8028bdc <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 8028c6c:	f894 30b0 	ldrb.w	r3, [r4, #176]	; 0xb0
 8028c70:	4605      	mov	r5, r0
 8028c72:	b97b      	cbnz	r3, 8028c94 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x64>
 8028c74:	463a      	mov	r2, r7
 8028c76:	4631      	mov	r1, r6
 8028c78:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8028c7c:	f7ff fe78 	bl	8028970 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028c80:	9b03      	ldr	r3, [sp, #12]
 8028c82:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8028c86:	9b02      	ldr	r3, [sp, #8]
 8028c88:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 8028c8c:	f884 50b0 	strb.w	r5, [r4, #176]	; 0xb0
 8028c90:	b005      	add	sp, #20
 8028c92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028c94:	b110      	cbz	r0, 8028c9c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6c>
 8028c96:	ea13 0200 	ands.w	r2, r3, r0
 8028c9a:	d11c      	bne.n	8028cd6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8028c9c:	f894 00a5 	ldrb.w	r0, [r4, #165]	; 0xa5
 8028ca0:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8028ca4:	e9d4 122a 	ldrd	r1, r2, [r4, #168]	; 0xa8
 8028ca8:	b188      	cbz	r0, 8028cce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 8028caa:	f884 30b1 	strb.w	r3, [r4, #177]	; 0xb1
 8028cae:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 8028cb2:	b913      	cbnz	r3, 8028cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x8a>
 8028cb4:	4630      	mov	r0, r6
 8028cb6:	f001 f849 	bl	8029d4c <_ZN8touchgfx7Outline6moveToEii>
 8028cba:	2300      	movs	r3, #0
 8028cbc:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 8028cc0:	2301      	movs	r3, #1
 8028cc2:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 8028cc6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8028cca:	4630      	mov	r0, r6
 8028ccc:	e7d6      	b.n	8028c7c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4c>
 8028cce:	4630      	mov	r0, r6
 8028cd0:	f7ff fe4e 	bl	8028970 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028cd4:	e7f7      	b.n	8028cc6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x96>
 8028cd6:	4615      	mov	r5, r2
 8028cd8:	e7d2      	b.n	8028c80 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x50>

08028cda <_ZN8touchgfx6Canvas5closeEv>:
 8028cda:	b538      	push	{r3, r4, r5, lr}
 8028cdc:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 8028ce0:	4604      	mov	r4, r0
 8028ce2:	b993      	cbnz	r3, 8028d0a <_ZN8touchgfx6Canvas5closeEv+0x30>
 8028ce4:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 8028ce8:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 8028cec:	4213      	tst	r3, r2
 8028cee:	d10c      	bne.n	8028d0a <_ZN8touchgfx6Canvas5closeEv+0x30>
 8028cf0:	f100 0530 	add.w	r5, r0, #48	; 0x30
 8028cf4:	b123      	cbz	r3, 8028d00 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8028cf6:	e9d0 122a 	ldrd	r1, r2, [r0, #168]	; 0xa8
 8028cfa:	4628      	mov	r0, r5
 8028cfc:	f7ff fe38 	bl	8028970 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028d00:	e9d4 122d 	ldrd	r1, r2, [r4, #180]	; 0xb4
 8028d04:	4628      	mov	r0, r5
 8028d06:	f7ff fe33 	bl	8028970 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028d0a:	2300      	movs	r3, #0
 8028d0c:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 8028d10:	bd38      	pop	{r3, r4, r5, pc}

08028d12 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8028d12:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028d14:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 8028d18:	b085      	sub	sp, #20
 8028d1a:	4604      	mov	r4, r0
 8028d1c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8028d20:	b353      	cbz	r3, 8028d78 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>
 8028d22:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 8028d26:	b90b      	cbnz	r3, 8028d2c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x1a>
 8028d28:	f7ff ffd7 	bl	8028cda <_ZN8touchgfx6Canvas5closeEv>
 8028d2c:	aa02      	add	r2, sp, #8
 8028d2e:	a903      	add	r1, sp, #12
 8028d30:	4620      	mov	r0, r4
 8028d32:	f7ff ff6b 	bl	8028c0c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8028d36:	68a3      	ldr	r3, [r4, #8]
 8028d38:	9d03      	ldr	r5, [sp, #12]
 8028d3a:	9e02      	ldr	r6, [sp, #8]
 8028d3c:	1aed      	subs	r5, r5, r3
 8028d3e:	68e3      	ldr	r3, [r4, #12]
 8028d40:	9503      	str	r5, [sp, #12]
 8028d42:	1af6      	subs	r6, r6, r3
 8028d44:	f104 0314 	add.w	r3, r4, #20
 8028d48:	9300      	str	r3, [sp, #0]
 8028d4a:	aa02      	add	r2, sp, #8
 8028d4c:	f104 0310 	add.w	r3, r4, #16
 8028d50:	a903      	add	r1, sp, #12
 8028d52:	4620      	mov	r0, r4
 8028d54:	9602      	str	r6, [sp, #8]
 8028d56:	f7ff ff41 	bl	8028bdc <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 8028d5a:	4607      	mov	r7, r0
 8028d5c:	b170      	cbz	r0, 8028d7c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x6a>
 8028d5e:	2301      	movs	r3, #1
 8028d60:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 8028d64:	9a03      	ldr	r2, [sp, #12]
 8028d66:	9b02      	ldr	r3, [sp, #8]
 8028d68:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 8028d6c:	e9c4 232a 	strd	r2, r3, [r4, #168]	; 0xa8
 8028d70:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 8028d74:	f884 70b0 	strb.w	r7, [r4, #176]	; 0xb0
 8028d78:	b005      	add	sp, #20
 8028d7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028d7c:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 8028d80:	f884 00b1 	strb.w	r0, [r4, #177]	; 0xb1
 8028d84:	b92b      	cbnz	r3, 8028d92 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x80>
 8028d86:	4632      	mov	r2, r6
 8028d88:	4629      	mov	r1, r5
 8028d8a:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8028d8e:	f000 ffdd 	bl	8029d4c <_ZN8touchgfx7Outline6moveToEii>
 8028d92:	2300      	movs	r3, #0
 8028d94:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 8028d98:	2301      	movs	r3, #1
 8028d9a:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 8028d9e:	e7e1      	b.n	8028d64 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x52>

08028da0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>:
 8028da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028da4:	b087      	sub	sp, #28
 8028da6:	4604      	mov	r4, r0
 8028da8:	9105      	str	r1, [sp, #20]
 8028daa:	f001 f916 	bl	8029fda <_ZN8touchgfx7Outline8getCellsEv>
 8028dae:	f8d4 9008 	ldr.w	r9, [r4, #8]
 8028db2:	4605      	mov	r5, r0
 8028db4:	f1b9 0f00 	cmp.w	r9, #0
 8028db8:	d103      	bne.n	8028dc2 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x22>
 8028dba:	2001      	movs	r0, #1
 8028dbc:	b007      	add	sp, #28
 8028dbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028dc2:	f894 6044 	ldrb.w	r6, [r4, #68]	; 0x44
 8028dc6:	2e00      	cmp	r6, #0
 8028dc8:	d139      	bne.n	8028e3e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x9e>
 8028dca:	f104 0848 	add.w	r8, r4, #72	; 0x48
 8028dce:	4640      	mov	r0, r8
 8028dd0:	f001 f945 	bl	802a05e <_ZN8touchgfx8Scanline5resetEv>
 8028dd4:	f109 33ff 	add.w	r3, r9, #4294967295
 8028dd8:	f105 0708 	add.w	r7, r5, #8
 8028ddc:	9303      	str	r3, [sp, #12]
 8028dde:	f9b5 b000 	ldrsh.w	fp, [r5]
 8028de2:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 8028de6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8028dea:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8028dee:	46da      	mov	sl, fp
 8028df0:	eb0b 4009 	add.w	r0, fp, r9, lsl #16
 8028df4:	9b03      	ldr	r3, [sp, #12]
 8028df6:	9504      	str	r5, [sp, #16]
 8028df8:	3b01      	subs	r3, #1
 8028dfa:	9303      	str	r3, [sp, #12]
 8028dfc:	3301      	adds	r3, #1
 8028dfe:	4416      	add	r6, r2
 8028e00:	463d      	mov	r5, r7
 8028e02:	d01e      	beq.n	8028e42 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa2>
 8028e04:	3708      	adds	r7, #8
 8028e06:	f937 cc06 	ldrsh.w	ip, [r7, #-6]
 8028e0a:	f937 2c08 	ldrsh.w	r2, [r7, #-8]
 8028e0e:	eb02 420c 	add.w	r2, r2, ip, lsl #16
 8028e12:	4290      	cmp	r0, r2
 8028e14:	d11e      	bne.n	8028e54 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xb4>
 8028e16:	f937 2c02 	ldrsh.w	r2, [r7, #-2]
 8028e1a:	4411      	add	r1, r2
 8028e1c:	f937 2c04 	ldrsh.w	r2, [r7, #-4]
 8028e20:	e7e8      	b.n	8028df4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x54>
 8028e22:	1c91      	adds	r1, r2, #2
 8028e24:	f04f 0301 	mov.w	r3, #1
 8028e28:	65e1      	str	r1, [r4, #92]	; 0x5c
 8028e2a:	8053      	strh	r3, [r2, #2]
 8028e2c:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8028e2e:	1c91      	adds	r1, r2, #2
 8028e30:	65a1      	str	r1, [r4, #88]	; 0x58
 8028e32:	f8a2 b002 	strh.w	fp, [r2, #2]
 8028e36:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8028e38:	3201      	adds	r2, #1
 8028e3a:	6562      	str	r2, [r4, #84]	; 0x54
 8028e3c:	e03a      	b.n	8028eb4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x114>
 8028e3e:	2000      	movs	r0, #0
 8028e40:	e7bc      	b.n	8028dbc <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1c>
 8028e42:	b951      	cbnz	r1, 8028e5a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xba>
 8028e44:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8028e46:	2b00      	cmp	r3, #0
 8028e48:	d0b7      	beq.n	8028dba <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 8028e4a:	4641      	mov	r1, r8
 8028e4c:	9805      	ldr	r0, [sp, #20]
 8028e4e:	f7ff fd59 	bl	8028904 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 8028e52:	e7b2      	b.n	8028dba <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 8028e54:	2900      	cmp	r1, #0
 8028e56:	d035      	beq.n	8028ec4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x124>
 8028e58:	9504      	str	r5, [sp, #16]
 8028e5a:	ebc1 1186 	rsb	r1, r1, r6, lsl #6
 8028e5e:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 8028e62:	f7ff fd3b 	bl	80288dc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>
 8028e66:	4605      	mov	r5, r0
 8028e68:	b330      	cbz	r0, 8028eb8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 8028e6a:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8028e6c:	b182      	cbz	r2, 8028e90 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 8028e6e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8028e70:	4591      	cmp	r9, r2
 8028e72:	d00d      	beq.n	8028e90 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 8028e74:	4641      	mov	r1, r8
 8028e76:	9805      	ldr	r0, [sp, #20]
 8028e78:	f7ff fd44 	bl	8028904 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 8028e7c:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8028e80:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 8028e82:	65e2      	str	r2, [r4, #92]	; 0x5c
 8028e84:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8028e88:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8028e8a:	65a2      	str	r2, [r4, #88]	; 0x58
 8028e8c:	2300      	movs	r3, #0
 8028e8e:	6563      	str	r3, [r4, #84]	; 0x54
 8028e90:	f1bb 0f00 	cmp.w	fp, #0
 8028e94:	db10      	blt.n	8028eb8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 8028e96:	f7ee fda3 	bl	80179e0 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 8028e9a:	4583      	cmp	fp, r0
 8028e9c:	da0c      	bge.n	8028eb8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 8028e9e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8028ea0:	f802 500b 	strb.w	r5, [r2, fp]
 8028ea4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 8028ea6:	3201      	adds	r2, #1
 8028ea8:	4593      	cmp	fp, r2
 8028eaa:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8028eac:	d1b9      	bne.n	8028e22 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x82>
 8028eae:	8811      	ldrh	r1, [r2, #0]
 8028eb0:	3101      	adds	r1, #1
 8028eb2:	8011      	strh	r1, [r2, #0]
 8028eb4:	e9c4 b913 	strd	fp, r9, [r4, #76]	; 0x4c
 8028eb8:	9b03      	ldr	r3, [sp, #12]
 8028eba:	3301      	adds	r3, #1
 8028ebc:	d0c2      	beq.n	8028e44 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa4>
 8028ebe:	9d04      	ldr	r5, [sp, #16]
 8028ec0:	f10b 0a01 	add.w	sl, fp, #1
 8028ec4:	f9b5 3000 	ldrsh.w	r3, [r5]
 8028ec8:	4553      	cmp	r3, sl
 8028eca:	dd88      	ble.n	8028dde <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 8028ecc:	01b1      	lsls	r1, r6, #6
 8028ece:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 8028ed2:	f7ff fd03 	bl	80288dc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>
 8028ed6:	4683      	mov	fp, r0
 8028ed8:	2800      	cmp	r0, #0
 8028eda:	d080      	beq.n	8028dde <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 8028edc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8028ede:	b183      	cbz	r3, 8028f02 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 8028ee0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8028ee2:	4599      	cmp	r9, r3
 8028ee4:	d00d      	beq.n	8028f02 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 8028ee6:	4641      	mov	r1, r8
 8028ee8:	9805      	ldr	r0, [sp, #20]
 8028eea:	f7ff fd0b 	bl	8028904 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 8028eee:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8028ef2:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8028ef6:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8028ef8:	65e3      	str	r3, [r4, #92]	; 0x5c
 8028efa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8028efc:	65a3      	str	r3, [r4, #88]	; 0x58
 8028efe:	2300      	movs	r3, #0
 8028f00:	6563      	str	r3, [r4, #84]	; 0x54
 8028f02:	f9b5 3000 	ldrsh.w	r3, [r5]
 8028f06:	f8cd b000 	str.w	fp, [sp]
 8028f0a:	eba3 030a 	sub.w	r3, r3, sl
 8028f0e:	464a      	mov	r2, r9
 8028f10:	4651      	mov	r1, sl
 8028f12:	4640      	mov	r0, r8
 8028f14:	f001 f8ce 	bl	802a0b4 <_ZN8touchgfx8Scanline7addSpanEiijj>
 8028f18:	e761      	b.n	8028dde <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>

08028f1a <_ZN8touchgfx6Canvas6renderEh>:
 8028f1a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8028f1c:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 8028f20:	4604      	mov	r4, r0
 8028f22:	460d      	mov	r5, r1
 8028f24:	b913      	cbnz	r3, 8028f2c <_ZN8touchgfx6Canvas6renderEh+0x12>
 8028f26:	2001      	movs	r0, #1
 8028f28:	b003      	add	sp, #12
 8028f2a:	bd30      	pop	{r4, r5, pc}
 8028f2c:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 8028f30:	2b00      	cmp	r3, #0
 8028f32:	d12f      	bne.n	8028f94 <_ZN8touchgfx6Canvas6renderEh+0x7a>
 8028f34:	f890 30a6 	ldrb.w	r3, [r0, #166]	; 0xa6
 8028f38:	2b00      	cmp	r3, #0
 8028f3a:	d0f4      	beq.n	8028f26 <_ZN8touchgfx6Canvas6renderEh+0xc>
 8028f3c:	6840      	ldr	r0, [r0, #4]
 8028f3e:	6803      	ldr	r3, [r0, #0]
 8028f40:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8028f42:	4798      	blx	r3
 8028f44:	fb10 f105 	smulbb	r1, r0, r5
 8028f48:	b288      	uxth	r0, r1
 8028f4a:	1c41      	adds	r1, r0, #1
 8028f4c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8028f50:	120d      	asrs	r5, r1, #8
 8028f52:	d0e8      	beq.n	8028f26 <_ZN8touchgfx6Canvas6renderEh+0xc>
 8028f54:	4620      	mov	r0, r4
 8028f56:	f7ff fec0 	bl	8028cda <_ZN8touchgfx6Canvas5closeEv>
 8028f5a:	6860      	ldr	r0, [r4, #4]
 8028f5c:	6803      	ldr	r3, [r0, #0]
 8028f5e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8028f60:	4798      	blx	r3
 8028f62:	f9b4 20a0 	ldrsh.w	r2, [r4, #160]	; 0xa0
 8028f66:	f9b4 30a2 	ldrsh.w	r3, [r4, #162]	; 0xa2
 8028f6a:	80c3      	strh	r3, [r0, #6]
 8028f6c:	8082      	strh	r2, [r0, #4]
 8028f6e:	6860      	ldr	r0, [r4, #4]
 8028f70:	6803      	ldr	r3, [r0, #0]
 8028f72:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8028f74:	4798      	blx	r3
 8028f76:	7205      	strb	r5, [r0, #8]
 8028f78:	6860      	ldr	r0, [r4, #4]
 8028f7a:	6803      	ldr	r3, [r0, #0]
 8028f7c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8028f7e:	4798      	blx	r3
 8028f80:	f104 0318 	add.w	r3, r4, #24
 8028f84:	e9cd 3000 	strd	r3, r0, [sp]
 8028f88:	4669      	mov	r1, sp
 8028f8a:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8028f8e:	f7ff ff07 	bl	8028da0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>
 8028f92:	e7c9      	b.n	8028f28 <_ZN8touchgfx6Canvas6renderEh+0xe>
 8028f94:	2000      	movs	r0, #0
 8028f96:	e7c7      	b.n	8028f28 <_ZN8touchgfx6Canvas6renderEh+0xe>

08028f98 <_ZN8touchgfx6CanvasD1Ev>:
 8028f98:	b538      	push	{r3, r4, r5, lr}
 8028f9a:	4605      	mov	r5, r0
 8028f9c:	4b08      	ldr	r3, [pc, #32]	; (8028fc0 <_ZN8touchgfx6CanvasD1Ev+0x28>)
 8028f9e:	f845 3b30 	str.w	r3, [r5], #48
 8028fa2:	4b08      	ldr	r3, [pc, #32]	; (8028fc4 <_ZN8touchgfx6CanvasD1Ev+0x2c>)
 8028fa4:	4604      	mov	r4, r0
 8028fa6:	6818      	ldr	r0, [r3, #0]
 8028fa8:	6803      	ldr	r3, [r0, #0]
 8028faa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028fac:	4798      	blx	r3
 8028fae:	4628      	mov	r0, r5
 8028fb0:	f000 f833 	bl	802901a <_ZN8touchgfx7OutlineD1Ev>
 8028fb4:	f104 0018 	add.w	r0, r4, #24
 8028fb8:	f001 f8b5 	bl	802a126 <_ZN8touchgfx15RenderingBufferD1Ev>
 8028fbc:	4620      	mov	r0, r4
 8028fbe:	bd38      	pop	{r3, r4, r5, pc}
 8028fc0:	080364ac 	.word	0x080364ac
 8028fc4:	2001e1c0 	.word	0x2001e1c0

08028fc8 <_ZN8touchgfx6CanvasD0Ev>:
 8028fc8:	b510      	push	{r4, lr}
 8028fca:	4604      	mov	r4, r0
 8028fcc:	f7ff ffe4 	bl	8028f98 <_ZN8touchgfx6CanvasD1Ev>
 8028fd0:	4620      	mov	r0, r4
 8028fd2:	21bc      	movs	r1, #188	; 0xbc
 8028fd4:	f002 f8a9 	bl	802b12a <_ZdlPvj>
 8028fd8:	4620      	mov	r0, r4
 8028fda:	bd10      	pop	{r4, pc}

08028fdc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8028fdc:	b570      	push	{r4, r5, r6, lr}
 8028fde:	790b      	ldrb	r3, [r1, #4]
 8028fe0:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8028fe4:	2b00      	cmp	r3, #0
 8028fe6:	bf0c      	ite	eq
 8028fe8:	2301      	moveq	r3, #1
 8028fea:	2300      	movne	r3, #0
 8028fec:	4604      	mov	r4, r0
 8028fee:	460e      	mov	r6, r1
 8028ff0:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8028ff4:	d109      	bne.n	802900a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8028ff6:	b14d      	cbz	r5, 802900c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8028ff8:	7933      	ldrb	r3, [r6, #4]
 8028ffa:	2b01      	cmp	r3, #1
 8028ffc:	d10c      	bne.n	8029018 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028ffe:	6823      	ldr	r3, [r4, #0]
 8029000:	4620      	mov	r0, r4
 8029002:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8029004:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8029008:	4718      	bx	r3
 802900a:	b12d      	cbz	r5, 8029018 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802900c:	6823      	ldr	r3, [r4, #0]
 802900e:	4620      	mov	r0, r4
 8029010:	695b      	ldr	r3, [r3, #20]
 8029012:	4798      	blx	r3
 8029014:	2d00      	cmp	r5, #0
 8029016:	d1ef      	bne.n	8028ff8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8029018:	bd70      	pop	{r4, r5, r6, pc}

0802901a <_ZN8touchgfx7OutlineD1Ev>:
 802901a:	4770      	bx	lr

0802901c <_ZN8touchgfx7OutlineD0Ev>:
 802901c:	b510      	push	{r4, lr}
 802901e:	2148      	movs	r1, #72	; 0x48
 8029020:	4604      	mov	r4, r0
 8029022:	f002 f882 	bl	802b12a <_ZdlPvj>
 8029026:	4620      	mov	r0, r4
 8029028:	bd10      	pop	{r4, pc}

0802902a <_ZN8touchgfx7Outline5resetEv>:
 802902a:	b510      	push	{r4, lr}
 802902c:	4604      	mov	r4, r0
 802902e:	f7ee fcef 	bl	8017a10 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8029032:	60e0      	str	r0, [r4, #12]
 8029034:	f7ee fcf2 	bl	8017a1c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8029038:	68e3      	ldr	r3, [r4, #12]
 802903a:	6123      	str	r3, [r4, #16]
 802903c:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8029040:	82a3      	strh	r3, [r4, #20]
 8029042:	82e3      	strh	r3, [r4, #22]
 8029044:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8029046:	f023 0301 	bic.w	r3, r3, #1
 802904a:	f043 0302 	orr.w	r3, r3, #2
 802904e:	63e3      	str	r3, [r4, #60]	; 0x3c
 8029050:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8029054:	2200      	movs	r2, #0
 8029056:	08c0      	lsrs	r0, r0, #3
 8029058:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802905c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8029060:	6060      	str	r0, [r4, #4]
 8029062:	60a2      	str	r2, [r4, #8]
 8029064:	8322      	strh	r2, [r4, #24]
 8029066:	8362      	strh	r2, [r4, #26]
 8029068:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802906c:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8029070:	bd10      	pop	{r4, pc}
	...

08029074 <_ZN8touchgfx7OutlineC1Ev>:
 8029074:	b510      	push	{r4, lr}
 8029076:	4b0f      	ldr	r3, [pc, #60]	; (80290b4 <_ZN8touchgfx7OutlineC1Ev+0x40>)
 8029078:	6003      	str	r3, [r0, #0]
 802907a:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 802907e:	2300      	movs	r3, #0
 8029080:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8029084:	4604      	mov	r4, r0
 8029086:	e9c0 3301 	strd	r3, r3, [r0, #4]
 802908a:	e9c0 3303 	strd	r3, r3, [r0, #12]
 802908e:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8029092:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8029096:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
 802909a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 802909e:	e9c0 110d 	strd	r1, r1, [r0, #52]	; 0x34
 80290a2:	e9c0 320f 	strd	r3, r2, [r0, #60]	; 0x3c
 80290a6:	f880 3044 	strb.w	r3, [r0, #68]	; 0x44
 80290aa:	f7ff ffbe 	bl	802902a <_ZN8touchgfx7Outline5resetEv>
 80290ae:	4620      	mov	r0, r4
 80290b0:	bd10      	pop	{r4, pc}
 80290b2:	bf00      	nop
 80290b4:	0803657c 	.word	0x0803657c

080290b8 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80290b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80290bc:	b095      	sub	sp, #84	; 0x54
 80290be:	4604      	mov	r4, r0
 80290c0:	981e      	ldr	r0, [sp, #120]	; 0x78
 80290c2:	9304      	str	r3, [sp, #16]
 80290c4:	1153      	asrs	r3, r2, #5
 80290c6:	9300      	str	r3, [sp, #0]
 80290c8:	1143      	asrs	r3, r0, #5
 80290ca:	930c      	str	r3, [sp, #48]	; 0x30
 80290cc:	f000 031f 	and.w	r3, r0, #31
 80290d0:	9303      	str	r3, [sp, #12]
 80290d2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80290d4:	1155      	asrs	r5, r2, #5
 80290d6:	42ab      	cmp	r3, r5
 80290d8:	bfc4      	itt	gt
 80290da:	462b      	movgt	r3, r5
 80290dc:	6323      	strgt	r3, [r4, #48]	; 0x30
 80290de:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80290e0:	1155      	asrs	r5, r2, #5
 80290e2:	42ab      	cmp	r3, r5
 80290e4:	bfde      	ittt	le
 80290e6:	462b      	movle	r3, r5
 80290e8:	3301      	addle	r3, #1
 80290ea:	63a3      	strle	r3, [r4, #56]	; 0x38
 80290ec:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80290ee:	1145      	asrs	r5, r0, #5
 80290f0:	42ab      	cmp	r3, r5
 80290f2:	bfc4      	itt	gt
 80290f4:	462b      	movgt	r3, r5
 80290f6:	6323      	strgt	r3, [r4, #48]	; 0x30
 80290f8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80290fa:	1145      	asrs	r5, r0, #5
 80290fc:	42ab      	cmp	r3, r5
 80290fe:	bfde      	ittt	le
 8029100:	462b      	movle	r3, r5
 8029102:	3301      	addle	r3, #1
 8029104:	63a3      	strle	r3, [r4, #56]	; 0x38
 8029106:	9b04      	ldr	r3, [sp, #16]
 8029108:	1157      	asrs	r7, r2, #5
 802910a:	eba3 0a01 	sub.w	sl, r3, r1
 802910e:	1143      	asrs	r3, r0, #5
 8029110:	429f      	cmp	r7, r3
 8029112:	f002 061f 	and.w	r6, r2, #31
 8029116:	ea4f 1561 	mov.w	r5, r1, asr #5
 802911a:	f040 8122 	bne.w	8029362 <_ZN8touchgfx7Outline10renderLineEiiii+0x2aa>
 802911e:	9b04      	ldr	r3, [sp, #16]
 8029120:	ea4f 1b63 	mov.w	fp, r3, asr #5
 8029124:	9b03      	ldr	r3, [sp, #12]
 8029126:	429e      	cmp	r6, r3
 8029128:	d131      	bne.n	802918e <_ZN8touchgfx7Outline10renderLineEiiii+0xd6>
 802912a:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 802912e:	f9bd 2000 	ldrsh.w	r2, [sp]
 8029132:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 8029136:	fa0f fb8b 	sxth.w	fp, fp
 802913a:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 802913e:	eb0b 4002 	add.w	r0, fp, r2, lsl #16
 8029142:	4281      	cmp	r1, r0
 8029144:	f000 80eb 	beq.w	802931e <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 8029148:	8b60      	ldrh	r0, [r4, #26]
 802914a:	8b21      	ldrh	r1, [r4, #24]
 802914c:	4301      	orrs	r1, r0
 802914e:	d00b      	beq.n	8029168 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 8029150:	2b00      	cmp	r3, #0
 8029152:	db09      	blt.n	8029168 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 8029154:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029156:	428b      	cmp	r3, r1
 8029158:	da06      	bge.n	8029168 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 802915a:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802915e:	4299      	cmp	r1, r3
 8029160:	d308      	bcc.n	8029174 <_ZN8touchgfx7Outline10renderLineEiiii+0xbc>
 8029162:	2301      	movs	r3, #1
 8029164:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8029168:	f8a4 b014 	strh.w	fp, [r4, #20]
 802916c:	2300      	movs	r3, #0
 802916e:	82e2      	strh	r2, [r4, #22]
 8029170:	8323      	strh	r3, [r4, #24]
 8029172:	e01f      	b.n	80291b4 <_ZN8touchgfx7Outline10renderLineEiiii+0xfc>
 8029174:	f104 0314 	add.w	r3, r4, #20
 8029178:	cb03      	ldmia	r3!, {r0, r1}
 802917a:	6925      	ldr	r5, [r4, #16]
 802917c:	6028      	str	r0, [r5, #0]
 802917e:	6069      	str	r1, [r5, #4]
 8029180:	6923      	ldr	r3, [r4, #16]
 8029182:	3308      	adds	r3, #8
 8029184:	6123      	str	r3, [r4, #16]
 8029186:	68a3      	ldr	r3, [r4, #8]
 8029188:	3301      	adds	r3, #1
 802918a:	60a3      	str	r3, [r4, #8]
 802918c:	e7ec      	b.n	8029168 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 802918e:	9b04      	ldr	r3, [sp, #16]
 8029190:	8b20      	ldrh	r0, [r4, #24]
 8029192:	8b62      	ldrh	r2, [r4, #26]
 8029194:	f003 031f 	and.w	r3, r3, #31
 8029198:	9305      	str	r3, [sp, #20]
 802919a:	9b03      	ldr	r3, [sp, #12]
 802919c:	45ab      	cmp	fp, r5
 802919e:	f001 011f 	and.w	r1, r1, #31
 80291a2:	eba3 0306 	sub.w	r3, r3, r6
 80291a6:	d107      	bne.n	80291b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x100>
 80291a8:	4418      	add	r0, r3
 80291aa:	8320      	strh	r0, [r4, #24]
 80291ac:	9805      	ldr	r0, [sp, #20]
 80291ae:	4401      	add	r1, r0
 80291b0:	fb03 2301 	mla	r3, r3, r1, r2
 80291b4:	8363      	strh	r3, [r4, #26]
 80291b6:	e0b2      	b.n	802931e <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 80291b8:	f1ba 0f00 	cmp.w	sl, #0
 80291bc:	db35      	blt.n	802922a <_ZN8touchgfx7Outline10renderLineEiiii+0x172>
 80291be:	2701      	movs	r7, #1
 80291c0:	f1c1 0c20 	rsb	ip, r1, #32
 80291c4:	9702      	str	r7, [sp, #8]
 80291c6:	fb03 f30c 	mul.w	r3, r3, ip
 80291ca:	2720      	movs	r7, #32
 80291cc:	9701      	str	r7, [sp, #4]
 80291ce:	fb93 fcfa 	sdiv	ip, r3, sl
 80291d2:	9f01      	ldr	r7, [sp, #4]
 80291d4:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 80291d8:	fb0a 331c 	mls	r3, sl, ip, r3
 80291dc:	2b00      	cmp	r3, #0
 80291de:	bfb8      	it	lt
 80291e0:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80291e4:	4439      	add	r1, r7
 80291e6:	fb0c 2101 	mla	r1, ip, r1, r2
 80291ea:	9a02      	ldr	r2, [sp, #8]
 80291ec:	4415      	add	r5, r2
 80291ee:	f9bd 2000 	ldrsh.w	r2, [sp]
 80291f2:	9200      	str	r2, [sp, #0]
 80291f4:	ea4f 4702 	mov.w	r7, r2, lsl #16
 80291f8:	9704      	str	r7, [sp, #16]
 80291fa:	9a04      	ldr	r2, [sp, #16]
 80291fc:	f9b4 7014 	ldrsh.w	r7, [r4, #20]
 8029200:	fa0f fe85 	sxth.w	lr, r5
 8029204:	4460      	add	r0, ip
 8029206:	eb07 4708 	add.w	r7, r7, r8, lsl #16
 802920a:	eb0e 0902 	add.w	r9, lr, r2
 802920e:	bfb8      	it	lt
 8029210:	4453      	addlt	r3, sl
 8029212:	b200      	sxth	r0, r0
 8029214:	b209      	sxth	r1, r1
 8029216:	454f      	cmp	r7, r9
 8029218:	8320      	strh	r0, [r4, #24]
 802921a:	8361      	strh	r1, [r4, #26]
 802921c:	d10d      	bne.n	802923a <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 802921e:	4ba1      	ldr	r3, [pc, #644]	; (80294a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ec>)
 8029220:	4aa1      	ldr	r2, [pc, #644]	; (80294a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f0>)
 8029222:	48a2      	ldr	r0, [pc, #648]	; (80294ac <_ZN8touchgfx7Outline10renderLineEiiii+0x3f4>)
 8029224:	2176      	movs	r1, #118	; 0x76
 8029226:	f002 fecd 	bl	802bfc4 <__assert_func>
 802922a:	f04f 37ff 	mov.w	r7, #4294967295
 802922e:	9702      	str	r7, [sp, #8]
 8029230:	434b      	muls	r3, r1
 8029232:	f1ca 0a00 	rsb	sl, sl, #0
 8029236:	2700      	movs	r7, #0
 8029238:	e7c8      	b.n	80291cc <_ZN8touchgfx7Outline10renderLineEiiii+0x114>
 802923a:	ea50 0201 	orrs.w	r2, r0, r1
 802923e:	d00c      	beq.n	802925a <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 8029240:	f1b8 0f00 	cmp.w	r8, #0
 8029244:	db09      	blt.n	802925a <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 8029246:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029248:	4588      	cmp	r8, r1
 802924a:	da06      	bge.n	802925a <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 802924c:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029250:	4288      	cmp	r0, r1
 8029252:	d367      	bcc.n	8029324 <_ZN8touchgfx7Outline10renderLineEiiii+0x26c>
 8029254:	2101      	movs	r1, #1
 8029256:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 802925a:	2100      	movs	r1, #0
 802925c:	9a00      	ldr	r2, [sp, #0]
 802925e:	f8a4 e014 	strh.w	lr, [r4, #20]
 8029262:	45ab      	cmp	fp, r5
 8029264:	82e2      	strh	r2, [r4, #22]
 8029266:	8321      	strh	r1, [r4, #24]
 8029268:	8361      	strh	r1, [r4, #26]
 802926a:	4466      	add	r6, ip
 802926c:	d04e      	beq.n	802930c <_ZN8touchgfx7Outline10renderLineEiiii+0x254>
 802926e:	9a03      	ldr	r2, [sp, #12]
 8029270:	1b91      	subs	r1, r2, r6
 8029272:	448c      	add	ip, r1
 8029274:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
 8029278:	fb9c f7fa 	sdiv	r7, ip, sl
 802927c:	fb0a cc17 	mls	ip, sl, r7, ip
 8029280:	f1bc 0f00 	cmp.w	ip, #0
 8029284:	bfb8      	it	lt
 8029286:	f107 37ff 	addlt.w	r7, r7, #4294967295
 802928a:	f107 0201 	add.w	r2, r7, #1
 802928e:	bfb8      	it	lt
 8029290:	44d4      	addlt	ip, sl
 8029292:	eba3 030a 	sub.w	r3, r3, sl
 8029296:	9207      	str	r2, [sp, #28]
 8029298:	f04f 0800 	mov.w	r8, #0
 802929c:	eb13 030c 	adds.w	r3, r3, ip
 80292a0:	bf58      	it	pl
 80292a2:	9807      	ldrpl	r0, [sp, #28]
 80292a4:	9a02      	ldr	r2, [sp, #8]
 80292a6:	bf48      	it	mi
 80292a8:	4638      	movmi	r0, r7
 80292aa:	fa0f fe80 	sxth.w	lr, r0
 80292ae:	ea4f 1140 	mov.w	r1, r0, lsl #5
 80292b2:	4415      	add	r5, r2
 80292b4:	4406      	add	r6, r0
 80292b6:	9a04      	ldr	r2, [sp, #16]
 80292b8:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 80292bc:	f8a4 e018 	strh.w	lr, [r4, #24]
 80292c0:	fa0f f985 	sxth.w	r9, r5
 80292c4:	4410      	add	r0, r2
 80292c6:	444a      	add	r2, r9
 80292c8:	bf58      	it	pl
 80292ca:	eba3 030a 	subpl.w	r3, r3, sl
 80292ce:	b209      	sxth	r1, r1
 80292d0:	4290      	cmp	r0, r2
 80292d2:	8361      	strh	r1, [r4, #26]
 80292d4:	d0a3      	beq.n	802921e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80292d6:	ea5e 0201 	orrs.w	r2, lr, r1
 80292da:	d00d      	beq.n	80292f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 80292dc:	9a00      	ldr	r2, [sp, #0]
 80292de:	2a00      	cmp	r2, #0
 80292e0:	db0a      	blt.n	80292f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 80292e2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80292e4:	428a      	cmp	r2, r1
 80292e6:	da07      	bge.n	80292f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 80292e8:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80292ec:	4288      	cmp	r0, r1
 80292ee:	d329      	bcc.n	8029344 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80292f0:	f04f 0201 	mov.w	r2, #1
 80292f4:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 80292f8:	9a00      	ldr	r2, [sp, #0]
 80292fa:	f8a4 9014 	strh.w	r9, [r4, #20]
 80292fe:	45ab      	cmp	fp, r5
 8029300:	82e2      	strh	r2, [r4, #22]
 8029302:	f8a4 8018 	strh.w	r8, [r4, #24]
 8029306:	f8a4 801a 	strh.w	r8, [r4, #26]
 802930a:	d1c7      	bne.n	802929c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 802930c:	9b03      	ldr	r3, [sp, #12]
 802930e:	9a01      	ldr	r2, [sp, #4]
 8029310:	1b9e      	subs	r6, r3, r6
 8029312:	9b05      	ldr	r3, [sp, #20]
 8029314:	8326      	strh	r6, [r4, #24]
 8029316:	3320      	adds	r3, #32
 8029318:	1a9b      	subs	r3, r3, r2
 802931a:	435e      	muls	r6, r3
 802931c:	8366      	strh	r6, [r4, #26]
 802931e:	b015      	add	sp, #84	; 0x54
 8029320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029324:	f104 0714 	add.w	r7, r4, #20
 8029328:	cf03      	ldmia	r7!, {r0, r1}
 802932a:	f8d4 8010 	ldr.w	r8, [r4, #16]
 802932e:	f8c8 0000 	str.w	r0, [r8]
 8029332:	f8c8 1004 	str.w	r1, [r8, #4]
 8029336:	6921      	ldr	r1, [r4, #16]
 8029338:	3108      	adds	r1, #8
 802933a:	6121      	str	r1, [r4, #16]
 802933c:	68a1      	ldr	r1, [r4, #8]
 802933e:	3101      	adds	r1, #1
 8029340:	60a1      	str	r1, [r4, #8]
 8029342:	e78a      	b.n	802925a <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 8029344:	f104 0e14 	add.w	lr, r4, #20
 8029348:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 802934c:	6922      	ldr	r2, [r4, #16]
 802934e:	9206      	str	r2, [sp, #24]
 8029350:	6010      	str	r0, [r2, #0]
 8029352:	6051      	str	r1, [r2, #4]
 8029354:	6921      	ldr	r1, [r4, #16]
 8029356:	3108      	adds	r1, #8
 8029358:	6121      	str	r1, [r4, #16]
 802935a:	68a1      	ldr	r1, [r4, #8]
 802935c:	3101      	adds	r1, #1
 802935e:	60a1      	str	r1, [r4, #8]
 8029360:	e7ca      	b.n	80292f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 8029362:	eba0 0b02 	sub.w	fp, r0, r2
 8029366:	f1ba 0f00 	cmp.w	sl, #0
 802936a:	f040 80a1 	bne.w	80294b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f8>
 802936e:	f1bb 0f00 	cmp.w	fp, #0
 8029372:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8029376:	8b62      	ldrh	r2, [r4, #26]
 8029378:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 802937c:	f9b4 c014 	ldrsh.w	ip, [r4, #20]
 8029380:	f001 033e 	and.w	r3, r1, #62	; 0x3e
 8029384:	bfa8      	it	ge
 8029386:	f04f 0a20 	movge.w	sl, #32
 802938a:	8b21      	ldrh	r1, [r4, #24]
 802938c:	ebaa 0606 	sub.w	r6, sl, r6
 8029390:	4431      	add	r1, r6
 8029392:	fb06 2603 	mla	r6, r6, r3, r2
 8029396:	9a00      	ldr	r2, [sp, #0]
 8029398:	bfb4      	ite	lt
 802939a:	f04f 39ff 	movlt.w	r9, #4294967295
 802939e:	f04f 0901 	movge.w	r9, #1
 80293a2:	444a      	add	r2, r9
 80293a4:	b22d      	sxth	r5, r5
 80293a6:	b217      	sxth	r7, r2
 80293a8:	eb0c 4c00 	add.w	ip, ip, r0, lsl #16
 80293ac:	eb05 4e07 	add.w	lr, r5, r7, lsl #16
 80293b0:	b209      	sxth	r1, r1
 80293b2:	b236      	sxth	r6, r6
 80293b4:	45f4      	cmp	ip, lr
 80293b6:	8321      	strh	r1, [r4, #24]
 80293b8:	8366      	strh	r6, [r4, #26]
 80293ba:	f43f af30 	beq.w	802921e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80293be:	4331      	orrs	r1, r6
 80293c0:	d00b      	beq.n	80293da <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 80293c2:	2800      	cmp	r0, #0
 80293c4:	db09      	blt.n	80293da <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 80293c6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80293c8:	4288      	cmp	r0, r1
 80293ca:	da06      	bge.n	80293da <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 80293cc:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80293d0:	4288      	cmp	r0, r1
 80293d2:	d33b      	bcc.n	802944c <_ZN8touchgfx7Outline10renderLineEiiii+0x394>
 80293d4:	2101      	movs	r1, #1
 80293d6:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 80293da:	f1aa 0610 	sub.w	r6, sl, #16
 80293de:	0076      	lsls	r6, r6, #1
 80293e0:	fb06 fc03 	mul.w	ip, r6, r3
 80293e4:	fa0f fc8c 	sxth.w	ip, ip
 80293e8:	b236      	sxth	r6, r6
 80293ea:	82e7      	strh	r7, [r4, #22]
 80293ec:	ea46 010c 	orr.w	r1, r6, ip
 80293f0:	2700      	movs	r7, #0
 80293f2:	82a5      	strh	r5, [r4, #20]
 80293f4:	8327      	strh	r7, [r4, #24]
 80293f6:	8367      	strh	r7, [r4, #26]
 80293f8:	9100      	str	r1, [sp, #0]
 80293fa:	990c      	ldr	r1, [sp, #48]	; 0x30
 80293fc:	428a      	cmp	r2, r1
 80293fe:	d046      	beq.n	802948e <_ZN8touchgfx7Outline10renderLineEiiii+0x3d6>
 8029400:	444a      	add	r2, r9
 8029402:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 8029406:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 802940a:	8326      	strh	r6, [r4, #24]
 802940c:	fa0f f882 	sxth.w	r8, r2
 8029410:	eb00 4001 	add.w	r0, r0, r1, lsl #16
 8029414:	eb05 4e08 	add.w	lr, r5, r8, lsl #16
 8029418:	4570      	cmp	r0, lr
 802941a:	f8a4 c01a 	strh.w	ip, [r4, #26]
 802941e:	f43f aefe 	beq.w	802921e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8029422:	9800      	ldr	r0, [sp, #0]
 8029424:	b160      	cbz	r0, 8029440 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 8029426:	2900      	cmp	r1, #0
 8029428:	db0a      	blt.n	8029440 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 802942a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 802942c:	4281      	cmp	r1, r0
 802942e:	da07      	bge.n	8029440 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 8029430:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029434:	4288      	cmp	r0, r1
 8029436:	d319      	bcc.n	802946c <_ZN8touchgfx7Outline10renderLineEiiii+0x3b4>
 8029438:	f04f 0101 	mov.w	r1, #1
 802943c:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8029440:	82a5      	strh	r5, [r4, #20]
 8029442:	f8a4 8016 	strh.w	r8, [r4, #22]
 8029446:	8327      	strh	r7, [r4, #24]
 8029448:	8367      	strh	r7, [r4, #26]
 802944a:	e7d6      	b.n	80293fa <_ZN8touchgfx7Outline10renderLineEiiii+0x342>
 802944c:	f104 0614 	add.w	r6, r4, #20
 8029450:	ce03      	ldmia	r6!, {r0, r1}
 8029452:	f8d4 c010 	ldr.w	ip, [r4, #16]
 8029456:	f8cc 0000 	str.w	r0, [ip]
 802945a:	f8cc 1004 	str.w	r1, [ip, #4]
 802945e:	6921      	ldr	r1, [r4, #16]
 8029460:	3108      	adds	r1, #8
 8029462:	6121      	str	r1, [r4, #16]
 8029464:	68a1      	ldr	r1, [r4, #8]
 8029466:	3101      	adds	r1, #1
 8029468:	60a1      	str	r1, [r4, #8]
 802946a:	e7b6      	b.n	80293da <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 802946c:	f104 0e14 	add.w	lr, r4, #20
 8029470:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 8029474:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8029478:	f8cb 0000 	str.w	r0, [fp]
 802947c:	f8cb 1004 	str.w	r1, [fp, #4]
 8029480:	6921      	ldr	r1, [r4, #16]
 8029482:	3108      	adds	r1, #8
 8029484:	6121      	str	r1, [r4, #16]
 8029486:	68a1      	ldr	r1, [r4, #8]
 8029488:	3101      	adds	r1, #1
 802948a:	60a1      	str	r1, [r4, #8]
 802948c:	e7d8      	b.n	8029440 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 802948e:	9a03      	ldr	r2, [sp, #12]
 8029490:	8b61      	ldrh	r1, [r4, #26]
 8029492:	f1a2 0e20 	sub.w	lr, r2, #32
 8029496:	8b22      	ldrh	r2, [r4, #24]
 8029498:	44d6      	add	lr, sl
 802949a:	4472      	add	r2, lr
 802949c:	8322      	strh	r2, [r4, #24]
 802949e:	fb0e 1303 	mla	r3, lr, r3, r1
 80294a2:	e687      	b.n	80291b4 <_ZN8touchgfx7Outline10renderLineEiiii+0xfc>
 80294a4:	08036503 	.word	0x08036503
 80294a8:	08036584 	.word	0x08036584
 80294ac:	08036534 	.word	0x08036534
 80294b0:	f1bb 0f00 	cmp.w	fp, #0
 80294b4:	f2c0 8124 	blt.w	8029700 <_ZN8touchgfx7Outline10renderLineEiiii+0x648>
 80294b8:	2201      	movs	r2, #1
 80294ba:	f1c6 0320 	rsb	r3, r6, #32
 80294be:	920b      	str	r2, [sp, #44]	; 0x2c
 80294c0:	fb0a f303 	mul.w	r3, sl, r3
 80294c4:	2220      	movs	r2, #32
 80294c6:	fb93 fcfb 	sdiv	ip, r3, fp
 80294ca:	fb0b 331c 	mls	r3, fp, ip, r3
 80294ce:	2b00      	cmp	r3, #0
 80294d0:	9308      	str	r3, [sp, #32]
 80294d2:	bfbe      	ittt	lt
 80294d4:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80294d8:	445b      	addlt	r3, fp
 80294da:	9308      	strlt	r3, [sp, #32]
 80294dc:	eb0c 0301 	add.w	r3, ip, r1
 80294e0:	9301      	str	r3, [sp, #4]
 80294e2:	115b      	asrs	r3, r3, #5
 80294e4:	9305      	str	r3, [sp, #20]
 80294e6:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 80294ea:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80294ee:	9202      	str	r2, [sp, #8]
 80294f0:	eb03 4308 	add.w	r3, r3, r8, lsl #16
 80294f4:	461f      	mov	r7, r3
 80294f6:	9b02      	ldr	r3, [sp, #8]
 80294f8:	42b3      	cmp	r3, r6
 80294fa:	f040 8117 	bne.w	802972c <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 80294fe:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8029502:	f9bd 3000 	ldrsh.w	r3, [sp]
 8029506:	eb02 4103 	add.w	r1, r2, r3, lsl #16
 802950a:	42b9      	cmp	r1, r7
 802950c:	d016      	beq.n	802953c <_ZN8touchgfx7Outline10renderLineEiiii+0x484>
 802950e:	8b60      	ldrh	r0, [r4, #26]
 8029510:	8b21      	ldrh	r1, [r4, #24]
 8029512:	4301      	orrs	r1, r0
 8029514:	d00d      	beq.n	8029532 <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 8029516:	f1b8 0f00 	cmp.w	r8, #0
 802951a:	db0a      	blt.n	8029532 <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 802951c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802951e:	4541      	cmp	r1, r8
 8029520:	dd07      	ble.n	8029532 <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 8029522:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029526:	4288      	cmp	r0, r1
 8029528:	f0c0 80f3 	bcc.w	8029712 <_ZN8touchgfx7Outline10renderLineEiiii+0x65a>
 802952c:	2101      	movs	r1, #1
 802952e:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8029532:	82e3      	strh	r3, [r4, #22]
 8029534:	2300      	movs	r3, #0
 8029536:	82a2      	strh	r2, [r4, #20]
 8029538:	8323      	strh	r3, [r4, #24]
 802953a:	8363      	strh	r3, [r4, #26]
 802953c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802953e:	9a00      	ldr	r2, [sp, #0]
 8029540:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 8029544:	441a      	add	r2, r3
 8029546:	4691      	mov	r9, r2
 8029548:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 802954c:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
 8029550:	fa0f f589 	sxth.w	r5, r9
 8029554:	eb01 4102 	add.w	r1, r1, r2, lsl #16
 8029558:	eb03 4005 	add.w	r0, r3, r5, lsl #16
 802955c:	4281      	cmp	r1, r0
 802955e:	d015      	beq.n	802958c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d4>
 8029560:	8b60      	ldrh	r0, [r4, #26]
 8029562:	8b21      	ldrh	r1, [r4, #24]
 8029564:	4301      	orrs	r1, r0
 8029566:	d00c      	beq.n	8029582 <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 8029568:	2a00      	cmp	r2, #0
 802956a:	db0a      	blt.n	8029582 <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 802956c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802956e:	428a      	cmp	r2, r1
 8029570:	da07      	bge.n	8029582 <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 8029572:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 8029576:	4291      	cmp	r1, r2
 8029578:	f0c0 81b4 	bcc.w	80298e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x82c>
 802957c:	2201      	movs	r2, #1
 802957e:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8029582:	82a3      	strh	r3, [r4, #20]
 8029584:	2300      	movs	r3, #0
 8029586:	82e5      	strh	r5, [r4, #22]
 8029588:	8323      	strh	r3, [r4, #24]
 802958a:	8363      	strh	r3, [r4, #26]
 802958c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802958e:	454b      	cmp	r3, r9
 8029590:	f000 808a 	beq.w	80296a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x5f0>
 8029594:	ea4f 134a 	mov.w	r3, sl, lsl #5
 8029598:	fb93 f2fb 	sdiv	r2, r3, fp
 802959c:	fb0b 3312 	mls	r3, fp, r2, r3
 80295a0:	2b00      	cmp	r3, #0
 80295a2:	9205      	str	r2, [sp, #20]
 80295a4:	9307      	str	r3, [sp, #28]
 80295a6:	da04      	bge.n	80295b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x4fa>
 80295a8:	1e53      	subs	r3, r2, #1
 80295aa:	9305      	str	r3, [sp, #20]
 80295ac:	9b07      	ldr	r3, [sp, #28]
 80295ae:	445b      	add	r3, fp
 80295b0:	9307      	str	r3, [sp, #28]
 80295b2:	9b08      	ldr	r3, [sp, #32]
 80295b4:	eba3 030b 	sub.w	r3, r3, fp
 80295b8:	9308      	str	r3, [sp, #32]
 80295ba:	e9dd c301 	ldrd	ip, r3, [sp, #4]
 80295be:	f1c3 0320 	rsb	r3, r3, #32
 80295c2:	930a      	str	r3, [sp, #40]	; 0x28
 80295c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80295c6:	9b02      	ldr	r3, [sp, #8]
 80295c8:	1a9b      	subs	r3, r3, r2
 80295ca:	9309      	str	r3, [sp, #36]	; 0x24
 80295cc:	f04f 0a00 	mov.w	sl, #0
 80295d0:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80295d4:	189b      	adds	r3, r3, r2
 80295d6:	9308      	str	r3, [sp, #32]
 80295d8:	bf5d      	ittte	pl
 80295da:	eba3 030b 	subpl.w	r3, r3, fp
 80295de:	9308      	strpl	r3, [sp, #32]
 80295e0:	9b05      	ldrpl	r3, [sp, #20]
 80295e2:	9b05      	ldrmi	r3, [sp, #20]
 80295e4:	9902      	ldr	r1, [sp, #8]
 80295e6:	f9b4 6016 	ldrsh.w	r6, [r4, #22]
 80295ea:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 80295ee:	bf58      	it	pl
 80295f0:	3301      	addpl	r3, #1
 80295f2:	9300      	str	r3, [sp, #0]
 80295f4:	e9dd 2300 	ldrd	r2, r3, [sp]
 80295f8:	4413      	add	r3, r2
 80295fa:	9301      	str	r3, [sp, #4]
 80295fc:	115b      	asrs	r3, r3, #5
 80295fe:	9306      	str	r3, [sp, #24]
 8029600:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8029602:	428b      	cmp	r3, r1
 8029604:	eb08 4806 	add.w	r8, r8, r6, lsl #16
 8029608:	f040 8186 	bne.w	8029918 <_ZN8touchgfx7Outline10renderLineEiiii+0x860>
 802960c:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8029610:	fa0f f389 	sxth.w	r3, r9
 8029614:	eb02 4103 	add.w	r1, r2, r3, lsl #16
 8029618:	4541      	cmp	r1, r8
 802961a:	d017      	beq.n	802964c <_ZN8touchgfx7Outline10renderLineEiiii+0x594>
 802961c:	8b60      	ldrh	r0, [r4, #26]
 802961e:	8b21      	ldrh	r1, [r4, #24]
 8029620:	4301      	orrs	r1, r0
 8029622:	d00d      	beq.n	8029640 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 8029624:	2e00      	cmp	r6, #0
 8029626:	db0b      	blt.n	8029640 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 8029628:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802962a:	42b1      	cmp	r1, r6
 802962c:	dd08      	ble.n	8029640 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 802962e:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029632:	4288      	cmp	r0, r1
 8029634:	f0c0 8163 	bcc.w	80298fe <_ZN8touchgfx7Outline10renderLineEiiii+0x846>
 8029638:	f04f 0101 	mov.w	r1, #1
 802963c:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8029640:	82a2      	strh	r2, [r4, #20]
 8029642:	82e3      	strh	r3, [r4, #22]
 8029644:	f8a4 a018 	strh.w	sl, [r4, #24]
 8029648:	f8a4 a01a 	strh.w	sl, [r4, #26]
 802964c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802964e:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
 8029652:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 8029656:	4499      	add	r9, r3
 8029658:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802965c:	fa0f f589 	sxth.w	r5, r9
 8029660:	eb01 4102 	add.w	r1, r1, r2, lsl #16
 8029664:	eb03 4005 	add.w	r0, r3, r5, lsl #16
 8029668:	4281      	cmp	r1, r0
 802966a:	f43f add8 	beq.w	802921e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 802966e:	8b60      	ldrh	r0, [r4, #26]
 8029670:	8b21      	ldrh	r1, [r4, #24]
 8029672:	4301      	orrs	r1, r0
 8029674:	d00d      	beq.n	8029692 <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 8029676:	2a00      	cmp	r2, #0
 8029678:	db0b      	blt.n	8029692 <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 802967a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802967c:	428a      	cmp	r2, r1
 802967e:	da08      	bge.n	8029692 <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 8029680:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 8029684:	4291      	cmp	r1, r2
 8029686:	f0c0 8230 	bcc.w	8029aea <_ZN8touchgfx7Outline10renderLineEiiii+0xa32>
 802968a:	f04f 0201 	mov.w	r2, #1
 802968e:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8029692:	82a3      	strh	r3, [r4, #20]
 8029694:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8029696:	82e5      	strh	r5, [r4, #22]
 8029698:	454b      	cmp	r3, r9
 802969a:	f8a4 a018 	strh.w	sl, [r4, #24]
 802969e:	f8a4 a01a 	strh.w	sl, [r4, #26]
 80296a2:	f8dd c004 	ldr.w	ip, [sp, #4]
 80296a6:	d193      	bne.n	80295d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x518>
 80296a8:	9b02      	ldr	r3, [sp, #8]
 80296aa:	f1c3 0e20 	rsb	lr, r3, #32
 80296ae:	9b04      	ldr	r3, [sp, #16]
 80296b0:	ea4f 1b63 	mov.w	fp, r3, asr #5
 80296b4:	9b03      	ldr	r3, [sp, #12]
 80296b6:	459e      	cmp	lr, r3
 80296b8:	f040 8231 	bne.w	8029b1e <_ZN8touchgfx7Outline10renderLineEiiii+0xa66>
 80296bc:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 80296c0:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 80296c4:	fa0f f58b 	sxth.w	r5, fp
 80296c8:	fa0f f289 	sxth.w	r2, r9
 80296cc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80296d0:	eb05 4002 	add.w	r0, r5, r2, lsl #16
 80296d4:	4281      	cmp	r1, r0
 80296d6:	f43f ae22 	beq.w	802931e <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 80296da:	8b60      	ldrh	r0, [r4, #26]
 80296dc:	8b21      	ldrh	r1, [r4, #24]
 80296de:	4301      	orrs	r1, r0
 80296e0:	d00c      	beq.n	80296fc <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 80296e2:	2b00      	cmp	r3, #0
 80296e4:	db0a      	blt.n	80296fc <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 80296e6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80296e8:	428b      	cmp	r3, r1
 80296ea:	da07      	bge.n	80296fc <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 80296ec:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 80296f0:	4299      	cmp	r1, r3
 80296f2:	f0c0 8207 	bcc.w	8029b04 <_ZN8touchgfx7Outline10renderLineEiiii+0xa4c>
 80296f6:	2301      	movs	r3, #1
 80296f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80296fc:	82a5      	strh	r5, [r4, #20]
 80296fe:	e535      	b.n	802916c <_ZN8touchgfx7Outline10renderLineEiiii+0xb4>
 8029700:	f04f 32ff 	mov.w	r2, #4294967295
 8029704:	920b      	str	r2, [sp, #44]	; 0x2c
 8029706:	fb0a f306 	mul.w	r3, sl, r6
 802970a:	f1cb 0b00 	rsb	fp, fp, #0
 802970e:	2200      	movs	r2, #0
 8029710:	e6d9      	b.n	80294c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40e>
 8029712:	f104 0514 	add.w	r5, r4, #20
 8029716:	cd03      	ldmia	r5!, {r0, r1}
 8029718:	6926      	ldr	r6, [r4, #16]
 802971a:	6030      	str	r0, [r6, #0]
 802971c:	6071      	str	r1, [r6, #4]
 802971e:	6921      	ldr	r1, [r4, #16]
 8029720:	3108      	adds	r1, #8
 8029722:	6121      	str	r1, [r4, #16]
 8029724:	68a1      	ldr	r1, [r4, #8]
 8029726:	3101      	adds	r1, #1
 8029728:	60a1      	str	r1, [r4, #8]
 802972a:	e702      	b.n	8029532 <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 802972c:	9b01      	ldr	r3, [sp, #4]
 802972e:	8b20      	ldrh	r0, [r4, #24]
 8029730:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 8029734:	f003 031f 	and.w	r3, r3, #31
 8029738:	930d      	str	r3, [sp, #52]	; 0x34
 802973a:	9b02      	ldr	r3, [sp, #8]
 802973c:	1b9a      	subs	r2, r3, r6
 802973e:	9b05      	ldr	r3, [sp, #20]
 8029740:	42ab      	cmp	r3, r5
 8029742:	f001 011f 	and.w	r1, r1, #31
 8029746:	d107      	bne.n	8029758 <_ZN8touchgfx7Outline10renderLineEiiii+0x6a0>
 8029748:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802974a:	4419      	add	r1, r3
 802974c:	4410      	add	r0, r2
 802974e:	fb02 9201 	mla	r2, r2, r1, r9
 8029752:	8320      	strh	r0, [r4, #24]
 8029754:	8362      	strh	r2, [r4, #26]
 8029756:	e6f1      	b.n	802953c <_ZN8touchgfx7Outline10renderLineEiiii+0x484>
 8029758:	f1bc 0f00 	cmp.w	ip, #0
 802975c:	f2c0 8099 	blt.w	8029892 <_ZN8touchgfx7Outline10renderLineEiiii+0x7da>
 8029760:	f1c1 0320 	rsb	r3, r1, #32
 8029764:	435a      	muls	r2, r3
 8029766:	2301      	movs	r3, #1
 8029768:	9309      	str	r3, [sp, #36]	; 0x24
 802976a:	2320      	movs	r3, #32
 802976c:	9307      	str	r3, [sp, #28]
 802976e:	fb92 fefc 	sdiv	lr, r2, ip
 8029772:	9b07      	ldr	r3, [sp, #28]
 8029774:	fb0c 221e 	mls	r2, ip, lr, r2
 8029778:	2a00      	cmp	r2, #0
 802977a:	bfb8      	it	lt
 802977c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8029780:	4419      	add	r1, r3
 8029782:	fb0e 9101 	mla	r1, lr, r1, r9
 8029786:	b20b      	sxth	r3, r1
 8029788:	9909      	ldr	r1, [sp, #36]	; 0x24
 802978a:	8363      	strh	r3, [r4, #26]
 802978c:	440d      	add	r5, r1
 802978e:	f9bd 1000 	ldrsh.w	r1, [sp]
 8029792:	9106      	str	r1, [sp, #24]
 8029794:	fa0f f985 	sxth.w	r9, r5
 8029798:	ea4f 4101 	mov.w	r1, r1, lsl #16
 802979c:	4470      	add	r0, lr
 802979e:	910a      	str	r1, [sp, #40]	; 0x28
 80297a0:	4449      	add	r1, r9
 80297a2:	bfb8      	it	lt
 80297a4:	4462      	addlt	r2, ip
 80297a6:	b200      	sxth	r0, r0
 80297a8:	42b9      	cmp	r1, r7
 80297aa:	8320      	strh	r0, [r4, #24]
 80297ac:	f43f ad37 	beq.w	802921e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80297b0:	4303      	orrs	r3, r0
 80297b2:	d00c      	beq.n	80297ce <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 80297b4:	f1b8 0f00 	cmp.w	r8, #0
 80297b8:	db09      	blt.n	80297ce <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 80297ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80297bc:	4543      	cmp	r3, r8
 80297be:	dd06      	ble.n	80297ce <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 80297c0:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 80297c4:	4299      	cmp	r1, r3
 80297c6:	d36c      	bcc.n	80298a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ea>
 80297c8:	2301      	movs	r3, #1
 80297ca:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80297ce:	9b06      	ldr	r3, [sp, #24]
 80297d0:	82e3      	strh	r3, [r4, #22]
 80297d2:	2300      	movs	r3, #0
 80297d4:	8323      	strh	r3, [r4, #24]
 80297d6:	8363      	strh	r3, [r4, #26]
 80297d8:	9b05      	ldr	r3, [sp, #20]
 80297da:	f8a4 9014 	strh.w	r9, [r4, #20]
 80297de:	42ab      	cmp	r3, r5
 80297e0:	4476      	add	r6, lr
 80297e2:	d04c      	beq.n	802987e <_ZN8touchgfx7Outline10renderLineEiiii+0x7c6>
 80297e4:	9b02      	ldr	r3, [sp, #8]
 80297e6:	1b9b      	subs	r3, r3, r6
 80297e8:	4473      	add	r3, lr
 80297ea:	015b      	lsls	r3, r3, #5
 80297ec:	fb93 f8fc 	sdiv	r8, r3, ip
 80297f0:	fb0c 3318 	mls	r3, ip, r8, r3
 80297f4:	2b00      	cmp	r3, #0
 80297f6:	bfb8      	it	lt
 80297f8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80297fc:	f108 0101 	add.w	r1, r8, #1
 8029800:	bfb8      	it	lt
 8029802:	4463      	addlt	r3, ip
 8029804:	eba2 020c 	sub.w	r2, r2, ip
 8029808:	910f      	str	r1, [sp, #60]	; 0x3c
 802980a:	18d2      	adds	r2, r2, r3
 802980c:	bf58      	it	pl
 802980e:	980f      	ldrpl	r0, [sp, #60]	; 0x3c
 8029810:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8029812:	bf48      	it	mi
 8029814:	4640      	movmi	r0, r8
 8029816:	fa0f fe80 	sxth.w	lr, r0
 802981a:	ea4f 1140 	mov.w	r1, r0, lsl #5
 802981e:	4406      	add	r6, r0
 8029820:	9809      	ldr	r0, [sp, #36]	; 0x24
 8029822:	f8a4 e018 	strh.w	lr, [r4, #24]
 8029826:	4405      	add	r5, r0
 8029828:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 802982c:	fa0f f985 	sxth.w	r9, r5
 8029830:	4438      	add	r0, r7
 8029832:	444f      	add	r7, r9
 8029834:	bf58      	it	pl
 8029836:	eba2 020c 	subpl.w	r2, r2, ip
 802983a:	b209      	sxth	r1, r1
 802983c:	42b8      	cmp	r0, r7
 802983e:	8361      	strh	r1, [r4, #26]
 8029840:	f43f aced 	beq.w	802921e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8029844:	ea5e 0101 	orrs.w	r1, lr, r1
 8029848:	d00e      	beq.n	8029868 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 802984a:	9906      	ldr	r1, [sp, #24]
 802984c:	2900      	cmp	r1, #0
 802984e:	db0b      	blt.n	8029868 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 8029850:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029852:	9806      	ldr	r0, [sp, #24]
 8029854:	4288      	cmp	r0, r1
 8029856:	da07      	bge.n	8029868 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 8029858:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802985c:	4288      	cmp	r0, r1
 802985e:	d330      	bcc.n	80298c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x80a>
 8029860:	f04f 0101 	mov.w	r1, #1
 8029864:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8029868:	9906      	ldr	r1, [sp, #24]
 802986a:	82e1      	strh	r1, [r4, #22]
 802986c:	f04f 0100 	mov.w	r1, #0
 8029870:	8321      	strh	r1, [r4, #24]
 8029872:	8361      	strh	r1, [r4, #26]
 8029874:	9905      	ldr	r1, [sp, #20]
 8029876:	f8a4 9014 	strh.w	r9, [r4, #20]
 802987a:	42a9      	cmp	r1, r5
 802987c:	d1c5      	bne.n	802980a <_ZN8touchgfx7Outline10renderLineEiiii+0x752>
 802987e:	9b02      	ldr	r3, [sp, #8]
 8029880:	990d      	ldr	r1, [sp, #52]	; 0x34
 8029882:	1b9e      	subs	r6, r3, r6
 8029884:	9b07      	ldr	r3, [sp, #28]
 8029886:	8326      	strh	r6, [r4, #24]
 8029888:	3120      	adds	r1, #32
 802988a:	1ac9      	subs	r1, r1, r3
 802988c:	434e      	muls	r6, r1
 802988e:	8366      	strh	r6, [r4, #26]
 8029890:	e654      	b.n	802953c <_ZN8touchgfx7Outline10renderLineEiiii+0x484>
 8029892:	f04f 33ff 	mov.w	r3, #4294967295
 8029896:	9309      	str	r3, [sp, #36]	; 0x24
 8029898:	434a      	muls	r2, r1
 802989a:	f1cc 0c00 	rsb	ip, ip, #0
 802989e:	2300      	movs	r3, #0
 80298a0:	e764      	b.n	802976c <_ZN8touchgfx7Outline10renderLineEiiii+0x6b4>
 80298a2:	f104 0314 	add.w	r3, r4, #20
 80298a6:	cb03      	ldmia	r3!, {r0, r1}
 80298a8:	f8d4 8010 	ldr.w	r8, [r4, #16]
 80298ac:	f8c8 0000 	str.w	r0, [r8]
 80298b0:	f8c8 1004 	str.w	r1, [r8, #4]
 80298b4:	6923      	ldr	r3, [r4, #16]
 80298b6:	3308      	adds	r3, #8
 80298b8:	6123      	str	r3, [r4, #16]
 80298ba:	68a3      	ldr	r3, [r4, #8]
 80298bc:	3301      	adds	r3, #1
 80298be:	60a3      	str	r3, [r4, #8]
 80298c0:	e785      	b.n	80297ce <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 80298c2:	6921      	ldr	r1, [r4, #16]
 80298c4:	910e      	str	r1, [sp, #56]	; 0x38
 80298c6:	f104 0e14 	add.w	lr, r4, #20
 80298ca:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 80298ce:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80298d0:	6038      	str	r0, [r7, #0]
 80298d2:	6079      	str	r1, [r7, #4]
 80298d4:	6921      	ldr	r1, [r4, #16]
 80298d6:	3108      	adds	r1, #8
 80298d8:	6121      	str	r1, [r4, #16]
 80298da:	68a1      	ldr	r1, [r4, #8]
 80298dc:	3101      	adds	r1, #1
 80298de:	4638      	mov	r0, r7
 80298e0:	60a1      	str	r1, [r4, #8]
 80298e2:	e7c1      	b.n	8029868 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 80298e4:	f104 0214 	add.w	r2, r4, #20
 80298e8:	ca03      	ldmia	r2!, {r0, r1}
 80298ea:	6926      	ldr	r6, [r4, #16]
 80298ec:	6030      	str	r0, [r6, #0]
 80298ee:	6071      	str	r1, [r6, #4]
 80298f0:	6922      	ldr	r2, [r4, #16]
 80298f2:	3208      	adds	r2, #8
 80298f4:	6122      	str	r2, [r4, #16]
 80298f6:	68a2      	ldr	r2, [r4, #8]
 80298f8:	3201      	adds	r2, #1
 80298fa:	60a2      	str	r2, [r4, #8]
 80298fc:	e641      	b.n	8029582 <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 80298fe:	f104 0514 	add.w	r5, r4, #20
 8029902:	cd03      	ldmia	r5!, {r0, r1}
 8029904:	6926      	ldr	r6, [r4, #16]
 8029906:	6030      	str	r0, [r6, #0]
 8029908:	6071      	str	r1, [r6, #4]
 802990a:	6921      	ldr	r1, [r4, #16]
 802990c:	3108      	adds	r1, #8
 802990e:	6121      	str	r1, [r4, #16]
 8029910:	68a1      	ldr	r1, [r4, #8]
 8029912:	3101      	adds	r1, #1
 8029914:	60a1      	str	r1, [r4, #8]
 8029916:	e693      	b.n	8029640 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 8029918:	9b01      	ldr	r3, [sp, #4]
 802991a:	8b20      	ldrh	r0, [r4, #24]
 802991c:	f8b4 e01a 	ldrh.w	lr, [r4, #26]
 8029920:	f003 031f 	and.w	r3, r3, #31
 8029924:	9310      	str	r3, [sp, #64]	; 0x40
 8029926:	9b06      	ldr	r3, [sp, #24]
 8029928:	ea4f 176c 	mov.w	r7, ip, asr #5
 802992c:	429f      	cmp	r7, r3
 802992e:	f00c 0c1f 	and.w	ip, ip, #31
 8029932:	d10a      	bne.n	802994a <_ZN8touchgfx7Outline10renderLineEiiii+0x892>
 8029934:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029936:	4418      	add	r0, r3
 8029938:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802993a:	8320      	strh	r0, [r4, #24]
 802993c:	449c      	add	ip, r3
 802993e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029940:	fb03 ee0c 	mla	lr, r3, ip, lr
 8029944:	f8a4 e01a 	strh.w	lr, [r4, #26]
 8029948:	e680      	b.n	802964c <_ZN8touchgfx7Outline10renderLineEiiii+0x594>
 802994a:	9b00      	ldr	r3, [sp, #0]
 802994c:	2b00      	cmp	r3, #0
 802994e:	f2c0 80a2 	blt.w	8029a96 <_ZN8touchgfx7Outline10renderLineEiiii+0x9de>
 8029952:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029954:	f1cc 0320 	rsb	r3, ip, #32
 8029958:	434b      	muls	r3, r1
 802995a:	2101      	movs	r1, #1
 802995c:	910e      	str	r1, [sp, #56]	; 0x38
 802995e:	2120      	movs	r1, #32
 8029960:	9a00      	ldr	r2, [sp, #0]
 8029962:	910d      	str	r1, [sp, #52]	; 0x34
 8029964:	fb93 f5f2 	sdiv	r5, r3, r2
 8029968:	990d      	ldr	r1, [sp, #52]	; 0x34
 802996a:	fb02 3315 	mls	r3, r2, r5, r3
 802996e:	2b00      	cmp	r3, #0
 8029970:	bfbc      	itt	lt
 8029972:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8029976:	189b      	addlt	r3, r3, r2
 8029978:	448c      	add	ip, r1
 802997a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802997c:	fb05 ec0c 	mla	ip, r5, ip, lr
 8029980:	fa0f f18c 	sxth.w	r1, ip
 8029984:	4417      	add	r7, r2
 8029986:	fa0f fc89 	sxth.w	ip, r9
 802998a:	ea4f 420c 	mov.w	r2, ip, lsl #16
 802998e:	fa0f fe87 	sxth.w	lr, r7
 8029992:	4428      	add	r0, r5
 8029994:	920f      	str	r2, [sp, #60]	; 0x3c
 8029996:	4472      	add	r2, lr
 8029998:	b200      	sxth	r0, r0
 802999a:	4542      	cmp	r2, r8
 802999c:	8320      	strh	r0, [r4, #24]
 802999e:	8361      	strh	r1, [r4, #26]
 80299a0:	f43f ac3d 	beq.w	802921e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80299a4:	ea50 0201 	orrs.w	r2, r0, r1
 80299a8:	d00c      	beq.n	80299c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 80299aa:	2e00      	cmp	r6, #0
 80299ac:	db0a      	blt.n	80299c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 80299ae:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80299b0:	42b1      	cmp	r1, r6
 80299b2:	dd07      	ble.n	80299c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 80299b4:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80299b8:	4288      	cmp	r0, r1
 80299ba:	d377      	bcc.n	8029aac <_ZN8touchgfx7Outline10renderLineEiiii+0x9f4>
 80299bc:	f04f 0201 	mov.w	r2, #1
 80299c0:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 80299c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80299c6:	f8a4 e014 	strh.w	lr, [r4, #20]
 80299ca:	1956      	adds	r6, r2, r5
 80299cc:	9a06      	ldr	r2, [sp, #24]
 80299ce:	f8a4 c016 	strh.w	ip, [r4, #22]
 80299d2:	42ba      	cmp	r2, r7
 80299d4:	f8a4 a018 	strh.w	sl, [r4, #24]
 80299d8:	f8a4 a01a 	strh.w	sl, [r4, #26]
 80299dc:	d04e      	beq.n	8029a7c <_ZN8touchgfx7Outline10renderLineEiiii+0x9c4>
 80299de:	9a02      	ldr	r2, [sp, #8]
 80299e0:	1b91      	subs	r1, r2, r6
 80299e2:	440d      	add	r5, r1
 80299e4:	9a00      	ldr	r2, [sp, #0]
 80299e6:	016d      	lsls	r5, r5, #5
 80299e8:	fb95 fef2 	sdiv	lr, r5, r2
 80299ec:	fb02 551e 	mls	r5, r2, lr, r5
 80299f0:	2d00      	cmp	r5, #0
 80299f2:	bfb8      	it	lt
 80299f4:	18ad      	addlt	r5, r5, r2
 80299f6:	9a00      	ldr	r2, [sp, #0]
 80299f8:	bfb8      	it	lt
 80299fa:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 80299fe:	1a9b      	subs	r3, r3, r2
 8029a00:	f10e 0201 	add.w	r2, lr, #1
 8029a04:	9213      	str	r2, [sp, #76]	; 0x4c
 8029a06:	195b      	adds	r3, r3, r5
 8029a08:	bf5e      	ittt	pl
 8029a0a:	9a00      	ldrpl	r2, [sp, #0]
 8029a0c:	9813      	ldrpl	r0, [sp, #76]	; 0x4c
 8029a0e:	1a9b      	subpl	r3, r3, r2
 8029a10:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029a12:	4417      	add	r7, r2
 8029a14:	bf48      	it	mi
 8029a16:	4670      	movmi	r0, lr
 8029a18:	b23a      	sxth	r2, r7
 8029a1a:	fa0f f880 	sxth.w	r8, r0
 8029a1e:	0141      	lsls	r1, r0, #5
 8029a20:	9211      	str	r2, [sp, #68]	; 0x44
 8029a22:	4406      	add	r6, r0
 8029a24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029a26:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 8029a2a:	f8a4 8018 	strh.w	r8, [r4, #24]
 8029a2e:	1882      	adds	r2, r0, r2
 8029a30:	9212      	str	r2, [sp, #72]	; 0x48
 8029a32:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8029a34:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029a36:	4402      	add	r2, r0
 8029a38:	9812      	ldr	r0, [sp, #72]	; 0x48
 8029a3a:	b209      	sxth	r1, r1
 8029a3c:	4290      	cmp	r0, r2
 8029a3e:	8361      	strh	r1, [r4, #26]
 8029a40:	f43f abed 	beq.w	802921e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8029a44:	ea58 0201 	orrs.w	r2, r8, r1
 8029a48:	d00d      	beq.n	8029a66 <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8029a4a:	f1bc 0f00 	cmp.w	ip, #0
 8029a4e:	db0a      	blt.n	8029a66 <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8029a50:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029a52:	458c      	cmp	ip, r1
 8029a54:	da07      	bge.n	8029a66 <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8029a56:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029a5a:	4288      	cmp	r0, r1
 8029a5c:	d336      	bcc.n	8029acc <_ZN8touchgfx7Outline10renderLineEiiii+0xa14>
 8029a5e:	f04f 0201 	mov.w	r2, #1
 8029a62:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8029a66:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029a68:	82a2      	strh	r2, [r4, #20]
 8029a6a:	9a06      	ldr	r2, [sp, #24]
 8029a6c:	f8a4 c016 	strh.w	ip, [r4, #22]
 8029a70:	42ba      	cmp	r2, r7
 8029a72:	f8a4 a018 	strh.w	sl, [r4, #24]
 8029a76:	f8a4 a01a 	strh.w	sl, [r4, #26]
 8029a7a:	d1c4      	bne.n	8029a06 <_ZN8touchgfx7Outline10renderLineEiiii+0x94e>
 8029a7c:	9b02      	ldr	r3, [sp, #8]
 8029a7e:	1b9e      	subs	r6, r3, r6
 8029a80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8029a82:	8326      	strh	r6, [r4, #24]
 8029a84:	f103 0c20 	add.w	ip, r3, #32
 8029a88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8029a8a:	ebac 0c03 	sub.w	ip, ip, r3
 8029a8e:	fb06 f60c 	mul.w	r6, r6, ip
 8029a92:	8366      	strh	r6, [r4, #26]
 8029a94:	e5da      	b.n	802964c <_ZN8touchgfx7Outline10renderLineEiiii+0x594>
 8029a96:	9a00      	ldr	r2, [sp, #0]
 8029a98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029a9a:	f04f 31ff 	mov.w	r1, #4294967295
 8029a9e:	4252      	negs	r2, r2
 8029aa0:	910e      	str	r1, [sp, #56]	; 0x38
 8029aa2:	fb03 f30c 	mul.w	r3, r3, ip
 8029aa6:	9200      	str	r2, [sp, #0]
 8029aa8:	2100      	movs	r1, #0
 8029aaa:	e759      	b.n	8029960 <_ZN8touchgfx7Outline10renderLineEiiii+0x8a8>
 8029aac:	f104 0614 	add.w	r6, r4, #20
 8029ab0:	ce03      	ldmia	r6!, {r0, r1}
 8029ab2:	f8d4 8010 	ldr.w	r8, [r4, #16]
 8029ab6:	f8c8 0000 	str.w	r0, [r8]
 8029aba:	f8c8 1004 	str.w	r1, [r8, #4]
 8029abe:	6921      	ldr	r1, [r4, #16]
 8029ac0:	3108      	adds	r1, #8
 8029ac2:	6121      	str	r1, [r4, #16]
 8029ac4:	68a1      	ldr	r1, [r4, #8]
 8029ac6:	3101      	adds	r1, #1
 8029ac8:	60a1      	str	r1, [r4, #8]
 8029aca:	e77b      	b.n	80299c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 8029acc:	f104 0814 	add.w	r8, r4, #20
 8029ad0:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 8029ad4:	6922      	ldr	r2, [r4, #16]
 8029ad6:	9212      	str	r2, [sp, #72]	; 0x48
 8029ad8:	6010      	str	r0, [r2, #0]
 8029ada:	6051      	str	r1, [r2, #4]
 8029adc:	6921      	ldr	r1, [r4, #16]
 8029ade:	3108      	adds	r1, #8
 8029ae0:	6121      	str	r1, [r4, #16]
 8029ae2:	68a1      	ldr	r1, [r4, #8]
 8029ae4:	3101      	adds	r1, #1
 8029ae6:	60a1      	str	r1, [r4, #8]
 8029ae8:	e7bd      	b.n	8029a66 <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8029aea:	f104 0214 	add.w	r2, r4, #20
 8029aee:	ca03      	ldmia	r2!, {r0, r1}
 8029af0:	6926      	ldr	r6, [r4, #16]
 8029af2:	6030      	str	r0, [r6, #0]
 8029af4:	6071      	str	r1, [r6, #4]
 8029af6:	6922      	ldr	r2, [r4, #16]
 8029af8:	3208      	adds	r2, #8
 8029afa:	6122      	str	r2, [r4, #16]
 8029afc:	68a2      	ldr	r2, [r4, #8]
 8029afe:	3201      	adds	r2, #1
 8029b00:	60a2      	str	r2, [r4, #8]
 8029b02:	e5c6      	b.n	8029692 <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 8029b04:	f104 0314 	add.w	r3, r4, #20
 8029b08:	cb03      	ldmia	r3!, {r0, r1}
 8029b0a:	6926      	ldr	r6, [r4, #16]
 8029b0c:	6030      	str	r0, [r6, #0]
 8029b0e:	6071      	str	r1, [r6, #4]
 8029b10:	6923      	ldr	r3, [r4, #16]
 8029b12:	3308      	adds	r3, #8
 8029b14:	6123      	str	r3, [r4, #16]
 8029b16:	68a3      	ldr	r3, [r4, #8]
 8029b18:	3301      	adds	r3, #1
 8029b1a:	60a3      	str	r3, [r4, #8]
 8029b1c:	e5ee      	b.n	80296fc <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 8029b1e:	9b01      	ldr	r3, [sp, #4]
 8029b20:	8b20      	ldrh	r0, [r4, #24]
 8029b22:	8b66      	ldrh	r6, [r4, #26]
 8029b24:	ea4f 1c63 	mov.w	ip, r3, asr #5
 8029b28:	f003 021f 	and.w	r2, r3, #31
 8029b2c:	9b04      	ldr	r3, [sp, #16]
 8029b2e:	f003 031f 	and.w	r3, r3, #31
 8029b32:	9305      	str	r3, [sp, #20]
 8029b34:	9b03      	ldr	r3, [sp, #12]
 8029b36:	45dc      	cmp	ip, fp
 8029b38:	eba3 050e 	sub.w	r5, r3, lr
 8029b3c:	d108      	bne.n	8029b50 <_ZN8touchgfx7Outline10renderLineEiiii+0xa98>
 8029b3e:	9b05      	ldr	r3, [sp, #20]
 8029b40:	441a      	add	r2, r3
 8029b42:	4428      	add	r0, r5
 8029b44:	fb05 6502 	mla	r5, r5, r2, r6
 8029b48:	8320      	strh	r0, [r4, #24]
 8029b4a:	8365      	strh	r5, [r4, #26]
 8029b4c:	f7ff bbe7 	b.w	802931e <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 8029b50:	9b04      	ldr	r3, [sp, #16]
 8029b52:	9901      	ldr	r1, [sp, #4]
 8029b54:	1a5b      	subs	r3, r3, r1
 8029b56:	9300      	str	r3, [sp, #0]
 8029b58:	f100 809f 	bmi.w	8029c9a <_ZN8touchgfx7Outline10renderLineEiiii+0xbe2>
 8029b5c:	f1c2 0120 	rsb	r1, r2, #32
 8029b60:	434d      	muls	r5, r1
 8029b62:	2101      	movs	r1, #1
 8029b64:	9102      	str	r1, [sp, #8]
 8029b66:	2120      	movs	r1, #32
 8029b68:	9b00      	ldr	r3, [sp, #0]
 8029b6a:	9101      	str	r1, [sp, #4]
 8029b6c:	fb95 f7f3 	sdiv	r7, r5, r3
 8029b70:	9901      	ldr	r1, [sp, #4]
 8029b72:	fb03 5517 	mls	r5, r3, r7, r5
 8029b76:	2d00      	cmp	r5, #0
 8029b78:	bfb8      	it	lt
 8029b7a:	f107 37ff 	addlt.w	r7, r7, #4294967295
 8029b7e:	440a      	add	r2, r1
 8029b80:	fb07 6202 	mla	r2, r7, r2, r6
 8029b84:	b211      	sxth	r1, r2
 8029b86:	9a02      	ldr	r2, [sp, #8]
 8029b88:	f9b4 6016 	ldrsh.w	r6, [r4, #22]
 8029b8c:	8361      	strh	r1, [r4, #26]
 8029b8e:	4494      	add	ip, r2
 8029b90:	fa0f f289 	sxth.w	r2, r9
 8029b94:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 8029b98:	bfb8      	it	lt
 8029b9a:	18ed      	addlt	r5, r5, r3
 8029b9c:	fa0f f88c 	sxth.w	r8, ip
 8029ba0:	0413      	lsls	r3, r2, #16
 8029ba2:	4438      	add	r0, r7
 8029ba4:	eb09 4906 	add.w	r9, r9, r6, lsl #16
 8029ba8:	eb08 0a03 	add.w	sl, r8, r3
 8029bac:	b200      	sxth	r0, r0
 8029bae:	45d1      	cmp	r9, sl
 8029bb0:	8320      	strh	r0, [r4, #24]
 8029bb2:	9304      	str	r3, [sp, #16]
 8029bb4:	f43f ab33 	beq.w	802921e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8029bb8:	ea50 0301 	orrs.w	r3, r0, r1
 8029bbc:	d00b      	beq.n	8029bd6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8029bbe:	2e00      	cmp	r6, #0
 8029bc0:	db09      	blt.n	8029bd6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8029bc2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029bc4:	428e      	cmp	r6, r1
 8029bc6:	da06      	bge.n	8029bd6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8029bc8:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029bcc:	4288      	cmp	r0, r1
 8029bce:	d36d      	bcc.n	8029cac <_ZN8touchgfx7Outline10renderLineEiiii+0xbf4>
 8029bd0:	2101      	movs	r1, #1
 8029bd2:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8029bd6:	2100      	movs	r1, #0
 8029bd8:	45e3      	cmp	fp, ip
 8029bda:	f8a4 8014 	strh.w	r8, [r4, #20]
 8029bde:	82e2      	strh	r2, [r4, #22]
 8029be0:	8321      	strh	r1, [r4, #24]
 8029be2:	8361      	strh	r1, [r4, #26]
 8029be4:	44be      	add	lr, r7
 8029be6:	d049      	beq.n	8029c7c <_ZN8touchgfx7Outline10renderLineEiiii+0xbc4>
 8029be8:	9b03      	ldr	r3, [sp, #12]
 8029bea:	eba3 060e 	sub.w	r6, r3, lr
 8029bee:	443e      	add	r6, r7
 8029bf0:	9b00      	ldr	r3, [sp, #0]
 8029bf2:	0176      	lsls	r6, r6, #5
 8029bf4:	fb96 f7f3 	sdiv	r7, r6, r3
 8029bf8:	fb03 6617 	mls	r6, r3, r7, r6
 8029bfc:	428e      	cmp	r6, r1
 8029bfe:	bfb8      	it	lt
 8029c00:	18f6      	addlt	r6, r6, r3
 8029c02:	9b00      	ldr	r3, [sp, #0]
 8029c04:	bfb8      	it	lt
 8029c06:	f107 37ff 	addlt.w	r7, r7, #4294967295
 8029c0a:	1aed      	subs	r5, r5, r3
 8029c0c:	1c7b      	adds	r3, r7, #1
 8029c0e:	9307      	str	r3, [sp, #28]
 8029c10:	f04f 0900 	mov.w	r9, #0
 8029c14:	19ad      	adds	r5, r5, r6
 8029c16:	bf5e      	ittt	pl
 8029c18:	9b00      	ldrpl	r3, [sp, #0]
 8029c1a:	9807      	ldrpl	r0, [sp, #28]
 8029c1c:	1aed      	subpl	r5, r5, r3
 8029c1e:	9b02      	ldr	r3, [sp, #8]
 8029c20:	bf48      	it	mi
 8029c22:	4638      	movmi	r0, r7
 8029c24:	fa0f f880 	sxth.w	r8, r0
 8029c28:	0141      	lsls	r1, r0, #5
 8029c2a:	449c      	add	ip, r3
 8029c2c:	4486      	add	lr, r0
 8029c2e:	9b04      	ldr	r3, [sp, #16]
 8029c30:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 8029c34:	f8a4 8018 	strh.w	r8, [r4, #24]
 8029c38:	fa0f fa8c 	sxth.w	sl, ip
 8029c3c:	4418      	add	r0, r3
 8029c3e:	4453      	add	r3, sl
 8029c40:	b209      	sxth	r1, r1
 8029c42:	4298      	cmp	r0, r3
 8029c44:	8361      	strh	r1, [r4, #26]
 8029c46:	f43f aaea 	beq.w	802921e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8029c4a:	ea58 0301 	orrs.w	r3, r8, r1
 8029c4e:	d00c      	beq.n	8029c6a <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8029c50:	2a00      	cmp	r2, #0
 8029c52:	db0a      	blt.n	8029c6a <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8029c54:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029c56:	428a      	cmp	r2, r1
 8029c58:	da07      	bge.n	8029c6a <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8029c5a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029c5e:	4288      	cmp	r0, r1
 8029c60:	d334      	bcc.n	8029ccc <_ZN8touchgfx7Outline10renderLineEiiii+0xc14>
 8029c62:	f04f 0301 	mov.w	r3, #1
 8029c66:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8029c6a:	45e3      	cmp	fp, ip
 8029c6c:	f8a4 a014 	strh.w	sl, [r4, #20]
 8029c70:	82e2      	strh	r2, [r4, #22]
 8029c72:	f8a4 9018 	strh.w	r9, [r4, #24]
 8029c76:	f8a4 901a 	strh.w	r9, [r4, #26]
 8029c7a:	d1cb      	bne.n	8029c14 <_ZN8touchgfx7Outline10renderLineEiiii+0xb5c>
 8029c7c:	9b03      	ldr	r3, [sp, #12]
 8029c7e:	9e05      	ldr	r6, [sp, #20]
 8029c80:	eba3 0e0e 	sub.w	lr, r3, lr
 8029c84:	9b01      	ldr	r3, [sp, #4]
 8029c86:	f8a4 e018 	strh.w	lr, [r4, #24]
 8029c8a:	3620      	adds	r6, #32
 8029c8c:	1af6      	subs	r6, r6, r3
 8029c8e:	fb0e fe06 	mul.w	lr, lr, r6
 8029c92:	f8a4 e01a 	strh.w	lr, [r4, #26]
 8029c96:	f7ff bb42 	b.w	802931e <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 8029c9a:	9b00      	ldr	r3, [sp, #0]
 8029c9c:	f04f 31ff 	mov.w	r1, #4294967295
 8029ca0:	425b      	negs	r3, r3
 8029ca2:	9102      	str	r1, [sp, #8]
 8029ca4:	4355      	muls	r5, r2
 8029ca6:	9300      	str	r3, [sp, #0]
 8029ca8:	2100      	movs	r1, #0
 8029caa:	e75d      	b.n	8029b68 <_ZN8touchgfx7Outline10renderLineEiiii+0xab0>
 8029cac:	f104 0614 	add.w	r6, r4, #20
 8029cb0:	ce03      	ldmia	r6!, {r0, r1}
 8029cb2:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8029cb6:	f8c9 0000 	str.w	r0, [r9]
 8029cba:	f8c9 1004 	str.w	r1, [r9, #4]
 8029cbe:	6921      	ldr	r1, [r4, #16]
 8029cc0:	3108      	adds	r1, #8
 8029cc2:	6121      	str	r1, [r4, #16]
 8029cc4:	68a1      	ldr	r1, [r4, #8]
 8029cc6:	3101      	adds	r1, #1
 8029cc8:	60a1      	str	r1, [r4, #8]
 8029cca:	e784      	b.n	8029bd6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8029ccc:	f104 0814 	add.w	r8, r4, #20
 8029cd0:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 8029cd4:	6923      	ldr	r3, [r4, #16]
 8029cd6:	9306      	str	r3, [sp, #24]
 8029cd8:	6018      	str	r0, [r3, #0]
 8029cda:	6059      	str	r1, [r3, #4]
 8029cdc:	6921      	ldr	r1, [r4, #16]
 8029cde:	3108      	adds	r1, #8
 8029ce0:	6121      	str	r1, [r4, #16]
 8029ce2:	68a1      	ldr	r1, [r4, #8]
 8029ce4:	3101      	adds	r1, #1
 8029ce6:	60a1      	str	r1, [r4, #8]
 8029ce8:	e7bf      	b.n	8029c6a <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8029cea:	bf00      	nop

08029cec <_ZN8touchgfx7Outline6lineToEii>:
 8029cec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8029cee:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8029cf0:	079b      	lsls	r3, r3, #30
 8029cf2:	4604      	mov	r4, r0
 8029cf4:	460d      	mov	r5, r1
 8029cf6:	4616      	mov	r6, r2
 8029cf8:	d526      	bpl.n	8029d48 <_ZN8touchgfx7Outline6lineToEii+0x5c>
 8029cfa:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8029cfe:	ea85 0001 	eor.w	r0, r5, r1
 8029d02:	ea86 0302 	eor.w	r3, r6, r2
 8029d06:	4303      	orrs	r3, r0
 8029d08:	d01e      	beq.n	8029d48 <_ZN8touchgfx7Outline6lineToEii+0x5c>
 8029d0a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8029d0c:	9600      	str	r6, [sp, #0]
 8029d0e:	114b      	asrs	r3, r1, #5
 8029d10:	4283      	cmp	r3, r0
 8029d12:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8029d14:	bfb8      	it	lt
 8029d16:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 8029d18:	3301      	adds	r3, #1
 8029d1a:	4283      	cmp	r3, r0
 8029d1c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8029d1e:	bfc8      	it	gt
 8029d20:	6363      	strgt	r3, [r4, #52]	; 0x34
 8029d22:	116b      	asrs	r3, r5, #5
 8029d24:	4283      	cmp	r3, r0
 8029d26:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8029d28:	bfb8      	it	lt
 8029d2a:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 8029d2c:	3301      	adds	r3, #1
 8029d2e:	4283      	cmp	r3, r0
 8029d30:	bfc8      	it	gt
 8029d32:	6363      	strgt	r3, [r4, #52]	; 0x34
 8029d34:	4620      	mov	r0, r4
 8029d36:	462b      	mov	r3, r5
 8029d38:	f7ff f9be 	bl	80290b8 <_ZN8touchgfx7Outline10renderLineEiiii>
 8029d3c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8029d3e:	e9c4 5607 	strd	r5, r6, [r4, #28]
 8029d42:	f043 0301 	orr.w	r3, r3, #1
 8029d46:	63e3      	str	r3, [r4, #60]	; 0x3c
 8029d48:	b002      	add	sp, #8
 8029d4a:	bd70      	pop	{r4, r5, r6, pc}

08029d4c <_ZN8touchgfx7Outline6moveToEii>:
 8029d4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029d4e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8029d50:	4615      	mov	r5, r2
 8029d52:	079a      	lsls	r2, r3, #30
 8029d54:	4604      	mov	r4, r0
 8029d56:	460e      	mov	r6, r1
 8029d58:	d401      	bmi.n	8029d5e <_ZN8touchgfx7Outline6moveToEii+0x12>
 8029d5a:	f7ff f966 	bl	802902a <_ZN8touchgfx7Outline5resetEv>
 8029d5e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8029d60:	07db      	lsls	r3, r3, #31
 8029d62:	d504      	bpl.n	8029d6e <_ZN8touchgfx7Outline6moveToEii+0x22>
 8029d64:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	; 0x24
 8029d68:	4620      	mov	r0, r4
 8029d6a:	f7ff ffbf 	bl	8029cec <_ZN8touchgfx7Outline6lineToEii>
 8029d6e:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 8029d72:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 8029d76:	f346 1c4f 	sbfx	ip, r6, #5, #16
 8029d7a:	f345 174f 	sbfx	r7, r5, #5, #16
 8029d7e:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 8029d82:	eb0c 4107 	add.w	r1, ip, r7, lsl #16
 8029d86:	428a      	cmp	r2, r1
 8029d88:	d015      	beq.n	8029db6 <_ZN8touchgfx7Outline6moveToEii+0x6a>
 8029d8a:	8b61      	ldrh	r1, [r4, #26]
 8029d8c:	8b22      	ldrh	r2, [r4, #24]
 8029d8e:	430a      	orrs	r2, r1
 8029d90:	d00b      	beq.n	8029daa <_ZN8touchgfx7Outline6moveToEii+0x5e>
 8029d92:	2b00      	cmp	r3, #0
 8029d94:	db09      	blt.n	8029daa <_ZN8touchgfx7Outline6moveToEii+0x5e>
 8029d96:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8029d98:	4293      	cmp	r3, r2
 8029d9a:	da06      	bge.n	8029daa <_ZN8touchgfx7Outline6moveToEii+0x5e>
 8029d9c:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 8029da0:	429a      	cmp	r2, r3
 8029da2:	d30d      	bcc.n	8029dc0 <_ZN8touchgfx7Outline6moveToEii+0x74>
 8029da4:	2301      	movs	r3, #1
 8029da6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8029daa:	2300      	movs	r3, #0
 8029dac:	f8a4 c014 	strh.w	ip, [r4, #20]
 8029db0:	82e7      	strh	r7, [r4, #22]
 8029db2:	8323      	strh	r3, [r4, #24]
 8029db4:	8363      	strh	r3, [r4, #26]
 8029db6:	61e6      	str	r6, [r4, #28]
 8029db8:	e9c4 5608 	strd	r5, r6, [r4, #32]
 8029dbc:	62a5      	str	r5, [r4, #40]	; 0x28
 8029dbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8029dc0:	f104 0314 	add.w	r3, r4, #20
 8029dc4:	cb03      	ldmia	r3!, {r0, r1}
 8029dc6:	6922      	ldr	r2, [r4, #16]
 8029dc8:	6010      	str	r0, [r2, #0]
 8029dca:	6051      	str	r1, [r2, #4]
 8029dcc:	6923      	ldr	r3, [r4, #16]
 8029dce:	3308      	adds	r3, #8
 8029dd0:	6123      	str	r3, [r4, #16]
 8029dd2:	68a3      	ldr	r3, [r4, #8]
 8029dd4:	3301      	adds	r3, #1
 8029dd6:	60a3      	str	r3, [r4, #8]
 8029dd8:	e7e7      	b.n	8029daa <_ZN8touchgfx7Outline6moveToEii+0x5e>

08029dda <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8029dda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029dde:	b0d1      	sub	sp, #324	; 0x144
 8029de0:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8029de4:	466c      	mov	r4, sp
 8029de6:	1a0d      	subs	r5, r1, r0
 8029de8:	2d48      	cmp	r5, #72	; 0x48
 8029dea:	f100 0208 	add.w	r2, r0, #8
 8029dee:	f340 80bb 	ble.w	8029f68 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 8029df2:	112d      	asrs	r5, r5, #4
 8029df4:	eb00 03c5 	add.w	r3, r0, r5, lsl #3
 8029df8:	f9b0 8000 	ldrsh.w	r8, [r0]
 8029dfc:	681e      	ldr	r6, [r3, #0]
 8029dfe:	f9b0 e002 	ldrsh.w	lr, [r0, #2]
 8029e02:	6006      	str	r6, [r0, #0]
 8029e04:	685e      	ldr	r6, [r3, #4]
 8029e06:	f9b0 c004 	ldrsh.w	ip, [r0, #4]
 8029e0a:	f9b0 7006 	ldrsh.w	r7, [r0, #6]
 8029e0e:	6046      	str	r6, [r0, #4]
 8029e10:	f820 8035 	strh.w	r8, [r0, r5, lsl #3]
 8029e14:	f8a3 e002 	strh.w	lr, [r3, #2]
 8029e18:	f8a3 c004 	strh.w	ip, [r3, #4]
 8029e1c:	80df      	strh	r7, [r3, #6]
 8029e1e:	f931 cc06 	ldrsh.w	ip, [r1, #-6]
 8029e22:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 8029e26:	f9b0 600a 	ldrsh.w	r6, [r0, #10]
 8029e2a:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8029e2e:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 8029e32:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8029e36:	4565      	cmp	r5, ip
 8029e38:	f1a1 0308 	sub.w	r3, r1, #8
 8029e3c:	da0f      	bge.n	8029e5e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x84>
 8029e3e:	681d      	ldr	r5, [r3, #0]
 8029e40:	f9b0 e00c 	ldrsh.w	lr, [r0, #12]
 8029e44:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
 8029e48:	6015      	str	r5, [r2, #0]
 8029e4a:	685d      	ldr	r5, [r3, #4]
 8029e4c:	6055      	str	r5, [r2, #4]
 8029e4e:	f821 7c08 	strh.w	r7, [r1, #-8]
 8029e52:	f821 6c06 	strh.w	r6, [r1, #-6]
 8029e56:	f821 ec04 	strh.w	lr, [r1, #-4]
 8029e5a:	f821 cc02 	strh.w	ip, [r1, #-2]
 8029e5e:	f9b0 7000 	ldrsh.w	r7, [r0]
 8029e62:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8029e66:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8029e6a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8029e6e:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8029e72:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 8029e76:	45ac      	cmp	ip, r5
 8029e78:	da0d      	bge.n	8029e96 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xbc>
 8029e7a:	6815      	ldr	r5, [r2, #0]
 8029e7c:	6005      	str	r5, [r0, #0]
 8029e7e:	6855      	ldr	r5, [r2, #4]
 8029e80:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8029e84:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8029e88:	8107      	strh	r7, [r0, #8]
 8029e8a:	6045      	str	r5, [r0, #4]
 8029e8c:	8146      	strh	r6, [r0, #10]
 8029e8e:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8029e92:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8029e96:	f931 cc06 	ldrsh.w	ip, [r1, #-6]
 8029e9a:	f9b0 7000 	ldrsh.w	r7, [r0]
 8029e9e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8029ea2:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8029ea6:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 8029eaa:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8029eae:	4565      	cmp	r5, ip
 8029eb0:	da0f      	bge.n	8029ed2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 8029eb2:	681d      	ldr	r5, [r3, #0]
 8029eb4:	6005      	str	r5, [r0, #0]
 8029eb6:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8029eba:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8029ebe:	685d      	ldr	r5, [r3, #4]
 8029ec0:	6045      	str	r5, [r0, #4]
 8029ec2:	f821 7c08 	strh.w	r7, [r1, #-8]
 8029ec6:	f821 6c06 	strh.w	r6, [r1, #-6]
 8029eca:	f821 ec04 	strh.w	lr, [r1, #-4]
 8029ece:	f821 cc02 	strh.w	ip, [r1, #-2]
 8029ed2:	f9b2 9008 	ldrsh.w	r9, [r2, #8]
 8029ed6:	f9b2 800a 	ldrsh.w	r8, [r2, #10]
 8029eda:	f9b0 e000 	ldrsh.w	lr, [r0]
 8029ede:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8029ee2:	eb09 4608 	add.w	r6, r9, r8, lsl #16
 8029ee6:	eb0e 4a0c 	add.w	sl, lr, ip, lsl #16
 8029eea:	f102 0508 	add.w	r5, r2, #8
 8029eee:	4556      	cmp	r6, sl
 8029ef0:	462f      	mov	r7, r5
 8029ef2:	db18      	blt.n	8029f26 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x14c>
 8029ef4:	3b08      	subs	r3, #8
 8029ef6:	f9b3 b002 	ldrsh.w	fp, [r3, #2]
 8029efa:	f9b3 6000 	ldrsh.w	r6, [r3]
 8029efe:	eb06 460b 	add.w	r6, r6, fp, lsl #16
 8029f02:	45b2      	cmp	sl, r6
 8029f04:	dbf6      	blt.n	8029ef4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x11a>
 8029f06:	42ab      	cmp	r3, r5
 8029f08:	681e      	ldr	r6, [r3, #0]
 8029f0a:	d30e      	bcc.n	8029f2a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x150>
 8029f0c:	f9b2 700c 	ldrsh.w	r7, [r2, #12]
 8029f10:	f9b2 200e 	ldrsh.w	r2, [r2, #14]
 8029f14:	602e      	str	r6, [r5, #0]
 8029f16:	685e      	ldr	r6, [r3, #4]
 8029f18:	606e      	str	r6, [r5, #4]
 8029f1a:	f8a3 9000 	strh.w	r9, [r3]
 8029f1e:	f8a3 8002 	strh.w	r8, [r3, #2]
 8029f22:	809f      	strh	r7, [r3, #4]
 8029f24:	80da      	strh	r2, [r3, #6]
 8029f26:	462a      	mov	r2, r5
 8029f28:	e7d3      	b.n	8029ed2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 8029f2a:	6006      	str	r6, [r0, #0]
 8029f2c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8029f30:	685e      	ldr	r6, [r3, #4]
 8029f32:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8029f36:	6046      	str	r6, [r0, #4]
 8029f38:	80da      	strh	r2, [r3, #6]
 8029f3a:	1b4a      	subs	r2, r1, r5
 8029f3c:	1a1e      	subs	r6, r3, r0
 8029f3e:	10d2      	asrs	r2, r2, #3
 8029f40:	ebb2 0fe6 	cmp.w	r2, r6, asr #3
 8029f44:	bfb8      	it	lt
 8029f46:	e9c4 0300 	strdlt	r0, r3, [r4]
 8029f4a:	f8a3 e000 	strh.w	lr, [r3]
 8029f4e:	f8a3 c002 	strh.w	ip, [r3, #2]
 8029f52:	f8a3 8004 	strh.w	r8, [r3, #4]
 8029f56:	bfaa      	itet	ge
 8029f58:	4607      	movge	r7, r0
 8029f5a:	460b      	movlt	r3, r1
 8029f5c:	e9c4 5100 	strdge	r5, r1, [r4]
 8029f60:	4638      	mov	r0, r7
 8029f62:	3408      	adds	r4, #8
 8029f64:	4619      	mov	r1, r3
 8029f66:	e73e      	b.n	8029de6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 8029f68:	4291      	cmp	r1, r2
 8029f6a:	d926      	bls.n	8029fba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e0>
 8029f6c:	f1a2 0310 	sub.w	r3, r2, #16
 8029f70:	f9b3 c010 	ldrsh.w	ip, [r3, #16]
 8029f74:	f9b3 7012 	ldrsh.w	r7, [r3, #18]
 8029f78:	f9b3 e00a 	ldrsh.w	lr, [r3, #10]
 8029f7c:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 8029f80:	eb0c 4607 	add.w	r6, ip, r7, lsl #16
 8029f84:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 8029f88:	42ae      	cmp	r6, r5
 8029f8a:	da14      	bge.n	8029fb6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1dc>
 8029f8c:	461d      	mov	r5, r3
 8029f8e:	f9b3 8014 	ldrsh.w	r8, [r3, #20]
 8029f92:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8029f96:	611e      	str	r6, [r3, #16]
 8029f98:	686e      	ldr	r6, [r5, #4]
 8029f9a:	f9b3 e016 	ldrsh.w	lr, [r3, #22]
 8029f9e:	f8a3 c008 	strh.w	ip, [r3, #8]
 8029fa2:	42a8      	cmp	r0, r5
 8029fa4:	615e      	str	r6, [r3, #20]
 8029fa6:	815f      	strh	r7, [r3, #10]
 8029fa8:	f8a3 800c 	strh.w	r8, [r3, #12]
 8029fac:	f8a3 e00e 	strh.w	lr, [r3, #14]
 8029fb0:	f1a3 0308 	sub.w	r3, r3, #8
 8029fb4:	d1dc      	bne.n	8029f70 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x196>
 8029fb6:	3208      	adds	r2, #8
 8029fb8:	e7d6      	b.n	8029f68 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 8029fba:	466b      	mov	r3, sp
 8029fbc:	429c      	cmp	r4, r3
 8029fbe:	d903      	bls.n	8029fc8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1ee>
 8029fc0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8029fc4:	3c08      	subs	r4, #8
 8029fc6:	e70e      	b.n	8029de6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 8029fc8:	b051      	add	sp, #324	; 0x144
 8029fca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029fce <_ZN8touchgfx7Outline9sortCellsEv>:
 8029fce:	6881      	ldr	r1, [r0, #8]
 8029fd0:	b111      	cbz	r1, 8029fd8 <_ZN8touchgfx7Outline9sortCellsEv+0xa>
 8029fd2:	68c0      	ldr	r0, [r0, #12]
 8029fd4:	f7ff bf01 	b.w	8029dda <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8029fd8:	4770      	bx	lr

08029fda <_ZN8touchgfx7Outline8getCellsEv>:
 8029fda:	b510      	push	{r4, lr}
 8029fdc:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8029fde:	07da      	lsls	r2, r3, #31
 8029fe0:	4604      	mov	r4, r0
 8029fe2:	d507      	bpl.n	8029ff4 <_ZN8touchgfx7Outline8getCellsEv+0x1a>
 8029fe4:	e9d0 1209 	ldrd	r1, r2, [r0, #36]	; 0x24
 8029fe8:	f7ff fe80 	bl	8029cec <_ZN8touchgfx7Outline6lineToEii>
 8029fec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8029fee:	f023 0301 	bic.w	r3, r3, #1
 8029ff2:	63e3      	str	r3, [r4, #60]	; 0x3c
 8029ff4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8029ff6:	079b      	lsls	r3, r3, #30
 8029ff8:	d51a      	bpl.n	802a030 <_ZN8touchgfx7Outline8getCellsEv+0x56>
 8029ffa:	8b62      	ldrh	r2, [r4, #26]
 8029ffc:	8b23      	ldrh	r3, [r4, #24]
 8029ffe:	4313      	orrs	r3, r2
 802a000:	d00d      	beq.n	802a01e <_ZN8touchgfx7Outline8getCellsEv+0x44>
 802a002:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 802a006:	2b00      	cmp	r3, #0
 802a008:	db09      	blt.n	802a01e <_ZN8touchgfx7Outline8getCellsEv+0x44>
 802a00a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 802a00c:	4293      	cmp	r3, r2
 802a00e:	da06      	bge.n	802a01e <_ZN8touchgfx7Outline8getCellsEv+0x44>
 802a010:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 802a014:	429a      	cmp	r2, r3
 802a016:	d80d      	bhi.n	802a034 <_ZN8touchgfx7Outline8getCellsEv+0x5a>
 802a018:	2301      	movs	r3, #1
 802a01a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802a01e:	68a0      	ldr	r0, [r4, #8]
 802a020:	b138      	cbz	r0, 802a032 <_ZN8touchgfx7Outline8getCellsEv+0x58>
 802a022:	4620      	mov	r0, r4
 802a024:	f7ff ffd3 	bl	8029fce <_ZN8touchgfx7Outline9sortCellsEv>
 802a028:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802a02a:	f023 0302 	bic.w	r3, r3, #2
 802a02e:	63e3      	str	r3, [r4, #60]	; 0x3c
 802a030:	68e0      	ldr	r0, [r4, #12]
 802a032:	bd10      	pop	{r4, pc}
 802a034:	f104 0314 	add.w	r3, r4, #20
 802a038:	cb03      	ldmia	r3!, {r0, r1}
 802a03a:	6922      	ldr	r2, [r4, #16]
 802a03c:	6010      	str	r0, [r2, #0]
 802a03e:	6051      	str	r1, [r2, #4]
 802a040:	6923      	ldr	r3, [r4, #16]
 802a042:	3308      	adds	r3, #8
 802a044:	6123      	str	r3, [r4, #16]
 802a046:	68a3      	ldr	r3, [r4, #8]
 802a048:	3301      	adds	r3, #1
 802a04a:	60a3      	str	r3, [r4, #8]
 802a04c:	e7e7      	b.n	802a01e <_ZN8touchgfx7Outline8getCellsEv+0x44>

0802a04e <_ZN8touchgfx8ScanlineD1Ev>:
 802a04e:	4770      	bx	lr

0802a050 <_ZN8touchgfx8ScanlineD0Ev>:
 802a050:	b510      	push	{r4, lr}
 802a052:	2124      	movs	r1, #36	; 0x24
 802a054:	4604      	mov	r4, r0
 802a056:	f001 f868 	bl	802b12a <_ZdlPvj>
 802a05a:	4620      	mov	r0, r4
 802a05c:	bd10      	pop	{r4, pc}

0802a05e <_ZN8touchgfx8Scanline5resetEv>:
 802a05e:	b510      	push	{r4, lr}
 802a060:	4604      	mov	r4, r0
 802a062:	f7ed fcc3 	bl	80179ec <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>
 802a066:	61a0      	str	r0, [r4, #24]
 802a068:	f7ed fcc6 	bl	80179f8 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>
 802a06c:	61e0      	str	r0, [r4, #28]
 802a06e:	f7ed fcc9 	bl	8017a04 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>
 802a072:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802a076:	e9c4 3301 	strd	r3, r3, [r4, #4]
 802a07a:	69e3      	ldr	r3, [r4, #28]
 802a07c:	6123      	str	r3, [r4, #16]
 802a07e:	2300      	movs	r3, #0
 802a080:	6220      	str	r0, [r4, #32]
 802a082:	6160      	str	r0, [r4, #20]
 802a084:	60e3      	str	r3, [r4, #12]
 802a086:	bd10      	pop	{r4, pc}

0802a088 <_ZN8touchgfx8ScanlineC1Ev>:
 802a088:	b510      	push	{r4, lr}
 802a08a:	4b09      	ldr	r3, [pc, #36]	; (802a0b0 <_ZN8touchgfx8ScanlineC1Ev+0x28>)
 802a08c:	6003      	str	r3, [r0, #0]
 802a08e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802a092:	e9c0 3301 	strd	r3, r3, [r0, #4]
 802a096:	2300      	movs	r3, #0
 802a098:	4604      	mov	r4, r0
 802a09a:	e9c0 3303 	strd	r3, r3, [r0, #12]
 802a09e:	e9c0 3305 	strd	r3, r3, [r0, #20]
 802a0a2:	e9c0 3307 	strd	r3, r3, [r0, #28]
 802a0a6:	f7ff ffda 	bl	802a05e <_ZN8touchgfx8Scanline5resetEv>
 802a0aa:	4620      	mov	r0, r4
 802a0ac:	bd10      	pop	{r4, pc}
 802a0ae:	bf00      	nop
 802a0b0:	080365bc 	.word	0x080365bc

0802a0b4 <_ZN8touchgfx8Scanline7addSpanEiijj>:
 802a0b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a0b8:	1e0c      	subs	r4, r1, #0
 802a0ba:	4605      	mov	r5, r0
 802a0bc:	4617      	mov	r7, r2
 802a0be:	461e      	mov	r6, r3
 802a0c0:	da03      	bge.n	802a0ca <_ZN8touchgfx8Scanline7addSpanEiijj+0x16>
 802a0c2:	4426      	add	r6, r4
 802a0c4:	2e01      	cmp	r6, #1
 802a0c6:	d421      	bmi.n	802a10c <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 802a0c8:	2400      	movs	r4, #0
 802a0ca:	f7ed fc89 	bl	80179e0 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 802a0ce:	42a0      	cmp	r0, r4
 802a0d0:	dd1c      	ble.n	802a10c <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 802a0d2:	f7ed fc85 	bl	80179e0 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 802a0d6:	eb04 0806 	add.w	r8, r4, r6
 802a0da:	4580      	cmp	r8, r0
 802a0dc:	d902      	bls.n	802a0e4 <_ZN8touchgfx8Scanline7addSpanEiijj+0x30>
 802a0de:	f7ed fc7f 	bl	80179e0 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 802a0e2:	1b06      	subs	r6, r0, r4
 802a0e4:	69a8      	ldr	r0, [r5, #24]
 802a0e6:	f89d 1018 	ldrb.w	r1, [sp, #24]
 802a0ea:	4632      	mov	r2, r6
 802a0ec:	4420      	add	r0, r4
 802a0ee:	f7f0 fa69 	bl	801a5c4 <_ZN8touchgfx6memsetEPvhm>
 802a0f2:	686b      	ldr	r3, [r5, #4]
 802a0f4:	3301      	adds	r3, #1
 802a0f6:	42a3      	cmp	r3, r4
 802a0f8:	b2b2      	uxth	r2, r6
 802a0fa:	696b      	ldr	r3, [r5, #20]
 802a0fc:	d108      	bne.n	802a110 <_ZN8touchgfx8Scanline7addSpanEiijj+0x5c>
 802a0fe:	8819      	ldrh	r1, [r3, #0]
 802a100:	440a      	add	r2, r1
 802a102:	801a      	strh	r2, [r3, #0]
 802a104:	3c01      	subs	r4, #1
 802a106:	4434      	add	r4, r6
 802a108:	e9c5 4701 	strd	r4, r7, [r5, #4]
 802a10c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a110:	1c99      	adds	r1, r3, #2
 802a112:	6169      	str	r1, [r5, #20]
 802a114:	805a      	strh	r2, [r3, #2]
 802a116:	692b      	ldr	r3, [r5, #16]
 802a118:	1c9a      	adds	r2, r3, #2
 802a11a:	612a      	str	r2, [r5, #16]
 802a11c:	805c      	strh	r4, [r3, #2]
 802a11e:	68eb      	ldr	r3, [r5, #12]
 802a120:	3301      	adds	r3, #1
 802a122:	60eb      	str	r3, [r5, #12]
 802a124:	e7ee      	b.n	802a104 <_ZN8touchgfx8Scanline7addSpanEiijj+0x50>

0802a126 <_ZN8touchgfx15RenderingBufferD1Ev>:
 802a126:	4770      	bx	lr

0802a128 <_ZN8touchgfx15RenderingBufferD0Ev>:
 802a128:	b510      	push	{r4, lr}
 802a12a:	2118      	movs	r1, #24
 802a12c:	4604      	mov	r4, r0
 802a12e:	f000 fffc 	bl	802b12a <_ZdlPvj>
 802a132:	4620      	mov	r0, r4
 802a134:	bd10      	pop	{r4, pc}
	...

0802a138 <_ZN8touchgfx15RenderingBufferC1Ev>:
 802a138:	4a04      	ldr	r2, [pc, #16]	; (802a14c <_ZN8touchgfx15RenderingBufferC1Ev+0x14>)
 802a13a:	6002      	str	r2, [r0, #0]
 802a13c:	2200      	movs	r2, #0
 802a13e:	6042      	str	r2, [r0, #4]
 802a140:	7202      	strb	r2, [r0, #8]
 802a142:	e9c0 2203 	strd	r2, r2, [r0, #12]
 802a146:	6142      	str	r2, [r0, #20]
 802a148:	4770      	bx	lr
 802a14a:	bf00      	nop
 802a14c:	080365cc 	.word	0x080365cc

0802a150 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>:
 802a150:	60c3      	str	r3, [r0, #12]
 802a152:	9b00      	ldr	r3, [sp, #0]
 802a154:	6103      	str	r3, [r0, #16]
 802a156:	9b01      	ldr	r3, [sp, #4]
 802a158:	6041      	str	r1, [r0, #4]
 802a15a:	7202      	strb	r2, [r0, #8]
 802a15c:	6143      	str	r3, [r0, #20]
 802a15e:	4770      	bx	lr

0802a160 <arm_rfft_fast_init_f32>:
 802a160:	084b      	lsrs	r3, r1, #1
 802a162:	2b80      	cmp	r3, #128	; 0x80
 802a164:	b410      	push	{r4}
 802a166:	8201      	strh	r1, [r0, #16]
 802a168:	8003      	strh	r3, [r0, #0]
 802a16a:	d046      	beq.n	802a1fa <arm_rfft_fast_init_f32+0x9a>
 802a16c:	d916      	bls.n	802a19c <arm_rfft_fast_init_f32+0x3c>
 802a16e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802a172:	d03c      	beq.n	802a1ee <arm_rfft_fast_init_f32+0x8e>
 802a174:	d928      	bls.n	802a1c8 <arm_rfft_fast_init_f32+0x68>
 802a176:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802a17a:	d01f      	beq.n	802a1bc <arm_rfft_fast_init_f32+0x5c>
 802a17c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802a180:	d112      	bne.n	802a1a8 <arm_rfft_fast_init_f32+0x48>
 802a182:	4920      	ldr	r1, [pc, #128]	; (802a204 <arm_rfft_fast_init_f32+0xa4>)
 802a184:	4a20      	ldr	r2, [pc, #128]	; (802a208 <arm_rfft_fast_init_f32+0xa8>)
 802a186:	4b21      	ldr	r3, [pc, #132]	; (802a20c <arm_rfft_fast_init_f32+0xac>)
 802a188:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 802a18c:	8184      	strh	r4, [r0, #12]
 802a18e:	6081      	str	r1, [r0, #8]
 802a190:	6042      	str	r2, [r0, #4]
 802a192:	6143      	str	r3, [r0, #20]
 802a194:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a198:	2000      	movs	r0, #0
 802a19a:	4770      	bx	lr
 802a19c:	2b20      	cmp	r3, #32
 802a19e:	d01c      	beq.n	802a1da <arm_rfft_fast_init_f32+0x7a>
 802a1a0:	2b40      	cmp	r3, #64	; 0x40
 802a1a2:	d006      	beq.n	802a1b2 <arm_rfft_fast_init_f32+0x52>
 802a1a4:	2b10      	cmp	r3, #16
 802a1a6:	d01d      	beq.n	802a1e4 <arm_rfft_fast_init_f32+0x84>
 802a1a8:	f04f 30ff 	mov.w	r0, #4294967295
 802a1ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a1b0:	4770      	bx	lr
 802a1b2:	2438      	movs	r4, #56	; 0x38
 802a1b4:	4916      	ldr	r1, [pc, #88]	; (802a210 <arm_rfft_fast_init_f32+0xb0>)
 802a1b6:	4a17      	ldr	r2, [pc, #92]	; (802a214 <arm_rfft_fast_init_f32+0xb4>)
 802a1b8:	4b17      	ldr	r3, [pc, #92]	; (802a218 <arm_rfft_fast_init_f32+0xb8>)
 802a1ba:	e7e7      	b.n	802a18c <arm_rfft_fast_init_f32+0x2c>
 802a1bc:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802a1c0:	4916      	ldr	r1, [pc, #88]	; (802a21c <arm_rfft_fast_init_f32+0xbc>)
 802a1c2:	4a17      	ldr	r2, [pc, #92]	; (802a220 <arm_rfft_fast_init_f32+0xc0>)
 802a1c4:	4b17      	ldr	r3, [pc, #92]	; (802a224 <arm_rfft_fast_init_f32+0xc4>)
 802a1c6:	e7e1      	b.n	802a18c <arm_rfft_fast_init_f32+0x2c>
 802a1c8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802a1cc:	d1ec      	bne.n	802a1a8 <arm_rfft_fast_init_f32+0x48>
 802a1ce:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802a1d2:	4915      	ldr	r1, [pc, #84]	; (802a228 <arm_rfft_fast_init_f32+0xc8>)
 802a1d4:	4a15      	ldr	r2, [pc, #84]	; (802a22c <arm_rfft_fast_init_f32+0xcc>)
 802a1d6:	4b16      	ldr	r3, [pc, #88]	; (802a230 <arm_rfft_fast_init_f32+0xd0>)
 802a1d8:	e7d8      	b.n	802a18c <arm_rfft_fast_init_f32+0x2c>
 802a1da:	2430      	movs	r4, #48	; 0x30
 802a1dc:	4915      	ldr	r1, [pc, #84]	; (802a234 <arm_rfft_fast_init_f32+0xd4>)
 802a1de:	4a16      	ldr	r2, [pc, #88]	; (802a238 <arm_rfft_fast_init_f32+0xd8>)
 802a1e0:	4b16      	ldr	r3, [pc, #88]	; (802a23c <arm_rfft_fast_init_f32+0xdc>)
 802a1e2:	e7d3      	b.n	802a18c <arm_rfft_fast_init_f32+0x2c>
 802a1e4:	2414      	movs	r4, #20
 802a1e6:	4916      	ldr	r1, [pc, #88]	; (802a240 <arm_rfft_fast_init_f32+0xe0>)
 802a1e8:	4a16      	ldr	r2, [pc, #88]	; (802a244 <arm_rfft_fast_init_f32+0xe4>)
 802a1ea:	4b17      	ldr	r3, [pc, #92]	; (802a248 <arm_rfft_fast_init_f32+0xe8>)
 802a1ec:	e7ce      	b.n	802a18c <arm_rfft_fast_init_f32+0x2c>
 802a1ee:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802a1f2:	4916      	ldr	r1, [pc, #88]	; (802a24c <arm_rfft_fast_init_f32+0xec>)
 802a1f4:	4a16      	ldr	r2, [pc, #88]	; (802a250 <arm_rfft_fast_init_f32+0xf0>)
 802a1f6:	4b17      	ldr	r3, [pc, #92]	; (802a254 <arm_rfft_fast_init_f32+0xf4>)
 802a1f8:	e7c8      	b.n	802a18c <arm_rfft_fast_init_f32+0x2c>
 802a1fa:	24d0      	movs	r4, #208	; 0xd0
 802a1fc:	4916      	ldr	r1, [pc, #88]	; (802a258 <arm_rfft_fast_init_f32+0xf8>)
 802a1fe:	4a17      	ldr	r2, [pc, #92]	; (802a25c <arm_rfft_fast_init_f32+0xfc>)
 802a200:	4b17      	ldr	r3, [pc, #92]	; (802a260 <arm_rfft_fast_init_f32+0x100>)
 802a202:	e7c3      	b.n	802a18c <arm_rfft_fast_init_f32+0x2c>
 802a204:	080453dc 	.word	0x080453dc
 802a208:	080365d4 	.word	0x080365d4
 802a20c:	0803c744 	.word	0x0803c744
 802a210:	0803a6d4 	.word	0x0803a6d4
 802a214:	0804719c 	.word	0x0804719c
 802a218:	0804968c 	.word	0x0804968c
 802a21c:	080430c4 	.word	0x080430c4
 802a220:	08040fc4 	.word	0x08040fc4
 802a224:	0803a744 	.word	0x0803a744
 802a228:	0804931c 	.word	0x0804931c
 802a22c:	08040744 	.word	0x08040744
 802a230:	0804739c 	.word	0x0804739c
 802a234:	08043f7c 	.word	0x08043f7c
 802a238:	08042fc4 	.word	0x08042fc4
 802a23c:	0803a5d4 	.word	0x0803a5d4
 802a240:	08043ed4 	.word	0x08043ed4
 802a244:	08040f44 	.word	0x08040f44
 802a248:	08043efc 	.word	0x08043efc
 802a24c:	08047b9c 	.word	0x08047b9c
 802a250:	080443dc 	.word	0x080443dc
 802a254:	08047f1c 	.word	0x08047f1c
 802a258:	0804988c 	.word	0x0804988c
 802a25c:	08043fdc 	.word	0x08043fdc
 802a260:	08048f1c 	.word	0x08048f1c

0802a264 <arm_rfft_fast_f32>:
 802a264:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a268:	8a06      	ldrh	r6, [r0, #16]
 802a26a:	0876      	lsrs	r6, r6, #1
 802a26c:	4607      	mov	r7, r0
 802a26e:	4615      	mov	r5, r2
 802a270:	8006      	strh	r6, [r0, #0]
 802a272:	460c      	mov	r4, r1
 802a274:	2b00      	cmp	r3, #0
 802a276:	d15c      	bne.n	802a332 <arm_rfft_fast_f32+0xce>
 802a278:	461a      	mov	r2, r3
 802a27a:	2301      	movs	r3, #1
 802a27c:	f000 fbe4 	bl	802aa48 <arm_cfft_f32>
 802a280:	edd4 7a00 	vldr	s15, [r4]
 802a284:	ed94 7a01 	vldr	s14, [r4, #4]
 802a288:	883e      	ldrh	r6, [r7, #0]
 802a28a:	6978      	ldr	r0, [r7, #20]
 802a28c:	ee37 7a07 	vadd.f32	s14, s14, s14
 802a290:	ee77 7aa7 	vadd.f32	s15, s15, s15
 802a294:	eeb6 3a00 	vmov.f32	s6, #96	; 0x3f000000  0.5
 802a298:	ee77 6a87 	vadd.f32	s13, s15, s14
 802a29c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a2a0:	3e01      	subs	r6, #1
 802a2a2:	ee26 7a83 	vmul.f32	s14, s13, s6
 802a2a6:	ee67 7a83 	vmul.f32	s15, s15, s6
 802a2aa:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802a2ae:	ed85 7a00 	vstr	s14, [r5]
 802a2b2:	edc5 7a01 	vstr	s15, [r5, #4]
 802a2b6:	3010      	adds	r0, #16
 802a2b8:	f105 0210 	add.w	r2, r5, #16
 802a2bc:	3b08      	subs	r3, #8
 802a2be:	f104 0110 	add.w	r1, r4, #16
 802a2c2:	ed93 7a02 	vldr	s14, [r3, #8]
 802a2c6:	ed51 6a02 	vldr	s13, [r1, #-8]
 802a2ca:	ed10 6a02 	vldr	s12, [r0, #-8]
 802a2ce:	edd3 3a03 	vldr	s7, [r3, #12]
 802a2d2:	ed11 5a01 	vldr	s10, [r1, #-4]
 802a2d6:	ed50 5a01 	vldr	s11, [r0, #-4]
 802a2da:	ee77 7a66 	vsub.f32	s15, s14, s13
 802a2de:	ee77 4a26 	vadd.f32	s9, s14, s13
 802a2e2:	ee33 4a85 	vadd.f32	s8, s7, s10
 802a2e6:	ee66 6a27 	vmul.f32	s13, s12, s15
 802a2ea:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802a2ee:	ee35 5a63 	vsub.f32	s10, s10, s7
 802a2f2:	ee76 6aa4 	vadd.f32	s13, s13, s9
 802a2f6:	ee77 7a05 	vadd.f32	s15, s14, s10
 802a2fa:	ee26 6a04 	vmul.f32	s12, s12, s8
 802a2fe:	ee65 5a84 	vmul.f32	s11, s11, s8
 802a302:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802a306:	ee36 7aa5 	vadd.f32	s14, s13, s11
 802a30a:	ee67 7a83 	vmul.f32	s15, s15, s6
 802a30e:	ee27 7a03 	vmul.f32	s14, s14, s6
 802a312:	3e01      	subs	r6, #1
 802a314:	ed02 7a02 	vstr	s14, [r2, #-8]
 802a318:	ed42 7a01 	vstr	s15, [r2, #-4]
 802a31c:	f1a3 0308 	sub.w	r3, r3, #8
 802a320:	f101 0108 	add.w	r1, r1, #8
 802a324:	f100 0008 	add.w	r0, r0, #8
 802a328:	f102 0208 	add.w	r2, r2, #8
 802a32c:	d1c9      	bne.n	802a2c2 <arm_rfft_fast_f32+0x5e>
 802a32e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a332:	edd1 7a00 	vldr	s15, [r1]
 802a336:	edd1 6a01 	vldr	s13, [r1, #4]
 802a33a:	6941      	ldr	r1, [r0, #20]
 802a33c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a340:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a344:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802a348:	ee27 7a23 	vmul.f32	s14, s14, s7
 802a34c:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802a350:	3e01      	subs	r6, #1
 802a352:	ed82 7a00 	vstr	s14, [r2]
 802a356:	edc2 7a01 	vstr	s15, [r2, #4]
 802a35a:	00f0      	lsls	r0, r6, #3
 802a35c:	b3ee      	cbz	r6, 802a3da <arm_rfft_fast_f32+0x176>
 802a35e:	3808      	subs	r0, #8
 802a360:	f101 0e10 	add.w	lr, r1, #16
 802a364:	4420      	add	r0, r4
 802a366:	f104 0110 	add.w	r1, r4, #16
 802a36a:	f102 0c10 	add.w	ip, r2, #16
 802a36e:	ed90 7a02 	vldr	s14, [r0, #8]
 802a372:	ed51 6a02 	vldr	s13, [r1, #-8]
 802a376:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802a37a:	ed90 4a03 	vldr	s8, [r0, #12]
 802a37e:	ed11 5a01 	vldr	s10, [r1, #-4]
 802a382:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802a386:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802a38a:	ee74 4a05 	vadd.f32	s9, s8, s10
 802a38e:	ee26 3a27 	vmul.f32	s6, s12, s15
 802a392:	ee77 6a26 	vadd.f32	s13, s14, s13
 802a396:	ee35 5a44 	vsub.f32	s10, s10, s8
 802a39a:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802a39e:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a3a2:	ee77 7a05 	vadd.f32	s15, s14, s10
 802a3a6:	ee26 6a24 	vmul.f32	s12, s12, s9
 802a3aa:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802a3ae:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802a3b2:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802a3b6:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802a3ba:	ee27 7a23 	vmul.f32	s14, s14, s7
 802a3be:	3e01      	subs	r6, #1
 802a3c0:	ed0c 7a02 	vstr	s14, [ip, #-8]
 802a3c4:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802a3c8:	f1a0 0008 	sub.w	r0, r0, #8
 802a3cc:	f101 0108 	add.w	r1, r1, #8
 802a3d0:	f10e 0e08 	add.w	lr, lr, #8
 802a3d4:	f10c 0c08 	add.w	ip, ip, #8
 802a3d8:	d1c9      	bne.n	802a36e <arm_rfft_fast_f32+0x10a>
 802a3da:	461a      	mov	r2, r3
 802a3dc:	4629      	mov	r1, r5
 802a3de:	4638      	mov	r0, r7
 802a3e0:	2301      	movs	r3, #1
 802a3e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a3e6:	f000 bb2f 	b.w	802aa48 <arm_cfft_f32>
 802a3ea:	bf00      	nop

0802a3ec <arm_cfft_radix8by2_f32>:
 802a3ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a3f0:	ed2d 8b08 	vpush	{d8-d11}
 802a3f4:	4607      	mov	r7, r0
 802a3f6:	4608      	mov	r0, r1
 802a3f8:	f8b7 e000 	ldrh.w	lr, [r7]
 802a3fc:	687a      	ldr	r2, [r7, #4]
 802a3fe:	ea4f 015e 	mov.w	r1, lr, lsr #1
 802a402:	eb00 088e 	add.w	r8, r0, lr, lsl #2
 802a406:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802a40a:	f000 80b0 	beq.w	802a56e <arm_cfft_radix8by2_f32+0x182>
 802a40e:	008b      	lsls	r3, r1, #2
 802a410:	3310      	adds	r3, #16
 802a412:	18c6      	adds	r6, r0, r3
 802a414:	3210      	adds	r2, #16
 802a416:	4443      	add	r3, r8
 802a418:	f100 0510 	add.w	r5, r0, #16
 802a41c:	f108 0410 	add.w	r4, r8, #16
 802a420:	ed54 1a04 	vldr	s3, [r4, #-16]
 802a424:	ed54 6a03 	vldr	s13, [r4, #-12]
 802a428:	ed13 4a04 	vldr	s8, [r3, #-16]
 802a42c:	ed53 3a03 	vldr	s7, [r3, #-12]
 802a430:	ed53 5a02 	vldr	s11, [r3, #-8]
 802a434:	ed13 5a01 	vldr	s10, [r3, #-4]
 802a438:	ed14 0a02 	vldr	s0, [r4, #-8]
 802a43c:	ed54 7a01 	vldr	s15, [r4, #-4]
 802a440:	ed16 2a04 	vldr	s4, [r6, #-16]
 802a444:	ed56 2a03 	vldr	s5, [r6, #-12]
 802a448:	ed15 6a03 	vldr	s12, [r5, #-12]
 802a44c:	ed15 7a01 	vldr	s14, [r5, #-4]
 802a450:	ed15 3a04 	vldr	s6, [r5, #-16]
 802a454:	ed56 0a02 	vldr	s1, [r6, #-8]
 802a458:	ed16 1a01 	vldr	s2, [r6, #-4]
 802a45c:	ed55 4a02 	vldr	s9, [r5, #-8]
 802a460:	ee73 ba21 	vadd.f32	s23, s6, s3
 802a464:	ee36 ba26 	vadd.f32	s22, s12, s13
 802a468:	ee37 aa27 	vadd.f32	s20, s14, s15
 802a46c:	ee72 9a04 	vadd.f32	s19, s4, s8
 802a470:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802a474:	ee31 8a05 	vadd.f32	s16, s2, s10
 802a478:	ee74 aa80 	vadd.f32	s21, s9, s0
 802a47c:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802a480:	ed45 ba04 	vstr	s23, [r5, #-16]
 802a484:	ed05 ba03 	vstr	s22, [r5, #-12]
 802a488:	ed45 aa02 	vstr	s21, [r5, #-8]
 802a48c:	ed05 aa01 	vstr	s20, [r5, #-4]
 802a490:	ed06 8a01 	vstr	s16, [r6, #-4]
 802a494:	ed46 9a04 	vstr	s19, [r6, #-16]
 802a498:	ed06 9a03 	vstr	s18, [r6, #-12]
 802a49c:	ed46 8a02 	vstr	s17, [r6, #-8]
 802a4a0:	ee76 6a66 	vsub.f32	s13, s12, s13
 802a4a4:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802a4a8:	ed12 6a03 	vldr	s12, [r2, #-12]
 802a4ac:	ed52 2a04 	vldr	s5, [r2, #-16]
 802a4b0:	ee33 3a61 	vsub.f32	s6, s6, s3
 802a4b4:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a4b8:	ee26 8a86 	vmul.f32	s16, s13, s12
 802a4bc:	ee24 2a06 	vmul.f32	s4, s8, s12
 802a4c0:	ee63 1a22 	vmul.f32	s3, s6, s5
 802a4c4:	ee24 4a22 	vmul.f32	s8, s8, s5
 802a4c8:	ee23 3a06 	vmul.f32	s6, s6, s12
 802a4cc:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802a4d0:	ee23 6a86 	vmul.f32	s12, s7, s12
 802a4d4:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802a4d8:	ee36 6a04 	vadd.f32	s12, s12, s8
 802a4dc:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a4e0:	ee72 3a63 	vsub.f32	s7, s4, s7
 802a4e4:	ee71 2a88 	vadd.f32	s5, s3, s16
 802a4e8:	ed44 6a03 	vstr	s13, [r4, #-12]
 802a4ec:	ed44 2a04 	vstr	s5, [r4, #-16]
 802a4f0:	ed43 3a04 	vstr	s7, [r3, #-16]
 802a4f4:	ed03 6a03 	vstr	s12, [r3, #-12]
 802a4f8:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a4fc:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802a500:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a504:	ed52 5a02 	vldr	s11, [r2, #-8]
 802a508:	ee35 6a41 	vsub.f32	s12, s10, s2
 802a50c:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802a510:	ee67 3a87 	vmul.f32	s7, s15, s14
 802a514:	ee26 5a87 	vmul.f32	s10, s13, s14
 802a518:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802a51c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802a520:	ee64 4a87 	vmul.f32	s9, s9, s14
 802a524:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802a528:	ee26 7a07 	vmul.f32	s14, s12, s14
 802a52c:	ee26 6a25 	vmul.f32	s12, s12, s11
 802a530:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802a534:	ee74 5a23 	vadd.f32	s11, s8, s7
 802a538:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a53c:	ee37 7a26 	vadd.f32	s14, s14, s13
 802a540:	f1be 0e01 	subs.w	lr, lr, #1
 802a544:	ed44 5a02 	vstr	s11, [r4, #-8]
 802a548:	f105 0510 	add.w	r5, r5, #16
 802a54c:	ed44 7a01 	vstr	s15, [r4, #-4]
 802a550:	f106 0610 	add.w	r6, r6, #16
 802a554:	ed03 6a02 	vstr	s12, [r3, #-8]
 802a558:	ed03 7a01 	vstr	s14, [r3, #-4]
 802a55c:	f102 0210 	add.w	r2, r2, #16
 802a560:	f104 0410 	add.w	r4, r4, #16
 802a564:	f103 0310 	add.w	r3, r3, #16
 802a568:	f47f af5a 	bne.w	802a420 <arm_cfft_radix8by2_f32+0x34>
 802a56c:	687a      	ldr	r2, [r7, #4]
 802a56e:	b28c      	uxth	r4, r1
 802a570:	4621      	mov	r1, r4
 802a572:	2302      	movs	r3, #2
 802a574:	f000 fae2 	bl	802ab3c <arm_radix8_butterfly_f32>
 802a578:	ecbd 8b08 	vpop	{d8-d11}
 802a57c:	4621      	mov	r1, r4
 802a57e:	687a      	ldr	r2, [r7, #4]
 802a580:	4640      	mov	r0, r8
 802a582:	2302      	movs	r3, #2
 802a584:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a588:	f000 bad8 	b.w	802ab3c <arm_radix8_butterfly_f32>

0802a58c <arm_cfft_radix8by4_f32>:
 802a58c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a590:	ed2d 8b0a 	vpush	{d8-d12}
 802a594:	8802      	ldrh	r2, [r0, #0]
 802a596:	ed91 6a00 	vldr	s12, [r1]
 802a59a:	b08f      	sub	sp, #60	; 0x3c
 802a59c:	460f      	mov	r7, r1
 802a59e:	0852      	lsrs	r2, r2, #1
 802a5a0:	6841      	ldr	r1, [r0, #4]
 802a5a2:	900c      	str	r0, [sp, #48]	; 0x30
 802a5a4:	0093      	lsls	r3, r2, #2
 802a5a6:	4638      	mov	r0, r7
 802a5a8:	4418      	add	r0, r3
 802a5aa:	4606      	mov	r6, r0
 802a5ac:	9009      	str	r0, [sp, #36]	; 0x24
 802a5ae:	4418      	add	r0, r3
 802a5b0:	edd0 6a00 	vldr	s13, [r0]
 802a5b4:	ed96 4a00 	vldr	s8, [r6]
 802a5b8:	edd6 2a01 	vldr	s5, [r6, #4]
 802a5bc:	edd0 7a01 	vldr	s15, [r0, #4]
 802a5c0:	900a      	str	r0, [sp, #40]	; 0x28
 802a5c2:	ee76 5a26 	vadd.f32	s11, s12, s13
 802a5c6:	4604      	mov	r4, r0
 802a5c8:	4625      	mov	r5, r4
 802a5ca:	441c      	add	r4, r3
 802a5cc:	edd4 4a00 	vldr	s9, [r4]
 802a5d0:	ed97 7a01 	vldr	s14, [r7, #4]
 802a5d4:	ed94 3a01 	vldr	s6, [r4, #4]
 802a5d8:	9401      	str	r4, [sp, #4]
 802a5da:	ee35 5a84 	vadd.f32	s10, s11, s8
 802a5de:	4630      	mov	r0, r6
 802a5e0:	ee35 5a24 	vadd.f32	s10, s10, s9
 802a5e4:	463e      	mov	r6, r7
 802a5e6:	ee15 ea10 	vmov	lr, s10
 802a5ea:	ee76 6a66 	vsub.f32	s13, s12, s13
 802a5ee:	f846 eb08 	str.w	lr, [r6], #8
 802a5f2:	ee37 6a27 	vadd.f32	s12, s14, s15
 802a5f6:	ed90 5a01 	vldr	s10, [r0, #4]
 802a5fa:	9605      	str	r6, [sp, #20]
 802a5fc:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a600:	9e01      	ldr	r6, [sp, #4]
 802a602:	9707      	str	r7, [sp, #28]
 802a604:	ee76 3aa2 	vadd.f32	s7, s13, s5
 802a608:	ed96 2a01 	vldr	s4, [r6, #4]
 802a60c:	ee36 7a05 	vadd.f32	s14, s12, s10
 802a610:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802a614:	ee37 5ac4 	vsub.f32	s10, s15, s8
 802a618:	ee77 7a84 	vadd.f32	s15, s15, s8
 802a61c:	ee33 4ac3 	vsub.f32	s8, s7, s6
 802a620:	4604      	mov	r4, r0
 802a622:	46a3      	mov	fp, r4
 802a624:	ee37 7a02 	vadd.f32	s14, s14, s4
 802a628:	ee35 5a24 	vadd.f32	s10, s10, s9
 802a62c:	ee14 8a10 	vmov	r8, s8
 802a630:	46a4      	mov	ip, r4
 802a632:	ee75 5ae4 	vsub.f32	s11, s11, s9
 802a636:	ed87 7a01 	vstr	s14, [r7, #4]
 802a63a:	f84b 8b08 	str.w	r8, [fp], #8
 802a63e:	f1ac 0704 	sub.w	r7, ip, #4
 802a642:	ed8c 5a01 	vstr	s10, [ip, #4]
 802a646:	f101 0c08 	add.w	ip, r1, #8
 802a64a:	462c      	mov	r4, r5
 802a64c:	f8cd c010 	str.w	ip, [sp, #16]
 802a650:	ee15 ca90 	vmov	ip, s11
 802a654:	ee36 6a62 	vsub.f32	s12, s12, s5
 802a658:	f844 cb08 	str.w	ip, [r4], #8
 802a65c:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802a660:	ee36 6a43 	vsub.f32	s12, s12, s6
 802a664:	9406      	str	r4, [sp, #24]
 802a666:	ee76 6a83 	vadd.f32	s13, s13, s6
 802a66a:	f101 0410 	add.w	r4, r1, #16
 802a66e:	0852      	lsrs	r2, r2, #1
 802a670:	9402      	str	r4, [sp, #8]
 802a672:	ed85 6a01 	vstr	s12, [r5, #4]
 802a676:	462c      	mov	r4, r5
 802a678:	f101 0518 	add.w	r5, r1, #24
 802a67c:	920b      	str	r2, [sp, #44]	; 0x2c
 802a67e:	46b2      	mov	sl, r6
 802a680:	9503      	str	r5, [sp, #12]
 802a682:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802a686:	3a02      	subs	r2, #2
 802a688:	ee16 5a90 	vmov	r5, s13
 802a68c:	46b6      	mov	lr, r6
 802a68e:	4630      	mov	r0, r6
 802a690:	0852      	lsrs	r2, r2, #1
 802a692:	f84a 5b08 	str.w	r5, [sl], #8
 802a696:	f1a0 0604 	sub.w	r6, r0, #4
 802a69a:	edce 7a01 	vstr	s15, [lr, #4]
 802a69e:	9208      	str	r2, [sp, #32]
 802a6a0:	f000 8130 	beq.w	802a904 <arm_cfft_radix8by4_f32+0x378>
 802a6a4:	4691      	mov	r9, r2
 802a6a6:	9a07      	ldr	r2, [sp, #28]
 802a6a8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802a6ac:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802a6b0:	3b08      	subs	r3, #8
 802a6b2:	f102 0510 	add.w	r5, r2, #16
 802a6b6:	f101 0c20 	add.w	ip, r1, #32
 802a6ba:	f1a4 020c 	sub.w	r2, r4, #12
 802a6be:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802a6c2:	4433      	add	r3, r6
 802a6c4:	3410      	adds	r4, #16
 802a6c6:	4650      	mov	r0, sl
 802a6c8:	4659      	mov	r1, fp
 802a6ca:	ed55 3a02 	vldr	s7, [r5, #-8]
 802a6ce:	ed14 5a02 	vldr	s10, [r4, #-8]
 802a6d2:	ed91 7a00 	vldr	s14, [r1]
 802a6d6:	edd0 7a00 	vldr	s15, [r0]
 802a6da:	ed54 5a01 	vldr	s11, [r4, #-4]
 802a6de:	ed15 4a01 	vldr	s8, [r5, #-4]
 802a6e2:	edd0 6a01 	vldr	s13, [r0, #4]
 802a6e6:	ed91 6a01 	vldr	s12, [r1, #4]
 802a6ea:	ee33 8a85 	vadd.f32	s16, s7, s10
 802a6ee:	ee34 0a25 	vadd.f32	s0, s8, s11
 802a6f2:	ee78 4a07 	vadd.f32	s9, s16, s14
 802a6f6:	ee74 5a65 	vsub.f32	s11, s8, s11
 802a6fa:	ee74 4aa7 	vadd.f32	s9, s9, s15
 802a6fe:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802a702:	ed45 4a02 	vstr	s9, [r5, #-8]
 802a706:	edd1 4a01 	vldr	s9, [r1, #4]
 802a70a:	ed90 4a01 	vldr	s8, [r0, #4]
 802a70e:	ee70 4a24 	vadd.f32	s9, s0, s9
 802a712:	ee75 aa06 	vadd.f32	s21, s10, s12
 802a716:	ee74 4a84 	vadd.f32	s9, s9, s8
 802a71a:	ee35 aac7 	vsub.f32	s20, s11, s14
 802a71e:	ed45 4a01 	vstr	s9, [r5, #-4]
 802a722:	edd6 1a00 	vldr	s3, [r6]
 802a726:	edd7 0a00 	vldr	s1, [r7]
 802a72a:	ed92 4a02 	vldr	s8, [r2, #8]
 802a72e:	edd3 3a02 	vldr	s7, [r3, #8]
 802a732:	ed93 2a01 	vldr	s4, [r3, #4]
 802a736:	ed16 1a01 	vldr	s2, [r6, #-4]
 802a73a:	edd2 2a01 	vldr	s5, [r2, #4]
 802a73e:	ed57 9a01 	vldr	s19, [r7, #-4]
 802a742:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802a746:	ee39 3a81 	vadd.f32	s6, s19, s2
 802a74a:	ee74 8a84 	vadd.f32	s17, s9, s8
 802a74e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802a752:	ee78 8aa3 	vadd.f32	s17, s17, s7
 802a756:	ee7a aae6 	vsub.f32	s21, s21, s13
 802a75a:	ee18 aa90 	vmov	sl, s17
 802a75e:	f847 a908 	str.w	sl, [r7], #-8
 802a762:	edd2 8a01 	vldr	s17, [r2, #4]
 802a766:	ed93 9a01 	vldr	s18, [r3, #4]
 802a76a:	ee73 8a28 	vadd.f32	s17, s6, s17
 802a76e:	ee3a aa27 	vadd.f32	s20, s20, s15
 802a772:	ee78 8a89 	vadd.f32	s17, s17, s18
 802a776:	ee74 0a63 	vsub.f32	s1, s8, s7
 802a77a:	edc7 8a01 	vstr	s17, [r7, #4]
 802a77e:	ed18 ba02 	vldr	s22, [r8, #-8]
 802a782:	ed58 8a01 	vldr	s17, [r8, #-4]
 802a786:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802a78a:	ee6a ba28 	vmul.f32	s23, s20, s17
 802a78e:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802a792:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802a796:	ee31 9a20 	vadd.f32	s18, s2, s1
 802a79a:	ee79 9a82 	vadd.f32	s19, s19, s4
 802a79e:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802a7a2:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802a7a6:	ee69 baa8 	vmul.f32	s23, s19, s17
 802a7aa:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802a7ae:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802a7b2:	ee69 8a28 	vmul.f32	s17, s18, s17
 802a7b6:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802a7ba:	ee1c aa10 	vmov	sl, s24
 802a7be:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802a7c2:	f841 ab08 	str.w	sl, [r1], #8
 802a7c6:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802a7ca:	ee3b bacb 	vsub.f32	s22, s23, s22
 802a7ce:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802a7d2:	ee33 3a62 	vsub.f32	s6, s6, s5
 802a7d6:	ed01 aa01 	vstr	s20, [r1, #-4]
 802a7da:	edc2 8a01 	vstr	s17, [r2, #4]
 802a7de:	ed82 ba02 	vstr	s22, [r2, #8]
 802a7e2:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802a7e6:	ee74 3a63 	vsub.f32	s7, s8, s7
 802a7ea:	ee38 8a47 	vsub.f32	s16, s16, s14
 802a7ee:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802a7f2:	ee30 0a46 	vsub.f32	s0, s0, s12
 802a7f6:	ee33 3a42 	vsub.f32	s6, s6, s4
 802a7fa:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a7fe:	ee30 0a66 	vsub.f32	s0, s0, s13
 802a802:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802a806:	ee63 8a04 	vmul.f32	s17, s6, s8
 802a80a:	ee28 aa24 	vmul.f32	s20, s16, s9
 802a80e:	ee60 9a04 	vmul.f32	s19, s0, s8
 802a812:	ee28 8a04 	vmul.f32	s16, s16, s8
 802a816:	ee20 0a24 	vmul.f32	s0, s0, s9
 802a81a:	ee63 3a84 	vmul.f32	s7, s7, s8
 802a81e:	ee39 4a68 	vsub.f32	s8, s18, s17
 802a822:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802a826:	ee14 aa10 	vmov	sl, s8
 802a82a:	ee30 0a48 	vsub.f32	s0, s0, s16
 802a82e:	ee63 4a24 	vmul.f32	s9, s6, s9
 802a832:	ed44 9a02 	vstr	s19, [r4, #-8]
 802a836:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802a83a:	ed04 0a01 	vstr	s0, [r4, #-4]
 802a83e:	f846 a908 	str.w	sl, [r6], #-8
 802a842:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a846:	ee35 7a87 	vadd.f32	s14, s11, s14
 802a84a:	edc6 3a01 	vstr	s7, [r6, #4]
 802a84e:	ee76 6a26 	vadd.f32	s13, s12, s13
 802a852:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a856:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802a85a:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802a85e:	ee67 5a86 	vmul.f32	s11, s15, s12
 802a862:	ee26 5a87 	vmul.f32	s10, s13, s14
 802a866:	ee72 2a62 	vsub.f32	s5, s4, s5
 802a86a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802a86e:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802a872:	ee75 5a25 	vadd.f32	s11, s10, s11
 802a876:	ee62 0a86 	vmul.f32	s1, s5, s12
 802a87a:	ee66 6a86 	vmul.f32	s13, s13, s12
 802a87e:	ee67 7a87 	vmul.f32	s15, s15, s14
 802a882:	ee21 6a06 	vmul.f32	s12, s2, s12
 802a886:	ee62 2a87 	vmul.f32	s5, s5, s14
 802a88a:	ee21 1a07 	vmul.f32	s2, s2, s14
 802a88e:	ee15 aa90 	vmov	sl, s11
 802a892:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a896:	f840 ab08 	str.w	sl, [r0], #8
 802a89a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802a89e:	ee76 2a22 	vadd.f32	s5, s12, s5
 802a8a2:	f1b9 0901 	subs.w	r9, r9, #1
 802a8a6:	ed40 7a01 	vstr	s15, [r0, #-4]
 802a8aa:	f105 0508 	add.w	r5, r5, #8
 802a8ae:	ed83 1a02 	vstr	s2, [r3, #8]
 802a8b2:	edc3 2a01 	vstr	s5, [r3, #4]
 802a8b6:	f108 0808 	add.w	r8, r8, #8
 802a8ba:	f1a2 0208 	sub.w	r2, r2, #8
 802a8be:	f10c 0c10 	add.w	ip, ip, #16
 802a8c2:	f104 0408 	add.w	r4, r4, #8
 802a8c6:	f10e 0e18 	add.w	lr, lr, #24
 802a8ca:	f1a3 0308 	sub.w	r3, r3, #8
 802a8ce:	f47f aefc 	bne.w	802a6ca <arm_cfft_radix8by4_f32+0x13e>
 802a8d2:	9908      	ldr	r1, [sp, #32]
 802a8d4:	9802      	ldr	r0, [sp, #8]
 802a8d6:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802a8da:	00cb      	lsls	r3, r1, #3
 802a8dc:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802a8e0:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802a8e4:	9102      	str	r1, [sp, #8]
 802a8e6:	9905      	ldr	r1, [sp, #20]
 802a8e8:	4419      	add	r1, r3
 802a8ea:	9105      	str	r1, [sp, #20]
 802a8ec:	9904      	ldr	r1, [sp, #16]
 802a8ee:	4419      	add	r1, r3
 802a8f0:	9104      	str	r1, [sp, #16]
 802a8f2:	9906      	ldr	r1, [sp, #24]
 802a8f4:	449b      	add	fp, r3
 802a8f6:	4419      	add	r1, r3
 802a8f8:	449a      	add	sl, r3
 802a8fa:	9b03      	ldr	r3, [sp, #12]
 802a8fc:	9106      	str	r1, [sp, #24]
 802a8fe:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802a902:	9303      	str	r3, [sp, #12]
 802a904:	9a05      	ldr	r2, [sp, #20]
 802a906:	9806      	ldr	r0, [sp, #24]
 802a908:	ed92 4a00 	vldr	s8, [r2]
 802a90c:	ed90 7a00 	vldr	s14, [r0]
 802a910:	ed9b 3a00 	vldr	s6, [fp]
 802a914:	edda 3a00 	vldr	s7, [sl]
 802a918:	edd2 4a01 	vldr	s9, [r2, #4]
 802a91c:	edd0 6a01 	vldr	s13, [r0, #4]
 802a920:	ed9a 2a01 	vldr	s4, [sl, #4]
 802a924:	eddb 7a01 	vldr	s15, [fp, #4]
 802a928:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802a92c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802a92e:	ee34 6a07 	vadd.f32	s12, s8, s14
 802a932:	ee74 5aa6 	vadd.f32	s11, s9, s13
 802a936:	ee36 5a03 	vadd.f32	s10, s12, s6
 802a93a:	ee74 6ae6 	vsub.f32	s13, s9, s13
 802a93e:	ee35 5a23 	vadd.f32	s10, s10, s7
 802a942:	ee34 7a47 	vsub.f32	s14, s8, s14
 802a946:	ed82 5a00 	vstr	s10, [r2]
 802a94a:	ed9b 5a01 	vldr	s10, [fp, #4]
 802a94e:	edda 4a01 	vldr	s9, [sl, #4]
 802a952:	ee35 5a85 	vadd.f32	s10, s11, s10
 802a956:	ee37 4a27 	vadd.f32	s8, s14, s15
 802a95a:	ee35 5a24 	vadd.f32	s10, s10, s9
 802a95e:	ee76 4ac3 	vsub.f32	s9, s13, s6
 802a962:	ed82 5a01 	vstr	s10, [r2, #4]
 802a966:	9a04      	ldr	r2, [sp, #16]
 802a968:	ee34 5aa3 	vadd.f32	s10, s9, s7
 802a96c:	edd2 1a00 	vldr	s3, [r2]
 802a970:	edd2 2a01 	vldr	s5, [r2, #4]
 802a974:	9a02      	ldr	r2, [sp, #8]
 802a976:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a97a:	ee36 6a43 	vsub.f32	s12, s12, s6
 802a97e:	ee64 4a21 	vmul.f32	s9, s8, s3
 802a982:	ee24 4a22 	vmul.f32	s8, s8, s5
 802a986:	ee65 2a22 	vmul.f32	s5, s10, s5
 802a98a:	ee25 5a21 	vmul.f32	s10, s10, s3
 802a98e:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802a992:	ee35 5a44 	vsub.f32	s10, s10, s8
 802a996:	ee75 5ae7 	vsub.f32	s11, s11, s15
 802a99a:	edcb 2a00 	vstr	s5, [fp]
 802a99e:	ed8b 5a01 	vstr	s10, [fp, #4]
 802a9a2:	ed92 4a01 	vldr	s8, [r2, #4]
 802a9a6:	ed92 5a00 	vldr	s10, [r2]
 802a9aa:	9a03      	ldr	r2, [sp, #12]
 802a9ac:	ee36 6a63 	vsub.f32	s12, s12, s7
 802a9b0:	ee75 5ac2 	vsub.f32	s11, s11, s4
 802a9b4:	ee66 4a05 	vmul.f32	s9, s12, s10
 802a9b8:	ee25 5a85 	vmul.f32	s10, s11, s10
 802a9bc:	ee26 6a04 	vmul.f32	s12, s12, s8
 802a9c0:	ee65 5a84 	vmul.f32	s11, s11, s8
 802a9c4:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a9c8:	ee74 5aa5 	vadd.f32	s11, s9, s11
 802a9cc:	ee76 6a83 	vadd.f32	s13, s13, s6
 802a9d0:	ee37 7a67 	vsub.f32	s14, s14, s15
 802a9d4:	ed80 6a01 	vstr	s12, [r0, #4]
 802a9d8:	edc0 5a00 	vstr	s11, [r0]
 802a9dc:	edd2 5a01 	vldr	s11, [r2, #4]
 802a9e0:	9807      	ldr	r0, [sp, #28]
 802a9e2:	ee77 7a02 	vadd.f32	s15, s14, s4
 802a9e6:	ee36 7ae3 	vsub.f32	s14, s13, s7
 802a9ea:	edd2 6a00 	vldr	s13, [r2]
 802a9ee:	ee27 6aa6 	vmul.f32	s12, s15, s13
 802a9f2:	ee67 6a26 	vmul.f32	s13, s14, s13
 802a9f6:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802a9fa:	ee27 7a25 	vmul.f32	s14, s14, s11
 802a9fe:	ee76 7ae7 	vsub.f32	s15, s13, s15
 802aa02:	ee36 7a07 	vadd.f32	s14, s12, s14
 802aa06:	edca 7a01 	vstr	s15, [sl, #4]
 802aa0a:	ed8a 7a00 	vstr	s14, [sl]
 802aa0e:	6872      	ldr	r2, [r6, #4]
 802aa10:	4621      	mov	r1, r4
 802aa12:	2304      	movs	r3, #4
 802aa14:	f000 f892 	bl	802ab3c <arm_radix8_butterfly_f32>
 802aa18:	9809      	ldr	r0, [sp, #36]	; 0x24
 802aa1a:	6872      	ldr	r2, [r6, #4]
 802aa1c:	4621      	mov	r1, r4
 802aa1e:	2304      	movs	r3, #4
 802aa20:	f000 f88c 	bl	802ab3c <arm_radix8_butterfly_f32>
 802aa24:	980a      	ldr	r0, [sp, #40]	; 0x28
 802aa26:	6872      	ldr	r2, [r6, #4]
 802aa28:	4621      	mov	r1, r4
 802aa2a:	2304      	movs	r3, #4
 802aa2c:	f000 f886 	bl	802ab3c <arm_radix8_butterfly_f32>
 802aa30:	6872      	ldr	r2, [r6, #4]
 802aa32:	9801      	ldr	r0, [sp, #4]
 802aa34:	4621      	mov	r1, r4
 802aa36:	2304      	movs	r3, #4
 802aa38:	b00f      	add	sp, #60	; 0x3c
 802aa3a:	ecbd 8b0a 	vpop	{d8-d12}
 802aa3e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802aa42:	f000 b87b 	b.w	802ab3c <arm_radix8_butterfly_f32>
 802aa46:	bf00      	nop

0802aa48 <arm_cfft_f32>:
 802aa48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802aa4c:	2a01      	cmp	r2, #1
 802aa4e:	4606      	mov	r6, r0
 802aa50:	4617      	mov	r7, r2
 802aa52:	460c      	mov	r4, r1
 802aa54:	4698      	mov	r8, r3
 802aa56:	8805      	ldrh	r5, [r0, #0]
 802aa58:	d054      	beq.n	802ab04 <arm_cfft_f32+0xbc>
 802aa5a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802aa5e:	d04c      	beq.n	802aafa <arm_cfft_f32+0xb2>
 802aa60:	d916      	bls.n	802aa90 <arm_cfft_f32+0x48>
 802aa62:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802aa66:	d01a      	beq.n	802aa9e <arm_cfft_f32+0x56>
 802aa68:	d95c      	bls.n	802ab24 <arm_cfft_f32+0xdc>
 802aa6a:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802aa6e:	d044      	beq.n	802aafa <arm_cfft_f32+0xb2>
 802aa70:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802aa74:	d105      	bne.n	802aa82 <arm_cfft_f32+0x3a>
 802aa76:	2301      	movs	r3, #1
 802aa78:	6872      	ldr	r2, [r6, #4]
 802aa7a:	4629      	mov	r1, r5
 802aa7c:	4620      	mov	r0, r4
 802aa7e:	f000 f85d 	bl	802ab3c <arm_radix8_butterfly_f32>
 802aa82:	f1b8 0f00 	cmp.w	r8, #0
 802aa86:	d111      	bne.n	802aaac <arm_cfft_f32+0x64>
 802aa88:	2f01      	cmp	r7, #1
 802aa8a:	d016      	beq.n	802aaba <arm_cfft_f32+0x72>
 802aa8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802aa90:	2d20      	cmp	r5, #32
 802aa92:	d032      	beq.n	802aafa <arm_cfft_f32+0xb2>
 802aa94:	d94a      	bls.n	802ab2c <arm_cfft_f32+0xe4>
 802aa96:	2d40      	cmp	r5, #64	; 0x40
 802aa98:	d0ed      	beq.n	802aa76 <arm_cfft_f32+0x2e>
 802aa9a:	2d80      	cmp	r5, #128	; 0x80
 802aa9c:	d1f1      	bne.n	802aa82 <arm_cfft_f32+0x3a>
 802aa9e:	4621      	mov	r1, r4
 802aaa0:	4630      	mov	r0, r6
 802aaa2:	f7ff fca3 	bl	802a3ec <arm_cfft_radix8by2_f32>
 802aaa6:	f1b8 0f00 	cmp.w	r8, #0
 802aaaa:	d0ed      	beq.n	802aa88 <arm_cfft_f32+0x40>
 802aaac:	68b2      	ldr	r2, [r6, #8]
 802aaae:	89b1      	ldrh	r1, [r6, #12]
 802aab0:	4620      	mov	r0, r4
 802aab2:	f7d5 fb9d 	bl	80001f0 <arm_bitreversal_32>
 802aab6:	2f01      	cmp	r7, #1
 802aab8:	d1e8      	bne.n	802aa8c <arm_cfft_f32+0x44>
 802aaba:	ee07 5a90 	vmov	s15, r5
 802aabe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 802aac2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802aac6:	eec7 6a27 	vdiv.f32	s13, s14, s15
 802aaca:	2d00      	cmp	r5, #0
 802aacc:	d0de      	beq.n	802aa8c <arm_cfft_f32+0x44>
 802aace:	f104 0108 	add.w	r1, r4, #8
 802aad2:	2300      	movs	r3, #0
 802aad4:	3301      	adds	r3, #1
 802aad6:	429d      	cmp	r5, r3
 802aad8:	f101 0108 	add.w	r1, r1, #8
 802aadc:	ed11 7a04 	vldr	s14, [r1, #-16]
 802aae0:	ed51 7a03 	vldr	s15, [r1, #-12]
 802aae4:	ee27 7a26 	vmul.f32	s14, s14, s13
 802aae8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802aaec:	ed01 7a04 	vstr	s14, [r1, #-16]
 802aaf0:	ed41 7a03 	vstr	s15, [r1, #-12]
 802aaf4:	d1ee      	bne.n	802aad4 <arm_cfft_f32+0x8c>
 802aaf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802aafa:	4621      	mov	r1, r4
 802aafc:	4630      	mov	r0, r6
 802aafe:	f7ff fd45 	bl	802a58c <arm_cfft_radix8by4_f32>
 802ab02:	e7be      	b.n	802aa82 <arm_cfft_f32+0x3a>
 802ab04:	b1ad      	cbz	r5, 802ab32 <arm_cfft_f32+0xea>
 802ab06:	f101 030c 	add.w	r3, r1, #12
 802ab0a:	2200      	movs	r2, #0
 802ab0c:	ed53 7a02 	vldr	s15, [r3, #-8]
 802ab10:	3201      	adds	r2, #1
 802ab12:	eef1 7a67 	vneg.f32	s15, s15
 802ab16:	4295      	cmp	r5, r2
 802ab18:	ed43 7a02 	vstr	s15, [r3, #-8]
 802ab1c:	f103 0308 	add.w	r3, r3, #8
 802ab20:	d1f4      	bne.n	802ab0c <arm_cfft_f32+0xc4>
 802ab22:	e79a      	b.n	802aa5a <arm_cfft_f32+0x12>
 802ab24:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802ab28:	d0a5      	beq.n	802aa76 <arm_cfft_f32+0x2e>
 802ab2a:	e7aa      	b.n	802aa82 <arm_cfft_f32+0x3a>
 802ab2c:	2d10      	cmp	r5, #16
 802ab2e:	d0b6      	beq.n	802aa9e <arm_cfft_f32+0x56>
 802ab30:	e7a7      	b.n	802aa82 <arm_cfft_f32+0x3a>
 802ab32:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802ab36:	d894      	bhi.n	802aa62 <arm_cfft_f32+0x1a>
 802ab38:	e7aa      	b.n	802aa90 <arm_cfft_f32+0x48>
 802ab3a:	bf00      	nop

0802ab3c <arm_radix8_butterfly_f32>:
 802ab3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ab40:	ed2d 8b10 	vpush	{d8-d15}
 802ab44:	461c      	mov	r4, r3
 802ab46:	b09d      	sub	sp, #116	; 0x74
 802ab48:	4603      	mov	r3, r0
 802ab4a:	3304      	adds	r3, #4
 802ab4c:	ed9f bac4 	vldr	s22, [pc, #784]	; 802ae60 <arm_radix8_butterfly_f32+0x324>
 802ab50:	9019      	str	r0, [sp, #100]	; 0x64
 802ab52:	921a      	str	r2, [sp, #104]	; 0x68
 802ab54:	468b      	mov	fp, r1
 802ab56:	931b      	str	r3, [sp, #108]	; 0x6c
 802ab58:	468a      	mov	sl, r1
 802ab5a:	46a1      	mov	r9, r4
 802ab5c:	4607      	mov	r7, r0
 802ab5e:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802ab62:	ea4f 0843 	mov.w	r8, r3, lsl #1
 802ab66:	eb03 0508 	add.w	r5, r3, r8
 802ab6a:	195c      	adds	r4, r3, r5
 802ab6c:	00de      	lsls	r6, r3, #3
 802ab6e:	191a      	adds	r2, r3, r4
 802ab70:	9600      	str	r6, [sp, #0]
 802ab72:	1898      	adds	r0, r3, r2
 802ab74:	4619      	mov	r1, r3
 802ab76:	9e00      	ldr	r6, [sp, #0]
 802ab78:	9311      	str	r3, [sp, #68]	; 0x44
 802ab7a:	4401      	add	r1, r0
 802ab7c:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 802ab80:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
 802ab84:	19be      	adds	r6, r7, r6
 802ab86:	eb07 05c5 	add.w	r5, r7, r5, lsl #3
 802ab8a:	eb07 04c4 	add.w	r4, r7, r4, lsl #3
 802ab8e:	eb07 00c0 	add.w	r0, r7, r0, lsl #3
 802ab92:	9f00      	ldr	r7, [sp, #0]
 802ab94:	011b      	lsls	r3, r3, #4
 802ab96:	eb06 0e07 	add.w	lr, r6, r7
 802ab9a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 802ab9c:	9302      	str	r3, [sp, #8]
 802ab9e:	3204      	adds	r2, #4
 802aba0:	3104      	adds	r1, #4
 802aba2:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802aba6:	f04f 0c00 	mov.w	ip, #0
 802abaa:	edde 7a00 	vldr	s15, [lr]
 802abae:	edd6 6a00 	vldr	s13, [r6]
 802abb2:	ed95 2a00 	vldr	s4, [r5]
 802abb6:	ed17 aa01 	vldr	s20, [r7, #-4]
 802abba:	edd4 4a00 	vldr	s9, [r4]
 802abbe:	ed90 5a00 	vldr	s10, [r0]
 802abc2:	ed12 7a01 	vldr	s14, [r2, #-4]
 802abc6:	ed51 0a01 	vldr	s1, [r1, #-4]
 802abca:	ee77 8a85 	vadd.f32	s17, s15, s10
 802abce:	ee76 3a87 	vadd.f32	s7, s13, s14
 802abd2:	ee32 4a20 	vadd.f32	s8, s4, s1
 802abd6:	ee3a 3a24 	vadd.f32	s6, s20, s9
 802abda:	ee33 6a84 	vadd.f32	s12, s7, s8
 802abde:	ee73 5a28 	vadd.f32	s11, s6, s17
 802abe2:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802abe6:	ee75 6a86 	vadd.f32	s13, s11, s12
 802abea:	ee75 5ac6 	vsub.f32	s11, s11, s12
 802abee:	ed47 6a01 	vstr	s13, [r7, #-4]
 802abf2:	edc4 5a00 	vstr	s11, [r4]
 802abf6:	ed92 9a00 	vldr	s18, [r2]
 802abfa:	ed95 1a01 	vldr	s2, [r5, #4]
 802abfe:	edd6 5a01 	vldr	s11, [r6, #4]
 802ac02:	ed91 6a00 	vldr	s12, [r1]
 802ac06:	edd7 2a00 	vldr	s5, [r7]
 802ac0a:	edd4 1a01 	vldr	s3, [r4, #4]
 802ac0e:	edde 6a01 	vldr	s13, [lr, #4]
 802ac12:	edd0 9a01 	vldr	s19, [r0, #4]
 802ac16:	ee72 0a60 	vsub.f32	s1, s4, s1
 802ac1a:	ee71 aa46 	vsub.f32	s21, s2, s12
 802ac1e:	ee35 2ac9 	vsub.f32	s4, s11, s18
 802ac22:	ee37 0a60 	vsub.f32	s0, s14, s1
 802ac26:	ee32 8a2a 	vadd.f32	s16, s4, s21
 802ac2a:	ee37 7a20 	vadd.f32	s14, s14, s1
 802ac2e:	ee32 2a6a 	vsub.f32	s4, s4, s21
 802ac32:	ee37 5ac5 	vsub.f32	s10, s15, s10
 802ac36:	ee75 5a89 	vadd.f32	s11, s11, s18
 802ac3a:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802ac3e:	ee7a 4a64 	vsub.f32	s9, s20, s9
 802ac42:	ee31 6a06 	vadd.f32	s12, s2, s12
 802ac46:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802ac4a:	ee32 1aa1 	vadd.f32	s2, s5, s3
 802ac4e:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802ac52:	ee72 1ae1 	vsub.f32	s3, s5, s3
 802ac56:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802ac5a:	ee62 2a0b 	vmul.f32	s5, s4, s22
 802ac5e:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802ac62:	ee33 3a68 	vsub.f32	s6, s6, s17
 802ac66:	ee36 0a88 	vadd.f32	s0, s13, s16
 802ac6a:	ee75 8a86 	vadd.f32	s17, s11, s12
 802ac6e:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802ac72:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802ac76:	ee74 6ae0 	vsub.f32	s13, s9, s1
 802ac7a:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802ac7e:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802ac82:	ee75 4a27 	vadd.f32	s9, s10, s15
 802ac86:	ee71 5a49 	vsub.f32	s11, s2, s18
 802ac8a:	ee31 2a09 	vadd.f32	s4, s2, s18
 802ac8e:	ee75 7a67 	vsub.f32	s15, s10, s15
 802ac92:	ee31 1aa2 	vadd.f32	s2, s3, s5
 802ac96:	ee71 2ae2 	vsub.f32	s5, s3, s5
 802ac9a:	ee73 0a06 	vadd.f32	s1, s6, s12
 802ac9e:	ee75 1ac4 	vsub.f32	s3, s11, s8
 802aca2:	ee36 5a87 	vadd.f32	s10, s13, s14
 802aca6:	ee32 8a28 	vadd.f32	s16, s4, s17
 802acaa:	ee33 6a46 	vsub.f32	s12, s6, s12
 802acae:	ee34 4a25 	vadd.f32	s8, s8, s11
 802acb2:	ee33 3a80 	vadd.f32	s6, s7, s0
 802acb6:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802acba:	ee71 5a64 	vsub.f32	s11, s2, s9
 802acbe:	ee72 6ae7 	vsub.f32	s13, s5, s15
 802acc2:	ee32 2a68 	vsub.f32	s4, s4, s17
 802acc6:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802acca:	ee74 4a81 	vadd.f32	s9, s9, s2
 802acce:	ee77 7aa2 	vadd.f32	s15, s15, s5
 802acd2:	44dc      	add	ip, fp
 802acd4:	45e2      	cmp	sl, ip
 802acd6:	ed87 8a00 	vstr	s16, [r7]
 802acda:	ed84 2a01 	vstr	s4, [r4, #4]
 802acde:	441f      	add	r7, r3
 802ace0:	edce 0a00 	vstr	s1, [lr]
 802ace4:	441c      	add	r4, r3
 802ace6:	ed80 6a00 	vstr	s12, [r0]
 802acea:	edce 1a01 	vstr	s3, [lr, #4]
 802acee:	ed80 4a01 	vstr	s8, [r0, #4]
 802acf2:	449e      	add	lr, r3
 802acf4:	ed86 3a00 	vstr	s6, [r6]
 802acf8:	4418      	add	r0, r3
 802acfa:	ed41 3a01 	vstr	s7, [r1, #-4]
 802acfe:	ed02 5a01 	vstr	s10, [r2, #-4]
 802ad02:	ed85 7a00 	vstr	s14, [r5]
 802ad06:	edc6 5a01 	vstr	s11, [r6, #4]
 802ad0a:	edc1 4a00 	vstr	s9, [r1]
 802ad0e:	441e      	add	r6, r3
 802ad10:	edc2 6a00 	vstr	s13, [r2]
 802ad14:	4419      	add	r1, r3
 802ad16:	edc5 7a01 	vstr	s15, [r5, #4]
 802ad1a:	441a      	add	r2, r3
 802ad1c:	441d      	add	r5, r3
 802ad1e:	f63f af44 	bhi.w	802abaa <arm_radix8_butterfly_f32+0x6e>
 802ad22:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802ad24:	2a07      	cmp	r2, #7
 802ad26:	f240 81f5 	bls.w	802b114 <arm_radix8_butterfly_f32+0x5d8>
 802ad2a:	f108 0101 	add.w	r1, r8, #1
 802ad2e:	188f      	adds	r7, r1, r2
 802ad30:	eb09 0849 	add.w	r8, r9, r9, lsl #1
 802ad34:	19d6      	adds	r6, r2, r7
 802ad36:	eb08 0c09 	add.w	ip, r8, r9
 802ad3a:	1994      	adds	r4, r2, r6
 802ad3c:	eb0c 0e09 	add.w	lr, ip, r9
 802ad40:	4610      	mov	r0, r2
 802ad42:	9701      	str	r7, [sp, #4]
 802ad44:	4420      	add	r0, r4
 802ad46:	eb0e 0709 	add.w	r7, lr, r9
 802ad4a:	1815      	adds	r5, r2, r0
 802ad4c:	eb07 0209 	add.w	r2, r7, r9
 802ad50:	9203      	str	r2, [sp, #12]
 802ad52:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 802ad54:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 802ad58:	9117      	str	r1, [sp, #92]	; 0x5c
 802ad5a:	440a      	add	r2, r1
 802ad5c:	9900      	ldr	r1, [sp, #0]
 802ad5e:	3108      	adds	r1, #8
 802ad60:	9100      	str	r1, [sp, #0]
 802ad62:	9902      	ldr	r1, [sp, #8]
 802ad64:	3108      	adds	r1, #8
 802ad66:	9102      	str	r1, [sp, #8]
 802ad68:	9919      	ldr	r1, [sp, #100]	; 0x64
 802ad6a:	00ff      	lsls	r7, r7, #3
 802ad6c:	9715      	str	r7, [sp, #84]	; 0x54
 802ad6e:	eb01 04c4 	add.w	r4, r1, r4, lsl #3
 802ad72:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 802ad76:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 802ad7a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 802ad7c:	9903      	ldr	r1, [sp, #12]
 802ad7e:	19d7      	adds	r7, r2, r7
 802ad80:	00c9      	lsls	r1, r1, #3
 802ad82:	9114      	str	r1, [sp, #80]	; 0x50
 802ad84:	9710      	str	r7, [sp, #64]	; 0x40
 802ad86:	9919      	ldr	r1, [sp, #100]	; 0x64
 802ad88:	9f00      	ldr	r7, [sp, #0]
 802ad8a:	19cf      	adds	r7, r1, r7
 802ad8c:	970d      	str	r7, [sp, #52]	; 0x34
 802ad8e:	9f02      	ldr	r7, [sp, #8]
 802ad90:	19cf      	adds	r7, r1, r7
 802ad92:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802ad96:	970c      	str	r7, [sp, #48]	; 0x30
 802ad98:	9f01      	ldr	r7, [sp, #4]
 802ad9a:	f8cd e058 	str.w	lr, [sp, #88]	; 0x58
 802ad9e:	3504      	adds	r5, #4
 802ada0:	3004      	adds	r0, #4
 802ada2:	eb01 0ec7 	add.w	lr, r1, r7, lsl #3
 802ada6:	9508      	str	r5, [sp, #32]
 802ada8:	9009      	str	r0, [sp, #36]	; 0x24
 802adaa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802adac:	981a      	ldr	r0, [sp, #104]	; 0x68
 802adae:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
 802adb2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 802adb6:	eb01 0ec6 	add.w	lr, r1, r6, lsl #3
 802adba:	9e14      	ldr	r6, [sp, #80]	; 0x50
 802adbc:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
 802adc0:	1945      	adds	r5, r0, r5
 802adc2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802adc6:	460f      	mov	r7, r1
 802adc8:	3404      	adds	r4, #4
 802adca:	4641      	mov	r1, r8
 802adcc:	1841      	adds	r1, r0, r1
 802adce:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 802add2:	940a      	str	r4, [sp, #40]	; 0x28
 802add4:	eb00 0c06 	add.w	ip, r0, r6
 802add8:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 802addc:	9e15      	ldr	r6, [sp, #84]	; 0x54
 802adde:	9506      	str	r5, [sp, #24]
 802ade0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802ade2:	9105      	str	r1, [sp, #20]
 802ade4:	4639      	mov	r1, r7
 802ade6:	1905      	adds	r5, r0, r4
 802ade8:	3108      	adds	r1, #8
 802adea:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802adec:	9507      	str	r5, [sp, #28]
 802adee:	910f      	str	r1, [sp, #60]	; 0x3c
 802adf0:	ea4f 1509 	mov.w	r5, r9, lsl #4
 802adf4:	2101      	movs	r1, #1
 802adf6:	eb00 0e06 	add.w	lr, r0, r6
 802adfa:	9518      	str	r5, [sp, #96]	; 0x60
 802adfc:	9404      	str	r4, [sp, #16]
 802adfe:	9103      	str	r1, [sp, #12]
 802ae00:	4620      	mov	r0, r4
 802ae02:	4689      	mov	r9, r1
 802ae04:	9e06      	ldr	r6, [sp, #24]
 802ae06:	ed90 fa00 	vldr	s30, [r0]
 802ae0a:	edd6 7a01 	vldr	s15, [r6, #4]
 802ae0e:	edd0 ba01 	vldr	s23, [r0, #4]
 802ae12:	edcd 7a00 	vstr	s15, [sp]
 802ae16:	a80d      	add	r0, sp, #52	; 0x34
 802ae18:	edde 7a01 	vldr	s15, [lr, #4]
 802ae1c:	9c05      	ldr	r4, [sp, #20]
 802ae1e:	9d07      	ldr	r5, [sp, #28]
 802ae20:	edd2 fa00 	vldr	s31, [r2]
 802ae24:	ed92 ca01 	vldr	s24, [r2, #4]
 802ae28:	edcd 7a01 	vstr	s15, [sp, #4]
 802ae2c:	c807      	ldmia	r0, {r0, r1, r2}
 802ae2e:	eddc 7a01 	vldr	s15, [ip, #4]
 802ae32:	edd4 ea00 	vldr	s29, [r4]
 802ae36:	ed95 ea00 	vldr	s28, [r5]
 802ae3a:	edd6 da00 	vldr	s27, [r6]
 802ae3e:	edd4 aa01 	vldr	s21, [r4, #4]
 802ae42:	ed95 aa01 	vldr	s20, [r5, #4]
 802ae46:	ed9e da00 	vldr	s26, [lr]
 802ae4a:	eddc ca00 	vldr	s25, [ip]
 802ae4e:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802ae52:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802ae54:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 802ae56:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802ae58:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802ae5a:	edcd 7a02 	vstr	s15, [sp, #8]
 802ae5e:	e001      	b.n	802ae64 <arm_radix8_butterfly_f32+0x328>
 802ae60:	3f3504f3 	.word	0x3f3504f3
 802ae64:	ed16 6a01 	vldr	s12, [r6, #-4]
 802ae68:	ed91 5a00 	vldr	s10, [r1]
 802ae6c:	ed57 9a01 	vldr	s19, [r7, #-4]
 802ae70:	edd5 7a00 	vldr	s15, [r5]
 802ae74:	ed18 7a01 	vldr	s14, [r8, #-4]
 802ae78:	edd2 3a00 	vldr	s7, [r2]
 802ae7c:	ed94 3a00 	vldr	s6, [r4]
 802ae80:	ed90 2a00 	vldr	s4, [r0]
 802ae84:	ed92 0a01 	vldr	s0, [r2, #4]
 802ae88:	ee33 8a85 	vadd.f32	s16, s7, s10
 802ae8c:	ee32 1a06 	vadd.f32	s2, s4, s12
 802ae90:	ee33 4a29 	vadd.f32	s8, s6, s19
 802ae94:	ee77 4a87 	vadd.f32	s9, s15, s14
 802ae98:	ee78 1a04 	vadd.f32	s3, s16, s8
 802ae9c:	ee71 6a24 	vadd.f32	s13, s2, s9
 802aea0:	ee32 2a46 	vsub.f32	s4, s4, s12
 802aea4:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802aea8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aeac:	ed82 6a00 	vstr	s12, [r2]
 802aeb0:	edd5 8a01 	vldr	s17, [r5, #4]
 802aeb4:	ed90 9a01 	vldr	s18, [r0, #4]
 802aeb8:	edd6 2a00 	vldr	s5, [r6]
 802aebc:	ed98 7a00 	vldr	s14, [r8]
 802aec0:	edd4 0a01 	vldr	s1, [r4, #4]
 802aec4:	ed91 6a01 	vldr	s12, [r1, #4]
 802aec8:	edd7 5a00 	vldr	s11, [r7]
 802aecc:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802aed0:	ee33 3a69 	vsub.f32	s6, s6, s19
 802aed4:	ee39 5a62 	vsub.f32	s10, s18, s5
 802aed8:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802aedc:	ee38 4a44 	vsub.f32	s8, s16, s8
 802aee0:	ee38 7a87 	vadd.f32	s14, s17, s14
 802aee4:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802aee8:	ee79 2a22 	vadd.f32	s5, s18, s5
 802aeec:	ee75 8a69 	vsub.f32	s17, s10, s19
 802aef0:	ee32 9a27 	vadd.f32	s18, s4, s15
 802aef4:	ee35 5a29 	vadd.f32	s10, s10, s19
 802aef8:	ee72 7a67 	vsub.f32	s15, s4, s15
 802aefc:	ee30 2a06 	vadd.f32	s4, s0, s12
 802af00:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802af04:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802af08:	ee32 9a08 	vadd.f32	s18, s4, s16
 802af0c:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802af10:	ee32 2a48 	vsub.f32	s4, s4, s16
 802af14:	ee71 4a64 	vsub.f32	s9, s2, s9
 802af18:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802af1c:	ee32 1a87 	vadd.f32	s2, s5, s14
 802af20:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802af24:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802af28:	ee30 6a46 	vsub.f32	s12, s0, s12
 802af2c:	ee73 0a29 	vadd.f32	s1, s6, s19
 802af30:	ee36 0a28 	vadd.f32	s0, s12, s17
 802af34:	ee33 3a69 	vsub.f32	s6, s6, s19
 802af38:	ee32 7a64 	vsub.f32	s14, s4, s9
 802af3c:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802af40:	ee36 6a68 	vsub.f32	s12, s12, s17
 802af44:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802af48:	ee75 8a85 	vadd.f32	s17, s11, s10
 802af4c:	ee74 3a22 	vadd.f32	s7, s8, s5
 802af50:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802af54:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802af58:	ee79 1a41 	vsub.f32	s3, s18, s2
 802af5c:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802af60:	ee76 5a43 	vsub.f32	s11, s12, s6
 802af64:	ee74 2a62 	vsub.f32	s5, s8, s5
 802af68:	ee74 4a82 	vadd.f32	s9, s9, s4
 802af6c:	ee30 4a60 	vsub.f32	s8, s0, s1
 802af70:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802af74:	ee30 0a80 	vadd.f32	s0, s1, s0
 802af78:	ee77 9a85 	vadd.f32	s19, s15, s10
 802af7c:	ee33 6a06 	vadd.f32	s12, s6, s12
 802af80:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802af84:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802af88:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802af8c:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802af90:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802af94:	ee39 1a01 	vadd.f32	s2, s18, s2
 802af98:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802af9c:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802afa0:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802afa4:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802afa8:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802afac:	ee35 3a03 	vadd.f32	s6, s10, s6
 802afb0:	ee72 6a66 	vsub.f32	s13, s4, s13
 802afb4:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802afb8:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802afbc:	ed9d 4a02 	vldr	s8, [sp, #8]
 802afc0:	ed82 1a01 	vstr	s2, [r2, #4]
 802afc4:	ee77 3a63 	vsub.f32	s7, s14, s7
 802afc8:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802afcc:	ed9d 7a01 	vldr	s14, [sp, #4]
 802afd0:	ed81 3a00 	vstr	s6, [r1]
 802afd4:	ee30 9a89 	vadd.f32	s18, s1, s18
 802afd8:	ee32 2a05 	vadd.f32	s4, s4, s10
 802afdc:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802afe0:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802afe4:	ee67 2a22 	vmul.f32	s5, s14, s5
 802afe8:	ee64 1a00 	vmul.f32	s3, s8, s0
 802afec:	ee27 7a24 	vmul.f32	s14, s14, s9
 802aff0:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802aff4:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802aff8:	ee64 8a28 	vmul.f32	s17, s8, s17
 802affc:	ed9d 4a00 	vldr	s8, [sp]
 802b000:	edc1 6a01 	vstr	s13, [r1, #4]
 802b004:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802b008:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802b00c:	ee64 9a29 	vmul.f32	s19, s8, s19
 802b010:	ee24 4a25 	vmul.f32	s8, s8, s11
 802b014:	ee30 7a87 	vadd.f32	s14, s1, s14
 802b018:	ee74 4a84 	vadd.f32	s9, s9, s8
 802b01c:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802b020:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802b024:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802b028:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802b02c:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802b030:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802b034:	ee75 1a21 	vadd.f32	s3, s10, s3
 802b038:	ee30 0a68 	vsub.f32	s0, s0, s17
 802b03c:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802b040:	ee70 0a84 	vadd.f32	s1, s1, s8
 802b044:	ee36 6a67 	vsub.f32	s12, s12, s15
 802b048:	44d9      	add	r9, fp
 802b04a:	45ca      	cmp	sl, r9
 802b04c:	ed84 9a00 	vstr	s18, [r4]
 802b050:	edc4 3a01 	vstr	s7, [r4, #4]
 802b054:	441a      	add	r2, r3
 802b056:	ed07 7a01 	vstr	s14, [r7, #-4]
 802b05a:	edc7 2a00 	vstr	s5, [r7]
 802b05e:	4419      	add	r1, r3
 802b060:	ed80 2a00 	vstr	s4, [r0]
 802b064:	ed80 8a01 	vstr	s16, [r0, #4]
 802b068:	441c      	add	r4, r3
 802b06a:	ed48 1a01 	vstr	s3, [r8, #-4]
 802b06e:	ed88 0a00 	vstr	s0, [r8]
 802b072:	441f      	add	r7, r3
 802b074:	ed46 4a01 	vstr	s9, [r6, #-4]
 802b078:	4418      	add	r0, r3
 802b07a:	edc6 9a00 	vstr	s19, [r6]
 802b07e:	4498      	add	r8, r3
 802b080:	edc5 0a00 	vstr	s1, [r5]
 802b084:	ed85 6a01 	vstr	s12, [r5, #4]
 802b088:	441e      	add	r6, r3
 802b08a:	441d      	add	r5, r3
 802b08c:	f63f aeea 	bhi.w	802ae64 <arm_radix8_butterfly_f32+0x328>
 802b090:	9a03      	ldr	r2, [sp, #12]
 802b092:	9818      	ldr	r0, [sp, #96]	; 0x60
 802b094:	3201      	adds	r2, #1
 802b096:	4611      	mov	r1, r2
 802b098:	9203      	str	r2, [sp, #12]
 802b09a:	9a04      	ldr	r2, [sp, #16]
 802b09c:	4402      	add	r2, r0
 802b09e:	9204      	str	r2, [sp, #16]
 802b0a0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802b0a2:	9a05      	ldr	r2, [sp, #20]
 802b0a4:	4402      	add	r2, r0
 802b0a6:	9205      	str	r2, [sp, #20]
 802b0a8:	9812      	ldr	r0, [sp, #72]	; 0x48
 802b0aa:	9a07      	ldr	r2, [sp, #28]
 802b0ac:	4402      	add	r2, r0
 802b0ae:	9207      	str	r2, [sp, #28]
 802b0b0:	9816      	ldr	r0, [sp, #88]	; 0x58
 802b0b2:	9a06      	ldr	r2, [sp, #24]
 802b0b4:	4402      	add	r2, r0
 802b0b6:	9206      	str	r2, [sp, #24]
 802b0b8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 802b0ba:	4496      	add	lr, r2
 802b0bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802b0be:	4494      	add	ip, r2
 802b0c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802b0c2:	3208      	adds	r2, #8
 802b0c4:	920f      	str	r2, [sp, #60]	; 0x3c
 802b0c6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802b0c8:	3208      	adds	r2, #8
 802b0ca:	920e      	str	r2, [sp, #56]	; 0x38
 802b0cc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802b0ce:	3208      	adds	r2, #8
 802b0d0:	920d      	str	r2, [sp, #52]	; 0x34
 802b0d2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802b0d4:	3208      	adds	r2, #8
 802b0d6:	920c      	str	r2, [sp, #48]	; 0x30
 802b0d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802b0da:	3208      	adds	r2, #8
 802b0dc:	920b      	str	r2, [sp, #44]	; 0x2c
 802b0de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802b0e0:	3208      	adds	r2, #8
 802b0e2:	920a      	str	r2, [sp, #40]	; 0x28
 802b0e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b0e6:	3208      	adds	r2, #8
 802b0e8:	9209      	str	r2, [sp, #36]	; 0x24
 802b0ea:	9a08      	ldr	r2, [sp, #32]
 802b0ec:	3208      	adds	r2, #8
 802b0ee:	9208      	str	r2, [sp, #32]
 802b0f0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802b0f2:	9811      	ldr	r0, [sp, #68]	; 0x44
 802b0f4:	4288      	cmp	r0, r1
 802b0f6:	4622      	mov	r2, r4
 802b0f8:	d007      	beq.n	802b10a <arm_radix8_butterfly_f32+0x5ce>
 802b0fa:	9817      	ldr	r0, [sp, #92]	; 0x5c
 802b0fc:	f8dd 900c 	ldr.w	r9, [sp, #12]
 802b100:	4621      	mov	r1, r4
 802b102:	4401      	add	r1, r0
 802b104:	9110      	str	r1, [sp, #64]	; 0x40
 802b106:	9804      	ldr	r0, [sp, #16]
 802b108:	e67c      	b.n	802ae04 <arm_radix8_butterfly_f32+0x2c8>
 802b10a:	4683      	mov	fp, r0
 802b10c:	f8bd 905c 	ldrh.w	r9, [sp, #92]	; 0x5c
 802b110:	9f19      	ldr	r7, [sp, #100]	; 0x64
 802b112:	e524      	b.n	802ab5e <arm_radix8_butterfly_f32+0x22>
 802b114:	b01d      	add	sp, #116	; 0x74
 802b116:	ecbd 8b10 	vpop	{d8-d15}
 802b11a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b11e:	bf00      	nop

0802b120 <__aeabi_atexit>:
 802b120:	460b      	mov	r3, r1
 802b122:	4601      	mov	r1, r0
 802b124:	4618      	mov	r0, r3
 802b126:	f000 bf71 	b.w	802c00c <__cxa_atexit>

0802b12a <_ZdlPvj>:
 802b12a:	f000 b812 	b.w	802b152 <_ZdlPv>

0802b12e <__cxa_guard_acquire>:
 802b12e:	6803      	ldr	r3, [r0, #0]
 802b130:	07db      	lsls	r3, r3, #31
 802b132:	d406      	bmi.n	802b142 <__cxa_guard_acquire+0x14>
 802b134:	7843      	ldrb	r3, [r0, #1]
 802b136:	b103      	cbz	r3, 802b13a <__cxa_guard_acquire+0xc>
 802b138:	deff      	udf	#255	; 0xff
 802b13a:	2301      	movs	r3, #1
 802b13c:	7043      	strb	r3, [r0, #1]
 802b13e:	4618      	mov	r0, r3
 802b140:	4770      	bx	lr
 802b142:	2000      	movs	r0, #0
 802b144:	4770      	bx	lr

0802b146 <__cxa_guard_release>:
 802b146:	2301      	movs	r3, #1
 802b148:	6003      	str	r3, [r0, #0]
 802b14a:	4770      	bx	lr

0802b14c <__cxa_pure_virtual>:
 802b14c:	b508      	push	{r3, lr}
 802b14e:	f000 f80f 	bl	802b170 <_ZSt9terminatev>

0802b152 <_ZdlPv>:
 802b152:	f001 b8a7 	b.w	802c2a4 <free>

0802b156 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802b156:	b508      	push	{r3, lr}
 802b158:	4780      	blx	r0
 802b15a:	f000 ff2b 	bl	802bfb4 <abort>
	...

0802b160 <_ZSt13get_terminatev>:
 802b160:	4b02      	ldr	r3, [pc, #8]	; (802b16c <_ZSt13get_terminatev+0xc>)
 802b162:	6818      	ldr	r0, [r3, #0]
 802b164:	f3bf 8f5b 	dmb	ish
 802b168:	4770      	bx	lr
 802b16a:	bf00      	nop
 802b16c:	20000110 	.word	0x20000110

0802b170 <_ZSt9terminatev>:
 802b170:	b508      	push	{r3, lr}
 802b172:	f7ff fff5 	bl	802b160 <_ZSt13get_terminatev>
 802b176:	f7ff ffee 	bl	802b156 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802b17c <pow>:
 802b17c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b17e:	ed2d 8b02 	vpush	{d8}
 802b182:	eeb0 8a40 	vmov.f32	s16, s0
 802b186:	eef0 8a60 	vmov.f32	s17, s1
 802b18a:	ec55 4b11 	vmov	r4, r5, d1
 802b18e:	f000 f867 	bl	802b260 <__ieee754_pow>
 802b192:	4622      	mov	r2, r4
 802b194:	462b      	mov	r3, r5
 802b196:	4620      	mov	r0, r4
 802b198:	4629      	mov	r1, r5
 802b19a:	ec57 6b10 	vmov	r6, r7, d0
 802b19e:	f7d5 fd35 	bl	8000c0c <__aeabi_dcmpun>
 802b1a2:	2800      	cmp	r0, #0
 802b1a4:	d13b      	bne.n	802b21e <pow+0xa2>
 802b1a6:	ec51 0b18 	vmov	r0, r1, d8
 802b1aa:	2200      	movs	r2, #0
 802b1ac:	2300      	movs	r3, #0
 802b1ae:	f7d5 fcfb 	bl	8000ba8 <__aeabi_dcmpeq>
 802b1b2:	b1b8      	cbz	r0, 802b1e4 <pow+0x68>
 802b1b4:	2200      	movs	r2, #0
 802b1b6:	2300      	movs	r3, #0
 802b1b8:	4620      	mov	r0, r4
 802b1ba:	4629      	mov	r1, r5
 802b1bc:	f7d5 fcf4 	bl	8000ba8 <__aeabi_dcmpeq>
 802b1c0:	2800      	cmp	r0, #0
 802b1c2:	d146      	bne.n	802b252 <pow+0xd6>
 802b1c4:	ec45 4b10 	vmov	d0, r4, r5
 802b1c8:	f000 fe63 	bl	802be92 <finite>
 802b1cc:	b338      	cbz	r0, 802b21e <pow+0xa2>
 802b1ce:	2200      	movs	r2, #0
 802b1d0:	2300      	movs	r3, #0
 802b1d2:	4620      	mov	r0, r4
 802b1d4:	4629      	mov	r1, r5
 802b1d6:	f7d5 fcf1 	bl	8000bbc <__aeabi_dcmplt>
 802b1da:	b300      	cbz	r0, 802b21e <pow+0xa2>
 802b1dc:	f000 ff24 	bl	802c028 <__errno>
 802b1e0:	2322      	movs	r3, #34	; 0x22
 802b1e2:	e01b      	b.n	802b21c <pow+0xa0>
 802b1e4:	ec47 6b10 	vmov	d0, r6, r7
 802b1e8:	f000 fe53 	bl	802be92 <finite>
 802b1ec:	b9e0      	cbnz	r0, 802b228 <pow+0xac>
 802b1ee:	eeb0 0a48 	vmov.f32	s0, s16
 802b1f2:	eef0 0a68 	vmov.f32	s1, s17
 802b1f6:	f000 fe4c 	bl	802be92 <finite>
 802b1fa:	b1a8      	cbz	r0, 802b228 <pow+0xac>
 802b1fc:	ec45 4b10 	vmov	d0, r4, r5
 802b200:	f000 fe47 	bl	802be92 <finite>
 802b204:	b180      	cbz	r0, 802b228 <pow+0xac>
 802b206:	4632      	mov	r2, r6
 802b208:	463b      	mov	r3, r7
 802b20a:	4630      	mov	r0, r6
 802b20c:	4639      	mov	r1, r7
 802b20e:	f7d5 fcfd 	bl	8000c0c <__aeabi_dcmpun>
 802b212:	2800      	cmp	r0, #0
 802b214:	d0e2      	beq.n	802b1dc <pow+0x60>
 802b216:	f000 ff07 	bl	802c028 <__errno>
 802b21a:	2321      	movs	r3, #33	; 0x21
 802b21c:	6003      	str	r3, [r0, #0]
 802b21e:	ecbd 8b02 	vpop	{d8}
 802b222:	ec47 6b10 	vmov	d0, r6, r7
 802b226:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802b228:	2200      	movs	r2, #0
 802b22a:	2300      	movs	r3, #0
 802b22c:	4630      	mov	r0, r6
 802b22e:	4639      	mov	r1, r7
 802b230:	f7d5 fcba 	bl	8000ba8 <__aeabi_dcmpeq>
 802b234:	2800      	cmp	r0, #0
 802b236:	d0f2      	beq.n	802b21e <pow+0xa2>
 802b238:	eeb0 0a48 	vmov.f32	s0, s16
 802b23c:	eef0 0a68 	vmov.f32	s1, s17
 802b240:	f000 fe27 	bl	802be92 <finite>
 802b244:	2800      	cmp	r0, #0
 802b246:	d0ea      	beq.n	802b21e <pow+0xa2>
 802b248:	ec45 4b10 	vmov	d0, r4, r5
 802b24c:	f000 fe21 	bl	802be92 <finite>
 802b250:	e7c3      	b.n	802b1da <pow+0x5e>
 802b252:	4f01      	ldr	r7, [pc, #4]	; (802b258 <pow+0xdc>)
 802b254:	2600      	movs	r6, #0
 802b256:	e7e2      	b.n	802b21e <pow+0xa2>
 802b258:	3ff00000 	.word	0x3ff00000
 802b25c:	00000000 	.word	0x00000000

0802b260 <__ieee754_pow>:
 802b260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b264:	ed2d 8b06 	vpush	{d8-d10}
 802b268:	b089      	sub	sp, #36	; 0x24
 802b26a:	ed8d 1b00 	vstr	d1, [sp]
 802b26e:	e9dd 2900 	ldrd	r2, r9, [sp]
 802b272:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 802b276:	ea58 0102 	orrs.w	r1, r8, r2
 802b27a:	ec57 6b10 	vmov	r6, r7, d0
 802b27e:	d115      	bne.n	802b2ac <__ieee754_pow+0x4c>
 802b280:	19b3      	adds	r3, r6, r6
 802b282:	f487 2200 	eor.w	r2, r7, #524288	; 0x80000
 802b286:	4152      	adcs	r2, r2
 802b288:	4299      	cmp	r1, r3
 802b28a:	4b89      	ldr	r3, [pc, #548]	; (802b4b0 <__ieee754_pow+0x250>)
 802b28c:	4193      	sbcs	r3, r2
 802b28e:	f080 84d2 	bcs.w	802bc36 <__ieee754_pow+0x9d6>
 802b292:	e9dd 2300 	ldrd	r2, r3, [sp]
 802b296:	4630      	mov	r0, r6
 802b298:	4639      	mov	r1, r7
 802b29a:	f7d5 f867 	bl	800036c <__adddf3>
 802b29e:	ec41 0b10 	vmov	d0, r0, r1
 802b2a2:	b009      	add	sp, #36	; 0x24
 802b2a4:	ecbd 8b06 	vpop	{d8-d10}
 802b2a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b2ac:	4b81      	ldr	r3, [pc, #516]	; (802b4b4 <__ieee754_pow+0x254>)
 802b2ae:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 802b2b2:	429c      	cmp	r4, r3
 802b2b4:	ee10 aa10 	vmov	sl, s0
 802b2b8:	463d      	mov	r5, r7
 802b2ba:	dc06      	bgt.n	802b2ca <__ieee754_pow+0x6a>
 802b2bc:	d101      	bne.n	802b2c2 <__ieee754_pow+0x62>
 802b2be:	2e00      	cmp	r6, #0
 802b2c0:	d1e7      	bne.n	802b292 <__ieee754_pow+0x32>
 802b2c2:	4598      	cmp	r8, r3
 802b2c4:	dc01      	bgt.n	802b2ca <__ieee754_pow+0x6a>
 802b2c6:	d10f      	bne.n	802b2e8 <__ieee754_pow+0x88>
 802b2c8:	b172      	cbz	r2, 802b2e8 <__ieee754_pow+0x88>
 802b2ca:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 802b2ce:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 802b2d2:	ea55 050a 	orrs.w	r5, r5, sl
 802b2d6:	d1dc      	bne.n	802b292 <__ieee754_pow+0x32>
 802b2d8:	e9dd 3200 	ldrd	r3, r2, [sp]
 802b2dc:	18db      	adds	r3, r3, r3
 802b2de:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 802b2e2:	4152      	adcs	r2, r2
 802b2e4:	429d      	cmp	r5, r3
 802b2e6:	e7d0      	b.n	802b28a <__ieee754_pow+0x2a>
 802b2e8:	2d00      	cmp	r5, #0
 802b2ea:	da3b      	bge.n	802b364 <__ieee754_pow+0x104>
 802b2ec:	4b72      	ldr	r3, [pc, #456]	; (802b4b8 <__ieee754_pow+0x258>)
 802b2ee:	4598      	cmp	r8, r3
 802b2f0:	dc51      	bgt.n	802b396 <__ieee754_pow+0x136>
 802b2f2:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 802b2f6:	4598      	cmp	r8, r3
 802b2f8:	f340 84ac 	ble.w	802bc54 <__ieee754_pow+0x9f4>
 802b2fc:	ea4f 5328 	mov.w	r3, r8, asr #20
 802b300:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 802b304:	2b14      	cmp	r3, #20
 802b306:	dd0f      	ble.n	802b328 <__ieee754_pow+0xc8>
 802b308:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 802b30c:	fa22 f103 	lsr.w	r1, r2, r3
 802b310:	fa01 f303 	lsl.w	r3, r1, r3
 802b314:	4293      	cmp	r3, r2
 802b316:	f040 849d 	bne.w	802bc54 <__ieee754_pow+0x9f4>
 802b31a:	f001 0101 	and.w	r1, r1, #1
 802b31e:	f1c1 0302 	rsb	r3, r1, #2
 802b322:	9304      	str	r3, [sp, #16]
 802b324:	b182      	cbz	r2, 802b348 <__ieee754_pow+0xe8>
 802b326:	e05f      	b.n	802b3e8 <__ieee754_pow+0x188>
 802b328:	2a00      	cmp	r2, #0
 802b32a:	d15b      	bne.n	802b3e4 <__ieee754_pow+0x184>
 802b32c:	f1c3 0314 	rsb	r3, r3, #20
 802b330:	fa48 f103 	asr.w	r1, r8, r3
 802b334:	fa01 f303 	lsl.w	r3, r1, r3
 802b338:	4543      	cmp	r3, r8
 802b33a:	f040 8488 	bne.w	802bc4e <__ieee754_pow+0x9ee>
 802b33e:	f001 0101 	and.w	r1, r1, #1
 802b342:	f1c1 0302 	rsb	r3, r1, #2
 802b346:	9304      	str	r3, [sp, #16]
 802b348:	4b5c      	ldr	r3, [pc, #368]	; (802b4bc <__ieee754_pow+0x25c>)
 802b34a:	4598      	cmp	r8, r3
 802b34c:	d132      	bne.n	802b3b4 <__ieee754_pow+0x154>
 802b34e:	f1b9 0f00 	cmp.w	r9, #0
 802b352:	f280 8478 	bge.w	802bc46 <__ieee754_pow+0x9e6>
 802b356:	4959      	ldr	r1, [pc, #356]	; (802b4bc <__ieee754_pow+0x25c>)
 802b358:	4632      	mov	r2, r6
 802b35a:	463b      	mov	r3, r7
 802b35c:	2000      	movs	r0, #0
 802b35e:	f7d5 fae5 	bl	800092c <__aeabi_ddiv>
 802b362:	e79c      	b.n	802b29e <__ieee754_pow+0x3e>
 802b364:	2300      	movs	r3, #0
 802b366:	9304      	str	r3, [sp, #16]
 802b368:	2a00      	cmp	r2, #0
 802b36a:	d13d      	bne.n	802b3e8 <__ieee754_pow+0x188>
 802b36c:	4b51      	ldr	r3, [pc, #324]	; (802b4b4 <__ieee754_pow+0x254>)
 802b36e:	4598      	cmp	r8, r3
 802b370:	d1ea      	bne.n	802b348 <__ieee754_pow+0xe8>
 802b372:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 802b376:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 802b37a:	ea53 030a 	orrs.w	r3, r3, sl
 802b37e:	f000 845a 	beq.w	802bc36 <__ieee754_pow+0x9d6>
 802b382:	4b4f      	ldr	r3, [pc, #316]	; (802b4c0 <__ieee754_pow+0x260>)
 802b384:	429c      	cmp	r4, r3
 802b386:	dd08      	ble.n	802b39a <__ieee754_pow+0x13a>
 802b388:	f1b9 0f00 	cmp.w	r9, #0
 802b38c:	f2c0 8457 	blt.w	802bc3e <__ieee754_pow+0x9de>
 802b390:	e9dd 0100 	ldrd	r0, r1, [sp]
 802b394:	e783      	b.n	802b29e <__ieee754_pow+0x3e>
 802b396:	2302      	movs	r3, #2
 802b398:	e7e5      	b.n	802b366 <__ieee754_pow+0x106>
 802b39a:	f1b9 0f00 	cmp.w	r9, #0
 802b39e:	f04f 0000 	mov.w	r0, #0
 802b3a2:	f04f 0100 	mov.w	r1, #0
 802b3a6:	f6bf af7a 	bge.w	802b29e <__ieee754_pow+0x3e>
 802b3aa:	e9dd 0300 	ldrd	r0, r3, [sp]
 802b3ae:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 802b3b2:	e774      	b.n	802b29e <__ieee754_pow+0x3e>
 802b3b4:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 802b3b8:	d106      	bne.n	802b3c8 <__ieee754_pow+0x168>
 802b3ba:	4632      	mov	r2, r6
 802b3bc:	463b      	mov	r3, r7
 802b3be:	4630      	mov	r0, r6
 802b3c0:	4639      	mov	r1, r7
 802b3c2:	f7d5 f989 	bl	80006d8 <__aeabi_dmul>
 802b3c6:	e76a      	b.n	802b29e <__ieee754_pow+0x3e>
 802b3c8:	4b3e      	ldr	r3, [pc, #248]	; (802b4c4 <__ieee754_pow+0x264>)
 802b3ca:	4599      	cmp	r9, r3
 802b3cc:	d10c      	bne.n	802b3e8 <__ieee754_pow+0x188>
 802b3ce:	2d00      	cmp	r5, #0
 802b3d0:	db0a      	blt.n	802b3e8 <__ieee754_pow+0x188>
 802b3d2:	ec47 6b10 	vmov	d0, r6, r7
 802b3d6:	b009      	add	sp, #36	; 0x24
 802b3d8:	ecbd 8b06 	vpop	{d8-d10}
 802b3dc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b3e0:	f000 bc6c 	b.w	802bcbc <__ieee754_sqrt>
 802b3e4:	2300      	movs	r3, #0
 802b3e6:	9304      	str	r3, [sp, #16]
 802b3e8:	ec47 6b10 	vmov	d0, r6, r7
 802b3ec:	f000 fd48 	bl	802be80 <fabs>
 802b3f0:	ec51 0b10 	vmov	r0, r1, d0
 802b3f4:	f1ba 0f00 	cmp.w	sl, #0
 802b3f8:	d129      	bne.n	802b44e <__ieee754_pow+0x1ee>
 802b3fa:	b124      	cbz	r4, 802b406 <__ieee754_pow+0x1a6>
 802b3fc:	4b2f      	ldr	r3, [pc, #188]	; (802b4bc <__ieee754_pow+0x25c>)
 802b3fe:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 802b402:	429a      	cmp	r2, r3
 802b404:	d123      	bne.n	802b44e <__ieee754_pow+0x1ee>
 802b406:	f1b9 0f00 	cmp.w	r9, #0
 802b40a:	da05      	bge.n	802b418 <__ieee754_pow+0x1b8>
 802b40c:	4602      	mov	r2, r0
 802b40e:	460b      	mov	r3, r1
 802b410:	2000      	movs	r0, #0
 802b412:	492a      	ldr	r1, [pc, #168]	; (802b4bc <__ieee754_pow+0x25c>)
 802b414:	f7d5 fa8a 	bl	800092c <__aeabi_ddiv>
 802b418:	2d00      	cmp	r5, #0
 802b41a:	f6bf af40 	bge.w	802b29e <__ieee754_pow+0x3e>
 802b41e:	9b04      	ldr	r3, [sp, #16]
 802b420:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 802b424:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 802b428:	4323      	orrs	r3, r4
 802b42a:	d108      	bne.n	802b43e <__ieee754_pow+0x1de>
 802b42c:	4602      	mov	r2, r0
 802b42e:	460b      	mov	r3, r1
 802b430:	4610      	mov	r0, r2
 802b432:	4619      	mov	r1, r3
 802b434:	f7d4 ff98 	bl	8000368 <__aeabi_dsub>
 802b438:	4602      	mov	r2, r0
 802b43a:	460b      	mov	r3, r1
 802b43c:	e78f      	b.n	802b35e <__ieee754_pow+0xfe>
 802b43e:	9b04      	ldr	r3, [sp, #16]
 802b440:	2b01      	cmp	r3, #1
 802b442:	f47f af2c 	bne.w	802b29e <__ieee754_pow+0x3e>
 802b446:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 802b44a:	4619      	mov	r1, r3
 802b44c:	e727      	b.n	802b29e <__ieee754_pow+0x3e>
 802b44e:	0feb      	lsrs	r3, r5, #31
 802b450:	3b01      	subs	r3, #1
 802b452:	9306      	str	r3, [sp, #24]
 802b454:	9a06      	ldr	r2, [sp, #24]
 802b456:	9b04      	ldr	r3, [sp, #16]
 802b458:	4313      	orrs	r3, r2
 802b45a:	d102      	bne.n	802b462 <__ieee754_pow+0x202>
 802b45c:	4632      	mov	r2, r6
 802b45e:	463b      	mov	r3, r7
 802b460:	e7e6      	b.n	802b430 <__ieee754_pow+0x1d0>
 802b462:	4b19      	ldr	r3, [pc, #100]	; (802b4c8 <__ieee754_pow+0x268>)
 802b464:	4598      	cmp	r8, r3
 802b466:	f340 80fb 	ble.w	802b660 <__ieee754_pow+0x400>
 802b46a:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 802b46e:	4598      	cmp	r8, r3
 802b470:	4b13      	ldr	r3, [pc, #76]	; (802b4c0 <__ieee754_pow+0x260>)
 802b472:	dd0c      	ble.n	802b48e <__ieee754_pow+0x22e>
 802b474:	429c      	cmp	r4, r3
 802b476:	dc0f      	bgt.n	802b498 <__ieee754_pow+0x238>
 802b478:	f1b9 0f00 	cmp.w	r9, #0
 802b47c:	da0f      	bge.n	802b49e <__ieee754_pow+0x23e>
 802b47e:	2000      	movs	r0, #0
 802b480:	b009      	add	sp, #36	; 0x24
 802b482:	ecbd 8b06 	vpop	{d8-d10}
 802b486:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b48a:	f000 bcf0 	b.w	802be6e <__math_oflow>
 802b48e:	429c      	cmp	r4, r3
 802b490:	dbf2      	blt.n	802b478 <__ieee754_pow+0x218>
 802b492:	4b0a      	ldr	r3, [pc, #40]	; (802b4bc <__ieee754_pow+0x25c>)
 802b494:	429c      	cmp	r4, r3
 802b496:	dd19      	ble.n	802b4cc <__ieee754_pow+0x26c>
 802b498:	f1b9 0f00 	cmp.w	r9, #0
 802b49c:	dcef      	bgt.n	802b47e <__ieee754_pow+0x21e>
 802b49e:	2000      	movs	r0, #0
 802b4a0:	b009      	add	sp, #36	; 0x24
 802b4a2:	ecbd 8b06 	vpop	{d8-d10}
 802b4a6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b4aa:	f000 bcd7 	b.w	802be5c <__math_uflow>
 802b4ae:	bf00      	nop
 802b4b0:	fff00000 	.word	0xfff00000
 802b4b4:	7ff00000 	.word	0x7ff00000
 802b4b8:	433fffff 	.word	0x433fffff
 802b4bc:	3ff00000 	.word	0x3ff00000
 802b4c0:	3fefffff 	.word	0x3fefffff
 802b4c4:	3fe00000 	.word	0x3fe00000
 802b4c8:	41e00000 	.word	0x41e00000
 802b4cc:	4b60      	ldr	r3, [pc, #384]	; (802b650 <__ieee754_pow+0x3f0>)
 802b4ce:	2200      	movs	r2, #0
 802b4d0:	f7d4 ff4a 	bl	8000368 <__aeabi_dsub>
 802b4d4:	a354      	add	r3, pc, #336	; (adr r3, 802b628 <__ieee754_pow+0x3c8>)
 802b4d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b4da:	4604      	mov	r4, r0
 802b4dc:	460d      	mov	r5, r1
 802b4de:	f7d5 f8fb 	bl	80006d8 <__aeabi_dmul>
 802b4e2:	a353      	add	r3, pc, #332	; (adr r3, 802b630 <__ieee754_pow+0x3d0>)
 802b4e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b4e8:	4606      	mov	r6, r0
 802b4ea:	460f      	mov	r7, r1
 802b4ec:	4620      	mov	r0, r4
 802b4ee:	4629      	mov	r1, r5
 802b4f0:	f7d5 f8f2 	bl	80006d8 <__aeabi_dmul>
 802b4f4:	4b57      	ldr	r3, [pc, #348]	; (802b654 <__ieee754_pow+0x3f4>)
 802b4f6:	4682      	mov	sl, r0
 802b4f8:	468b      	mov	fp, r1
 802b4fa:	2200      	movs	r2, #0
 802b4fc:	4620      	mov	r0, r4
 802b4fe:	4629      	mov	r1, r5
 802b500:	f7d5 f8ea 	bl	80006d8 <__aeabi_dmul>
 802b504:	4602      	mov	r2, r0
 802b506:	460b      	mov	r3, r1
 802b508:	a14b      	add	r1, pc, #300	; (adr r1, 802b638 <__ieee754_pow+0x3d8>)
 802b50a:	e9d1 0100 	ldrd	r0, r1, [r1]
 802b50e:	f7d4 ff2b 	bl	8000368 <__aeabi_dsub>
 802b512:	4622      	mov	r2, r4
 802b514:	462b      	mov	r3, r5
 802b516:	f7d5 f8df 	bl	80006d8 <__aeabi_dmul>
 802b51a:	4602      	mov	r2, r0
 802b51c:	460b      	mov	r3, r1
 802b51e:	2000      	movs	r0, #0
 802b520:	494d      	ldr	r1, [pc, #308]	; (802b658 <__ieee754_pow+0x3f8>)
 802b522:	f7d4 ff21 	bl	8000368 <__aeabi_dsub>
 802b526:	4622      	mov	r2, r4
 802b528:	4680      	mov	r8, r0
 802b52a:	4689      	mov	r9, r1
 802b52c:	462b      	mov	r3, r5
 802b52e:	4620      	mov	r0, r4
 802b530:	4629      	mov	r1, r5
 802b532:	f7d5 f8d1 	bl	80006d8 <__aeabi_dmul>
 802b536:	4602      	mov	r2, r0
 802b538:	460b      	mov	r3, r1
 802b53a:	4640      	mov	r0, r8
 802b53c:	4649      	mov	r1, r9
 802b53e:	f7d5 f8cb 	bl	80006d8 <__aeabi_dmul>
 802b542:	a33f      	add	r3, pc, #252	; (adr r3, 802b640 <__ieee754_pow+0x3e0>)
 802b544:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b548:	f7d5 f8c6 	bl	80006d8 <__aeabi_dmul>
 802b54c:	4602      	mov	r2, r0
 802b54e:	460b      	mov	r3, r1
 802b550:	4650      	mov	r0, sl
 802b552:	4659      	mov	r1, fp
 802b554:	f7d4 ff08 	bl	8000368 <__aeabi_dsub>
 802b558:	4602      	mov	r2, r0
 802b55a:	460b      	mov	r3, r1
 802b55c:	4680      	mov	r8, r0
 802b55e:	4689      	mov	r9, r1
 802b560:	4630      	mov	r0, r6
 802b562:	4639      	mov	r1, r7
 802b564:	f7d4 ff02 	bl	800036c <__adddf3>
 802b568:	2000      	movs	r0, #0
 802b56a:	4632      	mov	r2, r6
 802b56c:	463b      	mov	r3, r7
 802b56e:	4604      	mov	r4, r0
 802b570:	460d      	mov	r5, r1
 802b572:	f7d4 fef9 	bl	8000368 <__aeabi_dsub>
 802b576:	4602      	mov	r2, r0
 802b578:	460b      	mov	r3, r1
 802b57a:	4640      	mov	r0, r8
 802b57c:	4649      	mov	r1, r9
 802b57e:	f7d4 fef3 	bl	8000368 <__aeabi_dsub>
 802b582:	9b04      	ldr	r3, [sp, #16]
 802b584:	9a06      	ldr	r2, [sp, #24]
 802b586:	3b01      	subs	r3, #1
 802b588:	4313      	orrs	r3, r2
 802b58a:	4682      	mov	sl, r0
 802b58c:	468b      	mov	fp, r1
 802b58e:	f040 81e7 	bne.w	802b960 <__ieee754_pow+0x700>
 802b592:	ed9f 7b2d 	vldr	d7, [pc, #180]	; 802b648 <__ieee754_pow+0x3e8>
 802b596:	eeb0 8a47 	vmov.f32	s16, s14
 802b59a:	eef0 8a67 	vmov.f32	s17, s15
 802b59e:	e9dd 6700 	ldrd	r6, r7, [sp]
 802b5a2:	2600      	movs	r6, #0
 802b5a4:	4632      	mov	r2, r6
 802b5a6:	463b      	mov	r3, r7
 802b5a8:	e9dd 0100 	ldrd	r0, r1, [sp]
 802b5ac:	f7d4 fedc 	bl	8000368 <__aeabi_dsub>
 802b5b0:	4622      	mov	r2, r4
 802b5b2:	462b      	mov	r3, r5
 802b5b4:	f7d5 f890 	bl	80006d8 <__aeabi_dmul>
 802b5b8:	e9dd 2300 	ldrd	r2, r3, [sp]
 802b5bc:	4680      	mov	r8, r0
 802b5be:	4689      	mov	r9, r1
 802b5c0:	4650      	mov	r0, sl
 802b5c2:	4659      	mov	r1, fp
 802b5c4:	f7d5 f888 	bl	80006d8 <__aeabi_dmul>
 802b5c8:	4602      	mov	r2, r0
 802b5ca:	460b      	mov	r3, r1
 802b5cc:	4640      	mov	r0, r8
 802b5ce:	4649      	mov	r1, r9
 802b5d0:	f7d4 fecc 	bl	800036c <__adddf3>
 802b5d4:	4632      	mov	r2, r6
 802b5d6:	463b      	mov	r3, r7
 802b5d8:	4680      	mov	r8, r0
 802b5da:	4689      	mov	r9, r1
 802b5dc:	4620      	mov	r0, r4
 802b5de:	4629      	mov	r1, r5
 802b5e0:	f7d5 f87a 	bl	80006d8 <__aeabi_dmul>
 802b5e4:	460b      	mov	r3, r1
 802b5e6:	4604      	mov	r4, r0
 802b5e8:	460d      	mov	r5, r1
 802b5ea:	4602      	mov	r2, r0
 802b5ec:	4649      	mov	r1, r9
 802b5ee:	4640      	mov	r0, r8
 802b5f0:	f7d4 febc 	bl	800036c <__adddf3>
 802b5f4:	4b19      	ldr	r3, [pc, #100]	; (802b65c <__ieee754_pow+0x3fc>)
 802b5f6:	4299      	cmp	r1, r3
 802b5f8:	ec45 4b19 	vmov	d9, r4, r5
 802b5fc:	4606      	mov	r6, r0
 802b5fe:	460f      	mov	r7, r1
 802b600:	468b      	mov	fp, r1
 802b602:	f340 82f1 	ble.w	802bbe8 <__ieee754_pow+0x988>
 802b606:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 802b60a:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 802b60e:	4303      	orrs	r3, r0
 802b610:	f000 81e4 	beq.w	802b9dc <__ieee754_pow+0x77c>
 802b614:	ec51 0b18 	vmov	r0, r1, d8
 802b618:	2200      	movs	r2, #0
 802b61a:	2300      	movs	r3, #0
 802b61c:	f7d5 face 	bl	8000bbc <__aeabi_dcmplt>
 802b620:	3800      	subs	r0, #0
 802b622:	bf18      	it	ne
 802b624:	2001      	movne	r0, #1
 802b626:	e72b      	b.n	802b480 <__ieee754_pow+0x220>
 802b628:	60000000 	.word	0x60000000
 802b62c:	3ff71547 	.word	0x3ff71547
 802b630:	f85ddf44 	.word	0xf85ddf44
 802b634:	3e54ae0b 	.word	0x3e54ae0b
 802b638:	55555555 	.word	0x55555555
 802b63c:	3fd55555 	.word	0x3fd55555
 802b640:	652b82fe 	.word	0x652b82fe
 802b644:	3ff71547 	.word	0x3ff71547
 802b648:	00000000 	.word	0x00000000
 802b64c:	bff00000 	.word	0xbff00000
 802b650:	3ff00000 	.word	0x3ff00000
 802b654:	3fd00000 	.word	0x3fd00000
 802b658:	3fe00000 	.word	0x3fe00000
 802b65c:	408fffff 	.word	0x408fffff
 802b660:	4bd5      	ldr	r3, [pc, #852]	; (802b9b8 <__ieee754_pow+0x758>)
 802b662:	402b      	ands	r3, r5
 802b664:	2200      	movs	r2, #0
 802b666:	b92b      	cbnz	r3, 802b674 <__ieee754_pow+0x414>
 802b668:	4bd4      	ldr	r3, [pc, #848]	; (802b9bc <__ieee754_pow+0x75c>)
 802b66a:	f7d5 f835 	bl	80006d8 <__aeabi_dmul>
 802b66e:	f06f 0234 	mvn.w	r2, #52	; 0x34
 802b672:	460c      	mov	r4, r1
 802b674:	1523      	asrs	r3, r4, #20
 802b676:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 802b67a:	4413      	add	r3, r2
 802b67c:	9305      	str	r3, [sp, #20]
 802b67e:	4bd0      	ldr	r3, [pc, #832]	; (802b9c0 <__ieee754_pow+0x760>)
 802b680:	f3c4 0413 	ubfx	r4, r4, #0, #20
 802b684:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 802b688:	429c      	cmp	r4, r3
 802b68a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 802b68e:	dd08      	ble.n	802b6a2 <__ieee754_pow+0x442>
 802b690:	4bcc      	ldr	r3, [pc, #816]	; (802b9c4 <__ieee754_pow+0x764>)
 802b692:	429c      	cmp	r4, r3
 802b694:	f340 8162 	ble.w	802b95c <__ieee754_pow+0x6fc>
 802b698:	9b05      	ldr	r3, [sp, #20]
 802b69a:	3301      	adds	r3, #1
 802b69c:	9305      	str	r3, [sp, #20]
 802b69e:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 802b6a2:	2400      	movs	r4, #0
 802b6a4:	00e3      	lsls	r3, r4, #3
 802b6a6:	9307      	str	r3, [sp, #28]
 802b6a8:	4bc7      	ldr	r3, [pc, #796]	; (802b9c8 <__ieee754_pow+0x768>)
 802b6aa:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 802b6ae:	ed93 7b00 	vldr	d7, [r3]
 802b6b2:	4629      	mov	r1, r5
 802b6b4:	ec53 2b17 	vmov	r2, r3, d7
 802b6b8:	eeb0 9a47 	vmov.f32	s18, s14
 802b6bc:	eef0 9a67 	vmov.f32	s19, s15
 802b6c0:	4682      	mov	sl, r0
 802b6c2:	f7d4 fe51 	bl	8000368 <__aeabi_dsub>
 802b6c6:	4652      	mov	r2, sl
 802b6c8:	4606      	mov	r6, r0
 802b6ca:	460f      	mov	r7, r1
 802b6cc:	462b      	mov	r3, r5
 802b6ce:	ec51 0b19 	vmov	r0, r1, d9
 802b6d2:	f7d4 fe4b 	bl	800036c <__adddf3>
 802b6d6:	4602      	mov	r2, r0
 802b6d8:	460b      	mov	r3, r1
 802b6da:	2000      	movs	r0, #0
 802b6dc:	49bb      	ldr	r1, [pc, #748]	; (802b9cc <__ieee754_pow+0x76c>)
 802b6de:	f7d5 f925 	bl	800092c <__aeabi_ddiv>
 802b6e2:	ec41 0b1a 	vmov	d10, r0, r1
 802b6e6:	4602      	mov	r2, r0
 802b6e8:	460b      	mov	r3, r1
 802b6ea:	4630      	mov	r0, r6
 802b6ec:	4639      	mov	r1, r7
 802b6ee:	f7d4 fff3 	bl	80006d8 <__aeabi_dmul>
 802b6f2:	2300      	movs	r3, #0
 802b6f4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802b6f8:	9302      	str	r3, [sp, #8]
 802b6fa:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 802b6fe:	46ab      	mov	fp, r5
 802b700:	106d      	asrs	r5, r5, #1
 802b702:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 802b706:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 802b70a:	ec41 0b18 	vmov	d8, r0, r1
 802b70e:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 802b712:	2200      	movs	r2, #0
 802b714:	4640      	mov	r0, r8
 802b716:	4649      	mov	r1, r9
 802b718:	4614      	mov	r4, r2
 802b71a:	461d      	mov	r5, r3
 802b71c:	f7d4 ffdc 	bl	80006d8 <__aeabi_dmul>
 802b720:	4602      	mov	r2, r0
 802b722:	460b      	mov	r3, r1
 802b724:	4630      	mov	r0, r6
 802b726:	4639      	mov	r1, r7
 802b728:	f7d4 fe1e 	bl	8000368 <__aeabi_dsub>
 802b72c:	ec53 2b19 	vmov	r2, r3, d9
 802b730:	4606      	mov	r6, r0
 802b732:	460f      	mov	r7, r1
 802b734:	4620      	mov	r0, r4
 802b736:	4629      	mov	r1, r5
 802b738:	f7d4 fe16 	bl	8000368 <__aeabi_dsub>
 802b73c:	4602      	mov	r2, r0
 802b73e:	460b      	mov	r3, r1
 802b740:	4650      	mov	r0, sl
 802b742:	4659      	mov	r1, fp
 802b744:	f7d4 fe10 	bl	8000368 <__aeabi_dsub>
 802b748:	4642      	mov	r2, r8
 802b74a:	464b      	mov	r3, r9
 802b74c:	f7d4 ffc4 	bl	80006d8 <__aeabi_dmul>
 802b750:	4602      	mov	r2, r0
 802b752:	460b      	mov	r3, r1
 802b754:	4630      	mov	r0, r6
 802b756:	4639      	mov	r1, r7
 802b758:	f7d4 fe06 	bl	8000368 <__aeabi_dsub>
 802b75c:	ec53 2b1a 	vmov	r2, r3, d10
 802b760:	f7d4 ffba 	bl	80006d8 <__aeabi_dmul>
 802b764:	ec53 2b18 	vmov	r2, r3, d8
 802b768:	ec41 0b19 	vmov	d9, r0, r1
 802b76c:	ec51 0b18 	vmov	r0, r1, d8
 802b770:	f7d4 ffb2 	bl	80006d8 <__aeabi_dmul>
 802b774:	a37c      	add	r3, pc, #496	; (adr r3, 802b968 <__ieee754_pow+0x708>)
 802b776:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b77a:	4604      	mov	r4, r0
 802b77c:	460d      	mov	r5, r1
 802b77e:	f7d4 ffab 	bl	80006d8 <__aeabi_dmul>
 802b782:	a37b      	add	r3, pc, #492	; (adr r3, 802b970 <__ieee754_pow+0x710>)
 802b784:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b788:	f7d4 fdf0 	bl	800036c <__adddf3>
 802b78c:	4622      	mov	r2, r4
 802b78e:	462b      	mov	r3, r5
 802b790:	f7d4 ffa2 	bl	80006d8 <__aeabi_dmul>
 802b794:	a378      	add	r3, pc, #480	; (adr r3, 802b978 <__ieee754_pow+0x718>)
 802b796:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b79a:	f7d4 fde7 	bl	800036c <__adddf3>
 802b79e:	4622      	mov	r2, r4
 802b7a0:	462b      	mov	r3, r5
 802b7a2:	f7d4 ff99 	bl	80006d8 <__aeabi_dmul>
 802b7a6:	a376      	add	r3, pc, #472	; (adr r3, 802b980 <__ieee754_pow+0x720>)
 802b7a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b7ac:	f7d4 fdde 	bl	800036c <__adddf3>
 802b7b0:	4622      	mov	r2, r4
 802b7b2:	462b      	mov	r3, r5
 802b7b4:	f7d4 ff90 	bl	80006d8 <__aeabi_dmul>
 802b7b8:	a373      	add	r3, pc, #460	; (adr r3, 802b988 <__ieee754_pow+0x728>)
 802b7ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b7be:	f7d4 fdd5 	bl	800036c <__adddf3>
 802b7c2:	4622      	mov	r2, r4
 802b7c4:	462b      	mov	r3, r5
 802b7c6:	f7d4 ff87 	bl	80006d8 <__aeabi_dmul>
 802b7ca:	a371      	add	r3, pc, #452	; (adr r3, 802b990 <__ieee754_pow+0x730>)
 802b7cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b7d0:	f7d4 fdcc 	bl	800036c <__adddf3>
 802b7d4:	4622      	mov	r2, r4
 802b7d6:	4606      	mov	r6, r0
 802b7d8:	460f      	mov	r7, r1
 802b7da:	462b      	mov	r3, r5
 802b7dc:	4620      	mov	r0, r4
 802b7de:	4629      	mov	r1, r5
 802b7e0:	f7d4 ff7a 	bl	80006d8 <__aeabi_dmul>
 802b7e4:	4602      	mov	r2, r0
 802b7e6:	460b      	mov	r3, r1
 802b7e8:	4630      	mov	r0, r6
 802b7ea:	4639      	mov	r1, r7
 802b7ec:	f7d4 ff74 	bl	80006d8 <__aeabi_dmul>
 802b7f0:	4642      	mov	r2, r8
 802b7f2:	4604      	mov	r4, r0
 802b7f4:	460d      	mov	r5, r1
 802b7f6:	464b      	mov	r3, r9
 802b7f8:	ec51 0b18 	vmov	r0, r1, d8
 802b7fc:	f7d4 fdb6 	bl	800036c <__adddf3>
 802b800:	ec53 2b19 	vmov	r2, r3, d9
 802b804:	f7d4 ff68 	bl	80006d8 <__aeabi_dmul>
 802b808:	4622      	mov	r2, r4
 802b80a:	462b      	mov	r3, r5
 802b80c:	f7d4 fdae 	bl	800036c <__adddf3>
 802b810:	4642      	mov	r2, r8
 802b812:	4682      	mov	sl, r0
 802b814:	468b      	mov	fp, r1
 802b816:	464b      	mov	r3, r9
 802b818:	4640      	mov	r0, r8
 802b81a:	4649      	mov	r1, r9
 802b81c:	f7d4 ff5c 	bl	80006d8 <__aeabi_dmul>
 802b820:	4b6b      	ldr	r3, [pc, #428]	; (802b9d0 <__ieee754_pow+0x770>)
 802b822:	2200      	movs	r2, #0
 802b824:	4606      	mov	r6, r0
 802b826:	460f      	mov	r7, r1
 802b828:	f7d4 fda0 	bl	800036c <__adddf3>
 802b82c:	4652      	mov	r2, sl
 802b82e:	465b      	mov	r3, fp
 802b830:	f7d4 fd9c 	bl	800036c <__adddf3>
 802b834:	2000      	movs	r0, #0
 802b836:	4604      	mov	r4, r0
 802b838:	460d      	mov	r5, r1
 802b83a:	4602      	mov	r2, r0
 802b83c:	460b      	mov	r3, r1
 802b83e:	4640      	mov	r0, r8
 802b840:	4649      	mov	r1, r9
 802b842:	f7d4 ff49 	bl	80006d8 <__aeabi_dmul>
 802b846:	4b62      	ldr	r3, [pc, #392]	; (802b9d0 <__ieee754_pow+0x770>)
 802b848:	4680      	mov	r8, r0
 802b84a:	4689      	mov	r9, r1
 802b84c:	2200      	movs	r2, #0
 802b84e:	4620      	mov	r0, r4
 802b850:	4629      	mov	r1, r5
 802b852:	f7d4 fd89 	bl	8000368 <__aeabi_dsub>
 802b856:	4632      	mov	r2, r6
 802b858:	463b      	mov	r3, r7
 802b85a:	f7d4 fd85 	bl	8000368 <__aeabi_dsub>
 802b85e:	4602      	mov	r2, r0
 802b860:	460b      	mov	r3, r1
 802b862:	4650      	mov	r0, sl
 802b864:	4659      	mov	r1, fp
 802b866:	f7d4 fd7f 	bl	8000368 <__aeabi_dsub>
 802b86a:	ec53 2b18 	vmov	r2, r3, d8
 802b86e:	f7d4 ff33 	bl	80006d8 <__aeabi_dmul>
 802b872:	4622      	mov	r2, r4
 802b874:	4606      	mov	r6, r0
 802b876:	460f      	mov	r7, r1
 802b878:	462b      	mov	r3, r5
 802b87a:	ec51 0b19 	vmov	r0, r1, d9
 802b87e:	f7d4 ff2b 	bl	80006d8 <__aeabi_dmul>
 802b882:	4602      	mov	r2, r0
 802b884:	460b      	mov	r3, r1
 802b886:	4630      	mov	r0, r6
 802b888:	4639      	mov	r1, r7
 802b88a:	f7d4 fd6f 	bl	800036c <__adddf3>
 802b88e:	4606      	mov	r6, r0
 802b890:	460f      	mov	r7, r1
 802b892:	4602      	mov	r2, r0
 802b894:	460b      	mov	r3, r1
 802b896:	4640      	mov	r0, r8
 802b898:	4649      	mov	r1, r9
 802b89a:	f7d4 fd67 	bl	800036c <__adddf3>
 802b89e:	a33e      	add	r3, pc, #248	; (adr r3, 802b998 <__ieee754_pow+0x738>)
 802b8a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b8a4:	2000      	movs	r0, #0
 802b8a6:	4604      	mov	r4, r0
 802b8a8:	460d      	mov	r5, r1
 802b8aa:	f7d4 ff15 	bl	80006d8 <__aeabi_dmul>
 802b8ae:	4642      	mov	r2, r8
 802b8b0:	ec41 0b18 	vmov	d8, r0, r1
 802b8b4:	464b      	mov	r3, r9
 802b8b6:	4620      	mov	r0, r4
 802b8b8:	4629      	mov	r1, r5
 802b8ba:	f7d4 fd55 	bl	8000368 <__aeabi_dsub>
 802b8be:	4602      	mov	r2, r0
 802b8c0:	460b      	mov	r3, r1
 802b8c2:	4630      	mov	r0, r6
 802b8c4:	4639      	mov	r1, r7
 802b8c6:	f7d4 fd4f 	bl	8000368 <__aeabi_dsub>
 802b8ca:	a335      	add	r3, pc, #212	; (adr r3, 802b9a0 <__ieee754_pow+0x740>)
 802b8cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b8d0:	f7d4 ff02 	bl	80006d8 <__aeabi_dmul>
 802b8d4:	a334      	add	r3, pc, #208	; (adr r3, 802b9a8 <__ieee754_pow+0x748>)
 802b8d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b8da:	4606      	mov	r6, r0
 802b8dc:	460f      	mov	r7, r1
 802b8de:	4620      	mov	r0, r4
 802b8e0:	4629      	mov	r1, r5
 802b8e2:	f7d4 fef9 	bl	80006d8 <__aeabi_dmul>
 802b8e6:	4602      	mov	r2, r0
 802b8e8:	460b      	mov	r3, r1
 802b8ea:	4630      	mov	r0, r6
 802b8ec:	4639      	mov	r1, r7
 802b8ee:	f7d4 fd3d 	bl	800036c <__adddf3>
 802b8f2:	9a07      	ldr	r2, [sp, #28]
 802b8f4:	4b37      	ldr	r3, [pc, #220]	; (802b9d4 <__ieee754_pow+0x774>)
 802b8f6:	4413      	add	r3, r2
 802b8f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b8fc:	f7d4 fd36 	bl	800036c <__adddf3>
 802b900:	4682      	mov	sl, r0
 802b902:	9805      	ldr	r0, [sp, #20]
 802b904:	468b      	mov	fp, r1
 802b906:	f7d4 fe7d 	bl	8000604 <__aeabi_i2d>
 802b90a:	9a07      	ldr	r2, [sp, #28]
 802b90c:	4b32      	ldr	r3, [pc, #200]	; (802b9d8 <__ieee754_pow+0x778>)
 802b90e:	4413      	add	r3, r2
 802b910:	e9d3 8900 	ldrd	r8, r9, [r3]
 802b914:	4606      	mov	r6, r0
 802b916:	460f      	mov	r7, r1
 802b918:	4652      	mov	r2, sl
 802b91a:	465b      	mov	r3, fp
 802b91c:	ec51 0b18 	vmov	r0, r1, d8
 802b920:	f7d4 fd24 	bl	800036c <__adddf3>
 802b924:	4642      	mov	r2, r8
 802b926:	464b      	mov	r3, r9
 802b928:	f7d4 fd20 	bl	800036c <__adddf3>
 802b92c:	4632      	mov	r2, r6
 802b92e:	463b      	mov	r3, r7
 802b930:	f7d4 fd1c 	bl	800036c <__adddf3>
 802b934:	2000      	movs	r0, #0
 802b936:	4632      	mov	r2, r6
 802b938:	463b      	mov	r3, r7
 802b93a:	4604      	mov	r4, r0
 802b93c:	460d      	mov	r5, r1
 802b93e:	f7d4 fd13 	bl	8000368 <__aeabi_dsub>
 802b942:	4642      	mov	r2, r8
 802b944:	464b      	mov	r3, r9
 802b946:	f7d4 fd0f 	bl	8000368 <__aeabi_dsub>
 802b94a:	ec53 2b18 	vmov	r2, r3, d8
 802b94e:	f7d4 fd0b 	bl	8000368 <__aeabi_dsub>
 802b952:	4602      	mov	r2, r0
 802b954:	460b      	mov	r3, r1
 802b956:	4650      	mov	r0, sl
 802b958:	4659      	mov	r1, fp
 802b95a:	e610      	b.n	802b57e <__ieee754_pow+0x31e>
 802b95c:	2401      	movs	r4, #1
 802b95e:	e6a1      	b.n	802b6a4 <__ieee754_pow+0x444>
 802b960:	ed9f 7b13 	vldr	d7, [pc, #76]	; 802b9b0 <__ieee754_pow+0x750>
 802b964:	e617      	b.n	802b596 <__ieee754_pow+0x336>
 802b966:	bf00      	nop
 802b968:	4a454eef 	.word	0x4a454eef
 802b96c:	3fca7e28 	.word	0x3fca7e28
 802b970:	93c9db65 	.word	0x93c9db65
 802b974:	3fcd864a 	.word	0x3fcd864a
 802b978:	a91d4101 	.word	0xa91d4101
 802b97c:	3fd17460 	.word	0x3fd17460
 802b980:	518f264d 	.word	0x518f264d
 802b984:	3fd55555 	.word	0x3fd55555
 802b988:	db6fabff 	.word	0xdb6fabff
 802b98c:	3fdb6db6 	.word	0x3fdb6db6
 802b990:	33333303 	.word	0x33333303
 802b994:	3fe33333 	.word	0x3fe33333
 802b998:	e0000000 	.word	0xe0000000
 802b99c:	3feec709 	.word	0x3feec709
 802b9a0:	dc3a03fd 	.word	0xdc3a03fd
 802b9a4:	3feec709 	.word	0x3feec709
 802b9a8:	145b01f5 	.word	0x145b01f5
 802b9ac:	be3e2fe0 	.word	0xbe3e2fe0
 802b9b0:	00000000 	.word	0x00000000
 802b9b4:	3ff00000 	.word	0x3ff00000
 802b9b8:	7ff00000 	.word	0x7ff00000
 802b9bc:	43400000 	.word	0x43400000
 802b9c0:	0003988e 	.word	0x0003988e
 802b9c4:	000bb679 	.word	0x000bb679
 802b9c8:	08049a30 	.word	0x08049a30
 802b9cc:	3ff00000 	.word	0x3ff00000
 802b9d0:	40080000 	.word	0x40080000
 802b9d4:	08049a50 	.word	0x08049a50
 802b9d8:	08049a40 	.word	0x08049a40
 802b9dc:	a3b5      	add	r3, pc, #724	; (adr r3, 802bcb4 <__ieee754_pow+0xa54>)
 802b9de:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b9e2:	4640      	mov	r0, r8
 802b9e4:	4649      	mov	r1, r9
 802b9e6:	f7d4 fcc1 	bl	800036c <__adddf3>
 802b9ea:	4622      	mov	r2, r4
 802b9ec:	ec41 0b1a 	vmov	d10, r0, r1
 802b9f0:	462b      	mov	r3, r5
 802b9f2:	4630      	mov	r0, r6
 802b9f4:	4639      	mov	r1, r7
 802b9f6:	f7d4 fcb7 	bl	8000368 <__aeabi_dsub>
 802b9fa:	4602      	mov	r2, r0
 802b9fc:	460b      	mov	r3, r1
 802b9fe:	ec51 0b1a 	vmov	r0, r1, d10
 802ba02:	f7d5 f8f9 	bl	8000bf8 <__aeabi_dcmpgt>
 802ba06:	2800      	cmp	r0, #0
 802ba08:	f47f ae04 	bne.w	802b614 <__ieee754_pow+0x3b4>
 802ba0c:	4aa4      	ldr	r2, [pc, #656]	; (802bca0 <__ieee754_pow+0xa40>)
 802ba0e:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 802ba12:	4293      	cmp	r3, r2
 802ba14:	f340 8108 	ble.w	802bc28 <__ieee754_pow+0x9c8>
 802ba18:	151b      	asrs	r3, r3, #20
 802ba1a:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 802ba1e:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 802ba22:	fa4a f303 	asr.w	r3, sl, r3
 802ba26:	445b      	add	r3, fp
 802ba28:	f3c3 520a 	ubfx	r2, r3, #20, #11
 802ba2c:	4e9d      	ldr	r6, [pc, #628]	; (802bca4 <__ieee754_pow+0xa44>)
 802ba2e:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 802ba32:	4116      	asrs	r6, r2
 802ba34:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 802ba38:	2000      	movs	r0, #0
 802ba3a:	ea23 0106 	bic.w	r1, r3, r6
 802ba3e:	f1c2 0214 	rsb	r2, r2, #20
 802ba42:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 802ba46:	fa4a fa02 	asr.w	sl, sl, r2
 802ba4a:	f1bb 0f00 	cmp.w	fp, #0
 802ba4e:	4602      	mov	r2, r0
 802ba50:	460b      	mov	r3, r1
 802ba52:	4620      	mov	r0, r4
 802ba54:	4629      	mov	r1, r5
 802ba56:	bfb8      	it	lt
 802ba58:	f1ca 0a00 	rsblt	sl, sl, #0
 802ba5c:	f7d4 fc84 	bl	8000368 <__aeabi_dsub>
 802ba60:	ec41 0b19 	vmov	d9, r0, r1
 802ba64:	4642      	mov	r2, r8
 802ba66:	464b      	mov	r3, r9
 802ba68:	ec51 0b19 	vmov	r0, r1, d9
 802ba6c:	f7d4 fc7e 	bl	800036c <__adddf3>
 802ba70:	a37b      	add	r3, pc, #492	; (adr r3, 802bc60 <__ieee754_pow+0xa00>)
 802ba72:	e9d3 2300 	ldrd	r2, r3, [r3]
 802ba76:	2000      	movs	r0, #0
 802ba78:	4604      	mov	r4, r0
 802ba7a:	460d      	mov	r5, r1
 802ba7c:	f7d4 fe2c 	bl	80006d8 <__aeabi_dmul>
 802ba80:	ec53 2b19 	vmov	r2, r3, d9
 802ba84:	4606      	mov	r6, r0
 802ba86:	460f      	mov	r7, r1
 802ba88:	4620      	mov	r0, r4
 802ba8a:	4629      	mov	r1, r5
 802ba8c:	f7d4 fc6c 	bl	8000368 <__aeabi_dsub>
 802ba90:	4602      	mov	r2, r0
 802ba92:	460b      	mov	r3, r1
 802ba94:	4640      	mov	r0, r8
 802ba96:	4649      	mov	r1, r9
 802ba98:	f7d4 fc66 	bl	8000368 <__aeabi_dsub>
 802ba9c:	a372      	add	r3, pc, #456	; (adr r3, 802bc68 <__ieee754_pow+0xa08>)
 802ba9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802baa2:	f7d4 fe19 	bl	80006d8 <__aeabi_dmul>
 802baa6:	a372      	add	r3, pc, #456	; (adr r3, 802bc70 <__ieee754_pow+0xa10>)
 802baa8:	e9d3 2300 	ldrd	r2, r3, [r3]
 802baac:	4680      	mov	r8, r0
 802baae:	4689      	mov	r9, r1
 802bab0:	4620      	mov	r0, r4
 802bab2:	4629      	mov	r1, r5
 802bab4:	f7d4 fe10 	bl	80006d8 <__aeabi_dmul>
 802bab8:	4602      	mov	r2, r0
 802baba:	460b      	mov	r3, r1
 802babc:	4640      	mov	r0, r8
 802babe:	4649      	mov	r1, r9
 802bac0:	f7d4 fc54 	bl	800036c <__adddf3>
 802bac4:	4604      	mov	r4, r0
 802bac6:	460d      	mov	r5, r1
 802bac8:	4602      	mov	r2, r0
 802baca:	460b      	mov	r3, r1
 802bacc:	4630      	mov	r0, r6
 802bace:	4639      	mov	r1, r7
 802bad0:	f7d4 fc4c 	bl	800036c <__adddf3>
 802bad4:	4632      	mov	r2, r6
 802bad6:	463b      	mov	r3, r7
 802bad8:	4680      	mov	r8, r0
 802bada:	4689      	mov	r9, r1
 802badc:	f7d4 fc44 	bl	8000368 <__aeabi_dsub>
 802bae0:	4602      	mov	r2, r0
 802bae2:	460b      	mov	r3, r1
 802bae4:	4620      	mov	r0, r4
 802bae6:	4629      	mov	r1, r5
 802bae8:	f7d4 fc3e 	bl	8000368 <__aeabi_dsub>
 802baec:	4642      	mov	r2, r8
 802baee:	4606      	mov	r6, r0
 802baf0:	460f      	mov	r7, r1
 802baf2:	464b      	mov	r3, r9
 802baf4:	4640      	mov	r0, r8
 802baf6:	4649      	mov	r1, r9
 802baf8:	f7d4 fdee 	bl	80006d8 <__aeabi_dmul>
 802bafc:	a35e      	add	r3, pc, #376	; (adr r3, 802bc78 <__ieee754_pow+0xa18>)
 802bafe:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bb02:	4604      	mov	r4, r0
 802bb04:	460d      	mov	r5, r1
 802bb06:	f7d4 fde7 	bl	80006d8 <__aeabi_dmul>
 802bb0a:	a35d      	add	r3, pc, #372	; (adr r3, 802bc80 <__ieee754_pow+0xa20>)
 802bb0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bb10:	f7d4 fc2a 	bl	8000368 <__aeabi_dsub>
 802bb14:	4622      	mov	r2, r4
 802bb16:	462b      	mov	r3, r5
 802bb18:	f7d4 fdde 	bl	80006d8 <__aeabi_dmul>
 802bb1c:	a35a      	add	r3, pc, #360	; (adr r3, 802bc88 <__ieee754_pow+0xa28>)
 802bb1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bb22:	f7d4 fc23 	bl	800036c <__adddf3>
 802bb26:	4622      	mov	r2, r4
 802bb28:	462b      	mov	r3, r5
 802bb2a:	f7d4 fdd5 	bl	80006d8 <__aeabi_dmul>
 802bb2e:	a358      	add	r3, pc, #352	; (adr r3, 802bc90 <__ieee754_pow+0xa30>)
 802bb30:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bb34:	f7d4 fc18 	bl	8000368 <__aeabi_dsub>
 802bb38:	4622      	mov	r2, r4
 802bb3a:	462b      	mov	r3, r5
 802bb3c:	f7d4 fdcc 	bl	80006d8 <__aeabi_dmul>
 802bb40:	a355      	add	r3, pc, #340	; (adr r3, 802bc98 <__ieee754_pow+0xa38>)
 802bb42:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bb46:	f7d4 fc11 	bl	800036c <__adddf3>
 802bb4a:	4622      	mov	r2, r4
 802bb4c:	462b      	mov	r3, r5
 802bb4e:	f7d4 fdc3 	bl	80006d8 <__aeabi_dmul>
 802bb52:	4602      	mov	r2, r0
 802bb54:	460b      	mov	r3, r1
 802bb56:	4640      	mov	r0, r8
 802bb58:	4649      	mov	r1, r9
 802bb5a:	f7d4 fc05 	bl	8000368 <__aeabi_dsub>
 802bb5e:	4604      	mov	r4, r0
 802bb60:	460d      	mov	r5, r1
 802bb62:	4602      	mov	r2, r0
 802bb64:	460b      	mov	r3, r1
 802bb66:	4640      	mov	r0, r8
 802bb68:	4649      	mov	r1, r9
 802bb6a:	f7d4 fdb5 	bl	80006d8 <__aeabi_dmul>
 802bb6e:	2200      	movs	r2, #0
 802bb70:	ec41 0b19 	vmov	d9, r0, r1
 802bb74:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 802bb78:	4620      	mov	r0, r4
 802bb7a:	4629      	mov	r1, r5
 802bb7c:	f7d4 fbf4 	bl	8000368 <__aeabi_dsub>
 802bb80:	4602      	mov	r2, r0
 802bb82:	460b      	mov	r3, r1
 802bb84:	ec51 0b19 	vmov	r0, r1, d9
 802bb88:	f7d4 fed0 	bl	800092c <__aeabi_ddiv>
 802bb8c:	4632      	mov	r2, r6
 802bb8e:	4604      	mov	r4, r0
 802bb90:	460d      	mov	r5, r1
 802bb92:	463b      	mov	r3, r7
 802bb94:	4640      	mov	r0, r8
 802bb96:	4649      	mov	r1, r9
 802bb98:	f7d4 fd9e 	bl	80006d8 <__aeabi_dmul>
 802bb9c:	4632      	mov	r2, r6
 802bb9e:	463b      	mov	r3, r7
 802bba0:	f7d4 fbe4 	bl	800036c <__adddf3>
 802bba4:	4602      	mov	r2, r0
 802bba6:	460b      	mov	r3, r1
 802bba8:	4620      	mov	r0, r4
 802bbaa:	4629      	mov	r1, r5
 802bbac:	f7d4 fbdc 	bl	8000368 <__aeabi_dsub>
 802bbb0:	4642      	mov	r2, r8
 802bbb2:	464b      	mov	r3, r9
 802bbb4:	f7d4 fbd8 	bl	8000368 <__aeabi_dsub>
 802bbb8:	460b      	mov	r3, r1
 802bbba:	4602      	mov	r2, r0
 802bbbc:	493a      	ldr	r1, [pc, #232]	; (802bca8 <__ieee754_pow+0xa48>)
 802bbbe:	2000      	movs	r0, #0
 802bbc0:	f7d4 fbd2 	bl	8000368 <__aeabi_dsub>
 802bbc4:	ec41 0b10 	vmov	d0, r0, r1
 802bbc8:	ee10 3a90 	vmov	r3, s1
 802bbcc:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 802bbd0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 802bbd4:	da2b      	bge.n	802bc2e <__ieee754_pow+0x9ce>
 802bbd6:	4650      	mov	r0, sl
 802bbd8:	f000 f966 	bl	802bea8 <scalbn>
 802bbdc:	ec51 0b10 	vmov	r0, r1, d0
 802bbe0:	ec53 2b18 	vmov	r2, r3, d8
 802bbe4:	f7ff bbed 	b.w	802b3c2 <__ieee754_pow+0x162>
 802bbe8:	4b30      	ldr	r3, [pc, #192]	; (802bcac <__ieee754_pow+0xa4c>)
 802bbea:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 802bbee:	429e      	cmp	r6, r3
 802bbf0:	f77f af0c 	ble.w	802ba0c <__ieee754_pow+0x7ac>
 802bbf4:	4b2e      	ldr	r3, [pc, #184]	; (802bcb0 <__ieee754_pow+0xa50>)
 802bbf6:	440b      	add	r3, r1
 802bbf8:	4303      	orrs	r3, r0
 802bbfa:	d009      	beq.n	802bc10 <__ieee754_pow+0x9b0>
 802bbfc:	ec51 0b18 	vmov	r0, r1, d8
 802bc00:	2200      	movs	r2, #0
 802bc02:	2300      	movs	r3, #0
 802bc04:	f7d4 ffda 	bl	8000bbc <__aeabi_dcmplt>
 802bc08:	3800      	subs	r0, #0
 802bc0a:	bf18      	it	ne
 802bc0c:	2001      	movne	r0, #1
 802bc0e:	e447      	b.n	802b4a0 <__ieee754_pow+0x240>
 802bc10:	4622      	mov	r2, r4
 802bc12:	462b      	mov	r3, r5
 802bc14:	f7d4 fba8 	bl	8000368 <__aeabi_dsub>
 802bc18:	4642      	mov	r2, r8
 802bc1a:	464b      	mov	r3, r9
 802bc1c:	f7d4 ffe2 	bl	8000be4 <__aeabi_dcmpge>
 802bc20:	2800      	cmp	r0, #0
 802bc22:	f43f aef3 	beq.w	802ba0c <__ieee754_pow+0x7ac>
 802bc26:	e7e9      	b.n	802bbfc <__ieee754_pow+0x99c>
 802bc28:	f04f 0a00 	mov.w	sl, #0
 802bc2c:	e71a      	b.n	802ba64 <__ieee754_pow+0x804>
 802bc2e:	ec51 0b10 	vmov	r0, r1, d0
 802bc32:	4619      	mov	r1, r3
 802bc34:	e7d4      	b.n	802bbe0 <__ieee754_pow+0x980>
 802bc36:	491c      	ldr	r1, [pc, #112]	; (802bca8 <__ieee754_pow+0xa48>)
 802bc38:	2000      	movs	r0, #0
 802bc3a:	f7ff bb30 	b.w	802b29e <__ieee754_pow+0x3e>
 802bc3e:	2000      	movs	r0, #0
 802bc40:	2100      	movs	r1, #0
 802bc42:	f7ff bb2c 	b.w	802b29e <__ieee754_pow+0x3e>
 802bc46:	4630      	mov	r0, r6
 802bc48:	4639      	mov	r1, r7
 802bc4a:	f7ff bb28 	b.w	802b29e <__ieee754_pow+0x3e>
 802bc4e:	9204      	str	r2, [sp, #16]
 802bc50:	f7ff bb7a 	b.w	802b348 <__ieee754_pow+0xe8>
 802bc54:	2300      	movs	r3, #0
 802bc56:	f7ff bb64 	b.w	802b322 <__ieee754_pow+0xc2>
 802bc5a:	bf00      	nop
 802bc5c:	f3af 8000 	nop.w
 802bc60:	00000000 	.word	0x00000000
 802bc64:	3fe62e43 	.word	0x3fe62e43
 802bc68:	fefa39ef 	.word	0xfefa39ef
 802bc6c:	3fe62e42 	.word	0x3fe62e42
 802bc70:	0ca86c39 	.word	0x0ca86c39
 802bc74:	be205c61 	.word	0xbe205c61
 802bc78:	72bea4d0 	.word	0x72bea4d0
 802bc7c:	3e663769 	.word	0x3e663769
 802bc80:	c5d26bf1 	.word	0xc5d26bf1
 802bc84:	3ebbbd41 	.word	0x3ebbbd41
 802bc88:	af25de2c 	.word	0xaf25de2c
 802bc8c:	3f11566a 	.word	0x3f11566a
 802bc90:	16bebd93 	.word	0x16bebd93
 802bc94:	3f66c16c 	.word	0x3f66c16c
 802bc98:	5555553e 	.word	0x5555553e
 802bc9c:	3fc55555 	.word	0x3fc55555
 802bca0:	3fe00000 	.word	0x3fe00000
 802bca4:	000fffff 	.word	0x000fffff
 802bca8:	3ff00000 	.word	0x3ff00000
 802bcac:	4090cbff 	.word	0x4090cbff
 802bcb0:	3f6f3400 	.word	0x3f6f3400
 802bcb4:	652b82fe 	.word	0x652b82fe
 802bcb8:	3c971547 	.word	0x3c971547

0802bcbc <__ieee754_sqrt>:
 802bcbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bcc0:	ec55 4b10 	vmov	r4, r5, d0
 802bcc4:	4e55      	ldr	r6, [pc, #340]	; (802be1c <__ieee754_sqrt+0x160>)
 802bcc6:	43ae      	bics	r6, r5
 802bcc8:	ee10 0a10 	vmov	r0, s0
 802bccc:	ee10 3a10 	vmov	r3, s0
 802bcd0:	462a      	mov	r2, r5
 802bcd2:	4629      	mov	r1, r5
 802bcd4:	d110      	bne.n	802bcf8 <__ieee754_sqrt+0x3c>
 802bcd6:	ee10 2a10 	vmov	r2, s0
 802bcda:	462b      	mov	r3, r5
 802bcdc:	f7d4 fcfc 	bl	80006d8 <__aeabi_dmul>
 802bce0:	4602      	mov	r2, r0
 802bce2:	460b      	mov	r3, r1
 802bce4:	4620      	mov	r0, r4
 802bce6:	4629      	mov	r1, r5
 802bce8:	f7d4 fb40 	bl	800036c <__adddf3>
 802bcec:	4604      	mov	r4, r0
 802bcee:	460d      	mov	r5, r1
 802bcf0:	ec45 4b10 	vmov	d0, r4, r5
 802bcf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bcf8:	2d00      	cmp	r5, #0
 802bcfa:	dc10      	bgt.n	802bd1e <__ieee754_sqrt+0x62>
 802bcfc:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 802bd00:	4330      	orrs	r0, r6
 802bd02:	d0f5      	beq.n	802bcf0 <__ieee754_sqrt+0x34>
 802bd04:	b15d      	cbz	r5, 802bd1e <__ieee754_sqrt+0x62>
 802bd06:	ee10 2a10 	vmov	r2, s0
 802bd0a:	462b      	mov	r3, r5
 802bd0c:	ee10 0a10 	vmov	r0, s0
 802bd10:	f7d4 fb2a 	bl	8000368 <__aeabi_dsub>
 802bd14:	4602      	mov	r2, r0
 802bd16:	460b      	mov	r3, r1
 802bd18:	f7d4 fe08 	bl	800092c <__aeabi_ddiv>
 802bd1c:	e7e6      	b.n	802bcec <__ieee754_sqrt+0x30>
 802bd1e:	1512      	asrs	r2, r2, #20
 802bd20:	d074      	beq.n	802be0c <__ieee754_sqrt+0x150>
 802bd22:	07d4      	lsls	r4, r2, #31
 802bd24:	f3c1 0113 	ubfx	r1, r1, #0, #20
 802bd28:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 802bd2c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 802bd30:	bf5e      	ittt	pl
 802bd32:	0fda      	lsrpl	r2, r3, #31
 802bd34:	005b      	lslpl	r3, r3, #1
 802bd36:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 802bd3a:	2400      	movs	r4, #0
 802bd3c:	0fda      	lsrs	r2, r3, #31
 802bd3e:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 802bd42:	107f      	asrs	r7, r7, #1
 802bd44:	005b      	lsls	r3, r3, #1
 802bd46:	2516      	movs	r5, #22
 802bd48:	4620      	mov	r0, r4
 802bd4a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 802bd4e:	1886      	adds	r6, r0, r2
 802bd50:	428e      	cmp	r6, r1
 802bd52:	bfde      	ittt	le
 802bd54:	1b89      	suble	r1, r1, r6
 802bd56:	18b0      	addle	r0, r6, r2
 802bd58:	18a4      	addle	r4, r4, r2
 802bd5a:	0049      	lsls	r1, r1, #1
 802bd5c:	3d01      	subs	r5, #1
 802bd5e:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 802bd62:	ea4f 0252 	mov.w	r2, r2, lsr #1
 802bd66:	ea4f 0343 	mov.w	r3, r3, lsl #1
 802bd6a:	d1f0      	bne.n	802bd4e <__ieee754_sqrt+0x92>
 802bd6c:	462a      	mov	r2, r5
 802bd6e:	f04f 0e20 	mov.w	lr, #32
 802bd72:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 802bd76:	4281      	cmp	r1, r0
 802bd78:	eb06 0c05 	add.w	ip, r6, r5
 802bd7c:	dc02      	bgt.n	802bd84 <__ieee754_sqrt+0xc8>
 802bd7e:	d113      	bne.n	802bda8 <__ieee754_sqrt+0xec>
 802bd80:	459c      	cmp	ip, r3
 802bd82:	d811      	bhi.n	802bda8 <__ieee754_sqrt+0xec>
 802bd84:	f1bc 0f00 	cmp.w	ip, #0
 802bd88:	eb0c 0506 	add.w	r5, ip, r6
 802bd8c:	da43      	bge.n	802be16 <__ieee754_sqrt+0x15a>
 802bd8e:	2d00      	cmp	r5, #0
 802bd90:	db41      	blt.n	802be16 <__ieee754_sqrt+0x15a>
 802bd92:	f100 0801 	add.w	r8, r0, #1
 802bd96:	1a09      	subs	r1, r1, r0
 802bd98:	459c      	cmp	ip, r3
 802bd9a:	bf88      	it	hi
 802bd9c:	f101 31ff 	addhi.w	r1, r1, #4294967295
 802bda0:	eba3 030c 	sub.w	r3, r3, ip
 802bda4:	4432      	add	r2, r6
 802bda6:	4640      	mov	r0, r8
 802bda8:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 802bdac:	f1be 0e01 	subs.w	lr, lr, #1
 802bdb0:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 802bdb4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 802bdb8:	ea4f 0656 	mov.w	r6, r6, lsr #1
 802bdbc:	d1db      	bne.n	802bd76 <__ieee754_sqrt+0xba>
 802bdbe:	430b      	orrs	r3, r1
 802bdc0:	d006      	beq.n	802bdd0 <__ieee754_sqrt+0x114>
 802bdc2:	1c50      	adds	r0, r2, #1
 802bdc4:	bf13      	iteet	ne
 802bdc6:	3201      	addne	r2, #1
 802bdc8:	3401      	addeq	r4, #1
 802bdca:	4672      	moveq	r2, lr
 802bdcc:	f022 0201 	bicne.w	r2, r2, #1
 802bdd0:	1063      	asrs	r3, r4, #1
 802bdd2:	0852      	lsrs	r2, r2, #1
 802bdd4:	07e1      	lsls	r1, r4, #31
 802bdd6:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 802bdda:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 802bdde:	bf48      	it	mi
 802bde0:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 802bde4:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 802bde8:	4614      	mov	r4, r2
 802bdea:	e781      	b.n	802bcf0 <__ieee754_sqrt+0x34>
 802bdec:	0ad9      	lsrs	r1, r3, #11
 802bdee:	3815      	subs	r0, #21
 802bdf0:	055b      	lsls	r3, r3, #21
 802bdf2:	2900      	cmp	r1, #0
 802bdf4:	d0fa      	beq.n	802bdec <__ieee754_sqrt+0x130>
 802bdf6:	02cd      	lsls	r5, r1, #11
 802bdf8:	d50a      	bpl.n	802be10 <__ieee754_sqrt+0x154>
 802bdfa:	f1c2 0420 	rsb	r4, r2, #32
 802bdfe:	fa23 f404 	lsr.w	r4, r3, r4
 802be02:	1e55      	subs	r5, r2, #1
 802be04:	4093      	lsls	r3, r2
 802be06:	4321      	orrs	r1, r4
 802be08:	1b42      	subs	r2, r0, r5
 802be0a:	e78a      	b.n	802bd22 <__ieee754_sqrt+0x66>
 802be0c:	4610      	mov	r0, r2
 802be0e:	e7f0      	b.n	802bdf2 <__ieee754_sqrt+0x136>
 802be10:	0049      	lsls	r1, r1, #1
 802be12:	3201      	adds	r2, #1
 802be14:	e7ef      	b.n	802bdf6 <__ieee754_sqrt+0x13a>
 802be16:	4680      	mov	r8, r0
 802be18:	e7bd      	b.n	802bd96 <__ieee754_sqrt+0xda>
 802be1a:	bf00      	nop
 802be1c:	7ff00000 	.word	0x7ff00000

0802be20 <with_errno>:
 802be20:	b570      	push	{r4, r5, r6, lr}
 802be22:	4604      	mov	r4, r0
 802be24:	460d      	mov	r5, r1
 802be26:	4616      	mov	r6, r2
 802be28:	f000 f8fe 	bl	802c028 <__errno>
 802be2c:	4629      	mov	r1, r5
 802be2e:	6006      	str	r6, [r0, #0]
 802be30:	4620      	mov	r0, r4
 802be32:	bd70      	pop	{r4, r5, r6, pc}

0802be34 <xflow>:
 802be34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802be36:	4614      	mov	r4, r2
 802be38:	461d      	mov	r5, r3
 802be3a:	b108      	cbz	r0, 802be40 <xflow+0xc>
 802be3c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802be40:	e9cd 2300 	strd	r2, r3, [sp]
 802be44:	e9dd 2300 	ldrd	r2, r3, [sp]
 802be48:	4620      	mov	r0, r4
 802be4a:	4629      	mov	r1, r5
 802be4c:	f7d4 fc44 	bl	80006d8 <__aeabi_dmul>
 802be50:	2222      	movs	r2, #34	; 0x22
 802be52:	b003      	add	sp, #12
 802be54:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802be58:	f7ff bfe2 	b.w	802be20 <with_errno>

0802be5c <__math_uflow>:
 802be5c:	b508      	push	{r3, lr}
 802be5e:	2200      	movs	r2, #0
 802be60:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 802be64:	f7ff ffe6 	bl	802be34 <xflow>
 802be68:	ec41 0b10 	vmov	d0, r0, r1
 802be6c:	bd08      	pop	{r3, pc}

0802be6e <__math_oflow>:
 802be6e:	b508      	push	{r3, lr}
 802be70:	2200      	movs	r2, #0
 802be72:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 802be76:	f7ff ffdd 	bl	802be34 <xflow>
 802be7a:	ec41 0b10 	vmov	d0, r0, r1
 802be7e:	bd08      	pop	{r3, pc}

0802be80 <fabs>:
 802be80:	ec51 0b10 	vmov	r0, r1, d0
 802be84:	ee10 2a10 	vmov	r2, s0
 802be88:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 802be8c:	ec43 2b10 	vmov	d0, r2, r3
 802be90:	4770      	bx	lr

0802be92 <finite>:
 802be92:	b082      	sub	sp, #8
 802be94:	ed8d 0b00 	vstr	d0, [sp]
 802be98:	9801      	ldr	r0, [sp, #4]
 802be9a:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 802be9e:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 802bea2:	0fc0      	lsrs	r0, r0, #31
 802bea4:	b002      	add	sp, #8
 802bea6:	4770      	bx	lr

0802bea8 <scalbn>:
 802bea8:	b570      	push	{r4, r5, r6, lr}
 802beaa:	ec55 4b10 	vmov	r4, r5, d0
 802beae:	f3c5 520a 	ubfx	r2, r5, #20, #11
 802beb2:	4606      	mov	r6, r0
 802beb4:	462b      	mov	r3, r5
 802beb6:	b99a      	cbnz	r2, 802bee0 <scalbn+0x38>
 802beb8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 802bebc:	4323      	orrs	r3, r4
 802bebe:	d036      	beq.n	802bf2e <scalbn+0x86>
 802bec0:	4b39      	ldr	r3, [pc, #228]	; (802bfa8 <scalbn+0x100>)
 802bec2:	4629      	mov	r1, r5
 802bec4:	ee10 0a10 	vmov	r0, s0
 802bec8:	2200      	movs	r2, #0
 802beca:	f7d4 fc05 	bl	80006d8 <__aeabi_dmul>
 802bece:	4b37      	ldr	r3, [pc, #220]	; (802bfac <scalbn+0x104>)
 802bed0:	429e      	cmp	r6, r3
 802bed2:	4604      	mov	r4, r0
 802bed4:	460d      	mov	r5, r1
 802bed6:	da10      	bge.n	802befa <scalbn+0x52>
 802bed8:	a32b      	add	r3, pc, #172	; (adr r3, 802bf88 <scalbn+0xe0>)
 802beda:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bede:	e03a      	b.n	802bf56 <scalbn+0xae>
 802bee0:	f240 71ff 	movw	r1, #2047	; 0x7ff
 802bee4:	428a      	cmp	r2, r1
 802bee6:	d10c      	bne.n	802bf02 <scalbn+0x5a>
 802bee8:	ee10 2a10 	vmov	r2, s0
 802beec:	4620      	mov	r0, r4
 802beee:	4629      	mov	r1, r5
 802bef0:	f7d4 fa3c 	bl	800036c <__adddf3>
 802bef4:	4604      	mov	r4, r0
 802bef6:	460d      	mov	r5, r1
 802bef8:	e019      	b.n	802bf2e <scalbn+0x86>
 802befa:	f3c1 520a 	ubfx	r2, r1, #20, #11
 802befe:	460b      	mov	r3, r1
 802bf00:	3a36      	subs	r2, #54	; 0x36
 802bf02:	4432      	add	r2, r6
 802bf04:	f240 71fe 	movw	r1, #2046	; 0x7fe
 802bf08:	428a      	cmp	r2, r1
 802bf0a:	dd08      	ble.n	802bf1e <scalbn+0x76>
 802bf0c:	2d00      	cmp	r5, #0
 802bf0e:	a120      	add	r1, pc, #128	; (adr r1, 802bf90 <scalbn+0xe8>)
 802bf10:	e9d1 0100 	ldrd	r0, r1, [r1]
 802bf14:	da1c      	bge.n	802bf50 <scalbn+0xa8>
 802bf16:	a120      	add	r1, pc, #128	; (adr r1, 802bf98 <scalbn+0xf0>)
 802bf18:	e9d1 0100 	ldrd	r0, r1, [r1]
 802bf1c:	e018      	b.n	802bf50 <scalbn+0xa8>
 802bf1e:	2a00      	cmp	r2, #0
 802bf20:	dd08      	ble.n	802bf34 <scalbn+0x8c>
 802bf22:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802bf26:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 802bf2a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 802bf2e:	ec45 4b10 	vmov	d0, r4, r5
 802bf32:	bd70      	pop	{r4, r5, r6, pc}
 802bf34:	f112 0f35 	cmn.w	r2, #53	; 0x35
 802bf38:	da19      	bge.n	802bf6e <scalbn+0xc6>
 802bf3a:	f24c 3350 	movw	r3, #50000	; 0xc350
 802bf3e:	429e      	cmp	r6, r3
 802bf40:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 802bf44:	dd0a      	ble.n	802bf5c <scalbn+0xb4>
 802bf46:	a112      	add	r1, pc, #72	; (adr r1, 802bf90 <scalbn+0xe8>)
 802bf48:	e9d1 0100 	ldrd	r0, r1, [r1]
 802bf4c:	2b00      	cmp	r3, #0
 802bf4e:	d1e2      	bne.n	802bf16 <scalbn+0x6e>
 802bf50:	a30f      	add	r3, pc, #60	; (adr r3, 802bf90 <scalbn+0xe8>)
 802bf52:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bf56:	f7d4 fbbf 	bl	80006d8 <__aeabi_dmul>
 802bf5a:	e7cb      	b.n	802bef4 <scalbn+0x4c>
 802bf5c:	a10a      	add	r1, pc, #40	; (adr r1, 802bf88 <scalbn+0xe0>)
 802bf5e:	e9d1 0100 	ldrd	r0, r1, [r1]
 802bf62:	2b00      	cmp	r3, #0
 802bf64:	d0b8      	beq.n	802bed8 <scalbn+0x30>
 802bf66:	a10e      	add	r1, pc, #56	; (adr r1, 802bfa0 <scalbn+0xf8>)
 802bf68:	e9d1 0100 	ldrd	r0, r1, [r1]
 802bf6c:	e7b4      	b.n	802bed8 <scalbn+0x30>
 802bf6e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802bf72:	3236      	adds	r2, #54	; 0x36
 802bf74:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 802bf78:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 802bf7c:	4620      	mov	r0, r4
 802bf7e:	4b0c      	ldr	r3, [pc, #48]	; (802bfb0 <scalbn+0x108>)
 802bf80:	2200      	movs	r2, #0
 802bf82:	e7e8      	b.n	802bf56 <scalbn+0xae>
 802bf84:	f3af 8000 	nop.w
 802bf88:	c2f8f359 	.word	0xc2f8f359
 802bf8c:	01a56e1f 	.word	0x01a56e1f
 802bf90:	8800759c 	.word	0x8800759c
 802bf94:	7e37e43c 	.word	0x7e37e43c
 802bf98:	8800759c 	.word	0x8800759c
 802bf9c:	fe37e43c 	.word	0xfe37e43c
 802bfa0:	c2f8f359 	.word	0xc2f8f359
 802bfa4:	81a56e1f 	.word	0x81a56e1f
 802bfa8:	43500000 	.word	0x43500000
 802bfac:	ffff3cb0 	.word	0xffff3cb0
 802bfb0:	3c900000 	.word	0x3c900000

0802bfb4 <abort>:
 802bfb4:	b508      	push	{r3, lr}
 802bfb6:	2006      	movs	r0, #6
 802bfb8:	f001 f8d8 	bl	802d16c <raise>
 802bfbc:	2001      	movs	r0, #1
 802bfbe:	f7d7 fb15 	bl	80035ec <_exit>
	...

0802bfc4 <__assert_func>:
 802bfc4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802bfc6:	4614      	mov	r4, r2
 802bfc8:	461a      	mov	r2, r3
 802bfca:	4b09      	ldr	r3, [pc, #36]	; (802bff0 <__assert_func+0x2c>)
 802bfcc:	681b      	ldr	r3, [r3, #0]
 802bfce:	4605      	mov	r5, r0
 802bfd0:	68d8      	ldr	r0, [r3, #12]
 802bfd2:	b14c      	cbz	r4, 802bfe8 <__assert_func+0x24>
 802bfd4:	4b07      	ldr	r3, [pc, #28]	; (802bff4 <__assert_func+0x30>)
 802bfd6:	9100      	str	r1, [sp, #0]
 802bfd8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802bfdc:	4906      	ldr	r1, [pc, #24]	; (802bff8 <__assert_func+0x34>)
 802bfde:	462b      	mov	r3, r5
 802bfe0:	f000 f8fe 	bl	802c1e0 <fiprintf>
 802bfe4:	f7ff ffe6 	bl	802bfb4 <abort>
 802bfe8:	4b04      	ldr	r3, [pc, #16]	; (802bffc <__assert_func+0x38>)
 802bfea:	461c      	mov	r4, r3
 802bfec:	e7f3      	b.n	802bfd6 <__assert_func+0x12>
 802bfee:	bf00      	nop
 802bff0:	20000114 	.word	0x20000114
 802bff4:	08049a60 	.word	0x08049a60
 802bff8:	08049a6d 	.word	0x08049a6d
 802bffc:	0802f3aa 	.word	0x0802f3aa

0802c000 <atexit>:
 802c000:	2300      	movs	r3, #0
 802c002:	4601      	mov	r1, r0
 802c004:	461a      	mov	r2, r3
 802c006:	4618      	mov	r0, r3
 802c008:	f001 b9e2 	b.w	802d3d0 <__register_exitproc>

0802c00c <__cxa_atexit>:
 802c00c:	b510      	push	{r4, lr}
 802c00e:	4c05      	ldr	r4, [pc, #20]	; (802c024 <__cxa_atexit+0x18>)
 802c010:	4613      	mov	r3, r2
 802c012:	b12c      	cbz	r4, 802c020 <__cxa_atexit+0x14>
 802c014:	460a      	mov	r2, r1
 802c016:	4601      	mov	r1, r0
 802c018:	2002      	movs	r0, #2
 802c01a:	f001 f9d9 	bl	802d3d0 <__register_exitproc>
 802c01e:	bd10      	pop	{r4, pc}
 802c020:	4620      	mov	r0, r4
 802c022:	e7fc      	b.n	802c01e <__cxa_atexit+0x12>
 802c024:	0802d3d1 	.word	0x0802d3d1

0802c028 <__errno>:
 802c028:	4b01      	ldr	r3, [pc, #4]	; (802c030 <__errno+0x8>)
 802c02a:	6818      	ldr	r0, [r3, #0]
 802c02c:	4770      	bx	lr
 802c02e:	bf00      	nop
 802c030:	20000114 	.word	0x20000114

0802c034 <std>:
 802c034:	2300      	movs	r3, #0
 802c036:	b510      	push	{r4, lr}
 802c038:	4604      	mov	r4, r0
 802c03a:	e9c0 3300 	strd	r3, r3, [r0]
 802c03e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802c042:	6083      	str	r3, [r0, #8]
 802c044:	8181      	strh	r1, [r0, #12]
 802c046:	6643      	str	r3, [r0, #100]	; 0x64
 802c048:	81c2      	strh	r2, [r0, #14]
 802c04a:	6183      	str	r3, [r0, #24]
 802c04c:	4619      	mov	r1, r3
 802c04e:	2208      	movs	r2, #8
 802c050:	305c      	adds	r0, #92	; 0x5c
 802c052:	f000 f93d 	bl	802c2d0 <memset>
 802c056:	4b05      	ldr	r3, [pc, #20]	; (802c06c <std+0x38>)
 802c058:	6263      	str	r3, [r4, #36]	; 0x24
 802c05a:	4b05      	ldr	r3, [pc, #20]	; (802c070 <std+0x3c>)
 802c05c:	62a3      	str	r3, [r4, #40]	; 0x28
 802c05e:	4b05      	ldr	r3, [pc, #20]	; (802c074 <std+0x40>)
 802c060:	62e3      	str	r3, [r4, #44]	; 0x2c
 802c062:	4b05      	ldr	r3, [pc, #20]	; (802c078 <std+0x44>)
 802c064:	6224      	str	r4, [r4, #32]
 802c066:	6323      	str	r3, [r4, #48]	; 0x30
 802c068:	bd10      	pop	{r4, pc}
 802c06a:	bf00      	nop
 802c06c:	0802d1a5 	.word	0x0802d1a5
 802c070:	0802d1c7 	.word	0x0802d1c7
 802c074:	0802d1ff 	.word	0x0802d1ff
 802c078:	0802d223 	.word	0x0802d223

0802c07c <_cleanup_r>:
 802c07c:	4901      	ldr	r1, [pc, #4]	; (802c084 <_cleanup_r+0x8>)
 802c07e:	f000 b8c1 	b.w	802c204 <_fwalk_reent>
 802c082:	bf00      	nop
 802c084:	0802e2b9 	.word	0x0802e2b9

0802c088 <__sfmoreglue>:
 802c088:	b570      	push	{r4, r5, r6, lr}
 802c08a:	2268      	movs	r2, #104	; 0x68
 802c08c:	1e4d      	subs	r5, r1, #1
 802c08e:	4355      	muls	r5, r2
 802c090:	460e      	mov	r6, r1
 802c092:	f105 0174 	add.w	r1, r5, #116	; 0x74
 802c096:	f000 f98f 	bl	802c3b8 <_malloc_r>
 802c09a:	4604      	mov	r4, r0
 802c09c:	b140      	cbz	r0, 802c0b0 <__sfmoreglue+0x28>
 802c09e:	2100      	movs	r1, #0
 802c0a0:	e9c0 1600 	strd	r1, r6, [r0]
 802c0a4:	300c      	adds	r0, #12
 802c0a6:	60a0      	str	r0, [r4, #8]
 802c0a8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 802c0ac:	f000 f910 	bl	802c2d0 <memset>
 802c0b0:	4620      	mov	r0, r4
 802c0b2:	bd70      	pop	{r4, r5, r6, pc}

0802c0b4 <__sfp_lock_acquire>:
 802c0b4:	4801      	ldr	r0, [pc, #4]	; (802c0bc <__sfp_lock_acquire+0x8>)
 802c0b6:	f000 b8ea 	b.w	802c28e <__retarget_lock_acquire_recursive>
 802c0ba:	bf00      	nop
 802c0bc:	2001e2de 	.word	0x2001e2de

0802c0c0 <__sfp_lock_release>:
 802c0c0:	4801      	ldr	r0, [pc, #4]	; (802c0c8 <__sfp_lock_release+0x8>)
 802c0c2:	f000 b8e6 	b.w	802c292 <__retarget_lock_release_recursive>
 802c0c6:	bf00      	nop
 802c0c8:	2001e2de 	.word	0x2001e2de

0802c0cc <__sinit_lock_acquire>:
 802c0cc:	4801      	ldr	r0, [pc, #4]	; (802c0d4 <__sinit_lock_acquire+0x8>)
 802c0ce:	f000 b8de 	b.w	802c28e <__retarget_lock_acquire_recursive>
 802c0d2:	bf00      	nop
 802c0d4:	2001e2df 	.word	0x2001e2df

0802c0d8 <__sinit_lock_release>:
 802c0d8:	4801      	ldr	r0, [pc, #4]	; (802c0e0 <__sinit_lock_release+0x8>)
 802c0da:	f000 b8da 	b.w	802c292 <__retarget_lock_release_recursive>
 802c0de:	bf00      	nop
 802c0e0:	2001e2df 	.word	0x2001e2df

0802c0e4 <__sinit>:
 802c0e4:	b510      	push	{r4, lr}
 802c0e6:	4604      	mov	r4, r0
 802c0e8:	f7ff fff0 	bl	802c0cc <__sinit_lock_acquire>
 802c0ec:	69a3      	ldr	r3, [r4, #24]
 802c0ee:	b11b      	cbz	r3, 802c0f8 <__sinit+0x14>
 802c0f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802c0f4:	f7ff bff0 	b.w	802c0d8 <__sinit_lock_release>
 802c0f8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 802c0fc:	6523      	str	r3, [r4, #80]	; 0x50
 802c0fe:	4b13      	ldr	r3, [pc, #76]	; (802c14c <__sinit+0x68>)
 802c100:	4a13      	ldr	r2, [pc, #76]	; (802c150 <__sinit+0x6c>)
 802c102:	681b      	ldr	r3, [r3, #0]
 802c104:	62a2      	str	r2, [r4, #40]	; 0x28
 802c106:	42a3      	cmp	r3, r4
 802c108:	bf04      	itt	eq
 802c10a:	2301      	moveq	r3, #1
 802c10c:	61a3      	streq	r3, [r4, #24]
 802c10e:	4620      	mov	r0, r4
 802c110:	f000 f820 	bl	802c154 <__sfp>
 802c114:	6060      	str	r0, [r4, #4]
 802c116:	4620      	mov	r0, r4
 802c118:	f000 f81c 	bl	802c154 <__sfp>
 802c11c:	60a0      	str	r0, [r4, #8]
 802c11e:	4620      	mov	r0, r4
 802c120:	f000 f818 	bl	802c154 <__sfp>
 802c124:	2200      	movs	r2, #0
 802c126:	60e0      	str	r0, [r4, #12]
 802c128:	2104      	movs	r1, #4
 802c12a:	6860      	ldr	r0, [r4, #4]
 802c12c:	f7ff ff82 	bl	802c034 <std>
 802c130:	68a0      	ldr	r0, [r4, #8]
 802c132:	2201      	movs	r2, #1
 802c134:	2109      	movs	r1, #9
 802c136:	f7ff ff7d 	bl	802c034 <std>
 802c13a:	68e0      	ldr	r0, [r4, #12]
 802c13c:	2202      	movs	r2, #2
 802c13e:	2112      	movs	r1, #18
 802c140:	f7ff ff78 	bl	802c034 <std>
 802c144:	2301      	movs	r3, #1
 802c146:	61a3      	str	r3, [r4, #24]
 802c148:	e7d2      	b.n	802c0f0 <__sinit+0xc>
 802c14a:	bf00      	nop
 802c14c:	08049afc 	.word	0x08049afc
 802c150:	0802c07d 	.word	0x0802c07d

0802c154 <__sfp>:
 802c154:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c156:	4607      	mov	r7, r0
 802c158:	f7ff ffac 	bl	802c0b4 <__sfp_lock_acquire>
 802c15c:	4b1e      	ldr	r3, [pc, #120]	; (802c1d8 <__sfp+0x84>)
 802c15e:	681e      	ldr	r6, [r3, #0]
 802c160:	69b3      	ldr	r3, [r6, #24]
 802c162:	b913      	cbnz	r3, 802c16a <__sfp+0x16>
 802c164:	4630      	mov	r0, r6
 802c166:	f7ff ffbd 	bl	802c0e4 <__sinit>
 802c16a:	3648      	adds	r6, #72	; 0x48
 802c16c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 802c170:	3b01      	subs	r3, #1
 802c172:	d503      	bpl.n	802c17c <__sfp+0x28>
 802c174:	6833      	ldr	r3, [r6, #0]
 802c176:	b30b      	cbz	r3, 802c1bc <__sfp+0x68>
 802c178:	6836      	ldr	r6, [r6, #0]
 802c17a:	e7f7      	b.n	802c16c <__sfp+0x18>
 802c17c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 802c180:	b9d5      	cbnz	r5, 802c1b8 <__sfp+0x64>
 802c182:	4b16      	ldr	r3, [pc, #88]	; (802c1dc <__sfp+0x88>)
 802c184:	60e3      	str	r3, [r4, #12]
 802c186:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802c18a:	6665      	str	r5, [r4, #100]	; 0x64
 802c18c:	f000 f87e 	bl	802c28c <__retarget_lock_init_recursive>
 802c190:	f7ff ff96 	bl	802c0c0 <__sfp_lock_release>
 802c194:	e9c4 5501 	strd	r5, r5, [r4, #4]
 802c198:	e9c4 5504 	strd	r5, r5, [r4, #16]
 802c19c:	6025      	str	r5, [r4, #0]
 802c19e:	61a5      	str	r5, [r4, #24]
 802c1a0:	2208      	movs	r2, #8
 802c1a2:	4629      	mov	r1, r5
 802c1a4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 802c1a8:	f000 f892 	bl	802c2d0 <memset>
 802c1ac:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802c1b0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 802c1b4:	4620      	mov	r0, r4
 802c1b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c1b8:	3468      	adds	r4, #104	; 0x68
 802c1ba:	e7d9      	b.n	802c170 <__sfp+0x1c>
 802c1bc:	2104      	movs	r1, #4
 802c1be:	4638      	mov	r0, r7
 802c1c0:	f7ff ff62 	bl	802c088 <__sfmoreglue>
 802c1c4:	4604      	mov	r4, r0
 802c1c6:	6030      	str	r0, [r6, #0]
 802c1c8:	2800      	cmp	r0, #0
 802c1ca:	d1d5      	bne.n	802c178 <__sfp+0x24>
 802c1cc:	f7ff ff78 	bl	802c0c0 <__sfp_lock_release>
 802c1d0:	230c      	movs	r3, #12
 802c1d2:	603b      	str	r3, [r7, #0]
 802c1d4:	e7ee      	b.n	802c1b4 <__sfp+0x60>
 802c1d6:	bf00      	nop
 802c1d8:	08049afc 	.word	0x08049afc
 802c1dc:	ffff0001 	.word	0xffff0001

0802c1e0 <fiprintf>:
 802c1e0:	b40e      	push	{r1, r2, r3}
 802c1e2:	b503      	push	{r0, r1, lr}
 802c1e4:	4601      	mov	r1, r0
 802c1e6:	ab03      	add	r3, sp, #12
 802c1e8:	4805      	ldr	r0, [pc, #20]	; (802c200 <fiprintf+0x20>)
 802c1ea:	f853 2b04 	ldr.w	r2, [r3], #4
 802c1ee:	6800      	ldr	r0, [r0, #0]
 802c1f0:	9301      	str	r3, [sp, #4]
 802c1f2:	f000 f97f 	bl	802c4f4 <_vfiprintf_r>
 802c1f6:	b002      	add	sp, #8
 802c1f8:	f85d eb04 	ldr.w	lr, [sp], #4
 802c1fc:	b003      	add	sp, #12
 802c1fe:	4770      	bx	lr
 802c200:	20000114 	.word	0x20000114

0802c204 <_fwalk_reent>:
 802c204:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802c208:	4606      	mov	r6, r0
 802c20a:	4688      	mov	r8, r1
 802c20c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 802c210:	2700      	movs	r7, #0
 802c212:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802c216:	f1b9 0901 	subs.w	r9, r9, #1
 802c21a:	d505      	bpl.n	802c228 <_fwalk_reent+0x24>
 802c21c:	6824      	ldr	r4, [r4, #0]
 802c21e:	2c00      	cmp	r4, #0
 802c220:	d1f7      	bne.n	802c212 <_fwalk_reent+0xe>
 802c222:	4638      	mov	r0, r7
 802c224:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802c228:	89ab      	ldrh	r3, [r5, #12]
 802c22a:	2b01      	cmp	r3, #1
 802c22c:	d907      	bls.n	802c23e <_fwalk_reent+0x3a>
 802c22e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802c232:	3301      	adds	r3, #1
 802c234:	d003      	beq.n	802c23e <_fwalk_reent+0x3a>
 802c236:	4629      	mov	r1, r5
 802c238:	4630      	mov	r0, r6
 802c23a:	47c0      	blx	r8
 802c23c:	4307      	orrs	r7, r0
 802c23e:	3568      	adds	r5, #104	; 0x68
 802c240:	e7e9      	b.n	802c216 <_fwalk_reent+0x12>
	...

0802c244 <__libc_init_array>:
 802c244:	b570      	push	{r4, r5, r6, lr}
 802c246:	4d0d      	ldr	r5, [pc, #52]	; (802c27c <__libc_init_array+0x38>)
 802c248:	4c0d      	ldr	r4, [pc, #52]	; (802c280 <__libc_init_array+0x3c>)
 802c24a:	1b64      	subs	r4, r4, r5
 802c24c:	10a4      	asrs	r4, r4, #2
 802c24e:	2600      	movs	r6, #0
 802c250:	42a6      	cmp	r6, r4
 802c252:	d109      	bne.n	802c268 <__libc_init_array+0x24>
 802c254:	4d0b      	ldr	r5, [pc, #44]	; (802c284 <__libc_init_array+0x40>)
 802c256:	4c0c      	ldr	r4, [pc, #48]	; (802c288 <__libc_init_array+0x44>)
 802c258:	f002 fce0 	bl	802ec1c <_init>
 802c25c:	1b64      	subs	r4, r4, r5
 802c25e:	10a4      	asrs	r4, r4, #2
 802c260:	2600      	movs	r6, #0
 802c262:	42a6      	cmp	r6, r4
 802c264:	d105      	bne.n	802c272 <__libc_init_array+0x2e>
 802c266:	bd70      	pop	{r4, r5, r6, pc}
 802c268:	f855 3b04 	ldr.w	r3, [r5], #4
 802c26c:	4798      	blx	r3
 802c26e:	3601      	adds	r6, #1
 802c270:	e7ee      	b.n	802c250 <__libc_init_array+0xc>
 802c272:	f855 3b04 	ldr.w	r3, [r5], #4
 802c276:	4798      	blx	r3
 802c278:	3601      	adds	r6, #1
 802c27a:	e7f2      	b.n	802c262 <__libc_init_array+0x1e>
 802c27c:	080dfd4c 	.word	0x080dfd4c
 802c280:	080dfd4c 	.word	0x080dfd4c
 802c284:	080dfd4c 	.word	0x080dfd4c
 802c288:	080dfd60 	.word	0x080dfd60

0802c28c <__retarget_lock_init_recursive>:
 802c28c:	4770      	bx	lr

0802c28e <__retarget_lock_acquire_recursive>:
 802c28e:	4770      	bx	lr

0802c290 <__retarget_lock_release>:
 802c290:	4770      	bx	lr

0802c292 <__retarget_lock_release_recursive>:
 802c292:	4770      	bx	lr

0802c294 <malloc>:
 802c294:	4b02      	ldr	r3, [pc, #8]	; (802c2a0 <malloc+0xc>)
 802c296:	4601      	mov	r1, r0
 802c298:	6818      	ldr	r0, [r3, #0]
 802c29a:	f000 b88d 	b.w	802c3b8 <_malloc_r>
 802c29e:	bf00      	nop
 802c2a0:	20000114 	.word	0x20000114

0802c2a4 <free>:
 802c2a4:	4b02      	ldr	r3, [pc, #8]	; (802c2b0 <free+0xc>)
 802c2a6:	4601      	mov	r1, r0
 802c2a8:	6818      	ldr	r0, [r3, #0]
 802c2aa:	f000 b819 	b.w	802c2e0 <_free_r>
 802c2ae:	bf00      	nop
 802c2b0:	20000114 	.word	0x20000114

0802c2b4 <memcpy>:
 802c2b4:	440a      	add	r2, r1
 802c2b6:	4291      	cmp	r1, r2
 802c2b8:	f100 33ff 	add.w	r3, r0, #4294967295
 802c2bc:	d100      	bne.n	802c2c0 <memcpy+0xc>
 802c2be:	4770      	bx	lr
 802c2c0:	b510      	push	{r4, lr}
 802c2c2:	f811 4b01 	ldrb.w	r4, [r1], #1
 802c2c6:	f803 4f01 	strb.w	r4, [r3, #1]!
 802c2ca:	4291      	cmp	r1, r2
 802c2cc:	d1f9      	bne.n	802c2c2 <memcpy+0xe>
 802c2ce:	bd10      	pop	{r4, pc}

0802c2d0 <memset>:
 802c2d0:	4402      	add	r2, r0
 802c2d2:	4603      	mov	r3, r0
 802c2d4:	4293      	cmp	r3, r2
 802c2d6:	d100      	bne.n	802c2da <memset+0xa>
 802c2d8:	4770      	bx	lr
 802c2da:	f803 1b01 	strb.w	r1, [r3], #1
 802c2de:	e7f9      	b.n	802c2d4 <memset+0x4>

0802c2e0 <_free_r>:
 802c2e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802c2e2:	2900      	cmp	r1, #0
 802c2e4:	d044      	beq.n	802c370 <_free_r+0x90>
 802c2e6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802c2ea:	9001      	str	r0, [sp, #4]
 802c2ec:	2b00      	cmp	r3, #0
 802c2ee:	f1a1 0404 	sub.w	r4, r1, #4
 802c2f2:	bfb8      	it	lt
 802c2f4:	18e4      	addlt	r4, r4, r3
 802c2f6:	f002 f897 	bl	802e428 <__malloc_lock>
 802c2fa:	4a1e      	ldr	r2, [pc, #120]	; (802c374 <_free_r+0x94>)
 802c2fc:	9801      	ldr	r0, [sp, #4]
 802c2fe:	6813      	ldr	r3, [r2, #0]
 802c300:	b933      	cbnz	r3, 802c310 <_free_r+0x30>
 802c302:	6063      	str	r3, [r4, #4]
 802c304:	6014      	str	r4, [r2, #0]
 802c306:	b003      	add	sp, #12
 802c308:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802c30c:	f002 b892 	b.w	802e434 <__malloc_unlock>
 802c310:	42a3      	cmp	r3, r4
 802c312:	d908      	bls.n	802c326 <_free_r+0x46>
 802c314:	6825      	ldr	r5, [r4, #0]
 802c316:	1961      	adds	r1, r4, r5
 802c318:	428b      	cmp	r3, r1
 802c31a:	bf01      	itttt	eq
 802c31c:	6819      	ldreq	r1, [r3, #0]
 802c31e:	685b      	ldreq	r3, [r3, #4]
 802c320:	1949      	addeq	r1, r1, r5
 802c322:	6021      	streq	r1, [r4, #0]
 802c324:	e7ed      	b.n	802c302 <_free_r+0x22>
 802c326:	461a      	mov	r2, r3
 802c328:	685b      	ldr	r3, [r3, #4]
 802c32a:	b10b      	cbz	r3, 802c330 <_free_r+0x50>
 802c32c:	42a3      	cmp	r3, r4
 802c32e:	d9fa      	bls.n	802c326 <_free_r+0x46>
 802c330:	6811      	ldr	r1, [r2, #0]
 802c332:	1855      	adds	r5, r2, r1
 802c334:	42a5      	cmp	r5, r4
 802c336:	d10b      	bne.n	802c350 <_free_r+0x70>
 802c338:	6824      	ldr	r4, [r4, #0]
 802c33a:	4421      	add	r1, r4
 802c33c:	1854      	adds	r4, r2, r1
 802c33e:	42a3      	cmp	r3, r4
 802c340:	6011      	str	r1, [r2, #0]
 802c342:	d1e0      	bne.n	802c306 <_free_r+0x26>
 802c344:	681c      	ldr	r4, [r3, #0]
 802c346:	685b      	ldr	r3, [r3, #4]
 802c348:	6053      	str	r3, [r2, #4]
 802c34a:	4421      	add	r1, r4
 802c34c:	6011      	str	r1, [r2, #0]
 802c34e:	e7da      	b.n	802c306 <_free_r+0x26>
 802c350:	d902      	bls.n	802c358 <_free_r+0x78>
 802c352:	230c      	movs	r3, #12
 802c354:	6003      	str	r3, [r0, #0]
 802c356:	e7d6      	b.n	802c306 <_free_r+0x26>
 802c358:	6825      	ldr	r5, [r4, #0]
 802c35a:	1961      	adds	r1, r4, r5
 802c35c:	428b      	cmp	r3, r1
 802c35e:	bf04      	itt	eq
 802c360:	6819      	ldreq	r1, [r3, #0]
 802c362:	685b      	ldreq	r3, [r3, #4]
 802c364:	6063      	str	r3, [r4, #4]
 802c366:	bf04      	itt	eq
 802c368:	1949      	addeq	r1, r1, r5
 802c36a:	6021      	streq	r1, [r4, #0]
 802c36c:	6054      	str	r4, [r2, #4]
 802c36e:	e7ca      	b.n	802c306 <_free_r+0x26>
 802c370:	b003      	add	sp, #12
 802c372:	bd30      	pop	{r4, r5, pc}
 802c374:	2001e2e0 	.word	0x2001e2e0

0802c378 <sbrk_aligned>:
 802c378:	b570      	push	{r4, r5, r6, lr}
 802c37a:	4e0e      	ldr	r6, [pc, #56]	; (802c3b4 <sbrk_aligned+0x3c>)
 802c37c:	460c      	mov	r4, r1
 802c37e:	6831      	ldr	r1, [r6, #0]
 802c380:	4605      	mov	r5, r0
 802c382:	b911      	cbnz	r1, 802c38a <sbrk_aligned+0x12>
 802c384:	f000 feba 	bl	802d0fc <_sbrk_r>
 802c388:	6030      	str	r0, [r6, #0]
 802c38a:	4621      	mov	r1, r4
 802c38c:	4628      	mov	r0, r5
 802c38e:	f000 feb5 	bl	802d0fc <_sbrk_r>
 802c392:	1c43      	adds	r3, r0, #1
 802c394:	d00a      	beq.n	802c3ac <sbrk_aligned+0x34>
 802c396:	1cc4      	adds	r4, r0, #3
 802c398:	f024 0403 	bic.w	r4, r4, #3
 802c39c:	42a0      	cmp	r0, r4
 802c39e:	d007      	beq.n	802c3b0 <sbrk_aligned+0x38>
 802c3a0:	1a21      	subs	r1, r4, r0
 802c3a2:	4628      	mov	r0, r5
 802c3a4:	f000 feaa 	bl	802d0fc <_sbrk_r>
 802c3a8:	3001      	adds	r0, #1
 802c3aa:	d101      	bne.n	802c3b0 <sbrk_aligned+0x38>
 802c3ac:	f04f 34ff 	mov.w	r4, #4294967295
 802c3b0:	4620      	mov	r0, r4
 802c3b2:	bd70      	pop	{r4, r5, r6, pc}
 802c3b4:	2001e2e4 	.word	0x2001e2e4

0802c3b8 <_malloc_r>:
 802c3b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c3bc:	1ccd      	adds	r5, r1, #3
 802c3be:	f025 0503 	bic.w	r5, r5, #3
 802c3c2:	3508      	adds	r5, #8
 802c3c4:	2d0c      	cmp	r5, #12
 802c3c6:	bf38      	it	cc
 802c3c8:	250c      	movcc	r5, #12
 802c3ca:	2d00      	cmp	r5, #0
 802c3cc:	4607      	mov	r7, r0
 802c3ce:	db01      	blt.n	802c3d4 <_malloc_r+0x1c>
 802c3d0:	42a9      	cmp	r1, r5
 802c3d2:	d905      	bls.n	802c3e0 <_malloc_r+0x28>
 802c3d4:	230c      	movs	r3, #12
 802c3d6:	603b      	str	r3, [r7, #0]
 802c3d8:	2600      	movs	r6, #0
 802c3da:	4630      	mov	r0, r6
 802c3dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c3e0:	4e2e      	ldr	r6, [pc, #184]	; (802c49c <_malloc_r+0xe4>)
 802c3e2:	f002 f821 	bl	802e428 <__malloc_lock>
 802c3e6:	6833      	ldr	r3, [r6, #0]
 802c3e8:	461c      	mov	r4, r3
 802c3ea:	bb34      	cbnz	r4, 802c43a <_malloc_r+0x82>
 802c3ec:	4629      	mov	r1, r5
 802c3ee:	4638      	mov	r0, r7
 802c3f0:	f7ff ffc2 	bl	802c378 <sbrk_aligned>
 802c3f4:	1c43      	adds	r3, r0, #1
 802c3f6:	4604      	mov	r4, r0
 802c3f8:	d14d      	bne.n	802c496 <_malloc_r+0xde>
 802c3fa:	6834      	ldr	r4, [r6, #0]
 802c3fc:	4626      	mov	r6, r4
 802c3fe:	2e00      	cmp	r6, #0
 802c400:	d140      	bne.n	802c484 <_malloc_r+0xcc>
 802c402:	6823      	ldr	r3, [r4, #0]
 802c404:	4631      	mov	r1, r6
 802c406:	4638      	mov	r0, r7
 802c408:	eb04 0803 	add.w	r8, r4, r3
 802c40c:	f000 fe76 	bl	802d0fc <_sbrk_r>
 802c410:	4580      	cmp	r8, r0
 802c412:	d13a      	bne.n	802c48a <_malloc_r+0xd2>
 802c414:	6821      	ldr	r1, [r4, #0]
 802c416:	3503      	adds	r5, #3
 802c418:	1a6d      	subs	r5, r5, r1
 802c41a:	f025 0503 	bic.w	r5, r5, #3
 802c41e:	3508      	adds	r5, #8
 802c420:	2d0c      	cmp	r5, #12
 802c422:	bf38      	it	cc
 802c424:	250c      	movcc	r5, #12
 802c426:	4629      	mov	r1, r5
 802c428:	4638      	mov	r0, r7
 802c42a:	f7ff ffa5 	bl	802c378 <sbrk_aligned>
 802c42e:	3001      	adds	r0, #1
 802c430:	d02b      	beq.n	802c48a <_malloc_r+0xd2>
 802c432:	6823      	ldr	r3, [r4, #0]
 802c434:	442b      	add	r3, r5
 802c436:	6023      	str	r3, [r4, #0]
 802c438:	e00e      	b.n	802c458 <_malloc_r+0xa0>
 802c43a:	6822      	ldr	r2, [r4, #0]
 802c43c:	1b52      	subs	r2, r2, r5
 802c43e:	d41e      	bmi.n	802c47e <_malloc_r+0xc6>
 802c440:	2a0b      	cmp	r2, #11
 802c442:	d916      	bls.n	802c472 <_malloc_r+0xba>
 802c444:	1961      	adds	r1, r4, r5
 802c446:	42a3      	cmp	r3, r4
 802c448:	6025      	str	r5, [r4, #0]
 802c44a:	bf18      	it	ne
 802c44c:	6059      	strne	r1, [r3, #4]
 802c44e:	6863      	ldr	r3, [r4, #4]
 802c450:	bf08      	it	eq
 802c452:	6031      	streq	r1, [r6, #0]
 802c454:	5162      	str	r2, [r4, r5]
 802c456:	604b      	str	r3, [r1, #4]
 802c458:	4638      	mov	r0, r7
 802c45a:	f104 060b 	add.w	r6, r4, #11
 802c45e:	f001 ffe9 	bl	802e434 <__malloc_unlock>
 802c462:	f026 0607 	bic.w	r6, r6, #7
 802c466:	1d23      	adds	r3, r4, #4
 802c468:	1af2      	subs	r2, r6, r3
 802c46a:	d0b6      	beq.n	802c3da <_malloc_r+0x22>
 802c46c:	1b9b      	subs	r3, r3, r6
 802c46e:	50a3      	str	r3, [r4, r2]
 802c470:	e7b3      	b.n	802c3da <_malloc_r+0x22>
 802c472:	6862      	ldr	r2, [r4, #4]
 802c474:	42a3      	cmp	r3, r4
 802c476:	bf0c      	ite	eq
 802c478:	6032      	streq	r2, [r6, #0]
 802c47a:	605a      	strne	r2, [r3, #4]
 802c47c:	e7ec      	b.n	802c458 <_malloc_r+0xa0>
 802c47e:	4623      	mov	r3, r4
 802c480:	6864      	ldr	r4, [r4, #4]
 802c482:	e7b2      	b.n	802c3ea <_malloc_r+0x32>
 802c484:	4634      	mov	r4, r6
 802c486:	6876      	ldr	r6, [r6, #4]
 802c488:	e7b9      	b.n	802c3fe <_malloc_r+0x46>
 802c48a:	230c      	movs	r3, #12
 802c48c:	603b      	str	r3, [r7, #0]
 802c48e:	4638      	mov	r0, r7
 802c490:	f001 ffd0 	bl	802e434 <__malloc_unlock>
 802c494:	e7a1      	b.n	802c3da <_malloc_r+0x22>
 802c496:	6025      	str	r5, [r4, #0]
 802c498:	e7de      	b.n	802c458 <_malloc_r+0xa0>
 802c49a:	bf00      	nop
 802c49c:	2001e2e0 	.word	0x2001e2e0

0802c4a0 <__sfputc_r>:
 802c4a0:	6893      	ldr	r3, [r2, #8]
 802c4a2:	3b01      	subs	r3, #1
 802c4a4:	2b00      	cmp	r3, #0
 802c4a6:	b410      	push	{r4}
 802c4a8:	6093      	str	r3, [r2, #8]
 802c4aa:	da08      	bge.n	802c4be <__sfputc_r+0x1e>
 802c4ac:	6994      	ldr	r4, [r2, #24]
 802c4ae:	42a3      	cmp	r3, r4
 802c4b0:	db01      	blt.n	802c4b6 <__sfputc_r+0x16>
 802c4b2:	290a      	cmp	r1, #10
 802c4b4:	d103      	bne.n	802c4be <__sfputc_r+0x1e>
 802c4b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c4ba:	f000 beb7 	b.w	802d22c <__swbuf_r>
 802c4be:	6813      	ldr	r3, [r2, #0]
 802c4c0:	1c58      	adds	r0, r3, #1
 802c4c2:	6010      	str	r0, [r2, #0]
 802c4c4:	7019      	strb	r1, [r3, #0]
 802c4c6:	4608      	mov	r0, r1
 802c4c8:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c4cc:	4770      	bx	lr

0802c4ce <__sfputs_r>:
 802c4ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c4d0:	4606      	mov	r6, r0
 802c4d2:	460f      	mov	r7, r1
 802c4d4:	4614      	mov	r4, r2
 802c4d6:	18d5      	adds	r5, r2, r3
 802c4d8:	42ac      	cmp	r4, r5
 802c4da:	d101      	bne.n	802c4e0 <__sfputs_r+0x12>
 802c4dc:	2000      	movs	r0, #0
 802c4de:	e007      	b.n	802c4f0 <__sfputs_r+0x22>
 802c4e0:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c4e4:	463a      	mov	r2, r7
 802c4e6:	4630      	mov	r0, r6
 802c4e8:	f7ff ffda 	bl	802c4a0 <__sfputc_r>
 802c4ec:	1c43      	adds	r3, r0, #1
 802c4ee:	d1f3      	bne.n	802c4d8 <__sfputs_r+0xa>
 802c4f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802c4f4 <_vfiprintf_r>:
 802c4f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c4f8:	460d      	mov	r5, r1
 802c4fa:	b09d      	sub	sp, #116	; 0x74
 802c4fc:	4614      	mov	r4, r2
 802c4fe:	4698      	mov	r8, r3
 802c500:	4606      	mov	r6, r0
 802c502:	b118      	cbz	r0, 802c50c <_vfiprintf_r+0x18>
 802c504:	6983      	ldr	r3, [r0, #24]
 802c506:	b90b      	cbnz	r3, 802c50c <_vfiprintf_r+0x18>
 802c508:	f7ff fdec 	bl	802c0e4 <__sinit>
 802c50c:	4b89      	ldr	r3, [pc, #548]	; (802c734 <_vfiprintf_r+0x240>)
 802c50e:	429d      	cmp	r5, r3
 802c510:	d11b      	bne.n	802c54a <_vfiprintf_r+0x56>
 802c512:	6875      	ldr	r5, [r6, #4]
 802c514:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c516:	07d9      	lsls	r1, r3, #31
 802c518:	d405      	bmi.n	802c526 <_vfiprintf_r+0x32>
 802c51a:	89ab      	ldrh	r3, [r5, #12]
 802c51c:	059a      	lsls	r2, r3, #22
 802c51e:	d402      	bmi.n	802c526 <_vfiprintf_r+0x32>
 802c520:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c522:	f7ff feb4 	bl	802c28e <__retarget_lock_acquire_recursive>
 802c526:	89ab      	ldrh	r3, [r5, #12]
 802c528:	071b      	lsls	r3, r3, #28
 802c52a:	d501      	bpl.n	802c530 <_vfiprintf_r+0x3c>
 802c52c:	692b      	ldr	r3, [r5, #16]
 802c52e:	b9eb      	cbnz	r3, 802c56c <_vfiprintf_r+0x78>
 802c530:	4629      	mov	r1, r5
 802c532:	4630      	mov	r0, r6
 802c534:	f000 fede 	bl	802d2f4 <__swsetup_r>
 802c538:	b1c0      	cbz	r0, 802c56c <_vfiprintf_r+0x78>
 802c53a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c53c:	07dc      	lsls	r4, r3, #31
 802c53e:	d50e      	bpl.n	802c55e <_vfiprintf_r+0x6a>
 802c540:	f04f 30ff 	mov.w	r0, #4294967295
 802c544:	b01d      	add	sp, #116	; 0x74
 802c546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c54a:	4b7b      	ldr	r3, [pc, #492]	; (802c738 <_vfiprintf_r+0x244>)
 802c54c:	429d      	cmp	r5, r3
 802c54e:	d101      	bne.n	802c554 <_vfiprintf_r+0x60>
 802c550:	68b5      	ldr	r5, [r6, #8]
 802c552:	e7df      	b.n	802c514 <_vfiprintf_r+0x20>
 802c554:	4b79      	ldr	r3, [pc, #484]	; (802c73c <_vfiprintf_r+0x248>)
 802c556:	429d      	cmp	r5, r3
 802c558:	bf08      	it	eq
 802c55a:	68f5      	ldreq	r5, [r6, #12]
 802c55c:	e7da      	b.n	802c514 <_vfiprintf_r+0x20>
 802c55e:	89ab      	ldrh	r3, [r5, #12]
 802c560:	0598      	lsls	r0, r3, #22
 802c562:	d4ed      	bmi.n	802c540 <_vfiprintf_r+0x4c>
 802c564:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c566:	f7ff fe94 	bl	802c292 <__retarget_lock_release_recursive>
 802c56a:	e7e9      	b.n	802c540 <_vfiprintf_r+0x4c>
 802c56c:	2300      	movs	r3, #0
 802c56e:	9309      	str	r3, [sp, #36]	; 0x24
 802c570:	2320      	movs	r3, #32
 802c572:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802c576:	f8cd 800c 	str.w	r8, [sp, #12]
 802c57a:	2330      	movs	r3, #48	; 0x30
 802c57c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 802c740 <_vfiprintf_r+0x24c>
 802c580:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802c584:	f04f 0901 	mov.w	r9, #1
 802c588:	4623      	mov	r3, r4
 802c58a:	469a      	mov	sl, r3
 802c58c:	f813 2b01 	ldrb.w	r2, [r3], #1
 802c590:	b10a      	cbz	r2, 802c596 <_vfiprintf_r+0xa2>
 802c592:	2a25      	cmp	r2, #37	; 0x25
 802c594:	d1f9      	bne.n	802c58a <_vfiprintf_r+0x96>
 802c596:	ebba 0b04 	subs.w	fp, sl, r4
 802c59a:	d00b      	beq.n	802c5b4 <_vfiprintf_r+0xc0>
 802c59c:	465b      	mov	r3, fp
 802c59e:	4622      	mov	r2, r4
 802c5a0:	4629      	mov	r1, r5
 802c5a2:	4630      	mov	r0, r6
 802c5a4:	f7ff ff93 	bl	802c4ce <__sfputs_r>
 802c5a8:	3001      	adds	r0, #1
 802c5aa:	f000 80aa 	beq.w	802c702 <_vfiprintf_r+0x20e>
 802c5ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802c5b0:	445a      	add	r2, fp
 802c5b2:	9209      	str	r2, [sp, #36]	; 0x24
 802c5b4:	f89a 3000 	ldrb.w	r3, [sl]
 802c5b8:	2b00      	cmp	r3, #0
 802c5ba:	f000 80a2 	beq.w	802c702 <_vfiprintf_r+0x20e>
 802c5be:	2300      	movs	r3, #0
 802c5c0:	f04f 32ff 	mov.w	r2, #4294967295
 802c5c4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802c5c8:	f10a 0a01 	add.w	sl, sl, #1
 802c5cc:	9304      	str	r3, [sp, #16]
 802c5ce:	9307      	str	r3, [sp, #28]
 802c5d0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802c5d4:	931a      	str	r3, [sp, #104]	; 0x68
 802c5d6:	4654      	mov	r4, sl
 802c5d8:	2205      	movs	r2, #5
 802c5da:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c5de:	4858      	ldr	r0, [pc, #352]	; (802c740 <_vfiprintf_r+0x24c>)
 802c5e0:	f7d3 fe6e 	bl	80002c0 <memchr>
 802c5e4:	9a04      	ldr	r2, [sp, #16]
 802c5e6:	b9d8      	cbnz	r0, 802c620 <_vfiprintf_r+0x12c>
 802c5e8:	06d1      	lsls	r1, r2, #27
 802c5ea:	bf44      	itt	mi
 802c5ec:	2320      	movmi	r3, #32
 802c5ee:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c5f2:	0713      	lsls	r3, r2, #28
 802c5f4:	bf44      	itt	mi
 802c5f6:	232b      	movmi	r3, #43	; 0x2b
 802c5f8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c5fc:	f89a 3000 	ldrb.w	r3, [sl]
 802c600:	2b2a      	cmp	r3, #42	; 0x2a
 802c602:	d015      	beq.n	802c630 <_vfiprintf_r+0x13c>
 802c604:	9a07      	ldr	r2, [sp, #28]
 802c606:	4654      	mov	r4, sl
 802c608:	2000      	movs	r0, #0
 802c60a:	f04f 0c0a 	mov.w	ip, #10
 802c60e:	4621      	mov	r1, r4
 802c610:	f811 3b01 	ldrb.w	r3, [r1], #1
 802c614:	3b30      	subs	r3, #48	; 0x30
 802c616:	2b09      	cmp	r3, #9
 802c618:	d94e      	bls.n	802c6b8 <_vfiprintf_r+0x1c4>
 802c61a:	b1b0      	cbz	r0, 802c64a <_vfiprintf_r+0x156>
 802c61c:	9207      	str	r2, [sp, #28]
 802c61e:	e014      	b.n	802c64a <_vfiprintf_r+0x156>
 802c620:	eba0 0308 	sub.w	r3, r0, r8
 802c624:	fa09 f303 	lsl.w	r3, r9, r3
 802c628:	4313      	orrs	r3, r2
 802c62a:	9304      	str	r3, [sp, #16]
 802c62c:	46a2      	mov	sl, r4
 802c62e:	e7d2      	b.n	802c5d6 <_vfiprintf_r+0xe2>
 802c630:	9b03      	ldr	r3, [sp, #12]
 802c632:	1d19      	adds	r1, r3, #4
 802c634:	681b      	ldr	r3, [r3, #0]
 802c636:	9103      	str	r1, [sp, #12]
 802c638:	2b00      	cmp	r3, #0
 802c63a:	bfbb      	ittet	lt
 802c63c:	425b      	neglt	r3, r3
 802c63e:	f042 0202 	orrlt.w	r2, r2, #2
 802c642:	9307      	strge	r3, [sp, #28]
 802c644:	9307      	strlt	r3, [sp, #28]
 802c646:	bfb8      	it	lt
 802c648:	9204      	strlt	r2, [sp, #16]
 802c64a:	7823      	ldrb	r3, [r4, #0]
 802c64c:	2b2e      	cmp	r3, #46	; 0x2e
 802c64e:	d10c      	bne.n	802c66a <_vfiprintf_r+0x176>
 802c650:	7863      	ldrb	r3, [r4, #1]
 802c652:	2b2a      	cmp	r3, #42	; 0x2a
 802c654:	d135      	bne.n	802c6c2 <_vfiprintf_r+0x1ce>
 802c656:	9b03      	ldr	r3, [sp, #12]
 802c658:	1d1a      	adds	r2, r3, #4
 802c65a:	681b      	ldr	r3, [r3, #0]
 802c65c:	9203      	str	r2, [sp, #12]
 802c65e:	2b00      	cmp	r3, #0
 802c660:	bfb8      	it	lt
 802c662:	f04f 33ff 	movlt.w	r3, #4294967295
 802c666:	3402      	adds	r4, #2
 802c668:	9305      	str	r3, [sp, #20]
 802c66a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 802c750 <_vfiprintf_r+0x25c>
 802c66e:	7821      	ldrb	r1, [r4, #0]
 802c670:	2203      	movs	r2, #3
 802c672:	4650      	mov	r0, sl
 802c674:	f7d3 fe24 	bl	80002c0 <memchr>
 802c678:	b140      	cbz	r0, 802c68c <_vfiprintf_r+0x198>
 802c67a:	2340      	movs	r3, #64	; 0x40
 802c67c:	eba0 000a 	sub.w	r0, r0, sl
 802c680:	fa03 f000 	lsl.w	r0, r3, r0
 802c684:	9b04      	ldr	r3, [sp, #16]
 802c686:	4303      	orrs	r3, r0
 802c688:	3401      	adds	r4, #1
 802c68a:	9304      	str	r3, [sp, #16]
 802c68c:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c690:	482c      	ldr	r0, [pc, #176]	; (802c744 <_vfiprintf_r+0x250>)
 802c692:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802c696:	2206      	movs	r2, #6
 802c698:	f7d3 fe12 	bl	80002c0 <memchr>
 802c69c:	2800      	cmp	r0, #0
 802c69e:	d03f      	beq.n	802c720 <_vfiprintf_r+0x22c>
 802c6a0:	4b29      	ldr	r3, [pc, #164]	; (802c748 <_vfiprintf_r+0x254>)
 802c6a2:	bb1b      	cbnz	r3, 802c6ec <_vfiprintf_r+0x1f8>
 802c6a4:	9b03      	ldr	r3, [sp, #12]
 802c6a6:	3307      	adds	r3, #7
 802c6a8:	f023 0307 	bic.w	r3, r3, #7
 802c6ac:	3308      	adds	r3, #8
 802c6ae:	9303      	str	r3, [sp, #12]
 802c6b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802c6b2:	443b      	add	r3, r7
 802c6b4:	9309      	str	r3, [sp, #36]	; 0x24
 802c6b6:	e767      	b.n	802c588 <_vfiprintf_r+0x94>
 802c6b8:	fb0c 3202 	mla	r2, ip, r2, r3
 802c6bc:	460c      	mov	r4, r1
 802c6be:	2001      	movs	r0, #1
 802c6c0:	e7a5      	b.n	802c60e <_vfiprintf_r+0x11a>
 802c6c2:	2300      	movs	r3, #0
 802c6c4:	3401      	adds	r4, #1
 802c6c6:	9305      	str	r3, [sp, #20]
 802c6c8:	4619      	mov	r1, r3
 802c6ca:	f04f 0c0a 	mov.w	ip, #10
 802c6ce:	4620      	mov	r0, r4
 802c6d0:	f810 2b01 	ldrb.w	r2, [r0], #1
 802c6d4:	3a30      	subs	r2, #48	; 0x30
 802c6d6:	2a09      	cmp	r2, #9
 802c6d8:	d903      	bls.n	802c6e2 <_vfiprintf_r+0x1ee>
 802c6da:	2b00      	cmp	r3, #0
 802c6dc:	d0c5      	beq.n	802c66a <_vfiprintf_r+0x176>
 802c6de:	9105      	str	r1, [sp, #20]
 802c6e0:	e7c3      	b.n	802c66a <_vfiprintf_r+0x176>
 802c6e2:	fb0c 2101 	mla	r1, ip, r1, r2
 802c6e6:	4604      	mov	r4, r0
 802c6e8:	2301      	movs	r3, #1
 802c6ea:	e7f0      	b.n	802c6ce <_vfiprintf_r+0x1da>
 802c6ec:	ab03      	add	r3, sp, #12
 802c6ee:	9300      	str	r3, [sp, #0]
 802c6f0:	462a      	mov	r2, r5
 802c6f2:	4b16      	ldr	r3, [pc, #88]	; (802c74c <_vfiprintf_r+0x258>)
 802c6f4:	a904      	add	r1, sp, #16
 802c6f6:	4630      	mov	r0, r6
 802c6f8:	f000 f8cc 	bl	802c894 <_printf_float>
 802c6fc:	4607      	mov	r7, r0
 802c6fe:	1c78      	adds	r0, r7, #1
 802c700:	d1d6      	bne.n	802c6b0 <_vfiprintf_r+0x1bc>
 802c702:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c704:	07d9      	lsls	r1, r3, #31
 802c706:	d405      	bmi.n	802c714 <_vfiprintf_r+0x220>
 802c708:	89ab      	ldrh	r3, [r5, #12]
 802c70a:	059a      	lsls	r2, r3, #22
 802c70c:	d402      	bmi.n	802c714 <_vfiprintf_r+0x220>
 802c70e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c710:	f7ff fdbf 	bl	802c292 <__retarget_lock_release_recursive>
 802c714:	89ab      	ldrh	r3, [r5, #12]
 802c716:	065b      	lsls	r3, r3, #25
 802c718:	f53f af12 	bmi.w	802c540 <_vfiprintf_r+0x4c>
 802c71c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c71e:	e711      	b.n	802c544 <_vfiprintf_r+0x50>
 802c720:	ab03      	add	r3, sp, #12
 802c722:	9300      	str	r3, [sp, #0]
 802c724:	462a      	mov	r2, r5
 802c726:	4b09      	ldr	r3, [pc, #36]	; (802c74c <_vfiprintf_r+0x258>)
 802c728:	a904      	add	r1, sp, #16
 802c72a:	4630      	mov	r0, r6
 802c72c:	f000 fb56 	bl	802cddc <_printf_i>
 802c730:	e7e4      	b.n	802c6fc <_vfiprintf_r+0x208>
 802c732:	bf00      	nop
 802c734:	08049abc 	.word	0x08049abc
 802c738:	08049adc 	.word	0x08049adc
 802c73c:	08049a9c 	.word	0x08049a9c
 802c740:	08049b00 	.word	0x08049b00
 802c744:	08049b0a 	.word	0x08049b0a
 802c748:	0802c895 	.word	0x0802c895
 802c74c:	0802c4cf 	.word	0x0802c4cf
 802c750:	08049b06 	.word	0x08049b06

0802c754 <__cvt>:
 802c754:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802c758:	ec55 4b10 	vmov	r4, r5, d0
 802c75c:	2d00      	cmp	r5, #0
 802c75e:	460e      	mov	r6, r1
 802c760:	4619      	mov	r1, r3
 802c762:	462b      	mov	r3, r5
 802c764:	bfbb      	ittet	lt
 802c766:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 802c76a:	461d      	movlt	r5, r3
 802c76c:	2300      	movge	r3, #0
 802c76e:	232d      	movlt	r3, #45	; 0x2d
 802c770:	700b      	strb	r3, [r1, #0]
 802c772:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802c774:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 802c778:	4691      	mov	r9, r2
 802c77a:	f023 0820 	bic.w	r8, r3, #32
 802c77e:	bfbc      	itt	lt
 802c780:	4622      	movlt	r2, r4
 802c782:	4614      	movlt	r4, r2
 802c784:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 802c788:	d005      	beq.n	802c796 <__cvt+0x42>
 802c78a:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 802c78e:	d100      	bne.n	802c792 <__cvt+0x3e>
 802c790:	3601      	adds	r6, #1
 802c792:	2102      	movs	r1, #2
 802c794:	e000      	b.n	802c798 <__cvt+0x44>
 802c796:	2103      	movs	r1, #3
 802c798:	ab03      	add	r3, sp, #12
 802c79a:	9301      	str	r3, [sp, #4]
 802c79c:	ab02      	add	r3, sp, #8
 802c79e:	9300      	str	r3, [sp, #0]
 802c7a0:	ec45 4b10 	vmov	d0, r4, r5
 802c7a4:	4653      	mov	r3, sl
 802c7a6:	4632      	mov	r2, r6
 802c7a8:	f000 ff12 	bl	802d5d0 <_dtoa_r>
 802c7ac:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 802c7b0:	4607      	mov	r7, r0
 802c7b2:	d102      	bne.n	802c7ba <__cvt+0x66>
 802c7b4:	f019 0f01 	tst.w	r9, #1
 802c7b8:	d022      	beq.n	802c800 <__cvt+0xac>
 802c7ba:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 802c7be:	eb07 0906 	add.w	r9, r7, r6
 802c7c2:	d110      	bne.n	802c7e6 <__cvt+0x92>
 802c7c4:	783b      	ldrb	r3, [r7, #0]
 802c7c6:	2b30      	cmp	r3, #48	; 0x30
 802c7c8:	d10a      	bne.n	802c7e0 <__cvt+0x8c>
 802c7ca:	2200      	movs	r2, #0
 802c7cc:	2300      	movs	r3, #0
 802c7ce:	4620      	mov	r0, r4
 802c7d0:	4629      	mov	r1, r5
 802c7d2:	f7d4 f9e9 	bl	8000ba8 <__aeabi_dcmpeq>
 802c7d6:	b918      	cbnz	r0, 802c7e0 <__cvt+0x8c>
 802c7d8:	f1c6 0601 	rsb	r6, r6, #1
 802c7dc:	f8ca 6000 	str.w	r6, [sl]
 802c7e0:	f8da 3000 	ldr.w	r3, [sl]
 802c7e4:	4499      	add	r9, r3
 802c7e6:	2200      	movs	r2, #0
 802c7e8:	2300      	movs	r3, #0
 802c7ea:	4620      	mov	r0, r4
 802c7ec:	4629      	mov	r1, r5
 802c7ee:	f7d4 f9db 	bl	8000ba8 <__aeabi_dcmpeq>
 802c7f2:	b108      	cbz	r0, 802c7f8 <__cvt+0xa4>
 802c7f4:	f8cd 900c 	str.w	r9, [sp, #12]
 802c7f8:	2230      	movs	r2, #48	; 0x30
 802c7fa:	9b03      	ldr	r3, [sp, #12]
 802c7fc:	454b      	cmp	r3, r9
 802c7fe:	d307      	bcc.n	802c810 <__cvt+0xbc>
 802c800:	9b03      	ldr	r3, [sp, #12]
 802c802:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802c804:	1bdb      	subs	r3, r3, r7
 802c806:	4638      	mov	r0, r7
 802c808:	6013      	str	r3, [r2, #0]
 802c80a:	b004      	add	sp, #16
 802c80c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c810:	1c59      	adds	r1, r3, #1
 802c812:	9103      	str	r1, [sp, #12]
 802c814:	701a      	strb	r2, [r3, #0]
 802c816:	e7f0      	b.n	802c7fa <__cvt+0xa6>

0802c818 <__exponent>:
 802c818:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802c81a:	4603      	mov	r3, r0
 802c81c:	2900      	cmp	r1, #0
 802c81e:	bfb8      	it	lt
 802c820:	4249      	neglt	r1, r1
 802c822:	f803 2b02 	strb.w	r2, [r3], #2
 802c826:	bfb4      	ite	lt
 802c828:	222d      	movlt	r2, #45	; 0x2d
 802c82a:	222b      	movge	r2, #43	; 0x2b
 802c82c:	2909      	cmp	r1, #9
 802c82e:	7042      	strb	r2, [r0, #1]
 802c830:	dd2a      	ble.n	802c888 <__exponent+0x70>
 802c832:	f10d 0407 	add.w	r4, sp, #7
 802c836:	46a4      	mov	ip, r4
 802c838:	270a      	movs	r7, #10
 802c83a:	46a6      	mov	lr, r4
 802c83c:	460a      	mov	r2, r1
 802c83e:	fb91 f6f7 	sdiv	r6, r1, r7
 802c842:	fb07 1516 	mls	r5, r7, r6, r1
 802c846:	3530      	adds	r5, #48	; 0x30
 802c848:	2a63      	cmp	r2, #99	; 0x63
 802c84a:	f104 34ff 	add.w	r4, r4, #4294967295
 802c84e:	f80e 5c01 	strb.w	r5, [lr, #-1]
 802c852:	4631      	mov	r1, r6
 802c854:	dcf1      	bgt.n	802c83a <__exponent+0x22>
 802c856:	3130      	adds	r1, #48	; 0x30
 802c858:	f1ae 0502 	sub.w	r5, lr, #2
 802c85c:	f804 1c01 	strb.w	r1, [r4, #-1]
 802c860:	1c44      	adds	r4, r0, #1
 802c862:	4629      	mov	r1, r5
 802c864:	4561      	cmp	r1, ip
 802c866:	d30a      	bcc.n	802c87e <__exponent+0x66>
 802c868:	f10d 0209 	add.w	r2, sp, #9
 802c86c:	eba2 020e 	sub.w	r2, r2, lr
 802c870:	4565      	cmp	r5, ip
 802c872:	bf88      	it	hi
 802c874:	2200      	movhi	r2, #0
 802c876:	4413      	add	r3, r2
 802c878:	1a18      	subs	r0, r3, r0
 802c87a:	b003      	add	sp, #12
 802c87c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c87e:	f811 2b01 	ldrb.w	r2, [r1], #1
 802c882:	f804 2f01 	strb.w	r2, [r4, #1]!
 802c886:	e7ed      	b.n	802c864 <__exponent+0x4c>
 802c888:	2330      	movs	r3, #48	; 0x30
 802c88a:	3130      	adds	r1, #48	; 0x30
 802c88c:	7083      	strb	r3, [r0, #2]
 802c88e:	70c1      	strb	r1, [r0, #3]
 802c890:	1d03      	adds	r3, r0, #4
 802c892:	e7f1      	b.n	802c878 <__exponent+0x60>

0802c894 <_printf_float>:
 802c894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c898:	ed2d 8b02 	vpush	{d8}
 802c89c:	b08d      	sub	sp, #52	; 0x34
 802c89e:	460c      	mov	r4, r1
 802c8a0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 802c8a4:	4616      	mov	r6, r2
 802c8a6:	461f      	mov	r7, r3
 802c8a8:	4605      	mov	r5, r0
 802c8aa:	f001 fd41 	bl	802e330 <_localeconv_r>
 802c8ae:	f8d0 a000 	ldr.w	sl, [r0]
 802c8b2:	4650      	mov	r0, sl
 802c8b4:	f7d3 fcfc 	bl	80002b0 <strlen>
 802c8b8:	2300      	movs	r3, #0
 802c8ba:	930a      	str	r3, [sp, #40]	; 0x28
 802c8bc:	6823      	ldr	r3, [r4, #0]
 802c8be:	9305      	str	r3, [sp, #20]
 802c8c0:	f8d8 3000 	ldr.w	r3, [r8]
 802c8c4:	f894 b018 	ldrb.w	fp, [r4, #24]
 802c8c8:	3307      	adds	r3, #7
 802c8ca:	f023 0307 	bic.w	r3, r3, #7
 802c8ce:	f103 0208 	add.w	r2, r3, #8
 802c8d2:	f8c8 2000 	str.w	r2, [r8]
 802c8d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 802c8da:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 802c8de:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 802c8e2:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 802c8e6:	9307      	str	r3, [sp, #28]
 802c8e8:	f8cd 8018 	str.w	r8, [sp, #24]
 802c8ec:	ee08 0a10 	vmov	s16, r0
 802c8f0:	4b9f      	ldr	r3, [pc, #636]	; (802cb70 <_printf_float+0x2dc>)
 802c8f2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802c8f6:	f04f 32ff 	mov.w	r2, #4294967295
 802c8fa:	f7d4 f987 	bl	8000c0c <__aeabi_dcmpun>
 802c8fe:	bb88      	cbnz	r0, 802c964 <_printf_float+0xd0>
 802c900:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802c904:	4b9a      	ldr	r3, [pc, #616]	; (802cb70 <_printf_float+0x2dc>)
 802c906:	f04f 32ff 	mov.w	r2, #4294967295
 802c90a:	f7d4 f961 	bl	8000bd0 <__aeabi_dcmple>
 802c90e:	bb48      	cbnz	r0, 802c964 <_printf_float+0xd0>
 802c910:	2200      	movs	r2, #0
 802c912:	2300      	movs	r3, #0
 802c914:	4640      	mov	r0, r8
 802c916:	4649      	mov	r1, r9
 802c918:	f7d4 f950 	bl	8000bbc <__aeabi_dcmplt>
 802c91c:	b110      	cbz	r0, 802c924 <_printf_float+0x90>
 802c91e:	232d      	movs	r3, #45	; 0x2d
 802c920:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c924:	4b93      	ldr	r3, [pc, #588]	; (802cb74 <_printf_float+0x2e0>)
 802c926:	4894      	ldr	r0, [pc, #592]	; (802cb78 <_printf_float+0x2e4>)
 802c928:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 802c92c:	bf94      	ite	ls
 802c92e:	4698      	movls	r8, r3
 802c930:	4680      	movhi	r8, r0
 802c932:	2303      	movs	r3, #3
 802c934:	6123      	str	r3, [r4, #16]
 802c936:	9b05      	ldr	r3, [sp, #20]
 802c938:	f023 0204 	bic.w	r2, r3, #4
 802c93c:	6022      	str	r2, [r4, #0]
 802c93e:	f04f 0900 	mov.w	r9, #0
 802c942:	9700      	str	r7, [sp, #0]
 802c944:	4633      	mov	r3, r6
 802c946:	aa0b      	add	r2, sp, #44	; 0x2c
 802c948:	4621      	mov	r1, r4
 802c94a:	4628      	mov	r0, r5
 802c94c:	f000 f9d8 	bl	802cd00 <_printf_common>
 802c950:	3001      	adds	r0, #1
 802c952:	f040 8090 	bne.w	802ca76 <_printf_float+0x1e2>
 802c956:	f04f 30ff 	mov.w	r0, #4294967295
 802c95a:	b00d      	add	sp, #52	; 0x34
 802c95c:	ecbd 8b02 	vpop	{d8}
 802c960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c964:	4642      	mov	r2, r8
 802c966:	464b      	mov	r3, r9
 802c968:	4640      	mov	r0, r8
 802c96a:	4649      	mov	r1, r9
 802c96c:	f7d4 f94e 	bl	8000c0c <__aeabi_dcmpun>
 802c970:	b140      	cbz	r0, 802c984 <_printf_float+0xf0>
 802c972:	464b      	mov	r3, r9
 802c974:	2b00      	cmp	r3, #0
 802c976:	bfbc      	itt	lt
 802c978:	232d      	movlt	r3, #45	; 0x2d
 802c97a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 802c97e:	487f      	ldr	r0, [pc, #508]	; (802cb7c <_printf_float+0x2e8>)
 802c980:	4b7f      	ldr	r3, [pc, #508]	; (802cb80 <_printf_float+0x2ec>)
 802c982:	e7d1      	b.n	802c928 <_printf_float+0x94>
 802c984:	6863      	ldr	r3, [r4, #4]
 802c986:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 802c98a:	9206      	str	r2, [sp, #24]
 802c98c:	1c5a      	adds	r2, r3, #1
 802c98e:	d13f      	bne.n	802ca10 <_printf_float+0x17c>
 802c990:	2306      	movs	r3, #6
 802c992:	6063      	str	r3, [r4, #4]
 802c994:	9b05      	ldr	r3, [sp, #20]
 802c996:	6861      	ldr	r1, [r4, #4]
 802c998:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 802c99c:	2300      	movs	r3, #0
 802c99e:	9303      	str	r3, [sp, #12]
 802c9a0:	ab0a      	add	r3, sp, #40	; 0x28
 802c9a2:	e9cd b301 	strd	fp, r3, [sp, #4]
 802c9a6:	ab09      	add	r3, sp, #36	; 0x24
 802c9a8:	ec49 8b10 	vmov	d0, r8, r9
 802c9ac:	9300      	str	r3, [sp, #0]
 802c9ae:	6022      	str	r2, [r4, #0]
 802c9b0:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 802c9b4:	4628      	mov	r0, r5
 802c9b6:	f7ff fecd 	bl	802c754 <__cvt>
 802c9ba:	9b06      	ldr	r3, [sp, #24]
 802c9bc:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c9be:	2b47      	cmp	r3, #71	; 0x47
 802c9c0:	4680      	mov	r8, r0
 802c9c2:	d108      	bne.n	802c9d6 <_printf_float+0x142>
 802c9c4:	1cc8      	adds	r0, r1, #3
 802c9c6:	db02      	blt.n	802c9ce <_printf_float+0x13a>
 802c9c8:	6863      	ldr	r3, [r4, #4]
 802c9ca:	4299      	cmp	r1, r3
 802c9cc:	dd41      	ble.n	802ca52 <_printf_float+0x1be>
 802c9ce:	f1ab 0b02 	sub.w	fp, fp, #2
 802c9d2:	fa5f fb8b 	uxtb.w	fp, fp
 802c9d6:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 802c9da:	d820      	bhi.n	802ca1e <_printf_float+0x18a>
 802c9dc:	3901      	subs	r1, #1
 802c9de:	465a      	mov	r2, fp
 802c9e0:	f104 0050 	add.w	r0, r4, #80	; 0x50
 802c9e4:	9109      	str	r1, [sp, #36]	; 0x24
 802c9e6:	f7ff ff17 	bl	802c818 <__exponent>
 802c9ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802c9ec:	1813      	adds	r3, r2, r0
 802c9ee:	2a01      	cmp	r2, #1
 802c9f0:	4681      	mov	r9, r0
 802c9f2:	6123      	str	r3, [r4, #16]
 802c9f4:	dc02      	bgt.n	802c9fc <_printf_float+0x168>
 802c9f6:	6822      	ldr	r2, [r4, #0]
 802c9f8:	07d2      	lsls	r2, r2, #31
 802c9fa:	d501      	bpl.n	802ca00 <_printf_float+0x16c>
 802c9fc:	3301      	adds	r3, #1
 802c9fe:	6123      	str	r3, [r4, #16]
 802ca00:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 802ca04:	2b00      	cmp	r3, #0
 802ca06:	d09c      	beq.n	802c942 <_printf_float+0xae>
 802ca08:	232d      	movs	r3, #45	; 0x2d
 802ca0a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802ca0e:	e798      	b.n	802c942 <_printf_float+0xae>
 802ca10:	9a06      	ldr	r2, [sp, #24]
 802ca12:	2a47      	cmp	r2, #71	; 0x47
 802ca14:	d1be      	bne.n	802c994 <_printf_float+0x100>
 802ca16:	2b00      	cmp	r3, #0
 802ca18:	d1bc      	bne.n	802c994 <_printf_float+0x100>
 802ca1a:	2301      	movs	r3, #1
 802ca1c:	e7b9      	b.n	802c992 <_printf_float+0xfe>
 802ca1e:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 802ca22:	d118      	bne.n	802ca56 <_printf_float+0x1c2>
 802ca24:	2900      	cmp	r1, #0
 802ca26:	6863      	ldr	r3, [r4, #4]
 802ca28:	dd0b      	ble.n	802ca42 <_printf_float+0x1ae>
 802ca2a:	6121      	str	r1, [r4, #16]
 802ca2c:	b913      	cbnz	r3, 802ca34 <_printf_float+0x1a0>
 802ca2e:	6822      	ldr	r2, [r4, #0]
 802ca30:	07d0      	lsls	r0, r2, #31
 802ca32:	d502      	bpl.n	802ca3a <_printf_float+0x1a6>
 802ca34:	3301      	adds	r3, #1
 802ca36:	440b      	add	r3, r1
 802ca38:	6123      	str	r3, [r4, #16]
 802ca3a:	65a1      	str	r1, [r4, #88]	; 0x58
 802ca3c:	f04f 0900 	mov.w	r9, #0
 802ca40:	e7de      	b.n	802ca00 <_printf_float+0x16c>
 802ca42:	b913      	cbnz	r3, 802ca4a <_printf_float+0x1b6>
 802ca44:	6822      	ldr	r2, [r4, #0]
 802ca46:	07d2      	lsls	r2, r2, #31
 802ca48:	d501      	bpl.n	802ca4e <_printf_float+0x1ba>
 802ca4a:	3302      	adds	r3, #2
 802ca4c:	e7f4      	b.n	802ca38 <_printf_float+0x1a4>
 802ca4e:	2301      	movs	r3, #1
 802ca50:	e7f2      	b.n	802ca38 <_printf_float+0x1a4>
 802ca52:	f04f 0b67 	mov.w	fp, #103	; 0x67
 802ca56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802ca58:	4299      	cmp	r1, r3
 802ca5a:	db05      	blt.n	802ca68 <_printf_float+0x1d4>
 802ca5c:	6823      	ldr	r3, [r4, #0]
 802ca5e:	6121      	str	r1, [r4, #16]
 802ca60:	07d8      	lsls	r0, r3, #31
 802ca62:	d5ea      	bpl.n	802ca3a <_printf_float+0x1a6>
 802ca64:	1c4b      	adds	r3, r1, #1
 802ca66:	e7e7      	b.n	802ca38 <_printf_float+0x1a4>
 802ca68:	2900      	cmp	r1, #0
 802ca6a:	bfd4      	ite	le
 802ca6c:	f1c1 0202 	rsble	r2, r1, #2
 802ca70:	2201      	movgt	r2, #1
 802ca72:	4413      	add	r3, r2
 802ca74:	e7e0      	b.n	802ca38 <_printf_float+0x1a4>
 802ca76:	6823      	ldr	r3, [r4, #0]
 802ca78:	055a      	lsls	r2, r3, #21
 802ca7a:	d407      	bmi.n	802ca8c <_printf_float+0x1f8>
 802ca7c:	6923      	ldr	r3, [r4, #16]
 802ca7e:	4642      	mov	r2, r8
 802ca80:	4631      	mov	r1, r6
 802ca82:	4628      	mov	r0, r5
 802ca84:	47b8      	blx	r7
 802ca86:	3001      	adds	r0, #1
 802ca88:	d12c      	bne.n	802cae4 <_printf_float+0x250>
 802ca8a:	e764      	b.n	802c956 <_printf_float+0xc2>
 802ca8c:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 802ca90:	f240 80e0 	bls.w	802cc54 <_printf_float+0x3c0>
 802ca94:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 802ca98:	2200      	movs	r2, #0
 802ca9a:	2300      	movs	r3, #0
 802ca9c:	f7d4 f884 	bl	8000ba8 <__aeabi_dcmpeq>
 802caa0:	2800      	cmp	r0, #0
 802caa2:	d034      	beq.n	802cb0e <_printf_float+0x27a>
 802caa4:	4a37      	ldr	r2, [pc, #220]	; (802cb84 <_printf_float+0x2f0>)
 802caa6:	2301      	movs	r3, #1
 802caa8:	4631      	mov	r1, r6
 802caaa:	4628      	mov	r0, r5
 802caac:	47b8      	blx	r7
 802caae:	3001      	adds	r0, #1
 802cab0:	f43f af51 	beq.w	802c956 <_printf_float+0xc2>
 802cab4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802cab8:	429a      	cmp	r2, r3
 802caba:	db02      	blt.n	802cac2 <_printf_float+0x22e>
 802cabc:	6823      	ldr	r3, [r4, #0]
 802cabe:	07d8      	lsls	r0, r3, #31
 802cac0:	d510      	bpl.n	802cae4 <_printf_float+0x250>
 802cac2:	ee18 3a10 	vmov	r3, s16
 802cac6:	4652      	mov	r2, sl
 802cac8:	4631      	mov	r1, r6
 802caca:	4628      	mov	r0, r5
 802cacc:	47b8      	blx	r7
 802cace:	3001      	adds	r0, #1
 802cad0:	f43f af41 	beq.w	802c956 <_printf_float+0xc2>
 802cad4:	f04f 0800 	mov.w	r8, #0
 802cad8:	f104 091a 	add.w	r9, r4, #26
 802cadc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802cade:	3b01      	subs	r3, #1
 802cae0:	4543      	cmp	r3, r8
 802cae2:	dc09      	bgt.n	802caf8 <_printf_float+0x264>
 802cae4:	6823      	ldr	r3, [r4, #0]
 802cae6:	079b      	lsls	r3, r3, #30
 802cae8:	f100 8105 	bmi.w	802ccf6 <_printf_float+0x462>
 802caec:	68e0      	ldr	r0, [r4, #12]
 802caee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802caf0:	4298      	cmp	r0, r3
 802caf2:	bfb8      	it	lt
 802caf4:	4618      	movlt	r0, r3
 802caf6:	e730      	b.n	802c95a <_printf_float+0xc6>
 802caf8:	2301      	movs	r3, #1
 802cafa:	464a      	mov	r2, r9
 802cafc:	4631      	mov	r1, r6
 802cafe:	4628      	mov	r0, r5
 802cb00:	47b8      	blx	r7
 802cb02:	3001      	adds	r0, #1
 802cb04:	f43f af27 	beq.w	802c956 <_printf_float+0xc2>
 802cb08:	f108 0801 	add.w	r8, r8, #1
 802cb0c:	e7e6      	b.n	802cadc <_printf_float+0x248>
 802cb0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802cb10:	2b00      	cmp	r3, #0
 802cb12:	dc39      	bgt.n	802cb88 <_printf_float+0x2f4>
 802cb14:	4a1b      	ldr	r2, [pc, #108]	; (802cb84 <_printf_float+0x2f0>)
 802cb16:	2301      	movs	r3, #1
 802cb18:	4631      	mov	r1, r6
 802cb1a:	4628      	mov	r0, r5
 802cb1c:	47b8      	blx	r7
 802cb1e:	3001      	adds	r0, #1
 802cb20:	f43f af19 	beq.w	802c956 <_printf_float+0xc2>
 802cb24:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802cb28:	4313      	orrs	r3, r2
 802cb2a:	d102      	bne.n	802cb32 <_printf_float+0x29e>
 802cb2c:	6823      	ldr	r3, [r4, #0]
 802cb2e:	07d9      	lsls	r1, r3, #31
 802cb30:	d5d8      	bpl.n	802cae4 <_printf_float+0x250>
 802cb32:	ee18 3a10 	vmov	r3, s16
 802cb36:	4652      	mov	r2, sl
 802cb38:	4631      	mov	r1, r6
 802cb3a:	4628      	mov	r0, r5
 802cb3c:	47b8      	blx	r7
 802cb3e:	3001      	adds	r0, #1
 802cb40:	f43f af09 	beq.w	802c956 <_printf_float+0xc2>
 802cb44:	f04f 0900 	mov.w	r9, #0
 802cb48:	f104 0a1a 	add.w	sl, r4, #26
 802cb4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802cb4e:	425b      	negs	r3, r3
 802cb50:	454b      	cmp	r3, r9
 802cb52:	dc01      	bgt.n	802cb58 <_printf_float+0x2c4>
 802cb54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802cb56:	e792      	b.n	802ca7e <_printf_float+0x1ea>
 802cb58:	2301      	movs	r3, #1
 802cb5a:	4652      	mov	r2, sl
 802cb5c:	4631      	mov	r1, r6
 802cb5e:	4628      	mov	r0, r5
 802cb60:	47b8      	blx	r7
 802cb62:	3001      	adds	r0, #1
 802cb64:	f43f aef7 	beq.w	802c956 <_printf_float+0xc2>
 802cb68:	f109 0901 	add.w	r9, r9, #1
 802cb6c:	e7ee      	b.n	802cb4c <_printf_float+0x2b8>
 802cb6e:	bf00      	nop
 802cb70:	7fefffff 	.word	0x7fefffff
 802cb74:	08049b11 	.word	0x08049b11
 802cb78:	08049b15 	.word	0x08049b15
 802cb7c:	08049b1d 	.word	0x08049b1d
 802cb80:	08049b19 	.word	0x08049b19
 802cb84:	08033fd8 	.word	0x08033fd8
 802cb88:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802cb8a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802cb8c:	429a      	cmp	r2, r3
 802cb8e:	bfa8      	it	ge
 802cb90:	461a      	movge	r2, r3
 802cb92:	2a00      	cmp	r2, #0
 802cb94:	4691      	mov	r9, r2
 802cb96:	dc37      	bgt.n	802cc08 <_printf_float+0x374>
 802cb98:	f04f 0b00 	mov.w	fp, #0
 802cb9c:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 802cba0:	f104 021a 	add.w	r2, r4, #26
 802cba4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802cba6:	9305      	str	r3, [sp, #20]
 802cba8:	eba3 0309 	sub.w	r3, r3, r9
 802cbac:	455b      	cmp	r3, fp
 802cbae:	dc33      	bgt.n	802cc18 <_printf_float+0x384>
 802cbb0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802cbb4:	429a      	cmp	r2, r3
 802cbb6:	db3b      	blt.n	802cc30 <_printf_float+0x39c>
 802cbb8:	6823      	ldr	r3, [r4, #0]
 802cbba:	07da      	lsls	r2, r3, #31
 802cbbc:	d438      	bmi.n	802cc30 <_printf_float+0x39c>
 802cbbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802cbc0:	9a05      	ldr	r2, [sp, #20]
 802cbc2:	9909      	ldr	r1, [sp, #36]	; 0x24
 802cbc4:	1a9a      	subs	r2, r3, r2
 802cbc6:	eba3 0901 	sub.w	r9, r3, r1
 802cbca:	4591      	cmp	r9, r2
 802cbcc:	bfa8      	it	ge
 802cbce:	4691      	movge	r9, r2
 802cbd0:	f1b9 0f00 	cmp.w	r9, #0
 802cbd4:	dc35      	bgt.n	802cc42 <_printf_float+0x3ae>
 802cbd6:	f04f 0800 	mov.w	r8, #0
 802cbda:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 802cbde:	f104 0a1a 	add.w	sl, r4, #26
 802cbe2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802cbe6:	1a9b      	subs	r3, r3, r2
 802cbe8:	eba3 0309 	sub.w	r3, r3, r9
 802cbec:	4543      	cmp	r3, r8
 802cbee:	f77f af79 	ble.w	802cae4 <_printf_float+0x250>
 802cbf2:	2301      	movs	r3, #1
 802cbf4:	4652      	mov	r2, sl
 802cbf6:	4631      	mov	r1, r6
 802cbf8:	4628      	mov	r0, r5
 802cbfa:	47b8      	blx	r7
 802cbfc:	3001      	adds	r0, #1
 802cbfe:	f43f aeaa 	beq.w	802c956 <_printf_float+0xc2>
 802cc02:	f108 0801 	add.w	r8, r8, #1
 802cc06:	e7ec      	b.n	802cbe2 <_printf_float+0x34e>
 802cc08:	4613      	mov	r3, r2
 802cc0a:	4631      	mov	r1, r6
 802cc0c:	4642      	mov	r2, r8
 802cc0e:	4628      	mov	r0, r5
 802cc10:	47b8      	blx	r7
 802cc12:	3001      	adds	r0, #1
 802cc14:	d1c0      	bne.n	802cb98 <_printf_float+0x304>
 802cc16:	e69e      	b.n	802c956 <_printf_float+0xc2>
 802cc18:	2301      	movs	r3, #1
 802cc1a:	4631      	mov	r1, r6
 802cc1c:	4628      	mov	r0, r5
 802cc1e:	9205      	str	r2, [sp, #20]
 802cc20:	47b8      	blx	r7
 802cc22:	3001      	adds	r0, #1
 802cc24:	f43f ae97 	beq.w	802c956 <_printf_float+0xc2>
 802cc28:	9a05      	ldr	r2, [sp, #20]
 802cc2a:	f10b 0b01 	add.w	fp, fp, #1
 802cc2e:	e7b9      	b.n	802cba4 <_printf_float+0x310>
 802cc30:	ee18 3a10 	vmov	r3, s16
 802cc34:	4652      	mov	r2, sl
 802cc36:	4631      	mov	r1, r6
 802cc38:	4628      	mov	r0, r5
 802cc3a:	47b8      	blx	r7
 802cc3c:	3001      	adds	r0, #1
 802cc3e:	d1be      	bne.n	802cbbe <_printf_float+0x32a>
 802cc40:	e689      	b.n	802c956 <_printf_float+0xc2>
 802cc42:	9a05      	ldr	r2, [sp, #20]
 802cc44:	464b      	mov	r3, r9
 802cc46:	4442      	add	r2, r8
 802cc48:	4631      	mov	r1, r6
 802cc4a:	4628      	mov	r0, r5
 802cc4c:	47b8      	blx	r7
 802cc4e:	3001      	adds	r0, #1
 802cc50:	d1c1      	bne.n	802cbd6 <_printf_float+0x342>
 802cc52:	e680      	b.n	802c956 <_printf_float+0xc2>
 802cc54:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802cc56:	2a01      	cmp	r2, #1
 802cc58:	dc01      	bgt.n	802cc5e <_printf_float+0x3ca>
 802cc5a:	07db      	lsls	r3, r3, #31
 802cc5c:	d538      	bpl.n	802ccd0 <_printf_float+0x43c>
 802cc5e:	2301      	movs	r3, #1
 802cc60:	4642      	mov	r2, r8
 802cc62:	4631      	mov	r1, r6
 802cc64:	4628      	mov	r0, r5
 802cc66:	47b8      	blx	r7
 802cc68:	3001      	adds	r0, #1
 802cc6a:	f43f ae74 	beq.w	802c956 <_printf_float+0xc2>
 802cc6e:	ee18 3a10 	vmov	r3, s16
 802cc72:	4652      	mov	r2, sl
 802cc74:	4631      	mov	r1, r6
 802cc76:	4628      	mov	r0, r5
 802cc78:	47b8      	blx	r7
 802cc7a:	3001      	adds	r0, #1
 802cc7c:	f43f ae6b 	beq.w	802c956 <_printf_float+0xc2>
 802cc80:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 802cc84:	2200      	movs	r2, #0
 802cc86:	2300      	movs	r3, #0
 802cc88:	f7d3 ff8e 	bl	8000ba8 <__aeabi_dcmpeq>
 802cc8c:	b9d8      	cbnz	r0, 802ccc6 <_printf_float+0x432>
 802cc8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802cc90:	f108 0201 	add.w	r2, r8, #1
 802cc94:	3b01      	subs	r3, #1
 802cc96:	4631      	mov	r1, r6
 802cc98:	4628      	mov	r0, r5
 802cc9a:	47b8      	blx	r7
 802cc9c:	3001      	adds	r0, #1
 802cc9e:	d10e      	bne.n	802ccbe <_printf_float+0x42a>
 802cca0:	e659      	b.n	802c956 <_printf_float+0xc2>
 802cca2:	2301      	movs	r3, #1
 802cca4:	4652      	mov	r2, sl
 802cca6:	4631      	mov	r1, r6
 802cca8:	4628      	mov	r0, r5
 802ccaa:	47b8      	blx	r7
 802ccac:	3001      	adds	r0, #1
 802ccae:	f43f ae52 	beq.w	802c956 <_printf_float+0xc2>
 802ccb2:	f108 0801 	add.w	r8, r8, #1
 802ccb6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802ccb8:	3b01      	subs	r3, #1
 802ccba:	4543      	cmp	r3, r8
 802ccbc:	dcf1      	bgt.n	802cca2 <_printf_float+0x40e>
 802ccbe:	464b      	mov	r3, r9
 802ccc0:	f104 0250 	add.w	r2, r4, #80	; 0x50
 802ccc4:	e6dc      	b.n	802ca80 <_printf_float+0x1ec>
 802ccc6:	f04f 0800 	mov.w	r8, #0
 802ccca:	f104 0a1a 	add.w	sl, r4, #26
 802ccce:	e7f2      	b.n	802ccb6 <_printf_float+0x422>
 802ccd0:	2301      	movs	r3, #1
 802ccd2:	4642      	mov	r2, r8
 802ccd4:	e7df      	b.n	802cc96 <_printf_float+0x402>
 802ccd6:	2301      	movs	r3, #1
 802ccd8:	464a      	mov	r2, r9
 802ccda:	4631      	mov	r1, r6
 802ccdc:	4628      	mov	r0, r5
 802ccde:	47b8      	blx	r7
 802cce0:	3001      	adds	r0, #1
 802cce2:	f43f ae38 	beq.w	802c956 <_printf_float+0xc2>
 802cce6:	f108 0801 	add.w	r8, r8, #1
 802ccea:	68e3      	ldr	r3, [r4, #12]
 802ccec:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802ccee:	1a5b      	subs	r3, r3, r1
 802ccf0:	4543      	cmp	r3, r8
 802ccf2:	dcf0      	bgt.n	802ccd6 <_printf_float+0x442>
 802ccf4:	e6fa      	b.n	802caec <_printf_float+0x258>
 802ccf6:	f04f 0800 	mov.w	r8, #0
 802ccfa:	f104 0919 	add.w	r9, r4, #25
 802ccfe:	e7f4      	b.n	802ccea <_printf_float+0x456>

0802cd00 <_printf_common>:
 802cd00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802cd04:	4616      	mov	r6, r2
 802cd06:	4699      	mov	r9, r3
 802cd08:	688a      	ldr	r2, [r1, #8]
 802cd0a:	690b      	ldr	r3, [r1, #16]
 802cd0c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802cd10:	4293      	cmp	r3, r2
 802cd12:	bfb8      	it	lt
 802cd14:	4613      	movlt	r3, r2
 802cd16:	6033      	str	r3, [r6, #0]
 802cd18:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802cd1c:	4607      	mov	r7, r0
 802cd1e:	460c      	mov	r4, r1
 802cd20:	b10a      	cbz	r2, 802cd26 <_printf_common+0x26>
 802cd22:	3301      	adds	r3, #1
 802cd24:	6033      	str	r3, [r6, #0]
 802cd26:	6823      	ldr	r3, [r4, #0]
 802cd28:	0699      	lsls	r1, r3, #26
 802cd2a:	bf42      	ittt	mi
 802cd2c:	6833      	ldrmi	r3, [r6, #0]
 802cd2e:	3302      	addmi	r3, #2
 802cd30:	6033      	strmi	r3, [r6, #0]
 802cd32:	6825      	ldr	r5, [r4, #0]
 802cd34:	f015 0506 	ands.w	r5, r5, #6
 802cd38:	d106      	bne.n	802cd48 <_printf_common+0x48>
 802cd3a:	f104 0a19 	add.w	sl, r4, #25
 802cd3e:	68e3      	ldr	r3, [r4, #12]
 802cd40:	6832      	ldr	r2, [r6, #0]
 802cd42:	1a9b      	subs	r3, r3, r2
 802cd44:	42ab      	cmp	r3, r5
 802cd46:	dc26      	bgt.n	802cd96 <_printf_common+0x96>
 802cd48:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802cd4c:	1e13      	subs	r3, r2, #0
 802cd4e:	6822      	ldr	r2, [r4, #0]
 802cd50:	bf18      	it	ne
 802cd52:	2301      	movne	r3, #1
 802cd54:	0692      	lsls	r2, r2, #26
 802cd56:	d42b      	bmi.n	802cdb0 <_printf_common+0xb0>
 802cd58:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802cd5c:	4649      	mov	r1, r9
 802cd5e:	4638      	mov	r0, r7
 802cd60:	47c0      	blx	r8
 802cd62:	3001      	adds	r0, #1
 802cd64:	d01e      	beq.n	802cda4 <_printf_common+0xa4>
 802cd66:	6823      	ldr	r3, [r4, #0]
 802cd68:	68e5      	ldr	r5, [r4, #12]
 802cd6a:	6832      	ldr	r2, [r6, #0]
 802cd6c:	f003 0306 	and.w	r3, r3, #6
 802cd70:	2b04      	cmp	r3, #4
 802cd72:	bf08      	it	eq
 802cd74:	1aad      	subeq	r5, r5, r2
 802cd76:	68a3      	ldr	r3, [r4, #8]
 802cd78:	6922      	ldr	r2, [r4, #16]
 802cd7a:	bf0c      	ite	eq
 802cd7c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802cd80:	2500      	movne	r5, #0
 802cd82:	4293      	cmp	r3, r2
 802cd84:	bfc4      	itt	gt
 802cd86:	1a9b      	subgt	r3, r3, r2
 802cd88:	18ed      	addgt	r5, r5, r3
 802cd8a:	2600      	movs	r6, #0
 802cd8c:	341a      	adds	r4, #26
 802cd8e:	42b5      	cmp	r5, r6
 802cd90:	d11a      	bne.n	802cdc8 <_printf_common+0xc8>
 802cd92:	2000      	movs	r0, #0
 802cd94:	e008      	b.n	802cda8 <_printf_common+0xa8>
 802cd96:	2301      	movs	r3, #1
 802cd98:	4652      	mov	r2, sl
 802cd9a:	4649      	mov	r1, r9
 802cd9c:	4638      	mov	r0, r7
 802cd9e:	47c0      	blx	r8
 802cda0:	3001      	adds	r0, #1
 802cda2:	d103      	bne.n	802cdac <_printf_common+0xac>
 802cda4:	f04f 30ff 	mov.w	r0, #4294967295
 802cda8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802cdac:	3501      	adds	r5, #1
 802cdae:	e7c6      	b.n	802cd3e <_printf_common+0x3e>
 802cdb0:	18e1      	adds	r1, r4, r3
 802cdb2:	1c5a      	adds	r2, r3, #1
 802cdb4:	2030      	movs	r0, #48	; 0x30
 802cdb6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802cdba:	4422      	add	r2, r4
 802cdbc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802cdc0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802cdc4:	3302      	adds	r3, #2
 802cdc6:	e7c7      	b.n	802cd58 <_printf_common+0x58>
 802cdc8:	2301      	movs	r3, #1
 802cdca:	4622      	mov	r2, r4
 802cdcc:	4649      	mov	r1, r9
 802cdce:	4638      	mov	r0, r7
 802cdd0:	47c0      	blx	r8
 802cdd2:	3001      	adds	r0, #1
 802cdd4:	d0e6      	beq.n	802cda4 <_printf_common+0xa4>
 802cdd6:	3601      	adds	r6, #1
 802cdd8:	e7d9      	b.n	802cd8e <_printf_common+0x8e>
	...

0802cddc <_printf_i>:
 802cddc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802cde0:	7e0f      	ldrb	r7, [r1, #24]
 802cde2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802cde4:	2f78      	cmp	r7, #120	; 0x78
 802cde6:	4691      	mov	r9, r2
 802cde8:	4680      	mov	r8, r0
 802cdea:	460c      	mov	r4, r1
 802cdec:	469a      	mov	sl, r3
 802cdee:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802cdf2:	d807      	bhi.n	802ce04 <_printf_i+0x28>
 802cdf4:	2f62      	cmp	r7, #98	; 0x62
 802cdf6:	d80a      	bhi.n	802ce0e <_printf_i+0x32>
 802cdf8:	2f00      	cmp	r7, #0
 802cdfa:	f000 80d8 	beq.w	802cfae <_printf_i+0x1d2>
 802cdfe:	2f58      	cmp	r7, #88	; 0x58
 802ce00:	f000 80a3 	beq.w	802cf4a <_printf_i+0x16e>
 802ce04:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802ce08:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802ce0c:	e03a      	b.n	802ce84 <_printf_i+0xa8>
 802ce0e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802ce12:	2b15      	cmp	r3, #21
 802ce14:	d8f6      	bhi.n	802ce04 <_printf_i+0x28>
 802ce16:	a101      	add	r1, pc, #4	; (adr r1, 802ce1c <_printf_i+0x40>)
 802ce18:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802ce1c:	0802ce75 	.word	0x0802ce75
 802ce20:	0802ce89 	.word	0x0802ce89
 802ce24:	0802ce05 	.word	0x0802ce05
 802ce28:	0802ce05 	.word	0x0802ce05
 802ce2c:	0802ce05 	.word	0x0802ce05
 802ce30:	0802ce05 	.word	0x0802ce05
 802ce34:	0802ce89 	.word	0x0802ce89
 802ce38:	0802ce05 	.word	0x0802ce05
 802ce3c:	0802ce05 	.word	0x0802ce05
 802ce40:	0802ce05 	.word	0x0802ce05
 802ce44:	0802ce05 	.word	0x0802ce05
 802ce48:	0802cf95 	.word	0x0802cf95
 802ce4c:	0802ceb9 	.word	0x0802ceb9
 802ce50:	0802cf77 	.word	0x0802cf77
 802ce54:	0802ce05 	.word	0x0802ce05
 802ce58:	0802ce05 	.word	0x0802ce05
 802ce5c:	0802cfb7 	.word	0x0802cfb7
 802ce60:	0802ce05 	.word	0x0802ce05
 802ce64:	0802ceb9 	.word	0x0802ceb9
 802ce68:	0802ce05 	.word	0x0802ce05
 802ce6c:	0802ce05 	.word	0x0802ce05
 802ce70:	0802cf7f 	.word	0x0802cf7f
 802ce74:	682b      	ldr	r3, [r5, #0]
 802ce76:	1d1a      	adds	r2, r3, #4
 802ce78:	681b      	ldr	r3, [r3, #0]
 802ce7a:	602a      	str	r2, [r5, #0]
 802ce7c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802ce80:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802ce84:	2301      	movs	r3, #1
 802ce86:	e0a3      	b.n	802cfd0 <_printf_i+0x1f4>
 802ce88:	6820      	ldr	r0, [r4, #0]
 802ce8a:	6829      	ldr	r1, [r5, #0]
 802ce8c:	0606      	lsls	r6, r0, #24
 802ce8e:	f101 0304 	add.w	r3, r1, #4
 802ce92:	d50a      	bpl.n	802ceaa <_printf_i+0xce>
 802ce94:	680e      	ldr	r6, [r1, #0]
 802ce96:	602b      	str	r3, [r5, #0]
 802ce98:	2e00      	cmp	r6, #0
 802ce9a:	da03      	bge.n	802cea4 <_printf_i+0xc8>
 802ce9c:	232d      	movs	r3, #45	; 0x2d
 802ce9e:	4276      	negs	r6, r6
 802cea0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802cea4:	485e      	ldr	r0, [pc, #376]	; (802d020 <_printf_i+0x244>)
 802cea6:	230a      	movs	r3, #10
 802cea8:	e019      	b.n	802cede <_printf_i+0x102>
 802ceaa:	680e      	ldr	r6, [r1, #0]
 802ceac:	602b      	str	r3, [r5, #0]
 802ceae:	f010 0f40 	tst.w	r0, #64	; 0x40
 802ceb2:	bf18      	it	ne
 802ceb4:	b236      	sxthne	r6, r6
 802ceb6:	e7ef      	b.n	802ce98 <_printf_i+0xbc>
 802ceb8:	682b      	ldr	r3, [r5, #0]
 802ceba:	6820      	ldr	r0, [r4, #0]
 802cebc:	1d19      	adds	r1, r3, #4
 802cebe:	6029      	str	r1, [r5, #0]
 802cec0:	0601      	lsls	r1, r0, #24
 802cec2:	d501      	bpl.n	802cec8 <_printf_i+0xec>
 802cec4:	681e      	ldr	r6, [r3, #0]
 802cec6:	e002      	b.n	802cece <_printf_i+0xf2>
 802cec8:	0646      	lsls	r6, r0, #25
 802ceca:	d5fb      	bpl.n	802cec4 <_printf_i+0xe8>
 802cecc:	881e      	ldrh	r6, [r3, #0]
 802cece:	4854      	ldr	r0, [pc, #336]	; (802d020 <_printf_i+0x244>)
 802ced0:	2f6f      	cmp	r7, #111	; 0x6f
 802ced2:	bf0c      	ite	eq
 802ced4:	2308      	moveq	r3, #8
 802ced6:	230a      	movne	r3, #10
 802ced8:	2100      	movs	r1, #0
 802ceda:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802cede:	6865      	ldr	r5, [r4, #4]
 802cee0:	60a5      	str	r5, [r4, #8]
 802cee2:	2d00      	cmp	r5, #0
 802cee4:	bfa2      	ittt	ge
 802cee6:	6821      	ldrge	r1, [r4, #0]
 802cee8:	f021 0104 	bicge.w	r1, r1, #4
 802ceec:	6021      	strge	r1, [r4, #0]
 802ceee:	b90e      	cbnz	r6, 802cef4 <_printf_i+0x118>
 802cef0:	2d00      	cmp	r5, #0
 802cef2:	d04d      	beq.n	802cf90 <_printf_i+0x1b4>
 802cef4:	4615      	mov	r5, r2
 802cef6:	fbb6 f1f3 	udiv	r1, r6, r3
 802cefa:	fb03 6711 	mls	r7, r3, r1, r6
 802cefe:	5dc7      	ldrb	r7, [r0, r7]
 802cf00:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802cf04:	4637      	mov	r7, r6
 802cf06:	42bb      	cmp	r3, r7
 802cf08:	460e      	mov	r6, r1
 802cf0a:	d9f4      	bls.n	802cef6 <_printf_i+0x11a>
 802cf0c:	2b08      	cmp	r3, #8
 802cf0e:	d10b      	bne.n	802cf28 <_printf_i+0x14c>
 802cf10:	6823      	ldr	r3, [r4, #0]
 802cf12:	07de      	lsls	r6, r3, #31
 802cf14:	d508      	bpl.n	802cf28 <_printf_i+0x14c>
 802cf16:	6923      	ldr	r3, [r4, #16]
 802cf18:	6861      	ldr	r1, [r4, #4]
 802cf1a:	4299      	cmp	r1, r3
 802cf1c:	bfde      	ittt	le
 802cf1e:	2330      	movle	r3, #48	; 0x30
 802cf20:	f805 3c01 	strble.w	r3, [r5, #-1]
 802cf24:	f105 35ff 	addle.w	r5, r5, #4294967295
 802cf28:	1b52      	subs	r2, r2, r5
 802cf2a:	6122      	str	r2, [r4, #16]
 802cf2c:	f8cd a000 	str.w	sl, [sp]
 802cf30:	464b      	mov	r3, r9
 802cf32:	aa03      	add	r2, sp, #12
 802cf34:	4621      	mov	r1, r4
 802cf36:	4640      	mov	r0, r8
 802cf38:	f7ff fee2 	bl	802cd00 <_printf_common>
 802cf3c:	3001      	adds	r0, #1
 802cf3e:	d14c      	bne.n	802cfda <_printf_i+0x1fe>
 802cf40:	f04f 30ff 	mov.w	r0, #4294967295
 802cf44:	b004      	add	sp, #16
 802cf46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802cf4a:	4835      	ldr	r0, [pc, #212]	; (802d020 <_printf_i+0x244>)
 802cf4c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 802cf50:	6829      	ldr	r1, [r5, #0]
 802cf52:	6823      	ldr	r3, [r4, #0]
 802cf54:	f851 6b04 	ldr.w	r6, [r1], #4
 802cf58:	6029      	str	r1, [r5, #0]
 802cf5a:	061d      	lsls	r5, r3, #24
 802cf5c:	d514      	bpl.n	802cf88 <_printf_i+0x1ac>
 802cf5e:	07df      	lsls	r7, r3, #31
 802cf60:	bf44      	itt	mi
 802cf62:	f043 0320 	orrmi.w	r3, r3, #32
 802cf66:	6023      	strmi	r3, [r4, #0]
 802cf68:	b91e      	cbnz	r6, 802cf72 <_printf_i+0x196>
 802cf6a:	6823      	ldr	r3, [r4, #0]
 802cf6c:	f023 0320 	bic.w	r3, r3, #32
 802cf70:	6023      	str	r3, [r4, #0]
 802cf72:	2310      	movs	r3, #16
 802cf74:	e7b0      	b.n	802ced8 <_printf_i+0xfc>
 802cf76:	6823      	ldr	r3, [r4, #0]
 802cf78:	f043 0320 	orr.w	r3, r3, #32
 802cf7c:	6023      	str	r3, [r4, #0]
 802cf7e:	2378      	movs	r3, #120	; 0x78
 802cf80:	4828      	ldr	r0, [pc, #160]	; (802d024 <_printf_i+0x248>)
 802cf82:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 802cf86:	e7e3      	b.n	802cf50 <_printf_i+0x174>
 802cf88:	0659      	lsls	r1, r3, #25
 802cf8a:	bf48      	it	mi
 802cf8c:	b2b6      	uxthmi	r6, r6
 802cf8e:	e7e6      	b.n	802cf5e <_printf_i+0x182>
 802cf90:	4615      	mov	r5, r2
 802cf92:	e7bb      	b.n	802cf0c <_printf_i+0x130>
 802cf94:	682b      	ldr	r3, [r5, #0]
 802cf96:	6826      	ldr	r6, [r4, #0]
 802cf98:	6961      	ldr	r1, [r4, #20]
 802cf9a:	1d18      	adds	r0, r3, #4
 802cf9c:	6028      	str	r0, [r5, #0]
 802cf9e:	0635      	lsls	r5, r6, #24
 802cfa0:	681b      	ldr	r3, [r3, #0]
 802cfa2:	d501      	bpl.n	802cfa8 <_printf_i+0x1cc>
 802cfa4:	6019      	str	r1, [r3, #0]
 802cfa6:	e002      	b.n	802cfae <_printf_i+0x1d2>
 802cfa8:	0670      	lsls	r0, r6, #25
 802cfaa:	d5fb      	bpl.n	802cfa4 <_printf_i+0x1c8>
 802cfac:	8019      	strh	r1, [r3, #0]
 802cfae:	2300      	movs	r3, #0
 802cfb0:	6123      	str	r3, [r4, #16]
 802cfb2:	4615      	mov	r5, r2
 802cfb4:	e7ba      	b.n	802cf2c <_printf_i+0x150>
 802cfb6:	682b      	ldr	r3, [r5, #0]
 802cfb8:	1d1a      	adds	r2, r3, #4
 802cfba:	602a      	str	r2, [r5, #0]
 802cfbc:	681d      	ldr	r5, [r3, #0]
 802cfbe:	6862      	ldr	r2, [r4, #4]
 802cfc0:	2100      	movs	r1, #0
 802cfc2:	4628      	mov	r0, r5
 802cfc4:	f7d3 f97c 	bl	80002c0 <memchr>
 802cfc8:	b108      	cbz	r0, 802cfce <_printf_i+0x1f2>
 802cfca:	1b40      	subs	r0, r0, r5
 802cfcc:	6060      	str	r0, [r4, #4]
 802cfce:	6863      	ldr	r3, [r4, #4]
 802cfd0:	6123      	str	r3, [r4, #16]
 802cfd2:	2300      	movs	r3, #0
 802cfd4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802cfd8:	e7a8      	b.n	802cf2c <_printf_i+0x150>
 802cfda:	6923      	ldr	r3, [r4, #16]
 802cfdc:	462a      	mov	r2, r5
 802cfde:	4649      	mov	r1, r9
 802cfe0:	4640      	mov	r0, r8
 802cfe2:	47d0      	blx	sl
 802cfe4:	3001      	adds	r0, #1
 802cfe6:	d0ab      	beq.n	802cf40 <_printf_i+0x164>
 802cfe8:	6823      	ldr	r3, [r4, #0]
 802cfea:	079b      	lsls	r3, r3, #30
 802cfec:	d413      	bmi.n	802d016 <_printf_i+0x23a>
 802cfee:	68e0      	ldr	r0, [r4, #12]
 802cff0:	9b03      	ldr	r3, [sp, #12]
 802cff2:	4298      	cmp	r0, r3
 802cff4:	bfb8      	it	lt
 802cff6:	4618      	movlt	r0, r3
 802cff8:	e7a4      	b.n	802cf44 <_printf_i+0x168>
 802cffa:	2301      	movs	r3, #1
 802cffc:	4632      	mov	r2, r6
 802cffe:	4649      	mov	r1, r9
 802d000:	4640      	mov	r0, r8
 802d002:	47d0      	blx	sl
 802d004:	3001      	adds	r0, #1
 802d006:	d09b      	beq.n	802cf40 <_printf_i+0x164>
 802d008:	3501      	adds	r5, #1
 802d00a:	68e3      	ldr	r3, [r4, #12]
 802d00c:	9903      	ldr	r1, [sp, #12]
 802d00e:	1a5b      	subs	r3, r3, r1
 802d010:	42ab      	cmp	r3, r5
 802d012:	dcf2      	bgt.n	802cffa <_printf_i+0x21e>
 802d014:	e7eb      	b.n	802cfee <_printf_i+0x212>
 802d016:	2500      	movs	r5, #0
 802d018:	f104 0619 	add.w	r6, r4, #25
 802d01c:	e7f5      	b.n	802d00a <_printf_i+0x22e>
 802d01e:	bf00      	nop
 802d020:	08049b21 	.word	0x08049b21
 802d024:	08049b32 	.word	0x08049b32

0802d028 <cleanup_glue>:
 802d028:	b538      	push	{r3, r4, r5, lr}
 802d02a:	460c      	mov	r4, r1
 802d02c:	6809      	ldr	r1, [r1, #0]
 802d02e:	4605      	mov	r5, r0
 802d030:	b109      	cbz	r1, 802d036 <cleanup_glue+0xe>
 802d032:	f7ff fff9 	bl	802d028 <cleanup_glue>
 802d036:	4621      	mov	r1, r4
 802d038:	4628      	mov	r0, r5
 802d03a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802d03e:	f7ff b94f 	b.w	802c2e0 <_free_r>
	...

0802d044 <_reclaim_reent>:
 802d044:	4b2c      	ldr	r3, [pc, #176]	; (802d0f8 <_reclaim_reent+0xb4>)
 802d046:	681b      	ldr	r3, [r3, #0]
 802d048:	4283      	cmp	r3, r0
 802d04a:	b570      	push	{r4, r5, r6, lr}
 802d04c:	4604      	mov	r4, r0
 802d04e:	d051      	beq.n	802d0f4 <_reclaim_reent+0xb0>
 802d050:	6a43      	ldr	r3, [r0, #36]	; 0x24
 802d052:	b143      	cbz	r3, 802d066 <_reclaim_reent+0x22>
 802d054:	68db      	ldr	r3, [r3, #12]
 802d056:	2b00      	cmp	r3, #0
 802d058:	d14a      	bne.n	802d0f0 <_reclaim_reent+0xac>
 802d05a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d05c:	6819      	ldr	r1, [r3, #0]
 802d05e:	b111      	cbz	r1, 802d066 <_reclaim_reent+0x22>
 802d060:	4620      	mov	r0, r4
 802d062:	f7ff f93d 	bl	802c2e0 <_free_r>
 802d066:	6961      	ldr	r1, [r4, #20]
 802d068:	b111      	cbz	r1, 802d070 <_reclaim_reent+0x2c>
 802d06a:	4620      	mov	r0, r4
 802d06c:	f7ff f938 	bl	802c2e0 <_free_r>
 802d070:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802d072:	b111      	cbz	r1, 802d07a <_reclaim_reent+0x36>
 802d074:	4620      	mov	r0, r4
 802d076:	f7ff f933 	bl	802c2e0 <_free_r>
 802d07a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802d07c:	b111      	cbz	r1, 802d084 <_reclaim_reent+0x40>
 802d07e:	4620      	mov	r0, r4
 802d080:	f7ff f92e 	bl	802c2e0 <_free_r>
 802d084:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 802d086:	b111      	cbz	r1, 802d08e <_reclaim_reent+0x4a>
 802d088:	4620      	mov	r0, r4
 802d08a:	f7ff f929 	bl	802c2e0 <_free_r>
 802d08e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802d090:	b111      	cbz	r1, 802d098 <_reclaim_reent+0x54>
 802d092:	4620      	mov	r0, r4
 802d094:	f7ff f924 	bl	802c2e0 <_free_r>
 802d098:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802d09a:	b111      	cbz	r1, 802d0a2 <_reclaim_reent+0x5e>
 802d09c:	4620      	mov	r0, r4
 802d09e:	f7ff f91f 	bl	802c2e0 <_free_r>
 802d0a2:	6da1      	ldr	r1, [r4, #88]	; 0x58
 802d0a4:	b111      	cbz	r1, 802d0ac <_reclaim_reent+0x68>
 802d0a6:	4620      	mov	r0, r4
 802d0a8:	f7ff f91a 	bl	802c2e0 <_free_r>
 802d0ac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802d0ae:	b111      	cbz	r1, 802d0b6 <_reclaim_reent+0x72>
 802d0b0:	4620      	mov	r0, r4
 802d0b2:	f7ff f915 	bl	802c2e0 <_free_r>
 802d0b6:	69a3      	ldr	r3, [r4, #24]
 802d0b8:	b1e3      	cbz	r3, 802d0f4 <_reclaim_reent+0xb0>
 802d0ba:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802d0bc:	4620      	mov	r0, r4
 802d0be:	4798      	blx	r3
 802d0c0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802d0c2:	b1b9      	cbz	r1, 802d0f4 <_reclaim_reent+0xb0>
 802d0c4:	4620      	mov	r0, r4
 802d0c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802d0ca:	f7ff bfad 	b.w	802d028 <cleanup_glue>
 802d0ce:	5949      	ldr	r1, [r1, r5]
 802d0d0:	b941      	cbnz	r1, 802d0e4 <_reclaim_reent+0xa0>
 802d0d2:	3504      	adds	r5, #4
 802d0d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d0d6:	2d80      	cmp	r5, #128	; 0x80
 802d0d8:	68d9      	ldr	r1, [r3, #12]
 802d0da:	d1f8      	bne.n	802d0ce <_reclaim_reent+0x8a>
 802d0dc:	4620      	mov	r0, r4
 802d0de:	f7ff f8ff 	bl	802c2e0 <_free_r>
 802d0e2:	e7ba      	b.n	802d05a <_reclaim_reent+0x16>
 802d0e4:	680e      	ldr	r6, [r1, #0]
 802d0e6:	4620      	mov	r0, r4
 802d0e8:	f7ff f8fa 	bl	802c2e0 <_free_r>
 802d0ec:	4631      	mov	r1, r6
 802d0ee:	e7ef      	b.n	802d0d0 <_reclaim_reent+0x8c>
 802d0f0:	2500      	movs	r5, #0
 802d0f2:	e7ef      	b.n	802d0d4 <_reclaim_reent+0x90>
 802d0f4:	bd70      	pop	{r4, r5, r6, pc}
 802d0f6:	bf00      	nop
 802d0f8:	20000114 	.word	0x20000114

0802d0fc <_sbrk_r>:
 802d0fc:	b538      	push	{r3, r4, r5, lr}
 802d0fe:	4d06      	ldr	r5, [pc, #24]	; (802d118 <_sbrk_r+0x1c>)
 802d100:	2300      	movs	r3, #0
 802d102:	4604      	mov	r4, r0
 802d104:	4608      	mov	r0, r1
 802d106:	602b      	str	r3, [r5, #0]
 802d108:	f7d6 fa9e 	bl	8003648 <_sbrk>
 802d10c:	1c43      	adds	r3, r0, #1
 802d10e:	d102      	bne.n	802d116 <_sbrk_r+0x1a>
 802d110:	682b      	ldr	r3, [r5, #0]
 802d112:	b103      	cbz	r3, 802d116 <_sbrk_r+0x1a>
 802d114:	6023      	str	r3, [r4, #0]
 802d116:	bd38      	pop	{r3, r4, r5, pc}
 802d118:	2001e3f0 	.word	0x2001e3f0

0802d11c <_raise_r>:
 802d11c:	291f      	cmp	r1, #31
 802d11e:	b538      	push	{r3, r4, r5, lr}
 802d120:	4604      	mov	r4, r0
 802d122:	460d      	mov	r5, r1
 802d124:	d904      	bls.n	802d130 <_raise_r+0x14>
 802d126:	2316      	movs	r3, #22
 802d128:	6003      	str	r3, [r0, #0]
 802d12a:	f04f 30ff 	mov.w	r0, #4294967295
 802d12e:	bd38      	pop	{r3, r4, r5, pc}
 802d130:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802d132:	b112      	cbz	r2, 802d13a <_raise_r+0x1e>
 802d134:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802d138:	b94b      	cbnz	r3, 802d14e <_raise_r+0x32>
 802d13a:	4620      	mov	r0, r4
 802d13c:	f000 f830 	bl	802d1a0 <_getpid_r>
 802d140:	462a      	mov	r2, r5
 802d142:	4601      	mov	r1, r0
 802d144:	4620      	mov	r0, r4
 802d146:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802d14a:	f000 b817 	b.w	802d17c <_kill_r>
 802d14e:	2b01      	cmp	r3, #1
 802d150:	d00a      	beq.n	802d168 <_raise_r+0x4c>
 802d152:	1c59      	adds	r1, r3, #1
 802d154:	d103      	bne.n	802d15e <_raise_r+0x42>
 802d156:	2316      	movs	r3, #22
 802d158:	6003      	str	r3, [r0, #0]
 802d15a:	2001      	movs	r0, #1
 802d15c:	e7e7      	b.n	802d12e <_raise_r+0x12>
 802d15e:	2400      	movs	r4, #0
 802d160:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802d164:	4628      	mov	r0, r5
 802d166:	4798      	blx	r3
 802d168:	2000      	movs	r0, #0
 802d16a:	e7e0      	b.n	802d12e <_raise_r+0x12>

0802d16c <raise>:
 802d16c:	4b02      	ldr	r3, [pc, #8]	; (802d178 <raise+0xc>)
 802d16e:	4601      	mov	r1, r0
 802d170:	6818      	ldr	r0, [r3, #0]
 802d172:	f7ff bfd3 	b.w	802d11c <_raise_r>
 802d176:	bf00      	nop
 802d178:	20000114 	.word	0x20000114

0802d17c <_kill_r>:
 802d17c:	b538      	push	{r3, r4, r5, lr}
 802d17e:	4d07      	ldr	r5, [pc, #28]	; (802d19c <_kill_r+0x20>)
 802d180:	2300      	movs	r3, #0
 802d182:	4604      	mov	r4, r0
 802d184:	4608      	mov	r0, r1
 802d186:	4611      	mov	r1, r2
 802d188:	602b      	str	r3, [r5, #0]
 802d18a:	f7d6 fa27 	bl	80035dc <_kill>
 802d18e:	1c43      	adds	r3, r0, #1
 802d190:	d102      	bne.n	802d198 <_kill_r+0x1c>
 802d192:	682b      	ldr	r3, [r5, #0]
 802d194:	b103      	cbz	r3, 802d198 <_kill_r+0x1c>
 802d196:	6023      	str	r3, [r4, #0]
 802d198:	bd38      	pop	{r3, r4, r5, pc}
 802d19a:	bf00      	nop
 802d19c:	2001e3f0 	.word	0x2001e3f0

0802d1a0 <_getpid_r>:
 802d1a0:	f7d6 ba1a 	b.w	80035d8 <_getpid>

0802d1a4 <__sread>:
 802d1a4:	b510      	push	{r4, lr}
 802d1a6:	460c      	mov	r4, r1
 802d1a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d1ac:	f001 fce2 	bl	802eb74 <_read_r>
 802d1b0:	2800      	cmp	r0, #0
 802d1b2:	bfab      	itete	ge
 802d1b4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802d1b6:	89a3      	ldrhlt	r3, [r4, #12]
 802d1b8:	181b      	addge	r3, r3, r0
 802d1ba:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802d1be:	bfac      	ite	ge
 802d1c0:	6563      	strge	r3, [r4, #84]	; 0x54
 802d1c2:	81a3      	strhlt	r3, [r4, #12]
 802d1c4:	bd10      	pop	{r4, pc}

0802d1c6 <__swrite>:
 802d1c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802d1ca:	461f      	mov	r7, r3
 802d1cc:	898b      	ldrh	r3, [r1, #12]
 802d1ce:	05db      	lsls	r3, r3, #23
 802d1d0:	4605      	mov	r5, r0
 802d1d2:	460c      	mov	r4, r1
 802d1d4:	4616      	mov	r6, r2
 802d1d6:	d505      	bpl.n	802d1e4 <__swrite+0x1e>
 802d1d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d1dc:	2302      	movs	r3, #2
 802d1de:	2200      	movs	r2, #0
 802d1e0:	f001 f8aa 	bl	802e338 <_lseek_r>
 802d1e4:	89a3      	ldrh	r3, [r4, #12]
 802d1e6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802d1ea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802d1ee:	81a3      	strh	r3, [r4, #12]
 802d1f0:	4632      	mov	r2, r6
 802d1f2:	463b      	mov	r3, r7
 802d1f4:	4628      	mov	r0, r5
 802d1f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802d1fa:	f000 b869 	b.w	802d2d0 <_write_r>

0802d1fe <__sseek>:
 802d1fe:	b510      	push	{r4, lr}
 802d200:	460c      	mov	r4, r1
 802d202:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d206:	f001 f897 	bl	802e338 <_lseek_r>
 802d20a:	1c43      	adds	r3, r0, #1
 802d20c:	89a3      	ldrh	r3, [r4, #12]
 802d20e:	bf15      	itete	ne
 802d210:	6560      	strne	r0, [r4, #84]	; 0x54
 802d212:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802d216:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802d21a:	81a3      	strheq	r3, [r4, #12]
 802d21c:	bf18      	it	ne
 802d21e:	81a3      	strhne	r3, [r4, #12]
 802d220:	bd10      	pop	{r4, pc}

0802d222 <__sclose>:
 802d222:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d226:	f000 b935 	b.w	802d494 <_close_r>
	...

0802d22c <__swbuf_r>:
 802d22c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802d22e:	460e      	mov	r6, r1
 802d230:	4614      	mov	r4, r2
 802d232:	4605      	mov	r5, r0
 802d234:	b118      	cbz	r0, 802d23e <__swbuf_r+0x12>
 802d236:	6983      	ldr	r3, [r0, #24]
 802d238:	b90b      	cbnz	r3, 802d23e <__swbuf_r+0x12>
 802d23a:	f7fe ff53 	bl	802c0e4 <__sinit>
 802d23e:	4b21      	ldr	r3, [pc, #132]	; (802d2c4 <__swbuf_r+0x98>)
 802d240:	429c      	cmp	r4, r3
 802d242:	d12b      	bne.n	802d29c <__swbuf_r+0x70>
 802d244:	686c      	ldr	r4, [r5, #4]
 802d246:	69a3      	ldr	r3, [r4, #24]
 802d248:	60a3      	str	r3, [r4, #8]
 802d24a:	89a3      	ldrh	r3, [r4, #12]
 802d24c:	071a      	lsls	r2, r3, #28
 802d24e:	d52f      	bpl.n	802d2b0 <__swbuf_r+0x84>
 802d250:	6923      	ldr	r3, [r4, #16]
 802d252:	b36b      	cbz	r3, 802d2b0 <__swbuf_r+0x84>
 802d254:	6923      	ldr	r3, [r4, #16]
 802d256:	6820      	ldr	r0, [r4, #0]
 802d258:	1ac0      	subs	r0, r0, r3
 802d25a:	6963      	ldr	r3, [r4, #20]
 802d25c:	b2f6      	uxtb	r6, r6
 802d25e:	4283      	cmp	r3, r0
 802d260:	4637      	mov	r7, r6
 802d262:	dc04      	bgt.n	802d26e <__swbuf_r+0x42>
 802d264:	4621      	mov	r1, r4
 802d266:	4628      	mov	r0, r5
 802d268:	f001 f826 	bl	802e2b8 <_fflush_r>
 802d26c:	bb30      	cbnz	r0, 802d2bc <__swbuf_r+0x90>
 802d26e:	68a3      	ldr	r3, [r4, #8]
 802d270:	3b01      	subs	r3, #1
 802d272:	60a3      	str	r3, [r4, #8]
 802d274:	6823      	ldr	r3, [r4, #0]
 802d276:	1c5a      	adds	r2, r3, #1
 802d278:	6022      	str	r2, [r4, #0]
 802d27a:	701e      	strb	r6, [r3, #0]
 802d27c:	6963      	ldr	r3, [r4, #20]
 802d27e:	3001      	adds	r0, #1
 802d280:	4283      	cmp	r3, r0
 802d282:	d004      	beq.n	802d28e <__swbuf_r+0x62>
 802d284:	89a3      	ldrh	r3, [r4, #12]
 802d286:	07db      	lsls	r3, r3, #31
 802d288:	d506      	bpl.n	802d298 <__swbuf_r+0x6c>
 802d28a:	2e0a      	cmp	r6, #10
 802d28c:	d104      	bne.n	802d298 <__swbuf_r+0x6c>
 802d28e:	4621      	mov	r1, r4
 802d290:	4628      	mov	r0, r5
 802d292:	f001 f811 	bl	802e2b8 <_fflush_r>
 802d296:	b988      	cbnz	r0, 802d2bc <__swbuf_r+0x90>
 802d298:	4638      	mov	r0, r7
 802d29a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802d29c:	4b0a      	ldr	r3, [pc, #40]	; (802d2c8 <__swbuf_r+0x9c>)
 802d29e:	429c      	cmp	r4, r3
 802d2a0:	d101      	bne.n	802d2a6 <__swbuf_r+0x7a>
 802d2a2:	68ac      	ldr	r4, [r5, #8]
 802d2a4:	e7cf      	b.n	802d246 <__swbuf_r+0x1a>
 802d2a6:	4b09      	ldr	r3, [pc, #36]	; (802d2cc <__swbuf_r+0xa0>)
 802d2a8:	429c      	cmp	r4, r3
 802d2aa:	bf08      	it	eq
 802d2ac:	68ec      	ldreq	r4, [r5, #12]
 802d2ae:	e7ca      	b.n	802d246 <__swbuf_r+0x1a>
 802d2b0:	4621      	mov	r1, r4
 802d2b2:	4628      	mov	r0, r5
 802d2b4:	f000 f81e 	bl	802d2f4 <__swsetup_r>
 802d2b8:	2800      	cmp	r0, #0
 802d2ba:	d0cb      	beq.n	802d254 <__swbuf_r+0x28>
 802d2bc:	f04f 37ff 	mov.w	r7, #4294967295
 802d2c0:	e7ea      	b.n	802d298 <__swbuf_r+0x6c>
 802d2c2:	bf00      	nop
 802d2c4:	08049abc 	.word	0x08049abc
 802d2c8:	08049adc 	.word	0x08049adc
 802d2cc:	08049a9c 	.word	0x08049a9c

0802d2d0 <_write_r>:
 802d2d0:	b538      	push	{r3, r4, r5, lr}
 802d2d2:	4d07      	ldr	r5, [pc, #28]	; (802d2f0 <_write_r+0x20>)
 802d2d4:	4604      	mov	r4, r0
 802d2d6:	4608      	mov	r0, r1
 802d2d8:	4611      	mov	r1, r2
 802d2da:	2200      	movs	r2, #0
 802d2dc:	602a      	str	r2, [r5, #0]
 802d2de:	461a      	mov	r2, r3
 802d2e0:	f7d6 f998 	bl	8003614 <_write>
 802d2e4:	1c43      	adds	r3, r0, #1
 802d2e6:	d102      	bne.n	802d2ee <_write_r+0x1e>
 802d2e8:	682b      	ldr	r3, [r5, #0]
 802d2ea:	b103      	cbz	r3, 802d2ee <_write_r+0x1e>
 802d2ec:	6023      	str	r3, [r4, #0]
 802d2ee:	bd38      	pop	{r3, r4, r5, pc}
 802d2f0:	2001e3f0 	.word	0x2001e3f0

0802d2f4 <__swsetup_r>:
 802d2f4:	4b32      	ldr	r3, [pc, #200]	; (802d3c0 <__swsetup_r+0xcc>)
 802d2f6:	b570      	push	{r4, r5, r6, lr}
 802d2f8:	681d      	ldr	r5, [r3, #0]
 802d2fa:	4606      	mov	r6, r0
 802d2fc:	460c      	mov	r4, r1
 802d2fe:	b125      	cbz	r5, 802d30a <__swsetup_r+0x16>
 802d300:	69ab      	ldr	r3, [r5, #24]
 802d302:	b913      	cbnz	r3, 802d30a <__swsetup_r+0x16>
 802d304:	4628      	mov	r0, r5
 802d306:	f7fe feed 	bl	802c0e4 <__sinit>
 802d30a:	4b2e      	ldr	r3, [pc, #184]	; (802d3c4 <__swsetup_r+0xd0>)
 802d30c:	429c      	cmp	r4, r3
 802d30e:	d10f      	bne.n	802d330 <__swsetup_r+0x3c>
 802d310:	686c      	ldr	r4, [r5, #4]
 802d312:	89a3      	ldrh	r3, [r4, #12]
 802d314:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d318:	0719      	lsls	r1, r3, #28
 802d31a:	d42c      	bmi.n	802d376 <__swsetup_r+0x82>
 802d31c:	06dd      	lsls	r5, r3, #27
 802d31e:	d411      	bmi.n	802d344 <__swsetup_r+0x50>
 802d320:	2309      	movs	r3, #9
 802d322:	6033      	str	r3, [r6, #0]
 802d324:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802d328:	81a3      	strh	r3, [r4, #12]
 802d32a:	f04f 30ff 	mov.w	r0, #4294967295
 802d32e:	e03e      	b.n	802d3ae <__swsetup_r+0xba>
 802d330:	4b25      	ldr	r3, [pc, #148]	; (802d3c8 <__swsetup_r+0xd4>)
 802d332:	429c      	cmp	r4, r3
 802d334:	d101      	bne.n	802d33a <__swsetup_r+0x46>
 802d336:	68ac      	ldr	r4, [r5, #8]
 802d338:	e7eb      	b.n	802d312 <__swsetup_r+0x1e>
 802d33a:	4b24      	ldr	r3, [pc, #144]	; (802d3cc <__swsetup_r+0xd8>)
 802d33c:	429c      	cmp	r4, r3
 802d33e:	bf08      	it	eq
 802d340:	68ec      	ldreq	r4, [r5, #12]
 802d342:	e7e6      	b.n	802d312 <__swsetup_r+0x1e>
 802d344:	0758      	lsls	r0, r3, #29
 802d346:	d512      	bpl.n	802d36e <__swsetup_r+0x7a>
 802d348:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802d34a:	b141      	cbz	r1, 802d35e <__swsetup_r+0x6a>
 802d34c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802d350:	4299      	cmp	r1, r3
 802d352:	d002      	beq.n	802d35a <__swsetup_r+0x66>
 802d354:	4630      	mov	r0, r6
 802d356:	f7fe ffc3 	bl	802c2e0 <_free_r>
 802d35a:	2300      	movs	r3, #0
 802d35c:	6363      	str	r3, [r4, #52]	; 0x34
 802d35e:	89a3      	ldrh	r3, [r4, #12]
 802d360:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802d364:	81a3      	strh	r3, [r4, #12]
 802d366:	2300      	movs	r3, #0
 802d368:	6063      	str	r3, [r4, #4]
 802d36a:	6923      	ldr	r3, [r4, #16]
 802d36c:	6023      	str	r3, [r4, #0]
 802d36e:	89a3      	ldrh	r3, [r4, #12]
 802d370:	f043 0308 	orr.w	r3, r3, #8
 802d374:	81a3      	strh	r3, [r4, #12]
 802d376:	6923      	ldr	r3, [r4, #16]
 802d378:	b94b      	cbnz	r3, 802d38e <__swsetup_r+0x9a>
 802d37a:	89a3      	ldrh	r3, [r4, #12]
 802d37c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802d380:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802d384:	d003      	beq.n	802d38e <__swsetup_r+0x9a>
 802d386:	4621      	mov	r1, r4
 802d388:	4630      	mov	r0, r6
 802d38a:	f001 f80d 	bl	802e3a8 <__smakebuf_r>
 802d38e:	89a0      	ldrh	r0, [r4, #12]
 802d390:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d394:	f010 0301 	ands.w	r3, r0, #1
 802d398:	d00a      	beq.n	802d3b0 <__swsetup_r+0xbc>
 802d39a:	2300      	movs	r3, #0
 802d39c:	60a3      	str	r3, [r4, #8]
 802d39e:	6963      	ldr	r3, [r4, #20]
 802d3a0:	425b      	negs	r3, r3
 802d3a2:	61a3      	str	r3, [r4, #24]
 802d3a4:	6923      	ldr	r3, [r4, #16]
 802d3a6:	b943      	cbnz	r3, 802d3ba <__swsetup_r+0xc6>
 802d3a8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802d3ac:	d1ba      	bne.n	802d324 <__swsetup_r+0x30>
 802d3ae:	bd70      	pop	{r4, r5, r6, pc}
 802d3b0:	0781      	lsls	r1, r0, #30
 802d3b2:	bf58      	it	pl
 802d3b4:	6963      	ldrpl	r3, [r4, #20]
 802d3b6:	60a3      	str	r3, [r4, #8]
 802d3b8:	e7f4      	b.n	802d3a4 <__swsetup_r+0xb0>
 802d3ba:	2000      	movs	r0, #0
 802d3bc:	e7f7      	b.n	802d3ae <__swsetup_r+0xba>
 802d3be:	bf00      	nop
 802d3c0:	20000114 	.word	0x20000114
 802d3c4:	08049abc 	.word	0x08049abc
 802d3c8:	08049adc 	.word	0x08049adc
 802d3cc:	08049a9c 	.word	0x08049a9c

0802d3d0 <__register_exitproc>:
 802d3d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802d3d4:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 802d490 <__register_exitproc+0xc0>
 802d3d8:	4606      	mov	r6, r0
 802d3da:	f8d8 0000 	ldr.w	r0, [r8]
 802d3de:	461f      	mov	r7, r3
 802d3e0:	460d      	mov	r5, r1
 802d3e2:	4691      	mov	r9, r2
 802d3e4:	f7fe ff53 	bl	802c28e <__retarget_lock_acquire_recursive>
 802d3e8:	4b25      	ldr	r3, [pc, #148]	; (802d480 <__register_exitproc+0xb0>)
 802d3ea:	681c      	ldr	r4, [r3, #0]
 802d3ec:	b934      	cbnz	r4, 802d3fc <__register_exitproc+0x2c>
 802d3ee:	4c25      	ldr	r4, [pc, #148]	; (802d484 <__register_exitproc+0xb4>)
 802d3f0:	601c      	str	r4, [r3, #0]
 802d3f2:	4b25      	ldr	r3, [pc, #148]	; (802d488 <__register_exitproc+0xb8>)
 802d3f4:	b113      	cbz	r3, 802d3fc <__register_exitproc+0x2c>
 802d3f6:	681b      	ldr	r3, [r3, #0]
 802d3f8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802d3fc:	6863      	ldr	r3, [r4, #4]
 802d3fe:	2b1f      	cmp	r3, #31
 802d400:	dd07      	ble.n	802d412 <__register_exitproc+0x42>
 802d402:	f8d8 0000 	ldr.w	r0, [r8]
 802d406:	f7fe ff44 	bl	802c292 <__retarget_lock_release_recursive>
 802d40a:	f04f 30ff 	mov.w	r0, #4294967295
 802d40e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802d412:	b34e      	cbz	r6, 802d468 <__register_exitproc+0x98>
 802d414:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802d418:	b988      	cbnz	r0, 802d43e <__register_exitproc+0x6e>
 802d41a:	4b1c      	ldr	r3, [pc, #112]	; (802d48c <__register_exitproc+0xbc>)
 802d41c:	b923      	cbnz	r3, 802d428 <__register_exitproc+0x58>
 802d41e:	f8d8 0000 	ldr.w	r0, [r8]
 802d422:	f7fe ff35 	bl	802c290 <__retarget_lock_release>
 802d426:	e7f0      	b.n	802d40a <__register_exitproc+0x3a>
 802d428:	f44f 7084 	mov.w	r0, #264	; 0x108
 802d42c:	f7fe ff32 	bl	802c294 <malloc>
 802d430:	2800      	cmp	r0, #0
 802d432:	d0f4      	beq.n	802d41e <__register_exitproc+0x4e>
 802d434:	2300      	movs	r3, #0
 802d436:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802d43a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802d43e:	6863      	ldr	r3, [r4, #4]
 802d440:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802d444:	2201      	movs	r2, #1
 802d446:	409a      	lsls	r2, r3
 802d448:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802d44c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802d450:	4313      	orrs	r3, r2
 802d452:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802d456:	2e02      	cmp	r6, #2
 802d458:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802d45c:	bf02      	ittt	eq
 802d45e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802d462:	4313      	orreq	r3, r2
 802d464:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802d468:	6863      	ldr	r3, [r4, #4]
 802d46a:	f8d8 0000 	ldr.w	r0, [r8]
 802d46e:	1c5a      	adds	r2, r3, #1
 802d470:	3302      	adds	r3, #2
 802d472:	6062      	str	r2, [r4, #4]
 802d474:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802d478:	f7fe ff0b 	bl	802c292 <__retarget_lock_release_recursive>
 802d47c:	2000      	movs	r0, #0
 802d47e:	e7c6      	b.n	802d40e <__register_exitproc+0x3e>
 802d480:	2001e480 	.word	0x2001e480
 802d484:	2001e3f4 	.word	0x2001e3f4
 802d488:	08049b44 	.word	0x08049b44
 802d48c:	0802c295 	.word	0x0802c295
 802d490:	20000178 	.word	0x20000178

0802d494 <_close_r>:
 802d494:	b538      	push	{r3, r4, r5, lr}
 802d496:	4d06      	ldr	r5, [pc, #24]	; (802d4b0 <_close_r+0x1c>)
 802d498:	2300      	movs	r3, #0
 802d49a:	4604      	mov	r4, r0
 802d49c:	4608      	mov	r0, r1
 802d49e:	602b      	str	r3, [r5, #0]
 802d4a0:	f7d6 f8c6 	bl	8003630 <_close>
 802d4a4:	1c43      	adds	r3, r0, #1
 802d4a6:	d102      	bne.n	802d4ae <_close_r+0x1a>
 802d4a8:	682b      	ldr	r3, [r5, #0]
 802d4aa:	b103      	cbz	r3, 802d4ae <_close_r+0x1a>
 802d4ac:	6023      	str	r3, [r4, #0]
 802d4ae:	bd38      	pop	{r3, r4, r5, pc}
 802d4b0:	2001e3f0 	.word	0x2001e3f0

0802d4b4 <quorem>:
 802d4b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d4b8:	6903      	ldr	r3, [r0, #16]
 802d4ba:	690c      	ldr	r4, [r1, #16]
 802d4bc:	42a3      	cmp	r3, r4
 802d4be:	4607      	mov	r7, r0
 802d4c0:	f2c0 8081 	blt.w	802d5c6 <quorem+0x112>
 802d4c4:	3c01      	subs	r4, #1
 802d4c6:	f101 0814 	add.w	r8, r1, #20
 802d4ca:	f100 0514 	add.w	r5, r0, #20
 802d4ce:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802d4d2:	9301      	str	r3, [sp, #4]
 802d4d4:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 802d4d8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 802d4dc:	3301      	adds	r3, #1
 802d4de:	429a      	cmp	r2, r3
 802d4e0:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 802d4e4:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 802d4e8:	fbb2 f6f3 	udiv	r6, r2, r3
 802d4ec:	d331      	bcc.n	802d552 <quorem+0x9e>
 802d4ee:	f04f 0e00 	mov.w	lr, #0
 802d4f2:	4640      	mov	r0, r8
 802d4f4:	46ac      	mov	ip, r5
 802d4f6:	46f2      	mov	sl, lr
 802d4f8:	f850 2b04 	ldr.w	r2, [r0], #4
 802d4fc:	b293      	uxth	r3, r2
 802d4fe:	fb06 e303 	mla	r3, r6, r3, lr
 802d502:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 802d506:	b29b      	uxth	r3, r3
 802d508:	ebaa 0303 	sub.w	r3, sl, r3
 802d50c:	f8dc a000 	ldr.w	sl, [ip]
 802d510:	0c12      	lsrs	r2, r2, #16
 802d512:	fa13 f38a 	uxtah	r3, r3, sl
 802d516:	fb06 e202 	mla	r2, r6, r2, lr
 802d51a:	9300      	str	r3, [sp, #0]
 802d51c:	9b00      	ldr	r3, [sp, #0]
 802d51e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 802d522:	b292      	uxth	r2, r2
 802d524:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 802d528:	eb02 4223 	add.w	r2, r2, r3, asr #16
 802d52c:	f8bd 3000 	ldrh.w	r3, [sp]
 802d530:	4581      	cmp	r9, r0
 802d532:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802d536:	f84c 3b04 	str.w	r3, [ip], #4
 802d53a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 802d53e:	d2db      	bcs.n	802d4f8 <quorem+0x44>
 802d540:	f855 300b 	ldr.w	r3, [r5, fp]
 802d544:	b92b      	cbnz	r3, 802d552 <quorem+0x9e>
 802d546:	9b01      	ldr	r3, [sp, #4]
 802d548:	3b04      	subs	r3, #4
 802d54a:	429d      	cmp	r5, r3
 802d54c:	461a      	mov	r2, r3
 802d54e:	d32e      	bcc.n	802d5ae <quorem+0xfa>
 802d550:	613c      	str	r4, [r7, #16]
 802d552:	4638      	mov	r0, r7
 802d554:	f001 f9f6 	bl	802e944 <__mcmp>
 802d558:	2800      	cmp	r0, #0
 802d55a:	db24      	blt.n	802d5a6 <quorem+0xf2>
 802d55c:	3601      	adds	r6, #1
 802d55e:	4628      	mov	r0, r5
 802d560:	f04f 0c00 	mov.w	ip, #0
 802d564:	f858 2b04 	ldr.w	r2, [r8], #4
 802d568:	f8d0 e000 	ldr.w	lr, [r0]
 802d56c:	b293      	uxth	r3, r2
 802d56e:	ebac 0303 	sub.w	r3, ip, r3
 802d572:	0c12      	lsrs	r2, r2, #16
 802d574:	fa13 f38e 	uxtah	r3, r3, lr
 802d578:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 802d57c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 802d580:	b29b      	uxth	r3, r3
 802d582:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802d586:	45c1      	cmp	r9, r8
 802d588:	f840 3b04 	str.w	r3, [r0], #4
 802d58c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 802d590:	d2e8      	bcs.n	802d564 <quorem+0xb0>
 802d592:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 802d596:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802d59a:	b922      	cbnz	r2, 802d5a6 <quorem+0xf2>
 802d59c:	3b04      	subs	r3, #4
 802d59e:	429d      	cmp	r5, r3
 802d5a0:	461a      	mov	r2, r3
 802d5a2:	d30a      	bcc.n	802d5ba <quorem+0x106>
 802d5a4:	613c      	str	r4, [r7, #16]
 802d5a6:	4630      	mov	r0, r6
 802d5a8:	b003      	add	sp, #12
 802d5aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d5ae:	6812      	ldr	r2, [r2, #0]
 802d5b0:	3b04      	subs	r3, #4
 802d5b2:	2a00      	cmp	r2, #0
 802d5b4:	d1cc      	bne.n	802d550 <quorem+0x9c>
 802d5b6:	3c01      	subs	r4, #1
 802d5b8:	e7c7      	b.n	802d54a <quorem+0x96>
 802d5ba:	6812      	ldr	r2, [r2, #0]
 802d5bc:	3b04      	subs	r3, #4
 802d5be:	2a00      	cmp	r2, #0
 802d5c0:	d1f0      	bne.n	802d5a4 <quorem+0xf0>
 802d5c2:	3c01      	subs	r4, #1
 802d5c4:	e7eb      	b.n	802d59e <quorem+0xea>
 802d5c6:	2000      	movs	r0, #0
 802d5c8:	e7ee      	b.n	802d5a8 <quorem+0xf4>
 802d5ca:	0000      	movs	r0, r0
 802d5cc:	0000      	movs	r0, r0
	...

0802d5d0 <_dtoa_r>:
 802d5d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d5d4:	ed2d 8b04 	vpush	{d8-d9}
 802d5d8:	ec57 6b10 	vmov	r6, r7, d0
 802d5dc:	b093      	sub	sp, #76	; 0x4c
 802d5de:	6a45      	ldr	r5, [r0, #36]	; 0x24
 802d5e0:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 802d5e4:	9106      	str	r1, [sp, #24]
 802d5e6:	ee10 aa10 	vmov	sl, s0
 802d5ea:	4604      	mov	r4, r0
 802d5ec:	9209      	str	r2, [sp, #36]	; 0x24
 802d5ee:	930c      	str	r3, [sp, #48]	; 0x30
 802d5f0:	46bb      	mov	fp, r7
 802d5f2:	b975      	cbnz	r5, 802d612 <_dtoa_r+0x42>
 802d5f4:	2010      	movs	r0, #16
 802d5f6:	f7fe fe4d 	bl	802c294 <malloc>
 802d5fa:	4602      	mov	r2, r0
 802d5fc:	6260      	str	r0, [r4, #36]	; 0x24
 802d5fe:	b920      	cbnz	r0, 802d60a <_dtoa_r+0x3a>
 802d600:	4ba7      	ldr	r3, [pc, #668]	; (802d8a0 <_dtoa_r+0x2d0>)
 802d602:	21ea      	movs	r1, #234	; 0xea
 802d604:	48a7      	ldr	r0, [pc, #668]	; (802d8a4 <_dtoa_r+0x2d4>)
 802d606:	f7fe fcdd 	bl	802bfc4 <__assert_func>
 802d60a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 802d60e:	6005      	str	r5, [r0, #0]
 802d610:	60c5      	str	r5, [r0, #12]
 802d612:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d614:	6819      	ldr	r1, [r3, #0]
 802d616:	b151      	cbz	r1, 802d62e <_dtoa_r+0x5e>
 802d618:	685a      	ldr	r2, [r3, #4]
 802d61a:	604a      	str	r2, [r1, #4]
 802d61c:	2301      	movs	r3, #1
 802d61e:	4093      	lsls	r3, r2
 802d620:	608b      	str	r3, [r1, #8]
 802d622:	4620      	mov	r0, r4
 802d624:	f000 ff4c 	bl	802e4c0 <_Bfree>
 802d628:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d62a:	2200      	movs	r2, #0
 802d62c:	601a      	str	r2, [r3, #0]
 802d62e:	1e3b      	subs	r3, r7, #0
 802d630:	bfaa      	itet	ge
 802d632:	2300      	movge	r3, #0
 802d634:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 802d638:	f8c8 3000 	strge.w	r3, [r8]
 802d63c:	4b9a      	ldr	r3, [pc, #616]	; (802d8a8 <_dtoa_r+0x2d8>)
 802d63e:	bfbc      	itt	lt
 802d640:	2201      	movlt	r2, #1
 802d642:	f8c8 2000 	strlt.w	r2, [r8]
 802d646:	ea33 030b 	bics.w	r3, r3, fp
 802d64a:	d11b      	bne.n	802d684 <_dtoa_r+0xb4>
 802d64c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802d64e:	f242 730f 	movw	r3, #9999	; 0x270f
 802d652:	6013      	str	r3, [r2, #0]
 802d654:	f3cb 0313 	ubfx	r3, fp, #0, #20
 802d658:	4333      	orrs	r3, r6
 802d65a:	f000 8592 	beq.w	802e182 <_dtoa_r+0xbb2>
 802d65e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802d660:	b963      	cbnz	r3, 802d67c <_dtoa_r+0xac>
 802d662:	4b92      	ldr	r3, [pc, #584]	; (802d8ac <_dtoa_r+0x2dc>)
 802d664:	e022      	b.n	802d6ac <_dtoa_r+0xdc>
 802d666:	4b92      	ldr	r3, [pc, #584]	; (802d8b0 <_dtoa_r+0x2e0>)
 802d668:	9301      	str	r3, [sp, #4]
 802d66a:	3308      	adds	r3, #8
 802d66c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802d66e:	6013      	str	r3, [r2, #0]
 802d670:	9801      	ldr	r0, [sp, #4]
 802d672:	b013      	add	sp, #76	; 0x4c
 802d674:	ecbd 8b04 	vpop	{d8-d9}
 802d678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d67c:	4b8b      	ldr	r3, [pc, #556]	; (802d8ac <_dtoa_r+0x2dc>)
 802d67e:	9301      	str	r3, [sp, #4]
 802d680:	3303      	adds	r3, #3
 802d682:	e7f3      	b.n	802d66c <_dtoa_r+0x9c>
 802d684:	2200      	movs	r2, #0
 802d686:	2300      	movs	r3, #0
 802d688:	4650      	mov	r0, sl
 802d68a:	4659      	mov	r1, fp
 802d68c:	f7d3 fa8c 	bl	8000ba8 <__aeabi_dcmpeq>
 802d690:	ec4b ab19 	vmov	d9, sl, fp
 802d694:	4680      	mov	r8, r0
 802d696:	b158      	cbz	r0, 802d6b0 <_dtoa_r+0xe0>
 802d698:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802d69a:	2301      	movs	r3, #1
 802d69c:	6013      	str	r3, [r2, #0]
 802d69e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802d6a0:	2b00      	cmp	r3, #0
 802d6a2:	f000 856b 	beq.w	802e17c <_dtoa_r+0xbac>
 802d6a6:	4883      	ldr	r0, [pc, #524]	; (802d8b4 <_dtoa_r+0x2e4>)
 802d6a8:	6018      	str	r0, [r3, #0]
 802d6aa:	1e43      	subs	r3, r0, #1
 802d6ac:	9301      	str	r3, [sp, #4]
 802d6ae:	e7df      	b.n	802d670 <_dtoa_r+0xa0>
 802d6b0:	ec4b ab10 	vmov	d0, sl, fp
 802d6b4:	aa10      	add	r2, sp, #64	; 0x40
 802d6b6:	a911      	add	r1, sp, #68	; 0x44
 802d6b8:	4620      	mov	r0, r4
 802d6ba:	f001 f9e9 	bl	802ea90 <__d2b>
 802d6be:	f3cb 550a 	ubfx	r5, fp, #20, #11
 802d6c2:	ee08 0a10 	vmov	s16, r0
 802d6c6:	2d00      	cmp	r5, #0
 802d6c8:	f000 8084 	beq.w	802d7d4 <_dtoa_r+0x204>
 802d6cc:	ee19 3a90 	vmov	r3, s19
 802d6d0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 802d6d4:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 802d6d8:	4656      	mov	r6, sl
 802d6da:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 802d6de:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 802d6e2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 802d6e6:	4b74      	ldr	r3, [pc, #464]	; (802d8b8 <_dtoa_r+0x2e8>)
 802d6e8:	2200      	movs	r2, #0
 802d6ea:	4630      	mov	r0, r6
 802d6ec:	4639      	mov	r1, r7
 802d6ee:	f7d2 fe3b 	bl	8000368 <__aeabi_dsub>
 802d6f2:	a365      	add	r3, pc, #404	; (adr r3, 802d888 <_dtoa_r+0x2b8>)
 802d6f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 802d6f8:	f7d2 ffee 	bl	80006d8 <__aeabi_dmul>
 802d6fc:	a364      	add	r3, pc, #400	; (adr r3, 802d890 <_dtoa_r+0x2c0>)
 802d6fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 802d702:	f7d2 fe33 	bl	800036c <__adddf3>
 802d706:	4606      	mov	r6, r0
 802d708:	4628      	mov	r0, r5
 802d70a:	460f      	mov	r7, r1
 802d70c:	f7d2 ff7a 	bl	8000604 <__aeabi_i2d>
 802d710:	a361      	add	r3, pc, #388	; (adr r3, 802d898 <_dtoa_r+0x2c8>)
 802d712:	e9d3 2300 	ldrd	r2, r3, [r3]
 802d716:	f7d2 ffdf 	bl	80006d8 <__aeabi_dmul>
 802d71a:	4602      	mov	r2, r0
 802d71c:	460b      	mov	r3, r1
 802d71e:	4630      	mov	r0, r6
 802d720:	4639      	mov	r1, r7
 802d722:	f7d2 fe23 	bl	800036c <__adddf3>
 802d726:	4606      	mov	r6, r0
 802d728:	460f      	mov	r7, r1
 802d72a:	f7d3 fa85 	bl	8000c38 <__aeabi_d2iz>
 802d72e:	2200      	movs	r2, #0
 802d730:	9000      	str	r0, [sp, #0]
 802d732:	2300      	movs	r3, #0
 802d734:	4630      	mov	r0, r6
 802d736:	4639      	mov	r1, r7
 802d738:	f7d3 fa40 	bl	8000bbc <__aeabi_dcmplt>
 802d73c:	b150      	cbz	r0, 802d754 <_dtoa_r+0x184>
 802d73e:	9800      	ldr	r0, [sp, #0]
 802d740:	f7d2 ff60 	bl	8000604 <__aeabi_i2d>
 802d744:	4632      	mov	r2, r6
 802d746:	463b      	mov	r3, r7
 802d748:	f7d3 fa2e 	bl	8000ba8 <__aeabi_dcmpeq>
 802d74c:	b910      	cbnz	r0, 802d754 <_dtoa_r+0x184>
 802d74e:	9b00      	ldr	r3, [sp, #0]
 802d750:	3b01      	subs	r3, #1
 802d752:	9300      	str	r3, [sp, #0]
 802d754:	9b00      	ldr	r3, [sp, #0]
 802d756:	2b16      	cmp	r3, #22
 802d758:	d85a      	bhi.n	802d810 <_dtoa_r+0x240>
 802d75a:	9a00      	ldr	r2, [sp, #0]
 802d75c:	4b57      	ldr	r3, [pc, #348]	; (802d8bc <_dtoa_r+0x2ec>)
 802d75e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802d762:	e9d3 2300 	ldrd	r2, r3, [r3]
 802d766:	ec51 0b19 	vmov	r0, r1, d9
 802d76a:	f7d3 fa27 	bl	8000bbc <__aeabi_dcmplt>
 802d76e:	2800      	cmp	r0, #0
 802d770:	d050      	beq.n	802d814 <_dtoa_r+0x244>
 802d772:	9b00      	ldr	r3, [sp, #0]
 802d774:	3b01      	subs	r3, #1
 802d776:	9300      	str	r3, [sp, #0]
 802d778:	2300      	movs	r3, #0
 802d77a:	930b      	str	r3, [sp, #44]	; 0x2c
 802d77c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802d77e:	1b5d      	subs	r5, r3, r5
 802d780:	1e6b      	subs	r3, r5, #1
 802d782:	9305      	str	r3, [sp, #20]
 802d784:	bf45      	ittet	mi
 802d786:	f1c5 0301 	rsbmi	r3, r5, #1
 802d78a:	9304      	strmi	r3, [sp, #16]
 802d78c:	2300      	movpl	r3, #0
 802d78e:	2300      	movmi	r3, #0
 802d790:	bf4c      	ite	mi
 802d792:	9305      	strmi	r3, [sp, #20]
 802d794:	9304      	strpl	r3, [sp, #16]
 802d796:	9b00      	ldr	r3, [sp, #0]
 802d798:	2b00      	cmp	r3, #0
 802d79a:	db3d      	blt.n	802d818 <_dtoa_r+0x248>
 802d79c:	9b05      	ldr	r3, [sp, #20]
 802d79e:	9a00      	ldr	r2, [sp, #0]
 802d7a0:	920a      	str	r2, [sp, #40]	; 0x28
 802d7a2:	4413      	add	r3, r2
 802d7a4:	9305      	str	r3, [sp, #20]
 802d7a6:	2300      	movs	r3, #0
 802d7a8:	9307      	str	r3, [sp, #28]
 802d7aa:	9b06      	ldr	r3, [sp, #24]
 802d7ac:	2b09      	cmp	r3, #9
 802d7ae:	f200 8089 	bhi.w	802d8c4 <_dtoa_r+0x2f4>
 802d7b2:	2b05      	cmp	r3, #5
 802d7b4:	bfc4      	itt	gt
 802d7b6:	3b04      	subgt	r3, #4
 802d7b8:	9306      	strgt	r3, [sp, #24]
 802d7ba:	9b06      	ldr	r3, [sp, #24]
 802d7bc:	f1a3 0302 	sub.w	r3, r3, #2
 802d7c0:	bfcc      	ite	gt
 802d7c2:	2500      	movgt	r5, #0
 802d7c4:	2501      	movle	r5, #1
 802d7c6:	2b03      	cmp	r3, #3
 802d7c8:	f200 8087 	bhi.w	802d8da <_dtoa_r+0x30a>
 802d7cc:	e8df f003 	tbb	[pc, r3]
 802d7d0:	59383a2d 	.word	0x59383a2d
 802d7d4:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 802d7d8:	441d      	add	r5, r3
 802d7da:	f205 4332 	addw	r3, r5, #1074	; 0x432
 802d7de:	2b20      	cmp	r3, #32
 802d7e0:	bfc1      	itttt	gt
 802d7e2:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 802d7e6:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 802d7ea:	fa0b f303 	lslgt.w	r3, fp, r3
 802d7ee:	fa26 f000 	lsrgt.w	r0, r6, r0
 802d7f2:	bfda      	itte	le
 802d7f4:	f1c3 0320 	rsble	r3, r3, #32
 802d7f8:	fa06 f003 	lslle.w	r0, r6, r3
 802d7fc:	4318      	orrgt	r0, r3
 802d7fe:	f7d2 fef1 	bl	80005e4 <__aeabi_ui2d>
 802d802:	2301      	movs	r3, #1
 802d804:	4606      	mov	r6, r0
 802d806:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 802d80a:	3d01      	subs	r5, #1
 802d80c:	930e      	str	r3, [sp, #56]	; 0x38
 802d80e:	e76a      	b.n	802d6e6 <_dtoa_r+0x116>
 802d810:	2301      	movs	r3, #1
 802d812:	e7b2      	b.n	802d77a <_dtoa_r+0x1aa>
 802d814:	900b      	str	r0, [sp, #44]	; 0x2c
 802d816:	e7b1      	b.n	802d77c <_dtoa_r+0x1ac>
 802d818:	9b04      	ldr	r3, [sp, #16]
 802d81a:	9a00      	ldr	r2, [sp, #0]
 802d81c:	1a9b      	subs	r3, r3, r2
 802d81e:	9304      	str	r3, [sp, #16]
 802d820:	4253      	negs	r3, r2
 802d822:	9307      	str	r3, [sp, #28]
 802d824:	2300      	movs	r3, #0
 802d826:	930a      	str	r3, [sp, #40]	; 0x28
 802d828:	e7bf      	b.n	802d7aa <_dtoa_r+0x1da>
 802d82a:	2300      	movs	r3, #0
 802d82c:	9308      	str	r3, [sp, #32]
 802d82e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802d830:	2b00      	cmp	r3, #0
 802d832:	dc55      	bgt.n	802d8e0 <_dtoa_r+0x310>
 802d834:	2301      	movs	r3, #1
 802d836:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802d83a:	461a      	mov	r2, r3
 802d83c:	9209      	str	r2, [sp, #36]	; 0x24
 802d83e:	e00c      	b.n	802d85a <_dtoa_r+0x28a>
 802d840:	2301      	movs	r3, #1
 802d842:	e7f3      	b.n	802d82c <_dtoa_r+0x25c>
 802d844:	2300      	movs	r3, #0
 802d846:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802d848:	9308      	str	r3, [sp, #32]
 802d84a:	9b00      	ldr	r3, [sp, #0]
 802d84c:	4413      	add	r3, r2
 802d84e:	9302      	str	r3, [sp, #8]
 802d850:	3301      	adds	r3, #1
 802d852:	2b01      	cmp	r3, #1
 802d854:	9303      	str	r3, [sp, #12]
 802d856:	bfb8      	it	lt
 802d858:	2301      	movlt	r3, #1
 802d85a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 802d85c:	2200      	movs	r2, #0
 802d85e:	6042      	str	r2, [r0, #4]
 802d860:	2204      	movs	r2, #4
 802d862:	f102 0614 	add.w	r6, r2, #20
 802d866:	429e      	cmp	r6, r3
 802d868:	6841      	ldr	r1, [r0, #4]
 802d86a:	d93d      	bls.n	802d8e8 <_dtoa_r+0x318>
 802d86c:	4620      	mov	r0, r4
 802d86e:	f000 fde7 	bl	802e440 <_Balloc>
 802d872:	9001      	str	r0, [sp, #4]
 802d874:	2800      	cmp	r0, #0
 802d876:	d13b      	bne.n	802d8f0 <_dtoa_r+0x320>
 802d878:	4b11      	ldr	r3, [pc, #68]	; (802d8c0 <_dtoa_r+0x2f0>)
 802d87a:	4602      	mov	r2, r0
 802d87c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 802d880:	e6c0      	b.n	802d604 <_dtoa_r+0x34>
 802d882:	2301      	movs	r3, #1
 802d884:	e7df      	b.n	802d846 <_dtoa_r+0x276>
 802d886:	bf00      	nop
 802d888:	636f4361 	.word	0x636f4361
 802d88c:	3fd287a7 	.word	0x3fd287a7
 802d890:	8b60c8b3 	.word	0x8b60c8b3
 802d894:	3fc68a28 	.word	0x3fc68a28
 802d898:	509f79fb 	.word	0x509f79fb
 802d89c:	3fd34413 	.word	0x3fd34413
 802d8a0:	08049b55 	.word	0x08049b55
 802d8a4:	08049b6c 	.word	0x08049b6c
 802d8a8:	7ff00000 	.word	0x7ff00000
 802d8ac:	08049b51 	.word	0x08049b51
 802d8b0:	08049b48 	.word	0x08049b48
 802d8b4:	08033fd9 	.word	0x08033fd9
 802d8b8:	3ff80000 	.word	0x3ff80000
 802d8bc:	08049c60 	.word	0x08049c60
 802d8c0:	08049bc7 	.word	0x08049bc7
 802d8c4:	2501      	movs	r5, #1
 802d8c6:	2300      	movs	r3, #0
 802d8c8:	9306      	str	r3, [sp, #24]
 802d8ca:	9508      	str	r5, [sp, #32]
 802d8cc:	f04f 33ff 	mov.w	r3, #4294967295
 802d8d0:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802d8d4:	2200      	movs	r2, #0
 802d8d6:	2312      	movs	r3, #18
 802d8d8:	e7b0      	b.n	802d83c <_dtoa_r+0x26c>
 802d8da:	2301      	movs	r3, #1
 802d8dc:	9308      	str	r3, [sp, #32]
 802d8de:	e7f5      	b.n	802d8cc <_dtoa_r+0x2fc>
 802d8e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802d8e2:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802d8e6:	e7b8      	b.n	802d85a <_dtoa_r+0x28a>
 802d8e8:	3101      	adds	r1, #1
 802d8ea:	6041      	str	r1, [r0, #4]
 802d8ec:	0052      	lsls	r2, r2, #1
 802d8ee:	e7b8      	b.n	802d862 <_dtoa_r+0x292>
 802d8f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d8f2:	9a01      	ldr	r2, [sp, #4]
 802d8f4:	601a      	str	r2, [r3, #0]
 802d8f6:	9b03      	ldr	r3, [sp, #12]
 802d8f8:	2b0e      	cmp	r3, #14
 802d8fa:	f200 809d 	bhi.w	802da38 <_dtoa_r+0x468>
 802d8fe:	2d00      	cmp	r5, #0
 802d900:	f000 809a 	beq.w	802da38 <_dtoa_r+0x468>
 802d904:	9b00      	ldr	r3, [sp, #0]
 802d906:	2b00      	cmp	r3, #0
 802d908:	dd32      	ble.n	802d970 <_dtoa_r+0x3a0>
 802d90a:	4ab7      	ldr	r2, [pc, #732]	; (802dbe8 <_dtoa_r+0x618>)
 802d90c:	f003 030f 	and.w	r3, r3, #15
 802d910:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 802d914:	e9d3 8900 	ldrd	r8, r9, [r3]
 802d918:	9b00      	ldr	r3, [sp, #0]
 802d91a:	05d8      	lsls	r0, r3, #23
 802d91c:	ea4f 1723 	mov.w	r7, r3, asr #4
 802d920:	d516      	bpl.n	802d950 <_dtoa_r+0x380>
 802d922:	4bb2      	ldr	r3, [pc, #712]	; (802dbec <_dtoa_r+0x61c>)
 802d924:	ec51 0b19 	vmov	r0, r1, d9
 802d928:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 802d92c:	f7d2 fffe 	bl	800092c <__aeabi_ddiv>
 802d930:	f007 070f 	and.w	r7, r7, #15
 802d934:	4682      	mov	sl, r0
 802d936:	468b      	mov	fp, r1
 802d938:	2503      	movs	r5, #3
 802d93a:	4eac      	ldr	r6, [pc, #688]	; (802dbec <_dtoa_r+0x61c>)
 802d93c:	b957      	cbnz	r7, 802d954 <_dtoa_r+0x384>
 802d93e:	4642      	mov	r2, r8
 802d940:	464b      	mov	r3, r9
 802d942:	4650      	mov	r0, sl
 802d944:	4659      	mov	r1, fp
 802d946:	f7d2 fff1 	bl	800092c <__aeabi_ddiv>
 802d94a:	4682      	mov	sl, r0
 802d94c:	468b      	mov	fp, r1
 802d94e:	e028      	b.n	802d9a2 <_dtoa_r+0x3d2>
 802d950:	2502      	movs	r5, #2
 802d952:	e7f2      	b.n	802d93a <_dtoa_r+0x36a>
 802d954:	07f9      	lsls	r1, r7, #31
 802d956:	d508      	bpl.n	802d96a <_dtoa_r+0x39a>
 802d958:	4640      	mov	r0, r8
 802d95a:	4649      	mov	r1, r9
 802d95c:	e9d6 2300 	ldrd	r2, r3, [r6]
 802d960:	f7d2 feba 	bl	80006d8 <__aeabi_dmul>
 802d964:	3501      	adds	r5, #1
 802d966:	4680      	mov	r8, r0
 802d968:	4689      	mov	r9, r1
 802d96a:	107f      	asrs	r7, r7, #1
 802d96c:	3608      	adds	r6, #8
 802d96e:	e7e5      	b.n	802d93c <_dtoa_r+0x36c>
 802d970:	f000 809b 	beq.w	802daaa <_dtoa_r+0x4da>
 802d974:	9b00      	ldr	r3, [sp, #0]
 802d976:	4f9d      	ldr	r7, [pc, #628]	; (802dbec <_dtoa_r+0x61c>)
 802d978:	425e      	negs	r6, r3
 802d97a:	4b9b      	ldr	r3, [pc, #620]	; (802dbe8 <_dtoa_r+0x618>)
 802d97c:	f006 020f 	and.w	r2, r6, #15
 802d980:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802d984:	e9d3 2300 	ldrd	r2, r3, [r3]
 802d988:	ec51 0b19 	vmov	r0, r1, d9
 802d98c:	f7d2 fea4 	bl	80006d8 <__aeabi_dmul>
 802d990:	1136      	asrs	r6, r6, #4
 802d992:	4682      	mov	sl, r0
 802d994:	468b      	mov	fp, r1
 802d996:	2300      	movs	r3, #0
 802d998:	2502      	movs	r5, #2
 802d99a:	2e00      	cmp	r6, #0
 802d99c:	d17a      	bne.n	802da94 <_dtoa_r+0x4c4>
 802d99e:	2b00      	cmp	r3, #0
 802d9a0:	d1d3      	bne.n	802d94a <_dtoa_r+0x37a>
 802d9a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802d9a4:	2b00      	cmp	r3, #0
 802d9a6:	f000 8082 	beq.w	802daae <_dtoa_r+0x4de>
 802d9aa:	4b91      	ldr	r3, [pc, #580]	; (802dbf0 <_dtoa_r+0x620>)
 802d9ac:	2200      	movs	r2, #0
 802d9ae:	4650      	mov	r0, sl
 802d9b0:	4659      	mov	r1, fp
 802d9b2:	f7d3 f903 	bl	8000bbc <__aeabi_dcmplt>
 802d9b6:	2800      	cmp	r0, #0
 802d9b8:	d079      	beq.n	802daae <_dtoa_r+0x4de>
 802d9ba:	9b03      	ldr	r3, [sp, #12]
 802d9bc:	2b00      	cmp	r3, #0
 802d9be:	d076      	beq.n	802daae <_dtoa_r+0x4de>
 802d9c0:	9b02      	ldr	r3, [sp, #8]
 802d9c2:	2b00      	cmp	r3, #0
 802d9c4:	dd36      	ble.n	802da34 <_dtoa_r+0x464>
 802d9c6:	9b00      	ldr	r3, [sp, #0]
 802d9c8:	4650      	mov	r0, sl
 802d9ca:	4659      	mov	r1, fp
 802d9cc:	1e5f      	subs	r7, r3, #1
 802d9ce:	2200      	movs	r2, #0
 802d9d0:	4b88      	ldr	r3, [pc, #544]	; (802dbf4 <_dtoa_r+0x624>)
 802d9d2:	f7d2 fe81 	bl	80006d8 <__aeabi_dmul>
 802d9d6:	9e02      	ldr	r6, [sp, #8]
 802d9d8:	4682      	mov	sl, r0
 802d9da:	468b      	mov	fp, r1
 802d9dc:	3501      	adds	r5, #1
 802d9de:	4628      	mov	r0, r5
 802d9e0:	f7d2 fe10 	bl	8000604 <__aeabi_i2d>
 802d9e4:	4652      	mov	r2, sl
 802d9e6:	465b      	mov	r3, fp
 802d9e8:	f7d2 fe76 	bl	80006d8 <__aeabi_dmul>
 802d9ec:	4b82      	ldr	r3, [pc, #520]	; (802dbf8 <_dtoa_r+0x628>)
 802d9ee:	2200      	movs	r2, #0
 802d9f0:	f7d2 fcbc 	bl	800036c <__adddf3>
 802d9f4:	46d0      	mov	r8, sl
 802d9f6:	46d9      	mov	r9, fp
 802d9f8:	4682      	mov	sl, r0
 802d9fa:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 802d9fe:	2e00      	cmp	r6, #0
 802da00:	d158      	bne.n	802dab4 <_dtoa_r+0x4e4>
 802da02:	4b7e      	ldr	r3, [pc, #504]	; (802dbfc <_dtoa_r+0x62c>)
 802da04:	2200      	movs	r2, #0
 802da06:	4640      	mov	r0, r8
 802da08:	4649      	mov	r1, r9
 802da0a:	f7d2 fcad 	bl	8000368 <__aeabi_dsub>
 802da0e:	4652      	mov	r2, sl
 802da10:	465b      	mov	r3, fp
 802da12:	4680      	mov	r8, r0
 802da14:	4689      	mov	r9, r1
 802da16:	f7d3 f8ef 	bl	8000bf8 <__aeabi_dcmpgt>
 802da1a:	2800      	cmp	r0, #0
 802da1c:	f040 8295 	bne.w	802df4a <_dtoa_r+0x97a>
 802da20:	4652      	mov	r2, sl
 802da22:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 802da26:	4640      	mov	r0, r8
 802da28:	4649      	mov	r1, r9
 802da2a:	f7d3 f8c7 	bl	8000bbc <__aeabi_dcmplt>
 802da2e:	2800      	cmp	r0, #0
 802da30:	f040 8289 	bne.w	802df46 <_dtoa_r+0x976>
 802da34:	ec5b ab19 	vmov	sl, fp, d9
 802da38:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802da3a:	2b00      	cmp	r3, #0
 802da3c:	f2c0 8148 	blt.w	802dcd0 <_dtoa_r+0x700>
 802da40:	9a00      	ldr	r2, [sp, #0]
 802da42:	2a0e      	cmp	r2, #14
 802da44:	f300 8144 	bgt.w	802dcd0 <_dtoa_r+0x700>
 802da48:	4b67      	ldr	r3, [pc, #412]	; (802dbe8 <_dtoa_r+0x618>)
 802da4a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802da4e:	e9d3 8900 	ldrd	r8, r9, [r3]
 802da52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802da54:	2b00      	cmp	r3, #0
 802da56:	f280 80d5 	bge.w	802dc04 <_dtoa_r+0x634>
 802da5a:	9b03      	ldr	r3, [sp, #12]
 802da5c:	2b00      	cmp	r3, #0
 802da5e:	f300 80d1 	bgt.w	802dc04 <_dtoa_r+0x634>
 802da62:	f040 826f 	bne.w	802df44 <_dtoa_r+0x974>
 802da66:	4b65      	ldr	r3, [pc, #404]	; (802dbfc <_dtoa_r+0x62c>)
 802da68:	2200      	movs	r2, #0
 802da6a:	4640      	mov	r0, r8
 802da6c:	4649      	mov	r1, r9
 802da6e:	f7d2 fe33 	bl	80006d8 <__aeabi_dmul>
 802da72:	4652      	mov	r2, sl
 802da74:	465b      	mov	r3, fp
 802da76:	f7d3 f8b5 	bl	8000be4 <__aeabi_dcmpge>
 802da7a:	9e03      	ldr	r6, [sp, #12]
 802da7c:	4637      	mov	r7, r6
 802da7e:	2800      	cmp	r0, #0
 802da80:	f040 8245 	bne.w	802df0e <_dtoa_r+0x93e>
 802da84:	9d01      	ldr	r5, [sp, #4]
 802da86:	2331      	movs	r3, #49	; 0x31
 802da88:	f805 3b01 	strb.w	r3, [r5], #1
 802da8c:	9b00      	ldr	r3, [sp, #0]
 802da8e:	3301      	adds	r3, #1
 802da90:	9300      	str	r3, [sp, #0]
 802da92:	e240      	b.n	802df16 <_dtoa_r+0x946>
 802da94:	07f2      	lsls	r2, r6, #31
 802da96:	d505      	bpl.n	802daa4 <_dtoa_r+0x4d4>
 802da98:	e9d7 2300 	ldrd	r2, r3, [r7]
 802da9c:	f7d2 fe1c 	bl	80006d8 <__aeabi_dmul>
 802daa0:	3501      	adds	r5, #1
 802daa2:	2301      	movs	r3, #1
 802daa4:	1076      	asrs	r6, r6, #1
 802daa6:	3708      	adds	r7, #8
 802daa8:	e777      	b.n	802d99a <_dtoa_r+0x3ca>
 802daaa:	2502      	movs	r5, #2
 802daac:	e779      	b.n	802d9a2 <_dtoa_r+0x3d2>
 802daae:	9f00      	ldr	r7, [sp, #0]
 802dab0:	9e03      	ldr	r6, [sp, #12]
 802dab2:	e794      	b.n	802d9de <_dtoa_r+0x40e>
 802dab4:	9901      	ldr	r1, [sp, #4]
 802dab6:	4b4c      	ldr	r3, [pc, #304]	; (802dbe8 <_dtoa_r+0x618>)
 802dab8:	4431      	add	r1, r6
 802daba:	910d      	str	r1, [sp, #52]	; 0x34
 802dabc:	9908      	ldr	r1, [sp, #32]
 802dabe:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 802dac2:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 802dac6:	2900      	cmp	r1, #0
 802dac8:	d043      	beq.n	802db52 <_dtoa_r+0x582>
 802daca:	494d      	ldr	r1, [pc, #308]	; (802dc00 <_dtoa_r+0x630>)
 802dacc:	2000      	movs	r0, #0
 802dace:	f7d2 ff2d 	bl	800092c <__aeabi_ddiv>
 802dad2:	4652      	mov	r2, sl
 802dad4:	465b      	mov	r3, fp
 802dad6:	f7d2 fc47 	bl	8000368 <__aeabi_dsub>
 802dada:	9d01      	ldr	r5, [sp, #4]
 802dadc:	4682      	mov	sl, r0
 802dade:	468b      	mov	fp, r1
 802dae0:	4649      	mov	r1, r9
 802dae2:	4640      	mov	r0, r8
 802dae4:	f7d3 f8a8 	bl	8000c38 <__aeabi_d2iz>
 802dae8:	4606      	mov	r6, r0
 802daea:	f7d2 fd8b 	bl	8000604 <__aeabi_i2d>
 802daee:	4602      	mov	r2, r0
 802daf0:	460b      	mov	r3, r1
 802daf2:	4640      	mov	r0, r8
 802daf4:	4649      	mov	r1, r9
 802daf6:	f7d2 fc37 	bl	8000368 <__aeabi_dsub>
 802dafa:	3630      	adds	r6, #48	; 0x30
 802dafc:	f805 6b01 	strb.w	r6, [r5], #1
 802db00:	4652      	mov	r2, sl
 802db02:	465b      	mov	r3, fp
 802db04:	4680      	mov	r8, r0
 802db06:	4689      	mov	r9, r1
 802db08:	f7d3 f858 	bl	8000bbc <__aeabi_dcmplt>
 802db0c:	2800      	cmp	r0, #0
 802db0e:	d163      	bne.n	802dbd8 <_dtoa_r+0x608>
 802db10:	4642      	mov	r2, r8
 802db12:	464b      	mov	r3, r9
 802db14:	4936      	ldr	r1, [pc, #216]	; (802dbf0 <_dtoa_r+0x620>)
 802db16:	2000      	movs	r0, #0
 802db18:	f7d2 fc26 	bl	8000368 <__aeabi_dsub>
 802db1c:	4652      	mov	r2, sl
 802db1e:	465b      	mov	r3, fp
 802db20:	f7d3 f84c 	bl	8000bbc <__aeabi_dcmplt>
 802db24:	2800      	cmp	r0, #0
 802db26:	f040 80b5 	bne.w	802dc94 <_dtoa_r+0x6c4>
 802db2a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802db2c:	429d      	cmp	r5, r3
 802db2e:	d081      	beq.n	802da34 <_dtoa_r+0x464>
 802db30:	4b30      	ldr	r3, [pc, #192]	; (802dbf4 <_dtoa_r+0x624>)
 802db32:	2200      	movs	r2, #0
 802db34:	4650      	mov	r0, sl
 802db36:	4659      	mov	r1, fp
 802db38:	f7d2 fdce 	bl	80006d8 <__aeabi_dmul>
 802db3c:	4b2d      	ldr	r3, [pc, #180]	; (802dbf4 <_dtoa_r+0x624>)
 802db3e:	4682      	mov	sl, r0
 802db40:	468b      	mov	fp, r1
 802db42:	4640      	mov	r0, r8
 802db44:	4649      	mov	r1, r9
 802db46:	2200      	movs	r2, #0
 802db48:	f7d2 fdc6 	bl	80006d8 <__aeabi_dmul>
 802db4c:	4680      	mov	r8, r0
 802db4e:	4689      	mov	r9, r1
 802db50:	e7c6      	b.n	802dae0 <_dtoa_r+0x510>
 802db52:	4650      	mov	r0, sl
 802db54:	4659      	mov	r1, fp
 802db56:	f7d2 fdbf 	bl	80006d8 <__aeabi_dmul>
 802db5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802db5c:	9d01      	ldr	r5, [sp, #4]
 802db5e:	930f      	str	r3, [sp, #60]	; 0x3c
 802db60:	4682      	mov	sl, r0
 802db62:	468b      	mov	fp, r1
 802db64:	4649      	mov	r1, r9
 802db66:	4640      	mov	r0, r8
 802db68:	f7d3 f866 	bl	8000c38 <__aeabi_d2iz>
 802db6c:	4606      	mov	r6, r0
 802db6e:	f7d2 fd49 	bl	8000604 <__aeabi_i2d>
 802db72:	3630      	adds	r6, #48	; 0x30
 802db74:	4602      	mov	r2, r0
 802db76:	460b      	mov	r3, r1
 802db78:	4640      	mov	r0, r8
 802db7a:	4649      	mov	r1, r9
 802db7c:	f7d2 fbf4 	bl	8000368 <__aeabi_dsub>
 802db80:	f805 6b01 	strb.w	r6, [r5], #1
 802db84:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802db86:	429d      	cmp	r5, r3
 802db88:	4680      	mov	r8, r0
 802db8a:	4689      	mov	r9, r1
 802db8c:	f04f 0200 	mov.w	r2, #0
 802db90:	d124      	bne.n	802dbdc <_dtoa_r+0x60c>
 802db92:	4b1b      	ldr	r3, [pc, #108]	; (802dc00 <_dtoa_r+0x630>)
 802db94:	4650      	mov	r0, sl
 802db96:	4659      	mov	r1, fp
 802db98:	f7d2 fbe8 	bl	800036c <__adddf3>
 802db9c:	4602      	mov	r2, r0
 802db9e:	460b      	mov	r3, r1
 802dba0:	4640      	mov	r0, r8
 802dba2:	4649      	mov	r1, r9
 802dba4:	f7d3 f828 	bl	8000bf8 <__aeabi_dcmpgt>
 802dba8:	2800      	cmp	r0, #0
 802dbaa:	d173      	bne.n	802dc94 <_dtoa_r+0x6c4>
 802dbac:	4652      	mov	r2, sl
 802dbae:	465b      	mov	r3, fp
 802dbb0:	4913      	ldr	r1, [pc, #76]	; (802dc00 <_dtoa_r+0x630>)
 802dbb2:	2000      	movs	r0, #0
 802dbb4:	f7d2 fbd8 	bl	8000368 <__aeabi_dsub>
 802dbb8:	4602      	mov	r2, r0
 802dbba:	460b      	mov	r3, r1
 802dbbc:	4640      	mov	r0, r8
 802dbbe:	4649      	mov	r1, r9
 802dbc0:	f7d2 fffc 	bl	8000bbc <__aeabi_dcmplt>
 802dbc4:	2800      	cmp	r0, #0
 802dbc6:	f43f af35 	beq.w	802da34 <_dtoa_r+0x464>
 802dbca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802dbcc:	1e6b      	subs	r3, r5, #1
 802dbce:	930f      	str	r3, [sp, #60]	; 0x3c
 802dbd0:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 802dbd4:	2b30      	cmp	r3, #48	; 0x30
 802dbd6:	d0f8      	beq.n	802dbca <_dtoa_r+0x5fa>
 802dbd8:	9700      	str	r7, [sp, #0]
 802dbda:	e049      	b.n	802dc70 <_dtoa_r+0x6a0>
 802dbdc:	4b05      	ldr	r3, [pc, #20]	; (802dbf4 <_dtoa_r+0x624>)
 802dbde:	f7d2 fd7b 	bl	80006d8 <__aeabi_dmul>
 802dbe2:	4680      	mov	r8, r0
 802dbe4:	4689      	mov	r9, r1
 802dbe6:	e7bd      	b.n	802db64 <_dtoa_r+0x594>
 802dbe8:	08049c60 	.word	0x08049c60
 802dbec:	08049c38 	.word	0x08049c38
 802dbf0:	3ff00000 	.word	0x3ff00000
 802dbf4:	40240000 	.word	0x40240000
 802dbf8:	401c0000 	.word	0x401c0000
 802dbfc:	40140000 	.word	0x40140000
 802dc00:	3fe00000 	.word	0x3fe00000
 802dc04:	9d01      	ldr	r5, [sp, #4]
 802dc06:	4656      	mov	r6, sl
 802dc08:	465f      	mov	r7, fp
 802dc0a:	4642      	mov	r2, r8
 802dc0c:	464b      	mov	r3, r9
 802dc0e:	4630      	mov	r0, r6
 802dc10:	4639      	mov	r1, r7
 802dc12:	f7d2 fe8b 	bl	800092c <__aeabi_ddiv>
 802dc16:	f7d3 f80f 	bl	8000c38 <__aeabi_d2iz>
 802dc1a:	4682      	mov	sl, r0
 802dc1c:	f7d2 fcf2 	bl	8000604 <__aeabi_i2d>
 802dc20:	4642      	mov	r2, r8
 802dc22:	464b      	mov	r3, r9
 802dc24:	f7d2 fd58 	bl	80006d8 <__aeabi_dmul>
 802dc28:	4602      	mov	r2, r0
 802dc2a:	460b      	mov	r3, r1
 802dc2c:	4630      	mov	r0, r6
 802dc2e:	4639      	mov	r1, r7
 802dc30:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 802dc34:	f7d2 fb98 	bl	8000368 <__aeabi_dsub>
 802dc38:	f805 6b01 	strb.w	r6, [r5], #1
 802dc3c:	9e01      	ldr	r6, [sp, #4]
 802dc3e:	9f03      	ldr	r7, [sp, #12]
 802dc40:	1bae      	subs	r6, r5, r6
 802dc42:	42b7      	cmp	r7, r6
 802dc44:	4602      	mov	r2, r0
 802dc46:	460b      	mov	r3, r1
 802dc48:	d135      	bne.n	802dcb6 <_dtoa_r+0x6e6>
 802dc4a:	f7d2 fb8f 	bl	800036c <__adddf3>
 802dc4e:	4642      	mov	r2, r8
 802dc50:	464b      	mov	r3, r9
 802dc52:	4606      	mov	r6, r0
 802dc54:	460f      	mov	r7, r1
 802dc56:	f7d2 ffcf 	bl	8000bf8 <__aeabi_dcmpgt>
 802dc5a:	b9d0      	cbnz	r0, 802dc92 <_dtoa_r+0x6c2>
 802dc5c:	4642      	mov	r2, r8
 802dc5e:	464b      	mov	r3, r9
 802dc60:	4630      	mov	r0, r6
 802dc62:	4639      	mov	r1, r7
 802dc64:	f7d2 ffa0 	bl	8000ba8 <__aeabi_dcmpeq>
 802dc68:	b110      	cbz	r0, 802dc70 <_dtoa_r+0x6a0>
 802dc6a:	f01a 0f01 	tst.w	sl, #1
 802dc6e:	d110      	bne.n	802dc92 <_dtoa_r+0x6c2>
 802dc70:	4620      	mov	r0, r4
 802dc72:	ee18 1a10 	vmov	r1, s16
 802dc76:	f000 fc23 	bl	802e4c0 <_Bfree>
 802dc7a:	2300      	movs	r3, #0
 802dc7c:	9800      	ldr	r0, [sp, #0]
 802dc7e:	702b      	strb	r3, [r5, #0]
 802dc80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802dc82:	3001      	adds	r0, #1
 802dc84:	6018      	str	r0, [r3, #0]
 802dc86:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802dc88:	2b00      	cmp	r3, #0
 802dc8a:	f43f acf1 	beq.w	802d670 <_dtoa_r+0xa0>
 802dc8e:	601d      	str	r5, [r3, #0]
 802dc90:	e4ee      	b.n	802d670 <_dtoa_r+0xa0>
 802dc92:	9f00      	ldr	r7, [sp, #0]
 802dc94:	462b      	mov	r3, r5
 802dc96:	461d      	mov	r5, r3
 802dc98:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802dc9c:	2a39      	cmp	r2, #57	; 0x39
 802dc9e:	d106      	bne.n	802dcae <_dtoa_r+0x6de>
 802dca0:	9a01      	ldr	r2, [sp, #4]
 802dca2:	429a      	cmp	r2, r3
 802dca4:	d1f7      	bne.n	802dc96 <_dtoa_r+0x6c6>
 802dca6:	9901      	ldr	r1, [sp, #4]
 802dca8:	2230      	movs	r2, #48	; 0x30
 802dcaa:	3701      	adds	r7, #1
 802dcac:	700a      	strb	r2, [r1, #0]
 802dcae:	781a      	ldrb	r2, [r3, #0]
 802dcb0:	3201      	adds	r2, #1
 802dcb2:	701a      	strb	r2, [r3, #0]
 802dcb4:	e790      	b.n	802dbd8 <_dtoa_r+0x608>
 802dcb6:	4ba6      	ldr	r3, [pc, #664]	; (802df50 <_dtoa_r+0x980>)
 802dcb8:	2200      	movs	r2, #0
 802dcba:	f7d2 fd0d 	bl	80006d8 <__aeabi_dmul>
 802dcbe:	2200      	movs	r2, #0
 802dcc0:	2300      	movs	r3, #0
 802dcc2:	4606      	mov	r6, r0
 802dcc4:	460f      	mov	r7, r1
 802dcc6:	f7d2 ff6f 	bl	8000ba8 <__aeabi_dcmpeq>
 802dcca:	2800      	cmp	r0, #0
 802dccc:	d09d      	beq.n	802dc0a <_dtoa_r+0x63a>
 802dcce:	e7cf      	b.n	802dc70 <_dtoa_r+0x6a0>
 802dcd0:	9a08      	ldr	r2, [sp, #32]
 802dcd2:	2a00      	cmp	r2, #0
 802dcd4:	f000 80d7 	beq.w	802de86 <_dtoa_r+0x8b6>
 802dcd8:	9a06      	ldr	r2, [sp, #24]
 802dcda:	2a01      	cmp	r2, #1
 802dcdc:	f300 80ba 	bgt.w	802de54 <_dtoa_r+0x884>
 802dce0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802dce2:	2a00      	cmp	r2, #0
 802dce4:	f000 80b2 	beq.w	802de4c <_dtoa_r+0x87c>
 802dce8:	f203 4333 	addw	r3, r3, #1075	; 0x433
 802dcec:	9e07      	ldr	r6, [sp, #28]
 802dcee:	9d04      	ldr	r5, [sp, #16]
 802dcf0:	9a04      	ldr	r2, [sp, #16]
 802dcf2:	441a      	add	r2, r3
 802dcf4:	9204      	str	r2, [sp, #16]
 802dcf6:	9a05      	ldr	r2, [sp, #20]
 802dcf8:	2101      	movs	r1, #1
 802dcfa:	441a      	add	r2, r3
 802dcfc:	4620      	mov	r0, r4
 802dcfe:	9205      	str	r2, [sp, #20]
 802dd00:	f000 fc96 	bl	802e630 <__i2b>
 802dd04:	4607      	mov	r7, r0
 802dd06:	2d00      	cmp	r5, #0
 802dd08:	dd0c      	ble.n	802dd24 <_dtoa_r+0x754>
 802dd0a:	9b05      	ldr	r3, [sp, #20]
 802dd0c:	2b00      	cmp	r3, #0
 802dd0e:	dd09      	ble.n	802dd24 <_dtoa_r+0x754>
 802dd10:	42ab      	cmp	r3, r5
 802dd12:	9a04      	ldr	r2, [sp, #16]
 802dd14:	bfa8      	it	ge
 802dd16:	462b      	movge	r3, r5
 802dd18:	1ad2      	subs	r2, r2, r3
 802dd1a:	9204      	str	r2, [sp, #16]
 802dd1c:	9a05      	ldr	r2, [sp, #20]
 802dd1e:	1aed      	subs	r5, r5, r3
 802dd20:	1ad3      	subs	r3, r2, r3
 802dd22:	9305      	str	r3, [sp, #20]
 802dd24:	9b07      	ldr	r3, [sp, #28]
 802dd26:	b31b      	cbz	r3, 802dd70 <_dtoa_r+0x7a0>
 802dd28:	9b08      	ldr	r3, [sp, #32]
 802dd2a:	2b00      	cmp	r3, #0
 802dd2c:	f000 80af 	beq.w	802de8e <_dtoa_r+0x8be>
 802dd30:	2e00      	cmp	r6, #0
 802dd32:	dd13      	ble.n	802dd5c <_dtoa_r+0x78c>
 802dd34:	4639      	mov	r1, r7
 802dd36:	4632      	mov	r2, r6
 802dd38:	4620      	mov	r0, r4
 802dd3a:	f000 fd39 	bl	802e7b0 <__pow5mult>
 802dd3e:	ee18 2a10 	vmov	r2, s16
 802dd42:	4601      	mov	r1, r0
 802dd44:	4607      	mov	r7, r0
 802dd46:	4620      	mov	r0, r4
 802dd48:	f000 fc88 	bl	802e65c <__multiply>
 802dd4c:	ee18 1a10 	vmov	r1, s16
 802dd50:	4680      	mov	r8, r0
 802dd52:	4620      	mov	r0, r4
 802dd54:	f000 fbb4 	bl	802e4c0 <_Bfree>
 802dd58:	ee08 8a10 	vmov	s16, r8
 802dd5c:	9b07      	ldr	r3, [sp, #28]
 802dd5e:	1b9a      	subs	r2, r3, r6
 802dd60:	d006      	beq.n	802dd70 <_dtoa_r+0x7a0>
 802dd62:	ee18 1a10 	vmov	r1, s16
 802dd66:	4620      	mov	r0, r4
 802dd68:	f000 fd22 	bl	802e7b0 <__pow5mult>
 802dd6c:	ee08 0a10 	vmov	s16, r0
 802dd70:	2101      	movs	r1, #1
 802dd72:	4620      	mov	r0, r4
 802dd74:	f000 fc5c 	bl	802e630 <__i2b>
 802dd78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802dd7a:	2b00      	cmp	r3, #0
 802dd7c:	4606      	mov	r6, r0
 802dd7e:	f340 8088 	ble.w	802de92 <_dtoa_r+0x8c2>
 802dd82:	461a      	mov	r2, r3
 802dd84:	4601      	mov	r1, r0
 802dd86:	4620      	mov	r0, r4
 802dd88:	f000 fd12 	bl	802e7b0 <__pow5mult>
 802dd8c:	9b06      	ldr	r3, [sp, #24]
 802dd8e:	2b01      	cmp	r3, #1
 802dd90:	4606      	mov	r6, r0
 802dd92:	f340 8081 	ble.w	802de98 <_dtoa_r+0x8c8>
 802dd96:	f04f 0800 	mov.w	r8, #0
 802dd9a:	6933      	ldr	r3, [r6, #16]
 802dd9c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 802dda0:	6918      	ldr	r0, [r3, #16]
 802dda2:	f000 fbf5 	bl	802e590 <__hi0bits>
 802dda6:	f1c0 0020 	rsb	r0, r0, #32
 802ddaa:	9b05      	ldr	r3, [sp, #20]
 802ddac:	4418      	add	r0, r3
 802ddae:	f010 001f 	ands.w	r0, r0, #31
 802ddb2:	f000 8092 	beq.w	802deda <_dtoa_r+0x90a>
 802ddb6:	f1c0 0320 	rsb	r3, r0, #32
 802ddba:	2b04      	cmp	r3, #4
 802ddbc:	f340 808a 	ble.w	802ded4 <_dtoa_r+0x904>
 802ddc0:	f1c0 001c 	rsb	r0, r0, #28
 802ddc4:	9b04      	ldr	r3, [sp, #16]
 802ddc6:	4403      	add	r3, r0
 802ddc8:	9304      	str	r3, [sp, #16]
 802ddca:	9b05      	ldr	r3, [sp, #20]
 802ddcc:	4403      	add	r3, r0
 802ddce:	4405      	add	r5, r0
 802ddd0:	9305      	str	r3, [sp, #20]
 802ddd2:	9b04      	ldr	r3, [sp, #16]
 802ddd4:	2b00      	cmp	r3, #0
 802ddd6:	dd07      	ble.n	802dde8 <_dtoa_r+0x818>
 802ddd8:	ee18 1a10 	vmov	r1, s16
 802dddc:	461a      	mov	r2, r3
 802ddde:	4620      	mov	r0, r4
 802dde0:	f000 fd40 	bl	802e864 <__lshift>
 802dde4:	ee08 0a10 	vmov	s16, r0
 802dde8:	9b05      	ldr	r3, [sp, #20]
 802ddea:	2b00      	cmp	r3, #0
 802ddec:	dd05      	ble.n	802ddfa <_dtoa_r+0x82a>
 802ddee:	4631      	mov	r1, r6
 802ddf0:	461a      	mov	r2, r3
 802ddf2:	4620      	mov	r0, r4
 802ddf4:	f000 fd36 	bl	802e864 <__lshift>
 802ddf8:	4606      	mov	r6, r0
 802ddfa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802ddfc:	2b00      	cmp	r3, #0
 802ddfe:	d06e      	beq.n	802dede <_dtoa_r+0x90e>
 802de00:	ee18 0a10 	vmov	r0, s16
 802de04:	4631      	mov	r1, r6
 802de06:	f000 fd9d 	bl	802e944 <__mcmp>
 802de0a:	2800      	cmp	r0, #0
 802de0c:	da67      	bge.n	802dede <_dtoa_r+0x90e>
 802de0e:	9b00      	ldr	r3, [sp, #0]
 802de10:	3b01      	subs	r3, #1
 802de12:	ee18 1a10 	vmov	r1, s16
 802de16:	9300      	str	r3, [sp, #0]
 802de18:	220a      	movs	r2, #10
 802de1a:	2300      	movs	r3, #0
 802de1c:	4620      	mov	r0, r4
 802de1e:	f000 fb71 	bl	802e504 <__multadd>
 802de22:	9b08      	ldr	r3, [sp, #32]
 802de24:	ee08 0a10 	vmov	s16, r0
 802de28:	2b00      	cmp	r3, #0
 802de2a:	f000 81b1 	beq.w	802e190 <_dtoa_r+0xbc0>
 802de2e:	2300      	movs	r3, #0
 802de30:	4639      	mov	r1, r7
 802de32:	220a      	movs	r2, #10
 802de34:	4620      	mov	r0, r4
 802de36:	f000 fb65 	bl	802e504 <__multadd>
 802de3a:	9b02      	ldr	r3, [sp, #8]
 802de3c:	2b00      	cmp	r3, #0
 802de3e:	4607      	mov	r7, r0
 802de40:	f300 808e 	bgt.w	802df60 <_dtoa_r+0x990>
 802de44:	9b06      	ldr	r3, [sp, #24]
 802de46:	2b02      	cmp	r3, #2
 802de48:	dc51      	bgt.n	802deee <_dtoa_r+0x91e>
 802de4a:	e089      	b.n	802df60 <_dtoa_r+0x990>
 802de4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802de4e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 802de52:	e74b      	b.n	802dcec <_dtoa_r+0x71c>
 802de54:	9b03      	ldr	r3, [sp, #12]
 802de56:	1e5e      	subs	r6, r3, #1
 802de58:	9b07      	ldr	r3, [sp, #28]
 802de5a:	42b3      	cmp	r3, r6
 802de5c:	bfbf      	itttt	lt
 802de5e:	9b07      	ldrlt	r3, [sp, #28]
 802de60:	9607      	strlt	r6, [sp, #28]
 802de62:	1af2      	sublt	r2, r6, r3
 802de64:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 802de66:	bfb6      	itet	lt
 802de68:	189b      	addlt	r3, r3, r2
 802de6a:	1b9e      	subge	r6, r3, r6
 802de6c:	930a      	strlt	r3, [sp, #40]	; 0x28
 802de6e:	9b03      	ldr	r3, [sp, #12]
 802de70:	bfb8      	it	lt
 802de72:	2600      	movlt	r6, #0
 802de74:	2b00      	cmp	r3, #0
 802de76:	bfb7      	itett	lt
 802de78:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 802de7c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 802de80:	1a9d      	sublt	r5, r3, r2
 802de82:	2300      	movlt	r3, #0
 802de84:	e734      	b.n	802dcf0 <_dtoa_r+0x720>
 802de86:	9e07      	ldr	r6, [sp, #28]
 802de88:	9d04      	ldr	r5, [sp, #16]
 802de8a:	9f08      	ldr	r7, [sp, #32]
 802de8c:	e73b      	b.n	802dd06 <_dtoa_r+0x736>
 802de8e:	9a07      	ldr	r2, [sp, #28]
 802de90:	e767      	b.n	802dd62 <_dtoa_r+0x792>
 802de92:	9b06      	ldr	r3, [sp, #24]
 802de94:	2b01      	cmp	r3, #1
 802de96:	dc18      	bgt.n	802deca <_dtoa_r+0x8fa>
 802de98:	f1ba 0f00 	cmp.w	sl, #0
 802de9c:	d115      	bne.n	802deca <_dtoa_r+0x8fa>
 802de9e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 802dea2:	b993      	cbnz	r3, 802deca <_dtoa_r+0x8fa>
 802dea4:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 802dea8:	0d1b      	lsrs	r3, r3, #20
 802deaa:	051b      	lsls	r3, r3, #20
 802deac:	b183      	cbz	r3, 802ded0 <_dtoa_r+0x900>
 802deae:	9b04      	ldr	r3, [sp, #16]
 802deb0:	3301      	adds	r3, #1
 802deb2:	9304      	str	r3, [sp, #16]
 802deb4:	9b05      	ldr	r3, [sp, #20]
 802deb6:	3301      	adds	r3, #1
 802deb8:	9305      	str	r3, [sp, #20]
 802deba:	f04f 0801 	mov.w	r8, #1
 802debe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802dec0:	2b00      	cmp	r3, #0
 802dec2:	f47f af6a 	bne.w	802dd9a <_dtoa_r+0x7ca>
 802dec6:	2001      	movs	r0, #1
 802dec8:	e76f      	b.n	802ddaa <_dtoa_r+0x7da>
 802deca:	f04f 0800 	mov.w	r8, #0
 802dece:	e7f6      	b.n	802debe <_dtoa_r+0x8ee>
 802ded0:	4698      	mov	r8, r3
 802ded2:	e7f4      	b.n	802debe <_dtoa_r+0x8ee>
 802ded4:	f43f af7d 	beq.w	802ddd2 <_dtoa_r+0x802>
 802ded8:	4618      	mov	r0, r3
 802deda:	301c      	adds	r0, #28
 802dedc:	e772      	b.n	802ddc4 <_dtoa_r+0x7f4>
 802dede:	9b03      	ldr	r3, [sp, #12]
 802dee0:	2b00      	cmp	r3, #0
 802dee2:	dc37      	bgt.n	802df54 <_dtoa_r+0x984>
 802dee4:	9b06      	ldr	r3, [sp, #24]
 802dee6:	2b02      	cmp	r3, #2
 802dee8:	dd34      	ble.n	802df54 <_dtoa_r+0x984>
 802deea:	9b03      	ldr	r3, [sp, #12]
 802deec:	9302      	str	r3, [sp, #8]
 802deee:	9b02      	ldr	r3, [sp, #8]
 802def0:	b96b      	cbnz	r3, 802df0e <_dtoa_r+0x93e>
 802def2:	4631      	mov	r1, r6
 802def4:	2205      	movs	r2, #5
 802def6:	4620      	mov	r0, r4
 802def8:	f000 fb04 	bl	802e504 <__multadd>
 802defc:	4601      	mov	r1, r0
 802defe:	4606      	mov	r6, r0
 802df00:	ee18 0a10 	vmov	r0, s16
 802df04:	f000 fd1e 	bl	802e944 <__mcmp>
 802df08:	2800      	cmp	r0, #0
 802df0a:	f73f adbb 	bgt.w	802da84 <_dtoa_r+0x4b4>
 802df0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802df10:	9d01      	ldr	r5, [sp, #4]
 802df12:	43db      	mvns	r3, r3
 802df14:	9300      	str	r3, [sp, #0]
 802df16:	f04f 0800 	mov.w	r8, #0
 802df1a:	4631      	mov	r1, r6
 802df1c:	4620      	mov	r0, r4
 802df1e:	f000 facf 	bl	802e4c0 <_Bfree>
 802df22:	2f00      	cmp	r7, #0
 802df24:	f43f aea4 	beq.w	802dc70 <_dtoa_r+0x6a0>
 802df28:	f1b8 0f00 	cmp.w	r8, #0
 802df2c:	d005      	beq.n	802df3a <_dtoa_r+0x96a>
 802df2e:	45b8      	cmp	r8, r7
 802df30:	d003      	beq.n	802df3a <_dtoa_r+0x96a>
 802df32:	4641      	mov	r1, r8
 802df34:	4620      	mov	r0, r4
 802df36:	f000 fac3 	bl	802e4c0 <_Bfree>
 802df3a:	4639      	mov	r1, r7
 802df3c:	4620      	mov	r0, r4
 802df3e:	f000 fabf 	bl	802e4c0 <_Bfree>
 802df42:	e695      	b.n	802dc70 <_dtoa_r+0x6a0>
 802df44:	2600      	movs	r6, #0
 802df46:	4637      	mov	r7, r6
 802df48:	e7e1      	b.n	802df0e <_dtoa_r+0x93e>
 802df4a:	9700      	str	r7, [sp, #0]
 802df4c:	4637      	mov	r7, r6
 802df4e:	e599      	b.n	802da84 <_dtoa_r+0x4b4>
 802df50:	40240000 	.word	0x40240000
 802df54:	9b08      	ldr	r3, [sp, #32]
 802df56:	2b00      	cmp	r3, #0
 802df58:	f000 80ca 	beq.w	802e0f0 <_dtoa_r+0xb20>
 802df5c:	9b03      	ldr	r3, [sp, #12]
 802df5e:	9302      	str	r3, [sp, #8]
 802df60:	2d00      	cmp	r5, #0
 802df62:	dd05      	ble.n	802df70 <_dtoa_r+0x9a0>
 802df64:	4639      	mov	r1, r7
 802df66:	462a      	mov	r2, r5
 802df68:	4620      	mov	r0, r4
 802df6a:	f000 fc7b 	bl	802e864 <__lshift>
 802df6e:	4607      	mov	r7, r0
 802df70:	f1b8 0f00 	cmp.w	r8, #0
 802df74:	d05b      	beq.n	802e02e <_dtoa_r+0xa5e>
 802df76:	6879      	ldr	r1, [r7, #4]
 802df78:	4620      	mov	r0, r4
 802df7a:	f000 fa61 	bl	802e440 <_Balloc>
 802df7e:	4605      	mov	r5, r0
 802df80:	b928      	cbnz	r0, 802df8e <_dtoa_r+0x9be>
 802df82:	4b87      	ldr	r3, [pc, #540]	; (802e1a0 <_dtoa_r+0xbd0>)
 802df84:	4602      	mov	r2, r0
 802df86:	f240 21ea 	movw	r1, #746	; 0x2ea
 802df8a:	f7ff bb3b 	b.w	802d604 <_dtoa_r+0x34>
 802df8e:	693a      	ldr	r2, [r7, #16]
 802df90:	3202      	adds	r2, #2
 802df92:	0092      	lsls	r2, r2, #2
 802df94:	f107 010c 	add.w	r1, r7, #12
 802df98:	300c      	adds	r0, #12
 802df9a:	f7fe f98b 	bl	802c2b4 <memcpy>
 802df9e:	2201      	movs	r2, #1
 802dfa0:	4629      	mov	r1, r5
 802dfa2:	4620      	mov	r0, r4
 802dfa4:	f000 fc5e 	bl	802e864 <__lshift>
 802dfa8:	9b01      	ldr	r3, [sp, #4]
 802dfaa:	f103 0901 	add.w	r9, r3, #1
 802dfae:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 802dfb2:	4413      	add	r3, r2
 802dfb4:	9305      	str	r3, [sp, #20]
 802dfb6:	f00a 0301 	and.w	r3, sl, #1
 802dfba:	46b8      	mov	r8, r7
 802dfbc:	9304      	str	r3, [sp, #16]
 802dfbe:	4607      	mov	r7, r0
 802dfc0:	4631      	mov	r1, r6
 802dfc2:	ee18 0a10 	vmov	r0, s16
 802dfc6:	f7ff fa75 	bl	802d4b4 <quorem>
 802dfca:	4641      	mov	r1, r8
 802dfcc:	9002      	str	r0, [sp, #8]
 802dfce:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 802dfd2:	ee18 0a10 	vmov	r0, s16
 802dfd6:	f000 fcb5 	bl	802e944 <__mcmp>
 802dfda:	463a      	mov	r2, r7
 802dfdc:	9003      	str	r0, [sp, #12]
 802dfde:	4631      	mov	r1, r6
 802dfe0:	4620      	mov	r0, r4
 802dfe2:	f000 fccb 	bl	802e97c <__mdiff>
 802dfe6:	68c2      	ldr	r2, [r0, #12]
 802dfe8:	f109 3bff 	add.w	fp, r9, #4294967295
 802dfec:	4605      	mov	r5, r0
 802dfee:	bb02      	cbnz	r2, 802e032 <_dtoa_r+0xa62>
 802dff0:	4601      	mov	r1, r0
 802dff2:	ee18 0a10 	vmov	r0, s16
 802dff6:	f000 fca5 	bl	802e944 <__mcmp>
 802dffa:	4602      	mov	r2, r0
 802dffc:	4629      	mov	r1, r5
 802dffe:	4620      	mov	r0, r4
 802e000:	9207      	str	r2, [sp, #28]
 802e002:	f000 fa5d 	bl	802e4c0 <_Bfree>
 802e006:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 802e00a:	ea43 0102 	orr.w	r1, r3, r2
 802e00e:	9b04      	ldr	r3, [sp, #16]
 802e010:	430b      	orrs	r3, r1
 802e012:	464d      	mov	r5, r9
 802e014:	d10f      	bne.n	802e036 <_dtoa_r+0xa66>
 802e016:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 802e01a:	d02a      	beq.n	802e072 <_dtoa_r+0xaa2>
 802e01c:	9b03      	ldr	r3, [sp, #12]
 802e01e:	2b00      	cmp	r3, #0
 802e020:	dd02      	ble.n	802e028 <_dtoa_r+0xa58>
 802e022:	9b02      	ldr	r3, [sp, #8]
 802e024:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 802e028:	f88b a000 	strb.w	sl, [fp]
 802e02c:	e775      	b.n	802df1a <_dtoa_r+0x94a>
 802e02e:	4638      	mov	r0, r7
 802e030:	e7ba      	b.n	802dfa8 <_dtoa_r+0x9d8>
 802e032:	2201      	movs	r2, #1
 802e034:	e7e2      	b.n	802dffc <_dtoa_r+0xa2c>
 802e036:	9b03      	ldr	r3, [sp, #12]
 802e038:	2b00      	cmp	r3, #0
 802e03a:	db04      	blt.n	802e046 <_dtoa_r+0xa76>
 802e03c:	9906      	ldr	r1, [sp, #24]
 802e03e:	430b      	orrs	r3, r1
 802e040:	9904      	ldr	r1, [sp, #16]
 802e042:	430b      	orrs	r3, r1
 802e044:	d122      	bne.n	802e08c <_dtoa_r+0xabc>
 802e046:	2a00      	cmp	r2, #0
 802e048:	ddee      	ble.n	802e028 <_dtoa_r+0xa58>
 802e04a:	ee18 1a10 	vmov	r1, s16
 802e04e:	2201      	movs	r2, #1
 802e050:	4620      	mov	r0, r4
 802e052:	f000 fc07 	bl	802e864 <__lshift>
 802e056:	4631      	mov	r1, r6
 802e058:	ee08 0a10 	vmov	s16, r0
 802e05c:	f000 fc72 	bl	802e944 <__mcmp>
 802e060:	2800      	cmp	r0, #0
 802e062:	dc03      	bgt.n	802e06c <_dtoa_r+0xa9c>
 802e064:	d1e0      	bne.n	802e028 <_dtoa_r+0xa58>
 802e066:	f01a 0f01 	tst.w	sl, #1
 802e06a:	d0dd      	beq.n	802e028 <_dtoa_r+0xa58>
 802e06c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 802e070:	d1d7      	bne.n	802e022 <_dtoa_r+0xa52>
 802e072:	2339      	movs	r3, #57	; 0x39
 802e074:	f88b 3000 	strb.w	r3, [fp]
 802e078:	462b      	mov	r3, r5
 802e07a:	461d      	mov	r5, r3
 802e07c:	3b01      	subs	r3, #1
 802e07e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 802e082:	2a39      	cmp	r2, #57	; 0x39
 802e084:	d071      	beq.n	802e16a <_dtoa_r+0xb9a>
 802e086:	3201      	adds	r2, #1
 802e088:	701a      	strb	r2, [r3, #0]
 802e08a:	e746      	b.n	802df1a <_dtoa_r+0x94a>
 802e08c:	2a00      	cmp	r2, #0
 802e08e:	dd07      	ble.n	802e0a0 <_dtoa_r+0xad0>
 802e090:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 802e094:	d0ed      	beq.n	802e072 <_dtoa_r+0xaa2>
 802e096:	f10a 0301 	add.w	r3, sl, #1
 802e09a:	f88b 3000 	strb.w	r3, [fp]
 802e09e:	e73c      	b.n	802df1a <_dtoa_r+0x94a>
 802e0a0:	9b05      	ldr	r3, [sp, #20]
 802e0a2:	f809 ac01 	strb.w	sl, [r9, #-1]
 802e0a6:	4599      	cmp	r9, r3
 802e0a8:	d047      	beq.n	802e13a <_dtoa_r+0xb6a>
 802e0aa:	ee18 1a10 	vmov	r1, s16
 802e0ae:	2300      	movs	r3, #0
 802e0b0:	220a      	movs	r2, #10
 802e0b2:	4620      	mov	r0, r4
 802e0b4:	f000 fa26 	bl	802e504 <__multadd>
 802e0b8:	45b8      	cmp	r8, r7
 802e0ba:	ee08 0a10 	vmov	s16, r0
 802e0be:	f04f 0300 	mov.w	r3, #0
 802e0c2:	f04f 020a 	mov.w	r2, #10
 802e0c6:	4641      	mov	r1, r8
 802e0c8:	4620      	mov	r0, r4
 802e0ca:	d106      	bne.n	802e0da <_dtoa_r+0xb0a>
 802e0cc:	f000 fa1a 	bl	802e504 <__multadd>
 802e0d0:	4680      	mov	r8, r0
 802e0d2:	4607      	mov	r7, r0
 802e0d4:	f109 0901 	add.w	r9, r9, #1
 802e0d8:	e772      	b.n	802dfc0 <_dtoa_r+0x9f0>
 802e0da:	f000 fa13 	bl	802e504 <__multadd>
 802e0de:	4639      	mov	r1, r7
 802e0e0:	4680      	mov	r8, r0
 802e0e2:	2300      	movs	r3, #0
 802e0e4:	220a      	movs	r2, #10
 802e0e6:	4620      	mov	r0, r4
 802e0e8:	f000 fa0c 	bl	802e504 <__multadd>
 802e0ec:	4607      	mov	r7, r0
 802e0ee:	e7f1      	b.n	802e0d4 <_dtoa_r+0xb04>
 802e0f0:	9b03      	ldr	r3, [sp, #12]
 802e0f2:	9302      	str	r3, [sp, #8]
 802e0f4:	9d01      	ldr	r5, [sp, #4]
 802e0f6:	ee18 0a10 	vmov	r0, s16
 802e0fa:	4631      	mov	r1, r6
 802e0fc:	f7ff f9da 	bl	802d4b4 <quorem>
 802e100:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 802e104:	9b01      	ldr	r3, [sp, #4]
 802e106:	f805 ab01 	strb.w	sl, [r5], #1
 802e10a:	1aea      	subs	r2, r5, r3
 802e10c:	9b02      	ldr	r3, [sp, #8]
 802e10e:	4293      	cmp	r3, r2
 802e110:	dd09      	ble.n	802e126 <_dtoa_r+0xb56>
 802e112:	ee18 1a10 	vmov	r1, s16
 802e116:	2300      	movs	r3, #0
 802e118:	220a      	movs	r2, #10
 802e11a:	4620      	mov	r0, r4
 802e11c:	f000 f9f2 	bl	802e504 <__multadd>
 802e120:	ee08 0a10 	vmov	s16, r0
 802e124:	e7e7      	b.n	802e0f6 <_dtoa_r+0xb26>
 802e126:	9b02      	ldr	r3, [sp, #8]
 802e128:	2b00      	cmp	r3, #0
 802e12a:	bfc8      	it	gt
 802e12c:	461d      	movgt	r5, r3
 802e12e:	9b01      	ldr	r3, [sp, #4]
 802e130:	bfd8      	it	le
 802e132:	2501      	movle	r5, #1
 802e134:	441d      	add	r5, r3
 802e136:	f04f 0800 	mov.w	r8, #0
 802e13a:	ee18 1a10 	vmov	r1, s16
 802e13e:	2201      	movs	r2, #1
 802e140:	4620      	mov	r0, r4
 802e142:	f000 fb8f 	bl	802e864 <__lshift>
 802e146:	4631      	mov	r1, r6
 802e148:	ee08 0a10 	vmov	s16, r0
 802e14c:	f000 fbfa 	bl	802e944 <__mcmp>
 802e150:	2800      	cmp	r0, #0
 802e152:	dc91      	bgt.n	802e078 <_dtoa_r+0xaa8>
 802e154:	d102      	bne.n	802e15c <_dtoa_r+0xb8c>
 802e156:	f01a 0f01 	tst.w	sl, #1
 802e15a:	d18d      	bne.n	802e078 <_dtoa_r+0xaa8>
 802e15c:	462b      	mov	r3, r5
 802e15e:	461d      	mov	r5, r3
 802e160:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802e164:	2a30      	cmp	r2, #48	; 0x30
 802e166:	d0fa      	beq.n	802e15e <_dtoa_r+0xb8e>
 802e168:	e6d7      	b.n	802df1a <_dtoa_r+0x94a>
 802e16a:	9a01      	ldr	r2, [sp, #4]
 802e16c:	429a      	cmp	r2, r3
 802e16e:	d184      	bne.n	802e07a <_dtoa_r+0xaaa>
 802e170:	9b00      	ldr	r3, [sp, #0]
 802e172:	3301      	adds	r3, #1
 802e174:	9300      	str	r3, [sp, #0]
 802e176:	2331      	movs	r3, #49	; 0x31
 802e178:	7013      	strb	r3, [r2, #0]
 802e17a:	e6ce      	b.n	802df1a <_dtoa_r+0x94a>
 802e17c:	4b09      	ldr	r3, [pc, #36]	; (802e1a4 <_dtoa_r+0xbd4>)
 802e17e:	f7ff ba95 	b.w	802d6ac <_dtoa_r+0xdc>
 802e182:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802e184:	2b00      	cmp	r3, #0
 802e186:	f47f aa6e 	bne.w	802d666 <_dtoa_r+0x96>
 802e18a:	4b07      	ldr	r3, [pc, #28]	; (802e1a8 <_dtoa_r+0xbd8>)
 802e18c:	f7ff ba8e 	b.w	802d6ac <_dtoa_r+0xdc>
 802e190:	9b02      	ldr	r3, [sp, #8]
 802e192:	2b00      	cmp	r3, #0
 802e194:	dcae      	bgt.n	802e0f4 <_dtoa_r+0xb24>
 802e196:	9b06      	ldr	r3, [sp, #24]
 802e198:	2b02      	cmp	r3, #2
 802e19a:	f73f aea8 	bgt.w	802deee <_dtoa_r+0x91e>
 802e19e:	e7a9      	b.n	802e0f4 <_dtoa_r+0xb24>
 802e1a0:	08049bc7 	.word	0x08049bc7
 802e1a4:	08033fd8 	.word	0x08033fd8
 802e1a8:	08049b48 	.word	0x08049b48

0802e1ac <__sflush_r>:
 802e1ac:	898a      	ldrh	r2, [r1, #12]
 802e1ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e1b2:	4605      	mov	r5, r0
 802e1b4:	0710      	lsls	r0, r2, #28
 802e1b6:	460c      	mov	r4, r1
 802e1b8:	d458      	bmi.n	802e26c <__sflush_r+0xc0>
 802e1ba:	684b      	ldr	r3, [r1, #4]
 802e1bc:	2b00      	cmp	r3, #0
 802e1be:	dc05      	bgt.n	802e1cc <__sflush_r+0x20>
 802e1c0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802e1c2:	2b00      	cmp	r3, #0
 802e1c4:	dc02      	bgt.n	802e1cc <__sflush_r+0x20>
 802e1c6:	2000      	movs	r0, #0
 802e1c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e1cc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e1ce:	2e00      	cmp	r6, #0
 802e1d0:	d0f9      	beq.n	802e1c6 <__sflush_r+0x1a>
 802e1d2:	2300      	movs	r3, #0
 802e1d4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802e1d8:	682f      	ldr	r7, [r5, #0]
 802e1da:	602b      	str	r3, [r5, #0]
 802e1dc:	d032      	beq.n	802e244 <__sflush_r+0x98>
 802e1de:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802e1e0:	89a3      	ldrh	r3, [r4, #12]
 802e1e2:	075a      	lsls	r2, r3, #29
 802e1e4:	d505      	bpl.n	802e1f2 <__sflush_r+0x46>
 802e1e6:	6863      	ldr	r3, [r4, #4]
 802e1e8:	1ac0      	subs	r0, r0, r3
 802e1ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802e1ec:	b10b      	cbz	r3, 802e1f2 <__sflush_r+0x46>
 802e1ee:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802e1f0:	1ac0      	subs	r0, r0, r3
 802e1f2:	2300      	movs	r3, #0
 802e1f4:	4602      	mov	r2, r0
 802e1f6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e1f8:	6a21      	ldr	r1, [r4, #32]
 802e1fa:	4628      	mov	r0, r5
 802e1fc:	47b0      	blx	r6
 802e1fe:	1c43      	adds	r3, r0, #1
 802e200:	89a3      	ldrh	r3, [r4, #12]
 802e202:	d106      	bne.n	802e212 <__sflush_r+0x66>
 802e204:	6829      	ldr	r1, [r5, #0]
 802e206:	291d      	cmp	r1, #29
 802e208:	d82c      	bhi.n	802e264 <__sflush_r+0xb8>
 802e20a:	4a2a      	ldr	r2, [pc, #168]	; (802e2b4 <__sflush_r+0x108>)
 802e20c:	40ca      	lsrs	r2, r1
 802e20e:	07d6      	lsls	r6, r2, #31
 802e210:	d528      	bpl.n	802e264 <__sflush_r+0xb8>
 802e212:	2200      	movs	r2, #0
 802e214:	6062      	str	r2, [r4, #4]
 802e216:	04d9      	lsls	r1, r3, #19
 802e218:	6922      	ldr	r2, [r4, #16]
 802e21a:	6022      	str	r2, [r4, #0]
 802e21c:	d504      	bpl.n	802e228 <__sflush_r+0x7c>
 802e21e:	1c42      	adds	r2, r0, #1
 802e220:	d101      	bne.n	802e226 <__sflush_r+0x7a>
 802e222:	682b      	ldr	r3, [r5, #0]
 802e224:	b903      	cbnz	r3, 802e228 <__sflush_r+0x7c>
 802e226:	6560      	str	r0, [r4, #84]	; 0x54
 802e228:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e22a:	602f      	str	r7, [r5, #0]
 802e22c:	2900      	cmp	r1, #0
 802e22e:	d0ca      	beq.n	802e1c6 <__sflush_r+0x1a>
 802e230:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e234:	4299      	cmp	r1, r3
 802e236:	d002      	beq.n	802e23e <__sflush_r+0x92>
 802e238:	4628      	mov	r0, r5
 802e23a:	f7fe f851 	bl	802c2e0 <_free_r>
 802e23e:	2000      	movs	r0, #0
 802e240:	6360      	str	r0, [r4, #52]	; 0x34
 802e242:	e7c1      	b.n	802e1c8 <__sflush_r+0x1c>
 802e244:	6a21      	ldr	r1, [r4, #32]
 802e246:	2301      	movs	r3, #1
 802e248:	4628      	mov	r0, r5
 802e24a:	47b0      	blx	r6
 802e24c:	1c41      	adds	r1, r0, #1
 802e24e:	d1c7      	bne.n	802e1e0 <__sflush_r+0x34>
 802e250:	682b      	ldr	r3, [r5, #0]
 802e252:	2b00      	cmp	r3, #0
 802e254:	d0c4      	beq.n	802e1e0 <__sflush_r+0x34>
 802e256:	2b1d      	cmp	r3, #29
 802e258:	d001      	beq.n	802e25e <__sflush_r+0xb2>
 802e25a:	2b16      	cmp	r3, #22
 802e25c:	d101      	bne.n	802e262 <__sflush_r+0xb6>
 802e25e:	602f      	str	r7, [r5, #0]
 802e260:	e7b1      	b.n	802e1c6 <__sflush_r+0x1a>
 802e262:	89a3      	ldrh	r3, [r4, #12]
 802e264:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e268:	81a3      	strh	r3, [r4, #12]
 802e26a:	e7ad      	b.n	802e1c8 <__sflush_r+0x1c>
 802e26c:	690f      	ldr	r7, [r1, #16]
 802e26e:	2f00      	cmp	r7, #0
 802e270:	d0a9      	beq.n	802e1c6 <__sflush_r+0x1a>
 802e272:	0793      	lsls	r3, r2, #30
 802e274:	680e      	ldr	r6, [r1, #0]
 802e276:	bf08      	it	eq
 802e278:	694b      	ldreq	r3, [r1, #20]
 802e27a:	600f      	str	r7, [r1, #0]
 802e27c:	bf18      	it	ne
 802e27e:	2300      	movne	r3, #0
 802e280:	eba6 0807 	sub.w	r8, r6, r7
 802e284:	608b      	str	r3, [r1, #8]
 802e286:	f1b8 0f00 	cmp.w	r8, #0
 802e28a:	dd9c      	ble.n	802e1c6 <__sflush_r+0x1a>
 802e28c:	6a21      	ldr	r1, [r4, #32]
 802e28e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802e290:	4643      	mov	r3, r8
 802e292:	463a      	mov	r2, r7
 802e294:	4628      	mov	r0, r5
 802e296:	47b0      	blx	r6
 802e298:	2800      	cmp	r0, #0
 802e29a:	dc06      	bgt.n	802e2aa <__sflush_r+0xfe>
 802e29c:	89a3      	ldrh	r3, [r4, #12]
 802e29e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e2a2:	81a3      	strh	r3, [r4, #12]
 802e2a4:	f04f 30ff 	mov.w	r0, #4294967295
 802e2a8:	e78e      	b.n	802e1c8 <__sflush_r+0x1c>
 802e2aa:	4407      	add	r7, r0
 802e2ac:	eba8 0800 	sub.w	r8, r8, r0
 802e2b0:	e7e9      	b.n	802e286 <__sflush_r+0xda>
 802e2b2:	bf00      	nop
 802e2b4:	20400001 	.word	0x20400001

0802e2b8 <_fflush_r>:
 802e2b8:	b538      	push	{r3, r4, r5, lr}
 802e2ba:	690b      	ldr	r3, [r1, #16]
 802e2bc:	4605      	mov	r5, r0
 802e2be:	460c      	mov	r4, r1
 802e2c0:	b913      	cbnz	r3, 802e2c8 <_fflush_r+0x10>
 802e2c2:	2500      	movs	r5, #0
 802e2c4:	4628      	mov	r0, r5
 802e2c6:	bd38      	pop	{r3, r4, r5, pc}
 802e2c8:	b118      	cbz	r0, 802e2d2 <_fflush_r+0x1a>
 802e2ca:	6983      	ldr	r3, [r0, #24]
 802e2cc:	b90b      	cbnz	r3, 802e2d2 <_fflush_r+0x1a>
 802e2ce:	f7fd ff09 	bl	802c0e4 <__sinit>
 802e2d2:	4b14      	ldr	r3, [pc, #80]	; (802e324 <_fflush_r+0x6c>)
 802e2d4:	429c      	cmp	r4, r3
 802e2d6:	d11b      	bne.n	802e310 <_fflush_r+0x58>
 802e2d8:	686c      	ldr	r4, [r5, #4]
 802e2da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e2de:	2b00      	cmp	r3, #0
 802e2e0:	d0ef      	beq.n	802e2c2 <_fflush_r+0xa>
 802e2e2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802e2e4:	07d0      	lsls	r0, r2, #31
 802e2e6:	d404      	bmi.n	802e2f2 <_fflush_r+0x3a>
 802e2e8:	0599      	lsls	r1, r3, #22
 802e2ea:	d402      	bmi.n	802e2f2 <_fflush_r+0x3a>
 802e2ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e2ee:	f7fd ffce 	bl	802c28e <__retarget_lock_acquire_recursive>
 802e2f2:	4628      	mov	r0, r5
 802e2f4:	4621      	mov	r1, r4
 802e2f6:	f7ff ff59 	bl	802e1ac <__sflush_r>
 802e2fa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802e2fc:	07da      	lsls	r2, r3, #31
 802e2fe:	4605      	mov	r5, r0
 802e300:	d4e0      	bmi.n	802e2c4 <_fflush_r+0xc>
 802e302:	89a3      	ldrh	r3, [r4, #12]
 802e304:	059b      	lsls	r3, r3, #22
 802e306:	d4dd      	bmi.n	802e2c4 <_fflush_r+0xc>
 802e308:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e30a:	f7fd ffc2 	bl	802c292 <__retarget_lock_release_recursive>
 802e30e:	e7d9      	b.n	802e2c4 <_fflush_r+0xc>
 802e310:	4b05      	ldr	r3, [pc, #20]	; (802e328 <_fflush_r+0x70>)
 802e312:	429c      	cmp	r4, r3
 802e314:	d101      	bne.n	802e31a <_fflush_r+0x62>
 802e316:	68ac      	ldr	r4, [r5, #8]
 802e318:	e7df      	b.n	802e2da <_fflush_r+0x22>
 802e31a:	4b04      	ldr	r3, [pc, #16]	; (802e32c <_fflush_r+0x74>)
 802e31c:	429c      	cmp	r4, r3
 802e31e:	bf08      	it	eq
 802e320:	68ec      	ldreq	r4, [r5, #12]
 802e322:	e7da      	b.n	802e2da <_fflush_r+0x22>
 802e324:	08049abc 	.word	0x08049abc
 802e328:	08049adc 	.word	0x08049adc
 802e32c:	08049a9c 	.word	0x08049a9c

0802e330 <_localeconv_r>:
 802e330:	4800      	ldr	r0, [pc, #0]	; (802e334 <_localeconv_r+0x4>)
 802e332:	4770      	bx	lr
 802e334:	2000026c 	.word	0x2000026c

0802e338 <_lseek_r>:
 802e338:	b538      	push	{r3, r4, r5, lr}
 802e33a:	4d07      	ldr	r5, [pc, #28]	; (802e358 <_lseek_r+0x20>)
 802e33c:	4604      	mov	r4, r0
 802e33e:	4608      	mov	r0, r1
 802e340:	4611      	mov	r1, r2
 802e342:	2200      	movs	r2, #0
 802e344:	602a      	str	r2, [r5, #0]
 802e346:	461a      	mov	r2, r3
 802e348:	f7d5 f97c 	bl	8003644 <_lseek>
 802e34c:	1c43      	adds	r3, r0, #1
 802e34e:	d102      	bne.n	802e356 <_lseek_r+0x1e>
 802e350:	682b      	ldr	r3, [r5, #0]
 802e352:	b103      	cbz	r3, 802e356 <_lseek_r+0x1e>
 802e354:	6023      	str	r3, [r4, #0]
 802e356:	bd38      	pop	{r3, r4, r5, pc}
 802e358:	2001e3f0 	.word	0x2001e3f0

0802e35c <__swhatbuf_r>:
 802e35c:	b570      	push	{r4, r5, r6, lr}
 802e35e:	460e      	mov	r6, r1
 802e360:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e364:	2900      	cmp	r1, #0
 802e366:	b096      	sub	sp, #88	; 0x58
 802e368:	4614      	mov	r4, r2
 802e36a:	461d      	mov	r5, r3
 802e36c:	da08      	bge.n	802e380 <__swhatbuf_r+0x24>
 802e36e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 802e372:	2200      	movs	r2, #0
 802e374:	602a      	str	r2, [r5, #0]
 802e376:	061a      	lsls	r2, r3, #24
 802e378:	d410      	bmi.n	802e39c <__swhatbuf_r+0x40>
 802e37a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802e37e:	e00e      	b.n	802e39e <__swhatbuf_r+0x42>
 802e380:	466a      	mov	r2, sp
 802e382:	f000 fc09 	bl	802eb98 <_fstat_r>
 802e386:	2800      	cmp	r0, #0
 802e388:	dbf1      	blt.n	802e36e <__swhatbuf_r+0x12>
 802e38a:	9a01      	ldr	r2, [sp, #4]
 802e38c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 802e390:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 802e394:	425a      	negs	r2, r3
 802e396:	415a      	adcs	r2, r3
 802e398:	602a      	str	r2, [r5, #0]
 802e39a:	e7ee      	b.n	802e37a <__swhatbuf_r+0x1e>
 802e39c:	2340      	movs	r3, #64	; 0x40
 802e39e:	2000      	movs	r0, #0
 802e3a0:	6023      	str	r3, [r4, #0]
 802e3a2:	b016      	add	sp, #88	; 0x58
 802e3a4:	bd70      	pop	{r4, r5, r6, pc}
	...

0802e3a8 <__smakebuf_r>:
 802e3a8:	898b      	ldrh	r3, [r1, #12]
 802e3aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802e3ac:	079d      	lsls	r5, r3, #30
 802e3ae:	4606      	mov	r6, r0
 802e3b0:	460c      	mov	r4, r1
 802e3b2:	d507      	bpl.n	802e3c4 <__smakebuf_r+0x1c>
 802e3b4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802e3b8:	6023      	str	r3, [r4, #0]
 802e3ba:	6123      	str	r3, [r4, #16]
 802e3bc:	2301      	movs	r3, #1
 802e3be:	6163      	str	r3, [r4, #20]
 802e3c0:	b002      	add	sp, #8
 802e3c2:	bd70      	pop	{r4, r5, r6, pc}
 802e3c4:	ab01      	add	r3, sp, #4
 802e3c6:	466a      	mov	r2, sp
 802e3c8:	f7ff ffc8 	bl	802e35c <__swhatbuf_r>
 802e3cc:	9900      	ldr	r1, [sp, #0]
 802e3ce:	4605      	mov	r5, r0
 802e3d0:	4630      	mov	r0, r6
 802e3d2:	f7fd fff1 	bl	802c3b8 <_malloc_r>
 802e3d6:	b948      	cbnz	r0, 802e3ec <__smakebuf_r+0x44>
 802e3d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e3dc:	059a      	lsls	r2, r3, #22
 802e3de:	d4ef      	bmi.n	802e3c0 <__smakebuf_r+0x18>
 802e3e0:	f023 0303 	bic.w	r3, r3, #3
 802e3e4:	f043 0302 	orr.w	r3, r3, #2
 802e3e8:	81a3      	strh	r3, [r4, #12]
 802e3ea:	e7e3      	b.n	802e3b4 <__smakebuf_r+0xc>
 802e3ec:	4b0d      	ldr	r3, [pc, #52]	; (802e424 <__smakebuf_r+0x7c>)
 802e3ee:	62b3      	str	r3, [r6, #40]	; 0x28
 802e3f0:	89a3      	ldrh	r3, [r4, #12]
 802e3f2:	6020      	str	r0, [r4, #0]
 802e3f4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802e3f8:	81a3      	strh	r3, [r4, #12]
 802e3fa:	9b00      	ldr	r3, [sp, #0]
 802e3fc:	6163      	str	r3, [r4, #20]
 802e3fe:	9b01      	ldr	r3, [sp, #4]
 802e400:	6120      	str	r0, [r4, #16]
 802e402:	b15b      	cbz	r3, 802e41c <__smakebuf_r+0x74>
 802e404:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802e408:	4630      	mov	r0, r6
 802e40a:	f000 fbd7 	bl	802ebbc <_isatty_r>
 802e40e:	b128      	cbz	r0, 802e41c <__smakebuf_r+0x74>
 802e410:	89a3      	ldrh	r3, [r4, #12]
 802e412:	f023 0303 	bic.w	r3, r3, #3
 802e416:	f043 0301 	orr.w	r3, r3, #1
 802e41a:	81a3      	strh	r3, [r4, #12]
 802e41c:	89a0      	ldrh	r0, [r4, #12]
 802e41e:	4305      	orrs	r5, r0
 802e420:	81a5      	strh	r5, [r4, #12]
 802e422:	e7cd      	b.n	802e3c0 <__smakebuf_r+0x18>
 802e424:	0802c07d 	.word	0x0802c07d

0802e428 <__malloc_lock>:
 802e428:	4801      	ldr	r0, [pc, #4]	; (802e430 <__malloc_lock+0x8>)
 802e42a:	f7fd bf30 	b.w	802c28e <__retarget_lock_acquire_recursive>
 802e42e:	bf00      	nop
 802e430:	2001e2dd 	.word	0x2001e2dd

0802e434 <__malloc_unlock>:
 802e434:	4801      	ldr	r0, [pc, #4]	; (802e43c <__malloc_unlock+0x8>)
 802e436:	f7fd bf2c 	b.w	802c292 <__retarget_lock_release_recursive>
 802e43a:	bf00      	nop
 802e43c:	2001e2dd 	.word	0x2001e2dd

0802e440 <_Balloc>:
 802e440:	b570      	push	{r4, r5, r6, lr}
 802e442:	6a46      	ldr	r6, [r0, #36]	; 0x24
 802e444:	4604      	mov	r4, r0
 802e446:	460d      	mov	r5, r1
 802e448:	b976      	cbnz	r6, 802e468 <_Balloc+0x28>
 802e44a:	2010      	movs	r0, #16
 802e44c:	f7fd ff22 	bl	802c294 <malloc>
 802e450:	4602      	mov	r2, r0
 802e452:	6260      	str	r0, [r4, #36]	; 0x24
 802e454:	b920      	cbnz	r0, 802e460 <_Balloc+0x20>
 802e456:	4b18      	ldr	r3, [pc, #96]	; (802e4b8 <_Balloc+0x78>)
 802e458:	4818      	ldr	r0, [pc, #96]	; (802e4bc <_Balloc+0x7c>)
 802e45a:	2166      	movs	r1, #102	; 0x66
 802e45c:	f7fd fdb2 	bl	802bfc4 <__assert_func>
 802e460:	e9c0 6601 	strd	r6, r6, [r0, #4]
 802e464:	6006      	str	r6, [r0, #0]
 802e466:	60c6      	str	r6, [r0, #12]
 802e468:	6a66      	ldr	r6, [r4, #36]	; 0x24
 802e46a:	68f3      	ldr	r3, [r6, #12]
 802e46c:	b183      	cbz	r3, 802e490 <_Balloc+0x50>
 802e46e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802e470:	68db      	ldr	r3, [r3, #12]
 802e472:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 802e476:	b9b8      	cbnz	r0, 802e4a8 <_Balloc+0x68>
 802e478:	2101      	movs	r1, #1
 802e47a:	fa01 f605 	lsl.w	r6, r1, r5
 802e47e:	1d72      	adds	r2, r6, #5
 802e480:	0092      	lsls	r2, r2, #2
 802e482:	4620      	mov	r0, r4
 802e484:	f000 fb60 	bl	802eb48 <_calloc_r>
 802e488:	b160      	cbz	r0, 802e4a4 <_Balloc+0x64>
 802e48a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 802e48e:	e00e      	b.n	802e4ae <_Balloc+0x6e>
 802e490:	2221      	movs	r2, #33	; 0x21
 802e492:	2104      	movs	r1, #4
 802e494:	4620      	mov	r0, r4
 802e496:	f000 fb57 	bl	802eb48 <_calloc_r>
 802e49a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802e49c:	60f0      	str	r0, [r6, #12]
 802e49e:	68db      	ldr	r3, [r3, #12]
 802e4a0:	2b00      	cmp	r3, #0
 802e4a2:	d1e4      	bne.n	802e46e <_Balloc+0x2e>
 802e4a4:	2000      	movs	r0, #0
 802e4a6:	bd70      	pop	{r4, r5, r6, pc}
 802e4a8:	6802      	ldr	r2, [r0, #0]
 802e4aa:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 802e4ae:	2300      	movs	r3, #0
 802e4b0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 802e4b4:	e7f7      	b.n	802e4a6 <_Balloc+0x66>
 802e4b6:	bf00      	nop
 802e4b8:	08049b55 	.word	0x08049b55
 802e4bc:	08049bd8 	.word	0x08049bd8

0802e4c0 <_Bfree>:
 802e4c0:	b570      	push	{r4, r5, r6, lr}
 802e4c2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 802e4c4:	4605      	mov	r5, r0
 802e4c6:	460c      	mov	r4, r1
 802e4c8:	b976      	cbnz	r6, 802e4e8 <_Bfree+0x28>
 802e4ca:	2010      	movs	r0, #16
 802e4cc:	f7fd fee2 	bl	802c294 <malloc>
 802e4d0:	4602      	mov	r2, r0
 802e4d2:	6268      	str	r0, [r5, #36]	; 0x24
 802e4d4:	b920      	cbnz	r0, 802e4e0 <_Bfree+0x20>
 802e4d6:	4b09      	ldr	r3, [pc, #36]	; (802e4fc <_Bfree+0x3c>)
 802e4d8:	4809      	ldr	r0, [pc, #36]	; (802e500 <_Bfree+0x40>)
 802e4da:	218a      	movs	r1, #138	; 0x8a
 802e4dc:	f7fd fd72 	bl	802bfc4 <__assert_func>
 802e4e0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 802e4e4:	6006      	str	r6, [r0, #0]
 802e4e6:	60c6      	str	r6, [r0, #12]
 802e4e8:	b13c      	cbz	r4, 802e4fa <_Bfree+0x3a>
 802e4ea:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 802e4ec:	6862      	ldr	r2, [r4, #4]
 802e4ee:	68db      	ldr	r3, [r3, #12]
 802e4f0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802e4f4:	6021      	str	r1, [r4, #0]
 802e4f6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 802e4fa:	bd70      	pop	{r4, r5, r6, pc}
 802e4fc:	08049b55 	.word	0x08049b55
 802e500:	08049bd8 	.word	0x08049bd8

0802e504 <__multadd>:
 802e504:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e508:	690d      	ldr	r5, [r1, #16]
 802e50a:	4607      	mov	r7, r0
 802e50c:	460c      	mov	r4, r1
 802e50e:	461e      	mov	r6, r3
 802e510:	f101 0c14 	add.w	ip, r1, #20
 802e514:	2000      	movs	r0, #0
 802e516:	f8dc 3000 	ldr.w	r3, [ip]
 802e51a:	b299      	uxth	r1, r3
 802e51c:	fb02 6101 	mla	r1, r2, r1, r6
 802e520:	0c1e      	lsrs	r6, r3, #16
 802e522:	0c0b      	lsrs	r3, r1, #16
 802e524:	fb02 3306 	mla	r3, r2, r6, r3
 802e528:	b289      	uxth	r1, r1
 802e52a:	3001      	adds	r0, #1
 802e52c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 802e530:	4285      	cmp	r5, r0
 802e532:	f84c 1b04 	str.w	r1, [ip], #4
 802e536:	ea4f 4613 	mov.w	r6, r3, lsr #16
 802e53a:	dcec      	bgt.n	802e516 <__multadd+0x12>
 802e53c:	b30e      	cbz	r6, 802e582 <__multadd+0x7e>
 802e53e:	68a3      	ldr	r3, [r4, #8]
 802e540:	42ab      	cmp	r3, r5
 802e542:	dc19      	bgt.n	802e578 <__multadd+0x74>
 802e544:	6861      	ldr	r1, [r4, #4]
 802e546:	4638      	mov	r0, r7
 802e548:	3101      	adds	r1, #1
 802e54a:	f7ff ff79 	bl	802e440 <_Balloc>
 802e54e:	4680      	mov	r8, r0
 802e550:	b928      	cbnz	r0, 802e55e <__multadd+0x5a>
 802e552:	4602      	mov	r2, r0
 802e554:	4b0c      	ldr	r3, [pc, #48]	; (802e588 <__multadd+0x84>)
 802e556:	480d      	ldr	r0, [pc, #52]	; (802e58c <__multadd+0x88>)
 802e558:	21b5      	movs	r1, #181	; 0xb5
 802e55a:	f7fd fd33 	bl	802bfc4 <__assert_func>
 802e55e:	6922      	ldr	r2, [r4, #16]
 802e560:	3202      	adds	r2, #2
 802e562:	f104 010c 	add.w	r1, r4, #12
 802e566:	0092      	lsls	r2, r2, #2
 802e568:	300c      	adds	r0, #12
 802e56a:	f7fd fea3 	bl	802c2b4 <memcpy>
 802e56e:	4621      	mov	r1, r4
 802e570:	4638      	mov	r0, r7
 802e572:	f7ff ffa5 	bl	802e4c0 <_Bfree>
 802e576:	4644      	mov	r4, r8
 802e578:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 802e57c:	3501      	adds	r5, #1
 802e57e:	615e      	str	r6, [r3, #20]
 802e580:	6125      	str	r5, [r4, #16]
 802e582:	4620      	mov	r0, r4
 802e584:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e588:	08049bc7 	.word	0x08049bc7
 802e58c:	08049bd8 	.word	0x08049bd8

0802e590 <__hi0bits>:
 802e590:	0c03      	lsrs	r3, r0, #16
 802e592:	041b      	lsls	r3, r3, #16
 802e594:	b9d3      	cbnz	r3, 802e5cc <__hi0bits+0x3c>
 802e596:	0400      	lsls	r0, r0, #16
 802e598:	2310      	movs	r3, #16
 802e59a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 802e59e:	bf04      	itt	eq
 802e5a0:	0200      	lsleq	r0, r0, #8
 802e5a2:	3308      	addeq	r3, #8
 802e5a4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 802e5a8:	bf04      	itt	eq
 802e5aa:	0100      	lsleq	r0, r0, #4
 802e5ac:	3304      	addeq	r3, #4
 802e5ae:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 802e5b2:	bf04      	itt	eq
 802e5b4:	0080      	lsleq	r0, r0, #2
 802e5b6:	3302      	addeq	r3, #2
 802e5b8:	2800      	cmp	r0, #0
 802e5ba:	db05      	blt.n	802e5c8 <__hi0bits+0x38>
 802e5bc:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 802e5c0:	f103 0301 	add.w	r3, r3, #1
 802e5c4:	bf08      	it	eq
 802e5c6:	2320      	moveq	r3, #32
 802e5c8:	4618      	mov	r0, r3
 802e5ca:	4770      	bx	lr
 802e5cc:	2300      	movs	r3, #0
 802e5ce:	e7e4      	b.n	802e59a <__hi0bits+0xa>

0802e5d0 <__lo0bits>:
 802e5d0:	6803      	ldr	r3, [r0, #0]
 802e5d2:	f013 0207 	ands.w	r2, r3, #7
 802e5d6:	4601      	mov	r1, r0
 802e5d8:	d00b      	beq.n	802e5f2 <__lo0bits+0x22>
 802e5da:	07da      	lsls	r2, r3, #31
 802e5dc:	d423      	bmi.n	802e626 <__lo0bits+0x56>
 802e5de:	0798      	lsls	r0, r3, #30
 802e5e0:	bf49      	itett	mi
 802e5e2:	085b      	lsrmi	r3, r3, #1
 802e5e4:	089b      	lsrpl	r3, r3, #2
 802e5e6:	2001      	movmi	r0, #1
 802e5e8:	600b      	strmi	r3, [r1, #0]
 802e5ea:	bf5c      	itt	pl
 802e5ec:	600b      	strpl	r3, [r1, #0]
 802e5ee:	2002      	movpl	r0, #2
 802e5f0:	4770      	bx	lr
 802e5f2:	b298      	uxth	r0, r3
 802e5f4:	b9a8      	cbnz	r0, 802e622 <__lo0bits+0x52>
 802e5f6:	0c1b      	lsrs	r3, r3, #16
 802e5f8:	2010      	movs	r0, #16
 802e5fa:	b2da      	uxtb	r2, r3
 802e5fc:	b90a      	cbnz	r2, 802e602 <__lo0bits+0x32>
 802e5fe:	3008      	adds	r0, #8
 802e600:	0a1b      	lsrs	r3, r3, #8
 802e602:	071a      	lsls	r2, r3, #28
 802e604:	bf04      	itt	eq
 802e606:	091b      	lsreq	r3, r3, #4
 802e608:	3004      	addeq	r0, #4
 802e60a:	079a      	lsls	r2, r3, #30
 802e60c:	bf04      	itt	eq
 802e60e:	089b      	lsreq	r3, r3, #2
 802e610:	3002      	addeq	r0, #2
 802e612:	07da      	lsls	r2, r3, #31
 802e614:	d403      	bmi.n	802e61e <__lo0bits+0x4e>
 802e616:	085b      	lsrs	r3, r3, #1
 802e618:	f100 0001 	add.w	r0, r0, #1
 802e61c:	d005      	beq.n	802e62a <__lo0bits+0x5a>
 802e61e:	600b      	str	r3, [r1, #0]
 802e620:	4770      	bx	lr
 802e622:	4610      	mov	r0, r2
 802e624:	e7e9      	b.n	802e5fa <__lo0bits+0x2a>
 802e626:	2000      	movs	r0, #0
 802e628:	4770      	bx	lr
 802e62a:	2020      	movs	r0, #32
 802e62c:	4770      	bx	lr
	...

0802e630 <__i2b>:
 802e630:	b510      	push	{r4, lr}
 802e632:	460c      	mov	r4, r1
 802e634:	2101      	movs	r1, #1
 802e636:	f7ff ff03 	bl	802e440 <_Balloc>
 802e63a:	4602      	mov	r2, r0
 802e63c:	b928      	cbnz	r0, 802e64a <__i2b+0x1a>
 802e63e:	4b05      	ldr	r3, [pc, #20]	; (802e654 <__i2b+0x24>)
 802e640:	4805      	ldr	r0, [pc, #20]	; (802e658 <__i2b+0x28>)
 802e642:	f44f 71a0 	mov.w	r1, #320	; 0x140
 802e646:	f7fd fcbd 	bl	802bfc4 <__assert_func>
 802e64a:	2301      	movs	r3, #1
 802e64c:	6144      	str	r4, [r0, #20]
 802e64e:	6103      	str	r3, [r0, #16]
 802e650:	bd10      	pop	{r4, pc}
 802e652:	bf00      	nop
 802e654:	08049bc7 	.word	0x08049bc7
 802e658:	08049bd8 	.word	0x08049bd8

0802e65c <__multiply>:
 802e65c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e660:	4691      	mov	r9, r2
 802e662:	690a      	ldr	r2, [r1, #16]
 802e664:	f8d9 3010 	ldr.w	r3, [r9, #16]
 802e668:	429a      	cmp	r2, r3
 802e66a:	bfb8      	it	lt
 802e66c:	460b      	movlt	r3, r1
 802e66e:	460c      	mov	r4, r1
 802e670:	bfbc      	itt	lt
 802e672:	464c      	movlt	r4, r9
 802e674:	4699      	movlt	r9, r3
 802e676:	6927      	ldr	r7, [r4, #16]
 802e678:	f8d9 a010 	ldr.w	sl, [r9, #16]
 802e67c:	68a3      	ldr	r3, [r4, #8]
 802e67e:	6861      	ldr	r1, [r4, #4]
 802e680:	eb07 060a 	add.w	r6, r7, sl
 802e684:	42b3      	cmp	r3, r6
 802e686:	b085      	sub	sp, #20
 802e688:	bfb8      	it	lt
 802e68a:	3101      	addlt	r1, #1
 802e68c:	f7ff fed8 	bl	802e440 <_Balloc>
 802e690:	b930      	cbnz	r0, 802e6a0 <__multiply+0x44>
 802e692:	4602      	mov	r2, r0
 802e694:	4b44      	ldr	r3, [pc, #272]	; (802e7a8 <__multiply+0x14c>)
 802e696:	4845      	ldr	r0, [pc, #276]	; (802e7ac <__multiply+0x150>)
 802e698:	f240 115d 	movw	r1, #349	; 0x15d
 802e69c:	f7fd fc92 	bl	802bfc4 <__assert_func>
 802e6a0:	f100 0514 	add.w	r5, r0, #20
 802e6a4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 802e6a8:	462b      	mov	r3, r5
 802e6aa:	2200      	movs	r2, #0
 802e6ac:	4543      	cmp	r3, r8
 802e6ae:	d321      	bcc.n	802e6f4 <__multiply+0x98>
 802e6b0:	f104 0314 	add.w	r3, r4, #20
 802e6b4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802e6b8:	f109 0314 	add.w	r3, r9, #20
 802e6bc:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 802e6c0:	9202      	str	r2, [sp, #8]
 802e6c2:	1b3a      	subs	r2, r7, r4
 802e6c4:	3a15      	subs	r2, #21
 802e6c6:	f022 0203 	bic.w	r2, r2, #3
 802e6ca:	3204      	adds	r2, #4
 802e6cc:	f104 0115 	add.w	r1, r4, #21
 802e6d0:	428f      	cmp	r7, r1
 802e6d2:	bf38      	it	cc
 802e6d4:	2204      	movcc	r2, #4
 802e6d6:	9201      	str	r2, [sp, #4]
 802e6d8:	9a02      	ldr	r2, [sp, #8]
 802e6da:	9303      	str	r3, [sp, #12]
 802e6dc:	429a      	cmp	r2, r3
 802e6de:	d80c      	bhi.n	802e6fa <__multiply+0x9e>
 802e6e0:	2e00      	cmp	r6, #0
 802e6e2:	dd03      	ble.n	802e6ec <__multiply+0x90>
 802e6e4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 802e6e8:	2b00      	cmp	r3, #0
 802e6ea:	d05a      	beq.n	802e7a2 <__multiply+0x146>
 802e6ec:	6106      	str	r6, [r0, #16]
 802e6ee:	b005      	add	sp, #20
 802e6f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e6f4:	f843 2b04 	str.w	r2, [r3], #4
 802e6f8:	e7d8      	b.n	802e6ac <__multiply+0x50>
 802e6fa:	f8b3 a000 	ldrh.w	sl, [r3]
 802e6fe:	f1ba 0f00 	cmp.w	sl, #0
 802e702:	d024      	beq.n	802e74e <__multiply+0xf2>
 802e704:	f104 0e14 	add.w	lr, r4, #20
 802e708:	46a9      	mov	r9, r5
 802e70a:	f04f 0c00 	mov.w	ip, #0
 802e70e:	f85e 2b04 	ldr.w	r2, [lr], #4
 802e712:	f8d9 1000 	ldr.w	r1, [r9]
 802e716:	fa1f fb82 	uxth.w	fp, r2
 802e71a:	b289      	uxth	r1, r1
 802e71c:	fb0a 110b 	mla	r1, sl, fp, r1
 802e720:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 802e724:	f8d9 2000 	ldr.w	r2, [r9]
 802e728:	4461      	add	r1, ip
 802e72a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 802e72e:	fb0a c20b 	mla	r2, sl, fp, ip
 802e732:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 802e736:	b289      	uxth	r1, r1
 802e738:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 802e73c:	4577      	cmp	r7, lr
 802e73e:	f849 1b04 	str.w	r1, [r9], #4
 802e742:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 802e746:	d8e2      	bhi.n	802e70e <__multiply+0xb2>
 802e748:	9a01      	ldr	r2, [sp, #4]
 802e74a:	f845 c002 	str.w	ip, [r5, r2]
 802e74e:	9a03      	ldr	r2, [sp, #12]
 802e750:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 802e754:	3304      	adds	r3, #4
 802e756:	f1b9 0f00 	cmp.w	r9, #0
 802e75a:	d020      	beq.n	802e79e <__multiply+0x142>
 802e75c:	6829      	ldr	r1, [r5, #0]
 802e75e:	f104 0c14 	add.w	ip, r4, #20
 802e762:	46ae      	mov	lr, r5
 802e764:	f04f 0a00 	mov.w	sl, #0
 802e768:	f8bc b000 	ldrh.w	fp, [ip]
 802e76c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 802e770:	fb09 220b 	mla	r2, r9, fp, r2
 802e774:	4492      	add	sl, r2
 802e776:	b289      	uxth	r1, r1
 802e778:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 802e77c:	f84e 1b04 	str.w	r1, [lr], #4
 802e780:	f85c 2b04 	ldr.w	r2, [ip], #4
 802e784:	f8be 1000 	ldrh.w	r1, [lr]
 802e788:	0c12      	lsrs	r2, r2, #16
 802e78a:	fb09 1102 	mla	r1, r9, r2, r1
 802e78e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 802e792:	4567      	cmp	r7, ip
 802e794:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 802e798:	d8e6      	bhi.n	802e768 <__multiply+0x10c>
 802e79a:	9a01      	ldr	r2, [sp, #4]
 802e79c:	50a9      	str	r1, [r5, r2]
 802e79e:	3504      	adds	r5, #4
 802e7a0:	e79a      	b.n	802e6d8 <__multiply+0x7c>
 802e7a2:	3e01      	subs	r6, #1
 802e7a4:	e79c      	b.n	802e6e0 <__multiply+0x84>
 802e7a6:	bf00      	nop
 802e7a8:	08049bc7 	.word	0x08049bc7
 802e7ac:	08049bd8 	.word	0x08049bd8

0802e7b0 <__pow5mult>:
 802e7b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802e7b4:	4615      	mov	r5, r2
 802e7b6:	f012 0203 	ands.w	r2, r2, #3
 802e7ba:	4606      	mov	r6, r0
 802e7bc:	460f      	mov	r7, r1
 802e7be:	d007      	beq.n	802e7d0 <__pow5mult+0x20>
 802e7c0:	4c25      	ldr	r4, [pc, #148]	; (802e858 <__pow5mult+0xa8>)
 802e7c2:	3a01      	subs	r2, #1
 802e7c4:	2300      	movs	r3, #0
 802e7c6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 802e7ca:	f7ff fe9b 	bl	802e504 <__multadd>
 802e7ce:	4607      	mov	r7, r0
 802e7d0:	10ad      	asrs	r5, r5, #2
 802e7d2:	d03d      	beq.n	802e850 <__pow5mult+0xa0>
 802e7d4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 802e7d6:	b97c      	cbnz	r4, 802e7f8 <__pow5mult+0x48>
 802e7d8:	2010      	movs	r0, #16
 802e7da:	f7fd fd5b 	bl	802c294 <malloc>
 802e7de:	4602      	mov	r2, r0
 802e7e0:	6270      	str	r0, [r6, #36]	; 0x24
 802e7e2:	b928      	cbnz	r0, 802e7f0 <__pow5mult+0x40>
 802e7e4:	4b1d      	ldr	r3, [pc, #116]	; (802e85c <__pow5mult+0xac>)
 802e7e6:	481e      	ldr	r0, [pc, #120]	; (802e860 <__pow5mult+0xb0>)
 802e7e8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 802e7ec:	f7fd fbea 	bl	802bfc4 <__assert_func>
 802e7f0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 802e7f4:	6004      	str	r4, [r0, #0]
 802e7f6:	60c4      	str	r4, [r0, #12]
 802e7f8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 802e7fc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 802e800:	b94c      	cbnz	r4, 802e816 <__pow5mult+0x66>
 802e802:	f240 2171 	movw	r1, #625	; 0x271
 802e806:	4630      	mov	r0, r6
 802e808:	f7ff ff12 	bl	802e630 <__i2b>
 802e80c:	2300      	movs	r3, #0
 802e80e:	f8c8 0008 	str.w	r0, [r8, #8]
 802e812:	4604      	mov	r4, r0
 802e814:	6003      	str	r3, [r0, #0]
 802e816:	f04f 0900 	mov.w	r9, #0
 802e81a:	07eb      	lsls	r3, r5, #31
 802e81c:	d50a      	bpl.n	802e834 <__pow5mult+0x84>
 802e81e:	4639      	mov	r1, r7
 802e820:	4622      	mov	r2, r4
 802e822:	4630      	mov	r0, r6
 802e824:	f7ff ff1a 	bl	802e65c <__multiply>
 802e828:	4639      	mov	r1, r7
 802e82a:	4680      	mov	r8, r0
 802e82c:	4630      	mov	r0, r6
 802e82e:	f7ff fe47 	bl	802e4c0 <_Bfree>
 802e832:	4647      	mov	r7, r8
 802e834:	106d      	asrs	r5, r5, #1
 802e836:	d00b      	beq.n	802e850 <__pow5mult+0xa0>
 802e838:	6820      	ldr	r0, [r4, #0]
 802e83a:	b938      	cbnz	r0, 802e84c <__pow5mult+0x9c>
 802e83c:	4622      	mov	r2, r4
 802e83e:	4621      	mov	r1, r4
 802e840:	4630      	mov	r0, r6
 802e842:	f7ff ff0b 	bl	802e65c <__multiply>
 802e846:	6020      	str	r0, [r4, #0]
 802e848:	f8c0 9000 	str.w	r9, [r0]
 802e84c:	4604      	mov	r4, r0
 802e84e:	e7e4      	b.n	802e81a <__pow5mult+0x6a>
 802e850:	4638      	mov	r0, r7
 802e852:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802e856:	bf00      	nop
 802e858:	08049d28 	.word	0x08049d28
 802e85c:	08049b55 	.word	0x08049b55
 802e860:	08049bd8 	.word	0x08049bd8

0802e864 <__lshift>:
 802e864:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802e868:	460c      	mov	r4, r1
 802e86a:	6849      	ldr	r1, [r1, #4]
 802e86c:	6923      	ldr	r3, [r4, #16]
 802e86e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 802e872:	68a3      	ldr	r3, [r4, #8]
 802e874:	4607      	mov	r7, r0
 802e876:	4691      	mov	r9, r2
 802e878:	ea4f 1a62 	mov.w	sl, r2, asr #5
 802e87c:	f108 0601 	add.w	r6, r8, #1
 802e880:	42b3      	cmp	r3, r6
 802e882:	db0b      	blt.n	802e89c <__lshift+0x38>
 802e884:	4638      	mov	r0, r7
 802e886:	f7ff fddb 	bl	802e440 <_Balloc>
 802e88a:	4605      	mov	r5, r0
 802e88c:	b948      	cbnz	r0, 802e8a2 <__lshift+0x3e>
 802e88e:	4602      	mov	r2, r0
 802e890:	4b2a      	ldr	r3, [pc, #168]	; (802e93c <__lshift+0xd8>)
 802e892:	482b      	ldr	r0, [pc, #172]	; (802e940 <__lshift+0xdc>)
 802e894:	f240 11d9 	movw	r1, #473	; 0x1d9
 802e898:	f7fd fb94 	bl	802bfc4 <__assert_func>
 802e89c:	3101      	adds	r1, #1
 802e89e:	005b      	lsls	r3, r3, #1
 802e8a0:	e7ee      	b.n	802e880 <__lshift+0x1c>
 802e8a2:	2300      	movs	r3, #0
 802e8a4:	f100 0114 	add.w	r1, r0, #20
 802e8a8:	f100 0210 	add.w	r2, r0, #16
 802e8ac:	4618      	mov	r0, r3
 802e8ae:	4553      	cmp	r3, sl
 802e8b0:	db37      	blt.n	802e922 <__lshift+0xbe>
 802e8b2:	6920      	ldr	r0, [r4, #16]
 802e8b4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 802e8b8:	f104 0314 	add.w	r3, r4, #20
 802e8bc:	f019 091f 	ands.w	r9, r9, #31
 802e8c0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802e8c4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 802e8c8:	d02f      	beq.n	802e92a <__lshift+0xc6>
 802e8ca:	f1c9 0e20 	rsb	lr, r9, #32
 802e8ce:	468a      	mov	sl, r1
 802e8d0:	f04f 0c00 	mov.w	ip, #0
 802e8d4:	681a      	ldr	r2, [r3, #0]
 802e8d6:	fa02 f209 	lsl.w	r2, r2, r9
 802e8da:	ea42 020c 	orr.w	r2, r2, ip
 802e8de:	f84a 2b04 	str.w	r2, [sl], #4
 802e8e2:	f853 2b04 	ldr.w	r2, [r3], #4
 802e8e6:	4298      	cmp	r0, r3
 802e8e8:	fa22 fc0e 	lsr.w	ip, r2, lr
 802e8ec:	d8f2      	bhi.n	802e8d4 <__lshift+0x70>
 802e8ee:	1b03      	subs	r3, r0, r4
 802e8f0:	3b15      	subs	r3, #21
 802e8f2:	f023 0303 	bic.w	r3, r3, #3
 802e8f6:	3304      	adds	r3, #4
 802e8f8:	f104 0215 	add.w	r2, r4, #21
 802e8fc:	4290      	cmp	r0, r2
 802e8fe:	bf38      	it	cc
 802e900:	2304      	movcc	r3, #4
 802e902:	f841 c003 	str.w	ip, [r1, r3]
 802e906:	f1bc 0f00 	cmp.w	ip, #0
 802e90a:	d001      	beq.n	802e910 <__lshift+0xac>
 802e90c:	f108 0602 	add.w	r6, r8, #2
 802e910:	3e01      	subs	r6, #1
 802e912:	4638      	mov	r0, r7
 802e914:	612e      	str	r6, [r5, #16]
 802e916:	4621      	mov	r1, r4
 802e918:	f7ff fdd2 	bl	802e4c0 <_Bfree>
 802e91c:	4628      	mov	r0, r5
 802e91e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e922:	f842 0f04 	str.w	r0, [r2, #4]!
 802e926:	3301      	adds	r3, #1
 802e928:	e7c1      	b.n	802e8ae <__lshift+0x4a>
 802e92a:	3904      	subs	r1, #4
 802e92c:	f853 2b04 	ldr.w	r2, [r3], #4
 802e930:	f841 2f04 	str.w	r2, [r1, #4]!
 802e934:	4298      	cmp	r0, r3
 802e936:	d8f9      	bhi.n	802e92c <__lshift+0xc8>
 802e938:	e7ea      	b.n	802e910 <__lshift+0xac>
 802e93a:	bf00      	nop
 802e93c:	08049bc7 	.word	0x08049bc7
 802e940:	08049bd8 	.word	0x08049bd8

0802e944 <__mcmp>:
 802e944:	b530      	push	{r4, r5, lr}
 802e946:	6902      	ldr	r2, [r0, #16]
 802e948:	690c      	ldr	r4, [r1, #16]
 802e94a:	1b12      	subs	r2, r2, r4
 802e94c:	d10e      	bne.n	802e96c <__mcmp+0x28>
 802e94e:	f100 0314 	add.w	r3, r0, #20
 802e952:	3114      	adds	r1, #20
 802e954:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 802e958:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 802e95c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 802e960:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 802e964:	42a5      	cmp	r5, r4
 802e966:	d003      	beq.n	802e970 <__mcmp+0x2c>
 802e968:	d305      	bcc.n	802e976 <__mcmp+0x32>
 802e96a:	2201      	movs	r2, #1
 802e96c:	4610      	mov	r0, r2
 802e96e:	bd30      	pop	{r4, r5, pc}
 802e970:	4283      	cmp	r3, r0
 802e972:	d3f3      	bcc.n	802e95c <__mcmp+0x18>
 802e974:	e7fa      	b.n	802e96c <__mcmp+0x28>
 802e976:	f04f 32ff 	mov.w	r2, #4294967295
 802e97a:	e7f7      	b.n	802e96c <__mcmp+0x28>

0802e97c <__mdiff>:
 802e97c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e980:	460c      	mov	r4, r1
 802e982:	4606      	mov	r6, r0
 802e984:	4611      	mov	r1, r2
 802e986:	4620      	mov	r0, r4
 802e988:	4690      	mov	r8, r2
 802e98a:	f7ff ffdb 	bl	802e944 <__mcmp>
 802e98e:	1e05      	subs	r5, r0, #0
 802e990:	d110      	bne.n	802e9b4 <__mdiff+0x38>
 802e992:	4629      	mov	r1, r5
 802e994:	4630      	mov	r0, r6
 802e996:	f7ff fd53 	bl	802e440 <_Balloc>
 802e99a:	b930      	cbnz	r0, 802e9aa <__mdiff+0x2e>
 802e99c:	4b3a      	ldr	r3, [pc, #232]	; (802ea88 <__mdiff+0x10c>)
 802e99e:	4602      	mov	r2, r0
 802e9a0:	f240 2132 	movw	r1, #562	; 0x232
 802e9a4:	4839      	ldr	r0, [pc, #228]	; (802ea8c <__mdiff+0x110>)
 802e9a6:	f7fd fb0d 	bl	802bfc4 <__assert_func>
 802e9aa:	2301      	movs	r3, #1
 802e9ac:	e9c0 3504 	strd	r3, r5, [r0, #16]
 802e9b0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e9b4:	bfa4      	itt	ge
 802e9b6:	4643      	movge	r3, r8
 802e9b8:	46a0      	movge	r8, r4
 802e9ba:	4630      	mov	r0, r6
 802e9bc:	f8d8 1004 	ldr.w	r1, [r8, #4]
 802e9c0:	bfa6      	itte	ge
 802e9c2:	461c      	movge	r4, r3
 802e9c4:	2500      	movge	r5, #0
 802e9c6:	2501      	movlt	r5, #1
 802e9c8:	f7ff fd3a 	bl	802e440 <_Balloc>
 802e9cc:	b920      	cbnz	r0, 802e9d8 <__mdiff+0x5c>
 802e9ce:	4b2e      	ldr	r3, [pc, #184]	; (802ea88 <__mdiff+0x10c>)
 802e9d0:	4602      	mov	r2, r0
 802e9d2:	f44f 7110 	mov.w	r1, #576	; 0x240
 802e9d6:	e7e5      	b.n	802e9a4 <__mdiff+0x28>
 802e9d8:	f8d8 7010 	ldr.w	r7, [r8, #16]
 802e9dc:	6926      	ldr	r6, [r4, #16]
 802e9de:	60c5      	str	r5, [r0, #12]
 802e9e0:	f104 0914 	add.w	r9, r4, #20
 802e9e4:	f108 0514 	add.w	r5, r8, #20
 802e9e8:	f100 0e14 	add.w	lr, r0, #20
 802e9ec:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 802e9f0:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 802e9f4:	f108 0210 	add.w	r2, r8, #16
 802e9f8:	46f2      	mov	sl, lr
 802e9fa:	2100      	movs	r1, #0
 802e9fc:	f859 3b04 	ldr.w	r3, [r9], #4
 802ea00:	f852 bf04 	ldr.w	fp, [r2, #4]!
 802ea04:	fa1f f883 	uxth.w	r8, r3
 802ea08:	fa11 f18b 	uxtah	r1, r1, fp
 802ea0c:	0c1b      	lsrs	r3, r3, #16
 802ea0e:	eba1 0808 	sub.w	r8, r1, r8
 802ea12:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 802ea16:	eb03 4328 	add.w	r3, r3, r8, asr #16
 802ea1a:	fa1f f888 	uxth.w	r8, r8
 802ea1e:	1419      	asrs	r1, r3, #16
 802ea20:	454e      	cmp	r6, r9
 802ea22:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 802ea26:	f84a 3b04 	str.w	r3, [sl], #4
 802ea2a:	d8e7      	bhi.n	802e9fc <__mdiff+0x80>
 802ea2c:	1b33      	subs	r3, r6, r4
 802ea2e:	3b15      	subs	r3, #21
 802ea30:	f023 0303 	bic.w	r3, r3, #3
 802ea34:	3304      	adds	r3, #4
 802ea36:	3415      	adds	r4, #21
 802ea38:	42a6      	cmp	r6, r4
 802ea3a:	bf38      	it	cc
 802ea3c:	2304      	movcc	r3, #4
 802ea3e:	441d      	add	r5, r3
 802ea40:	4473      	add	r3, lr
 802ea42:	469e      	mov	lr, r3
 802ea44:	462e      	mov	r6, r5
 802ea46:	4566      	cmp	r6, ip
 802ea48:	d30e      	bcc.n	802ea68 <__mdiff+0xec>
 802ea4a:	f10c 0203 	add.w	r2, ip, #3
 802ea4e:	1b52      	subs	r2, r2, r5
 802ea50:	f022 0203 	bic.w	r2, r2, #3
 802ea54:	3d03      	subs	r5, #3
 802ea56:	45ac      	cmp	ip, r5
 802ea58:	bf38      	it	cc
 802ea5a:	2200      	movcc	r2, #0
 802ea5c:	441a      	add	r2, r3
 802ea5e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 802ea62:	b17b      	cbz	r3, 802ea84 <__mdiff+0x108>
 802ea64:	6107      	str	r7, [r0, #16]
 802ea66:	e7a3      	b.n	802e9b0 <__mdiff+0x34>
 802ea68:	f856 8b04 	ldr.w	r8, [r6], #4
 802ea6c:	fa11 f288 	uxtah	r2, r1, r8
 802ea70:	1414      	asrs	r4, r2, #16
 802ea72:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 802ea76:	b292      	uxth	r2, r2
 802ea78:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 802ea7c:	f84e 2b04 	str.w	r2, [lr], #4
 802ea80:	1421      	asrs	r1, r4, #16
 802ea82:	e7e0      	b.n	802ea46 <__mdiff+0xca>
 802ea84:	3f01      	subs	r7, #1
 802ea86:	e7ea      	b.n	802ea5e <__mdiff+0xe2>
 802ea88:	08049bc7 	.word	0x08049bc7
 802ea8c:	08049bd8 	.word	0x08049bd8

0802ea90 <__d2b>:
 802ea90:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 802ea94:	4689      	mov	r9, r1
 802ea96:	2101      	movs	r1, #1
 802ea98:	ec57 6b10 	vmov	r6, r7, d0
 802ea9c:	4690      	mov	r8, r2
 802ea9e:	f7ff fccf 	bl	802e440 <_Balloc>
 802eaa2:	4604      	mov	r4, r0
 802eaa4:	b930      	cbnz	r0, 802eab4 <__d2b+0x24>
 802eaa6:	4602      	mov	r2, r0
 802eaa8:	4b25      	ldr	r3, [pc, #148]	; (802eb40 <__d2b+0xb0>)
 802eaaa:	4826      	ldr	r0, [pc, #152]	; (802eb44 <__d2b+0xb4>)
 802eaac:	f240 310a 	movw	r1, #778	; 0x30a
 802eab0:	f7fd fa88 	bl	802bfc4 <__assert_func>
 802eab4:	f3c7 550a 	ubfx	r5, r7, #20, #11
 802eab8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 802eabc:	bb35      	cbnz	r5, 802eb0c <__d2b+0x7c>
 802eabe:	2e00      	cmp	r6, #0
 802eac0:	9301      	str	r3, [sp, #4]
 802eac2:	d028      	beq.n	802eb16 <__d2b+0x86>
 802eac4:	4668      	mov	r0, sp
 802eac6:	9600      	str	r6, [sp, #0]
 802eac8:	f7ff fd82 	bl	802e5d0 <__lo0bits>
 802eacc:	9900      	ldr	r1, [sp, #0]
 802eace:	b300      	cbz	r0, 802eb12 <__d2b+0x82>
 802ead0:	9a01      	ldr	r2, [sp, #4]
 802ead2:	f1c0 0320 	rsb	r3, r0, #32
 802ead6:	fa02 f303 	lsl.w	r3, r2, r3
 802eada:	430b      	orrs	r3, r1
 802eadc:	40c2      	lsrs	r2, r0
 802eade:	6163      	str	r3, [r4, #20]
 802eae0:	9201      	str	r2, [sp, #4]
 802eae2:	9b01      	ldr	r3, [sp, #4]
 802eae4:	61a3      	str	r3, [r4, #24]
 802eae6:	2b00      	cmp	r3, #0
 802eae8:	bf14      	ite	ne
 802eaea:	2202      	movne	r2, #2
 802eaec:	2201      	moveq	r2, #1
 802eaee:	6122      	str	r2, [r4, #16]
 802eaf0:	b1d5      	cbz	r5, 802eb28 <__d2b+0x98>
 802eaf2:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 802eaf6:	4405      	add	r5, r0
 802eaf8:	f8c9 5000 	str.w	r5, [r9]
 802eafc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 802eb00:	f8c8 0000 	str.w	r0, [r8]
 802eb04:	4620      	mov	r0, r4
 802eb06:	b003      	add	sp, #12
 802eb08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802eb0c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 802eb10:	e7d5      	b.n	802eabe <__d2b+0x2e>
 802eb12:	6161      	str	r1, [r4, #20]
 802eb14:	e7e5      	b.n	802eae2 <__d2b+0x52>
 802eb16:	a801      	add	r0, sp, #4
 802eb18:	f7ff fd5a 	bl	802e5d0 <__lo0bits>
 802eb1c:	9b01      	ldr	r3, [sp, #4]
 802eb1e:	6163      	str	r3, [r4, #20]
 802eb20:	2201      	movs	r2, #1
 802eb22:	6122      	str	r2, [r4, #16]
 802eb24:	3020      	adds	r0, #32
 802eb26:	e7e3      	b.n	802eaf0 <__d2b+0x60>
 802eb28:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 802eb2c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 802eb30:	f8c9 0000 	str.w	r0, [r9]
 802eb34:	6918      	ldr	r0, [r3, #16]
 802eb36:	f7ff fd2b 	bl	802e590 <__hi0bits>
 802eb3a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 802eb3e:	e7df      	b.n	802eb00 <__d2b+0x70>
 802eb40:	08049bc7 	.word	0x08049bc7
 802eb44:	08049bd8 	.word	0x08049bd8

0802eb48 <_calloc_r>:
 802eb48:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802eb4a:	fba1 2402 	umull	r2, r4, r1, r2
 802eb4e:	b94c      	cbnz	r4, 802eb64 <_calloc_r+0x1c>
 802eb50:	4611      	mov	r1, r2
 802eb52:	9201      	str	r2, [sp, #4]
 802eb54:	f7fd fc30 	bl	802c3b8 <_malloc_r>
 802eb58:	9a01      	ldr	r2, [sp, #4]
 802eb5a:	4605      	mov	r5, r0
 802eb5c:	b930      	cbnz	r0, 802eb6c <_calloc_r+0x24>
 802eb5e:	4628      	mov	r0, r5
 802eb60:	b003      	add	sp, #12
 802eb62:	bd30      	pop	{r4, r5, pc}
 802eb64:	220c      	movs	r2, #12
 802eb66:	6002      	str	r2, [r0, #0]
 802eb68:	2500      	movs	r5, #0
 802eb6a:	e7f8      	b.n	802eb5e <_calloc_r+0x16>
 802eb6c:	4621      	mov	r1, r4
 802eb6e:	f7fd fbaf 	bl	802c2d0 <memset>
 802eb72:	e7f4      	b.n	802eb5e <_calloc_r+0x16>

0802eb74 <_read_r>:
 802eb74:	b538      	push	{r3, r4, r5, lr}
 802eb76:	4d07      	ldr	r5, [pc, #28]	; (802eb94 <_read_r+0x20>)
 802eb78:	4604      	mov	r4, r0
 802eb7a:	4608      	mov	r0, r1
 802eb7c:	4611      	mov	r1, r2
 802eb7e:	2200      	movs	r2, #0
 802eb80:	602a      	str	r2, [r5, #0]
 802eb82:	461a      	mov	r2, r3
 802eb84:	f7d4 fd38 	bl	80035f8 <_read>
 802eb88:	1c43      	adds	r3, r0, #1
 802eb8a:	d102      	bne.n	802eb92 <_read_r+0x1e>
 802eb8c:	682b      	ldr	r3, [r5, #0]
 802eb8e:	b103      	cbz	r3, 802eb92 <_read_r+0x1e>
 802eb90:	6023      	str	r3, [r4, #0]
 802eb92:	bd38      	pop	{r3, r4, r5, pc}
 802eb94:	2001e3f0 	.word	0x2001e3f0

0802eb98 <_fstat_r>:
 802eb98:	b538      	push	{r3, r4, r5, lr}
 802eb9a:	4d07      	ldr	r5, [pc, #28]	; (802ebb8 <_fstat_r+0x20>)
 802eb9c:	2300      	movs	r3, #0
 802eb9e:	4604      	mov	r4, r0
 802eba0:	4608      	mov	r0, r1
 802eba2:	4611      	mov	r1, r2
 802eba4:	602b      	str	r3, [r5, #0]
 802eba6:	f7d4 fd46 	bl	8003636 <_fstat>
 802ebaa:	1c43      	adds	r3, r0, #1
 802ebac:	d102      	bne.n	802ebb4 <_fstat_r+0x1c>
 802ebae:	682b      	ldr	r3, [r5, #0]
 802ebb0:	b103      	cbz	r3, 802ebb4 <_fstat_r+0x1c>
 802ebb2:	6023      	str	r3, [r4, #0]
 802ebb4:	bd38      	pop	{r3, r4, r5, pc}
 802ebb6:	bf00      	nop
 802ebb8:	2001e3f0 	.word	0x2001e3f0

0802ebbc <_isatty_r>:
 802ebbc:	b538      	push	{r3, r4, r5, lr}
 802ebbe:	4d06      	ldr	r5, [pc, #24]	; (802ebd8 <_isatty_r+0x1c>)
 802ebc0:	2300      	movs	r3, #0
 802ebc2:	4604      	mov	r4, r0
 802ebc4:	4608      	mov	r0, r1
 802ebc6:	602b      	str	r3, [r5, #0]
 802ebc8:	f7d4 fd3a 	bl	8003640 <_isatty>
 802ebcc:	1c43      	adds	r3, r0, #1
 802ebce:	d102      	bne.n	802ebd6 <_isatty_r+0x1a>
 802ebd0:	682b      	ldr	r3, [r5, #0]
 802ebd2:	b103      	cbz	r3, 802ebd6 <_isatty_r+0x1a>
 802ebd4:	6023      	str	r3, [r4, #0]
 802ebd6:	bd38      	pop	{r3, r4, r5, pc}
 802ebd8:	2001e3f0 	.word	0x2001e3f0

0802ebdc <__ascii_mbtowc>:
 802ebdc:	b082      	sub	sp, #8
 802ebde:	b901      	cbnz	r1, 802ebe2 <__ascii_mbtowc+0x6>
 802ebe0:	a901      	add	r1, sp, #4
 802ebe2:	b142      	cbz	r2, 802ebf6 <__ascii_mbtowc+0x1a>
 802ebe4:	b14b      	cbz	r3, 802ebfa <__ascii_mbtowc+0x1e>
 802ebe6:	7813      	ldrb	r3, [r2, #0]
 802ebe8:	600b      	str	r3, [r1, #0]
 802ebea:	7812      	ldrb	r2, [r2, #0]
 802ebec:	1e10      	subs	r0, r2, #0
 802ebee:	bf18      	it	ne
 802ebf0:	2001      	movne	r0, #1
 802ebf2:	b002      	add	sp, #8
 802ebf4:	4770      	bx	lr
 802ebf6:	4610      	mov	r0, r2
 802ebf8:	e7fb      	b.n	802ebf2 <__ascii_mbtowc+0x16>
 802ebfa:	f06f 0001 	mvn.w	r0, #1
 802ebfe:	e7f8      	b.n	802ebf2 <__ascii_mbtowc+0x16>

0802ec00 <__ascii_wctomb>:
 802ec00:	b149      	cbz	r1, 802ec16 <__ascii_wctomb+0x16>
 802ec02:	2aff      	cmp	r2, #255	; 0xff
 802ec04:	bf85      	ittet	hi
 802ec06:	238a      	movhi	r3, #138	; 0x8a
 802ec08:	6003      	strhi	r3, [r0, #0]
 802ec0a:	700a      	strbls	r2, [r1, #0]
 802ec0c:	f04f 30ff 	movhi.w	r0, #4294967295
 802ec10:	bf98      	it	ls
 802ec12:	2001      	movls	r0, #1
 802ec14:	4770      	bx	lr
 802ec16:	4608      	mov	r0, r1
 802ec18:	4770      	bx	lr
	...

0802ec1c <_init>:
 802ec1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ec1e:	bf00      	nop
 802ec20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ec22:	bc08      	pop	{r3}
 802ec24:	469e      	mov	lr, r3
 802ec26:	4770      	bx	lr

0802ec28 <_fini>:
 802ec28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ec2a:	bf00      	nop
 802ec2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ec2e:	bc08      	pop	{r3}
 802ec30:	469e      	mov	lr, r3
 802ec32:	4770      	bx	lr
