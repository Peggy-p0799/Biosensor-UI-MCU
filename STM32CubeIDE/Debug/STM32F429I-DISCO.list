
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002eab4  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0001b208  0802ec68  0802ec68  0003ec68  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002866  08049e70  08049e70  00059e70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000008c  0804c6d8  0804c6d8  0005c6d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000004b8  0804c764  0804c764  0005c764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00093158  0804cc1c  0804cc1c  0005cc1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080dfd74  080dfd74  000f02e8  2**0
                  CONTENTS
  8 .ARM          00000008  080dfd74  080dfd74  000efd74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080dfd7c  080dfd7c  000f02e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080dfd7c  080dfd7c  000efd7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080dfd90  080dfd90  000efd90  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         000002e8  20000000  080dfd98  000f0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001e19c  200002e8  080e0080  000f02e8  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  2001e484  080e0080  000fe484  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000f02e8  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00100000  2**2
                  ALLOC
 17 .debug_line   00084af7  00000000  00000000  000f0318  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   001f5afb  00000000  00000000  00174e0f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0002d387  00000000  00000000  0036a90a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000046e0  00000000  00000000  00397c98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    001260b4  00000000  00000000  0039c378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 0000bd78  00000000  00000000  004c2430  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    0004da43  00000000  00000000  004ce1a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  000395bd  00000000  00000000  0051bbeb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      0000013d  00000000  00000000  005551a8  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000c7c4  00000000  00000000  005552e8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200002e8 	.word	0x200002e8
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802ec4c 	.word	0x0802ec4c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200002ec 	.word	0x200002ec
 80001ec:	0802ec4c 	.word	0x0802ec4c

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <memchr>:
 80002c0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002c4:	2a10      	cmp	r2, #16
 80002c6:	db2b      	blt.n	8000320 <memchr+0x60>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	d008      	beq.n	80002e0 <memchr+0x20>
 80002ce:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002d2:	3a01      	subs	r2, #1
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d02d      	beq.n	8000334 <memchr+0x74>
 80002d8:	f010 0f07 	tst.w	r0, #7
 80002dc:	b342      	cbz	r2, 8000330 <memchr+0x70>
 80002de:	d1f6      	bne.n	80002ce <memchr+0xe>
 80002e0:	b4f0      	push	{r4, r5, r6, r7}
 80002e2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002e6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002ea:	f022 0407 	bic.w	r4, r2, #7
 80002ee:	f07f 0700 	mvns.w	r7, #0
 80002f2:	2300      	movs	r3, #0
 80002f4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002f8:	3c08      	subs	r4, #8
 80002fa:	ea85 0501 	eor.w	r5, r5, r1
 80002fe:	ea86 0601 	eor.w	r6, r6, r1
 8000302:	fa85 f547 	uadd8	r5, r5, r7
 8000306:	faa3 f587 	sel	r5, r3, r7
 800030a:	fa86 f647 	uadd8	r6, r6, r7
 800030e:	faa5 f687 	sel	r6, r5, r7
 8000312:	b98e      	cbnz	r6, 8000338 <memchr+0x78>
 8000314:	d1ee      	bne.n	80002f4 <memchr+0x34>
 8000316:	bcf0      	pop	{r4, r5, r6, r7}
 8000318:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800031c:	f002 0207 	and.w	r2, r2, #7
 8000320:	b132      	cbz	r2, 8000330 <memchr+0x70>
 8000322:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000326:	3a01      	subs	r2, #1
 8000328:	ea83 0301 	eor.w	r3, r3, r1
 800032c:	b113      	cbz	r3, 8000334 <memchr+0x74>
 800032e:	d1f8      	bne.n	8000322 <memchr+0x62>
 8000330:	2000      	movs	r0, #0
 8000332:	4770      	bx	lr
 8000334:	3801      	subs	r0, #1
 8000336:	4770      	bx	lr
 8000338:	2d00      	cmp	r5, #0
 800033a:	bf06      	itte	eq
 800033c:	4635      	moveq	r5, r6
 800033e:	3803      	subeq	r0, #3
 8000340:	3807      	subne	r0, #7
 8000342:	f015 0f01 	tst.w	r5, #1
 8000346:	d107      	bne.n	8000358 <memchr+0x98>
 8000348:	3001      	adds	r0, #1
 800034a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800034e:	bf02      	ittt	eq
 8000350:	3001      	addeq	r0, #1
 8000352:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000356:	3001      	addeq	r0, #1
 8000358:	bcf0      	pop	{r4, r5, r6, r7}
 800035a:	3801      	subs	r0, #1
 800035c:	4770      	bx	lr
 800035e:	bf00      	nop

08000360 <__aeabi_drsub>:
 8000360:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000364:	e002      	b.n	800036c <__adddf3>
 8000366:	bf00      	nop

08000368 <__aeabi_dsub>:
 8000368:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800036c <__adddf3>:
 800036c:	b530      	push	{r4, r5, lr}
 800036e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000372:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000376:	ea94 0f05 	teq	r4, r5
 800037a:	bf08      	it	eq
 800037c:	ea90 0f02 	teqeq	r0, r2
 8000380:	bf1f      	itttt	ne
 8000382:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000386:	ea55 0c02 	orrsne.w	ip, r5, r2
 800038a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800038e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000392:	f000 80e2 	beq.w	800055a <__adddf3+0x1ee>
 8000396:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800039a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800039e:	bfb8      	it	lt
 80003a0:	426d      	neglt	r5, r5
 80003a2:	dd0c      	ble.n	80003be <__adddf3+0x52>
 80003a4:	442c      	add	r4, r5
 80003a6:	ea80 0202 	eor.w	r2, r0, r2
 80003aa:	ea81 0303 	eor.w	r3, r1, r3
 80003ae:	ea82 0000 	eor.w	r0, r2, r0
 80003b2:	ea83 0101 	eor.w	r1, r3, r1
 80003b6:	ea80 0202 	eor.w	r2, r0, r2
 80003ba:	ea81 0303 	eor.w	r3, r1, r3
 80003be:	2d36      	cmp	r5, #54	; 0x36
 80003c0:	bf88      	it	hi
 80003c2:	bd30      	pophi	{r4, r5, pc}
 80003c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80003cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80003d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80003d4:	d002      	beq.n	80003dc <__adddf3+0x70>
 80003d6:	4240      	negs	r0, r0
 80003d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80003dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80003e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80003e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80003e8:	d002      	beq.n	80003f0 <__adddf3+0x84>
 80003ea:	4252      	negs	r2, r2
 80003ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80003f0:	ea94 0f05 	teq	r4, r5
 80003f4:	f000 80a7 	beq.w	8000546 <__adddf3+0x1da>
 80003f8:	f1a4 0401 	sub.w	r4, r4, #1
 80003fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000400:	db0d      	blt.n	800041e <__adddf3+0xb2>
 8000402:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000406:	fa22 f205 	lsr.w	r2, r2, r5
 800040a:	1880      	adds	r0, r0, r2
 800040c:	f141 0100 	adc.w	r1, r1, #0
 8000410:	fa03 f20e 	lsl.w	r2, r3, lr
 8000414:	1880      	adds	r0, r0, r2
 8000416:	fa43 f305 	asr.w	r3, r3, r5
 800041a:	4159      	adcs	r1, r3
 800041c:	e00e      	b.n	800043c <__adddf3+0xd0>
 800041e:	f1a5 0520 	sub.w	r5, r5, #32
 8000422:	f10e 0e20 	add.w	lr, lr, #32
 8000426:	2a01      	cmp	r2, #1
 8000428:	fa03 fc0e 	lsl.w	ip, r3, lr
 800042c:	bf28      	it	cs
 800042e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000432:	fa43 f305 	asr.w	r3, r3, r5
 8000436:	18c0      	adds	r0, r0, r3
 8000438:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800043c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000440:	d507      	bpl.n	8000452 <__adddf3+0xe6>
 8000442:	f04f 0e00 	mov.w	lr, #0
 8000446:	f1dc 0c00 	rsbs	ip, ip, #0
 800044a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800044e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000452:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000456:	d31b      	bcc.n	8000490 <__adddf3+0x124>
 8000458:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800045c:	d30c      	bcc.n	8000478 <__adddf3+0x10c>
 800045e:	0849      	lsrs	r1, r1, #1
 8000460:	ea5f 0030 	movs.w	r0, r0, rrx
 8000464:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000468:	f104 0401 	add.w	r4, r4, #1
 800046c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000470:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000474:	f080 809a 	bcs.w	80005ac <__adddf3+0x240>
 8000478:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800047c:	bf08      	it	eq
 800047e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000482:	f150 0000 	adcs.w	r0, r0, #0
 8000486:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800048a:	ea41 0105 	orr.w	r1, r1, r5
 800048e:	bd30      	pop	{r4, r5, pc}
 8000490:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000494:	4140      	adcs	r0, r0
 8000496:	eb41 0101 	adc.w	r1, r1, r1
 800049a:	3c01      	subs	r4, #1
 800049c:	bf28      	it	cs
 800049e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80004a2:	d2e9      	bcs.n	8000478 <__adddf3+0x10c>
 80004a4:	f091 0f00 	teq	r1, #0
 80004a8:	bf04      	itt	eq
 80004aa:	4601      	moveq	r1, r0
 80004ac:	2000      	moveq	r0, #0
 80004ae:	fab1 f381 	clz	r3, r1
 80004b2:	bf08      	it	eq
 80004b4:	3320      	addeq	r3, #32
 80004b6:	f1a3 030b 	sub.w	r3, r3, #11
 80004ba:	f1b3 0220 	subs.w	r2, r3, #32
 80004be:	da0c      	bge.n	80004da <__adddf3+0x16e>
 80004c0:	320c      	adds	r2, #12
 80004c2:	dd08      	ble.n	80004d6 <__adddf3+0x16a>
 80004c4:	f102 0c14 	add.w	ip, r2, #20
 80004c8:	f1c2 020c 	rsb	r2, r2, #12
 80004cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80004d0:	fa21 f102 	lsr.w	r1, r1, r2
 80004d4:	e00c      	b.n	80004f0 <__adddf3+0x184>
 80004d6:	f102 0214 	add.w	r2, r2, #20
 80004da:	bfd8      	it	le
 80004dc:	f1c2 0c20 	rsble	ip, r2, #32
 80004e0:	fa01 f102 	lsl.w	r1, r1, r2
 80004e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80004e8:	bfdc      	itt	le
 80004ea:	ea41 010c 	orrle.w	r1, r1, ip
 80004ee:	4090      	lslle	r0, r2
 80004f0:	1ae4      	subs	r4, r4, r3
 80004f2:	bfa2      	ittt	ge
 80004f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80004f8:	4329      	orrge	r1, r5
 80004fa:	bd30      	popge	{r4, r5, pc}
 80004fc:	ea6f 0404 	mvn.w	r4, r4
 8000500:	3c1f      	subs	r4, #31
 8000502:	da1c      	bge.n	800053e <__adddf3+0x1d2>
 8000504:	340c      	adds	r4, #12
 8000506:	dc0e      	bgt.n	8000526 <__adddf3+0x1ba>
 8000508:	f104 0414 	add.w	r4, r4, #20
 800050c:	f1c4 0220 	rsb	r2, r4, #32
 8000510:	fa20 f004 	lsr.w	r0, r0, r4
 8000514:	fa01 f302 	lsl.w	r3, r1, r2
 8000518:	ea40 0003 	orr.w	r0, r0, r3
 800051c:	fa21 f304 	lsr.w	r3, r1, r4
 8000520:	ea45 0103 	orr.w	r1, r5, r3
 8000524:	bd30      	pop	{r4, r5, pc}
 8000526:	f1c4 040c 	rsb	r4, r4, #12
 800052a:	f1c4 0220 	rsb	r2, r4, #32
 800052e:	fa20 f002 	lsr.w	r0, r0, r2
 8000532:	fa01 f304 	lsl.w	r3, r1, r4
 8000536:	ea40 0003 	orr.w	r0, r0, r3
 800053a:	4629      	mov	r1, r5
 800053c:	bd30      	pop	{r4, r5, pc}
 800053e:	fa21 f004 	lsr.w	r0, r1, r4
 8000542:	4629      	mov	r1, r5
 8000544:	bd30      	pop	{r4, r5, pc}
 8000546:	f094 0f00 	teq	r4, #0
 800054a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800054e:	bf06      	itte	eq
 8000550:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000554:	3401      	addeq	r4, #1
 8000556:	3d01      	subne	r5, #1
 8000558:	e74e      	b.n	80003f8 <__adddf3+0x8c>
 800055a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800055e:	bf18      	it	ne
 8000560:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000564:	d029      	beq.n	80005ba <__adddf3+0x24e>
 8000566:	ea94 0f05 	teq	r4, r5
 800056a:	bf08      	it	eq
 800056c:	ea90 0f02 	teqeq	r0, r2
 8000570:	d005      	beq.n	800057e <__adddf3+0x212>
 8000572:	ea54 0c00 	orrs.w	ip, r4, r0
 8000576:	bf04      	itt	eq
 8000578:	4619      	moveq	r1, r3
 800057a:	4610      	moveq	r0, r2
 800057c:	bd30      	pop	{r4, r5, pc}
 800057e:	ea91 0f03 	teq	r1, r3
 8000582:	bf1e      	ittt	ne
 8000584:	2100      	movne	r1, #0
 8000586:	2000      	movne	r0, #0
 8000588:	bd30      	popne	{r4, r5, pc}
 800058a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800058e:	d105      	bne.n	800059c <__adddf3+0x230>
 8000590:	0040      	lsls	r0, r0, #1
 8000592:	4149      	adcs	r1, r1
 8000594:	bf28      	it	cs
 8000596:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800059a:	bd30      	pop	{r4, r5, pc}
 800059c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80005a0:	bf3c      	itt	cc
 80005a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80005a6:	bd30      	popcc	{r4, r5, pc}
 80005a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005b4:	f04f 0000 	mov.w	r0, #0
 80005b8:	bd30      	pop	{r4, r5, pc}
 80005ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005be:	bf1a      	itte	ne
 80005c0:	4619      	movne	r1, r3
 80005c2:	4610      	movne	r0, r2
 80005c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80005c8:	bf1c      	itt	ne
 80005ca:	460b      	movne	r3, r1
 80005cc:	4602      	movne	r2, r0
 80005ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80005d2:	bf06      	itte	eq
 80005d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80005d8:	ea91 0f03 	teqeq	r1, r3
 80005dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80005e0:	bd30      	pop	{r4, r5, pc}
 80005e2:	bf00      	nop

080005e4 <__aeabi_ui2d>:
 80005e4:	f090 0f00 	teq	r0, #0
 80005e8:	bf04      	itt	eq
 80005ea:	2100      	moveq	r1, #0
 80005ec:	4770      	bxeq	lr
 80005ee:	b530      	push	{r4, r5, lr}
 80005f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005f8:	f04f 0500 	mov.w	r5, #0
 80005fc:	f04f 0100 	mov.w	r1, #0
 8000600:	e750      	b.n	80004a4 <__adddf3+0x138>
 8000602:	bf00      	nop

08000604 <__aeabi_i2d>:
 8000604:	f090 0f00 	teq	r0, #0
 8000608:	bf04      	itt	eq
 800060a:	2100      	moveq	r1, #0
 800060c:	4770      	bxeq	lr
 800060e:	b530      	push	{r4, r5, lr}
 8000610:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000614:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000618:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800061c:	bf48      	it	mi
 800061e:	4240      	negmi	r0, r0
 8000620:	f04f 0100 	mov.w	r1, #0
 8000624:	e73e      	b.n	80004a4 <__adddf3+0x138>
 8000626:	bf00      	nop

08000628 <__aeabi_f2d>:
 8000628:	0042      	lsls	r2, r0, #1
 800062a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800062e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000632:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000636:	bf1f      	itttt	ne
 8000638:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800063c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000640:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000644:	4770      	bxne	lr
 8000646:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800064a:	bf08      	it	eq
 800064c:	4770      	bxeq	lr
 800064e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000652:	bf04      	itt	eq
 8000654:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000658:	4770      	bxeq	lr
 800065a:	b530      	push	{r4, r5, lr}
 800065c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000660:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000664:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000668:	e71c      	b.n	80004a4 <__adddf3+0x138>
 800066a:	bf00      	nop

0800066c <__aeabi_ul2d>:
 800066c:	ea50 0201 	orrs.w	r2, r0, r1
 8000670:	bf08      	it	eq
 8000672:	4770      	bxeq	lr
 8000674:	b530      	push	{r4, r5, lr}
 8000676:	f04f 0500 	mov.w	r5, #0
 800067a:	e00a      	b.n	8000692 <__aeabi_l2d+0x16>

0800067c <__aeabi_l2d>:
 800067c:	ea50 0201 	orrs.w	r2, r0, r1
 8000680:	bf08      	it	eq
 8000682:	4770      	bxeq	lr
 8000684:	b530      	push	{r4, r5, lr}
 8000686:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800068a:	d502      	bpl.n	8000692 <__aeabi_l2d+0x16>
 800068c:	4240      	negs	r0, r0
 800068e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000692:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000696:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800069a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800069e:	f43f aed8 	beq.w	8000452 <__adddf3+0xe6>
 80006a2:	f04f 0203 	mov.w	r2, #3
 80006a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006aa:	bf18      	it	ne
 80006ac:	3203      	addne	r2, #3
 80006ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006b2:	bf18      	it	ne
 80006b4:	3203      	addne	r2, #3
 80006b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006ba:	f1c2 0320 	rsb	r3, r2, #32
 80006be:	fa00 fc03 	lsl.w	ip, r0, r3
 80006c2:	fa20 f002 	lsr.w	r0, r0, r2
 80006c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80006ca:	ea40 000e 	orr.w	r0, r0, lr
 80006ce:	fa21 f102 	lsr.w	r1, r1, r2
 80006d2:	4414      	add	r4, r2
 80006d4:	e6bd      	b.n	8000452 <__adddf3+0xe6>
 80006d6:	bf00      	nop

080006d8 <__aeabi_dmul>:
 80006d8:	b570      	push	{r4, r5, r6, lr}
 80006da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80006de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80006e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80006e6:	bf1d      	ittte	ne
 80006e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80006ec:	ea94 0f0c 	teqne	r4, ip
 80006f0:	ea95 0f0c 	teqne	r5, ip
 80006f4:	f000 f8de 	bleq	80008b4 <__aeabi_dmul+0x1dc>
 80006f8:	442c      	add	r4, r5
 80006fa:	ea81 0603 	eor.w	r6, r1, r3
 80006fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000702:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000706:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800070a:	bf18      	it	ne
 800070c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000710:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000714:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000718:	d038      	beq.n	800078c <__aeabi_dmul+0xb4>
 800071a:	fba0 ce02 	umull	ip, lr, r0, r2
 800071e:	f04f 0500 	mov.w	r5, #0
 8000722:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000726:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800072a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800072e:	f04f 0600 	mov.w	r6, #0
 8000732:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000736:	f09c 0f00 	teq	ip, #0
 800073a:	bf18      	it	ne
 800073c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000740:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000744:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000748:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800074c:	d204      	bcs.n	8000758 <__aeabi_dmul+0x80>
 800074e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000752:	416d      	adcs	r5, r5
 8000754:	eb46 0606 	adc.w	r6, r6, r6
 8000758:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800075c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000760:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000764:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000768:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800076c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000770:	bf88      	it	hi
 8000772:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000776:	d81e      	bhi.n	80007b6 <__aeabi_dmul+0xde>
 8000778:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800077c:	bf08      	it	eq
 800077e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000782:	f150 0000 	adcs.w	r0, r0, #0
 8000786:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000790:	ea46 0101 	orr.w	r1, r6, r1
 8000794:	ea40 0002 	orr.w	r0, r0, r2
 8000798:	ea81 0103 	eor.w	r1, r1, r3
 800079c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80007a0:	bfc2      	ittt	gt
 80007a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80007a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80007aa:	bd70      	popgt	{r4, r5, r6, pc}
 80007ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80007b0:	f04f 0e00 	mov.w	lr, #0
 80007b4:	3c01      	subs	r4, #1
 80007b6:	f300 80ab 	bgt.w	8000910 <__aeabi_dmul+0x238>
 80007ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80007be:	bfde      	ittt	le
 80007c0:	2000      	movle	r0, #0
 80007c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80007c6:	bd70      	pople	{r4, r5, r6, pc}
 80007c8:	f1c4 0400 	rsb	r4, r4, #0
 80007cc:	3c20      	subs	r4, #32
 80007ce:	da35      	bge.n	800083c <__aeabi_dmul+0x164>
 80007d0:	340c      	adds	r4, #12
 80007d2:	dc1b      	bgt.n	800080c <__aeabi_dmul+0x134>
 80007d4:	f104 0414 	add.w	r4, r4, #20
 80007d8:	f1c4 0520 	rsb	r5, r4, #32
 80007dc:	fa00 f305 	lsl.w	r3, r0, r5
 80007e0:	fa20 f004 	lsr.w	r0, r0, r4
 80007e4:	fa01 f205 	lsl.w	r2, r1, r5
 80007e8:	ea40 0002 	orr.w	r0, r0, r2
 80007ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80007f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80007f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007f8:	fa21 f604 	lsr.w	r6, r1, r4
 80007fc:	eb42 0106 	adc.w	r1, r2, r6
 8000800:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000804:	bf08      	it	eq
 8000806:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800080a:	bd70      	pop	{r4, r5, r6, pc}
 800080c:	f1c4 040c 	rsb	r4, r4, #12
 8000810:	f1c4 0520 	rsb	r5, r4, #32
 8000814:	fa00 f304 	lsl.w	r3, r0, r4
 8000818:	fa20 f005 	lsr.w	r0, r0, r5
 800081c:	fa01 f204 	lsl.w	r2, r1, r4
 8000820:	ea40 0002 	orr.w	r0, r0, r2
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000828:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800082c:	f141 0100 	adc.w	r1, r1, #0
 8000830:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000834:	bf08      	it	eq
 8000836:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800083a:	bd70      	pop	{r4, r5, r6, pc}
 800083c:	f1c4 0520 	rsb	r5, r4, #32
 8000840:	fa00 f205 	lsl.w	r2, r0, r5
 8000844:	ea4e 0e02 	orr.w	lr, lr, r2
 8000848:	fa20 f304 	lsr.w	r3, r0, r4
 800084c:	fa01 f205 	lsl.w	r2, r1, r5
 8000850:	ea43 0302 	orr.w	r3, r3, r2
 8000854:	fa21 f004 	lsr.w	r0, r1, r4
 8000858:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800085c:	fa21 f204 	lsr.w	r2, r1, r4
 8000860:	ea20 0002 	bic.w	r0, r0, r2
 8000864:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000868:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800086c:	bf08      	it	eq
 800086e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000872:	bd70      	pop	{r4, r5, r6, pc}
 8000874:	f094 0f00 	teq	r4, #0
 8000878:	d10f      	bne.n	800089a <__aeabi_dmul+0x1c2>
 800087a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800087e:	0040      	lsls	r0, r0, #1
 8000880:	eb41 0101 	adc.w	r1, r1, r1
 8000884:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000888:	bf08      	it	eq
 800088a:	3c01      	subeq	r4, #1
 800088c:	d0f7      	beq.n	800087e <__aeabi_dmul+0x1a6>
 800088e:	ea41 0106 	orr.w	r1, r1, r6
 8000892:	f095 0f00 	teq	r5, #0
 8000896:	bf18      	it	ne
 8000898:	4770      	bxne	lr
 800089a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800089e:	0052      	lsls	r2, r2, #1
 80008a0:	eb43 0303 	adc.w	r3, r3, r3
 80008a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80008a8:	bf08      	it	eq
 80008aa:	3d01      	subeq	r5, #1
 80008ac:	d0f7      	beq.n	800089e <__aeabi_dmul+0x1c6>
 80008ae:	ea43 0306 	orr.w	r3, r3, r6
 80008b2:	4770      	bx	lr
 80008b4:	ea94 0f0c 	teq	r4, ip
 80008b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008bc:	bf18      	it	ne
 80008be:	ea95 0f0c 	teqne	r5, ip
 80008c2:	d00c      	beq.n	80008de <__aeabi_dmul+0x206>
 80008c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008c8:	bf18      	it	ne
 80008ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008ce:	d1d1      	bne.n	8000874 <__aeabi_dmul+0x19c>
 80008d0:	ea81 0103 	eor.w	r1, r1, r3
 80008d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80008d8:	f04f 0000 	mov.w	r0, #0
 80008dc:	bd70      	pop	{r4, r5, r6, pc}
 80008de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e2:	bf06      	itte	eq
 80008e4:	4610      	moveq	r0, r2
 80008e6:	4619      	moveq	r1, r3
 80008e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008ec:	d019      	beq.n	8000922 <__aeabi_dmul+0x24a>
 80008ee:	ea94 0f0c 	teq	r4, ip
 80008f2:	d102      	bne.n	80008fa <__aeabi_dmul+0x222>
 80008f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80008f8:	d113      	bne.n	8000922 <__aeabi_dmul+0x24a>
 80008fa:	ea95 0f0c 	teq	r5, ip
 80008fe:	d105      	bne.n	800090c <__aeabi_dmul+0x234>
 8000900:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000904:	bf1c      	itt	ne
 8000906:	4610      	movne	r0, r2
 8000908:	4619      	movne	r1, r3
 800090a:	d10a      	bne.n	8000922 <__aeabi_dmul+0x24a>
 800090c:	ea81 0103 	eor.w	r1, r1, r3
 8000910:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000914:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000918:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800091c:	f04f 0000 	mov.w	r0, #0
 8000920:	bd70      	pop	{r4, r5, r6, pc}
 8000922:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000926:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800092a:	bd70      	pop	{r4, r5, r6, pc}

0800092c <__aeabi_ddiv>:
 800092c:	b570      	push	{r4, r5, r6, lr}
 800092e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000932:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000936:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800093a:	bf1d      	ittte	ne
 800093c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000940:	ea94 0f0c 	teqne	r4, ip
 8000944:	ea95 0f0c 	teqne	r5, ip
 8000948:	f000 f8a7 	bleq	8000a9a <__aeabi_ddiv+0x16e>
 800094c:	eba4 0405 	sub.w	r4, r4, r5
 8000950:	ea81 0e03 	eor.w	lr, r1, r3
 8000954:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000958:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800095c:	f000 8088 	beq.w	8000a70 <__aeabi_ddiv+0x144>
 8000960:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000964:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000968:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800096c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000970:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000974:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000978:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800097c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000980:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000984:	429d      	cmp	r5, r3
 8000986:	bf08      	it	eq
 8000988:	4296      	cmpeq	r6, r2
 800098a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800098e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000992:	d202      	bcs.n	800099a <__aeabi_ddiv+0x6e>
 8000994:	085b      	lsrs	r3, r3, #1
 8000996:	ea4f 0232 	mov.w	r2, r2, rrx
 800099a:	1ab6      	subs	r6, r6, r2
 800099c:	eb65 0503 	sbc.w	r5, r5, r3
 80009a0:	085b      	lsrs	r3, r3, #1
 80009a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80009aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80009ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80009b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009b6:	bf22      	ittt	cs
 80009b8:	1ab6      	subcs	r6, r6, r2
 80009ba:	4675      	movcs	r5, lr
 80009bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80009c0:	085b      	lsrs	r3, r3, #1
 80009c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80009ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009ce:	bf22      	ittt	cs
 80009d0:	1ab6      	subcs	r6, r6, r2
 80009d2:	4675      	movcs	r5, lr
 80009d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80009d8:	085b      	lsrs	r3, r3, #1
 80009da:	ea4f 0232 	mov.w	r2, r2, rrx
 80009de:	ebb6 0e02 	subs.w	lr, r6, r2
 80009e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009e6:	bf22      	ittt	cs
 80009e8:	1ab6      	subcs	r6, r6, r2
 80009ea:	4675      	movcs	r5, lr
 80009ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80009f0:	085b      	lsrs	r3, r3, #1
 80009f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80009fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009fe:	bf22      	ittt	cs
 8000a00:	1ab6      	subcs	r6, r6, r2
 8000a02:	4675      	movcs	r5, lr
 8000a04:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000a08:	ea55 0e06 	orrs.w	lr, r5, r6
 8000a0c:	d018      	beq.n	8000a40 <__aeabi_ddiv+0x114>
 8000a0e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000a12:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000a16:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000a1a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000a1e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000a22:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000a26:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000a2a:	d1c0      	bne.n	80009ae <__aeabi_ddiv+0x82>
 8000a2c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a30:	d10b      	bne.n	8000a4a <__aeabi_ddiv+0x11e>
 8000a32:	ea41 0100 	orr.w	r1, r1, r0
 8000a36:	f04f 0000 	mov.w	r0, #0
 8000a3a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000a3e:	e7b6      	b.n	80009ae <__aeabi_ddiv+0x82>
 8000a40:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a44:	bf04      	itt	eq
 8000a46:	4301      	orreq	r1, r0
 8000a48:	2000      	moveq	r0, #0
 8000a4a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000a4e:	bf88      	it	hi
 8000a50:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000a54:	f63f aeaf 	bhi.w	80007b6 <__aeabi_dmul+0xde>
 8000a58:	ebb5 0c03 	subs.w	ip, r5, r3
 8000a5c:	bf04      	itt	eq
 8000a5e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000a62:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000a66:	f150 0000 	adcs.w	r0, r0, #0
 8000a6a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000a6e:	bd70      	pop	{r4, r5, r6, pc}
 8000a70:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000a74:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000a78:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000a7c:	bfc2      	ittt	gt
 8000a7e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000a82:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a86:	bd70      	popgt	{r4, r5, r6, pc}
 8000a88:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a8c:	f04f 0e00 	mov.w	lr, #0
 8000a90:	3c01      	subs	r4, #1
 8000a92:	e690      	b.n	80007b6 <__aeabi_dmul+0xde>
 8000a94:	ea45 0e06 	orr.w	lr, r5, r6
 8000a98:	e68d      	b.n	80007b6 <__aeabi_dmul+0xde>
 8000a9a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a9e:	ea94 0f0c 	teq	r4, ip
 8000aa2:	bf08      	it	eq
 8000aa4:	ea95 0f0c 	teqeq	r5, ip
 8000aa8:	f43f af3b 	beq.w	8000922 <__aeabi_dmul+0x24a>
 8000aac:	ea94 0f0c 	teq	r4, ip
 8000ab0:	d10a      	bne.n	8000ac8 <__aeabi_ddiv+0x19c>
 8000ab2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000ab6:	f47f af34 	bne.w	8000922 <__aeabi_dmul+0x24a>
 8000aba:	ea95 0f0c 	teq	r5, ip
 8000abe:	f47f af25 	bne.w	800090c <__aeabi_dmul+0x234>
 8000ac2:	4610      	mov	r0, r2
 8000ac4:	4619      	mov	r1, r3
 8000ac6:	e72c      	b.n	8000922 <__aeabi_dmul+0x24a>
 8000ac8:	ea95 0f0c 	teq	r5, ip
 8000acc:	d106      	bne.n	8000adc <__aeabi_ddiv+0x1b0>
 8000ace:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000ad2:	f43f aefd 	beq.w	80008d0 <__aeabi_dmul+0x1f8>
 8000ad6:	4610      	mov	r0, r2
 8000ad8:	4619      	mov	r1, r3
 8000ada:	e722      	b.n	8000922 <__aeabi_dmul+0x24a>
 8000adc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000ae0:	bf18      	it	ne
 8000ae2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000ae6:	f47f aec5 	bne.w	8000874 <__aeabi_dmul+0x19c>
 8000aea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000aee:	f47f af0d 	bne.w	800090c <__aeabi_dmul+0x234>
 8000af2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000af6:	f47f aeeb 	bne.w	80008d0 <__aeabi_dmul+0x1f8>
 8000afa:	e712      	b.n	8000922 <__aeabi_dmul+0x24a>

08000afc <__gedf2>:
 8000afc:	f04f 3cff 	mov.w	ip, #4294967295
 8000b00:	e006      	b.n	8000b10 <__cmpdf2+0x4>
 8000b02:	bf00      	nop

08000b04 <__ledf2>:
 8000b04:	f04f 0c01 	mov.w	ip, #1
 8000b08:	e002      	b.n	8000b10 <__cmpdf2+0x4>
 8000b0a:	bf00      	nop

08000b0c <__cmpdf2>:
 8000b0c:	f04f 0c01 	mov.w	ip, #1
 8000b10:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000b14:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b18:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b20:	bf18      	it	ne
 8000b22:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000b26:	d01b      	beq.n	8000b60 <__cmpdf2+0x54>
 8000b28:	b001      	add	sp, #4
 8000b2a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000b2e:	bf0c      	ite	eq
 8000b30:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000b34:	ea91 0f03 	teqne	r1, r3
 8000b38:	bf02      	ittt	eq
 8000b3a:	ea90 0f02 	teqeq	r0, r2
 8000b3e:	2000      	moveq	r0, #0
 8000b40:	4770      	bxeq	lr
 8000b42:	f110 0f00 	cmn.w	r0, #0
 8000b46:	ea91 0f03 	teq	r1, r3
 8000b4a:	bf58      	it	pl
 8000b4c:	4299      	cmppl	r1, r3
 8000b4e:	bf08      	it	eq
 8000b50:	4290      	cmpeq	r0, r2
 8000b52:	bf2c      	ite	cs
 8000b54:	17d8      	asrcs	r0, r3, #31
 8000b56:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000b5a:	f040 0001 	orr.w	r0, r0, #1
 8000b5e:	4770      	bx	lr
 8000b60:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b64:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b68:	d102      	bne.n	8000b70 <__cmpdf2+0x64>
 8000b6a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b6e:	d107      	bne.n	8000b80 <__cmpdf2+0x74>
 8000b70:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b74:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b78:	d1d6      	bne.n	8000b28 <__cmpdf2+0x1c>
 8000b7a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b7e:	d0d3      	beq.n	8000b28 <__cmpdf2+0x1c>
 8000b80:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop

08000b88 <__aeabi_cdrcmple>:
 8000b88:	4684      	mov	ip, r0
 8000b8a:	4610      	mov	r0, r2
 8000b8c:	4662      	mov	r2, ip
 8000b8e:	468c      	mov	ip, r1
 8000b90:	4619      	mov	r1, r3
 8000b92:	4663      	mov	r3, ip
 8000b94:	e000      	b.n	8000b98 <__aeabi_cdcmpeq>
 8000b96:	bf00      	nop

08000b98 <__aeabi_cdcmpeq>:
 8000b98:	b501      	push	{r0, lr}
 8000b9a:	f7ff ffb7 	bl	8000b0c <__cmpdf2>
 8000b9e:	2800      	cmp	r0, #0
 8000ba0:	bf48      	it	mi
 8000ba2:	f110 0f00 	cmnmi.w	r0, #0
 8000ba6:	bd01      	pop	{r0, pc}

08000ba8 <__aeabi_dcmpeq>:
 8000ba8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bac:	f7ff fff4 	bl	8000b98 <__aeabi_cdcmpeq>
 8000bb0:	bf0c      	ite	eq
 8000bb2:	2001      	moveq	r0, #1
 8000bb4:	2000      	movne	r0, #0
 8000bb6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bba:	bf00      	nop

08000bbc <__aeabi_dcmplt>:
 8000bbc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bc0:	f7ff ffea 	bl	8000b98 <__aeabi_cdcmpeq>
 8000bc4:	bf34      	ite	cc
 8000bc6:	2001      	movcc	r0, #1
 8000bc8:	2000      	movcs	r0, #0
 8000bca:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bce:	bf00      	nop

08000bd0 <__aeabi_dcmple>:
 8000bd0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bd4:	f7ff ffe0 	bl	8000b98 <__aeabi_cdcmpeq>
 8000bd8:	bf94      	ite	ls
 8000bda:	2001      	movls	r0, #1
 8000bdc:	2000      	movhi	r0, #0
 8000bde:	f85d fb08 	ldr.w	pc, [sp], #8
 8000be2:	bf00      	nop

08000be4 <__aeabi_dcmpge>:
 8000be4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000be8:	f7ff ffce 	bl	8000b88 <__aeabi_cdrcmple>
 8000bec:	bf94      	ite	ls
 8000bee:	2001      	movls	r0, #1
 8000bf0:	2000      	movhi	r0, #0
 8000bf2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bf6:	bf00      	nop

08000bf8 <__aeabi_dcmpgt>:
 8000bf8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bfc:	f7ff ffc4 	bl	8000b88 <__aeabi_cdrcmple>
 8000c00:	bf34      	ite	cc
 8000c02:	2001      	movcc	r0, #1
 8000c04:	2000      	movcs	r0, #0
 8000c06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c0a:	bf00      	nop

08000c0c <__aeabi_dcmpun>:
 8000c0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000c10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c14:	d102      	bne.n	8000c1c <__aeabi_dcmpun+0x10>
 8000c16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000c1a:	d10a      	bne.n	8000c32 <__aeabi_dcmpun+0x26>
 8000c1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000c20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c24:	d102      	bne.n	8000c2c <__aeabi_dcmpun+0x20>
 8000c26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000c2a:	d102      	bne.n	8000c32 <__aeabi_dcmpun+0x26>
 8000c2c:	f04f 0000 	mov.w	r0, #0
 8000c30:	4770      	bx	lr
 8000c32:	f04f 0001 	mov.w	r0, #1
 8000c36:	4770      	bx	lr

08000c38 <__aeabi_d2iz>:
 8000c38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000c40:	d215      	bcs.n	8000c6e <__aeabi_d2iz+0x36>
 8000c42:	d511      	bpl.n	8000c68 <__aeabi_d2iz+0x30>
 8000c44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000c48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c4c:	d912      	bls.n	8000c74 <__aeabi_d2iz+0x3c>
 8000c4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000c5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000c62:	bf18      	it	ne
 8000c64:	4240      	negne	r0, r0
 8000c66:	4770      	bx	lr
 8000c68:	f04f 0000 	mov.w	r0, #0
 8000c6c:	4770      	bx	lr
 8000c6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c72:	d105      	bne.n	8000c80 <__aeabi_d2iz+0x48>
 8000c74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000c78:	bf08      	it	eq
 8000c7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000c7e:	4770      	bx	lr
 8000c80:	f04f 0000 	mov.w	r0, #0
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_d2uiz>:
 8000c88:	004a      	lsls	r2, r1, #1
 8000c8a:	d211      	bcs.n	8000cb0 <__aeabi_d2uiz+0x28>
 8000c8c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000c90:	d211      	bcs.n	8000cb6 <__aeabi_d2uiz+0x2e>
 8000c92:	d50d      	bpl.n	8000cb0 <__aeabi_d2uiz+0x28>
 8000c94:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000c98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c9c:	d40e      	bmi.n	8000cbc <__aeabi_d2uiz+0x34>
 8000c9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ca2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ca6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000caa:	fa23 f002 	lsr.w	r0, r3, r2
 8000cae:	4770      	bx	lr
 8000cb0:	f04f 0000 	mov.w	r0, #0
 8000cb4:	4770      	bx	lr
 8000cb6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000cba:	d102      	bne.n	8000cc2 <__aeabi_d2uiz+0x3a>
 8000cbc:	f04f 30ff 	mov.w	r0, #4294967295
 8000cc0:	4770      	bx	lr
 8000cc2:	f04f 0000 	mov.w	r0, #0
 8000cc6:	4770      	bx	lr

08000cc8 <__aeabi_d2f>:
 8000cc8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ccc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000cd0:	bf24      	itt	cs
 8000cd2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000cd6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000cda:	d90d      	bls.n	8000cf8 <__aeabi_d2f+0x30>
 8000cdc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ce0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ce4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ce8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000cec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000cf0:	bf08      	it	eq
 8000cf2:	f020 0001 	biceq.w	r0, r0, #1
 8000cf6:	4770      	bx	lr
 8000cf8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000cfc:	d121      	bne.n	8000d42 <__aeabi_d2f+0x7a>
 8000cfe:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000d02:	bfbc      	itt	lt
 8000d04:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000d08:	4770      	bxlt	lr
 8000d0a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000d0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000d12:	f1c2 0218 	rsb	r2, r2, #24
 8000d16:	f1c2 0c20 	rsb	ip, r2, #32
 8000d1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000d1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000d22:	bf18      	it	ne
 8000d24:	f040 0001 	orrne.w	r0, r0, #1
 8000d28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000d2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000d30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000d34:	ea40 000c 	orr.w	r0, r0, ip
 8000d38:	fa23 f302 	lsr.w	r3, r3, r2
 8000d3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000d40:	e7cc      	b.n	8000cdc <__aeabi_d2f+0x14>
 8000d42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000d46:	d107      	bne.n	8000d58 <__aeabi_d2f+0x90>
 8000d48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000d4c:	bf1e      	ittt	ne
 8000d4e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000d52:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000d56:	4770      	bxne	lr
 8000d58:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000d5c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000d60:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000d64:	4770      	bx	lr
 8000d66:	bf00      	nop

08000d68 <__aeabi_uldivmod>:
 8000d68:	b953      	cbnz	r3, 8000d80 <__aeabi_uldivmod+0x18>
 8000d6a:	b94a      	cbnz	r2, 8000d80 <__aeabi_uldivmod+0x18>
 8000d6c:	2900      	cmp	r1, #0
 8000d6e:	bf08      	it	eq
 8000d70:	2800      	cmpeq	r0, #0
 8000d72:	bf1c      	itt	ne
 8000d74:	f04f 31ff 	movne.w	r1, #4294967295
 8000d78:	f04f 30ff 	movne.w	r0, #4294967295
 8000d7c:	f000 b974 	b.w	8001068 <__aeabi_idiv0>
 8000d80:	f1ad 0c08 	sub.w	ip, sp, #8
 8000d84:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000d88:	f000 f806 	bl	8000d98 <__udivmoddi4>
 8000d8c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d90:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d94:	b004      	add	sp, #16
 8000d96:	4770      	bx	lr

08000d98 <__udivmoddi4>:
 8000d98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d9c:	9d08      	ldr	r5, [sp, #32]
 8000d9e:	4604      	mov	r4, r0
 8000da0:	468e      	mov	lr, r1
 8000da2:	2b00      	cmp	r3, #0
 8000da4:	d14d      	bne.n	8000e42 <__udivmoddi4+0xaa>
 8000da6:	428a      	cmp	r2, r1
 8000da8:	4694      	mov	ip, r2
 8000daa:	d969      	bls.n	8000e80 <__udivmoddi4+0xe8>
 8000dac:	fab2 f282 	clz	r2, r2
 8000db0:	b152      	cbz	r2, 8000dc8 <__udivmoddi4+0x30>
 8000db2:	fa01 f302 	lsl.w	r3, r1, r2
 8000db6:	f1c2 0120 	rsb	r1, r2, #32
 8000dba:	fa20 f101 	lsr.w	r1, r0, r1
 8000dbe:	fa0c fc02 	lsl.w	ip, ip, r2
 8000dc2:	ea41 0e03 	orr.w	lr, r1, r3
 8000dc6:	4094      	lsls	r4, r2
 8000dc8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000dcc:	0c21      	lsrs	r1, r4, #16
 8000dce:	fbbe f6f8 	udiv	r6, lr, r8
 8000dd2:	fa1f f78c 	uxth.w	r7, ip
 8000dd6:	fb08 e316 	mls	r3, r8, r6, lr
 8000dda:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000dde:	fb06 f107 	mul.w	r1, r6, r7
 8000de2:	4299      	cmp	r1, r3
 8000de4:	d90a      	bls.n	8000dfc <__udivmoddi4+0x64>
 8000de6:	eb1c 0303 	adds.w	r3, ip, r3
 8000dea:	f106 30ff 	add.w	r0, r6, #4294967295
 8000dee:	f080 811f 	bcs.w	8001030 <__udivmoddi4+0x298>
 8000df2:	4299      	cmp	r1, r3
 8000df4:	f240 811c 	bls.w	8001030 <__udivmoddi4+0x298>
 8000df8:	3e02      	subs	r6, #2
 8000dfa:	4463      	add	r3, ip
 8000dfc:	1a5b      	subs	r3, r3, r1
 8000dfe:	b2a4      	uxth	r4, r4
 8000e00:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e04:	fb08 3310 	mls	r3, r8, r0, r3
 8000e08:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e0c:	fb00 f707 	mul.w	r7, r0, r7
 8000e10:	42a7      	cmp	r7, r4
 8000e12:	d90a      	bls.n	8000e2a <__udivmoddi4+0x92>
 8000e14:	eb1c 0404 	adds.w	r4, ip, r4
 8000e18:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e1c:	f080 810a 	bcs.w	8001034 <__udivmoddi4+0x29c>
 8000e20:	42a7      	cmp	r7, r4
 8000e22:	f240 8107 	bls.w	8001034 <__udivmoddi4+0x29c>
 8000e26:	4464      	add	r4, ip
 8000e28:	3802      	subs	r0, #2
 8000e2a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e2e:	1be4      	subs	r4, r4, r7
 8000e30:	2600      	movs	r6, #0
 8000e32:	b11d      	cbz	r5, 8000e3c <__udivmoddi4+0xa4>
 8000e34:	40d4      	lsrs	r4, r2
 8000e36:	2300      	movs	r3, #0
 8000e38:	e9c5 4300 	strd	r4, r3, [r5]
 8000e3c:	4631      	mov	r1, r6
 8000e3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e42:	428b      	cmp	r3, r1
 8000e44:	d909      	bls.n	8000e5a <__udivmoddi4+0xc2>
 8000e46:	2d00      	cmp	r5, #0
 8000e48:	f000 80ef 	beq.w	800102a <__udivmoddi4+0x292>
 8000e4c:	2600      	movs	r6, #0
 8000e4e:	e9c5 0100 	strd	r0, r1, [r5]
 8000e52:	4630      	mov	r0, r6
 8000e54:	4631      	mov	r1, r6
 8000e56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e5a:	fab3 f683 	clz	r6, r3
 8000e5e:	2e00      	cmp	r6, #0
 8000e60:	d14a      	bne.n	8000ef8 <__udivmoddi4+0x160>
 8000e62:	428b      	cmp	r3, r1
 8000e64:	d302      	bcc.n	8000e6c <__udivmoddi4+0xd4>
 8000e66:	4282      	cmp	r2, r0
 8000e68:	f200 80f9 	bhi.w	800105e <__udivmoddi4+0x2c6>
 8000e6c:	1a84      	subs	r4, r0, r2
 8000e6e:	eb61 0303 	sbc.w	r3, r1, r3
 8000e72:	2001      	movs	r0, #1
 8000e74:	469e      	mov	lr, r3
 8000e76:	2d00      	cmp	r5, #0
 8000e78:	d0e0      	beq.n	8000e3c <__udivmoddi4+0xa4>
 8000e7a:	e9c5 4e00 	strd	r4, lr, [r5]
 8000e7e:	e7dd      	b.n	8000e3c <__udivmoddi4+0xa4>
 8000e80:	b902      	cbnz	r2, 8000e84 <__udivmoddi4+0xec>
 8000e82:	deff      	udf	#255	; 0xff
 8000e84:	fab2 f282 	clz	r2, r2
 8000e88:	2a00      	cmp	r2, #0
 8000e8a:	f040 8092 	bne.w	8000fb2 <__udivmoddi4+0x21a>
 8000e8e:	eba1 010c 	sub.w	r1, r1, ip
 8000e92:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e96:	fa1f fe8c 	uxth.w	lr, ip
 8000e9a:	2601      	movs	r6, #1
 8000e9c:	0c20      	lsrs	r0, r4, #16
 8000e9e:	fbb1 f3f7 	udiv	r3, r1, r7
 8000ea2:	fb07 1113 	mls	r1, r7, r3, r1
 8000ea6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000eaa:	fb0e f003 	mul.w	r0, lr, r3
 8000eae:	4288      	cmp	r0, r1
 8000eb0:	d908      	bls.n	8000ec4 <__udivmoddi4+0x12c>
 8000eb2:	eb1c 0101 	adds.w	r1, ip, r1
 8000eb6:	f103 38ff 	add.w	r8, r3, #4294967295
 8000eba:	d202      	bcs.n	8000ec2 <__udivmoddi4+0x12a>
 8000ebc:	4288      	cmp	r0, r1
 8000ebe:	f200 80cb 	bhi.w	8001058 <__udivmoddi4+0x2c0>
 8000ec2:	4643      	mov	r3, r8
 8000ec4:	1a09      	subs	r1, r1, r0
 8000ec6:	b2a4      	uxth	r4, r4
 8000ec8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000ecc:	fb07 1110 	mls	r1, r7, r0, r1
 8000ed0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000ed4:	fb0e fe00 	mul.w	lr, lr, r0
 8000ed8:	45a6      	cmp	lr, r4
 8000eda:	d908      	bls.n	8000eee <__udivmoddi4+0x156>
 8000edc:	eb1c 0404 	adds.w	r4, ip, r4
 8000ee0:	f100 31ff 	add.w	r1, r0, #4294967295
 8000ee4:	d202      	bcs.n	8000eec <__udivmoddi4+0x154>
 8000ee6:	45a6      	cmp	lr, r4
 8000ee8:	f200 80bb 	bhi.w	8001062 <__udivmoddi4+0x2ca>
 8000eec:	4608      	mov	r0, r1
 8000eee:	eba4 040e 	sub.w	r4, r4, lr
 8000ef2:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000ef6:	e79c      	b.n	8000e32 <__udivmoddi4+0x9a>
 8000ef8:	f1c6 0720 	rsb	r7, r6, #32
 8000efc:	40b3      	lsls	r3, r6
 8000efe:	fa22 fc07 	lsr.w	ip, r2, r7
 8000f02:	ea4c 0c03 	orr.w	ip, ip, r3
 8000f06:	fa20 f407 	lsr.w	r4, r0, r7
 8000f0a:	fa01 f306 	lsl.w	r3, r1, r6
 8000f0e:	431c      	orrs	r4, r3
 8000f10:	40f9      	lsrs	r1, r7
 8000f12:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000f16:	fa00 f306 	lsl.w	r3, r0, r6
 8000f1a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000f1e:	0c20      	lsrs	r0, r4, #16
 8000f20:	fa1f fe8c 	uxth.w	lr, ip
 8000f24:	fb09 1118 	mls	r1, r9, r8, r1
 8000f28:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000f2c:	fb08 f00e 	mul.w	r0, r8, lr
 8000f30:	4288      	cmp	r0, r1
 8000f32:	fa02 f206 	lsl.w	r2, r2, r6
 8000f36:	d90b      	bls.n	8000f50 <__udivmoddi4+0x1b8>
 8000f38:	eb1c 0101 	adds.w	r1, ip, r1
 8000f3c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000f40:	f080 8088 	bcs.w	8001054 <__udivmoddi4+0x2bc>
 8000f44:	4288      	cmp	r0, r1
 8000f46:	f240 8085 	bls.w	8001054 <__udivmoddi4+0x2bc>
 8000f4a:	f1a8 0802 	sub.w	r8, r8, #2
 8000f4e:	4461      	add	r1, ip
 8000f50:	1a09      	subs	r1, r1, r0
 8000f52:	b2a4      	uxth	r4, r4
 8000f54:	fbb1 f0f9 	udiv	r0, r1, r9
 8000f58:	fb09 1110 	mls	r1, r9, r0, r1
 8000f5c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000f60:	fb00 fe0e 	mul.w	lr, r0, lr
 8000f64:	458e      	cmp	lr, r1
 8000f66:	d908      	bls.n	8000f7a <__udivmoddi4+0x1e2>
 8000f68:	eb1c 0101 	adds.w	r1, ip, r1
 8000f6c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000f70:	d26c      	bcs.n	800104c <__udivmoddi4+0x2b4>
 8000f72:	458e      	cmp	lr, r1
 8000f74:	d96a      	bls.n	800104c <__udivmoddi4+0x2b4>
 8000f76:	3802      	subs	r0, #2
 8000f78:	4461      	add	r1, ip
 8000f7a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000f7e:	fba0 9402 	umull	r9, r4, r0, r2
 8000f82:	eba1 010e 	sub.w	r1, r1, lr
 8000f86:	42a1      	cmp	r1, r4
 8000f88:	46c8      	mov	r8, r9
 8000f8a:	46a6      	mov	lr, r4
 8000f8c:	d356      	bcc.n	800103c <__udivmoddi4+0x2a4>
 8000f8e:	d053      	beq.n	8001038 <__udivmoddi4+0x2a0>
 8000f90:	b15d      	cbz	r5, 8000faa <__udivmoddi4+0x212>
 8000f92:	ebb3 0208 	subs.w	r2, r3, r8
 8000f96:	eb61 010e 	sbc.w	r1, r1, lr
 8000f9a:	fa01 f707 	lsl.w	r7, r1, r7
 8000f9e:	fa22 f306 	lsr.w	r3, r2, r6
 8000fa2:	40f1      	lsrs	r1, r6
 8000fa4:	431f      	orrs	r7, r3
 8000fa6:	e9c5 7100 	strd	r7, r1, [r5]
 8000faa:	2600      	movs	r6, #0
 8000fac:	4631      	mov	r1, r6
 8000fae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fb2:	f1c2 0320 	rsb	r3, r2, #32
 8000fb6:	40d8      	lsrs	r0, r3
 8000fb8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000fbc:	fa21 f303 	lsr.w	r3, r1, r3
 8000fc0:	4091      	lsls	r1, r2
 8000fc2:	4301      	orrs	r1, r0
 8000fc4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000fc8:	fa1f fe8c 	uxth.w	lr, ip
 8000fcc:	fbb3 f0f7 	udiv	r0, r3, r7
 8000fd0:	fb07 3610 	mls	r6, r7, r0, r3
 8000fd4:	0c0b      	lsrs	r3, r1, #16
 8000fd6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000fda:	fb00 f60e 	mul.w	r6, r0, lr
 8000fde:	429e      	cmp	r6, r3
 8000fe0:	fa04 f402 	lsl.w	r4, r4, r2
 8000fe4:	d908      	bls.n	8000ff8 <__udivmoddi4+0x260>
 8000fe6:	eb1c 0303 	adds.w	r3, ip, r3
 8000fea:	f100 38ff 	add.w	r8, r0, #4294967295
 8000fee:	d22f      	bcs.n	8001050 <__udivmoddi4+0x2b8>
 8000ff0:	429e      	cmp	r6, r3
 8000ff2:	d92d      	bls.n	8001050 <__udivmoddi4+0x2b8>
 8000ff4:	3802      	subs	r0, #2
 8000ff6:	4463      	add	r3, ip
 8000ff8:	1b9b      	subs	r3, r3, r6
 8000ffa:	b289      	uxth	r1, r1
 8000ffc:	fbb3 f6f7 	udiv	r6, r3, r7
 8001000:	fb07 3316 	mls	r3, r7, r6, r3
 8001004:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8001008:	fb06 f30e 	mul.w	r3, r6, lr
 800100c:	428b      	cmp	r3, r1
 800100e:	d908      	bls.n	8001022 <__udivmoddi4+0x28a>
 8001010:	eb1c 0101 	adds.w	r1, ip, r1
 8001014:	f106 38ff 	add.w	r8, r6, #4294967295
 8001018:	d216      	bcs.n	8001048 <__udivmoddi4+0x2b0>
 800101a:	428b      	cmp	r3, r1
 800101c:	d914      	bls.n	8001048 <__udivmoddi4+0x2b0>
 800101e:	3e02      	subs	r6, #2
 8001020:	4461      	add	r1, ip
 8001022:	1ac9      	subs	r1, r1, r3
 8001024:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8001028:	e738      	b.n	8000e9c <__udivmoddi4+0x104>
 800102a:	462e      	mov	r6, r5
 800102c:	4628      	mov	r0, r5
 800102e:	e705      	b.n	8000e3c <__udivmoddi4+0xa4>
 8001030:	4606      	mov	r6, r0
 8001032:	e6e3      	b.n	8000dfc <__udivmoddi4+0x64>
 8001034:	4618      	mov	r0, r3
 8001036:	e6f8      	b.n	8000e2a <__udivmoddi4+0x92>
 8001038:	454b      	cmp	r3, r9
 800103a:	d2a9      	bcs.n	8000f90 <__udivmoddi4+0x1f8>
 800103c:	ebb9 0802 	subs.w	r8, r9, r2
 8001040:	eb64 0e0c 	sbc.w	lr, r4, ip
 8001044:	3801      	subs	r0, #1
 8001046:	e7a3      	b.n	8000f90 <__udivmoddi4+0x1f8>
 8001048:	4646      	mov	r6, r8
 800104a:	e7ea      	b.n	8001022 <__udivmoddi4+0x28a>
 800104c:	4620      	mov	r0, r4
 800104e:	e794      	b.n	8000f7a <__udivmoddi4+0x1e2>
 8001050:	4640      	mov	r0, r8
 8001052:	e7d1      	b.n	8000ff8 <__udivmoddi4+0x260>
 8001054:	46d0      	mov	r8, sl
 8001056:	e77b      	b.n	8000f50 <__udivmoddi4+0x1b8>
 8001058:	3b02      	subs	r3, #2
 800105a:	4461      	add	r1, ip
 800105c:	e732      	b.n	8000ec4 <__udivmoddi4+0x12c>
 800105e:	4630      	mov	r0, r6
 8001060:	e709      	b.n	8000e76 <__udivmoddi4+0xde>
 8001062:	4464      	add	r4, ip
 8001064:	3802      	subs	r0, #2
 8001066:	e742      	b.n	8000eee <__udivmoddi4+0x156>

08001068 <__aeabi_idiv0>:
 8001068:	4770      	bx	lr
 800106a:	bf00      	nop

0800106c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800106c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80010a4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8001070:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8001072:	e003      	b.n	800107c <LoopCopyDataInit>

08001074 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001074:	4b0c      	ldr	r3, [pc, #48]	; (80010a8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8001076:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001078:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800107a:	3104      	adds	r1, #4

0800107c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800107c:	480b      	ldr	r0, [pc, #44]	; (80010ac <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800107e:	4b0c      	ldr	r3, [pc, #48]	; (80010b0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001080:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8001082:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001084:	d3f6      	bcc.n	8001074 <CopyDataInit>
  ldr  r2, =_sbss
 8001086:	4a0b      	ldr	r2, [pc, #44]	; (80010b4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001088:	e002      	b.n	8001090 <LoopFillZerobss>

0800108a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800108a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800108c:	f842 3b04 	str.w	r3, [r2], #4

08001090 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001090:	4b09      	ldr	r3, [pc, #36]	; (80010b8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8001092:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001094:	d3f9      	bcc.n	800108a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8001096:	f00a fcc3 	bl	800ba20 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800109a:	f02b f8eb 	bl	802c274 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800109e:	f000 fed7 	bl	8001e50 <main>
  bx  lr    
 80010a2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80010a4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80010a8:	080dfd98 	.word	0x080dfd98
  ldr  r0, =_sdata
 80010ac:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80010b0:	200002e8 	.word	0x200002e8
  ldr  r2, =_sbss
 80010b4:	200002e8 	.word	0x200002e8
  ldr  r3, = _ebss
 80010b8:	2001e484 	.word	0x2001e484

080010bc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80010bc:	e7fe      	b.n	80010bc <ADC_IRQHandler>

080010be <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80010be:	f000 bc07 	b.w	80018d0 <touchgfx_init>

080010c2 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80010c2:	f000 bc77 	b.w	80019b4 <touchgfx_taskEntry>

080010c6 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80010c6:	4770      	bx	lr

080010c8 <_ZN20STM32TouchControllerD0Ev>:
 80010c8:	b510      	push	{r4, lr}
 80010ca:	2104      	movs	r1, #4
 80010cc:	4604      	mov	r4, r0
 80010ce:	f02a f844 	bl	802b15a <_ZdlPvj>
 80010d2:	4620      	mov	r0, r4
 80010d4:	bd10      	pop	{r4, pc}
	...

080010d8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80010d8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80010da:	4b0c      	ldr	r3, [pc, #48]	; (800110c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80010dc:	4c0c      	ldr	r4, [pc, #48]	; (8001110 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80010de:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80010e0:	4b0c      	ldr	r3, [pc, #48]	; (8001114 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80010e2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80010e4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80010e6:	6863      	ldr	r3, [r4, #4]
 80010e8:	4798      	blx	r3
 80010ea:	f640 0311 	movw	r3, #2065	; 0x811
 80010ee:	4298      	cmp	r0, r3
 80010f0:	d10a      	bne.n	8001108 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80010f2:	4d09      	ldr	r5, [pc, #36]	; (8001118 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80010f4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80010f6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80010f8:	2082      	movs	r0, #130	; 0x82
 80010fa:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80010fc:	682b      	ldr	r3, [r5, #0]
 80010fe:	2082      	movs	r0, #130	; 0x82
 8001100:	68db      	ldr	r3, [r3, #12]
 8001102:	4798      	blx	r3
 8001104:	2000      	movs	r0, #0
    }

    return ret;
}
 8001106:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001108:	2001      	movs	r0, #1
 800110a:	e7fc      	b.n	8001106 <_Z11BSP_TS_Inittt+0x2e>
 800110c:	20000304 	.word	0x20000304
 8001110:	20000064 	.word	0x20000064
 8001114:	20000306 	.word	0x20000306
 8001118:	20000308 	.word	0x20000308

0800111c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800111c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001120:	20f0      	movs	r0, #240	; 0xf0
 8001122:	f7ff bfd9 	b.w	80010d8 <_Z11BSP_TS_Inittt>
	...

08001128 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001128:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800112a:	4d2d      	ldr	r5, [pc, #180]	; (80011e0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 800112c:	682b      	ldr	r3, [r5, #0]
{
 800112e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001130:	691b      	ldr	r3, [r3, #16]
 8001132:	2082      	movs	r0, #130	; 0x82
 8001134:	4798      	blx	r3
 8001136:	b280      	uxth	r0, r0
 8001138:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800113a:	2800      	cmp	r0, #0
 800113c:	d043      	beq.n	80011c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800113e:	682b      	ldr	r3, [r5, #0]
 8001140:	f10d 0206 	add.w	r2, sp, #6
 8001144:	695b      	ldr	r3, [r3, #20]
 8001146:	a901      	add	r1, sp, #4
 8001148:	2082      	movs	r0, #130	; 0x82
 800114a:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 800114c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001150:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 8001154:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001156:	2a0a      	cmp	r2, #10
 8001158:	d937      	bls.n	80011ca <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 800115a:	230b      	movs	r3, #11
 800115c:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001160:	4b20      	ldr	r3, [pc, #128]	; (80011e4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 8001162:	881b      	ldrh	r3, [r3, #0]
 8001164:	429a      	cmp	r2, r3
 8001166:	d901      	bls.n	800116c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8001168:	3b01      	subs	r3, #1
 800116a:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800116c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001170:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001174:	428b      	cmp	r3, r1
 8001176:	d82a      	bhi.n	80011ce <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 8001178:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800117c:	330e      	adds	r3, #14
 800117e:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001180:	210f      	movs	r1, #15
 8001182:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001186:	4918      	ldr	r1, [pc, #96]	; (80011e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 8001188:	8809      	ldrh	r1, [r1, #0]
 800118a:	428b      	cmp	r3, r1
 800118c:	d901      	bls.n	8001192 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 800118e:	1e4b      	subs	r3, r1, #1
 8001190:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001192:	4e16      	ldr	r6, [pc, #88]	; (80011ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001194:	4d16      	ldr	r5, [pc, #88]	; (80011f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001196:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001198:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 800119a:	4283      	cmp	r3, r0
 800119c:	b281      	uxth	r1, r0
 800119e:	bf8c      	ite	hi
 80011a0:	1a59      	subhi	r1, r3, r1
 80011a2:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80011a4:	b2b8      	uxth	r0, r7
 80011a6:	42ba      	cmp	r2, r7
 80011a8:	bf8c      	ite	hi
 80011aa:	1a10      	subhi	r0, r2, r0
 80011ac:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80011ae:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80011b0:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80011b2:	4401      	add	r1, r0
 80011b4:	2905      	cmp	r1, #5
        {
            _x = x;
 80011b6:	bfc8      	it	gt
 80011b8:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80011ba:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80011bc:	bfc8      	it	gt
 80011be:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80011c0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80011c2:	682b      	ldr	r3, [r5, #0]
 80011c4:	80a3      	strh	r3, [r4, #4]
    }
}
 80011c6:	b003      	add	sp, #12
 80011c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80011ca:	2200      	movs	r2, #0
 80011cc:	e7ce      	b.n	800116c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80011ce:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80011d2:	3308      	adds	r3, #8
 80011d4:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80011d6:	2b0e      	cmp	r3, #14
 80011d8:	d8d2      	bhi.n	8001180 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 80011da:	2300      	movs	r3, #0
 80011dc:	e7d9      	b.n	8001192 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 80011de:	bf00      	nop
 80011e0:	20000308 	.word	0x20000308
 80011e4:	20000306 	.word	0x20000306
 80011e8:	20000304 	.word	0x20000304
 80011ec:	2000030c 	.word	0x2000030c
 80011f0:	20000310 	.word	0x20000310

080011f4 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80011f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80011f6:	4668      	mov	r0, sp
{
 80011f8:	460d      	mov	r5, r1
 80011fa:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 80011fc:	f7ff ff94 	bl	8001128 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001200:	f8bd 0000 	ldrh.w	r0, [sp]
 8001204:	b130      	cbz	r0, 8001214 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8001206:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800120a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800120c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001210:	6023      	str	r3, [r4, #0]
        return true;
 8001212:	2001      	movs	r0, #1
}
 8001214:	b003      	add	sp, #12
 8001216:	bd30      	pop	{r4, r5, pc}

08001218 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8001218:	4770      	bx	lr

0800121a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 800121a:	4770      	bx	lr

0800121c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 800121c:	4770      	bx	lr

0800121e <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800121e:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001220:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8001224:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8001228:	4770      	bx	lr

0800122a <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 800122a:	2000      	movs	r0, #0
 800122c:	4770      	bx	lr
	...

08001230 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001230:	4b03      	ldr	r3, [pc, #12]	; (8001240 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001232:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001234:	3900      	subs	r1, #0
 8001236:	bf18      	it	ne
 8001238:	2101      	movne	r1, #1
 800123a:	7019      	strb	r1, [r3, #0]
    }
 800123c:	4770      	bx	lr
 800123e:	bf00      	nop
 8001240:	2001e1bf 	.word	0x2001e1bf

08001244 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001244:	2000      	movs	r0, #0
 8001246:	4770      	bx	lr

08001248 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001248:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800124a:	b10b      	cbz	r3, 8001250 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800124c:	4608      	mov	r0, r1
 800124e:	4718      	bx	r3
        }
    }
 8001250:	4770      	bx	lr

08001252 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001252:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001256:	4770      	bx	lr

08001258 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001258:	6840      	ldr	r0, [r0, #4]
 800125a:	6803      	ldr	r3, [r0, #0]
 800125c:	699b      	ldr	r3, [r3, #24]
 800125e:	4718      	bx	r3

08001260 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001260:	4770      	bx	lr

08001262 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001262:	4770      	bx	lr

08001264 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001264:	4770      	bx	lr

08001266 <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001266:	f000 bc45 	b.w	8001af4 <_ZN20TouchGFXGeneratedHAL10initializeEv>

0800126a <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 800126a:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 800126c:	6803      	ldr	r3, [r0, #0]
{
 800126e:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001270:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001274:	4798      	blx	r3
    enableInterrupts();
 8001276:	6823      	ldr	r3, [r4, #0]
 8001278:	4620      	mov	r0, r4
 800127a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800127c:	4798      	blx	r3

    OSWrappers::waitForVSync();
 800127e:	f000 f8eb 	bl	8001458 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001282:	6823      	ldr	r3, [r4, #0]
 8001284:	4620      	mov	r0, r4
 8001286:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001288:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800128a:	2029      	movs	r0, #41	; 0x29
 800128c:	f001 fa06 	bl	800269c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001290:	f000 f8e2 	bl	8001458 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001294:	6823      	ldr	r3, [r4, #0]
 8001296:	4620      	mov	r0, r4
 8001298:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800129a:	4798      	blx	r3
    for (;;)
 800129c:	e7f8      	b.n	8001290 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

0800129e <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800129e:	b510      	push	{r4, lr}
 80012a0:	4604      	mov	r4, r0
        swapFrameBuffers();
 80012a2:	f011 febb 	bl	801301c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80012a6:	6823      	ldr	r3, [r4, #0]
 80012a8:	4620      	mov	r0, r4
 80012aa:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80012ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80012b2:	4718      	bx	r3

080012b4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80012b4:	f000 bc10 	b.w	8001ad8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080012b8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80012b8:	f000 bc14 	b.w	8001ae4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080012bc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80012bc:	f000 bc40 	b.w	8001b40 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080012c0 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80012c0:	f000 bbe6 	b.w	8001a90 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080012c4 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80012c4:	f000 bc40 	b.w	8001b48 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080012c8 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80012c8:	f000 bc48 	b.w	8001b5c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080012cc <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80012cc:	f000 bbea 	b.w	8001aa4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080012d0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80012d0:	f011 b830 	b.w	8012334 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080012d4 <_ZN11TouchGFXHALD0Ev>:
 80012d4:	b510      	push	{r4, lr}
 80012d6:	217c      	movs	r1, #124	; 0x7c
 80012d8:	4604      	mov	r4, r0
 80012da:	f029 ff3e 	bl	802b15a <_ZdlPvj>
 80012de:	4620      	mov	r0, r4
 80012e0:	bd10      	pop	{r4, pc}

080012e2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80012e2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80012e6:	b11b      	cbz	r3, 80012f0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80012e8:	6840      	ldr	r0, [r0, #4]
 80012ea:	6803      	ldr	r3, [r0, #0]
 80012ec:	681b      	ldr	r3, [r3, #0]
 80012ee:	4718      	bx	r3
    }
 80012f0:	4618      	mov	r0, r3
 80012f2:	4770      	bx	lr

080012f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80012f4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80012f6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80012fa:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 80012fe:	4b0c      	ldr	r3, [pc, #48]	; (8001330 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001300:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001302:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001304:	d009      	beq.n	800131a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001306:	b93a      	cbnz	r2, 8001318 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001308:	4a0a      	ldr	r2, [pc, #40]	; (8001334 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800130a:	490b      	ldr	r1, [pc, #44]	; (8001338 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800130c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800130e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001310:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001312:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001314:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001316:	701a      	strb	r2, [r3, #0]
    }
 8001318:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800131a:	2a00      	cmp	r2, #0
 800131c:	d0fc      	beq.n	8001318 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800131e:	4a05      	ldr	r2, [pc, #20]	; (8001334 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001320:	4905      	ldr	r1, [pc, #20]	; (8001338 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001322:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001324:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001326:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001328:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 800132a:	2200      	movs	r2, #0
 800132c:	e7f3      	b.n	8001316 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800132e:	bf00      	nop
 8001330:	2001e1b8 	.word	0x2001e1b8
 8001334:	2001e1b4 	.word	0x2001e1b4
 8001338:	2001e1b6 	.word	0x2001e1b6

0800133c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800133c:	b570      	push	{r4, r5, r6, lr}
 800133e:	460d      	mov	r5, r1
 8001340:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001342:	b935      	cbnz	r5, 8001352 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001344:	4b09      	ldr	r3, [pc, #36]	; (800136c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001346:	4a0a      	ldr	r2, [pc, #40]	; (8001370 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001348:	480a      	ldr	r0, [pc, #40]	; (8001374 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 800134a:	f240 21bb 	movw	r1, #699	; 0x2bb
 800134e:	f02a fe51 	bl	802bff4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001352:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001356:	4b08      	ldr	r3, [pc, #32]	; (8001378 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001358:	3a00      	subs	r2, #0
 800135a:	bf18      	it	ne
 800135c:	2201      	movne	r2, #1
 800135e:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001360:	6803      	ldr	r3, [r0, #0]
    }
 8001362:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001366:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800136a:	4718      	bx	r3
 800136c:	0802ed8c 	.word	0x0802ed8c
 8001370:	0802edc4 	.word	0x0802edc4
 8001374:	0802ee12 	.word	0x0802ee12
 8001378:	2001e1be 	.word	0x2001e1be

0800137c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800137c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800137e:	4b09      	ldr	r3, [pc, #36]	; (80013a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001380:	881b      	ldrh	r3, [r3, #0]
 8001382:	428b      	cmp	r3, r1
 8001384:	d803      	bhi.n	800138e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001386:	4b08      	ldr	r3, [pc, #32]	; (80013a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001388:	881b      	ldrh	r3, [r3, #0]
 800138a:	4293      	cmp	r3, r2
 800138c:	d905      	bls.n	800139a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800138e:	4b07      	ldr	r3, [pc, #28]	; (80013ac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001390:	4a07      	ldr	r2, [pc, #28]	; (80013b0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001392:	4808      	ldr	r0, [pc, #32]	; (80013b4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001394:	219e      	movs	r1, #158	; 0x9e
 8001396:	f02a fe2d 	bl	802bff4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800139a:	4b07      	ldr	r3, [pc, #28]	; (80013b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800139c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800139e:	4b07      	ldr	r3, [pc, #28]	; (80013bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80013a0:	801a      	strh	r2, [r3, #0]
    }
 80013a2:	bd08      	pop	{r3, pc}
 80013a4:	2001e1b4 	.word	0x2001e1b4
 80013a8:	2001e1b6 	.word	0x2001e1b6
 80013ac:	0802ee57 	.word	0x0802ee57
 80013b0:	0802eeba 	.word	0x0802eeba
 80013b4:	0802ee12 	.word	0x0802ee12
 80013b8:	2001e1ba 	.word	0x2001e1ba
 80013bc:	2001e1bc 	.word	0x2001e1bc

080013c0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80013c0:	2101      	movs	r1, #1
{
 80013c2:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80013c4:	2200      	movs	r2, #0
 80013c6:	4608      	mov	r0, r1
 80013c8:	f00d fe82 	bl	800f0d0 <osSemaphoreNew>
 80013cc:	4b0a      	ldr	r3, [pc, #40]	; (80013f8 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80013ce:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80013d0:	b928      	cbnz	r0, 80013de <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80013d2:	4b0a      	ldr	r3, [pc, #40]	; (80013fc <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80013d4:	4a0a      	ldr	r2, [pc, #40]	; (8001400 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80013d6:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80013d8:	480a      	ldr	r0, [pc, #40]	; (8001404 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80013da:	f02a fe0b 	bl	802bff4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80013de:	2200      	movs	r2, #0
 80013e0:	2104      	movs	r1, #4
 80013e2:	2001      	movs	r0, #1
 80013e4:	f00d ff3a 	bl	800f25c <osMessageQueueNew>
 80013e8:	4b07      	ldr	r3, [pc, #28]	; (8001408 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80013ea:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80013ec:	b918      	cbnz	r0, 80013f6 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80013ee:	4b07      	ldr	r3, [pc, #28]	; (800140c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80013f0:	4a03      	ldr	r2, [pc, #12]	; (8001400 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80013f2:	212d      	movs	r1, #45	; 0x2d
 80013f4:	e7f0      	b.n	80013d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80013f6:	bd08      	pop	{r3, pc}
 80013f8:	20000318 	.word	0x20000318
 80013fc:	0802efd8 	.word	0x0802efd8
 8001400:	0802f021 	.word	0x0802f021
 8001404:	0802f050 	.word	0x0802f050
 8001408:	20000314 	.word	0x20000314
 800140c:	0802f0a9 	.word	0x0802f0a9

08001410 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001410:	4b02      	ldr	r3, [pc, #8]	; (800141c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001412:	f04f 31ff 	mov.w	r1, #4294967295
 8001416:	6818      	ldr	r0, [r3, #0]
 8001418:	f00d beb0 	b.w	800f17c <osSemaphoreAcquire>
 800141c:	20000318 	.word	0x20000318

08001420 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001420:	4b01      	ldr	r3, [pc, #4]	; (8001428 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001422:	6818      	ldr	r0, [r3, #0]
 8001424:	f00d bee4 	b.w	800f1f0 <osSemaphoreRelease>
 8001428:	20000318 	.word	0x20000318

0800142c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 800142c:	4b02      	ldr	r3, [pc, #8]	; (8001438 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800142e:	2100      	movs	r1, #0
 8001430:	6818      	ldr	r0, [r3, #0]
 8001432:	f00d bea3 	b.w	800f17c <osSemaphoreAcquire>
 8001436:	bf00      	nop
 8001438:	20000318 	.word	0x20000318

0800143c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 800143c:	f7ff bff0 	b.w	8001420 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001440 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001440:	4803      	ldr	r0, [pc, #12]	; (8001450 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001442:	4904      	ldr	r1, [pc, #16]	; (8001454 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001444:	6800      	ldr	r0, [r0, #0]
 8001446:	2300      	movs	r3, #0
 8001448:	461a      	mov	r2, r3
 800144a:	f00d bf4d 	b.w	800f2e8 <osMessageQueuePut>
 800144e:	bf00      	nop
 8001450:	20000314 	.word	0x20000314
 8001454:	20000004 	.word	0x20000004

08001458 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001458:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800145a:	4c08      	ldr	r4, [pc, #32]	; (800147c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800145c:	2300      	movs	r3, #0
 800145e:	461a      	mov	r2, r3
 8001460:	a901      	add	r1, sp, #4
 8001462:	6820      	ldr	r0, [r4, #0]
 8001464:	f00d ff82 	bl	800f36c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001468:	6820      	ldr	r0, [r4, #0]
 800146a:	f04f 33ff 	mov.w	r3, #4294967295
 800146e:	2200      	movs	r2, #0
 8001470:	a901      	add	r1, sp, #4
 8001472:	f00d ff7b 	bl	800f36c <osMessageQueueGet>
}
 8001476:	b002      	add	sp, #8
 8001478:	bd10      	pop	{r4, pc}
 800147a:	bf00      	nop
 800147c:	20000314 	.word	0x20000314

08001480 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001480:	6803      	ldr	r3, [r0, #0]
 8001482:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001484:	4718      	bx	r3

08001486 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001486:	2001      	movs	r0, #1
 8001488:	4770      	bx	lr

0800148a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800148a:	6803      	ldr	r3, [r0, #0]
 800148c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800148e:	4718      	bx	r3

08001490 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8001490:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001492:	2300      	movs	r3, #0
 8001494:	9301      	str	r3, [sp, #4]
 8001496:	4b0d      	ldr	r3, [pc, #52]	; (80014cc <_ZN8STM32DMA10initializeEv+0x3c>)
 8001498:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800149a:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800149e:	631a      	str	r2, [r3, #48]	; 0x30
 80014a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014a2:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80014a6:	9201      	str	r2, [sp, #4]
 80014a8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80014aa:	691a      	ldr	r2, [r3, #16]
 80014ac:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80014b0:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80014b2:	691a      	ldr	r2, [r3, #16]
 80014b4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80014b8:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80014ba:	4b05      	ldr	r3, [pc, #20]	; (80014d0 <_ZN8STM32DMA10initializeEv+0x40>)
 80014bc:	4a05      	ldr	r2, [pc, #20]	; (80014d4 <_ZN8STM32DMA10initializeEv+0x44>)
 80014be:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014c0:	4b05      	ldr	r3, [pc, #20]	; (80014d8 <_ZN8STM32DMA10initializeEv+0x48>)
 80014c2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80014c6:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80014c8:	b002      	add	sp, #8
 80014ca:	4770      	bx	lr
 80014cc:	40023800 	.word	0x40023800
 80014d0:	20008d98 	.word	0x20008d98
 80014d4:	0800151d 	.word	0x0800151d
 80014d8:	e000e100 	.word	0xe000e100

080014dc <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 80014dc:	f240 30ef 	movw	r0, #1007	; 0x3ef
 80014e0:	4770      	bx	lr
	...

080014e4 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 80014e4:	4b05      	ldr	r3, [pc, #20]	; (80014fc <_ZN8STM32DMAD1Ev+0x18>)
 80014e6:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014e8:	4b05      	ldr	r3, [pc, #20]	; (8001500 <_ZN8STM32DMAD1Ev+0x1c>)
 80014ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80014ee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80014f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014f6:	f3bf 8f6f 	isb	sy
}
 80014fa:	4770      	bx	lr
 80014fc:	0802f254 	.word	0x0802f254
 8001500:	e000e100 	.word	0xe000e100

08001504 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001504:	b510      	push	{r4, lr}
 8001506:	4604      	mov	r4, r0
}
 8001508:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 800150c:	f7ff ffea 	bl	80014e4 <_ZN8STM32DMAD1Ev>
 8001510:	4620      	mov	r0, r4
 8001512:	f029 fe22 	bl	802b15a <_ZdlPvj>
 8001516:	4620      	mov	r0, r4
 8001518:	bd10      	pop	{r4, pc}
	...

0800151c <DMA2D_XferCpltCallback>:
        return instance;
 800151c:	4b02      	ldr	r3, [pc, #8]	; (8001528 <DMA2D_XferCpltCallback+0xc>)
 800151e:	681b      	ldr	r3, [r3, #0]
 8001520:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001522:	6803      	ldr	r3, [r0, #0]
 8001524:	695b      	ldr	r3, [r3, #20]
 8001526:	4718      	bx	r3
 8001528:	2001e1c0 	.word	0x2001e1c0

0800152c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 800152c:	b570      	push	{r4, r5, r6, lr}
 800152e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001530:	4625      	mov	r5, r4
 8001532:	4b0a      	ldr	r3, [pc, #40]	; (800155c <_ZN8STM32DMAC1Ev+0x30>)
 8001534:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001536:	2600      	movs	r6, #0
 8001538:	6060      	str	r0, [r4, #4]
 800153a:	7226      	strb	r6, [r4, #8]
 800153c:	7266      	strb	r6, [r4, #9]
 800153e:	f845 3b20 	str.w	r3, [r5], #32
 8001542:	2260      	movs	r2, #96	; 0x60
 8001544:	4629      	mov	r1, r5
 8001546:	f011 fed1 	bl	80132ec <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800154a:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800154e:	60ee      	str	r6, [r5, #12]
 8001550:	3524      	adds	r5, #36	; 0x24
 8001552:	42ab      	cmp	r3, r5
 8001554:	d1fb      	bne.n	800154e <_ZN8STM32DMAC1Ev+0x22>
}
 8001556:	4620      	mov	r0, r4
 8001558:	bd70      	pop	{r4, r5, r6, pc}
 800155a:	bf00      	nop
 800155c:	0802f254 	.word	0x0802f254

08001560 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001560:	b508      	push	{r3, lr}
    switch (format)
 8001562:	290b      	cmp	r1, #11
 8001564:	d80b      	bhi.n	800157e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8001566:	e8df f001 	tbb	[pc, r1]
 800156a:	0612      	.short	0x0612
 800156c:	0a0a0a10 	.word	0x0a0a0a10
 8001570:	0808080a 	.word	0x0808080a
 8001574:	0808      	.short	0x0808
 8001576:	2001      	movs	r0, #1
}
 8001578:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 800157a:	2005      	movs	r0, #5
        break;
 800157c:	e7fc      	b.n	8001578 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 800157e:	4b05      	ldr	r3, [pc, #20]	; (8001594 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001580:	4a05      	ldr	r2, [pc, #20]	; (8001598 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001582:	4806      	ldr	r0, [pc, #24]	; (800159c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8001584:	2167      	movs	r1, #103	; 0x67
 8001586:	f02a fd35 	bl	802bff4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800158a:	2000      	movs	r0, #0
 800158c:	e7f4      	b.n	8001578 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800158e:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001590:	e7f2      	b.n	8001578 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001592:	bf00      	nop
 8001594:	0802f0eb 	.word	0x0802f0eb
 8001598:	0802f106 	.word	0x0802f106
 800159c:	0802f150 	.word	0x0802f150

080015a0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80015a0:	b508      	push	{r3, lr}
    switch (format)
 80015a2:	290a      	cmp	r1, #10
 80015a4:	d809      	bhi.n	80015ba <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 80015a6:	e8df f001 	tbb	[pc, r1]
 80015aa:	0610      	.short	0x0610
 80015ac:	0808080e 	.word	0x0808080e
 80015b0:	06060608 	.word	0x06060608
 80015b4:	06          	.byte	0x06
 80015b5:	00          	.byte	0x00
 80015b6:	2001      	movs	r0, #1
}
 80015b8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80015ba:	4b05      	ldr	r3, [pc, #20]	; (80015d0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 80015bc:	4a05      	ldr	r2, [pc, #20]	; (80015d4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 80015be:	4806      	ldr	r0, [pc, #24]	; (80015d8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 80015c0:	2188      	movs	r1, #136	; 0x88
 80015c2:	f02a fd17 	bl	802bff4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 80015c6:	2000      	movs	r0, #0
 80015c8:	e7f6      	b.n	80015b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80015ca:	2002      	movs	r0, #2
    return dma2dColorMode;
 80015cc:	e7f4      	b.n	80015b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 80015ce:	bf00      	nop
 80015d0:	0802f0eb 	.word	0x0802f0eb
 80015d4:	0802f1a7 	.word	0x0802f1a7
 80015d8:	0802f150 	.word	0x0802f150

080015dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 80015dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80015e0:	7f4f      	ldrb	r7, [r1, #29]
{
 80015e2:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80015e4:	4639      	mov	r1, r7
{
 80015e6:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80015e8:	f7ff ffba 	bl	8001560 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015ec:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80015f0:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015f2:	4641      	mov	r1, r8
 80015f4:	4648      	mov	r0, r9
 80015f6:	f7ff ffb3 	bl	8001560 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015fa:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015fc:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80015fe:	4648      	mov	r0, r9
 8001600:	f7ff ffce 	bl	80015a0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001604:	8aa1      	ldrh	r1, [r4, #20]
 8001606:	8b62      	ldrh	r2, [r4, #26]
 8001608:	4b42      	ldr	r3, [pc, #264]	; (8001714 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800160a:	1a52      	subs	r2, r2, r1
 800160c:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800160e:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001610:	8b22      	ldrh	r2, [r4, #24]
 8001612:	1a52      	subs	r2, r2, r1
 8001614:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001616:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001618:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800161a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800161e:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001620:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001622:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001624:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001626:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8001628:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800162a:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 800162e:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001630:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8001634:	d026      	beq.n	8001684 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8001636:	d810      	bhi.n	800165a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8001638:	2920      	cmp	r1, #32
 800163a:	ea45 0402 	orr.w	r4, r5, r2
 800163e:	d061      	beq.n	8001704 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8001640:	2940      	cmp	r1, #64	; 0x40
 8001642:	d05f      	beq.n	8001704 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8001644:	2904      	cmp	r1, #4
 8001646:	d05d      	beq.n	8001704 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001648:	4b32      	ldr	r3, [pc, #200]	; (8001714 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800164a:	432a      	orrs	r2, r5
 800164c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001650:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001652:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001654:	d05a      	beq.n	800170c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001656:	4a30      	ldr	r2, [pc, #192]	; (8001718 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001658:	e040      	b.n	80016dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 800165a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800165e:	d007      	beq.n	8001670 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8001660:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8001664:	d1f0      	bne.n	8001648 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001666:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800166a:	f042 0209 	orr.w	r2, r2, #9
 800166e:	e003      	b.n	8001678 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001670:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001674:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001678:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 800167a:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800167c:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800167e:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001680:	6158      	str	r0, [r3, #20]
 8001682:	e02a      	b.n	80016da <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001684:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001686:	432a      	orrs	r2, r5
 8001688:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 800168c:	1d21      	adds	r1, r4, #4
 800168e:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001690:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8001692:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001694:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001696:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001698:	b142      	cbz	r2, 80016ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 800169a:	2a01      	cmp	r2, #1
 800169c:	d021      	beq.n	80016e2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 800169e:	4b1f      	ldr	r3, [pc, #124]	; (800171c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 80016a0:	4a1f      	ldr	r2, [pc, #124]	; (8001720 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 80016a2:	4820      	ldr	r0, [pc, #128]	; (8001724 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 80016a4:	f44f 7189 	mov.w	r1, #274	; 0x112
 80016a8:	f02a fca4 	bl	802bff4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80016ac:	69da      	ldr	r2, [r3, #28]
 80016ae:	8861      	ldrh	r1, [r4, #2]
 80016b0:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80016b4:	3901      	subs	r1, #1
 80016b6:	f022 0210 	bic.w	r2, r2, #16
 80016ba:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80016be:	61da      	str	r2, [r3, #28]
            bool blend = true;
 80016c0:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80016c2:	4b14      	ldr	r3, [pc, #80]	; (8001714 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80016c4:	69da      	ldr	r2, [r3, #28]
 80016c6:	f042 0220 	orr.w	r2, r2, #32
 80016ca:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80016cc:	69da      	ldr	r2, [r3, #28]
 80016ce:	0692      	lsls	r2, r2, #26
 80016d0:	d4fc      	bmi.n	80016cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80016d2:	2210      	movs	r2, #16
 80016d4:	609a      	str	r2, [r3, #8]
            if(blend)
 80016d6:	2800      	cmp	r0, #0
 80016d8:	d0bd      	beq.n	8001656 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 80016da:	4a13      	ldr	r2, [pc, #76]	; (8001728 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80016dc:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 80016de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80016e2:	8862      	ldrh	r2, [r4, #2]
 80016e4:	69d9      	ldr	r1, [r3, #28]
 80016e6:	1e54      	subs	r4, r2, #1
 80016e8:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 80016ec:	f022 0210 	bic.w	r2, r2, #16
 80016f0:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 80016f4:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80016f8:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 80016fc:	bf18      	it	ne
 80016fe:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001700:	61da      	str	r2, [r3, #28]
                break;
 8001702:	e7de      	b.n	80016c2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001704:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001708:	61dc      	str	r4, [r3, #28]
 800170a:	e7b8      	b.n	800167e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800170c:	f240 2201 	movw	r2, #513	; 0x201
 8001710:	e7e4      	b.n	80016dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8001712:	bf00      	nop
 8001714:	4002b000 	.word	0x4002b000
 8001718:	00010201 	.word	0x00010201
 800171c:	0802f1f2 	.word	0x0802f1f2
 8001720:	0802f20c 	.word	0x0802f20c
 8001724:	0802f150 	.word	0x0802f150
 8001728:	00020201 	.word	0x00020201

0800172c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800172c:	b570      	push	{r4, r5, r6, lr}
 800172e:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001730:	7f89      	ldrb	r1, [r1, #30]
 8001732:	f7ff ff35 	bl	80015a0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001736:	8aa6      	ldrh	r6, [r4, #20]
 8001738:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800173a:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800173c:	4b15      	ldr	r3, [pc, #84]	; (8001794 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800173e:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001740:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001742:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001746:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001748:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800174a:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800174c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800174e:	6826      	ldr	r6, [r4, #0]
 8001750:	68e1      	ldr	r1, [r4, #12]
 8001752:	2e08      	cmp	r6, #8
 8001754:	d10d      	bne.n	8001772 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001756:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001758:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800175a:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 800175c:	7f20      	ldrb	r0, [r4, #28]
 800175e:	4a0e      	ldr	r2, [pc, #56]	; (8001798 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001760:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001764:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001766:	4a0d      	ldr	r2, [pc, #52]	; (800179c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001768:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800176a:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800176c:	60dd      	str	r5, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800176e:	601a      	str	r2, [r3, #0]
    }
}
 8001770:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001772:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001774:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001776:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001778:	0948      	lsrs	r0, r1, #5
 800177a:	0a0a      	lsrs	r2, r1, #8
 800177c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8001780:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8001784:	4302      	orrs	r2, r0
 8001786:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800178a:	430a      	orrs	r2, r1
 800178c:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800178e:	4a04      	ldr	r2, [pc, #16]	; (80017a0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001790:	e7ed      	b.n	800176e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001792:	bf00      	nop
 8001794:	4002b000 	.word	0x4002b000
 8001798:	00010009 	.word	0x00010009
 800179c:	00020201 	.word	0x00020201
 80017a0:	00030201 	.word	0x00030201

080017a4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80017a4:	2001      	movs	r0, #1
 80017a6:	4770      	bx	lr

080017a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80017a8:	2054      	movs	r0, #84	; 0x54
 80017aa:	4770      	bx	lr

080017ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80017ac:	2354      	movs	r3, #84	; 0x54
 80017ae:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80017b2:	3008      	adds	r0, #8
 80017b4:	4770      	bx	lr

080017b6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80017b6:	2354      	movs	r3, #84	; 0x54
 80017b8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80017bc:	3008      	adds	r0, #8
 80017be:	4770      	bx	lr

080017c0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80017c0:	2001      	movs	r0, #1
 80017c2:	4770      	bx	lr

080017c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80017c4:	f241 70b8 	movw	r0, #6072	; 0x17b8
 80017c8:	4770      	bx	lr

080017ca <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80017ca:	f241 73b8 	movw	r3, #6072	; 0x17b8
 80017ce:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80017d2:	3008      	adds	r0, #8
 80017d4:	4770      	bx	lr

080017d6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80017d6:	f241 73b8 	movw	r3, #6072	; 0x17b8
 80017da:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80017de:	3008      	adds	r0, #8
 80017e0:	4770      	bx	lr

080017e2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80017e2:	2001      	movs	r0, #1
 80017e4:	4770      	bx	lr

080017e6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80017e6:	2010      	movs	r0, #16
 80017e8:	4770      	bx	lr

080017ea <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80017ea:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80017ee:	3008      	adds	r0, #8
 80017f0:	4770      	bx	lr

080017f2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80017f2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80017f6:	3008      	adds	r0, #8
 80017f8:	4770      	bx	lr

080017fa <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartPageScreenNoTransition();
 80017fa:	4608      	mov	r0, r1
 80017fc:	f003 b93c 	b.w	8004a78 <_ZN23FrontendApplicationBase31gotoStartPageScreenNoTransitionEv>

08001800 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001800:	b510      	push	{r4, lr}
 8001802:	4b03      	ldr	r3, [pc, #12]	; (8001810 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001804:	6003      	str	r3, [r0, #0]
 8001806:	4604      	mov	r4, r0
 8001808:	f00f fe78 	bl	80114fc <_ZN8touchgfx17AbstractPartitionD1Ev>
 800180c:	4620      	mov	r0, r4
 800180e:	bd10      	pop	{r4, pc}
 8001810:	0802f30c 	.word	0x0802f30c

08001814 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001814:	b510      	push	{r4, lr}
 8001816:	4604      	mov	r4, r0
 8001818:	f7ff fff2 	bl	8001800 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800181c:	4620      	mov	r0, r4
 800181e:	215c      	movs	r1, #92	; 0x5c
 8001820:	f029 fc9b 	bl	802b15a <_ZdlPvj>
 8001824:	4620      	mov	r0, r4
 8001826:	bd10      	pop	{r4, pc}

08001828 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001828:	b510      	push	{r4, lr}
 800182a:	4b03      	ldr	r3, [pc, #12]	; (8001838 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800182c:	6003      	str	r3, [r0, #0]
 800182e:	4604      	mov	r4, r0
 8001830:	f00f fe64 	bl	80114fc <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001834:	4620      	mov	r0, r4
 8001836:	bd10      	pop	{r4, pc}
 8001838:	0802f2d8 	.word	0x0802f2d8

0800183c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800183c:	b510      	push	{r4, lr}
 800183e:	4604      	mov	r4, r0
 8001840:	f7ff fff2 	bl	8001828 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001844:	4620      	mov	r0, r4
 8001846:	f44f 51be 	mov.w	r1, #6080	; 0x17c0
 800184a:	f029 fc86 	bl	802b15a <_ZdlPvj>
 800184e:	4620      	mov	r0, r4
 8001850:	bd10      	pop	{r4, pc}
	...

08001854 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001854:	b510      	push	{r4, lr}
 8001856:	4b03      	ldr	r3, [pc, #12]	; (8001864 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001858:	6003      	str	r3, [r0, #0]
 800185a:	4604      	mov	r4, r0
 800185c:	f00f fe4e 	bl	80114fc <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001860:	4620      	mov	r0, r4
 8001862:	bd10      	pop	{r4, pc}
 8001864:	0802f2a4 	.word	0x0802f2a4

08001868 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001868:	b510      	push	{r4, lr}
 800186a:	4604      	mov	r4, r0
 800186c:	f7ff fff2 	bl	8001854 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001870:	4620      	mov	r0, r4
 8001872:	2118      	movs	r1, #24
 8001874:	f029 fc71 	bl	802b15a <_ZdlPvj>
 8001878:	4620      	mov	r0, r4
 800187a:	bd10      	pop	{r4, pc}

0800187c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800187c:	b510      	push	{r4, lr}
 800187e:	4b09      	ldr	r3, [pc, #36]	; (80018a4 <_ZN12FrontendHeapD1Ev+0x28>)
 8001880:	6003      	str	r3, [r0, #0]
 8001882:	4604      	mov	r4, r0
 8001884:	f500 50bf 	add.w	r0, r0, #6112	; 0x17e0
 8001888:	300c      	adds	r0, #12
 800188a:	f7ff ffb9 	bl	8001800 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800188e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001892:	f7ff ffc9 	bl	8001828 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18ReactanceGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001896:	f104 0014 	add.w	r0, r4, #20
 800189a:	f7ff ffdb 	bl	8001854 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19FinishPagePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800189e:	4620      	mov	r0, r4
 80018a0:	bd10      	pop	{r4, pc}
 80018a2:	bf00      	nop
 80018a4:	0802f340 	.word	0x0802f340

080018a8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80018a8:	b508      	push	{r3, lr}
 80018aa:	4802      	ldr	r0, [pc, #8]	; (80018b4 <__tcf_0+0xc>)
 80018ac:	f7ff ffe6 	bl	800187c <_ZN12FrontendHeapD1Ev>
 80018b0:	bd08      	pop	{r3, pc}
 80018b2:	bf00      	nop
 80018b4:	20000320 	.word	0x20000320

080018b8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80018b8:	b510      	push	{r4, lr}
 80018ba:	4604      	mov	r4, r0
 80018bc:	f7ff ffde 	bl	800187c <_ZN12FrontendHeapD1Ev>
 80018c0:	4620      	mov	r0, r4
 80018c2:	f641 11a4 	movw	r1, #6564	; 0x19a4
 80018c6:	f029 fc48 	bl	802b15a <_ZdlPvj>
 80018ca:	4620      	mov	r0, r4
 80018cc:	bd10      	pop	{r4, pc}
	...

080018d0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 80018d0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80018d4:	f001 ff1a 	bl	800370c <_ZN14BitmapDatabase11getInstanceEv>
 80018d8:	4605      	mov	r5, r0
 80018da:	f001 ff1b 	bl	8003714 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80018de:	2400      	movs	r4, #0
 80018e0:	4601      	mov	r1, r0
 80018e2:	4623      	mov	r3, r4
 80018e4:	4628      	mov	r0, r5
 80018e6:	4622      	mov	r2, r4
 80018e8:	9400      	str	r4, [sp, #0]
 80018ea:	f01a feeb 	bl	801c6c4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80018ee:	4b26      	ldr	r3, [pc, #152]	; (8001988 <touchgfx_init+0xb8>)
 80018f0:	4a26      	ldr	r2, [pc, #152]	; (800198c <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 80018f2:	4d27      	ldr	r5, [pc, #156]	; (8001990 <touchgfx_init+0xc0>)
 80018f4:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80018f6:	4620      	mov	r0, r4
 80018f8:	f009 f9be 	bl	800ac78 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80018fc:	4825      	ldr	r0, [pc, #148]	; (8001994 <touchgfx_init+0xc4>)
 80018fe:	f01a fe2d 	bl	801c55c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001902:	782b      	ldrb	r3, [r5, #0]
 8001904:	f3bf 8f5b 	dmb	ish
 8001908:	07db      	lsls	r3, r3, #31
 800190a:	d437      	bmi.n	800197c <touchgfx_init+0xac>
 800190c:	4628      	mov	r0, r5
 800190e:	f029 fc26 	bl	802b15e <__cxa_guard_acquire>
 8001912:	b398      	cbz	r0, 800197c <touchgfx_init+0xac>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001914:	4c20      	ldr	r4, [pc, #128]	; (8001998 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001916:	4b21      	ldr	r3, [pc, #132]	; (800199c <touchgfx_init+0xcc>)
 8001918:	6023      	str	r3, [r4, #0]
 800191a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800191e:	f508 57be 	add.w	r7, r8, #6080	; 0x17c0
 8001922:	f508 56c1 	add.w	r6, r8, #6176	; 0x1820
 8001926:	f104 0014 	add.w	r0, r4, #20
 800192a:	6060      	str	r0, [r4, #4]
 800192c:	f8c4 8008 	str.w	r8, [r4, #8]
 8001930:	60e7      	str	r7, [r4, #12]
 8001932:	6126      	str	r6, [r4, #16]
 8001934:	f00f fde4 	bl	8011500 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001938:	4b19      	ldr	r3, [pc, #100]	; (80019a0 <touchgfx_init+0xd0>)
 800193a:	6163      	str	r3, [r4, #20]
 800193c:	4640      	mov	r0, r8
 800193e:	f00f fddf 	bl	8011500 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001942:	4b18      	ldr	r3, [pc, #96]	; (80019a4 <touchgfx_init+0xd4>)
 8001944:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001946:	4638      	mov	r0, r7
 8001948:	f00f fdda 	bl	8011500 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800194c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8001950:	4a15      	ldr	r2, [pc, #84]	; (80019a8 <touchgfx_init+0xd8>)
 8001952:	f8c3 27ec 	str.w	r2, [r3, #2028]	; 0x7ec
 8001956:	f603 0048 	addw	r0, r3, #2120	; 0x848
 800195a:	f009 fb4b 	bl	800aff4 <_ZN5ModelC1Ev>
 800195e:	4622      	mov	r2, r4
 8001960:	f107 015c 	add.w	r1, r7, #92	; 0x5c
 8001964:	4630      	mov	r0, r6
 8001966:	f009 faa5 	bl	800aeb4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800196a:	4630      	mov	r0, r6
 800196c:	f003 f884 	bl	8004a78 <_ZN23FrontendApplicationBase31gotoStartPageScreenNoTransitionEv>
        static FrontendHeap instance;
 8001970:	480e      	ldr	r0, [pc, #56]	; (80019ac <touchgfx_init+0xdc>)
 8001972:	f02a fb5d 	bl	802c030 <atexit>
 8001976:	4628      	mov	r0, r5
 8001978:	f029 fbfd 	bl	802b176 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800197c:	480c      	ldr	r0, [pc, #48]	; (80019b0 <touchgfx_init+0xe0>)
}
 800197e:	b002      	add	sp, #8
 8001980:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001984:	f7ff bc6f 	b.w	8001266 <_ZN11TouchGFXHAL10initializeEv>
 8001988:	2001e23c 	.word	0x2001e23c
 800198c:	20002ae4 	.word	0x20002ae4
 8001990:	2000031c 	.word	0x2000031c
 8001994:	20000008 	.word	0x20000008
 8001998:	20000320 	.word	0x20000320
 800199c:	0802f340 	.word	0x0802f340
 80019a0:	0802f2a4 	.word	0x0802f2a4
 80019a4:	0802f2d8 	.word	0x0802f2d8
 80019a8:	0802f30c 	.word	0x0802f30c
 80019ac:	080018a9 	.word	0x080018a9
 80019b0:	20002a68 	.word	0x20002a68

080019b4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80019b4:	4801      	ldr	r0, [pc, #4]	; (80019bc <touchgfx_taskEntry+0x8>)
 80019b6:	f7ff bc58 	b.w	800126a <_ZN11TouchGFXHAL9taskEntryEv>
 80019ba:	bf00      	nop
 80019bc:	20002a68 	.word	0x20002a68

080019c0 <_GLOBAL__sub_I_touchgfx_init>:
}
 80019c0:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 80019c2:	4c23      	ldr	r4, [pc, #140]	; (8001a50 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 80019c4:	4e23      	ldr	r6, [pc, #140]	; (8001a54 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 80019c6:	4b24      	ldr	r3, [pc, #144]	; (8001a58 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 80019c8:	4d24      	ldr	r5, [pc, #144]	; (8001a5c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80019ca:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80019cc:	4630      	mov	r0, r6
 80019ce:	f7ff fdad 	bl	800152c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80019d2:	4628      	mov	r0, r5
 80019d4:	f01e f822 	bl	801fa1c <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80019d8:	4b21      	ldr	r3, [pc, #132]	; (8001a60 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 80019da:	4822      	ldr	r0, [pc, #136]	; (8001a64 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 80019dc:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80019de:	4c22      	ldr	r4, [pc, #136]	; (8001a68 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 80019e0:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 80019e2:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80019e4:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 80019e6:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80019ea:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 80019ec:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80019f0:	4c1e      	ldr	r4, [pc, #120]	; (8001a6c <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 80019f2:	491f      	ldr	r1, [pc, #124]	; (8001a70 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80019f4:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 80019f6:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80019fa:	4c1e      	ldr	r4, [pc, #120]	; (8001a74 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80019fc:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 80019fe:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a02:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8001a06:	6759      	str	r1, [r3, #116]	; 0x74
 8001a08:	2101      	movs	r1, #1
 8001a0a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001a0e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001a12:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001a16:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001a1a:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001a1e:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001a22:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001a26:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001a2a:	661a      	str	r2, [r3, #96]	; 0x60
 8001a2c:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001a30:	671a      	str	r2, [r3, #112]	; 0x70
 8001a32:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8001a36:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a3a:	8020      	strh	r0, [r4, #0]
 8001a3c:	4c0e      	ldr	r4, [pc, #56]	; (8001a78 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001a3e:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a42:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8001a44:	480d      	ldr	r0, [pc, #52]	; (8001a7c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001a46:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001a48:	4a0d      	ldr	r2, [pc, #52]	; (8001a80 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001a4a:	601a      	str	r2, [r3, #0]
}
 8001a4c:	bd70      	pop	{r4, r5, r6, pc}
 8001a4e:	bf00      	nop
 8001a50:	20001cc4 	.word	0x20001cc4
 8001a54:	20001cc8 	.word	0x20001cc8
 8001a58:	0802ed7c 	.word	0x0802ed7c
 8001a5c:	20002ae8 	.word	0x20002ae8
 8001a60:	20002a68 	.word	0x20002a68
 8001a64:	2001e1c0 	.word	0x2001e1c0
 8001a68:	2001e1b4 	.word	0x2001e1b4
 8001a6c:	2001e1ba 	.word	0x2001e1ba
 8001a70:	01000001 	.word	0x01000001
 8001a74:	2001e1b6 	.word	0x2001e1b6
 8001a78:	2001e1bc 	.word	0x2001e1bc
 8001a7c:	2001e1b8 	.word	0x2001e1b8
 8001a80:	0802ef08 	.word	0x0802ef08

08001a84 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001a84:	4801      	ldr	r0, [pc, #4]	; (8001a8c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001a86:	f7ff bd2d 	b.w	80014e4 <_ZN8STM32DMAD1Ev>
 8001a8a:	bf00      	nop
 8001a8c:	20001cc8 	.word	0x20001cc8

08001a90 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001a90:	4b03      	ldr	r3, [pc, #12]	; (8001aa0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001a92:	2290      	movs	r2, #144	; 0x90
 8001a94:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001a98:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001a9c:	4770      	bx	lr
 8001a9e:	bf00      	nop
 8001aa0:	e000e100 	.word	0xe000e100

08001aa4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001aa4:	4a09      	ldr	r2, [pc, #36]	; (8001acc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001aa6:	490a      	ldr	r1, [pc, #40]	; (8001ad0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001aa8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001aaa:	480a      	ldr	r0, [pc, #40]	; (8001ad4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001aac:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001ab0:	3b01      	subs	r3, #1
 8001ab2:	b29b      	uxth	r3, r3
 8001ab4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001ab6:	6911      	ldr	r1, [r2, #16]
 8001ab8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001abc:	3901      	subs	r1, #1
 8001abe:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001ac0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001ac2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001ac4:	f043 0301 	orr.w	r3, r3, #1
 8001ac8:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001aca:	4770      	bx	lr
 8001acc:	40016800 	.word	0x40016800
 8001ad0:	20002b64 	.word	0x20002b64
 8001ad4:	20002b62 	.word	0x20002b62

08001ad8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001ad8:	4b01      	ldr	r3, [pc, #4]	; (8001ae0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001ada:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8001ade:	4770      	bx	lr
 8001ae0:	40016800 	.word	0x40016800

08001ae4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001ae4:	4b02      	ldr	r3, [pc, #8]	; (8001af0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001ae6:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001ae8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001aec:	625a      	str	r2, [r3, #36]	; 0x24
}
 8001aee:	4770      	bx	lr
 8001af0:	40016800 	.word	0x40016800

08001af4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001af4:	b570      	push	{r4, r5, r6, lr}
 8001af6:	4604      	mov	r4, r0
    HAL::initialize();
 8001af8:	f010 fc71 	bl	80123de <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001afc:	6823      	ldr	r3, [r4, #0]
 8001afe:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001b00:	f017 fc42 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8001b04:	4601      	mov	r1, r0
 8001b06:	4620      	mov	r0, r4
 8001b08:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001b0a:	6823      	ldr	r3, [r4, #0]
 8001b0c:	4a05      	ldr	r2, [pc, #20]	; (8001b24 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001b0e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001b12:	4620      	mov	r0, r4
 8001b14:	46ac      	mov	ip, r5
 8001b16:	2300      	movs	r3, #0
}
 8001b18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001b1c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001b20:	4760      	bx	ip
 8001b22:	bf00      	nop
 8001b24:	d0025800 	.word	0xd0025800

08001b28 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001b28:	f010 bc40 	b.w	80123ac <_ZN8touchgfx3HAL10beginFrameEv>

08001b2c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 8001b2c:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 8001b30:	b113      	cbz	r3, 8001b38 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 8001b32:	4b02      	ldr	r3, [pc, #8]	; (8001b3c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 8001b34:	2201      	movs	r2, #1
 8001b36:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 8001b38:	f010 bc44 	b.w	80123c4 <_ZN8touchgfx3HAL8endFrameEv>
 8001b3c:	20002b60 	.word	0x20002b60

08001b40 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001b40:	f010 bbfe 	b.w	8012340 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001b44 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001b44:	f010 bd57 	b.w	80125f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001b48 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001b48:	4b03      	ldr	r3, [pc, #12]	; (8001b58 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001b4a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001b4e:	609a      	str	r2, [r3, #8]
 8001b50:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001b54:	609a      	str	r2, [r3, #8]
}
 8001b56:	4770      	bx	lr
 8001b58:	e000e100 	.word	0xe000e100

08001b5c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001b5c:	4b08      	ldr	r3, [pc, #32]	; (8001b80 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001b5e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001b62:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001b66:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001b6a:	f3bf 8f6f 	isb	sy
 8001b6e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001b72:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001b76:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001b7a:	f3bf 8f6f 	isb	sy
}
 8001b7e:	4770      	bx	lr
 8001b80:	e000e100 	.word	0xe000e100

08001b84 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001b84:	b510      	push	{r4, lr}
        return instance;
 8001b86:	4c14      	ldr	r4, [pc, #80]	; (8001bd8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001b88:	6823      	ldr	r3, [r4, #0]
 8001b8a:	b323      	cbz	r3, 8001bd6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001b8c:	4b13      	ldr	r3, [pc, #76]	; (8001bdc <HAL_LTDC_LineEventCallback+0x58>)
 8001b8e:	4a14      	ldr	r2, [pc, #80]	; (8001be0 <HAL_LTDC_LineEventCallback+0x5c>)
 8001b90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b92:	8811      	ldrh	r1, [r2, #0]
 8001b94:	428b      	cmp	r3, r1
 8001b96:	d113      	bne.n	8001bc0 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001b98:	4b12      	ldr	r3, [pc, #72]	; (8001be4 <HAL_LTDC_LineEventCallback+0x60>)
 8001b9a:	8819      	ldrh	r1, [r3, #0]
 8001b9c:	f00b fc3a 	bl	800d414 <HAL_LTDC_ProgramLineEvent>
 8001ba0:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001ba2:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001ba6:	3301      	adds	r3, #1
 8001ba8:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001bac:	f7ff fc48 	bl	8001440 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001bb0:	6820      	ldr	r0, [r4, #0]
 8001bb2:	f011 fa33 	bl	801301c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001bb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001bba:	2000      	movs	r0, #0
 8001bbc:	f7ff bb2c 	b.w	8001218 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001bc0:	f00b fc28 	bl	800d414 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001bc4:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001bc6:	6803      	ldr	r3, [r0, #0]
 8001bc8:	6a1b      	ldr	r3, [r3, #32]
 8001bca:	4798      	blx	r3
    }
 8001bcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001bd0:	2000      	movs	r0, #0
 8001bd2:	f7ff bb22 	b.w	800121a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001bd6:	bd10      	pop	{r4, pc}
 8001bd8:	2001e1c0 	.word	0x2001e1c0
 8001bdc:	40016800 	.word	0x40016800
 8001be0:	20002b64 	.word	0x20002b64
 8001be4:	20002b62 	.word	0x20002b62

08001be8 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001be8:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001bea:	4b06      	ldr	r3, [pc, #24]	; (8001c04 <SPI5_Write+0x1c>)
{
 8001bec:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001bf0:	681b      	ldr	r3, [r3, #0]
 8001bf2:	4805      	ldr	r0, [pc, #20]	; (8001c08 <SPI5_Write+0x20>)
 8001bf4:	2201      	movs	r2, #1
 8001bf6:	f10d 0106 	add.w	r1, sp, #6
 8001bfa:	f00c f91c 	bl	800de36 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001bfe:	b003      	add	sp, #12
 8001c00:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c04:	20000018 	.word	0x20000018
 8001c08:	20009028 	.word	0x20009028

08001c0c <StartActuating>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartActuating */
void StartActuating(void *argument)
{
 8001c0c:	b583      	push	{r0, r1, r7, lr}
	  /* Infinite loop */


	  while(1){

		  if(FreqSweep<=30){
 8001c0e:	4e27      	ldr	r6, [pc, #156]	; (8001cac <StartActuating+0xa0>)

		      osMessageQueueGet(ADCstateHandle,&buffer_get, 0, osWaitForever);

			  if(buffer_get==1){
				            htim2.Instance->CCR1=htim2.Instance->ARR * 0.50;
 8001c10:	4d27      	ldr	r5, [pc, #156]	; (8001cb0 <StartActuating+0xa4>)
 8001c12:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 8001cc8 <StartActuating+0xbc>
 8001c16:	2400      	movs	r4, #0
		  if(FreqSweep<=30){
 8001c18:	6833      	ldr	r3, [r6, #0]
 8001c1a:	2b1e      	cmp	r3, #30
 8001c1c:	dc32      	bgt.n	8001c84 <StartActuating+0x78>
		      osMessageQueueGet(ADCstateHandle,&buffer_get, 0, osWaitForever);
 8001c1e:	4825      	ldr	r0, [pc, #148]	; (8001cb4 <StartActuating+0xa8>)
 8001c20:	f04f 33ff 	mov.w	r3, #4294967295
 8001c24:	6800      	ldr	r0, [r0, #0]
 8001c26:	2200      	movs	r2, #0
 8001c28:	f10d 0107 	add.w	r1, sp, #7
 8001c2c:	f00d fb9e 	bl	800f36c <osMessageQueueGet>
			  if(buffer_get==1){
 8001c30:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001c34:	2b01      	cmp	r3, #1
 8001c36:	d125      	bne.n	8001c84 <StartActuating+0x78>
				            htim2.Instance->CCR1=htim2.Instance->ARR * 0.50;
 8001c38:	f8d8 7000 	ldr.w	r7, [r8]
 8001c3c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8001c3e:	f7fe fcd1 	bl	80005e4 <__aeabi_ui2d>
 8001c42:	4622      	mov	r2, r4
 8001c44:	462b      	mov	r3, r5
 8001c46:	f7fe fd47 	bl	80006d8 <__aeabi_dmul>
 8001c4a:	f7ff f81d 	bl	8000c88 <__aeabi_d2uiz>
			 	        	FreqSweepConverter=1000/FreqSweep+1;
 8001c4e:	6832      	ldr	r2, [r6, #0]
				            htim2.Instance->CCR1=htim2.Instance->ARR * 0.50;
 8001c50:	6378      	str	r0, [r7, #52]	; 0x34
			 	        	FreqSweepConverter=1000/FreqSweep+1;
 8001c52:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001c56:	fb93 f3f2 	sdiv	r3, r3, r2
 8001c5a:	3301      	adds	r3, #1
 8001c5c:	ee07 3a90 	vmov	s15, r3
 8001c60:	4b15      	ldr	r3, [pc, #84]	; (8001cb8 <StartActuating+0xac>)
			 				htim2.Instance->PSC=FreqSweepConverter;
			 				FreqSweep++;
			 				osMessageQueuePut(ProgressBarHandle, &FreqSweep, 0, 20);
 8001c62:	4816      	ldr	r0, [pc, #88]	; (8001cbc <StartActuating+0xb0>)
			 	        	FreqSweepConverter=1000/FreqSweep+1;
 8001c64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
			 				FreqSweep++;
 8001c68:	3201      	adds	r2, #1
			 	        	FreqSweepConverter=1000/FreqSweep+1;
 8001c6a:	edc3 7a00 	vstr	s15, [r3]
			 				htim2.Instance->PSC=FreqSweepConverter;
 8001c6e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
			 				FreqSweep++;
 8001c72:	6032      	str	r2, [r6, #0]
			 				osMessageQueuePut(ProgressBarHandle, &FreqSweep, 0, 20);
 8001c74:	6800      	ldr	r0, [r0, #0]
			 				htim2.Instance->PSC=FreqSweepConverter;
 8001c76:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
			 				osMessageQueuePut(ProgressBarHandle, &FreqSweep, 0, 20);
 8001c7a:	2314      	movs	r3, #20
 8001c7c:	2200      	movs	r2, #0
 8001c7e:	4631      	mov	r1, r6
 8001c80:	f00d fb32 	bl	800f2e8 <osMessageQueuePut>
		      }
	       }

		  if(FreqSweep==31){
 8001c84:	6833      	ldr	r3, [r6, #0]
 8001c86:	2b1f      	cmp	r3, #31
 8001c88:	d1c6      	bne.n	8001c18 <StartActuating+0xc>
			  FreqSweep=0;
//			  HAL_TIM_PWM_Stop(&htim4, TIM_CHANNEL_2);
			  htim2.Instance->CCR1=htim2.Instance->ARR +1;
 8001c8a:	f8d8 2000 	ldr.w	r2, [r8]
			  FreqSweep=0;
 8001c8e:	2300      	movs	r3, #0
 8001c90:	6033      	str	r3, [r6, #0]
			  htim2.Instance->CCR1=htim2.Instance->ARR +1;
 8001c92:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8001c94:	3301      	adds	r3, #1
 8001c96:	6353      	str	r3, [r2, #52]	; 0x34
			  osThreadSuspend(PQReaderHandle);
 8001c98:	4b09      	ldr	r3, [pc, #36]	; (8001cc0 <StartActuating+0xb4>)
 8001c9a:	6818      	ldr	r0, [r3, #0]
 8001c9c:	f00d f9c6 	bl	800f02c <osThreadSuspend>
			  osThreadSuspend(TemperatureContHandle);
 8001ca0:	4b08      	ldr	r3, [pc, #32]	; (8001cc4 <StartActuating+0xb8>)
 8001ca2:	6818      	ldr	r0, [r3, #0]
 8001ca4:	f00d f9c2 	bl	800f02c <osThreadSuspend>
 8001ca8:	e7b6      	b.n	8001c18 <StartActuating+0xc>
 8001caa:	bf00      	nop
 8001cac:	20000010 	.word	0x20000010
 8001cb0:	3fe00000 	.word	0x3fe00000
 8001cb4:	20002b68 	.word	0x20002b68
 8001cb8:	20002b74 	.word	0x20002b74
 8001cbc:	20002b88 	.word	0x20002b88
 8001cc0:	20002b84 	.word	0x20002b84
 8001cc4:	20002c9c 	.word	0x20002c9c
 8001cc8:	200090c0 	.word	0x200090c0
 8001ccc:	00000000 	.word	0x00000000

08001cd0 <TempControl>:
{
 8001cd0:	b580      	push	{r7, lr}
	    Temp=(Temp_Vanalogue-0.5)/0.01-16;
 8001cd2:	a72f      	add	r7, pc, #188	; (adr r7, 8001d90 <TempControl+0xc0>)
 8001cd4:	e9d7 6700 	ldrd	r6, r7, [r7]
	    HAL_ADC_Start(&hadc3);
 8001cd8:	f8df 80bc 	ldr.w	r8, [pc, #188]	; 8001d98 <TempControl+0xc8>
	    Temp=(Temp_Vanalogue-0.5)/0.01-16;
 8001cdc:	4d24      	ldr	r5, [pc, #144]	; (8001d70 <TempControl+0xa0>)
 8001cde:	2400      	movs	r4, #0
	    HAL_ADC_Start(&hadc3);
 8001ce0:	4640      	mov	r0, r8
 8001ce2:	f009 ff91 	bl	800bc08 <HAL_ADC_Start>
	    HAL_ADC_PollForConversion(&hadc3, 1);
 8001ce6:	2101      	movs	r1, #1
 8001ce8:	4640      	mov	r0, r8
 8001cea:	f00a f801 	bl	800bcf0 <HAL_ADC_PollForConversion>
	    Temp_Vdigital=HAL_ADC_GetValue(&hadc3);
 8001cee:	4640      	mov	r0, r8
 8001cf0:	f00a f8e0 	bl	800beb4 <HAL_ADC_GetValue>
 8001cf4:	b280      	uxth	r0, r0
	    Temp_Vanalogue=(float)Temp_Vdigital*3/4096;
 8001cf6:	ee07 0a90 	vmov	s15, r0
 8001cfa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001cfe:	eeb0 7a08 	vmov.f32	s14, #8	; 0x40400000  3.0
	    Temp_Vdigital=HAL_ADC_GetValue(&hadc3);
 8001d02:	4b1c      	ldr	r3, [pc, #112]	; (8001d74 <TempControl+0xa4>)
	    Temp_Vanalogue=(float)Temp_Vdigital*3/4096;
 8001d04:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d08:	ed9f 7a1b 	vldr	s14, [pc, #108]	; 8001d78 <TempControl+0xa8>
	    Temp_Vdigital=HAL_ADC_GetValue(&hadc3);
 8001d0c:	8018      	strh	r0, [r3, #0]
	    Temp_Vanalogue=(float)Temp_Vdigital*3/4096;
 8001d0e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d12:	4b1a      	ldr	r3, [pc, #104]	; (8001d7c <TempControl+0xac>)
	    Temp=(Temp_Vanalogue-0.5)/0.01-16;
 8001d14:	ee17 0a90 	vmov	r0, s15
	    Temp_Vanalogue=(float)Temp_Vdigital*3/4096;
 8001d18:	edc3 7a00 	vstr	s15, [r3]
	    Temp=(Temp_Vanalogue-0.5)/0.01-16;
 8001d1c:	f7fe fc84 	bl	8000628 <__aeabi_f2d>
 8001d20:	4622      	mov	r2, r4
 8001d22:	462b      	mov	r3, r5
 8001d24:	f7fe fb20 	bl	8000368 <__aeabi_dsub>
 8001d28:	4632      	mov	r2, r6
 8001d2a:	463b      	mov	r3, r7
 8001d2c:	f7fe fdfe 	bl	800092c <__aeabi_ddiv>
 8001d30:	2200      	movs	r2, #0
 8001d32:	4b13      	ldr	r3, [pc, #76]	; (8001d80 <TempControl+0xb0>)
 8001d34:	f7fe fb18 	bl	8000368 <__aeabi_dsub>
 8001d38:	f7fe ffc6 	bl	8000cc8 <__aeabi_d2f>
	    if(Temp<=35){
 8001d3c:	ed9f 7a11 	vldr	s14, [pc, #68]	; 8001d84 <TempControl+0xb4>
	    Temp=(Temp_Vanalogue-0.5)/0.01-16;
 8001d40:	4b11      	ldr	r3, [pc, #68]	; (8001d88 <TempControl+0xb8>)
 8001d42:	ee07 0a90 	vmov	s15, r0
	    if(Temp<=35){
 8001d46:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001d4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	    Temp=(Temp_Vanalogue-0.5)/0.01-16;
 8001d4e:	6018      	str	r0, [r3, #0]
	    	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 8001d50:	bf98      	it	ls
 8001d52:	2201      	movls	r2, #1
	    	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 8001d54:	480d      	ldr	r0, [pc, #52]	; (8001d8c <TempControl+0xbc>)
 8001d56:	bf88      	it	hi
 8001d58:	2200      	movhi	r2, #0
 8001d5a:	2102      	movs	r1, #2
 8001d5c:	f00a fd76 	bl	800c84c <HAL_GPIO_WritePin>
	    osDelay(500);
 8001d60:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001d64:	f00d f99a 	bl	800f09c <osDelay>
	    HAL_ADC_Start(&hadc3);
 8001d68:	e7ba      	b.n	8001ce0 <TempControl+0x10>
 8001d6a:	bf00      	nop
 8001d6c:	f3af 8000 	nop.w
 8001d70:	3fe00000 	.word	0x3fe00000
 8001d74:	20002c98 	.word	0x20002c98
 8001d78:	39800000 	.word	0x39800000
 8001d7c:	20002c94 	.word	0x20002c94
 8001d80:	40300000 	.word	0x40300000
 8001d84:	420c0000 	.word	0x420c0000
 8001d88:	20002c90 	.word	0x20002c90
 8001d8c:	40020000 	.word	0x40020000
 8001d90:	47ae147b 	.word	0x47ae147b
 8001d94:	3f847ae1 	.word	0x3f847ae1
 8001d98:	20008d48 	.word	0x20008d48

08001d9c <SystemClock_Config>:
{
 8001d9c:	b570      	push	{r4, r5, r6, lr}
 8001d9e:	b0a0      	sub	sp, #128	; 0x80
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001da0:	2210      	movs	r2, #16
 8001da2:	2100      	movs	r1, #0
 8001da4:	a80a      	add	r0, sp, #40	; 0x28
 8001da6:	f02a faab 	bl	802c300 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001daa:	2214      	movs	r2, #20
 8001dac:	2100      	movs	r1, #0
 8001dae:	a803      	add	r0, sp, #12
 8001db0:	f02a faa6 	bl	802c300 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001db4:	2100      	movs	r1, #0
 8001db6:	2230      	movs	r2, #48	; 0x30
 8001db8:	a814      	add	r0, sp, #80	; 0x50
 8001dba:	f02a faa1 	bl	802c300 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001dbe:	2500      	movs	r5, #0
 8001dc0:	4b21      	ldr	r3, [pc, #132]	; (8001e48 <SystemClock_Config+0xac>)
 8001dc2:	9501      	str	r5, [sp, #4]
 8001dc4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001dc6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001dca:	641a      	str	r2, [r3, #64]	; 0x40
 8001dcc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001dce:	4a1f      	ldr	r2, [pc, #124]	; (8001e4c <SystemClock_Config+0xb0>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001dd0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001dd4:	9301      	str	r3, [sp, #4]
 8001dd6:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001dd8:	9502      	str	r5, [sp, #8]
 8001dda:	6813      	ldr	r3, [r2, #0]
 8001ddc:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8001de0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001de4:	6013      	str	r3, [r2, #0]
 8001de6:	6813      	ldr	r3, [r2, #0]
 8001de8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001dec:	9302      	str	r3, [sp, #8]
 8001dee:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001df0:	f44f 3680 	mov.w	r6, #65536	; 0x10000
 8001df4:	2301      	movs	r3, #1
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001df6:	2402      	movs	r4, #2
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001df8:	e9cd 3608 	strd	r3, r6, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001dfc:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 72;
 8001e00:	2204      	movs	r2, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001e02:	e9cd 430e 	strd	r4, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 72;
 8001e06:	2348      	movs	r3, #72	; 0x48
 8001e08:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001e0c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 3;
 8001e0e:	2303      	movs	r3, #3
 8001e10:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001e12:	9412      	str	r4, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001e14:	f00b fb1c 	bl	800d450 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001e18:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001e1a:	e9cd 3403 	strd	r3, r4, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001e1e:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001e20:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001e24:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001e26:	e9cd 3306 	strd	r3, r3, [sp, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001e2a:	9505      	str	r5, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001e2c:	f00b fce8 	bl	800d800 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001e30:	2308      	movs	r3, #8
 8001e32:	9314      	str	r3, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 60;
 8001e34:	233c      	movs	r3, #60	; 0x3c
 8001e36:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001e38:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 8001e3a:	2305      	movs	r3, #5
 8001e3c:	931a      	str	r3, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 8001e3e:	961d      	str	r6, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001e40:	f00b fdb8 	bl	800d9b4 <HAL_RCCEx_PeriphCLKConfig>
}
 8001e44:	b020      	add	sp, #128	; 0x80
 8001e46:	bd70      	pop	{r4, r5, r6, pc}
 8001e48:	40023800 	.word	0x40023800
 8001e4c:	40007000 	.word	0x40007000

08001e50 <main>:
{
 8001e50:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001e54:	b09d      	sub	sp, #116	; 0x74
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e56:	2400      	movs	r4, #0
 8001e58:	4dc8      	ldr	r5, [pc, #800]	; (800217c <main+0x32c>)
  hi2c3.Instance = I2C3;
 8001e5a:	f8df a368 	ldr.w	sl, [pc, #872]	; 80021c4 <main+0x374>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001e5e:	f8df b368 	ldr.w	fp, [pc, #872]	; 80021c8 <main+0x378>
  HAL_Init();
 8001e62:	f009 fdeb 	bl	800ba3c <HAL_Init>
  SystemClock_Config();
 8001e66:	f7ff ff99 	bl	8001d9c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e6a:	2214      	movs	r2, #20
 8001e6c:	2100      	movs	r1, #0
 8001e6e:	a80f      	add	r0, sp, #60	; 0x3c
 8001e70:	f02a fa46 	bl	802c300 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e74:	9402      	str	r4, [sp, #8]
 8001e76:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e78:	48c1      	ldr	r0, [pc, #772]	; (8002180 <main+0x330>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e7a:	f043 0320 	orr.w	r3, r3, #32
 8001e7e:	632b      	str	r3, [r5, #48]	; 0x30
 8001e80:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e82:	f003 0320 	and.w	r3, r3, #32
 8001e86:	9302      	str	r3, [sp, #8]
 8001e88:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001e8a:	9403      	str	r4, [sp, #12]
 8001e8c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e8e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001e92:	632b      	str	r3, [r5, #48]	; 0x30
 8001e94:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e96:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001e9a:	9303      	str	r3, [sp, #12]
 8001e9c:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e9e:	9404      	str	r4, [sp, #16]
 8001ea0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ea2:	f043 0304 	orr.w	r3, r3, #4
 8001ea6:	632b      	str	r3, [r5, #48]	; 0x30
 8001ea8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001eaa:	f003 0304 	and.w	r3, r3, #4
 8001eae:	9304      	str	r3, [sp, #16]
 8001eb0:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001eb2:	9405      	str	r4, [sp, #20]
 8001eb4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001eb6:	f043 0301 	orr.w	r3, r3, #1
 8001eba:	632b      	str	r3, [r5, #48]	; 0x30
 8001ebc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ebe:	f003 0301 	and.w	r3, r3, #1
 8001ec2:	9305      	str	r3, [sp, #20]
 8001ec4:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ec6:	9406      	str	r4, [sp, #24]
 8001ec8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001eca:	f043 0302 	orr.w	r3, r3, #2
 8001ece:	632b      	str	r3, [r5, #48]	; 0x30
 8001ed0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ed2:	f003 0302 	and.w	r3, r3, #2
 8001ed6:	9306      	str	r3, [sp, #24]
 8001ed8:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001eda:	9407      	str	r4, [sp, #28]
 8001edc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ede:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001ee2:	632b      	str	r3, [r5, #48]	; 0x30
 8001ee4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ee6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001eea:	9307      	str	r3, [sp, #28]
 8001eec:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001eee:	9408      	str	r4, [sp, #32]
 8001ef0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ef2:	f043 0310 	orr.w	r3, r3, #16
 8001ef6:	632b      	str	r3, [r5, #48]	; 0x30
 8001ef8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001efa:	f003 0310 	and.w	r3, r3, #16
 8001efe:	9308      	str	r3, [sp, #32]
 8001f00:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f02:	9409      	str	r4, [sp, #36]	; 0x24
 8001f04:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001f06:	f043 0308 	orr.w	r3, r3, #8
 8001f0a:	632b      	str	r3, [r5, #48]	; 0x30
 8001f0c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001f0e:	f003 0308 	and.w	r3, r3, #8
 8001f12:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f14:	4622      	mov	r2, r4
 8001f16:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f18:	9b09      	ldr	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f1a:	f00a fc97 	bl	800c84c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(EN_HP_GPIO_Port, EN_HP_Pin, GPIO_PIN_RESET);
 8001f1e:	4899      	ldr	r0, [pc, #612]	; (8002184 <main+0x334>)
 8001f20:	4622      	mov	r2, r4
 8001f22:	2102      	movs	r1, #2
 8001f24:	f00a fc92 	bl	800c84c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001f28:	4897      	ldr	r0, [pc, #604]	; (8002188 <main+0x338>)
 8001f2a:	4622      	mov	r2, r4
 8001f2c:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001f30:	f00a fc8c 	bl	800c84c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 8001f34:	4622      	mov	r2, r4
 8001f36:	4895      	ldr	r0, [pc, #596]	; (800218c <main+0x33c>)
 8001f38:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f3c:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 8001f3e:	f00a fc85 	bl	800c84c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f42:	2704      	movs	r7, #4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f44:	f04f 0802 	mov.w	r8, #2
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f48:	488d      	ldr	r0, [pc, #564]	; (8002180 <main+0x330>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f4a:	f8cd 8048 	str.w	r8, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f4e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f50:	e9cd 760f 	strd	r7, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f54:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f56:	f00a fb91 	bl	800c67c <HAL_GPIO_Init>
  HAL_GPIO_Init(EN_HP_GPIO_Port, &GPIO_InitStruct);
 8001f5a:	488a      	ldr	r0, [pc, #552]	; (8002184 <main+0x334>)
 8001f5c:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f5e:	e9cd 860f 	strd	r8, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f62:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(EN_HP_GPIO_Port, &GPIO_InitStruct);
 8001f66:	f00a fb89 	bl	800c67c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001f6a:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f6e:	4886      	ldr	r0, [pc, #536]	; (8002188 <main+0x338>)
 8001f70:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f72:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Pin = LD3_Pin;
 8001f76:	f44f 5900 	mov.w	r9, #8192	; 0x2000
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f7a:	e9cd 4811 	strd	r4, r8, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f7e:	f00a fb7d 	bl	800c67c <HAL_GPIO_Init>
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 8001f82:	a90f      	add	r1, sp, #60	; 0x3c
 8001f84:	4881      	ldr	r0, [pc, #516]	; (800218c <main+0x33c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f86:	e9cd 960f 	strd	r9, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f8a:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 8001f8e:	f00a fb75 	bl	800c67c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001f92:	487f      	ldr	r0, [pc, #508]	; (8002190 <main+0x340>)
 8001f94:	4b7f      	ldr	r3, [pc, #508]	; (8002194 <main+0x344>)
 8001f96:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001f98:	f00a f8c4 	bl	800c124 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001f9c:	4a7e      	ldr	r2, [pc, #504]	; (8002198 <main+0x348>)
 8001f9e:	4b7f      	ldr	r3, [pc, #508]	; (800219c <main+0x34c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001fa0:	f8ca 4020 	str.w	r4, [sl, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001fa4:	e9ca 2300 	strd	r2, r3, [sl]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001fa8:	4650      	mov	r0, sl
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001faa:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001fae:	e9ca 3404 	strd	r3, r4, [sl, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001fb2:	e9ca 4402 	strd	r4, r4, [sl, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001fb6:	e9ca 4406 	strd	r4, r4, [sl, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001fba:	f00a fe2f 	bl	800cc1c <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001fbe:	2110      	movs	r1, #16
 8001fc0:	4650      	mov	r0, sl
 8001fc2:	f00b f86b 	bl	800d09c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001fc6:	4621      	mov	r1, r4
 8001fc8:	4650      	mov	r0, sl
 8001fca:	f00b f886 	bl	800d0da <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001fce:	4874      	ldr	r0, [pc, #464]	; (80021a0 <main+0x350>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001fd0:	4974      	ldr	r1, [pc, #464]	; (80021a4 <main+0x354>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001fd2:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001fd4:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001fd8:	f44f 7c00 	mov.w	ip, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001fdc:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001fe0:	2318      	movs	r3, #24
 8001fe2:	e9c0 c306 	strd	ip, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001fe6:	230a      	movs	r3, #10
 8001fe8:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001fea:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001fee:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001ff2:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001ff6:	f00b fee1 	bl	800ddbc <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001ffa:	4a6b      	ldr	r2, [pc, #428]	; (80021a8 <main+0x358>)
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001ffc:	f8cb 9028 	str.w	r9, [fp, #40]	; 0x28
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8002000:	f04f 0a10 	mov.w	sl, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8002004:	e9cb 2600 	strd	r2, r6, [fp]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8002008:	2240      	movs	r2, #64	; 0x40
 800200a:	e9cb a204 	strd	sl, r2, [fp, #16]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800200e:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8002012:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8002016:	e9cb 2406 	strd	r2, r4, [fp, #24]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800201a:	e9cb 3408 	strd	r3, r4, [fp, #32]
  SdramTiming.ExitSelfRefreshDelay = 7;
 800201e:	2207      	movs	r2, #7
  SdramTiming.WriteRecoveryTime = 3;
 8002020:	2303      	movs	r3, #3
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002022:	a90f      	add	r1, sp, #60	; 0x3c
 8002024:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002026:	f04f 0908 	mov.w	r9, #8
  SdramTiming.RPDelay = 2;
 800202a:	e9cd 3813 	strd	r3, r8, [sp, #76]	; 0x4c
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800202e:	e9cb 4702 	strd	r4, r7, [fp, #8]
  SdramTiming.SelfRefreshTime = 4;
 8002032:	e9cd 2710 	strd	r2, r7, [sp, #64]	; 0x40
  SdramTiming.LoadToActiveDelay = 2;
 8002036:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  SdramTiming.RowCycleDelay = 7;
 800203a:	9212      	str	r2, [sp, #72]	; 0x48
  SdramTiming.RCDDelay = 2;
 800203c:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002040:	f00b fde2 	bl	800dc08 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002044:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002048:	a90b      	add	r1, sp, #44	; 0x2c
 800204a:	4658      	mov	r0, fp
  Command->AutoRefreshNumber       = 1;
 800204c:	e9cd 960c 	strd	r9, r6, [sp, #48]	; 0x30
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8002050:	960b      	str	r6, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 8002052:	940a      	str	r4, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = 0;
 8002054:	940e      	str	r4, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002056:	f00b fdf7 	bl	800dc48 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800205a:	4630      	mov	r0, r6
 800205c:	f009 fd1a 	bl	800ba94 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8002060:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002064:	a90b      	add	r1, sp, #44	; 0x2c
 8002066:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002068:	e9cd 890b 	strd	r8, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 800206c:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8002070:	f00b fdea 	bl	800dc48 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8002074:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002076:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800207a:	a90b      	add	r1, sp, #44	; 0x2c
 800207c:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800207e:	e9cd 390b 	strd	r3, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8002082:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002086:	f00b fddf 	bl	800dc48 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800208a:	f44f 720c 	mov.w	r2, #560	; 0x230
 800208e:	920a      	str	r2, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = tmpmrd;
 8002090:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002092:	920e      	str	r2, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002094:	a90b      	add	r1, sp, #44	; 0x2c
 8002096:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800209a:	4658      	mov	r0, fp
  Command->AutoRefreshNumber       = 1;
 800209c:	960d      	str	r6, [sp, #52]	; 0x34
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800209e:	e9cd 790b 	strd	r7, r9, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80020a2:	f00b fdd1 	bl	800dc48 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80020a6:	f240 516a 	movw	r1, #1386	; 0x56a
 80020aa:	4658      	mov	r0, fp
 80020ac:	f00b fde3 	bl	800dc76 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80020b0:	2234      	movs	r2, #52	; 0x34
 80020b2:	4621      	mov	r1, r4
 80020b4:	a80f      	add	r0, sp, #60	; 0x3c
 80020b6:	f02a f923 	bl	802c300 <memset>
  hltdc.Instance = LTDC;
 80020ba:	4b3c      	ldr	r3, [pc, #240]	; (80021ac <main+0x35c>)
 80020bc:	4a3c      	ldr	r2, [pc, #240]	; (80021b0 <main+0x360>)
  hltdc.Init.Backcolor.Blue = 0;
 80020be:	869c      	strh	r4, [r3, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80020c0:	e9c3 2400 	strd	r2, r4, [r3]
  hltdc.Init.HorizontalSync = 9;
 80020c4:	2209      	movs	r2, #9
  hltdc.Init.AccumulatedVBP = 3;
 80020c6:	f04f 0e1d 	mov.w	lr, #29
  hltdc.Init.VerticalSync = 1;
 80020ca:	e9c3 2605 	strd	r2, r6, [r3, #20]
  hltdc.Init.AccumulatedVBP = 3;
 80020ce:	2203      	movs	r2, #3
 80020d0:	e9c3 e207 	strd	lr, r2, [r3, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80020d4:	f240 1b0d 	movw	fp, #269	; 0x10d
 80020d8:	f240 1243 	movw	r2, #323	; 0x143
 80020dc:	e9c3 b209 	strd	fp, r2, [r3, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80020e0:	f240 1117 	movw	r1, #279	; 0x117
 80020e4:	f240 1247 	movw	r2, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80020e8:	4618      	mov	r0, r3
  hltdc.Init.TotalHeigh = 327;
 80020ea:	e9c3 120b 	strd	r1, r2, [r3, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80020ee:	e9c3 4402 	strd	r4, r4, [r3, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80020f2:	611c      	str	r4, [r3, #16]
  hltdc.Init.Backcolor.Red = 0;
 80020f4:	f883 4036 	strb.w	r4, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80020f8:	f00b f894 	bl	800d224 <HAL_LTDC_Init>
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80020fc:	4b2b      	ldr	r3, [pc, #172]	; (80021ac <main+0x35c>)
  pLayerCfg.WindowX0 = 0;
 80020fe:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.Alpha = 255;
 8002100:	20ff      	movs	r0, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8002102:	f04f 0b05 	mov.w	fp, #5
  pLayerCfg.WindowX1 = 240;
 8002106:	21f0      	movs	r1, #240	; 0xf0
  pLayerCfg.WindowY1 = 320;
 8002108:	f44f 72a0 	mov.w	r2, #320	; 0x140
  pLayerCfg.Alpha0 = 0;
 800210c:	e9cd 0414 	strd	r0, r4, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8002110:	f44f 6080 	mov.w	r0, #1024	; 0x400
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8002114:	e9cd 2812 	strd	r2, r8, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8002118:	e9cd 0b16 	strd	r0, fp, [sp, #88]	; 0x58
  pLayerCfg.WindowY0 = 0;
 800211c:	e9cd 1410 	strd	r1, r4, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8002120:	e9cd 4118 	strd	r4, r1, [sp, #96]	; 0x60
  pLayerCfg.ImageHeight = 320;
 8002124:	921a      	str	r2, [sp, #104]	; 0x68
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002126:	a90f      	add	r1, sp, #60	; 0x3c
 8002128:	4622      	mov	r2, r4
 800212a:	4618      	mov	r0, r3
  pLayerCfg.Backcolor.Blue = 0;
 800212c:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8002130:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002134:	f00b f941 	bl	800d3ba <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8002138:	4b1e      	ldr	r3, [pc, #120]	; (80021b4 <main+0x364>)
 800213a:	4a1f      	ldr	r2, [pc, #124]	; (80021b8 <main+0x368>)
 800213c:	601a      	str	r2, [r3, #0]
  LcdDrv->Init();
 800213e:	6812      	ldr	r2, [r2, #0]
 8002140:	4790      	blx	r2
  LcdDrv->DisplayOff();
 8002142:	4b1c      	ldr	r3, [pc, #112]	; (80021b4 <main+0x364>)
 8002144:	681b      	ldr	r3, [r3, #0]
 8002146:	68db      	ldr	r3, [r3, #12]
 8002148:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800214a:	4b1c      	ldr	r3, [pc, #112]	; (80021bc <main+0x36c>)
 800214c:	4a1c      	ldr	r2, [pc, #112]	; (80021c0 <main+0x370>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800214e:	e9c3 480a 	strd	r4, r8, [r3, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8002152:	e9c3 440c 	strd	r4, r4, [r3, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002156:	4618      	mov	r0, r3
  hdma2d.Init.Mode = DMA2D_M2M;
 8002158:	e9c3 2400 	strd	r2, r4, [r3]
  hdma2d.Init.OutputOffset = 0;
 800215c:	e9c3 8402 	strd	r8, r4, [r3, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002160:	f00a f990 	bl	800c484 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8002164:	4b15      	ldr	r3, [pc, #84]	; (80021bc <main+0x36c>)
  htim3.Instance = TIM3;
 8002166:	f8df 8064 	ldr.w	r8, [pc, #100]	; 80021cc <main+0x37c>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800216a:	4631      	mov	r1, r6
 800216c:	4618      	mov	r0, r3
 800216e:	f00a fa41 	bl	800c5f4 <HAL_DMA2D_ConfigLayer>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002172:	221c      	movs	r2, #28
 8002174:	4621      	mov	r1, r4
 8002176:	a80f      	add	r0, sp, #60	; 0x3c
 8002178:	e02a      	b.n	80021d0 <main+0x380>
 800217a:	bf00      	nop
 800217c:	40023800 	.word	0x40023800
 8002180:	40020800 	.word	0x40020800
 8002184:	40020000 	.word	0x40020000
 8002188:	40020c00 	.word	0x40020c00
 800218c:	40021800 	.word	0x40021800
 8002190:	20008d90 	.word	0x20008d90
 8002194:	40023000 	.word	0x40023000
 8002198:	40005c00 	.word	0x40005c00
 800219c:	000186a0 	.word	0x000186a0
 80021a0:	20009028 	.word	0x20009028
 80021a4:	40015000 	.word	0x40015000
 80021a8:	a0000140 	.word	0xa0000140
 80021ac:	20008f4c 	.word	0x20008f4c
 80021b0:	40016800 	.word	0x40016800
 80021b4:	20002b7c 	.word	0x20002b7c
 80021b8:	2000002c 	.word	0x2000002c
 80021bc:	20008d98 	.word	0x20008d98
 80021c0:	4002b000 	.word	0x4002b000
 80021c4:	20008ef8 	.word	0x20008ef8
 80021c8:	20008ff4 	.word	0x20008ff4
 80021cc:	20009100 	.word	0x20009100
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80021d0:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 80021d4:	f02a f894 	bl	802c300 <memset>
  htim3.Instance = TIM3;
 80021d8:	4bc8      	ldr	r3, [pc, #800]	; (80024fc <main+0x6ac>)
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80021da:	f8c8 4008 	str.w	r4, [r8, #8]
  htim3.Init.Prescaler = 0;
 80021de:	e9c8 3400 	strd	r3, r4, [r8]
  htim3.Init.Period = 35156-1;
 80021e2:	f648 1353 	movw	r3, #35155	; 0x8953
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80021e6:	e9c8 3403 	strd	r3, r4, [r8, #12]
  if (HAL_TIM_OC_Init(&htim3) != HAL_OK)
 80021ea:	4640      	mov	r0, r8
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80021ec:	2380      	movs	r3, #128	; 0x80
 80021ee:	f8c8 3018 	str.w	r3, [r8, #24]
  if (HAL_TIM_OC_Init(&htim3) != HAL_OK)
 80021f2:	f00c fa37 	bl	800e664 <HAL_TIM_OC_Init>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 80021f6:	2320      	movs	r3, #32
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80021f8:	a90b      	add	r1, sp, #44	; 0x2c
 80021fa:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80021fc:	e9cd 340b 	strd	r3, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8002200:	f00c fbf4 	bl	800e9ec <HAL_TIMEx_MasterConfigSynchronization>
  sConfigOC.OCMode = TIM_OCMODE_TOGGLE;
 8002204:	2330      	movs	r3, #48	; 0x30
  if (HAL_TIM_OC_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002206:	4622      	mov	r2, r4
 8002208:	a90f      	add	r1, sp, #60	; 0x3c
 800220a:	4640      	mov	r0, r8
  sConfigOC.Pulse = 0;
 800220c:	e9cd 340f 	strd	r3, r4, [sp, #60]	; 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002210:	9411      	str	r4, [sp, #68]	; 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002212:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_OC_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002214:	f00c fa90 	bl	800e738 <HAL_TIM_OC_ConfigChannel>
  HAL_TIM_MspPostInit(&htim3);
 8002218:	4640      	mov	r0, r8
 800221a:	f001 f857 	bl	80032cc <HAL_TIM_MspPostInit>
  ADC_ChannelConfTypeDef sConfig = {0};
 800221e:	4652      	mov	r2, sl
 8002220:	4621      	mov	r1, r4
 8002222:	a80f      	add	r0, sp, #60	; 0x3c
 8002224:	f02a f86c 	bl	802c300 <memset>
  hadc3.Instance = ADC3;
 8002228:	4ab5      	ldr	r2, [pc, #724]	; (8002500 <main+0x6b0>)
 800222a:	4bb6      	ldr	r3, [pc, #728]	; (8002504 <main+0x6b4>)
  hadc3.Init.ContinuousConvMode = ENABLE;
 800222c:	7616      	strb	r6, [r2, #24]
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 800222e:	e9c2 3400 	strd	r3, r4, [r2]
  hadc3.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
 8002232:	f04f 5040 	mov.w	r0, #805306368	; 0x30000000
 8002236:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800223a:	e9c2 300a 	strd	r3, r0, [r2, #40]	; 0x28
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 800223e:	4610      	mov	r0, r2
  hadc3.Init.NbrOfConversion = 1;
 8002240:	61d6      	str	r6, [r2, #28]
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8002242:	6156      	str	r6, [r2, #20]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8002244:	6094      	str	r4, [r2, #8]
  hadc3.Init.ScanConvMode = DISABLE;
 8002246:	6114      	str	r4, [r2, #16]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 8002248:	f882 4020 	strb.w	r4, [r2, #32]
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800224c:	60d4      	str	r4, [r2, #12]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 800224e:	f882 4030 	strb.w	r4, [r2, #48]	; 0x30
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8002252:	f009 fc33 	bl	800babc <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8002256:	4aaa      	ldr	r2, [pc, #680]	; (8002500 <main+0x6b0>)
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8002258:	9411      	str	r4, [sp, #68]	; 0x44
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 800225a:	a90f      	add	r1, sp, #60	; 0x3c
 800225c:	4610      	mov	r0, r2
  sConfig.Rank = 1;
 800225e:	e9cd 760f 	strd	r7, r6, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8002262:	f009 fe71 	bl	800bf48 <HAL_ADC_ConfigChannel>
  __HAL_RCC_DMA2_CLK_ENABLE();
 8002266:	9401      	str	r4, [sp, #4]
 8002268:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 800226a:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800226e:	632a      	str	r2, [r5, #48]	; 0x30
 8002270:	6b2a      	ldr	r2, [r5, #48]	; 0x30
  hadc1.Instance = ADC1;
 8002272:	4da5      	ldr	r5, [pc, #660]	; (8002508 <main+0x6b8>)
  __HAL_RCC_DMA2_CLK_ENABLE();
 8002274:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8002278:	9201      	str	r2, [sp, #4]
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 5, 0);
 800227a:	4659      	mov	r1, fp
  __HAL_RCC_DMA2_CLK_ENABLE();
 800227c:	9a01      	ldr	r2, [sp, #4]
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 5, 0);
 800227e:	2038      	movs	r0, #56	; 0x38
 8002280:	4622      	mov	r2, r4
 8002282:	f009 ff0f 	bl	800c0a4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8002286:	2038      	movs	r0, #56	; 0x38
 8002288:	f009 ff3e 	bl	800c108 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 5, 0);
 800228c:	4659      	mov	r1, fp
 800228e:	4622      	mov	r2, r4
 8002290:	203a      	movs	r0, #58	; 0x3a
 8002292:	f009 ff07 	bl	800c0a4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 8002296:	203a      	movs	r0, #58	; 0x3a
 8002298:	f009 ff36 	bl	800c108 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 5, 0);
 800229c:	4659      	mov	r1, fp
 800229e:	4622      	mov	r2, r4
 80022a0:	2046      	movs	r0, #70	; 0x46
 80022a2:	f009 feff 	bl	800c0a4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 80022a6:	2046      	movs	r0, #70	; 0x46
 80022a8:	f009 ff2e 	bl	800c108 <HAL_NVIC_EnableIRQ>
  ADC_ChannelConfTypeDef sConfig = {0};
 80022ac:	4652      	mov	r2, sl
 80022ae:	4621      	mov	r1, r4
 80022b0:	a80f      	add	r0, sp, #60	; 0x3c
 80022b2:	f02a f825 	bl	802c300 <memset>
  hadc1.Instance = ADC1;
 80022b6:	4a95      	ldr	r2, [pc, #596]	; (800250c <main+0x6bc>)
  hadc1.Init.NbrOfConversion = 1;
 80022b8:	61ee      	str	r6, [r5, #28]
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
 80022ba:	f04f 5c40 	mov.w	ip, #805306368	; 0x30000000
 80022be:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80022c2:	4628      	mov	r0, r5
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
 80022c4:	e9c5 3c0a 	strd	r3, ip, [r5, #40]	; 0x28
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 80022c8:	e9c5 2400 	strd	r2, r4, [r5]
  hadc1.Init.DMAContinuousRequests = ENABLE;
 80022cc:	f885 6030 	strb.w	r6, [r5, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80022d0:	616e      	str	r6, [r5, #20]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80022d2:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80022d4:	612c      	str	r4, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80022d6:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80022d8:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80022dc:	60ec      	str	r4, [r5, #12]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80022de:	f009 fbed 	bl	800babc <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_11;
 80022e2:	220b      	movs	r2, #11
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80022e4:	a90f      	add	r1, sp, #60	; 0x3c
 80022e6:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 80022e8:	e9cd 260f 	strd	r2, r6, [sp, #60]	; 0x3c
  hadc2.Instance = ADC2;
 80022ec:	4d88      	ldr	r5, [pc, #544]	; (8002510 <main+0x6c0>)
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80022ee:	9411      	str	r4, [sp, #68]	; 0x44
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80022f0:	f009 fe2a 	bl	800bf48 <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 80022f4:	4652      	mov	r2, sl
 80022f6:	4621      	mov	r1, r4
 80022f8:	a80f      	add	r0, sp, #60	; 0x3c
 80022fa:	f02a f801 	bl	802c300 <memset>
  hadc2.Instance = ADC2;
 80022fe:	4a85      	ldr	r2, [pc, #532]	; (8002514 <main+0x6c4>)
  hadc2.Init.NbrOfConversion = 1;
 8002300:	61ee      	str	r6, [r5, #28]
  hadc2.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
 8002302:	f04f 5e40 	mov.w	lr, #805306368	; 0x30000000
 8002306:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 800230a:	4628      	mov	r0, r5
  hadc2.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
 800230c:	e9c5 3e0a 	strd	r3, lr, [r5, #40]	; 0x28
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8002310:	e9c5 2400 	strd	r2, r4, [r5]
  hadc2.Init.DMAContinuousRequests = ENABLE;
 8002314:	f885 6030 	strb.w	r6, [r5, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8002318:	616e      	str	r6, [r5, #20]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 800231a:	60ac      	str	r4, [r5, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 800231c:	612c      	str	r4, [r5, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 800231e:	762c      	strb	r4, [r5, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8002320:	f885 4020 	strb.w	r4, [r5, #32]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8002324:	60ec      	str	r4, [r5, #12]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8002326:	f009 fbc9 	bl	800babc <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_13;
 800232a:	230d      	movs	r3, #13
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800232c:	a90f      	add	r1, sp, #60	; 0x3c
 800232e:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 8002330:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  htim1.Instance = TIM1;
 8002334:	4d78      	ldr	r5, [pc, #480]	; (8002518 <main+0x6c8>)
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8002336:	9411      	str	r4, [sp, #68]	; 0x44
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8002338:	f009 fe06 	bl	800bf48 <HAL_ADC_ConfigChannel>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800233c:	4652      	mov	r2, sl
 800233e:	4621      	mov	r1, r4
 8002340:	a80f      	add	r0, sp, #60	; 0x3c
 8002342:	f029 ffdd 	bl	802c300 <memset>
  htim1.Instance = TIM1;
 8002346:	4b75      	ldr	r3, [pc, #468]	; (800251c <main+0x6cc>)
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002348:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800234a:	4628      	mov	r0, r5
  htim1.Init.Prescaler = 0;
 800234c:	e9c5 3400 	strd	r3, r4, [r5]
  htim1.Init.Period = 0;
 8002350:	e9c5 4402 	strd	r4, r4, [r5, #8]
  htim1.Init.RepetitionCounter = 0;
 8002354:	e9c5 4404 	strd	r4, r4, [r5, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002358:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800235c:	f00c f968 	bl	800e630 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002360:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8002364:	a90f      	add	r1, sp, #60	; 0x3c
 8002366:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002368:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 800236a:	f00c fa7b 	bl	800e864 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800236e:	a90b      	add	r1, sp, #44	; 0x2c
 8002370:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002372:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim4.Instance = TIM4;
 8002376:	4d6a      	ldr	r5, [pc, #424]	; (8002520 <main+0x6d0>)
  huart1.Init.BaudRate = 9600;
 8002378:	f8df b218 	ldr.w	fp, [pc, #536]	; 8002594 <main+0x744>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800237c:	f00c fb36 	bl	800e9ec <HAL_TIMEx_MasterConfigSynchronization>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002380:	221c      	movs	r2, #28
 8002382:	4621      	mov	r1, r4
 8002384:	a80f      	add	r0, sp, #60	; 0x3c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002386:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 800238a:	f029 ffb9 	bl	802c300 <memset>
  htim4.Init.Prescaler = 1000;
 800238e:	4b65      	ldr	r3, [pc, #404]	; (8002524 <main+0x6d4>)
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002390:	612c      	str	r4, [r5, #16]
  htim4.Init.Prescaler = 1000;
 8002392:	f44f 7a7a 	mov.w	sl, #1000	; 0x3e8
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8002396:	4628      	mov	r0, r5
  htim4.Init.Prescaler = 1000;
 8002398:	e9c5 3a00 	strd	r3, sl, [r5]
  htim4.Init.Period = 0;
 800239c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80023a0:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 80023a2:	f00c f979 	bl	800e698 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80023a6:	a90b      	add	r1, sp, #44	; 0x2c
 80023a8:	4628      	mov	r0, r5
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80023aa:	2660      	movs	r6, #96	; 0x60
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80023ac:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80023b0:	f00c fb1c 	bl	800e9ec <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80023b4:	463a      	mov	r2, r7
 80023b6:	a90f      	add	r1, sp, #60	; 0x3c
 80023b8:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 80023ba:	e9cd 640f 	strd	r6, r4, [sp, #60]	; 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80023be:	9411      	str	r4, [sp, #68]	; 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80023c0:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80023c2:	f00c f9e5 	bl	800e790 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim4);
 80023c6:	4628      	mov	r0, r5
 80023c8:	f000 ff80 	bl	80032cc <HAL_TIM_MspPostInit>
  huart1.Instance = USART1;
 80023cc:	4856      	ldr	r0, [pc, #344]	; (8002528 <main+0x6d8>)
  htim2.Instance = TIM2;
 80023ce:	4d57      	ldr	r5, [pc, #348]	; (800252c <main+0x6dc>)
  huart1.Init.Parity = UART_PARITY_NONE;
 80023d0:	6104      	str	r4, [r0, #16]
  huart1.Init.BaudRate = 9600;
 80023d2:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80023d6:	e9c0 b300 	strd	fp, r3, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80023da:	230c      	movs	r3, #12
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80023dc:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80023e0:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80023e4:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80023e6:	f00c fbbd 	bl	800eb64 <HAL_UART_Init>
  TIM_OC_InitTypeDef sConfigOC = {0};
 80023ea:	221c      	movs	r2, #28
 80023ec:	4621      	mov	r1, r4
 80023ee:	a80f      	add	r0, sp, #60	; 0x3c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80023f0:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 80023f4:	f029 ff84 	bl	802c300 <memset>
  htim2.Instance = TIM2;
 80023f8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  htim2.Init.Prescaler = 1000;
 80023fc:	e9c5 3a00 	strd	r3, sl, [r5]
  htim2.Init.Period = 72000;
 8002400:	f8df a194 	ldr.w	sl, [pc, #404]	; 8002598 <main+0x748>
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002404:	60ac      	str	r4, [r5, #8]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8002406:	4628      	mov	r0, r5
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002408:	e9c5 a403 	strd	sl, r4, [r5, #12]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800240c:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800240e:	f00c f943 	bl	800e698 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002412:	a90b      	add	r1, sp, #44	; 0x2c
 8002414:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002416:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800241a:	f00c fae7 	bl	800e9ec <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800241e:	4622      	mov	r2, r4
 8002420:	a90f      	add	r1, sp, #60	; 0x3c
 8002422:	4628      	mov	r0, r5
  sConfigOC.Pulse = 72000;
 8002424:	e9cd 6a0f 	strd	r6, sl, [sp, #60]	; 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002428:	9411      	str	r4, [sp, #68]	; 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800242a:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800242c:	f00c f9b0 	bl	800e790 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim2);
 8002430:	4628      	mov	r0, r5
 8002432:	f000 ff4b 	bl	80032cc <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8002436:	f7fe fe42 	bl	80010be <MX_TouchGFX_Init>
  arm_rfft_fast_init_f32(&fft_handler, 2048);
 800243a:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800243e:	483c      	ldr	r0, [pc, #240]	; (8002530 <main+0x6e0>)
 8002440:	f027 fea6 	bl	802a190 <arm_rfft_fast_init_f32>
  HAL_TIM_Base_Start(&htim3);
 8002444:	4640      	mov	r0, r8
 8002446:	f00b ffc5 	bl	800e3d4 <HAL_TIM_Base_Start>
  HAL_TIM_OC_Start(&htim3, TIM_CHANNEL_1);//debug line PB4
 800244a:	4621      	mov	r1, r4
 800244c:	4640      	mov	r0, r8
 800244e:	f00c faab 	bl	800e9a8 <HAL_TIM_OC_Start>
  HAL_TIM_PWM_Start( &htim2, TIM_CHANNEL_1 );
 8002452:	4621      	mov	r1, r4
 8002454:	4628      	mov	r0, r5
 8002456:	f00c fac7 	bl	800e9e8 <HAL_TIM_PWM_Start>
  HAL_TIM_OC_Start(&htim2, TIM_CHANNEL_1);
 800245a:	4621      	mov	r1, r4
 800245c:	4628      	mov	r0, r5
 800245e:	f00c faa3 	bl	800e9a8 <HAL_TIM_OC_Start>
  htim2.Instance->ARR=72000;
 8002462:	682b      	ldr	r3, [r5, #0]
 8002464:	f8c3 a02c 	str.w	sl, [r3, #44]	; 0x2c
  htim2.Instance->CCR1=htim2.Instance->ARR +1;
 8002468:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800246a:	3201      	adds	r2, #1
 800246c:	635a      	str	r2, [r3, #52]	; 0x34
  osKernelInitialize();
 800246e:	f00c fd4d 	bl	800ef0c <osKernelInitialize>
  ADCstateHandle = osMessageQueueNew (8, sizeof(int), &ADCstate_attributes);
 8002472:	4a30      	ldr	r2, [pc, #192]	; (8002534 <main+0x6e4>)
 8002474:	4639      	mov	r1, r7
 8002476:	4648      	mov	r0, r9
 8002478:	f00c fef0 	bl	800f25c <osMessageQueueNew>
 800247c:	4b2e      	ldr	r3, [pc, #184]	; (8002538 <main+0x6e8>)
  CallMeasurementHandle = osMessageQueueNew (8, sizeof(int), &CallMeasurement_attributes);
 800247e:	4a2f      	ldr	r2, [pc, #188]	; (800253c <main+0x6ec>)
  ADCstateHandle = osMessageQueueNew (8, sizeof(int), &ADCstate_attributes);
 8002480:	6018      	str	r0, [r3, #0]
  CallMeasurementHandle = osMessageQueueNew (8, sizeof(int), &CallMeasurement_attributes);
 8002482:	4639      	mov	r1, r7
 8002484:	4648      	mov	r0, r9
 8002486:	f00c fee9 	bl	800f25c <osMessageQueueNew>
 800248a:	4b2d      	ldr	r3, [pc, #180]	; (8002540 <main+0x6f0>)
  ProgressBarHandle = osMessageQueueNew (8, sizeof(int), &ProgressBar_attributes);
 800248c:	4a2d      	ldr	r2, [pc, #180]	; (8002544 <main+0x6f4>)
  CallMeasurementHandle = osMessageQueueNew (8, sizeof(int), &CallMeasurement_attributes);
 800248e:	6018      	str	r0, [r3, #0]
  ProgressBarHandle = osMessageQueueNew (8, sizeof(int), &ProgressBar_attributes);
 8002490:	4639      	mov	r1, r7
 8002492:	4648      	mov	r0, r9
 8002494:	f00c fee2 	bl	800f25c <osMessageQueueNew>
 8002498:	4b2b      	ldr	r3, [pc, #172]	; (8002548 <main+0x6f8>)
  SaveDataCheckHandle = osMessageQueueNew (8, sizeof(int), &SaveDataCheck_attributes);
 800249a:	4a2c      	ldr	r2, [pc, #176]	; (800254c <main+0x6fc>)
  ProgressBarHandle = osMessageQueueNew (8, sizeof(int), &ProgressBar_attributes);
 800249c:	6018      	str	r0, [r3, #0]
  SaveDataCheckHandle = osMessageQueueNew (8, sizeof(int), &SaveDataCheck_attributes);
 800249e:	4639      	mov	r1, r7
 80024a0:	4648      	mov	r0, r9
 80024a2:	f00c fedb 	bl	800f25c <osMessageQueueNew>
 80024a6:	4b2a      	ldr	r3, [pc, #168]	; (8002550 <main+0x700>)
  SaveDataEndHandle = osMessageQueueNew (8, sizeof(int), &SaveDataEnd_attributes);
 80024a8:	4a2a      	ldr	r2, [pc, #168]	; (8002554 <main+0x704>)
  SaveDataCheckHandle = osMessageQueueNew (8, sizeof(int), &SaveDataCheck_attributes);
 80024aa:	6018      	str	r0, [r3, #0]
  SaveDataEndHandle = osMessageQueueNew (8, sizeof(int), &SaveDataEnd_attributes);
 80024ac:	4639      	mov	r1, r7
 80024ae:	4648      	mov	r0, r9
 80024b0:	f00c fed4 	bl	800f25c <osMessageQueueNew>
 80024b4:	4b28      	ldr	r3, [pc, #160]	; (8002558 <main+0x708>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80024b6:	4a29      	ldr	r2, [pc, #164]	; (800255c <main+0x70c>)
  SaveDataEndHandle = osMessageQueueNew (8, sizeof(int), &SaveDataEnd_attributes);
 80024b8:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80024ba:	4621      	mov	r1, r4
 80024bc:	4828      	ldr	r0, [pc, #160]	; (8002560 <main+0x710>)
 80024be:	f00c fd5f 	bl	800ef80 <osThreadNew>
 80024c2:	4b28      	ldr	r3, [pc, #160]	; (8002564 <main+0x714>)
  PQReaderHandle = osThreadNew(ImpedanceCalculator, NULL, &PQReader_attributes);
 80024c4:	4a28      	ldr	r2, [pc, #160]	; (8002568 <main+0x718>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80024c6:	6018      	str	r0, [r3, #0]
  PQReaderHandle = osThreadNew(ImpedanceCalculator, NULL, &PQReader_attributes);
 80024c8:	4621      	mov	r1, r4
 80024ca:	4828      	ldr	r0, [pc, #160]	; (800256c <main+0x71c>)
 80024cc:	f00c fd58 	bl	800ef80 <osThreadNew>
 80024d0:	4b27      	ldr	r3, [pc, #156]	; (8002570 <main+0x720>)
  TemperatureContHandle = osThreadNew(TempControl, NULL, &TemperatureCont_attributes);
 80024d2:	4a28      	ldr	r2, [pc, #160]	; (8002574 <main+0x724>)
  PQReaderHandle = osThreadNew(ImpedanceCalculator, NULL, &PQReader_attributes);
 80024d4:	6018      	str	r0, [r3, #0]
  TemperatureContHandle = osThreadNew(TempControl, NULL, &TemperatureCont_attributes);
 80024d6:	4621      	mov	r1, r4
 80024d8:	4827      	ldr	r0, [pc, #156]	; (8002578 <main+0x728>)
 80024da:	f00c fd51 	bl	800ef80 <osThreadNew>
 80024de:	4b27      	ldr	r3, [pc, #156]	; (800257c <main+0x72c>)
  AccuatorHandle = osThreadNew(StartActuating, NULL, &Accuator_attributes);
 80024e0:	4a27      	ldr	r2, [pc, #156]	; (8002580 <main+0x730>)
  TemperatureContHandle = osThreadNew(TempControl, NULL, &TemperatureCont_attributes);
 80024e2:	6018      	str	r0, [r3, #0]
  AccuatorHandle = osThreadNew(StartActuating, NULL, &Accuator_attributes);
 80024e4:	4621      	mov	r1, r4
 80024e6:	4827      	ldr	r0, [pc, #156]	; (8002584 <main+0x734>)
 80024e8:	f00c fd4a 	bl	800ef80 <osThreadNew>
 80024ec:	4b26      	ldr	r3, [pc, #152]	; (8002588 <main+0x738>)
  SaveDataFromBLEHandle = osThreadNew(SaveData, NULL, &SaveDataFromBLE_attributes);
 80024ee:	4a27      	ldr	r2, [pc, #156]	; (800258c <main+0x73c>)
  AccuatorHandle = osThreadNew(StartActuating, NULL, &Accuator_attributes);
 80024f0:	6018      	str	r0, [r3, #0]
  SaveDataFromBLEHandle = osThreadNew(SaveData, NULL, &SaveDataFromBLE_attributes);
 80024f2:	4621      	mov	r1, r4
 80024f4:	4826      	ldr	r0, [pc, #152]	; (8002590 <main+0x740>)
 80024f6:	f00c fd43 	bl	800ef80 <osThreadNew>
 80024fa:	e04f      	b.n	800259c <main+0x74c>
 80024fc:	40000400 	.word	0x40000400
 8002500:	20008d48 	.word	0x20008d48
 8002504:	40012200 	.word	0x40012200
 8002508:	20008cb8 	.word	0x20008cb8
 800250c:	40012000 	.word	0x40012000
 8002510:	20008d00 	.word	0x20008d00
 8002514:	40012100 	.word	0x40012100
 8002518:	20009080 	.word	0x20009080
 800251c:	40010000 	.word	0x40010000
 8002520:	20009140 	.word	0x20009140
 8002524:	40000800 	.word	0x40000800
 8002528:	20009180 	.word	0x20009180
 800252c:	200090c0 	.word	0x200090c0
 8002530:	20004ca0 	.word	0x20004ca0
 8002534:	0802f458 	.word	0x0802f458
 8002538:	20002b68 	.word	0x20002b68
 800253c:	0802f494 	.word	0x0802f494
 8002540:	20002b70 	.word	0x20002b70
 8002544:	0802f4f4 	.word	0x0802f4f4
 8002548:	20002b88 	.word	0x20002b88
 800254c:	0802f50c 	.word	0x0802f50c
 8002550:	20002c84 	.word	0x20002c84
 8002554:	0802f524 	.word	0x0802f524
 8002558:	20002c88 	.word	0x20002c88
 800255c:	0802f4ac 	.word	0x0802f4ac
 8002560:	080010c3 	.word	0x080010c3
 8002564:	20002b78 	.word	0x20002b78
 8002568:	0802f4d0 	.word	0x0802f4d0
 800256c:	08002911 	.word	0x08002911
 8002570:	20002b84 	.word	0x20002b84
 8002574:	0802f560 	.word	0x0802f560
 8002578:	08001cd1 	.word	0x08001cd1
 800257c:	20002c9c 	.word	0x20002c9c
 8002580:	0802f470 	.word	0x0802f470
 8002584:	08001c0d 	.word	0x08001c0d
 8002588:	20002b6c 	.word	0x20002b6c
 800258c:	0802f53c 	.word	0x0802f53c
 8002590:	08002c11 	.word	0x08002c11
 8002594:	40011000 	.word	0x40011000
 8002598:	00011940 	.word	0x00011940
 800259c:	4b02      	ldr	r3, [pc, #8]	; (80025a8 <main+0x758>)
 800259e:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80025a0:	f00c fcce 	bl	800ef40 <osKernelStart>
  while (1)
 80025a4:	e7fe      	b.n	80025a4 <main+0x754>
 80025a6:	bf00      	nop
 80025a8:	20002c8c 	.word	0x20002c8c

080025ac <IOE_Init>:
 80025ac:	4770      	bx	lr

080025ae <IOE_ITConfig>:
 80025ae:	4770      	bx	lr

080025b0 <IOE_Write>:
{
 80025b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 80025b2:	4b09      	ldr	r3, [pc, #36]	; (80025d8 <IOE_Write+0x28>)
 80025b4:	f88d 2017 	strb.w	r2, [sp, #23]
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	9302      	str	r3, [sp, #8]
 80025bc:	f10d 0217 	add.w	r2, sp, #23
 80025c0:	2301      	movs	r3, #1
 80025c2:	9200      	str	r2, [sp, #0]
 80025c4:	9301      	str	r3, [sp, #4]
 80025c6:	460a      	mov	r2, r1
 80025c8:	4601      	mov	r1, r0
 80025ca:	4804      	ldr	r0, [pc, #16]	; (80025dc <IOE_Write+0x2c>)
 80025cc:	f00a fbce 	bl	800cd6c <HAL_I2C_Mem_Write>
}
 80025d0:	b007      	add	sp, #28
 80025d2:	f85d fb04 	ldr.w	pc, [sp], #4
 80025d6:	bf00      	nop
 80025d8:	20000014 	.word	0x20000014
 80025dc:	20008ef8 	.word	0x20008ef8

080025e0 <IOE_Read>:
{
 80025e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80025e2:	2300      	movs	r3, #0
 80025e4:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80025e8:	4b08      	ldr	r3, [pc, #32]	; (800260c <IOE_Read+0x2c>)
 80025ea:	681b      	ldr	r3, [r3, #0]
 80025ec:	9302      	str	r3, [sp, #8]
{
 80025ee:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80025f0:	2301      	movs	r3, #1
 80025f2:	f10d 0117 	add.w	r1, sp, #23
 80025f6:	9100      	str	r1, [sp, #0]
 80025f8:	9301      	str	r3, [sp, #4]
 80025fa:	4601      	mov	r1, r0
 80025fc:	4804      	ldr	r0, [pc, #16]	; (8002610 <IOE_Read+0x30>)
 80025fe:	f00a fc45 	bl	800ce8c <HAL_I2C_Mem_Read>
}
 8002602:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8002606:	b007      	add	sp, #28
 8002608:	f85d fb04 	ldr.w	pc, [sp], #4
 800260c:	20000014 	.word	0x20000014
 8002610:	20008ef8 	.word	0x20008ef8

08002614 <IOE_ReadMultiple>:
{
 8002614:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8002616:	4c08      	ldr	r4, [pc, #32]	; (8002638 <IOE_ReadMultiple+0x24>)
 8002618:	6824      	ldr	r4, [r4, #0]
 800261a:	9200      	str	r2, [sp, #0]
 800261c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002620:	460a      	mov	r2, r1
 8002622:	2301      	movs	r3, #1
 8002624:	4601      	mov	r1, r0
 8002626:	4805      	ldr	r0, [pc, #20]	; (800263c <IOE_ReadMultiple+0x28>)
 8002628:	f00a fc30 	bl	800ce8c <HAL_I2C_Mem_Read>
}
 800262c:	3800      	subs	r0, #0
 800262e:	bf18      	it	ne
 8002630:	2001      	movne	r0, #1
 8002632:	b004      	add	sp, #16
 8002634:	bd10      	pop	{r4, pc}
 8002636:	bf00      	nop
 8002638:	20000014 	.word	0x20000014
 800263c:	20008ef8 	.word	0x20008ef8

08002640 <IOE_Delay>:
 8002640:	f009 ba28 	b.w	800ba94 <HAL_Delay>

08002644 <LCD_IO_Init>:
{
 8002644:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002646:	4806      	ldr	r0, [pc, #24]	; (8002660 <LCD_IO_Init+0x1c>)
 8002648:	2200      	movs	r2, #0
 800264a:	2104      	movs	r1, #4
 800264c:	f00a f8fe 	bl	800c84c <HAL_GPIO_WritePin>
}
 8002650:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002654:	4802      	ldr	r0, [pc, #8]	; (8002660 <LCD_IO_Init+0x1c>)
 8002656:	2201      	movs	r2, #1
 8002658:	2104      	movs	r1, #4
 800265a:	f00a b8f7 	b.w	800c84c <HAL_GPIO_WritePin>
 800265e:	bf00      	nop
 8002660:	40020800 	.word	0x40020800

08002664 <LCD_IO_WriteData>:
{
 8002664:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002666:	4d0b      	ldr	r5, [pc, #44]	; (8002694 <LCD_IO_WriteData+0x30>)
{
 8002668:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800266a:	2201      	movs	r2, #1
 800266c:	480a      	ldr	r0, [pc, #40]	; (8002698 <LCD_IO_WriteData+0x34>)
 800266e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002672:	f00a f8eb 	bl	800c84c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002676:	2200      	movs	r2, #0
 8002678:	2104      	movs	r1, #4
 800267a:	4628      	mov	r0, r5
 800267c:	f00a f8e6 	bl	800c84c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002680:	4620      	mov	r0, r4
 8002682:	f7ff fab1 	bl	8001be8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002686:	4628      	mov	r0, r5
 8002688:	2201      	movs	r2, #1
}
 800268a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800268e:	2104      	movs	r1, #4
 8002690:	f00a b8dc 	b.w	800c84c <HAL_GPIO_WritePin>
 8002694:	40020800 	.word	0x40020800
 8002698:	40020c00 	.word	0x40020c00

0800269c <LCD_IO_WriteReg>:
{
 800269c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800269e:	4d0b      	ldr	r5, [pc, #44]	; (80026cc <LCD_IO_WriteReg+0x30>)
{
 80026a0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80026a2:	2200      	movs	r2, #0
 80026a4:	480a      	ldr	r0, [pc, #40]	; (80026d0 <LCD_IO_WriteReg+0x34>)
 80026a6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80026aa:	f00a f8cf 	bl	800c84c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80026ae:	2200      	movs	r2, #0
 80026b0:	2104      	movs	r1, #4
 80026b2:	4628      	mov	r0, r5
 80026b4:	f00a f8ca 	bl	800c84c <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80026b8:	4620      	mov	r0, r4
 80026ba:	f7ff fa95 	bl	8001be8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80026be:	4628      	mov	r0, r5
 80026c0:	2201      	movs	r2, #1
}
 80026c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80026c6:	2104      	movs	r1, #4
 80026c8:	f00a b8c0 	b.w	800c84c <HAL_GPIO_WritePin>
 80026cc:	40020800 	.word	0x40020800
 80026d0:	40020c00 	.word	0x40020c00

080026d4 <LCD_IO_ReadData>:
{
 80026d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80026d6:	4e14      	ldr	r6, [pc, #80]	; (8002728 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80026d8:	4f14      	ldr	r7, [pc, #80]	; (800272c <LCD_IO_ReadData+0x58>)
{
 80026da:	4605      	mov	r5, r0
 80026dc:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80026de:	4630      	mov	r0, r6
 80026e0:	2200      	movs	r2, #0
 80026e2:	2104      	movs	r1, #4
 80026e4:	f00a f8b2 	bl	800c84c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80026e8:	2200      	movs	r2, #0
 80026ea:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80026ee:	4638      	mov	r0, r7
 80026f0:	f00a f8ac 	bl	800c84c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80026f4:	4628      	mov	r0, r5
 80026f6:	f7ff fa77 	bl	8001be8 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80026fa:	4b0d      	ldr	r3, [pc, #52]	; (8002730 <LCD_IO_ReadData+0x5c>)
 80026fc:	480d      	ldr	r0, [pc, #52]	; (8002734 <LCD_IO_ReadData+0x60>)
 80026fe:	681b      	ldr	r3, [r3, #0]
 8002700:	4622      	mov	r2, r4
 8002702:	a901      	add	r1, sp, #4
 8002704:	f00b fd35 	bl	800e172 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002708:	4638      	mov	r0, r7
 800270a:	2201      	movs	r2, #1
 800270c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8002710:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002712:	f00a f89b 	bl	800c84c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002716:	4630      	mov	r0, r6
 8002718:	2201      	movs	r2, #1
 800271a:	2104      	movs	r1, #4
 800271c:	f00a f896 	bl	800c84c <HAL_GPIO_WritePin>
}
 8002720:	4620      	mov	r0, r4
 8002722:	b003      	add	sp, #12
 8002724:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002726:	bf00      	nop
 8002728:	40020800 	.word	0x40020800
 800272c:	40020c00 	.word	0x40020c00
 8002730:	20000018 	.word	0x20000018
 8002734:	20009028 	.word	0x20009028

08002738 <LCD_Delay>:
  HAL_Delay(Delay);
 8002738:	f009 b9ac 	b.w	800ba94 <HAL_Delay>

0800273c <HAL_UART_TxCpltCallback>:
   HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800273c:	4802      	ldr	r0, [pc, #8]	; (8002748 <HAL_UART_TxCpltCallback+0xc>)
 800273e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002742:	f00a b888 	b.w	800c856 <HAL_GPIO_TogglePin>
 8002746:	bf00      	nop
 8002748:	40021800 	.word	0x40021800

0800274c <HAL_ADC_ConvHalfCpltCallback>:
}
 800274c:	4770      	bx	lr
	...

08002750 <HAL_ADC_ConvCpltCallback>:
  NewBuffState=1;
 8002750:	4b01      	ldr	r3, [pc, #4]	; (8002758 <HAL_ADC_ConvCpltCallback+0x8>)
 8002752:	2201      	movs	r2, #1
 8002754:	601a      	str	r2, [r3, #0]
}
 8002756:	4770      	bx	lr
 8002758:	20002b80 	.word	0x20002b80

0800275c <complexDiv_R>:
float32_t complexDiv_R(float32_t R1,float32_t I1,float32_t R2,float32_t I2){
 800275c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002760:	ed2d 8b02 	vpush	{d8}
	return (R1*R2+I1*I2)/(pow(R2,2)+pow(I2,2));
 8002764:	ee20 8aa1 	vmul.f32	s16, s1, s3
float32_t complexDiv_R(float32_t R1,float32_t I1,float32_t R2,float32_t I2){
 8002768:	b083      	sub	sp, #12
	return (R1*R2+I1*I2)/(pow(R2,2)+pow(I2,2));
 800276a:	ee11 0a10 	vmov	r0, s2
 800276e:	eea0 8a01 	vfma.f32	s16, s0, s2
float32_t complexDiv_R(float32_t R1,float32_t I1,float32_t R2,float32_t I2){
 8002772:	eef0 8a61 	vmov.f32	s17, s3
	return (R1*R2+I1*I2)/(pow(R2,2)+pow(I2,2));
 8002776:	f7fd ff57 	bl	8000628 <__aeabi_f2d>
 800277a:	4602      	mov	r2, r0
 800277c:	460b      	mov	r3, r1
 800277e:	ee18 0a90 	vmov	r0, s17
 8002782:	e9cd 2300 	strd	r2, r3, [sp]
 8002786:	f7fd ff4f 	bl	8000628 <__aeabi_f2d>
 800278a:	4680      	mov	r8, r0
 800278c:	ee18 0a10 	vmov	r0, s16
 8002790:	4689      	mov	r9, r1
 8002792:	f7fd ff49 	bl	8000628 <__aeabi_f2d>
 8002796:	e9dd 2300 	ldrd	r2, r3, [sp]
 800279a:	4604      	mov	r4, r0
 800279c:	460d      	mov	r5, r1
 800279e:	4610      	mov	r0, r2
 80027a0:	4619      	mov	r1, r3
 80027a2:	f7fd ff99 	bl	80006d8 <__aeabi_dmul>
 80027a6:	4642      	mov	r2, r8
 80027a8:	4606      	mov	r6, r0
 80027aa:	460f      	mov	r7, r1
 80027ac:	464b      	mov	r3, r9
 80027ae:	4640      	mov	r0, r8
 80027b0:	4649      	mov	r1, r9
 80027b2:	f7fd ff91 	bl	80006d8 <__aeabi_dmul>
 80027b6:	4602      	mov	r2, r0
 80027b8:	460b      	mov	r3, r1
 80027ba:	4630      	mov	r0, r6
 80027bc:	4639      	mov	r1, r7
 80027be:	f7fd fdd5 	bl	800036c <__adddf3>
 80027c2:	4602      	mov	r2, r0
 80027c4:	460b      	mov	r3, r1
 80027c6:	4620      	mov	r0, r4
 80027c8:	4629      	mov	r1, r5
 80027ca:	f7fe f8af 	bl	800092c <__aeabi_ddiv>
 80027ce:	f7fe fa7b 	bl	8000cc8 <__aeabi_d2f>
}
 80027d2:	ee00 0a10 	vmov	s0, r0
 80027d6:	b003      	add	sp, #12
 80027d8:	ecbd 8b02 	vpop	{d8}
 80027dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080027e0 <complexDiv_X>:
float32_t complexDiv_X(float32_t R1,float32_t I1,float32_t R2,float32_t I2){
 80027e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80027e4:	ed2d 8b02 	vpush	{d8}
	return (I1*R2+R1*I2)/(pow(R2,2)+pow(I2,2));
 80027e8:	ee20 8a21 	vmul.f32	s16, s0, s3
float32_t complexDiv_X(float32_t R1,float32_t I1,float32_t R2,float32_t I2){
 80027ec:	b083      	sub	sp, #12
	return (I1*R2+R1*I2)/(pow(R2,2)+pow(I2,2));
 80027ee:	ee11 0a10 	vmov	r0, s2
 80027f2:	eea0 8a81 	vfma.f32	s16, s1, s2
float32_t complexDiv_X(float32_t R1,float32_t I1,float32_t R2,float32_t I2){
 80027f6:	eef0 8a61 	vmov.f32	s17, s3
	return (I1*R2+R1*I2)/(pow(R2,2)+pow(I2,2));
 80027fa:	f7fd ff15 	bl	8000628 <__aeabi_f2d>
 80027fe:	4602      	mov	r2, r0
 8002800:	460b      	mov	r3, r1
 8002802:	ee18 0a90 	vmov	r0, s17
 8002806:	e9cd 2300 	strd	r2, r3, [sp]
 800280a:	f7fd ff0d 	bl	8000628 <__aeabi_f2d>
 800280e:	4680      	mov	r8, r0
 8002810:	ee18 0a10 	vmov	r0, s16
 8002814:	4689      	mov	r9, r1
 8002816:	f7fd ff07 	bl	8000628 <__aeabi_f2d>
 800281a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800281e:	4604      	mov	r4, r0
 8002820:	460d      	mov	r5, r1
 8002822:	4610      	mov	r0, r2
 8002824:	4619      	mov	r1, r3
 8002826:	f7fd ff57 	bl	80006d8 <__aeabi_dmul>
 800282a:	4642      	mov	r2, r8
 800282c:	4606      	mov	r6, r0
 800282e:	460f      	mov	r7, r1
 8002830:	464b      	mov	r3, r9
 8002832:	4640      	mov	r0, r8
 8002834:	4649      	mov	r1, r9
 8002836:	f7fd ff4f 	bl	80006d8 <__aeabi_dmul>
 800283a:	4602      	mov	r2, r0
 800283c:	460b      	mov	r3, r1
 800283e:	4630      	mov	r0, r6
 8002840:	4639      	mov	r1, r7
 8002842:	f7fd fd93 	bl	800036c <__adddf3>
 8002846:	4602      	mov	r2, r0
 8002848:	460b      	mov	r3, r1
 800284a:	4620      	mov	r0, r4
 800284c:	4629      	mov	r1, r5
 800284e:	f7fe f86d 	bl	800092c <__aeabi_ddiv>
 8002852:	f7fe fa39 	bl	8000cc8 <__aeabi_d2f>
}
 8002856:	ee00 0a10 	vmov	s0, r0
 800285a:	b003      	add	sp, #12
 800285c:	ecbd 8b02 	vpop	{d8}
 8002860:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08002864 <DoFFT>:
void DoFFT(int frequency){
 8002864:	b570      	push	{r4, r5, r6, lr}
 8002866:	ed2d 8b02 	vpush	{d8}
	arm_rfft_fast_f32(&fft_handler, &fftin_buf_p, &out_buf_p, 0);
 800286a:	4e22      	ldr	r6, [pc, #136]	; (80028f4 <DoFFT+0x90>)
	arm_rfft_fast_f32(&fft_handler, &fftin_buf_q, &out_buf_q, 0);
 800286c:	4d22      	ldr	r5, [pc, #136]	; (80028f8 <DoFFT+0x94>)
	arm_rfft_fast_f32(&fft_handler, &fftin_buf_p, &out_buf_p, 0);
 800286e:	4923      	ldr	r1, [pc, #140]	; (80028fc <DoFFT+0x98>)
void DoFFT(int frequency){
 8002870:	b084      	sub	sp, #16
 8002872:	4604      	mov	r4, r0
	arm_rfft_fast_f32(&fft_handler, &fftin_buf_p, &out_buf_p, 0);
 8002874:	2300      	movs	r3, #0
 8002876:	4822      	ldr	r0, [pc, #136]	; (8002900 <DoFFT+0x9c>)
 8002878:	4632      	mov	r2, r6
 800287a:	f027 fd0b 	bl	802a294 <arm_rfft_fast_f32>
	arm_rfft_fast_f32(&fft_handler, &fftin_buf_q, &out_buf_q, 0);
 800287e:	4921      	ldr	r1, [pc, #132]	; (8002904 <DoFFT+0xa0>)
 8002880:	481f      	ldr	r0, [pc, #124]	; (8002900 <DoFFT+0x9c>)
 8002882:	2300      	movs	r3, #0
 8002884:	462a      	mov	r2, r5
 8002886:	f027 fd05 	bl	802a294 <arm_rfft_fast_f32>
	if(frequency<31){
 800288a:	2c1e      	cmp	r4, #30
 800288c:	dc2e      	bgt.n	80028ec <DoFFT+0x88>
	N_real=2*frequency-2;
 800288e:	1e63      	subs	r3, r4, #1
	N_imag=2*frequency-1;
 8002890:	00da      	lsls	r2, r3, #3
	P_real=out_buf_p[N_real];
 8002892:	eb06 01c3 	add.w	r1, r6, r3, lsl #3
	P_imag=out_buf_p[N_imag];
 8002896:	3204      	adds	r2, #4
	Q_real=out_buf_q[N_real];
 8002898:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
	P_real=out_buf_p[N_real];
 800289c:	ed91 8a00 	vldr	s16, [r1]
	Q_real=out_buf_q[N_real];
 80028a0:	ed93 1a00 	vldr	s2, [r3]
	Q_imag=out_buf_q[N_imag];
 80028a4:	4415      	add	r5, r2
	P_imag=out_buf_p[N_imag];
 80028a6:	4416      	add	r6, r2
	Q_imag=out_buf_q[N_imag];
 80028a8:	edd5 1a00 	vldr	s3, [r5]
	P_imag=out_buf_p[N_imag];
 80028ac:	edd6 0a00 	vldr	s1, [r6]
		Resistance[frequency]=complexDiv_R(P_real, P_imag,Q_real,Q_imag);
 80028b0:	edcd 1a03 	vstr	s3, [sp, #12]
 80028b4:	eeb0 0a48 	vmov.f32	s0, s16
 80028b8:	ed8d 1a02 	vstr	s2, [sp, #8]
 80028bc:	edcd 0a01 	vstr	s1, [sp, #4]
 80028c0:	f7ff ff4c 	bl	800275c <complexDiv_R>
 80028c4:	4810      	ldr	r0, [pc, #64]	; (8002908 <DoFFT+0xa4>)
		Reactance[frequency]=complexDiv_X(P_real, P_imag,Q_real,Q_imag);
 80028c6:	eddd 1a03 	vldr	s3, [sp, #12]
 80028ca:	ed9d 1a02 	vldr	s2, [sp, #8]
 80028ce:	eddd 0a01 	vldr	s1, [sp, #4]
		Resistance[frequency]=complexDiv_R(P_real, P_imag,Q_real,Q_imag);
 80028d2:	00a5      	lsls	r5, r4, #2
 80028d4:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 80028d8:	ed84 0a00 	vstr	s0, [r4]
		Reactance[frequency]=complexDiv_X(P_real, P_imag,Q_real,Q_imag);
 80028dc:	eeb0 0a48 	vmov.f32	s0, s16
 80028e0:	f7ff ff7e 	bl	80027e0 <complexDiv_X>
 80028e4:	4b09      	ldr	r3, [pc, #36]	; (800290c <DoFFT+0xa8>)
 80028e6:	442b      	add	r3, r5
 80028e8:	ed83 0a00 	vstr	s0, [r3]
}
 80028ec:	b004      	add	sp, #16
 80028ee:	ecbd 8b02 	vpop	{d8}
 80028f2:	bd70      	pop	{r4, r5, r6, pc}
 80028f4:	200091c0 	.word	0x200091c0
 80028f8:	2000b1c0 	.word	0x2000b1c0
 80028fc:	20004cb8 	.word	0x20004cb8
 8002900:	20004ca0 	.word	0x20004ca0
 8002904:	20006cb8 	.word	0x20006cb8
 8002908:	20002c08 	.word	0x20002c08
 800290c:	20002b8c 	.word	0x20002b8c

08002910 <ImpedanceCalculator>:
{
 8002910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002914:	ed2d 8b04 	vpush	{d8-d9}
	osMessageQueueGet(CallMeasurementHandle,&ac_get, NULL, osWaitForever);
 8002918:	4865      	ldr	r0, [pc, #404]	; (8002ab0 <ImpedanceCalculator+0x1a0>)
{
 800291a:	b085      	sub	sp, #20
	osMessageQueueGet(CallMeasurementHandle,&ac_get, NULL, osWaitForever);
 800291c:	f04f 33ff 	mov.w	r3, #4294967295
 8002920:	6800      	ldr	r0, [r0, #0]
 8002922:	2200      	movs	r2, #0
 8002924:	a903      	add	r1, sp, #12
 8002926:	f00c fd21 	bl	800f36c <osMessageQueueGet>
	if(ac_get==0){
 800292a:	9b03      	ldr	r3, [sp, #12]
 800292c:	b93b      	cbnz	r3, 800293e <ImpedanceCalculator+0x2e>
        osThreadSuspend(AccuatorHandle);
 800292e:	4b61      	ldr	r3, [pc, #388]	; (8002ab4 <ImpedanceCalculator+0x1a4>)
 8002930:	6818      	ldr	r0, [r3, #0]
 8002932:	f00c fb7b 	bl	800f02c <osThreadSuspend>
        osThreadSuspend(PQReaderHandle);
 8002936:	4b60      	ldr	r3, [pc, #384]	; (8002ab8 <ImpedanceCalculator+0x1a8>)
 8002938:	6818      	ldr	r0, [r3, #0]
 800293a:	f00c fb77 	bl	800f02c <osThreadSuspend>
	if(ac_get==1){
 800293e:	9b03      	ldr	r3, [sp, #12]
 8002940:	2b01      	cmp	r3, #1
 8002942:	d107      	bne.n	8002954 <ImpedanceCalculator+0x44>
        osThreadResume(AccuatorHandle);
 8002944:	4b5b      	ldr	r3, [pc, #364]	; (8002ab4 <ImpedanceCalculator+0x1a4>)
 8002946:	6818      	ldr	r0, [r3, #0]
 8002948:	f00c fb8c 	bl	800f064 <osThreadResume>
        osThreadResume(PQReaderHandle);
 800294c:	4b5a      	ldr	r3, [pc, #360]	; (8002ab8 <ImpedanceCalculator+0x1a8>)
 800294e:	6818      	ldr	r0, [r3, #0]
 8002950:	f00c fb88 	bl	800f064 <osThreadResume>
				  fftin_buf_p[n]=((float32_t)adc_buf_p[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525;//Pressure sensor conversion - Pa
 8002954:	f20f 1b38 	addw	fp, pc, #312	; 0x138
 8002958:	e9db ab00 	ldrd	sl, fp, [fp]
			  HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_buf_p, ADC_BUF_LEN_P); //Pressure sensing
 800295c:	4957      	ldr	r1, [pc, #348]	; (8002abc <ImpedanceCalculator+0x1ac>)
 800295e:	4858      	ldr	r0, [pc, #352]	; (8002ac0 <ImpedanceCalculator+0x1b0>)
 8002960:	f8df 9188 	ldr.w	r9, [pc, #392]	; 8002aec <ImpedanceCalculator+0x1dc>
 8002964:	f8df 8164 	ldr.w	r8, [pc, #356]	; 8002acc <ImpedanceCalculator+0x1bc>
 8002968:	4d56      	ldr	r5, [pc, #344]	; (8002ac4 <ImpedanceCalculator+0x1b4>)
				  fftin_buf_p[n]=((float32_t)adc_buf_p[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525;//Pressure sensor conversion - Pa
 800296a:	ed9f 8a57 	vldr	s16, [pc, #348]	; 8002ac8 <ImpedanceCalculator+0x1b8>
			  HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_buf_p, ADC_BUF_LEN_P); //Pressure sensing
 800296e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002972:	f009 fa0d 	bl	800bd90 <HAL_ADC_Start_DMA>
			  HAL_ADC_Start_DMA(&hadc2, (uint32_t*)adc_buf_q, ADC_BUF_LEN_Q); //Flow rate sensing
 8002976:	4955      	ldr	r1, [pc, #340]	; (8002acc <ImpedanceCalculator+0x1bc>)
 8002978:	4855      	ldr	r0, [pc, #340]	; (8002ad0 <ImpedanceCalculator+0x1c0>)
 800297a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800297e:	f009 fa07 	bl	800bd90 <HAL_ADC_Start_DMA>
			  for (n=0;n<2048;n=n+1){
 8002982:	4b4e      	ldr	r3, [pc, #312]	; (8002abc <ImpedanceCalculator+0x1ac>)
 8002984:	9301      	str	r3, [sp, #4]
 8002986:	2400      	movs	r4, #0
				  fftin_buf_p[n]=((float32_t)adc_buf_p[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525;//Pressure sensor conversion - Pa
 8002988:	eef0 8a08 	vmov.f32	s17, #8	; 0x40400000  3.0
 800298c:	9b01      	ldr	r3, [sp, #4]
 800298e:	f833 2b02 	ldrh.w	r2, [r3], #2
 8002992:	9301      	str	r3, [sp, #4]
 8002994:	ee07 2a90 	vmov	s15, r2
 8002998:	eef8 7a67 	vcvt.f32.u32	s15, s15
			  for (n=0;n<2048;n=n+1){
 800299c:	3401      	adds	r4, #1
				  fftin_buf_p[n]=((float32_t)adc_buf_p[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525;//Pressure sensor conversion - Pa
 800299e:	ee67 7aa8 	vmul.f32	s15, s15, s17
 80029a2:	ee67 7a88 	vmul.f32	s15, s15, s16
 80029a6:	ee17 0a90 	vmov	r0, s15
 80029aa:	f7fd fe3d 	bl	8000628 <__aeabi_f2d>
 80029ae:	a33a      	add	r3, pc, #232	; (adr r3, 8002a98 <ImpedanceCalculator+0x188>)
 80029b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80029b4:	4606      	mov	r6, r0
 80029b6:	460f      	mov	r7, r1
 80029b8:	f7fd ffb8 	bl	800092c <__aeabi_ddiv>
 80029bc:	4b45      	ldr	r3, [pc, #276]	; (8002ad4 <ImpedanceCalculator+0x1c4>)
 80029be:	2200      	movs	r2, #0
 80029c0:	f7fd fcd2 	bl	8000368 <__aeabi_dsub>
 80029c4:	4602      	mov	r2, r0
 80029c6:	460b      	mov	r3, r1
 80029c8:	f7fd fe86 	bl	80006d8 <__aeabi_dmul>
 80029cc:	ec47 6b19 	vmov	d9, r6, r7
 80029d0:	4652      	mov	r2, sl
 80029d2:	4606      	mov	r6, r0
 80029d4:	460f      	mov	r7, r1
 80029d6:	465b      	mov	r3, fp
 80029d8:	ec51 0b19 	vmov	r0, r1, d9
 80029dc:	f7fd ffa6 	bl	800092c <__aeabi_ddiv>
 80029e0:	4b3d      	ldr	r3, [pc, #244]	; (8002ad8 <ImpedanceCalculator+0x1c8>)
 80029e2:	2200      	movs	r2, #0
 80029e4:	f7fd fcc0 	bl	8000368 <__aeabi_dsub>
 80029e8:	4632      	mov	r2, r6
 80029ea:	463b      	mov	r3, r7
 80029ec:	f7fd fe74 	bl	80006d8 <__aeabi_dmul>
 80029f0:	2200      	movs	r2, #0
 80029f2:	4b3a      	ldr	r3, [pc, #232]	; (8002adc <ImpedanceCalculator+0x1cc>)
 80029f4:	f7fd fe70 	bl	80006d8 <__aeabi_dmul>
 80029f8:	f7fe f966 	bl	8000cc8 <__aeabi_d2f>
				  fftin_buf_q[n]=(((float32_t)adc_buf_q[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525)*2.083/98.066;// Flow rate conversion - L/s
 80029fc:	f838 3b02 	ldrh.w	r3, [r8], #2
				  fftin_buf_p[n]=((float32_t)adc_buf_p[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525;//Pressure sensor conversion - Pa
 8002a00:	f849 0b04 	str.w	r0, [r9], #4
				  fftin_buf_q[n]=(((float32_t)adc_buf_q[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525)*2.083/98.066;// Flow rate conversion - L/s
 8002a04:	ee07 3a90 	vmov	s15, r3
 8002a08:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002a0c:	ee67 7aa8 	vmul.f32	s15, s15, s17
 8002a10:	ee67 7a88 	vmul.f32	s15, s15, s16
 8002a14:	ee17 0a90 	vmov	r0, s15
 8002a18:	f7fd fe06 	bl	8000628 <__aeabi_f2d>
 8002a1c:	4652      	mov	r2, sl
 8002a1e:	465b      	mov	r3, fp
 8002a20:	f7fd ff84 	bl	800092c <__aeabi_ddiv>
 8002a24:	4b2c      	ldr	r3, [pc, #176]	; (8002ad8 <ImpedanceCalculator+0x1c8>)
 8002a26:	2200      	movs	r2, #0
 8002a28:	f7fd fc9e 	bl	8000368 <__aeabi_dsub>
 8002a2c:	4632      	mov	r2, r6
 8002a2e:	463b      	mov	r3, r7
 8002a30:	f7fd fe52 	bl	80006d8 <__aeabi_dmul>
 8002a34:	4b29      	ldr	r3, [pc, #164]	; (8002adc <ImpedanceCalculator+0x1cc>)
 8002a36:	2200      	movs	r2, #0
 8002a38:	f7fd fe4e 	bl	80006d8 <__aeabi_dmul>
 8002a3c:	a318      	add	r3, pc, #96	; (adr r3, 8002aa0 <ImpedanceCalculator+0x190>)
 8002a3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002a42:	f7fd fe49 	bl	80006d8 <__aeabi_dmul>
 8002a46:	a318      	add	r3, pc, #96	; (adr r3, 8002aa8 <ImpedanceCalculator+0x198>)
 8002a48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002a4c:	f7fd ff6e 	bl	800092c <__aeabi_ddiv>
 8002a50:	f7fe f93a 	bl	8000cc8 <__aeabi_d2f>
			  for (n=0;n<2048;n=n+1){
 8002a54:	f5b4 6f00 	cmp.w	r4, #2048	; 0x800
				  fftin_buf_q[n]=(((float32_t)adc_buf_q[n]*3/4096/3.3-0.5)*pow(((float32_t)adc_buf_p[n]*3/4096/1.32-1.25),2)*525)*2.083/98.066;// Flow rate conversion - L/s
 8002a58:	f845 0b04 	str.w	r0, [r5], #4
			  for (n=0;n<2048;n=n+1){
 8002a5c:	d196      	bne.n	800298c <ImpedanceCalculator+0x7c>
			  if(NewBuffState==1){
 8002a5e:	4c20      	ldr	r4, [pc, #128]	; (8002ae0 <ImpedanceCalculator+0x1d0>)
 8002a60:	6823      	ldr	r3, [r4, #0]
 8002a62:	2b01      	cmp	r3, #1
 8002a64:	f47f af7a 	bne.w	800295c <ImpedanceCalculator+0x4c>
				 DoFFT(Freq);
 8002a68:	4d1e      	ldr	r5, [pc, #120]	; (8002ae4 <ImpedanceCalculator+0x1d4>)
 8002a6a:	6828      	ldr	r0, [r5, #0]
 8002a6c:	f7ff fefa 	bl	8002864 <DoFFT>
				 Freq++;
 8002a70:	682b      	ldr	r3, [r5, #0]
				 osMessageQueuePut(ADCstateHandle, &NewBuffState, 0, 200);
 8002a72:	481d      	ldr	r0, [pc, #116]	; (8002ae8 <ImpedanceCalculator+0x1d8>)
				 Freq++;
 8002a74:	3301      	adds	r3, #1
 8002a76:	602b      	str	r3, [r5, #0]
				 osMessageQueuePut(ADCstateHandle, &NewBuffState, 0, 200);
 8002a78:	6800      	ldr	r0, [r0, #0]
 8002a7a:	23c8      	movs	r3, #200	; 0xc8
 8002a7c:	2200      	movs	r2, #0
 8002a7e:	4621      	mov	r1, r4
 8002a80:	f00c fc32 	bl	800f2e8 <osMessageQueuePut>
				 NewBuffState=0;
 8002a84:	2300      	movs	r3, #0
 8002a86:	6023      	str	r3, [r4, #0]
 8002a88:	e768      	b.n	800295c <ImpedanceCalculator+0x4c>
 8002a8a:	bf00      	nop
 8002a8c:	f3af 8000 	nop.w
 8002a90:	66666666 	.word	0x66666666
 8002a94:	400a6666 	.word	0x400a6666
 8002a98:	51eb851f 	.word	0x51eb851f
 8002a9c:	3ff51eb8 	.word	0x3ff51eb8
 8002aa0:	e76c8b44 	.word	0xe76c8b44
 8002aa4:	4000a9fb 	.word	0x4000a9fb
 8002aa8:	5810624e 	.word	0x5810624e
 8002aac:	40588439 	.word	0x40588439
 8002ab0:	20002b70 	.word	0x20002b70
 8002ab4:	20002b6c 	.word	0x20002b6c
 8002ab8:	20002b84 	.word	0x20002b84
 8002abc:	20002ca0 	.word	0x20002ca0
 8002ac0:	20008cb8 	.word	0x20008cb8
 8002ac4:	20006cb8 	.word	0x20006cb8
 8002ac8:	39800000 	.word	0x39800000
 8002acc:	20003ca0 	.word	0x20003ca0
 8002ad0:	20008d00 	.word	0x20008d00
 8002ad4:	3ff40000 	.word	0x3ff40000
 8002ad8:	3fe00000 	.word	0x3fe00000
 8002adc:	40806800 	.word	0x40806800
 8002ae0:	20002b80 	.word	0x20002b80
 8002ae4:	2000000c 	.word	0x2000000c
 8002ae8:	20002b68 	.word	0x20002b68
 8002aec:	20004cb8 	.word	0x20004cb8

08002af0 <reverse>:
{
 8002af0:	b530      	push	{r4, r5, lr}
 8002af2:	1e42      	subs	r2, r0, #1
    int i=0, j=len-1, temp;
 8002af4:	2300      	movs	r3, #0
 8002af6:	4408      	add	r0, r1
    while (i<j)
 8002af8:	3901      	subs	r1, #1
 8002afa:	1acc      	subs	r4, r1, r3
 8002afc:	42a3      	cmp	r3, r4
 8002afe:	db00      	blt.n	8002b02 <reverse+0x12>
}
 8002b00:	bd30      	pop	{r4, r5, pc}
        temp = str[i];
 8002b02:	f812 4f01 	ldrb.w	r4, [r2, #1]!
        str[i] = str[j];
 8002b06:	f810 5d01 	ldrb.w	r5, [r0, #-1]!
 8002b0a:	7015      	strb	r5, [r2, #0]
        i++; j--;
 8002b0c:	3301      	adds	r3, #1
        str[j] = temp;
 8002b0e:	7004      	strb	r4, [r0, #0]
        i++; j--;
 8002b10:	e7f3      	b.n	8002afa <reverse+0xa>

08002b12 <intToStr>:
{
 8002b12:	b570      	push	{r4, r5, r6, lr}
 8002b14:	460d      	mov	r5, r1
        str[i++] = (x%10) + '0';
 8002b16:	240a      	movs	r4, #10
 8002b18:	1b4e      	subs	r6, r1, r5
    while (x)
 8002b1a:	b9a8      	cbnz	r0, 8002b48 <intToStr+0x36>
    if(NPflag==0){
 8002b1c:	b913      	cbnz	r3, 8002b24 <intToStr+0x12>
        str[i++] = '-';
 8002b1e:	232d      	movs	r3, #45	; 0x2d
 8002b20:	3601      	adds	r6, #1
 8002b22:	700b      	strb	r3, [r1, #0]
        str[i++] = '0';
 8002b24:	1b94      	subs	r4, r2, r6
 8002b26:	42b2      	cmp	r2, r6
 8002b28:	bfb8      	it	lt
 8002b2a:	2400      	movlt	r4, #0
 8002b2c:	4622      	mov	r2, r4
 8002b2e:	2130      	movs	r1, #48	; 0x30
 8002b30:	4434      	add	r4, r6
 8002b32:	19a8      	adds	r0, r5, r6
 8002b34:	f029 fbe4 	bl	802c300 <memset>
    reverse(str, i);
 8002b38:	4628      	mov	r0, r5
 8002b3a:	4621      	mov	r1, r4
 8002b3c:	f7ff ffd8 	bl	8002af0 <reverse>
    str[i] = ' ';
 8002b40:	2320      	movs	r3, #32
 8002b42:	552b      	strb	r3, [r5, r4]
}
 8002b44:	4620      	mov	r0, r4
 8002b46:	bd70      	pop	{r4, r5, r6, pc}
        str[i++] = (x%10) + '0';
 8002b48:	fb90 f6f4 	sdiv	r6, r0, r4
 8002b4c:	fb04 0016 	mls	r0, r4, r6, r0
 8002b50:	3030      	adds	r0, #48	; 0x30
 8002b52:	f801 0b01 	strb.w	r0, [r1], #1
        x = x/10;
 8002b56:	4630      	mov	r0, r6
 8002b58:	e7de      	b.n	8002b18 <intToStr+0x6>
 8002b5a:	0000      	movs	r0, r0
 8002b5c:	0000      	movs	r0, r0
	...

08002b60 <ftoa>:
{
 8002b60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    	ipart = -(int)n;
 8002b64:	eefd 7ac0 	vcvt.s32.f32	s15, s0
    if(n<0){
 8002b68:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
    	ipart = -(int)n;
 8002b6c:	ee17 6a90 	vmov	r6, s15
    if(n<0){
 8002b70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    	ipart = -(int)n;
 8002b74:	bf48      	it	mi
 8002b76:	4276      	negmi	r6, r6
{
 8002b78:	ed2d 8b02 	vpush	{d8}
 8002b7c:	4604      	mov	r4, r0
 8002b7e:	460f      	mov	r7, r1
    	flag=0;
 8002b80:	bf48      	it	mi
 8002b82:	2300      	movmi	r3, #0
    int i = intToStr(ipart, res, 0, flag);
 8002b84:	4601      	mov	r1, r0
        flag=1;
 8002b86:	bf58      	it	pl
 8002b88:	2301      	movpl	r3, #1
    int i = intToStr(ipart, res, 0, flag);
 8002b8a:	f04f 0200 	mov.w	r2, #0
 8002b8e:	4630      	mov	r0, r6
{
 8002b90:	eeb0 8a40 	vmov.f32	s16, s0
    	m = -n;
 8002b94:	bf48      	it	mi
 8002b96:	eeb1 8a40 	vnegmi.f32	s16, s0
    int i = intToStr(ipart, res, 0, flag);
 8002b9a:	f7ff ffba 	bl	8002b12 <intToStr>
 8002b9e:	4605      	mov	r5, r0
    if (afterpoint != 0)
 8002ba0:	b36f      	cbz	r7, 8002bfe <ftoa+0x9e>
        res[i] = '.';  // add dot
 8002ba2:	232e      	movs	r3, #46	; 0x2e
 8002ba4:	5423      	strb	r3, [r4, r0]
        fpart = fpart * pow(10, afterpoint);
 8002ba6:	4638      	mov	r0, r7
 8002ba8:	f7fd fd2c 	bl	8000604 <__aeabi_i2d>
 8002bac:	ed9f 0b16 	vldr	d0, [pc, #88]	; 8002c08 <ftoa+0xa8>
 8002bb0:	ec41 0b11 	vmov	d1, r0, r1
 8002bb4:	f028 fafa 	bl	802b1ac <pow>
    float fpart = m - (float)ipart;
 8002bb8:	ee07 6a90 	vmov	s15, r6
 8002bbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        fpart = fpart * pow(10, afterpoint);
 8002bc0:	ec59 8b10 	vmov	r8, r9, d0
 8002bc4:	ee78 7a67 	vsub.f32	s15, s16, s15
        intToStr((int)fpart, res + i + 1, afterpoint,1);
 8002bc8:	3501      	adds	r5, #1
        fpart = fpart * pow(10, afterpoint);
 8002bca:	ee17 0a90 	vmov	r0, s15
 8002bce:	f7fd fd2b 	bl	8000628 <__aeabi_f2d>
 8002bd2:	4642      	mov	r2, r8
 8002bd4:	464b      	mov	r3, r9
 8002bd6:	f7fd fd7f 	bl	80006d8 <__aeabi_dmul>
 8002bda:	f7fe f875 	bl	8000cc8 <__aeabi_d2f>
}
 8002bde:	ecbd 8b02 	vpop	{d8}
        intToStr((int)fpart, res + i + 1, afterpoint,1);
 8002be2:	ee07 0a90 	vmov	s15, r0
 8002be6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002bea:	442c      	add	r4, r5
 8002bec:	463a      	mov	r2, r7
 8002bee:	4621      	mov	r1, r4
 8002bf0:	ee17 0a90 	vmov	r0, s15
}
 8002bf4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
        intToStr((int)fpart, res + i + 1, afterpoint,1);
 8002bf8:	2301      	movs	r3, #1
 8002bfa:	f7ff bf8a 	b.w	8002b12 <intToStr>
}
 8002bfe:	ecbd 8b02 	vpop	{d8}
 8002c02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002c06:	bf00      	nop
 8002c08:	00000000 	.word	0x00000000
 8002c0c:	40240000 	.word	0x40240000

08002c10 <SaveData>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_SaveData */
void SaveData(void *argument)
{
 8002c10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* USER CODE BEGIN SaveData */
	int i,m;
	  char string1[8];
	  char string2[8];
	  char IntroText1[]="Patient:\n Gender:\n Age:\n Height:\n Weight\n ";
 8002c14:	4b45      	ldr	r3, [pc, #276]	; (8002d2c <SaveData+0x11c>)
{
 8002c16:	b0ac      	sub	sp, #176	; 0xb0
	  char IntroText1[]="Patient:\n Gender:\n Age:\n Height:\n Weight\n ";
 8002c18:	aa21      	add	r2, sp, #132	; 0x84
 8002c1a:	f103 0628 	add.w	r6, r3, #40	; 0x28
 8002c1e:	4614      	mov	r4, r2
 8002c20:	6818      	ldr	r0, [r3, #0]
 8002c22:	6859      	ldr	r1, [r3, #4]
 8002c24:	4615      	mov	r5, r2
 8002c26:	c503      	stmia	r5!, {r0, r1}
 8002c28:	3308      	adds	r3, #8
 8002c2a:	42b3      	cmp	r3, r6
 8002c2c:	462a      	mov	r2, r5
 8002c2e:	d1f7      	bne.n	8002c20 <SaveData+0x10>
 8002c30:	8819      	ldrh	r1, [r3, #0]
 8002c32:	789b      	ldrb	r3, [r3, #2]
 8002c34:	70ab      	strb	r3, [r5, #2]
	  char IntroText2[]="Respiratory Resistance from 5Hz to 30Hz:\n";
 8002c36:	4b3e      	ldr	r3, [pc, #248]	; (8002d30 <SaveData+0x120>)
	  char IntroText1[]="Patient:\n Gender:\n Age:\n Height:\n Weight\n ";
 8002c38:	8029      	strh	r1, [r5, #0]
	  char IntroText2[]="Respiratory Resistance from 5Hz to 30Hz:\n";
 8002c3a:	aa16      	add	r2, sp, #88	; 0x58
 8002c3c:	f103 0728 	add.w	r7, r3, #40	; 0x28
 8002c40:	4615      	mov	r5, r2
 8002c42:	6818      	ldr	r0, [r3, #0]
 8002c44:	6859      	ldr	r1, [r3, #4]
 8002c46:	4616      	mov	r6, r2
 8002c48:	c603      	stmia	r6!, {r0, r1}
 8002c4a:	3308      	adds	r3, #8
 8002c4c:	42bb      	cmp	r3, r7
 8002c4e:	4632      	mov	r2, r6
 8002c50:	d1f7      	bne.n	8002c42 <SaveData+0x32>
 8002c52:	881b      	ldrh	r3, [r3, #0]
 8002c54:	8033      	strh	r3, [r6, #0]
	  char IntroText3[]="Respiratory Reactance from 5Hz to 30Hz:\n";
 8002c56:	4b37      	ldr	r3, [pc, #220]	; (8002d34 <SaveData+0x124>)
 8002c58:	aa0b      	add	r2, sp, #44	; 0x2c
 8002c5a:	f103 0c28 	add.w	ip, r3, #40	; 0x28
 8002c5e:	4617      	mov	r7, r2
 8002c60:	6818      	ldr	r0, [r3, #0]
 8002c62:	6859      	ldr	r1, [r3, #4]
 8002c64:	4616      	mov	r6, r2
 8002c66:	c603      	stmia	r6!, {r0, r1}
 8002c68:	3308      	adds	r3, #8
 8002c6a:	4563      	cmp	r3, ip
 8002c6c:	4632      	mov	r2, r6
 8002c6e:	d1f7      	bne.n	8002c60 <SaveData+0x50>
 8002c70:	781b      	ldrb	r3, [r3, #0]
 8002c72:	7033      	strb	r3, [r6, #0]
	  char IntroText4[]="Measuring Date:\n";
 8002c74:	4b30      	ldr	r3, [pc, #192]	; (8002d38 <SaveData+0x128>)
 8002c76:	aa06      	add	r2, sp, #24
 8002c78:	f103 0c10 	add.w	ip, r3, #16
 8002c7c:	4690      	mov	r8, r2
 8002c7e:	6818      	ldr	r0, [r3, #0]
 8002c80:	6859      	ldr	r1, [r3, #4]
 8002c82:	4616      	mov	r6, r2
 8002c84:	c603      	stmia	r6!, {r0, r1}
 8002c86:	3308      	adds	r3, #8
 8002c88:	4563      	cmp	r3, ip
 8002c8a:	4632      	mov	r2, r6
 8002c8c:	d1f7      	bne.n	8002c7e <SaveData+0x6e>
 8002c8e:	781b      	ldrb	r3, [r3, #0]
	  int Flag;
	  int endFlag=0;
	  osMessageQueueGet(SaveDataCheckHandle,&Flag,0,osWaitForever);
 8002c90:	482a      	ldr	r0, [pc, #168]	; (8002d3c <SaveData+0x12c>)
	  char IntroText4[]="Measuring Date:\n";
 8002c92:	7033      	strb	r3, [r6, #0]
	  int endFlag=0;
 8002c94:	2200      	movs	r2, #0
	  osMessageQueueGet(SaveDataCheckHandle,&Flag,0,osWaitForever);
 8002c96:	f04f 33ff 	mov.w	r3, #4294967295
 8002c9a:	6800      	ldr	r0, [r0, #0]
	  int endFlag=0;
 8002c9c:	9201      	str	r2, [sp, #4]
	  osMessageQueueGet(SaveDataCheckHandle,&Flag,0,osWaitForever);
 8002c9e:	4669      	mov	r1, sp
 8002ca0:	f00c fb64 	bl	800f36c <osMessageQueueGet>
	  if(Flag==1){
 8002ca4:	9b00      	ldr	r3, [sp, #0]
 8002ca6:	2b01      	cmp	r3, #1
 8002ca8:	d13c      	bne.n	8002d24 <SaveData+0x114>
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText1, sizeof(IntroText1));
 8002caa:	4621      	mov	r1, r4
 8002cac:	222b      	movs	r2, #43	; 0x2b
 8002cae:	4824      	ldr	r0, [pc, #144]	; (8002d40 <SaveData+0x130>)
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText2, sizeof(IntroText2));
		  for(i=5;i<31;i++){
			ftoa(Resistance[i], string1, 3);
			HAL_UART_Transmit_IT(&huart1, (uint8_t*)string1, sizeof(string1)); //add UART IT callback.
 8002cb0:	4e23      	ldr	r6, [pc, #140]	; (8002d40 <SaveData+0x130>)
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText1, sizeof(IntroText1));
 8002cb2:	f00b ff85 	bl	800ebc0 <HAL_UART_Transmit_IT>
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText2, sizeof(IntroText2));
 8002cb6:	4629      	mov	r1, r5
 8002cb8:	4821      	ldr	r0, [pc, #132]	; (8002d40 <SaveData+0x130>)
 8002cba:	4d22      	ldr	r5, [pc, #136]	; (8002d44 <SaveData+0x134>)
 8002cbc:	222a      	movs	r2, #42	; 0x2a
 8002cbe:	f00b ff7f 	bl	800ebc0 <HAL_UART_Transmit_IT>
 8002cc2:	241a      	movs	r4, #26
			ftoa(Resistance[i], string1, 3);
 8002cc4:	ecb5 0a01 	vldmia	r5!, {s0}
 8002cc8:	2103      	movs	r1, #3
 8002cca:	a802      	add	r0, sp, #8
 8002ccc:	f7ff ff48 	bl	8002b60 <ftoa>
			HAL_UART_Transmit_IT(&huart1, (uint8_t*)string1, sizeof(string1)); //add UART IT callback.
 8002cd0:	2208      	movs	r2, #8
 8002cd2:	eb0d 0102 	add.w	r1, sp, r2
 8002cd6:	4630      	mov	r0, r6
 8002cd8:	f00b ff72 	bl	800ebc0 <HAL_UART_Transmit_IT>
		  for(i=5;i<31;i++){
 8002cdc:	3c01      	subs	r4, #1
 8002cde:	d1f1      	bne.n	8002cc4 <SaveData+0xb4>
		  }
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText3, sizeof(IntroText3));
 8002ce0:	4817      	ldr	r0, [pc, #92]	; (8002d40 <SaveData+0x130>)
 8002ce2:	4d19      	ldr	r5, [pc, #100]	; (8002d48 <SaveData+0x138>)
		  for(m=5;m<31;m++){
			ftoa(Reactance[m], string2, 3);
			HAL_UART_Transmit_IT(&huart1, (uint8_t*)string2, sizeof(string2)); //add UART IT callback.
 8002ce4:	4e16      	ldr	r6, [pc, #88]	; (8002d40 <SaveData+0x130>)
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText3, sizeof(IntroText3));
 8002ce6:	2229      	movs	r2, #41	; 0x29
 8002ce8:	4639      	mov	r1, r7
 8002cea:	f00b ff69 	bl	800ebc0 <HAL_UART_Transmit_IT>
 8002cee:	241a      	movs	r4, #26
			ftoa(Reactance[m], string2, 3);
 8002cf0:	ecb5 0a01 	vldmia	r5!, {s0}
 8002cf4:	2103      	movs	r1, #3
 8002cf6:	a804      	add	r0, sp, #16
 8002cf8:	f7ff ff32 	bl	8002b60 <ftoa>
			HAL_UART_Transmit_IT(&huart1, (uint8_t*)string2, sizeof(string2)); //add UART IT callback.
 8002cfc:	2208      	movs	r2, #8
 8002cfe:	a904      	add	r1, sp, #16
 8002d00:	4630      	mov	r0, r6
 8002d02:	f00b ff5d 	bl	800ebc0 <HAL_UART_Transmit_IT>
		  for(m=5;m<31;m++){
 8002d06:	3c01      	subs	r4, #1
 8002d08:	d1f2      	bne.n	8002cf0 <SaveData+0xe0>
		  }
		  HAL_UART_Transmit_IT(&huart1, (uint8_t*)IntroText4, sizeof(IntroText4));
 8002d0a:	2211      	movs	r2, #17
 8002d0c:	4641      	mov	r1, r8
 8002d0e:	480c      	ldr	r0, [pc, #48]	; (8002d40 <SaveData+0x130>)
 8002d10:	f00b ff56 	bl	800ebc0 <HAL_UART_Transmit_IT>
		  osMessageQueuePut(SaveDataEndHandle, &endFlag, 0, 1000);
 8002d14:	480d      	ldr	r0, [pc, #52]	; (8002d4c <SaveData+0x13c>)
 8002d16:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002d1a:	6800      	ldr	r0, [r0, #0]
 8002d1c:	4622      	mov	r2, r4
 8002d1e:	a901      	add	r1, sp, #4
 8002d20:	f00c fae2 	bl	800f2e8 <osMessageQueuePut>
//	  for(;;)
//	  {
//	    osDelay(1);
//	  }
  /* USER CODE END SaveData */
}
 8002d24:	b02c      	add	sp, #176	; 0xb0
 8002d26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002d2a:	bf00      	nop
 8002d2c:	0802f34c 	.word	0x0802f34c
 8002d30:	0802f377 	.word	0x0802f377
 8002d34:	0802f3a1 	.word	0x0802f3a1
 8002d38:	0802f3ca 	.word	0x0802f3ca
 8002d3c:	20002c84 	.word	0x20002c84
 8002d40:	20009180 	.word	0x20009180
 8002d44:	20002c1c 	.word	0x20002c1c
 8002d48:	20002ba0 	.word	0x20002ba0
 8002d4c:	20002c88 	.word	0x20002c88

08002d50 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8002d50:	6802      	ldr	r2, [r0, #0]
 8002d52:	4b03      	ldr	r3, [pc, #12]	; (8002d60 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002d54:	429a      	cmp	r2, r3
 8002d56:	d101      	bne.n	8002d5c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8002d58:	f008 be8a 	b.w	800ba70 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002d5c:	4770      	bx	lr
 8002d5e:	bf00      	nop
 8002d60:	40001000 	.word	0x40001000

08002d64 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002d64:	4770      	bx	lr
	...

08002d68 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                            /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002d68:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002d6a:	4b0e      	ldr	r3, [pc, #56]	; (8002da4 <HAL_MspInit+0x3c>)
 8002d6c:	2200      	movs	r2, #0
 8002d6e:	9200      	str	r2, [sp, #0]
 8002d70:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002d72:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8002d76:	6459      	str	r1, [r3, #68]	; 0x44
 8002d78:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002d7a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8002d7e:	9100      	str	r1, [sp, #0]
 8002d80:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002d82:	9201      	str	r2, [sp, #4]
 8002d84:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002d86:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8002d8a:	6419      	str	r1, [r3, #64]	; 0x40
 8002d8c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d8e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002d92:	9301      	str	r3, [sp, #4]
 8002d94:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002d96:	210f      	movs	r1, #15
 8002d98:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002d9c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002d9e:	f009 b981 	b.w	800c0a4 <HAL_NVIC_SetPriority>
 8002da2:	bf00      	nop
 8002da4:	40023800 	.word	0x40023800

08002da8 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8002da8:	b570      	push	{r4, r5, r6, lr}
 8002daa:	4605      	mov	r5, r0
 8002dac:	b08c      	sub	sp, #48	; 0x30
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002dae:	2214      	movs	r2, #20
 8002db0:	2100      	movs	r1, #0
 8002db2:	a807      	add	r0, sp, #28
 8002db4:	f029 faa4 	bl	802c300 <memset>
  if(hadc->Instance==ADC1)
 8002db8:	682b      	ldr	r3, [r5, #0]
 8002dba:	4a45      	ldr	r2, [pc, #276]	; (8002ed0 <HAL_ADC_MspInit+0x128>)
 8002dbc:	4293      	cmp	r3, r2
 8002dbe:	d13c      	bne.n	8002e3a <HAL_ADC_MspInit+0x92>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8002dc0:	4b44      	ldr	r3, [pc, #272]	; (8002ed4 <HAL_ADC_MspInit+0x12c>)
    PC1     ------> ADC1_IN11
    */
    GPIO_InitStruct.Pin = Psensor_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(Psensor_GPIO_Port, &GPIO_InitStruct);
 8002dc2:	4845      	ldr	r0, [pc, #276]	; (8002ed8 <HAL_ADC_MspInit+0x130>)

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 8002dc4:	4c45      	ldr	r4, [pc, #276]	; (8002edc <HAL_ADC_MspInit+0x134>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8002dc6:	2600      	movs	r6, #0
 8002dc8:	9601      	str	r6, [sp, #4]
 8002dca:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002dcc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002dd0:	645a      	str	r2, [r3, #68]	; 0x44
 8002dd2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002dd4:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8002dd8:	9201      	str	r2, [sp, #4]
 8002dda:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002ddc:	9602      	str	r6, [sp, #8]
 8002dde:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002de0:	f042 0204 	orr.w	r2, r2, #4
 8002de4:	631a      	str	r2, [r3, #48]	; 0x30
 8002de6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002de8:	f003 0304 	and.w	r3, r3, #4
 8002dec:	9302      	str	r3, [sp, #8]
 8002dee:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002df0:	f04f 0e02 	mov.w	lr, #2
 8002df4:	2303      	movs	r3, #3
    HAL_GPIO_Init(Psensor_GPIO_Port, &GPIO_InitStruct);
 8002df6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002df8:	e9cd e307 	strd	lr, r3, [sp, #28]
    HAL_GPIO_Init(Psensor_GPIO_Port, &GPIO_InitStruct);
 8002dfc:	f009 fc3e 	bl	800c67c <HAL_GPIO_Init>
    hdma_adc1.Instance = DMA2_Stream0;
 8002e00:	4b37      	ldr	r3, [pc, #220]	; (8002ee0 <HAL_ADC_MspInit+0x138>)
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 8002e02:	e9c4 3600 	strd	r3, r6, [r4]
    hdma_adc2.Instance = DMA2_Stream2;
    hdma_adc2.Init.Channel = DMA_CHANNEL_1;
    hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
    hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
    hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
    hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002e06:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002e0a:	f44f 6180 	mov.w	r1, #1024	; 0x400
    hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
    hdma_adc2.Init.Mode = DMA_CIRCULAR;
 8002e0e:	f44f 5000 	mov.w	r0, #8192	; 0x2000
    hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002e12:	e9c4 1304 	strd	r1, r3, [r4, #16]
    hdma_adc2.Init.Mode = DMA_CIRCULAR;
 8002e16:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002e1a:	e9c4 0306 	strd	r0, r3, [r4, #24]
    hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 8002e1e:	e9c4 6602 	strd	r6, r6, [r4, #8]
    hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
    hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002e22:	e9c4 6608 	strd	r6, r6, [r4, #32]
    if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 8002e26:	4620      	mov	r0, r4
 8002e28:	f009 f9a2 	bl	800c170 <HAL_DMA_Init>
 8002e2c:	b108      	cbz	r0, 8002e32 <HAL_ADC_MspInit+0x8a>
    {
      Error_Handler();
 8002e2e:	f7ff ff99 	bl	8002d64 <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc2);
 8002e32:	63ac      	str	r4, [r5, #56]	; 0x38
 8002e34:	63a5      	str	r5, [r4, #56]	; 0x38
  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }

}
 8002e36:	b00c      	add	sp, #48	; 0x30
 8002e38:	bd70      	pop	{r4, r5, r6, pc}
  else if(hadc->Instance==ADC2)
 8002e3a:	4a2a      	ldr	r2, [pc, #168]	; (8002ee4 <HAL_ADC_MspInit+0x13c>)
 8002e3c:	4293      	cmp	r3, r2
 8002e3e:	d125      	bne.n	8002e8c <HAL_ADC_MspInit+0xe4>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8002e40:	4b24      	ldr	r3, [pc, #144]	; (8002ed4 <HAL_ADC_MspInit+0x12c>)
    HAL_GPIO_Init(Qsensor_GPIO_Port, &GPIO_InitStruct);
 8002e42:	4825      	ldr	r0, [pc, #148]	; (8002ed8 <HAL_ADC_MspInit+0x130>)
    __HAL_RCC_ADC2_CLK_ENABLE();
 8002e44:	2600      	movs	r6, #0
 8002e46:	9603      	str	r6, [sp, #12]
 8002e48:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002e4a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002e4e:	645a      	str	r2, [r3, #68]	; 0x44
 8002e50:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002e52:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8002e56:	9203      	str	r2, [sp, #12]
 8002e58:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002e5a:	9604      	str	r6, [sp, #16]
 8002e5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002e5e:	f042 0204 	orr.w	r2, r2, #4
 8002e62:	631a      	str	r2, [r3, #48]	; 0x30
 8002e64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e66:	f003 0304 	and.w	r3, r3, #4
 8002e6a:	9304      	str	r3, [sp, #16]
 8002e6c:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002e6e:	2408      	movs	r4, #8
 8002e70:	2303      	movs	r3, #3
    HAL_GPIO_Init(Qsensor_GPIO_Port, &GPIO_InitStruct);
 8002e72:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002e74:	e9cd 4307 	strd	r4, r3, [sp, #28]
    HAL_GPIO_Init(Qsensor_GPIO_Port, &GPIO_InitStruct);
 8002e78:	f009 fc00 	bl	800c67c <HAL_GPIO_Init>
    hdma_adc2.Instance = DMA2_Stream2;
 8002e7c:	4c1a      	ldr	r4, [pc, #104]	; (8002ee8 <HAL_ADC_MspInit+0x140>)
    hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 8002e7e:	f8df c074 	ldr.w	ip, [pc, #116]	; 8002ef4 <HAL_ADC_MspInit+0x14c>
 8002e82:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002e86:	e9c4 c300 	strd	ip, r3, [r4]
 8002e8a:	e7bc      	b.n	8002e06 <HAL_ADC_MspInit+0x5e>
  else if(hadc->Instance==ADC3)
 8002e8c:	4a17      	ldr	r2, [pc, #92]	; (8002eec <HAL_ADC_MspInit+0x144>)
 8002e8e:	4293      	cmp	r3, r2
 8002e90:	d1d1      	bne.n	8002e36 <HAL_ADC_MspInit+0x8e>
    __HAL_RCC_ADC3_CLK_ENABLE();
 8002e92:	4b10      	ldr	r3, [pc, #64]	; (8002ed4 <HAL_ADC_MspInit+0x12c>)
    HAL_GPIO_Init(Tsensor_GPIO_Port, &GPIO_InitStruct);
 8002e94:	4816      	ldr	r0, [pc, #88]	; (8002ef0 <HAL_ADC_MspInit+0x148>)
    __HAL_RCC_ADC3_CLK_ENABLE();
 8002e96:	2100      	movs	r1, #0
 8002e98:	9105      	str	r1, [sp, #20]
 8002e9a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002e9c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002ea0:	645a      	str	r2, [r3, #68]	; 0x44
 8002ea2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002ea4:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8002ea8:	9205      	str	r2, [sp, #20]
 8002eaa:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002eac:	9106      	str	r1, [sp, #24]
 8002eae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002eb0:	f042 0220 	orr.w	r2, r2, #32
 8002eb4:	631a      	str	r2, [r3, #48]	; 0x30
 8002eb6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002eb8:	f003 0320 	and.w	r3, r3, #32
 8002ebc:	9306      	str	r3, [sp, #24]
 8002ebe:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002ec0:	2240      	movs	r2, #64	; 0x40
 8002ec2:	2303      	movs	r3, #3
    HAL_GPIO_Init(Tsensor_GPIO_Port, &GPIO_InitStruct);
 8002ec4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002ec6:	e9cd 2307 	strd	r2, r3, [sp, #28]
    HAL_GPIO_Init(Tsensor_GPIO_Port, &GPIO_InitStruct);
 8002eca:	f009 fbd7 	bl	800c67c <HAL_GPIO_Init>
}
 8002ece:	e7b2      	b.n	8002e36 <HAL_ADC_MspInit+0x8e>
 8002ed0:	40012000 	.word	0x40012000
 8002ed4:	40023800 	.word	0x40023800
 8002ed8:	40020800 	.word	0x40020800
 8002edc:	20008dd8 	.word	0x20008dd8
 8002ee0:	40026410 	.word	0x40026410
 8002ee4:	40012100 	.word	0x40012100
 8002ee8:	20008e38 	.word	0x20008e38
 8002eec:	40012200 	.word	0x40012200
 8002ef0:	40021400 	.word	0x40021400
 8002ef4:	40026440 	.word	0x40026440

08002ef8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002ef8:	6802      	ldr	r2, [r0, #0]
 8002efa:	4b09      	ldr	r3, [pc, #36]	; (8002f20 <HAL_CRC_MspInit+0x28>)
 8002efc:	429a      	cmp	r2, r3
{
 8002efe:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002f00:	d10b      	bne.n	8002f1a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002f02:	2300      	movs	r3, #0
 8002f04:	9301      	str	r3, [sp, #4]
 8002f06:	4b07      	ldr	r3, [pc, #28]	; (8002f24 <HAL_CRC_MspInit+0x2c>)
 8002f08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002f0a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002f0e:	631a      	str	r2, [r3, #48]	; 0x30
 8002f10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f12:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002f16:	9301      	str	r3, [sp, #4]
 8002f18:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002f1a:	b002      	add	sp, #8
 8002f1c:	4770      	bx	lr
 8002f1e:	bf00      	nop
 8002f20:	40023000 	.word	0x40023000
 8002f24:	40023800 	.word	0x40023800

08002f28 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002f28:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002f2a:	4b0f      	ldr	r3, [pc, #60]	; (8002f68 <HAL_DMA2D_MspInit+0x40>)
 8002f2c:	6802      	ldr	r2, [r0, #0]
 8002f2e:	429a      	cmp	r2, r3
 8002f30:	d116      	bne.n	8002f60 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002f32:	2200      	movs	r2, #0
 8002f34:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8002f38:	9201      	str	r2, [sp, #4]
 8002f3a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002f3c:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8002f40:	6319      	str	r1, [r3, #48]	; 0x30
 8002f42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f44:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002f48:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002f4a:	2105      	movs	r1, #5
 8002f4c:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002f4e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002f50:	f009 f8a8 	bl	800c0a4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002f54:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8002f56:	b003      	add	sp, #12
 8002f58:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002f5c:	f009 b8d4 	b.w	800c108 <HAL_NVIC_EnableIRQ>
}
 8002f60:	b003      	add	sp, #12
 8002f62:	f85d fb04 	ldr.w	pc, [sp], #4
 8002f66:	bf00      	nop
 8002f68:	4002b000 	.word	0x4002b000

08002f6c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002f6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002f70:	4604      	mov	r4, r0
 8002f72:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002f74:	2214      	movs	r2, #20
 8002f76:	2100      	movs	r1, #0
 8002f78:	a803      	add	r0, sp, #12
 8002f7a:	f029 f9c1 	bl	802c300 <memset>
  if(hi2c->Instance==I2C3)
 8002f7e:	6822      	ldr	r2, [r4, #0]
 8002f80:	4b24      	ldr	r3, [pc, #144]	; (8003014 <HAL_I2C_MspInit+0xa8>)
 8002f82:	429a      	cmp	r2, r3
 8002f84:	d143      	bne.n	800300e <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002f86:	4c24      	ldr	r4, [pc, #144]	; (8003018 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002f88:	4824      	ldr	r0, [pc, #144]	; (800301c <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002f8a:	2500      	movs	r5, #0
 8002f8c:	9500      	str	r5, [sp, #0]
 8002f8e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002f90:	f043 0304 	orr.w	r3, r3, #4
 8002f94:	6323      	str	r3, [r4, #48]	; 0x30
 8002f96:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002f98:	f003 0304 	and.w	r3, r3, #4
 8002f9c:	9300      	str	r3, [sp, #0]
 8002f9e:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002fa0:	9501      	str	r5, [sp, #4]
 8002fa2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002fa4:	f043 0301 	orr.w	r3, r3, #1
 8002fa8:	6323      	str	r3, [r4, #48]	; 0x30
 8002faa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002fac:	f003 0301 	and.w	r3, r3, #1
 8002fb0:	9301      	str	r3, [sp, #4]
 8002fb2:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002fb4:	f04f 0912 	mov.w	r9, #18
 8002fb8:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002fbc:	f04f 0801 	mov.w	r8, #1
 8002fc0:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002fc2:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002fc4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002fc6:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002fca:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002fce:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002fd0:	f009 fb54 	bl	800c67c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002fd4:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002fd8:	4811      	ldr	r0, [pc, #68]	; (8003020 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002fda:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002fdc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002fde:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002fe2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002fe6:	f009 fb49 	bl	800c67c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002fea:	9502      	str	r5, [sp, #8]
 8002fec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002fee:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002ff2:	6423      	str	r3, [r4, #64]	; 0x40
 8002ff4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002ff6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002ffa:	9302      	str	r3, [sp, #8]
 8002ffc:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002ffe:	6a23      	ldr	r3, [r4, #32]
 8003000:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8003004:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8003006:	6a23      	ldr	r3, [r4, #32]
 8003008:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800300c:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 800300e:	b009      	add	sp, #36	; 0x24
 8003010:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003014:	40005c00 	.word	0x40005c00
 8003018:	40023800 	.word	0x40023800
 800301c:	40020800 	.word	0x40020800
 8003020:	40020000 	.word	0x40020000

08003024 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8003024:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003026:	4604      	mov	r4, r0
 8003028:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800302a:	2214      	movs	r2, #20
 800302c:	2100      	movs	r1, #0
 800302e:	a807      	add	r0, sp, #28
 8003030:	f029 f966 	bl	802c300 <memset>
  if(hltdc->Instance==LTDC)
 8003034:	6822      	ldr	r2, [r4, #0]
 8003036:	4b57      	ldr	r3, [pc, #348]	; (8003194 <HAL_LTDC_MspInit+0x170>)
 8003038:	429a      	cmp	r2, r3
 800303a:	f040 80a8 	bne.w	800318e <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 800303e:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8003042:	2500      	movs	r5, #0
 8003044:	9500      	str	r5, [sp, #0]
 8003046:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8003048:	4853      	ldr	r0, [pc, #332]	; (8003198 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 800304a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800304e:	645a      	str	r2, [r3, #68]	; 0x44
 8003050:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003052:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8003056:	9200      	str	r2, [sp, #0]
 8003058:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800305a:	9501      	str	r5, [sp, #4]
 800305c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800305e:	f042 0220 	orr.w	r2, r2, #32
 8003062:	631a      	str	r2, [r3, #48]	; 0x30
 8003064:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003066:	f002 0220 	and.w	r2, r2, #32
 800306a:	9201      	str	r2, [sp, #4]
 800306c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800306e:	9502      	str	r5, [sp, #8]
 8003070:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003072:	f042 0201 	orr.w	r2, r2, #1
 8003076:	631a      	str	r2, [r3, #48]	; 0x30
 8003078:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800307a:	f002 0201 	and.w	r2, r2, #1
 800307e:	9202      	str	r2, [sp, #8]
 8003080:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003082:	9503      	str	r5, [sp, #12]
 8003084:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003086:	f042 0202 	orr.w	r2, r2, #2
 800308a:	631a      	str	r2, [r3, #48]	; 0x30
 800308c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800308e:	f002 0202 	and.w	r2, r2, #2
 8003092:	9203      	str	r2, [sp, #12]
 8003094:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8003096:	9504      	str	r5, [sp, #16]
 8003098:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800309a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800309e:	631a      	str	r2, [r3, #48]	; 0x30
 80030a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80030a2:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80030a6:	9204      	str	r2, [sp, #16]
 80030a8:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80030aa:	9505      	str	r5, [sp, #20]
 80030ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80030ae:	f042 0204 	orr.w	r2, r2, #4
 80030b2:	631a      	str	r2, [r3, #48]	; 0x30
 80030b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80030b6:	f002 0204 	and.w	r2, r2, #4
 80030ba:	9205      	str	r2, [sp, #20]
 80030bc:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80030be:	9506      	str	r5, [sp, #24]
 80030c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80030c2:	f042 0208 	orr.w	r2, r2, #8
 80030c6:	631a      	str	r2, [r3, #48]	; 0x30
 80030c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030ca:	f003 0308 	and.w	r3, r3, #8
 80030ce:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030d0:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80030d2:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80030d4:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80030d6:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030d8:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80030dc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030de:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80030e2:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80030e4:	f009 faca 	bl	800c67c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80030e8:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80030ec:	482b      	ldr	r0, [pc, #172]	; (800319c <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80030ee:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80030f0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030f2:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80030f6:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80030f8:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80030fc:	f009 fabe 	bl	800c67c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8003100:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003102:	4827      	ldr	r0, [pc, #156]	; (80031a0 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8003104:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003106:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003108:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800310c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003110:	f009 fab4 	bl	800c67c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8003114:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003118:	4821      	ldr	r0, [pc, #132]	; (80031a0 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800311a:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800311c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800311e:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003122:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003126:	f009 faa9 	bl	800c67c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800312a:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800312e:	481d      	ldr	r0, [pc, #116]	; (80031a4 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8003130:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003132:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003134:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003138:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800313c:	f009 fa9e 	bl	800c67c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8003140:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003142:	4819      	ldr	r0, [pc, #100]	; (80031a8 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8003144:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003146:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003148:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800314c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003150:	f009 fa94 	bl	800c67c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8003154:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8003156:	4815      	ldr	r0, [pc, #84]	; (80031ac <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8003158:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800315a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800315c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003160:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8003164:	f009 fa8a 	bl	800c67c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8003168:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800316c:	480d      	ldr	r0, [pc, #52]	; (80031a4 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800316e:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8003170:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003172:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003176:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800317a:	f009 fa7f 	bl	800c67c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 800317e:	2058      	movs	r0, #88	; 0x58
 8003180:	462a      	mov	r2, r5
 8003182:	2105      	movs	r1, #5
 8003184:	f008 ff8e 	bl	800c0a4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8003188:	2058      	movs	r0, #88	; 0x58
 800318a:	f008 ffbd 	bl	800c108 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 800318e:	b00d      	add	sp, #52	; 0x34
 8003190:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003192:	bf00      	nop
 8003194:	40016800 	.word	0x40016800
 8003198:	40021400 	.word	0x40021400
 800319c:	40020000 	.word	0x40020000
 80031a0:	40020400 	.word	0x40020400
 80031a4:	40021800 	.word	0x40021800
 80031a8:	40020800 	.word	0x40020800
 80031ac:	40020c00 	.word	0x40020c00

080031b0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80031b0:	b510      	push	{r4, lr}
 80031b2:	4604      	mov	r4, r0
 80031b4:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80031b6:	2214      	movs	r2, #20
 80031b8:	2100      	movs	r1, #0
 80031ba:	a803      	add	r0, sp, #12
 80031bc:	f029 f8a0 	bl	802c300 <memset>
  if(hspi->Instance==SPI5)
 80031c0:	6822      	ldr	r2, [r4, #0]
 80031c2:	4b14      	ldr	r3, [pc, #80]	; (8003214 <HAL_SPI_MspInit+0x64>)
 80031c4:	429a      	cmp	r2, r3
 80031c6:	d123      	bne.n	8003210 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80031c8:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80031cc:	2100      	movs	r1, #0
 80031ce:	9101      	str	r1, [sp, #4]
 80031d0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80031d2:	4811      	ldr	r0, [pc, #68]	; (8003218 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 80031d4:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80031d8:	645a      	str	r2, [r3, #68]	; 0x44
 80031da:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80031dc:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 80031e0:	9201      	str	r2, [sp, #4]
 80031e2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80031e4:	9102      	str	r1, [sp, #8]
 80031e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80031e8:	f042 0220 	orr.w	r2, r2, #32
 80031ec:	631a      	str	r2, [r3, #48]	; 0x30
 80031ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031f0:	f003 0320 	and.w	r3, r3, #32
 80031f4:	9302      	str	r3, [sp, #8]
 80031f6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80031f8:	f44f 7260 	mov.w	r2, #896	; 0x380
 80031fc:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80031fe:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003200:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8003204:	2305      	movs	r3, #5
 8003206:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800320a:	a903      	add	r1, sp, #12
 800320c:	f009 fa36 	bl	800c67c <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8003210:	b008      	add	sp, #32
 8003212:	bd10      	pop	{r4, pc}
 8003214:	40015000 	.word	0x40015000
 8003218:	40021400 	.word	0x40021400

0800321c <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 800321c:	6802      	ldr	r2, [r0, #0]
 800321e:	4b09      	ldr	r3, [pc, #36]	; (8003244 <HAL_TIM_Base_MspInit+0x28>)
 8003220:	429a      	cmp	r2, r3
{
 8003222:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
 8003224:	d10b      	bne.n	800323e <HAL_TIM_Base_MspInit+0x22>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8003226:	2300      	movs	r3, #0
 8003228:	9301      	str	r3, [sp, #4]
 800322a:	4b07      	ldr	r3, [pc, #28]	; (8003248 <HAL_TIM_Base_MspInit+0x2c>)
 800322c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800322e:	f042 0201 	orr.w	r2, r2, #1
 8003232:	645a      	str	r2, [r3, #68]	; 0x44
 8003234:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003236:	f003 0301 	and.w	r3, r3, #1
 800323a:	9301      	str	r3, [sp, #4]
 800323c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 800323e:	b002      	add	sp, #8
 8003240:	4770      	bx	lr
 8003242:	bf00      	nop
 8003244:	40010000 	.word	0x40010000
 8003248:	40023800 	.word	0x40023800

0800324c <HAL_TIM_PWM_MspInit>:
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
  if(htim_pwm->Instance==TIM2)
 800324c:	6803      	ldr	r3, [r0, #0]
 800324e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 8003252:	b082      	sub	sp, #8
  if(htim_pwm->Instance==TIM2)
 8003254:	d10d      	bne.n	8003272 <HAL_TIM_PWM_MspInit+0x26>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8003256:	2300      	movs	r3, #0
 8003258:	9300      	str	r3, [sp, #0]
 800325a:	4b0e      	ldr	r3, [pc, #56]	; (8003294 <HAL_TIM_PWM_MspInit+0x48>)
 800325c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800325e:	f042 0201 	orr.w	r2, r2, #1
 8003262:	641a      	str	r2, [r3, #64]	; 0x40
 8003264:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003266:	f003 0301 	and.w	r3, r3, #1
 800326a:	9300      	str	r3, [sp, #0]
 800326c:	9b00      	ldr	r3, [sp, #0]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 800326e:	b002      	add	sp, #8
 8003270:	4770      	bx	lr
  else if(htim_pwm->Instance==TIM4)
 8003272:	4a09      	ldr	r2, [pc, #36]	; (8003298 <HAL_TIM_PWM_MspInit+0x4c>)
 8003274:	4293      	cmp	r3, r2
 8003276:	d1fa      	bne.n	800326e <HAL_TIM_PWM_MspInit+0x22>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8003278:	2300      	movs	r3, #0
 800327a:	9301      	str	r3, [sp, #4]
 800327c:	4b05      	ldr	r3, [pc, #20]	; (8003294 <HAL_TIM_PWM_MspInit+0x48>)
 800327e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003280:	f042 0204 	orr.w	r2, r2, #4
 8003284:	641a      	str	r2, [r3, #64]	; 0x40
 8003286:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003288:	f003 0304 	and.w	r3, r3, #4
 800328c:	9301      	str	r3, [sp, #4]
 800328e:	9b01      	ldr	r3, [sp, #4]
}
 8003290:	e7ed      	b.n	800326e <HAL_TIM_PWM_MspInit+0x22>
 8003292:	bf00      	nop
 8003294:	40023800 	.word	0x40023800
 8003298:	40000800 	.word	0x40000800

0800329c <HAL_TIM_OC_MspInit>:
* @param htim_oc: TIM_OC handle pointer
* @retval None
*/
void HAL_TIM_OC_MspInit(TIM_HandleTypeDef* htim_oc)
{
  if(htim_oc->Instance==TIM3)
 800329c:	6802      	ldr	r2, [r0, #0]
 800329e:	4b09      	ldr	r3, [pc, #36]	; (80032c4 <HAL_TIM_OC_MspInit+0x28>)
 80032a0:	429a      	cmp	r2, r3
{
 80032a2:	b082      	sub	sp, #8
  if(htim_oc->Instance==TIM3)
 80032a4:	d10b      	bne.n	80032be <HAL_TIM_OC_MspInit+0x22>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 80032a6:	2300      	movs	r3, #0
 80032a8:	9301      	str	r3, [sp, #4]
 80032aa:	4b07      	ldr	r3, [pc, #28]	; (80032c8 <HAL_TIM_OC_MspInit+0x2c>)
 80032ac:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80032ae:	f042 0202 	orr.w	r2, r2, #2
 80032b2:	641a      	str	r2, [r3, #64]	; 0x40
 80032b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80032b6:	f003 0302 	and.w	r3, r3, #2
 80032ba:	9301      	str	r3, [sp, #4]
 80032bc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80032be:	b002      	add	sp, #8
 80032c0:	4770      	bx	lr
 80032c2:	bf00      	nop
 80032c4:	40000400 	.word	0x40000400
 80032c8:	40023800 	.word	0x40023800

080032cc <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80032cc:	b510      	push	{r4, lr}
 80032ce:	4604      	mov	r4, r0
 80032d0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80032d2:	2214      	movs	r2, #20
 80032d4:	2100      	movs	r1, #0
 80032d6:	a803      	add	r0, sp, #12
 80032d8:	f029 f812 	bl	802c300 <memset>
  if(htim->Instance==TIM2)
 80032dc:	6823      	ldr	r3, [r4, #0]
 80032de:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80032e2:	d117      	bne.n	8003314 <HAL_TIM_MspPostInit+0x48>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80032e4:	2300      	movs	r3, #0
 80032e6:	9300      	str	r3, [sp, #0]
 80032e8:	4b1e      	ldr	r3, [pc, #120]	; (8003364 <HAL_TIM_MspPostInit+0x98>)
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80032ea:	481f      	ldr	r0, [pc, #124]	; (8003368 <HAL_TIM_MspPostInit+0x9c>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80032ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80032ee:	f042 0201 	orr.w	r2, r2, #1
 80032f2:	631a      	str	r2, [r3, #48]	; 0x30
 80032f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032f6:	f003 0301 	and.w	r3, r3, #1
 80032fa:	9300      	str	r3, [sp, #0]
 80032fc:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80032fe:	2220      	movs	r2, #32
 8003300:	2302      	movs	r3, #2
 8003302:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8003306:	2301      	movs	r3, #1
 8003308:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800330a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800330c:	f009 f9b6 	bl	800c67c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 8003310:	b008      	add	sp, #32
 8003312:	bd10      	pop	{r4, pc}
  else if(htim->Instance==TIM3)
 8003314:	4a15      	ldr	r2, [pc, #84]	; (800336c <HAL_TIM_MspPostInit+0xa0>)
 8003316:	4293      	cmp	r3, r2
 8003318:	d113      	bne.n	8003342 <HAL_TIM_MspPostInit+0x76>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800331a:	2300      	movs	r3, #0
 800331c:	9301      	str	r3, [sp, #4]
 800331e:	4b11      	ldr	r3, [pc, #68]	; (8003364 <HAL_TIM_MspPostInit+0x98>)
 8003320:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003322:	f042 0202 	orr.w	r2, r2, #2
 8003326:	631a      	str	r2, [r3, #48]	; 0x30
 8003328:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800332a:	f003 0302 	and.w	r3, r3, #2
 800332e:	9301      	str	r3, [sp, #4]
 8003330:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8003332:	2310      	movs	r3, #16
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8003334:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003336:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003338:	480d      	ldr	r0, [pc, #52]	; (8003370 <HAL_TIM_MspPostInit+0xa4>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800333a:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 800333c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800333e:	a903      	add	r1, sp, #12
 8003340:	e7e4      	b.n	800330c <HAL_TIM_MspPostInit+0x40>
  else if(htim->Instance==TIM4)
 8003342:	4a0c      	ldr	r2, [pc, #48]	; (8003374 <HAL_TIM_MspPostInit+0xa8>)
 8003344:	4293      	cmp	r3, r2
 8003346:	d1e3      	bne.n	8003310 <HAL_TIM_MspPostInit+0x44>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003348:	2300      	movs	r3, #0
 800334a:	9302      	str	r3, [sp, #8]
 800334c:	4b05      	ldr	r3, [pc, #20]	; (8003364 <HAL_TIM_MspPostInit+0x98>)
 800334e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003350:	f042 0202 	orr.w	r2, r2, #2
 8003354:	631a      	str	r2, [r3, #48]	; 0x30
 8003356:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003358:	f003 0302 	and.w	r3, r3, #2
 800335c:	9302      	str	r3, [sp, #8]
 800335e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8003360:	2380      	movs	r3, #128	; 0x80
 8003362:	e7e7      	b.n	8003334 <HAL_TIM_MspPostInit+0x68>
 8003364:	40023800 	.word	0x40023800
 8003368:	40020000 	.word	0x40020000
 800336c:	40000400 	.word	0x40000400
 8003370:	40020400 	.word	0x40020400
 8003374:	40000800 	.word	0x40000800

08003378 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8003378:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800337c:	4606      	mov	r6, r0
 800337e:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003380:	2214      	movs	r2, #20
 8003382:	2100      	movs	r1, #0
 8003384:	a803      	add	r0, sp, #12
 8003386:	f028 ffbb 	bl	802c300 <memset>
  if(huart->Instance==USART1)
 800338a:	6832      	ldr	r2, [r6, #0]
 800338c:	4b2b      	ldr	r3, [pc, #172]	; (800343c <HAL_UART_MspInit+0xc4>)
 800338e:	429a      	cmp	r2, r3
 8003390:	d151      	bne.n	8003436 <HAL_UART_MspInit+0xbe>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8003392:	2500      	movs	r5, #0
 8003394:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 8003398:	9501      	str	r5, [sp, #4]
 800339a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800339c:	4828      	ldr	r0, [pc, #160]	; (8003440 <HAL_UART_MspInit+0xc8>)
    __HAL_RCC_USART1_CLK_ENABLE();
 800339e:	f042 0210 	orr.w	r2, r2, #16
 80033a2:	645a      	str	r2, [r3, #68]	; 0x44
 80033a4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80033a6:	f002 0210 	and.w	r2, r2, #16
 80033aa:	9201      	str	r2, [sp, #4]
 80033ac:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80033ae:	9502      	str	r5, [sp, #8]
 80033b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033b2:	f042 0201 	orr.w	r2, r2, #1
 80033b6:	631a      	str	r2, [r3, #48]	; 0x30
 80033b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033ba:	f003 0301 	and.w	r3, r3, #1
 80033be:	9302      	str	r3, [sp, #8]
 80033c0:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80033c2:	f04f 0902 	mov.w	r9, #2
 80033c6:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80033ca:	2407      	movs	r4, #7
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80033cc:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80033d0:	f04f 0803 	mov.w	r8, #3
 80033d4:	2301      	movs	r3, #1
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80033d6:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80033d8:	e9cd 3805 	strd	r3, r8, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80033dc:	9407      	str	r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80033de:	f44f 6780 	mov.w	r7, #1024	; 0x400
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80033e2:	f009 f94b 	bl	800c67c <HAL_GPIO_Init>
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80033e6:	4816      	ldr	r0, [pc, #88]	; (8003440 <HAL_UART_MspInit+0xc8>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80033e8:	9407      	str	r4, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80033ea:	a903      	add	r1, sp, #12

    /* USART1 DMA Init */
    /* USART1_TX Init */
    hdma_usart1_tx.Instance = DMA2_Stream7;
 80033ec:	4c15      	ldr	r4, [pc, #84]	; (8003444 <HAL_UART_MspInit+0xcc>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80033ee:	e9cd 7903 	strd	r7, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80033f2:	e9cd 5805 	strd	r5, r8, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80033f6:	f009 f941 	bl	800c67c <HAL_GPIO_Init>
    hdma_usart1_tx.Init.Channel = DMA_CHANNEL_4;
 80033fa:	4a13      	ldr	r2, [pc, #76]	; (8003448 <HAL_UART_MspInit+0xd0>)
 80033fc:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8003400:	e9c4 2300 	strd	r2, r3, [r4]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
    hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
    hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
    hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 8003404:	4620      	mov	r0, r4
    hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8003406:	2340      	movs	r3, #64	; 0x40
    hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8003408:	e9c4 3502 	strd	r3, r5, [r4, #8]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800340c:	e9c4 7504 	strd	r7, r5, [r4, #16]
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 8003410:	e9c4 5506 	strd	r5, r5, [r4, #24]
    hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8003414:	e9c4 5508 	strd	r5, r5, [r4, #32]
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 8003418:	f008 feaa 	bl	800c170 <HAL_DMA_Init>
 800341c:	b108      	cbz	r0, 8003422 <HAL_UART_MspInit+0xaa>
    {
      Error_Handler();
 800341e:	f7ff fca1 	bl	8002d64 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmatx,hdma_usart1_tx);
 8003422:	6334      	str	r4, [r6, #48]	; 0x30

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 8003424:	2025      	movs	r0, #37	; 0x25
 8003426:	2200      	movs	r2, #0
 8003428:	2105      	movs	r1, #5
    __HAL_LINKDMA(huart,hdmatx,hdma_usart1_tx);
 800342a:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 800342c:	f008 fe3a 	bl	800c0a4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8003430:	2025      	movs	r0, #37	; 0x25
 8003432:	f008 fe69 	bl	800c108 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8003436:	b009      	add	sp, #36	; 0x24
 8003438:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800343c:	40011000 	.word	0x40011000
 8003440:	40020000 	.word	0x40020000
 8003444:	20008e98 	.word	0x20008e98
 8003448:	400264b8 	.word	0x400264b8

0800344c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800344c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003450:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8003452:	2300      	movs	r3, #0
 8003454:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8003456:	4b2b      	ldr	r3, [pc, #172]	; (8003504 <HAL_SDRAM_MspInit+0xb8>)
 8003458:	681c      	ldr	r4, [r3, #0]
 800345a:	2c00      	cmp	r4, #0
 800345c:	d14f      	bne.n	80034fe <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 800345e:	f04f 0801 	mov.w	r8, #1
 8003462:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8003466:	4b28      	ldr	r3, [pc, #160]	; (8003508 <HAL_SDRAM_MspInit+0xbc>)
 8003468:	9400      	str	r4, [sp, #0]
 800346a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800346c:	4827      	ldr	r0, [pc, #156]	; (800350c <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800346e:	ea42 0208 	orr.w	r2, r2, r8
 8003472:	639a      	str	r2, [r3, #56]	; 0x38
 8003474:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003476:	ea03 0308 	and.w	r3, r3, r8
 800347a:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800347c:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800347e:	2603      	movs	r6, #3
 8003480:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8003482:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8003484:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003486:	f64f 033f 	movw	r3, #63551	; 0xf83f
 800348a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800348e:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8003492:	f009 f8f3 	bl	800c67c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003496:	481e      	ldr	r0, [pc, #120]	; (8003510 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8003498:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800349a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800349c:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80034a0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80034a4:	f009 f8ea 	bl	800c67c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80034a8:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80034ac:	4819      	ldr	r0, [pc, #100]	; (8003514 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80034ae:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80034b0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034b2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80034b6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80034ba:	f009 f8df 	bl	800c67c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80034be:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80034c2:	4815      	ldr	r0, [pc, #84]	; (8003518 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80034c4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80034c6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034c8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80034cc:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80034d0:	f009 f8d4 	bl	800c67c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80034d4:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80034d8:	4810      	ldr	r0, [pc, #64]	; (800351c <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80034da:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80034dc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034de:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80034e2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80034e6:	f009 f8c9 	bl	800c67c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80034ea:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80034ec:	480c      	ldr	r0, [pc, #48]	; (8003520 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80034ee:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80034f0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034f2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80034f6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80034fa:	f009 f8bf 	bl	800c67c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80034fe:	b006      	add	sp, #24
 8003500:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003504:	2000d1c0 	.word	0x2000d1c0
 8003508:	40023800 	.word	0x40023800
 800350c:	40021400 	.word	0x40021400
 8003510:	40020800 	.word	0x40020800
 8003514:	40021800 	.word	0x40021800
 8003518:	40021000 	.word	0x40021000
 800351c:	40020c00 	.word	0x40020c00
 8003520:	40020400 	.word	0x40020400

08003524 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8003524:	b530      	push	{r4, r5, lr}
 8003526:	4601      	mov	r1, r0
 8003528:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 800352a:	2200      	movs	r2, #0
 800352c:	2036      	movs	r0, #54	; 0x36
 800352e:	f008 fdb9 	bl	800c0a4 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8003532:	2036      	movs	r0, #54	; 0x36
 8003534:	f008 fde8 	bl	800c108 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8003538:	2500      	movs	r5, #0
 800353a:	4b15      	ldr	r3, [pc, #84]	; (8003590 <HAL_InitTick+0x6c>)
 800353c:	9502      	str	r5, [sp, #8]
 800353e:	6c1a      	ldr	r2, [r3, #64]	; 0x40

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8003540:	4c14      	ldr	r4, [pc, #80]	; (8003594 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8003542:	f042 0210 	orr.w	r2, r2, #16
 8003546:	641a      	str	r2, [r3, #64]	; 0x40
 8003548:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800354a:	f003 0310 	and.w	r3, r3, #16
 800354e:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8003550:	a901      	add	r1, sp, #4
 8003552:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8003554:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8003556:	f00a fa0f 	bl	800d978 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 800355a:	f00a f9ed 	bl	800d938 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 800355e:	4b0e      	ldr	r3, [pc, #56]	; (8003598 <HAL_InitTick+0x74>)
 8003560:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 8003562:	f240 33e7 	movw	r3, #999	; 0x3e7
 8003566:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8003568:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 800356a:	4b0c      	ldr	r3, [pc, #48]	; (800359c <HAL_InitTick+0x78>)
 800356c:	fbb0 f0f3 	udiv	r0, r0, r3
 8003570:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8003572:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8003574:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8003576:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003578:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 800357a:	f00b f859 	bl	800e630 <HAL_TIM_Base_Init>
 800357e:	b920      	cbnz	r0, 800358a <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8003580:	4620      	mov	r0, r4
 8003582:	f00a ff39 	bl	800e3f8 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8003586:	b009      	add	sp, #36	; 0x24
 8003588:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 800358a:	2001      	movs	r0, #1
 800358c:	e7fb      	b.n	8003586 <HAL_InitTick+0x62>
 800358e:	bf00      	nop
 8003590:	40023800 	.word	0x40023800
 8003594:	2000d1c4 	.word	0x2000d1c4
 8003598:	40001000 	.word	0x40001000
 800359c:	000f4240 	.word	0x000f4240

080035a0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80035a0:	4770      	bx	lr

080035a2 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80035a2:	e7fe      	b.n	80035a2 <HardFault_Handler>

080035a4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80035a4:	e7fe      	b.n	80035a4 <MemManage_Handler>

080035a6 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80035a6:	e7fe      	b.n	80035a6 <BusFault_Handler>

080035a8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80035a8:	e7fe      	b.n	80035a8 <UsageFault_Handler>

080035aa <DebugMon_Handler>:
 80035aa:	4770      	bx	lr

080035ac <USART1_IRQHandler>:
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80035ac:	4801      	ldr	r0, [pc, #4]	; (80035b4 <USART1_IRQHandler+0x8>)
 80035ae:	f00b bb61 	b.w	800ec74 <HAL_UART_IRQHandler>
 80035b2:	bf00      	nop
 80035b4:	20009180 	.word	0x20009180

080035b8 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80035b8:	4801      	ldr	r0, [pc, #4]	; (80035c0 <TIM6_DAC_IRQHandler+0x8>)
 80035ba:	f00a bf31 	b.w	800e420 <HAL_TIM_IRQHandler>
 80035be:	bf00      	nop
 80035c0:	2000d1c4 	.word	0x2000d1c4

080035c4 <DMA2_Stream0_IRQHandler>:
void DMA2_Stream0_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 80035c4:	4801      	ldr	r0, [pc, #4]	; (80035cc <DMA2_Stream0_IRQHandler+0x8>)
 80035c6:	f008 be9f 	b.w	800c308 <HAL_DMA_IRQHandler>
 80035ca:	bf00      	nop
 80035cc:	20008dd8 	.word	0x20008dd8

080035d0 <DMA2_Stream2_IRQHandler>:
void DMA2_Stream2_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc2);
 80035d0:	4801      	ldr	r0, [pc, #4]	; (80035d8 <DMA2_Stream2_IRQHandler+0x8>)
 80035d2:	f008 be99 	b.w	800c308 <HAL_DMA_IRQHandler>
 80035d6:	bf00      	nop
 80035d8:	20008e38 	.word	0x20008e38

080035dc <DMA2_Stream7_IRQHandler>:
void DMA2_Stream7_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */

  /* USER CODE END DMA2_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_tx);
 80035dc:	4801      	ldr	r0, [pc, #4]	; (80035e4 <DMA2_Stream7_IRQHandler+0x8>)
 80035de:	f008 be93 	b.w	800c308 <HAL_DMA_IRQHandler>
 80035e2:	bf00      	nop
 80035e4:	20008e98 	.word	0x20008e98

080035e8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80035e8:	4801      	ldr	r0, [pc, #4]	; (80035f0 <LTDC_IRQHandler+0x8>)
 80035ea:	f009 be89 	b.w	800d300 <HAL_LTDC_IRQHandler>
 80035ee:	bf00      	nop
 80035f0:	20008f4c 	.word	0x20008f4c

080035f4 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80035f4:	4801      	ldr	r0, [pc, #4]	; (80035fc <DMA2D_IRQHandler+0x8>)
 80035f6:	f008 bf73 	b.w	800c4e0 <HAL_DMA2D_IRQHandler>
 80035fa:	bf00      	nop
 80035fc:	20008d98 	.word	0x20008d98

08003600 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8003600:	2001      	movs	r0, #1
 8003602:	4770      	bx	lr

08003604 <_kill>:

int _kill(int pid, int sig)
{
 8003604:	b508      	push	{r3, lr}
	errno = EINVAL;
 8003606:	f028 fd27 	bl	802c058 <__errno>
 800360a:	2316      	movs	r3, #22
 800360c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800360e:	f04f 30ff 	mov.w	r0, #4294967295
 8003612:	bd08      	pop	{r3, pc}

08003614 <_exit>:

void _exit (int status)
{
 8003614:	b508      	push	{r3, lr}
	errno = EINVAL;
 8003616:	f028 fd1f 	bl	802c058 <__errno>
 800361a:	2316      	movs	r3, #22
 800361c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800361e:	e7fe      	b.n	800361e <_exit+0xa>

08003620 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8003620:	b570      	push	{r4, r5, r6, lr}
 8003622:	460d      	mov	r5, r1
 8003624:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003626:	460e      	mov	r6, r1
 8003628:	1b73      	subs	r3, r6, r5
 800362a:	429c      	cmp	r4, r3
 800362c:	dc01      	bgt.n	8003632 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800362e:	4620      	mov	r0, r4
 8003630:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8003632:	f3af 8000 	nop.w
 8003636:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800363a:	e7f5      	b.n	8003628 <_read+0x8>

0800363c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800363c:	b570      	push	{r4, r5, r6, lr}
 800363e:	460d      	mov	r5, r1
 8003640:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003642:	460e      	mov	r6, r1
 8003644:	1b73      	subs	r3, r6, r5
 8003646:	429c      	cmp	r4, r3
 8003648:	dc01      	bgt.n	800364e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800364a:	4620      	mov	r0, r4
 800364c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800364e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8003652:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003656:	e7f5      	b.n	8003644 <_write+0x8>

08003658 <_close>:

int _close(int file)
{
	return -1;
}
 8003658:	f04f 30ff 	mov.w	r0, #4294967295
 800365c:	4770      	bx	lr

0800365e <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800365e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003662:	604b      	str	r3, [r1, #4]
	return 0;
}
 8003664:	2000      	movs	r0, #0
 8003666:	4770      	bx	lr

08003668 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8003668:	2001      	movs	r0, #1
 800366a:	4770      	bx	lr

0800366c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 800366c:	2000      	movs	r0, #0
 800366e:	4770      	bx	lr

08003670 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8003670:	4a0a      	ldr	r2, [pc, #40]	; (800369c <_sbrk+0x2c>)
 8003672:	6811      	ldr	r1, [r2, #0]
{
 8003674:	b508      	push	{r3, lr}
 8003676:	4603      	mov	r3, r0
	if (heap_end == 0)
 8003678:	b909      	cbnz	r1, 800367e <_sbrk+0xe>
		heap_end = &end;
 800367a:	4909      	ldr	r1, [pc, #36]	; (80036a0 <_sbrk+0x30>)
 800367c:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 800367e:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8003680:	4669      	mov	r1, sp
 8003682:	4403      	add	r3, r0
 8003684:	428b      	cmp	r3, r1
 8003686:	d906      	bls.n	8003696 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8003688:	f028 fce6 	bl	802c058 <__errno>
 800368c:	230c      	movs	r3, #12
 800368e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8003690:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8003694:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8003696:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8003698:	e7fc      	b.n	8003694 <_sbrk+0x24>
 800369a:	bf00      	nop
 800369c:	2000d204 	.word	0x2000d204
 80036a0:	2001e488 	.word	0x2001e488

080036a4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId GRAPHAXIS = 2;    // verdana_10_4bpp
    static const touchgfx::FontId HIGHLIGHT = 7;    // arialbi_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 8;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80036a4:	4770      	bx	lr

080036a6 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80036a6:	b508      	push	{r3, lr}
    switch (typography)
 80036a8:	2908      	cmp	r1, #8
 80036aa:	d826      	bhi.n	80036fa <_ZN23ApplicationFontProvider7getFontEt+0x54>
 80036ac:	e8df f001 	tbb	[pc, r1]
 80036b0:	0d1d0905 	.word	0x0d1d0905
 80036b4:	1d191511 	.word	0x1d191511
 80036b8:	21          	.byte	0x21
 80036b9:	00          	.byte	0x00
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80036ba:	f007 fb29 	bl	800ad10 <_ZN17TypedTextDatabase8getFontsEv>
 80036be:	6800      	ldr	r0, [r0, #0]
        // arialbi_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[7]);
    default:
        return 0;
    }
}
 80036c0:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80036c2:	f007 fb25 	bl	800ad10 <_ZN17TypedTextDatabase8getFontsEv>
 80036c6:	6840      	ldr	r0, [r0, #4]
 80036c8:	e7fa      	b.n	80036c0 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80036ca:	f007 fb21 	bl	800ad10 <_ZN17TypedTextDatabase8getFontsEv>
 80036ce:	68c0      	ldr	r0, [r0, #12]
 80036d0:	e7f6      	b.n	80036c0 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 80036d2:	f007 fb1d 	bl	800ad10 <_ZN17TypedTextDatabase8getFontsEv>
 80036d6:	6900      	ldr	r0, [r0, #16]
 80036d8:	e7f2      	b.n	80036c0 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
 80036da:	f007 fb19 	bl	800ad10 <_ZN17TypedTextDatabase8getFontsEv>
 80036de:	6940      	ldr	r0, [r0, #20]
 80036e0:	e7ee      	b.n	80036c0 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
 80036e2:	f007 fb15 	bl	800ad10 <_ZN17TypedTextDatabase8getFontsEv>
 80036e6:	6980      	ldr	r0, [r0, #24]
 80036e8:	e7ea      	b.n	80036c0 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80036ea:	f007 fb11 	bl	800ad10 <_ZN17TypedTextDatabase8getFontsEv>
 80036ee:	6880      	ldr	r0, [r0, #8]
 80036f0:	e7e6      	b.n	80036c0 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[7]);
 80036f2:	f007 fb0d 	bl	800ad10 <_ZN17TypedTextDatabase8getFontsEv>
 80036f6:	69c0      	ldr	r0, [r0, #28]
 80036f8:	e7e2      	b.n	80036c0 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
    switch (typography)
 80036fa:	2000      	movs	r0, #0
 80036fc:	e7e0      	b.n	80036c0 <_ZN23ApplicationFontProvider7getFontEt+0x1a>

080036fe <_ZN23ApplicationFontProviderD0Ev>:
 80036fe:	b510      	push	{r4, lr}
 8003700:	2104      	movs	r1, #4
 8003702:	4604      	mov	r4, r0
 8003704:	f027 fd29 	bl	802b15a <_ZdlPvj>
 8003708:	4620      	mov	r0, r4
 800370a:	bd10      	pop	{r4, pc}

0800370c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800370c:	4800      	ldr	r0, [pc, #0]	; (8003710 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800370e:	4770      	bx	lr
 8003710:	0802f598 	.word	0x0802f598

08003714 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8003714:	2012      	movs	r0, #18
 8003716:	4770      	bx	lr

08003718 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8003718:	b513      	push	{r0, r1, r4, lr}
 800371a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 800371c:	b151      	cbz	r1, 8003734 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800371e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8003720:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8003722:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8003726:	aa01      	add	r2, sp, #4
 8003728:	689c      	ldr	r4, [r3, #8]
 800372a:	f10d 0303 	add.w	r3, sp, #3
 800372e:	47a0      	blx	r4
        return glyph;
    }
 8003730:	b002      	add	sp, #8
 8003732:	bd10      	pop	{r4, pc}
            return 0;
 8003734:	4608      	mov	r0, r1
 8003736:	e7fb      	b.n	8003730 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08003738 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8003738:	8940      	ldrh	r0, [r0, #10]
 800373a:	4770      	bx	lr

0800373c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 800373c:	8980      	ldrh	r0, [r0, #12]
 800373e:	4770      	bx	lr

08003740 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8003740:	8880      	ldrh	r0, [r0, #4]
 8003742:	4770      	bx	lr

08003744 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8003744:	7983      	ldrb	r3, [r0, #6]
 8003746:	8880      	ldrh	r0, [r0, #4]
 8003748:	4418      	add	r0, r3
    }
 800374a:	b280      	uxth	r0, r0
 800374c:	4770      	bx	lr

0800374e <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800374e:	79c0      	ldrb	r0, [r0, #7]
    }
 8003750:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8003754:	4770      	bx	lr

08003756 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8003756:	79c0      	ldrb	r0, [r0, #7]
    }
 8003758:	09c0      	lsrs	r0, r0, #7
 800375a:	4770      	bx	lr

0800375c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800375c:	2000      	movs	r0, #0
 800375e:	4770      	bx	lr

08003760 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8003760:	8081      	strh	r1, [r0, #4]
    }
 8003762:	4770      	bx	lr

08003764 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8003764:	80c1      	strh	r1, [r0, #6]
    }
 8003766:	4770      	bx	lr

08003768 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003768:	8101      	strh	r1, [r0, #8]
    }
 800376a:	4770      	bx	lr

0800376c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800376c:	8141      	strh	r1, [r0, #10]
    }
 800376e:	4770      	bx	lr

08003770 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8003770:	4770      	bx	lr

08003772 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 8003772:	4770      	bx	lr

08003774 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8003774:	4770      	bx	lr

08003776 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 8003776:	4770      	bx	lr

08003778 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003778:	4770      	bx	lr

0800377a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800377a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800377c:	88c4      	ldrh	r4, [r0, #6]
 800377e:	6803      	ldr	r3, [r0, #0]
 8003780:	1b12      	subs	r2, r2, r4
 8003782:	8884      	ldrh	r4, [r0, #4]
 8003784:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003786:	1b09      	subs	r1, r1, r4
 8003788:	b212      	sxth	r2, r2
    }
 800378a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800378e:	b209      	sxth	r1, r1
 8003790:	4718      	bx	r3

08003792 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8003792:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003796:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003798:	f04f 33ff 	mov.w	r3, #4294967295
 800379c:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800379e:	6813      	ldr	r3, [r2, #0]
 80037a0:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80037a2:	6010      	str	r0, [r2, #0]
    }
 80037a4:	4770      	bx	lr

080037a6 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80037a6:	4770      	bx	lr

080037a8 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80037a8:	4770      	bx	lr

080037aa <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80037aa:	4770      	bx	lr

080037ac <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80037ac:	4770      	bx	lr

080037ae <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80037ae:	4770      	bx	lr

080037b0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80037b0:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80037b4:	b11a      	cbz	r2, 80037be <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80037b6:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80037ba:	b102      	cbz	r2, 80037be <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80037bc:	6018      	str	r0, [r3, #0]
        }
    }
 80037be:	4770      	bx	lr

080037c0 <_ZN23DataDisplayListViewBaseD1Ev>:

class DataDisplayListViewBase : public touchgfx::View<DataDisplayListPresenter>
{
public:
    DataDisplayListViewBase();
    virtual ~DataDisplayListViewBase() {}
 80037c0:	4770      	bx	lr

080037c2 <_ZN23DataDisplayListViewBase11setupScreenEv>:
}

void DataDisplayListViewBase::setupScreen()
{

}
 80037c2:	4770      	bx	lr

080037c4 <_ZN8touchgfx8CallbackI23DataDisplayListViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80037c4:	4770      	bx	lr

080037c6 <_ZN8touchgfx8CallbackI23DataDisplayListViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80037c6:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun_1)(t1);
 80037c8:	68c2      	ldr	r2, [r0, #12]
 80037ca:	6844      	ldr	r4, [r0, #4]
 80037cc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80037ce:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80037d0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80037d4:	07d2      	lsls	r2, r2, #31
 80037d6:	bf48      	it	mi
 80037d8:	5962      	ldrmi	r2, [r4, r5]
 80037da:	689b      	ldr	r3, [r3, #8]
    }
 80037dc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80037de:	bf48      	it	mi
 80037e0:	58d3      	ldrmi	r3, [r2, r3]
 80037e2:	4718      	bx	r3

080037e4 <_ZNK8touchgfx8CallbackI23DataDisplayListViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_1 != 0);
 80037e4:	6843      	ldr	r3, [r0, #4]
 80037e6:	b12b      	cbz	r3, 80037f4 <_ZNK8touchgfx8CallbackI23DataDisplayListViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80037e8:	6883      	ldr	r3, [r0, #8]
 80037ea:	b92b      	cbnz	r3, 80037f8 <_ZNK8touchgfx8CallbackI23DataDisplayListViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80037ec:	68c0      	ldr	r0, [r0, #12]
 80037ee:	f000 0001 	and.w	r0, r0, #1
 80037f2:	4770      	bx	lr
 80037f4:	4618      	mov	r0, r3
 80037f6:	4770      	bx	lr
 80037f8:	2001      	movs	r0, #1
    }
 80037fa:	4770      	bx	lr

080037fc <_ZN8touchgfx8CallbackI23DataDisplayListViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80037fc:	b510      	push	{r4, lr}
 80037fe:	2110      	movs	r1, #16
 8003800:	4604      	mov	r4, r0
 8003802:	f027 fcaa 	bl	802b15a <_ZdlPvj>
 8003806:	4620      	mov	r0, r4
 8003808:	bd10      	pop	{r4, pc}

0800380a <_ZN23DataDisplayListViewBaseD0Ev>:
 800380a:	b510      	push	{r4, lr}
 800380c:	f44f 71c0 	mov.w	r1, #384	; 0x180
 8003810:	4604      	mov	r4, r0
 8003812:	f027 fca2 	bl	802b15a <_ZdlPvj>
 8003816:	4620      	mov	r0, r4
 8003818:	bd10      	pop	{r4, pc}

0800381a <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800381a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800381e:	b112      	cbz	r2, 8003826 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8003820:	6803      	ldr	r3, [r0, #0]
 8003822:	695b      	ldr	r3, [r3, #20]
 8003824:	4718      	bx	r3
    }
 8003826:	4770      	bx	lr

08003828 <_ZN23DataDisplayListViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void DataDisplayListViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8003828:	b508      	push	{r3, lr}
    if (&src == &ReactanceGraph)
 800382a:	f100 0398 	add.w	r3, r0, #152	; 0x98
 800382e:	4299      	cmp	r1, r3
 8003830:	d105      	bne.n	800383e <_ZN23DataDisplayListViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003832:	f015 fda9 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction4
        //When SaveData clicked change screen to DataSaved
        //Go to DataSaved with screen transition towards North
        application().gotoDataSavedScreenSlideTransitionNorth();
    }
}
 8003836:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoReactanceGraphScreenSlideTransitionWest();
 800383a:	f001 b9ed 	b.w	8004c18 <_ZN23FrontendApplicationBase43gotoReactanceGraphScreenSlideTransitionWestEv>
    else if (&src == &ResistanceGraph)
 800383e:	f100 03e0 	add.w	r3, r0, #224	; 0xe0
 8003842:	4299      	cmp	r1, r3
 8003844:	d105      	bne.n	8003852 <_ZN23DataDisplayListViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
 8003846:	f015 fd9f 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
}
 800384a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoResistanceGraphScreenSlideTransitionWest();
 800384e:	f001 b9d3 	b.w	8004bf8 <_ZN23FrontendApplicationBase44gotoResistanceGraphScreenSlideTransitionWestEv>
    else if (&src == &SaveData)
 8003852:	f500 7094 	add.w	r0, r0, #296	; 0x128
 8003856:	4281      	cmp	r1, r0
 8003858:	d105      	bne.n	8003866 <_ZN23DataDisplayListViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3e>
 800385a:	f015 fd95 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
}
 800385e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoDataSavedScreenSlideTransitionNorth();
 8003862:	f001 b9e9 	b.w	8004c38 <_ZN23FrontendApplicationBase39gotoDataSavedScreenSlideTransitionNorthEv>
}
 8003866:	bd08      	pop	{r3, pc}

08003868 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8003868:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800386a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800386c:	4604      	mov	r4, r0
        setX(x);
 800386e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8003870:	4615      	mov	r5, r2
        setX(x);
 8003872:	4798      	blx	r3
        setY(y);
 8003874:	6823      	ldr	r3, [r4, #0]
 8003876:	4629      	mov	r1, r5
 8003878:	4620      	mov	r0, r4
 800387a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800387c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003880:	4718      	bx	r3
	...

08003884 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8003884:	4b1b      	ldr	r3, [pc, #108]	; (80038f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8003886:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8003888:	881b      	ldrh	r3, [r3, #0]
 800388a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800388c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800388e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003890:	d92b      	bls.n	80038ea <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003892:	4b19      	ldr	r3, [pc, #100]	; (80038f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	b92b      	cbnz	r3, 80038a4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003898:	4b18      	ldr	r3, [pc, #96]	; (80038fc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800389a:	4a19      	ldr	r2, [pc, #100]	; (8003900 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800389c:	4819      	ldr	r0, [pc, #100]	; (8003904 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800389e:	21ae      	movs	r1, #174	; 0xae
 80038a0:	f028 fba8 	bl	802bff4 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80038a4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80038a8:	4b17      	ldr	r3, [pc, #92]	; (8003908 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80038b0:	4b16      	ldr	r3, [pc, #88]	; (800390c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 80038b2:	6818      	ldr	r0, [r3, #0]
 80038b4:	f007 fa1c 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80038b8:	682b      	ldr	r3, [r5, #0]
 80038ba:	9001      	str	r0, [sp, #4]
 80038bc:	4601      	mov	r1, r0
 80038be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80038c0:	4628      	mov	r0, r5
 80038c2:	4798      	blx	r3
 80038c4:	682b      	ldr	r3, [r5, #0]
 80038c6:	9901      	ldr	r1, [sp, #4]
 80038c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038ca:	4604      	mov	r4, r0
 80038cc:	4628      	mov	r0, r5
 80038ce:	4798      	blx	r3
 80038d0:	682b      	ldr	r3, [r5, #0]
 80038d2:	9901      	ldr	r1, [sp, #4]
 80038d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038d6:	fb14 f400 	smulbb	r4, r4, r0
 80038da:	4628      	mov	r0, r5
 80038dc:	4798      	blx	r3
 80038de:	b2e4      	uxtb	r4, r4
 80038e0:	4404      	add	r4, r0
 80038e2:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80038e6:	b002      	add	sp, #8
 80038e8:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 80038ea:	2300      	movs	r3, #0
 80038ec:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 80038f0:	e7f9      	b.n	80038e6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 80038f2:	bf00      	nop
 80038f4:	2001e234 	.word	0x2001e234
 80038f8:	2001e230 	.word	0x2001e230
 80038fc:	0802f700 	.word	0x0802f700
 8003900:	0802f742 	.word	0x0802f742
 8003904:	0802f770 	.word	0x0802f770
 8003908:	2001e238 	.word	0x2001e238
 800390c:	2001e23c 	.word	0x2001e23c

08003910 <_ZN23DataDisplayListViewBaseC1Ev>:
DataDisplayListViewBase::DataDisplayListViewBase() :
 8003910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003914:	4604      	mov	r4, r0
 8003916:	b085      	sub	sp, #20
    buttonCallback(this, &DataDisplayListViewBase::buttonCallbackHandler)
 8003918:	4625      	mov	r5, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800391a:	f017 f8a5 	bl	801aa68 <_ZN8touchgfx6ScreenC1Ev>
 800391e:	2600      	movs	r6, #0
 8003920:	4b66      	ldr	r3, [pc, #408]	; (8003abc <_ZN23DataDisplayListViewBaseC1Ev+0x1ac>)
 8003922:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003924:	f845 3b40 	str.w	r3, [r5], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003928:	4b65      	ldr	r3, [pc, #404]	; (8003ac0 <_ZN23DataDisplayListViewBaseC1Ev+0x1b0>)
          visible(true)
 800392a:	6626      	str	r6, [r4, #96]	; 0x60
 800392c:	e9c4 3610 	strd	r3, r6, [r4, #64]	; 0x40
 8003930:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003934:	23ff      	movs	r3, #255	; 0xff
 8003936:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800393a:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 800393e:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8003942:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003946:	f64f 73ff 	movw	r3, #65535	; 0xffff
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 800394a:	4a5e      	ldr	r2, [pc, #376]	; (8003ac4 <_ZN23DataDisplayListViewBaseC1Ev+0x1b4>)
 800394c:	66e2      	str	r2, [r4, #108]	; 0x6c
 800394e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8003952:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
    {
        Image::setBitmap(bmp);
 8003956:	a903      	add	r1, sp, #12
 8003958:	f104 0998 	add.w	r9, r4, #152	; 0x98
 800395c:	e9c4 6612 	strd	r6, r6, [r4, #72]	; 0x48
 8003960:	e9c4 6614 	strd	r6, r6, [r4, #80]	; 0x50
 8003964:	e9c4 6616 	strd	r6, r6, [r4, #88]	; 0x58
 8003968:	e9c4 661c 	strd	r6, r6, [r4, #112]	; 0x70
 800396c:	e9c4 661e 	strd	r6, r6, [r4, #120]	; 0x78
 8003970:	e9c4 6620 	strd	r6, r6, [r4, #128]	; 0x80
 8003974:	e9c4 6622 	strd	r6, r6, [r4, #136]	; 0x88
        : color(col)
 8003978:	66a6      	str	r6, [r4, #104]	; 0x68
 800397a:	4650      	mov	r0, sl
 800397c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003980:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8003984:	f013 fe45 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003988:	4648      	mov	r0, r9
 800398a:	f013 ff8b 	bl	80178a4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800398e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8003992:	4640      	mov	r0, r8
 8003994:	f013 ff86 	bl	80178a4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003998:	4638      	mov	r0, r7
 800399a:	f013 ff83 	bl	80178a4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800399e:	4b4a      	ldr	r3, [pc, #296]	; (8003ac8 <_ZN23DataDisplayListViewBaseC1Ev+0x1b8>)
 80039a0:	e9c4 345c 	strd	r3, r4, [r4, #368]	; 0x170
 80039a4:	4b49      	ldr	r3, [pc, #292]	; (8003acc <_ZN23DataDisplayListViewBaseC1Ev+0x1bc>)
        setXY(x, y);
 80039a6:	4632      	mov	r2, r6
 80039a8:	e9c4 365e 	strd	r3, r6, [r4, #376]	; 0x178
 80039ac:	4631      	mov	r1, r6
 80039ae:	4628      	mov	r0, r5
 80039b0:	f7ff ff5a 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80039b4:	4628      	mov	r0, r5
 80039b6:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80039ba:	f7ff fed5 	bl	8003768 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80039be:	4628      	mov	r0, r5
 80039c0:	21f0      	movs	r1, #240	; 0xf0
 80039c2:	f7ff fed3 	bl	800376c <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 80039c6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80039ca:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 80039cc:	4632      	mov	r2, r6
 80039ce:	4631      	mov	r1, r6
 80039d0:	4650      	mov	r0, sl
 80039d2:	f7ff ff49 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 80039d6:	a903      	add	r1, sp, #12
 80039d8:	4650      	mov	r0, sl
 80039da:	f8ad 600c 	strh.w	r6, [sp, #12]
 80039de:	f013 fe18 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    ReactanceGraph.setXY(51, 105);
 80039e2:	4648      	mov	r0, r9
 80039e4:	2269      	movs	r2, #105	; 0x69
 80039e6:	2133      	movs	r1, #51	; 0x33
 80039e8:	f7ff ff3e 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 80039ec:	f04f 0b06 	mov.w	fp, #6
 80039f0:	2305      	movs	r3, #5
    ReactanceGraph.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_PRESSED_ID));
 80039f2:	a902      	add	r1, sp, #8
 80039f4:	aa03      	add	r2, sp, #12
 80039f6:	4648      	mov	r0, r9
 80039f8:	f8ad 3008 	strh.w	r3, [sp, #8]
 80039fc:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003a00:	f013 fade 	bl	8016fc0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003a04:	2210      	movs	r2, #16
 8003a06:	f8a4 20d0 	strh.w	r2, [r4, #208]	; 0xd0
        updateTextPosition();
 8003a0a:	4648      	mov	r0, r9
 8003a0c:	f7ff ff3a 	bl	8003884 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8003a10:	f04f 36ff 	mov.w	r6, #4294967295
    ReactanceGraph.setAction(buttonCallback);
 8003a14:	f504 73b8 	add.w	r3, r4, #368	; 0x170
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003a18:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    ResistanceGraph.setXY(51, 36);
 8003a1c:	4640      	mov	r0, r8
        colorPressed = col;
 8003a1e:	e9c4 6635 	strd	r6, r6, [r4, #212]	; 0xd4
 8003a22:	2224      	movs	r2, #36	; 0x24
 8003a24:	2133      	movs	r1, #51	; 0x33
    ReactanceGraph.setAction(buttonCallback);
 8003a26:	9301      	str	r3, [sp, #4]
    ResistanceGraph.setXY(51, 36);
 8003a28:	f7ff ff1e 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 8003a2c:	2305      	movs	r3, #5
    ResistanceGraph.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_PRESSED_ID));
 8003a2e:	a902      	add	r1, sp, #8
 8003a30:	aa03      	add	r2, sp, #12
 8003a32:	4640      	mov	r0, r8
 8003a34:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003a38:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003a3c:	f013 fac0 	bl	8016fc0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003a40:	220f      	movs	r2, #15
 8003a42:	f8a4 2118 	strh.w	r2, [r4, #280]	; 0x118
        updateTextPosition();
 8003a46:	4640      	mov	r0, r8
 8003a48:	f7ff ff1c 	bl	8003884 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003a4c:	9b01      	ldr	r3, [sp, #4]
 8003a4e:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
    SaveData.setXY(51, 172);
 8003a52:	4638      	mov	r0, r7
        colorPressed = col;
 8003a54:	e9c4 6647 	strd	r6, r6, [r4, #284]	; 0x11c
 8003a58:	22ac      	movs	r2, #172	; 0xac
 8003a5a:	2133      	movs	r1, #51	; 0x33
 8003a5c:	f7ff ff04 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    SaveData.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_PRESSED_ID));
 8003a60:	aa03      	add	r2, sp, #12
 8003a62:	a902      	add	r1, sp, #8
 8003a64:	2305      	movs	r3, #5
 8003a66:	4638      	mov	r0, r7
 8003a68:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003a6c:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003a70:	f013 faa6 	bl	8016fc0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003a74:	230e      	movs	r3, #14
 8003a76:	f8a4 3160 	strh.w	r3, [r4, #352]	; 0x160
        updateTextPosition();
 8003a7a:	4638      	mov	r0, r7
 8003a7c:	f7ff ff02 	bl	8003884 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003a80:	9b01      	ldr	r3, [sp, #4]
 8003a82:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003a86:	1d20      	adds	r0, r4, #4
 8003a88:	4629      	mov	r1, r5
        colorPressed = col;
 8003a8a:	e9c4 6659 	strd	r6, r6, [r4, #356]	; 0x164
 8003a8e:	9001      	str	r0, [sp, #4]
 8003a90:	f00e f9fc 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003a94:	9801      	ldr	r0, [sp, #4]
 8003a96:	4651      	mov	r1, sl
 8003a98:	f00e f9f8 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003a9c:	9801      	ldr	r0, [sp, #4]
 8003a9e:	4649      	mov	r1, r9
 8003aa0:	f00e f9f4 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003aa4:	9801      	ldr	r0, [sp, #4]
 8003aa6:	4641      	mov	r1, r8
 8003aa8:	f00e f9f0 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003aac:	9801      	ldr	r0, [sp, #4]
 8003aae:	4639      	mov	r1, r7
 8003ab0:	f00e f9ec 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003ab4:	4620      	mov	r0, r4
 8003ab6:	b005      	add	sp, #20
 8003ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003abc:	0802f7d8 	.word	0x0802f7d8
 8003ac0:	08034854 	.word	0x08034854
 8003ac4:	08034a34 	.word	0x08034a34
 8003ac8:	0802f7c0 	.word	0x0802f7c0
 8003acc:	08003829 	.word	0x08003829

08003ad0 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8003ad0:	4770      	bx	lr

08003ad2 <_ZN17DataSavedViewBaseD1Ev>:

class DataSavedViewBase : public touchgfx::View<DataSavedPresenter>
{
public:
    DataSavedViewBase();
    virtual ~DataSavedViewBase() {}
 8003ad2:	4770      	bx	lr

08003ad4 <_ZN17DataSavedViewBase11setupScreenEv>:
}

void DataSavedViewBase::setupScreen()
{

}
 8003ad4:	4770      	bx	lr

08003ad6 <_ZN8touchgfx8CallbackI17DataSavedViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003ad6:	4770      	bx	lr

08003ad8 <_ZN8touchgfx8CallbackI17DataSavedViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003ad8:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003ada:	68c2      	ldr	r2, [r0, #12]
 8003adc:	6844      	ldr	r4, [r0, #4]
 8003ade:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003ae0:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003ae2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003ae6:	07d2      	lsls	r2, r2, #31
 8003ae8:	bf48      	it	mi
 8003aea:	5962      	ldrmi	r2, [r4, r5]
 8003aec:	689b      	ldr	r3, [r3, #8]
    }
 8003aee:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003af0:	bf48      	it	mi
 8003af2:	58d3      	ldrmi	r3, [r2, r3]
 8003af4:	4718      	bx	r3

08003af6 <_ZNK8touchgfx8CallbackI17DataSavedViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003af6:	6843      	ldr	r3, [r0, #4]
 8003af8:	b12b      	cbz	r3, 8003b06 <_ZNK8touchgfx8CallbackI17DataSavedViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003afa:	6883      	ldr	r3, [r0, #8]
 8003afc:	b92b      	cbnz	r3, 8003b0a <_ZNK8touchgfx8CallbackI17DataSavedViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003afe:	68c0      	ldr	r0, [r0, #12]
 8003b00:	f000 0001 	and.w	r0, r0, #1
 8003b04:	4770      	bx	lr
 8003b06:	4618      	mov	r0, r3
 8003b08:	4770      	bx	lr
 8003b0a:	2001      	movs	r0, #1
    }
 8003b0c:	4770      	bx	lr

08003b0e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8003b0e:	b510      	push	{r4, lr}
    }
 8003b10:	2108      	movs	r1, #8
    virtual ~TypedText()
 8003b12:	4604      	mov	r4, r0
    }
 8003b14:	f027 fb21 	bl	802b15a <_ZdlPvj>
 8003b18:	4620      	mov	r0, r4
 8003b1a:	bd10      	pop	{r4, pc}

08003b1c <_ZN8touchgfx8CallbackI17DataSavedViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003b1c:	b510      	push	{r4, lr}
 8003b1e:	2110      	movs	r1, #16
 8003b20:	4604      	mov	r4, r0
 8003b22:	f027 fb1a 	bl	802b15a <_ZdlPvj>
 8003b26:	4620      	mov	r0, r4
 8003b28:	bd10      	pop	{r4, pc}

08003b2a <_ZN17DataSavedViewBaseD0Ev>:
 8003b2a:	b510      	push	{r4, lr}
 8003b2c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8003b30:	4604      	mov	r4, r0
 8003b32:	f027 fb12 	bl	802b15a <_ZdlPvj>
 8003b36:	4620      	mov	r0, r4
 8003b38:	bd10      	pop	{r4, pc}

08003b3a <_ZN17DataSavedViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void DataSavedViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &NextButton4)
 8003b3a:	f500 7086 	add.w	r0, r0, #268	; 0x10c
 8003b3e:	4288      	cmp	r0, r1
{
 8003b40:	b508      	push	{r3, lr}
    if (&src == &NextButton4)
 8003b42:	d105      	bne.n	8003b50 <_ZN17DataSavedViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003b44:	f015 fc20 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When NextButton4 clicked change screen to FinishPage
        //Go to FinishPage with block transition
        application().gotoFinishPageScreenBlockTransition();
    }
}
 8003b48:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoFinishPageScreenBlockTransition();
 8003b4c:	f001 b884 	b.w	8004c58 <_ZN23FrontendApplicationBase35gotoFinishPageScreenBlockTransitionEv>
}
 8003b50:	bd08      	pop	{r3, pc}
	...

08003b54 <_ZN8touchgfx6WidgetC1Ev>:
        : x(0), y(0), width(0), height(0)
 8003b54:	2200      	movs	r2, #0
 8003b56:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003b5a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8003b5e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003b62:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003b66:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003b6a:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003b6c:	4a01      	ldr	r2, [pc, #4]	; (8003b74 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8003b6e:	6002      	str	r2, [r0, #0]
 8003b70:	4770      	bx	lr
 8003b72:	bf00      	nop
 8003b74:	0802f80c 	.word	0x0802f80c

08003b78 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8003b78:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8003b7a:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8003b7c:	4604      	mov	r4, r0
 8003b7e:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8003b80:	2100      	movs	r1, #0
 8003b82:	f028 fbbd 	bl	802c300 <memset>
 8003b86:	4620      	mov	r0, r4
 8003b88:	f7ff ffe4 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 8003b8c:	4b06      	ldr	r3, [pc, #24]	; (8003ba8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8003b8e:	6023      	str	r3, [r4, #0]
 8003b90:	882b      	ldrh	r3, [r5, #0]
 8003b92:	84e3      	strh	r3, [r4, #38]	; 0x26
 8003b94:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8003b96:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8003b98:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8003b9c:	4629      	mov	r1, r5
 8003b9e:	f013 fd38 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8003ba2:	4620      	mov	r0, r4
 8003ba4:	bd38      	pop	{r3, r4, r5, pc}
 8003ba6:	bf00      	nop
 8003ba8:	08034a34 	.word	0x08034a34

08003bac <_ZN17DataSavedViewBaseC1Ev>:
DataSavedViewBase::DataSavedViewBase() :
 8003bac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003bb0:	4604      	mov	r4, r0
 8003bb2:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &DataSavedViewBase::buttonCallbackHandler)
 8003bb4:	4626      	mov	r6, r4
 8003bb6:	2500      	movs	r5, #0
 8003bb8:	f016 ff56 	bl	801aa68 <_ZN8touchgfx6ScreenC1Ev>
 8003bbc:	4b67      	ldr	r3, [pc, #412]	; (8003d5c <_ZN17DataSavedViewBaseC1Ev+0x1b0>)
 8003bbe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003bc0:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8003bc4:	2226      	movs	r2, #38	; 0x26
 8003bc6:	4629      	mov	r1, r5
 8003bc8:	4630      	mov	r0, r6
 8003bca:	f028 fb99 	bl	802c300 <memset>
 8003bce:	4630      	mov	r0, r6
 8003bd0:	f7ff ffc0 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 8003bd4:	4b62      	ldr	r3, [pc, #392]	; (8003d60 <_ZN17DataSavedViewBaseC1Ev+0x1b4>)
 8003bd6:	6423      	str	r3, [r4, #64]	; 0x40
 8003bd8:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8003bdc:	23ff      	movs	r3, #255	; 0xff
 8003bde:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8003be2:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8003be6:	f104 0a98 	add.w	sl, r4, #152	; 0x98
 8003bea:	f64f 79ff 	movw	r9, #65535	; 0xffff
        : color(col)
 8003bee:	66a5      	str	r5, [r4, #104]	; 0x68
 8003bf0:	4641      	mov	r1, r8
 8003bf2:	4658      	mov	r0, fp
 8003bf4:	f104 07c4 	add.w	r7, r4, #196	; 0xc4
 8003bf8:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 8003bfc:	f7ff ffbc 	bl	8003b78 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003c00:	4641      	mov	r1, r8
 8003c02:	4650      	mov	r0, sl
 8003c04:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 8003c08:	f7ff ffb6 	bl	8003b78 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003c0c:	4629      	mov	r1, r5
 8003c0e:	2226      	movs	r2, #38	; 0x26
 8003c10:	4638      	mov	r0, r7
 8003c12:	f028 fb75 	bl	802c300 <memset>
 8003c16:	4638      	mov	r0, r7
 8003c18:	f7ff ff9c 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 8003c1c:	4b51      	ldr	r3, [pc, #324]	; (8003d64 <_ZN17DataSavedViewBaseC1Ev+0x1b8>)
 8003c1e:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 8003c22:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
        : typedTextId(id)
 8003c26:	4b50      	ldr	r3, [pc, #320]	; (8003d68 <_ZN17DataSavedViewBaseC1Ev+0x1bc>)
 8003c28:	f8a4 90f0 	strh.w	r9, [r4, #240]	; 0xf0
 8003c2c:	f8c4 20f8 	str.w	r2, [r4, #248]	; 0xf8
 8003c30:	f504 7986 	add.w	r9, r4, #268	; 0x10c
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 8003c34:	f04f 32ff 	mov.w	r2, #4294967295
 8003c38:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8003c3c:	e9c4 2541 	strd	r2, r5, [r4, #260]	; 0x104
        : color(col)
 8003c40:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003c44:	f8a4 50fc 	strh.w	r5, [r4, #252]	; 0xfc
        : x(x), y(y), width(width), height(height)
 8003c48:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8003c4c:	4648      	mov	r0, r9
 8003c4e:	f013 fcb9 	bl	80175c4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003c52:	4a46      	ldr	r2, [pc, #280]	; (8003d6c <_ZN17DataSavedViewBaseC1Ev+0x1c0>)
 8003c54:	e9c4 2452 	strd	r2, r4, [r4, #328]	; 0x148
 8003c58:	4a45      	ldr	r2, [pc, #276]	; (8003d70 <_ZN17DataSavedViewBaseC1Ev+0x1c4>)
        setXY(x, y);
 8003c5a:	4629      	mov	r1, r5
 8003c5c:	e9c4 2554 	strd	r2, r5, [r4, #336]	; 0x150
 8003c60:	4630      	mov	r0, r6
 8003c62:	462a      	mov	r2, r5
 8003c64:	f7ff fe00 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003c68:	4630      	mov	r0, r6
 8003c6a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003c6e:	f7ff fd7b 	bl	8003768 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003c72:	4630      	mov	r0, r6
 8003c74:	21f0      	movs	r1, #240	; 0xf0
 8003c76:	f7ff fd79 	bl	800376c <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 8003c7a:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8003c7e:	66a2      	str	r2, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 8003c80:	4629      	mov	r1, r5
 8003c82:	462a      	mov	r2, r5
 8003c84:	4658      	mov	r0, fp
 8003c86:	f7ff fdef 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 8003c8a:	4641      	mov	r1, r8
 8003c8c:	4658      	mov	r0, fp
 8003c8e:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 8003c92:	f013 fcbe 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image2.setXY(69, 76);
 8003c96:	4650      	mov	r0, sl
 8003c98:	224c      	movs	r2, #76	; 0x4c
 8003c9a:	2145      	movs	r1, #69	; 0x45
 8003c9c:	f7ff fde4 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 8003ca0:	2207      	movs	r2, #7
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_ROUND_MARK_ACTIVE_ID));
 8003ca2:	4641      	mov	r1, r8
 8003ca4:	4650      	mov	r0, sl
 8003ca6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8003caa:	f013 fcb2 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textArea1.setXY(124, 91);
 8003cae:	4638      	mov	r0, r7
 8003cb0:	225b      	movs	r2, #91	; 0x5b
 8003cb2:	217c      	movs	r1, #124	; 0x7c
 8003cb4:	f7ff fdd8 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8003cb8:	4a2e      	ldr	r2, [pc, #184]	; (8003d74 <_ZN17DataSavedViewBaseC1Ev+0x1c8>)
        linespace = space;
 8003cba:	f8a4 50f8 	strh.w	r5, [r4, #248]	; 0xf8
        boundingArea = calculateBoundingArea();
 8003cbe:	ad04      	add	r5, sp, #16
        this->color = color;
 8003cc0:	f8c4 20f4 	str.w	r2, [r4, #244]	; 0xf4
        boundingArea = calculateBoundingArea();
 8003cc4:	4639      	mov	r1, r7
 8003cc6:	4628      	mov	r0, r5
 8003cc8:	f012 fdda 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003ccc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003cd0:	f504 7c80 	add.w	ip, r4, #256	; 0x100
 8003cd4:	4b24      	ldr	r3, [pc, #144]	; (8003d68 <_ZN17DataSavedViewBaseC1Ev+0x1bc>)
 8003cd6:	930c      	str	r3, [sp, #48]	; 0x30
 8003cd8:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8003cdc:	230c      	movs	r3, #12
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EBKP));
 8003cde:	4641      	mov	r1, r8
 8003ce0:	4638      	mov	r0, r7
 8003ce2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8003ce6:	f013 f911 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    NextButton4.setXY(130, 180);
 8003cea:	4648      	mov	r0, r9
 8003cec:	22b4      	movs	r2, #180	; 0xb4
 8003cee:	2182      	movs	r1, #130	; 0x82
 8003cf0:	f7ff fdba 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 8003cf4:	2303      	movs	r3, #3
 8003cf6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003cfa:	2304      	movs	r3, #4
 8003cfc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003d00:	2308      	movs	r3, #8
    NextButton4.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID));
 8003d02:	aa0a      	add	r2, sp, #40	; 0x28
 8003d04:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003d08:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8003d0c:	a909      	add	r1, sp, #36	; 0x24
 8003d0e:	ab0b      	add	r3, sp, #44	; 0x2c
 8003d10:	4648      	mov	r0, r9
 8003d12:	f8cd 8000 	str.w	r8, [sp]
 8003d16:	f013 fbb2 	bl	801747e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8003d1a:	4b17      	ldr	r3, [pc, #92]	; (8003d78 <_ZN17DataSavedViewBaseC1Ev+0x1cc>)
 8003d1c:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
    NextButton4.setAction(buttonCallback);
 8003d20:	f504 73a4 	add.w	r3, r4, #328	; 0x148
 8003d24:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
 8003d28:	1d20      	adds	r0, r4, #4
 8003d2a:	4631      	mov	r1, r6
 8003d2c:	9003      	str	r0, [sp, #12]
 8003d2e:	f00e f8ad 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d32:	9803      	ldr	r0, [sp, #12]
 8003d34:	4659      	mov	r1, fp
 8003d36:	f00e f8a9 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d3a:	9803      	ldr	r0, [sp, #12]
 8003d3c:	4651      	mov	r1, sl
 8003d3e:	f00e f8a5 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d42:	9803      	ldr	r0, [sp, #12]
 8003d44:	4639      	mov	r1, r7
 8003d46:	f00e f8a1 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d4a:	9803      	ldr	r0, [sp, #12]
 8003d4c:	4649      	mov	r1, r9
 8003d4e:	f00e f89d 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003d52:	4620      	mov	r0, r4
 8003d54:	b00f      	add	sp, #60	; 0x3c
 8003d56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d5a:	bf00      	nop
 8003d5c:	0802f89c 	.word	0x0802f89c
 8003d60:	08034854 	.word	0x08034854
 8003d64:	08034794 	.word	0x08034794
 8003d68:	0802f874 	.word	0x0802f874
 8003d6c:	0802f884 	.word	0x0802f884
 8003d70:	08003b3b 	.word	0x08003b3b
 8003d74:	ffff0000 	.word	0xffff0000
 8003d78:	0016000f 	.word	0x0016000f

08003d7c <_ZN18FinishPageViewBaseD1Ev>:

class FinishPageViewBase : public touchgfx::View<FinishPagePresenter>
{
public:
    FinishPageViewBase();
    virtual ~FinishPageViewBase() {}
 8003d7c:	4770      	bx	lr

08003d7e <_ZN18FinishPageViewBase8PowerOffEv>:
     * Virtual Action Handlers
     */
    virtual void PowerOff()
    {
        // Override and implement this function in FinishPage
    }
 8003d7e:	4770      	bx	lr

08003d80 <_ZN18FinishPageViewBase11setupScreenEv>:
}

void FinishPageViewBase::setupScreen()
{

}
 8003d80:	4770      	bx	lr

08003d82 <_ZN8touchgfx8CallbackI18FinishPageViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d82:	4770      	bx	lr

08003d84 <_ZN8touchgfx8CallbackI18FinishPageViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003d84:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003d86:	68c2      	ldr	r2, [r0, #12]
 8003d88:	6844      	ldr	r4, [r0, #4]
 8003d8a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003d8c:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003d8e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003d92:	07d2      	lsls	r2, r2, #31
 8003d94:	bf48      	it	mi
 8003d96:	5962      	ldrmi	r2, [r4, r5]
 8003d98:	689b      	ldr	r3, [r3, #8]
    }
 8003d9a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003d9c:	bf48      	it	mi
 8003d9e:	58d3      	ldrmi	r3, [r2, r3]
 8003da0:	4718      	bx	r3

08003da2 <_ZNK8touchgfx8CallbackI18FinishPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003da2:	6843      	ldr	r3, [r0, #4]
 8003da4:	b12b      	cbz	r3, 8003db2 <_ZNK8touchgfx8CallbackI18FinishPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003da6:	6883      	ldr	r3, [r0, #8]
 8003da8:	b92b      	cbnz	r3, 8003db6 <_ZNK8touchgfx8CallbackI18FinishPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003daa:	68c0      	ldr	r0, [r0, #12]
 8003dac:	f000 0001 	and.w	r0, r0, #1
 8003db0:	4770      	bx	lr
 8003db2:	4618      	mov	r0, r3
 8003db4:	4770      	bx	lr
 8003db6:	2001      	movs	r0, #1
    }
 8003db8:	4770      	bx	lr

08003dba <_ZN8touchgfx8CallbackI18FinishPageViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003dba:	b510      	push	{r4, lr}
 8003dbc:	2110      	movs	r1, #16
 8003dbe:	4604      	mov	r4, r0
 8003dc0:	f027 f9cb 	bl	802b15a <_ZdlPvj>
 8003dc4:	4620      	mov	r0, r4
 8003dc6:	bd10      	pop	{r4, pc}

08003dc8 <_ZN18FinishPageViewBaseD0Ev>:
    virtual ~FinishPageViewBase() {}
 8003dc8:	b510      	push	{r4, lr}
 8003dca:	f44f 71c0 	mov.w	r1, #384	; 0x180
 8003dce:	4604      	mov	r4, r0
 8003dd0:	f027 f9c3 	bl	802b15a <_ZdlPvj>
 8003dd4:	4620      	mov	r0, r4
 8003dd6:	bd10      	pop	{r4, pc}

08003dd8 <_ZN18FinishPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void FinishPageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ReturnToDataList)
 8003dd8:	f100 0298 	add.w	r2, r0, #152	; 0x98
 8003ddc:	4291      	cmp	r1, r2
{
 8003dde:	b510      	push	{r4, lr}
    if (&src == &ReturnToDataList)
 8003de0:	d105      	bne.n	8003dee <_ZN18FinishPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003de2:	f015 fad1 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When TurnOff clicked call virtual function
        //Call PowerOff
        PowerOff();
    }
}
 8003de6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoDataDisplayListScreenSlideTransitionSouth();
 8003dea:	f000 bef5 	b.w	8004bd8 <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionSouthEv>
    else if (&src == &StartNewMeas)
 8003dee:	f100 02e0 	add.w	r2, r0, #224	; 0xe0
 8003df2:	4291      	cmp	r1, r2
 8003df4:	d105      	bne.n	8003e02 <_ZN18FinishPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
 8003df6:	f015 fac7 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003dfa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoInstructionPage1ScreenSlideTransitionSouth();
 8003dfe:	f000 be5b 	b.w	8004ab8 <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionSouthEv>
    else if (&src == &TurnOff)
 8003e02:	f500 7294 	add.w	r2, r0, #296	; 0x128
 8003e06:	4291      	cmp	r1, r2
 8003e08:	d104      	bne.n	8003e14 <_ZN18FinishPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c>
        PowerOff();
 8003e0a:	6803      	ldr	r3, [r0, #0]
}
 8003e0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        PowerOff();
 8003e10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003e12:	4718      	bx	r3
}
 8003e14:	bd10      	pop	{r4, pc}
	...

08003e18 <_ZN18FinishPageViewBaseC1Ev>:
FinishPageViewBase::FinishPageViewBase() :
 8003e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e1c:	4604      	mov	r4, r0
 8003e1e:	b085      	sub	sp, #20
    buttonCallback(this, &FinishPageViewBase::buttonCallbackHandler)
 8003e20:	4625      	mov	r5, r4
 8003e22:	f016 fe21 	bl	801aa68 <_ZN8touchgfx6ScreenC1Ev>
 8003e26:	2600      	movs	r6, #0
 8003e28:	4b66      	ldr	r3, [pc, #408]	; (8003fc4 <_ZN18FinishPageViewBaseC1Ev+0x1ac>)
 8003e2a:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003e2c:	f845 3b40 	str.w	r3, [r5], #64
        : Widget(), alpha(255), color(0)
 8003e30:	4b65      	ldr	r3, [pc, #404]	; (8003fc8 <_ZN18FinishPageViewBaseC1Ev+0x1b0>)
          visible(true)
 8003e32:	6626      	str	r6, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8003e34:	e9c4 3610 	strd	r3, r6, [r4, #64]	; 0x40
 8003e38:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003e3c:	23ff      	movs	r3, #255	; 0xff
 8003e3e:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8003e42:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8003e46:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8003e4a:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8003e4e:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8003e52:	4a5e      	ldr	r2, [pc, #376]	; (8003fcc <_ZN18FinishPageViewBaseC1Ev+0x1b4>)
 8003e54:	66e2      	str	r2, [r4, #108]	; 0x6c
 8003e56:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8003e5a:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003e5e:	a903      	add	r1, sp, #12
 8003e60:	f104 0998 	add.w	r9, r4, #152	; 0x98
 8003e64:	e9c4 6612 	strd	r6, r6, [r4, #72]	; 0x48
 8003e68:	e9c4 6614 	strd	r6, r6, [r4, #80]	; 0x50
 8003e6c:	e9c4 6616 	strd	r6, r6, [r4, #88]	; 0x58
 8003e70:	e9c4 661c 	strd	r6, r6, [r4, #112]	; 0x70
 8003e74:	e9c4 661e 	strd	r6, r6, [r4, #120]	; 0x78
 8003e78:	e9c4 6620 	strd	r6, r6, [r4, #128]	; 0x80
 8003e7c:	e9c4 6622 	strd	r6, r6, [r4, #136]	; 0x88
        : color(col)
 8003e80:	66a6      	str	r6, [r4, #104]	; 0x68
 8003e82:	4650      	mov	r0, sl
 8003e84:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003e88:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8003e8c:	f013 fbc1 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003e90:	4648      	mov	r0, r9
 8003e92:	f013 fd07 	bl	80178a4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003e96:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8003e9a:	4640      	mov	r0, r8
 8003e9c:	f013 fd02 	bl	80178a4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003ea0:	4638      	mov	r0, r7
 8003ea2:	f013 fcff 	bl	80178a4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003ea6:	4b4a      	ldr	r3, [pc, #296]	; (8003fd0 <_ZN18FinishPageViewBaseC1Ev+0x1b8>)
 8003ea8:	e9c4 345c 	strd	r3, r4, [r4, #368]	; 0x170
 8003eac:	4b49      	ldr	r3, [pc, #292]	; (8003fd4 <_ZN18FinishPageViewBaseC1Ev+0x1bc>)
        setXY(x, y);
 8003eae:	4632      	mov	r2, r6
 8003eb0:	e9c4 365e 	strd	r3, r6, [r4, #376]	; 0x178
 8003eb4:	4631      	mov	r1, r6
 8003eb6:	4628      	mov	r0, r5
 8003eb8:	f7ff fcd6 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003ebc:	4628      	mov	r0, r5
 8003ebe:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003ec2:	f7ff fc51 	bl	8003768 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003ec6:	4628      	mov	r0, r5
 8003ec8:	21f0      	movs	r1, #240	; 0xf0
 8003eca:	f7ff fc4f 	bl	800376c <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 8003ece:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003ed2:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 8003ed4:	4632      	mov	r2, r6
 8003ed6:	4631      	mov	r1, r6
 8003ed8:	4650      	mov	r0, sl
 8003eda:	f7ff fcc5 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 8003ede:	a903      	add	r1, sp, #12
 8003ee0:	4650      	mov	r0, sl
 8003ee2:	f8ad 600c 	strh.w	r6, [sp, #12]
 8003ee6:	f013 fb94 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    ReturnToDataList.setXY(45, 42);
 8003eea:	4648      	mov	r0, r9
 8003eec:	222a      	movs	r2, #42	; 0x2a
 8003eee:	212d      	movs	r1, #45	; 0x2d
 8003ef0:	f7ff fcba 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 8003ef4:	f04f 0b06 	mov.w	fp, #6
 8003ef8:	2305      	movs	r3, #5
    ReturnToDataList.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_PRESSED_ID));
 8003efa:	a902      	add	r1, sp, #8
 8003efc:	aa03      	add	r2, sp, #12
 8003efe:	4648      	mov	r0, r9
 8003f00:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003f04:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003f08:	f013 f85a 	bl	8016fc0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003f0c:	220b      	movs	r2, #11
 8003f0e:	f8a4 20d0 	strh.w	r2, [r4, #208]	; 0xd0
        updateTextPosition();
 8003f12:	4648      	mov	r0, r9
 8003f14:	f7ff fcb6 	bl	8003884 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8003f18:	f04f 36ff 	mov.w	r6, #4294967295
    ReturnToDataList.setAction(buttonCallback);
 8003f1c:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8003f20:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    StartNewMeas.setXY(45, 102);
 8003f24:	4640      	mov	r0, r8
        colorPressed = col;
 8003f26:	e9c4 6635 	strd	r6, r6, [r4, #212]	; 0xd4
 8003f2a:	2266      	movs	r2, #102	; 0x66
 8003f2c:	212d      	movs	r1, #45	; 0x2d
    ReturnToDataList.setAction(buttonCallback);
 8003f2e:	9301      	str	r3, [sp, #4]
    StartNewMeas.setXY(45, 102);
 8003f30:	f7ff fc9a 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 8003f34:	2305      	movs	r3, #5
    StartNewMeas.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_PRESSED_ID));
 8003f36:	a902      	add	r1, sp, #8
 8003f38:	aa03      	add	r2, sp, #12
 8003f3a:	4640      	mov	r0, r8
 8003f3c:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003f40:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003f44:	f013 f83c 	bl	8016fc0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003f48:	220a      	movs	r2, #10
 8003f4a:	f8a4 2118 	strh.w	r2, [r4, #280]	; 0x118
        updateTextPosition();
 8003f4e:	4640      	mov	r0, r8
 8003f50:	f7ff fc98 	bl	8003884 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003f54:	9b01      	ldr	r3, [sp, #4]
 8003f56:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
    TurnOff.setXY(45, 162);
 8003f5a:	4638      	mov	r0, r7
        colorPressed = col;
 8003f5c:	e9c4 6647 	strd	r6, r6, [r4, #284]	; 0x11c
 8003f60:	22a2      	movs	r2, #162	; 0xa2
 8003f62:	212d      	movs	r1, #45	; 0x2d
 8003f64:	f7ff fc80 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    TurnOff.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_MEDIUM_PRESSED_ID));
 8003f68:	aa03      	add	r2, sp, #12
 8003f6a:	a902      	add	r1, sp, #8
 8003f6c:	2305      	movs	r3, #5
 8003f6e:	4638      	mov	r0, r7
 8003f70:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003f74:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003f78:	f013 f822 	bl	8016fc0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003f7c:	2309      	movs	r3, #9
 8003f7e:	f8a4 3160 	strh.w	r3, [r4, #352]	; 0x160
        updateTextPosition();
 8003f82:	4638      	mov	r0, r7
 8003f84:	f7ff fc7e 	bl	8003884 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003f88:	9b01      	ldr	r3, [sp, #4]
 8003f8a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 8003f8e:	1d20      	adds	r0, r4, #4
 8003f90:	4629      	mov	r1, r5
        colorPressed = col;
 8003f92:	e9c4 6659 	strd	r6, r6, [r4, #356]	; 0x164
 8003f96:	9001      	str	r0, [sp, #4]
 8003f98:	f00d ff78 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f9c:	9801      	ldr	r0, [sp, #4]
 8003f9e:	4651      	mov	r1, sl
 8003fa0:	f00d ff74 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003fa4:	9801      	ldr	r0, [sp, #4]
 8003fa6:	4649      	mov	r1, r9
 8003fa8:	f00d ff70 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003fac:	9801      	ldr	r0, [sp, #4]
 8003fae:	4641      	mov	r1, r8
 8003fb0:	f00d ff6c 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003fb4:	9801      	ldr	r0, [sp, #4]
 8003fb6:	4639      	mov	r1, r7
 8003fb8:	f00d ff68 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003fbc:	4620      	mov	r0, r4
 8003fbe:	b005      	add	sp, #20
 8003fc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003fc4:	0802f8e8 	.word	0x0802f8e8
 8003fc8:	08034854 	.word	0x08034854
 8003fcc:	08034a34 	.word	0x08034a34
 8003fd0:	0802f8d0 	.word	0x0802f8d0
 8003fd4:	08003dd9 	.word	0x08003dd9

08003fd8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003fd8:	4770      	bx	lr

08003fda <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8003fda:	4770      	bx	lr

08003fdc <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003fdc:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8003fe0:	6808      	ldr	r0, [r1, #0]
 8003fe2:	6849      	ldr	r1, [r1, #4]
 8003fe4:	c303      	stmia	r3!, {r0, r1}
    }
 8003fe6:	4770      	bx	lr

08003fe8 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003fe8:	4770      	bx	lr

08003fea <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003fea:	4770      	bx	lr

08003fec <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003fec:	6041      	str	r1, [r0, #4]
    }
 8003fee:	4770      	bx	lr

08003ff0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003ff0:	4770      	bx	lr
	...

08003ff4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003ff4:	4b06      	ldr	r3, [pc, #24]	; (8004010 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003ff6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8003ffa:	2300      	movs	r3, #0
 8003ffc:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// StartPage

void FrontendApplicationBase::gotoStartPageScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoStartPageScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004000:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004004:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004008:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoStartPageScreenNoTransition();
    }
 800400c:	4770      	bx	lr
 800400e:	bf00      	nop
 8004010:	08004891 	.word	0x08004891

08004014 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004014:	2301      	movs	r3, #1
 8004016:	7203      	strb	r3, [r0, #8]
    }
 8004018:	4770      	bx	lr

0800401a <_ZN8touchgfx15BlockTransition8tearDownEv>:
        }
    }

    virtual void tearDown()
    {
    }
 800401a:	4770      	bx	lr

0800401c <_ZN8touchgfx15BlockTransition4initEv>:

    virtual void init()
    {
        Transition::init();
    }
 800401c:	4770      	bx	lr

0800401e <_ZN8touchgfx15BlockTransition10invalidateEv>:
     * Block transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800401e:	4770      	bx	lr

08004020 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE0EEERNS_8DrawableEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004020:	4770      	bx	lr

08004022 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE1EEERNS_8DrawableEvvED1Ev>:
 8004022:	4770      	bx	lr

08004024 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED1Ev>:
 8004024:	4770      	bx	lr

08004026 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvED1Ev>:
 8004026:	4770      	bx	lr

08004028 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE16tickMoveDrawableERNS_8DrawableE>:
    /**
     * Moves the Drawable.
     *
     * @param [in] d The Drawable to move.
     */
    virtual void tickMoveDrawable(Drawable& d)
 8004028:	4603      	mov	r3, r0
 800402a:	b410      	push	{r4}
    {
        if (&d == snapshotPtr)
 800402c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800402e:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 8004030:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 8004032:	d008      	beq.n	8004046 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE16tickMoveDrawableERNS_8DrawableE+0x1e>
        case WEST:
            d.moveRelative(calculatedValue, 0);
            break;
        case NORTH:
        case SOUTH:
            d.moveRelative(0, calculatedValue);
 8004034:	680a      	ldr	r2, [r1, #0]
 8004036:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8004038:	f9b3 2050 	ldrsh.w	r2, [r3, #80]	; 0x50
 800403c:	2100      	movs	r1, #0
 800403e:	4623      	mov	r3, r4
        default:
            // Special case, do not move. Class NoTransition can be used instead.
            done = true;
            break;
        }
    }
 8004040:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(0, calculatedValue);
 8004044:	4718      	bx	r3
    }
 8004046:	f85d 4b04 	ldr.w	r4, [sp], #4
 800404a:	4770      	bx	lr

0800404c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE16tickMoveDrawableERNS_8DrawableE>:
    virtual void tickMoveDrawable(Drawable& d)
 800404c:	4603      	mov	r3, r0
 800404e:	b410      	push	{r4}
        if (&d == snapshotPtr)
 8004050:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004052:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 8004054:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 8004056:	d008      	beq.n	800406a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE16tickMoveDrawableERNS_8DrawableE+0x1e>
            d.moveRelative(0, calculatedValue);
 8004058:	680a      	ldr	r2, [r1, #0]
 800405a:	6d54      	ldr	r4, [r2, #84]	; 0x54
 800405c:	f9b3 2050 	ldrsh.w	r2, [r3, #80]	; 0x50
 8004060:	2100      	movs	r1, #0
 8004062:	4623      	mov	r3, r4
    }
 8004064:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(0, calculatedValue);
 8004068:	4718      	bx	r3
    }
 800406a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800406e:	4770      	bx	lr

08004070 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE>:
    virtual void tickMoveDrawable(Drawable& d)
 8004070:	4603      	mov	r3, r0
 8004072:	b410      	push	{r4}
        if (&d == snapshotPtr)
 8004074:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004076:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 8004078:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 800407a:	d008      	beq.n	800408e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE+0x1e>
            d.moveRelative(calculatedValue, 0);
 800407c:	680a      	ldr	r2, [r1, #0]
 800407e:	f9b3 1050 	ldrsh.w	r1, [r3, #80]	; 0x50
 8004082:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8004084:	2200      	movs	r2, #0
 8004086:	4623      	mov	r3, r4
    }
 8004088:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(calculatedValue, 0);
 800408c:	4718      	bx	r3
    }
 800408e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004092:	4770      	bx	lr

08004094 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE>:
    virtual void tickMoveDrawable(Drawable& d)
 8004094:	4603      	mov	r3, r0
 8004096:	b410      	push	{r4}
        if (&d == snapshotPtr)
 8004098:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800409a:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 800409c:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 800409e:	d008      	beq.n	80040b2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE+0x1e>
            d.moveRelative(calculatedValue, 0);
 80040a0:	680a      	ldr	r2, [r1, #0]
 80040a2:	f9b3 1050 	ldrsh.w	r1, [r3, #80]	; 0x50
 80040a6:	6d54      	ldr	r4, [r2, #84]	; 0x54
 80040a8:	2200      	movs	r2, #0
 80040aa:	4623      	mov	r3, r4
    }
 80040ac:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(calculatedValue, 0);
 80040b0:	4718      	bx	r3
    }
 80040b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80040b6:	4770      	bx	lr

080040b8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EED1Ev>:
class SlideTransition : public Transition
 80040b8:	4770      	bx	lr

080040ba <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EED1Ev>:
 80040ba:	4770      	bx	lr

080040bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
 80040bc:	4770      	bx	lr

080040be <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 80040be:	4770      	bx	lr

080040c0 <_ZN8touchgfx15BlockTransitionD1Ev>:
class BlockTransition : public Transition
 80040c0:	4770      	bx	lr

080040c2 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80040c2:	4770      	bx	lr

080040c4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80040c4:	4770      	bx	lr
	...

080040c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(0, -HAL::DISPLAY_HEIGHT);
 80040c8:	4b04      	ldr	r3, [pc, #16]	; (80040dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE16initMoveDrawableERNS_8DrawableE+0x14>)
 80040ca:	881a      	ldrh	r2, [r3, #0]
 80040cc:	680b      	ldr	r3, [r1, #0]
 80040ce:	4252      	negs	r2, r2
    virtual void initMoveDrawable(Drawable& d)
 80040d0:	4608      	mov	r0, r1
            d.moveRelative(0, -HAL::DISPLAY_HEIGHT);
 80040d2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80040d4:	b212      	sxth	r2, r2
 80040d6:	2100      	movs	r1, #0
 80040d8:	4718      	bx	r3
 80040da:	bf00      	nop
 80040dc:	2001e1b6 	.word	0x2001e1b6

080040e0 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE0EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 80040e0:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80040e2:	68c2      	ldr	r2, [r0, #12]
 80040e4:	6844      	ldr	r4, [r0, #4]
 80040e6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80040e8:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80040ea:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80040ee:	07d2      	lsls	r2, r2, #31
 80040f0:	bf48      	it	mi
 80040f2:	5962      	ldrmi	r2, [r4, r5]
 80040f4:	689b      	ldr	r3, [r3, #8]
    }
 80040f6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80040f8:	bf48      	it	mi
 80040fa:	58d3      	ldrmi	r3, [r2, r3]
 80040fc:	4718      	bx	r3

080040fe <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE0EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80040fe:	6843      	ldr	r3, [r0, #4]
 8004100:	b12b      	cbz	r3, 800410e <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE0EEERNS_8DrawableEvvE7isValidEv+0x10>
 8004102:	6883      	ldr	r3, [r0, #8]
 8004104:	b92b      	cbnz	r3, 8004112 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE0EEERNS_8DrawableEvvE7isValidEv+0x14>
 8004106:	68c0      	ldr	r0, [r0, #12]
 8004108:	f000 0001 	and.w	r0, r0, #1
 800410c:	4770      	bx	lr
 800410e:	4618      	mov	r0, r3
 8004110:	4770      	bx	lr
 8004112:	2001      	movs	r0, #1
    }
 8004114:	4770      	bx	lr
	...

08004118 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8004118:	680b      	ldr	r3, [r1, #0]
 800411a:	4a03      	ldr	r2, [pc, #12]	; (8004128 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE16initMoveDrawableERNS_8DrawableE+0x10>)
 800411c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800411e:	f9b2 2000 	ldrsh.w	r2, [r2]
    virtual void initMoveDrawable(Drawable& d)
 8004122:	4608      	mov	r0, r1
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8004124:	2100      	movs	r1, #0
 8004126:	4718      	bx	r3
 8004128:	2001e1b6 	.word	0x2001e1b6

0800412c <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE1EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 800412c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800412e:	68c2      	ldr	r2, [r0, #12]
 8004130:	6844      	ldr	r4, [r0, #4]
 8004132:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004134:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8004136:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800413a:	07d2      	lsls	r2, r2, #31
 800413c:	bf48      	it	mi
 800413e:	5962      	ldrmi	r2, [r4, r5]
 8004140:	689b      	ldr	r3, [r3, #8]
    }
 8004142:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8004144:	bf48      	it	mi
 8004146:	58d3      	ldrmi	r3, [r2, r3]
 8004148:	4718      	bx	r3

0800414a <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE1EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800414a:	6843      	ldr	r3, [r0, #4]
 800414c:	b12b      	cbz	r3, 800415a <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE1EEERNS_8DrawableEvvE7isValidEv+0x10>
 800414e:	6883      	ldr	r3, [r0, #8]
 8004150:	b92b      	cbnz	r3, 800415e <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE1EEERNS_8DrawableEvvE7isValidEv+0x14>
 8004152:	68c0      	ldr	r0, [r0, #12]
 8004154:	f000 0001 	and.w	r0, r0, #1
 8004158:	4770      	bx	lr
 800415a:	4618      	mov	r0, r3
 800415c:	4770      	bx	lr
 800415e:	2001      	movs	r0, #1
    }
 8004160:	4770      	bx	lr
	...

08004164 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(-HAL::DISPLAY_WIDTH, 0);
 8004164:	4b04      	ldr	r3, [pc, #16]	; (8004178 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x14>)
    virtual void initMoveDrawable(Drawable& d)
 8004166:	4608      	mov	r0, r1
            d.moveRelative(-HAL::DISPLAY_WIDTH, 0);
 8004168:	8819      	ldrh	r1, [r3, #0]
 800416a:	6803      	ldr	r3, [r0, #0]
 800416c:	4249      	negs	r1, r1
 800416e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004170:	2200      	movs	r2, #0
 8004172:	b209      	sxth	r1, r1
 8004174:	4718      	bx	r3
 8004176:	bf00      	nop
 8004178:	2001e1b4 	.word	0x2001e1b4

0800417c <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 800417c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800417e:	68c2      	ldr	r2, [r0, #12]
 8004180:	6844      	ldr	r4, [r0, #4]
 8004182:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004184:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8004186:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800418a:	07d2      	lsls	r2, r2, #31
 800418c:	bf48      	it	mi
 800418e:	5962      	ldrmi	r2, [r4, r5]
 8004190:	689b      	ldr	r3, [r3, #8]
    }
 8004192:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8004194:	bf48      	it	mi
 8004196:	58d3      	ldrmi	r3, [r2, r3]
 8004198:	4718      	bx	r3

0800419a <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800419a:	6843      	ldr	r3, [r0, #4]
 800419c:	b12b      	cbz	r3, 80041aa <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv+0x10>
 800419e:	6883      	ldr	r3, [r0, #8]
 80041a0:	b92b      	cbnz	r3, 80041ae <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv+0x14>
 80041a2:	68c0      	ldr	r0, [r0, #12]
 80041a4:	f000 0001 	and.w	r0, r0, #1
 80041a8:	4770      	bx	lr
 80041aa:	4618      	mov	r0, r3
 80041ac:	4770      	bx	lr
 80041ae:	2001      	movs	r0, #1
    }
 80041b0:	4770      	bx	lr
	...

080041b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 80041b4:	680b      	ldr	r3, [r1, #0]
    virtual void initMoveDrawable(Drawable& d)
 80041b6:	4608      	mov	r0, r1
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 80041b8:	4902      	ldr	r1, [pc, #8]	; (80041c4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x10>)
 80041ba:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80041bc:	f9b1 1000 	ldrsh.w	r1, [r1]
 80041c0:	2200      	movs	r2, #0
 80041c2:	4718      	bx	r3
 80041c4:	2001e1b4 	.word	0x2001e1b4

080041c8 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 80041c8:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80041ca:	68c2      	ldr	r2, [r0, #12]
 80041cc:	6844      	ldr	r4, [r0, #4]
 80041ce:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80041d0:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80041d2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80041d6:	07d2      	lsls	r2, r2, #31
 80041d8:	bf48      	it	mi
 80041da:	5962      	ldrmi	r2, [r4, r5]
 80041dc:	689b      	ldr	r3, [r3, #8]
    }
 80041de:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80041e0:	bf48      	it	mi
 80041e2:	58d3      	ldrmi	r3, [r2, r3]
 80041e4:	4718      	bx	r3

080041e6 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80041e6:	6843      	ldr	r3, [r0, #4]
 80041e8:	b12b      	cbz	r3, 80041f6 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x10>
 80041ea:	6883      	ldr	r3, [r0, #8]
 80041ec:	b92b      	cbnz	r3, 80041fa <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x14>
 80041ee:	68c0      	ldr	r0, [r0, #12]
 80041f0:	f000 0001 	and.w	r0, r0, #1
 80041f4:	4770      	bx	lr
 80041f6:	4618      	mov	r0, r3
 80041f8:	4770      	bx	lr
 80041fa:	2001      	movs	r0, #1
    }
 80041fc:	4770      	bx	lr

080041fe <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80041fe:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8004200:	68c2      	ldr	r2, [r0, #12]
 8004202:	6841      	ldr	r1, [r0, #4]
 8004204:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8004206:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8004208:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800420c:	07d2      	lsls	r2, r2, #31
 800420e:	bf48      	it	mi
 8004210:	590a      	ldrmi	r2, [r1, r4]
 8004212:	689b      	ldr	r3, [r3, #8]
    }
 8004214:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8004218:	bf48      	it	mi
 800421a:	58d3      	ldrmi	r3, [r2, r3]
 800421c:	4718      	bx	r3

0800421e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 800421e:	6843      	ldr	r3, [r0, #4]
 8004220:	b12b      	cbz	r3, 800422e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8004222:	6883      	ldr	r3, [r0, #8]
 8004224:	b92b      	cbnz	r3, 8004232 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8004226:	68c0      	ldr	r0, [r0, #12]
 8004228:	f000 0001 	and.w	r0, r0, #1
 800422c:	4770      	bx	lr
 800422e:	4618      	mov	r0, r3
 8004230:	4770      	bx	lr
 8004232:	2001      	movs	r0, #1
    }
 8004234:	4770      	bx	lr

08004236 <_ZN8touchgfx15BlockTransitionD0Ev>:
 8004236:	b510      	push	{r4, lr}
 8004238:	2114      	movs	r1, #20
 800423a:	4604      	mov	r4, r0
 800423c:	f026 ff8d 	bl	802b15a <_ZdlPvj>
 8004240:	4620      	mov	r0, r4
 8004242:	bd10      	pop	{r4, pc}

08004244 <_ZN8touchgfx12NoTransitionD0Ev>:
 8004244:	b510      	push	{r4, lr}
 8004246:	210c      	movs	r1, #12
 8004248:	4604      	mov	r4, r0
 800424a:	f026 ff86 	bl	802b15a <_ZdlPvj>
 800424e:	4620      	mov	r0, r4
 8004250:	bd10      	pop	{r4, pc}

08004252 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004252:	b510      	push	{r4, lr}
 8004254:	2110      	movs	r1, #16
 8004256:	4604      	mov	r4, r0
 8004258:	f026 ff7f 	bl	802b15a <_ZdlPvj>
 800425c:	4620      	mov	r0, r4
 800425e:	bd10      	pop	{r4, pc}

08004260 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8004260:	b510      	push	{r4, lr}
 8004262:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004266:	4604      	mov	r4, r0
 8004268:	f026 ff77 	bl	802b15a <_ZdlPvj>
 800426c:	4620      	mov	r0, r4
 800426e:	bd10      	pop	{r4, pc}

08004270 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EED0Ev>:
class SlideTransition : public Transition
 8004270:	b510      	push	{r4, lr}
 8004272:	2154      	movs	r1, #84	; 0x54
 8004274:	4604      	mov	r4, r0
 8004276:	f026 ff70 	bl	802b15a <_ZdlPvj>
 800427a:	4620      	mov	r0, r4
 800427c:	bd10      	pop	{r4, pc}

0800427e <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE0EEERNS_8DrawableEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800427e:	b510      	push	{r4, lr}
 8004280:	2110      	movs	r1, #16
 8004282:	4604      	mov	r4, r0
 8004284:	f026 ff69 	bl	802b15a <_ZdlPvj>
 8004288:	4620      	mov	r0, r4
 800428a:	bd10      	pop	{r4, pc}

0800428c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EED0Ev>:
 800428c:	b510      	push	{r4, lr}
 800428e:	2154      	movs	r1, #84	; 0x54
 8004290:	4604      	mov	r4, r0
 8004292:	f026 ff62 	bl	802b15a <_ZdlPvj>
 8004296:	4620      	mov	r0, r4
 8004298:	bd10      	pop	{r4, pc}

0800429a <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE1EEERNS_8DrawableEvvED0Ev>:
 800429a:	b510      	push	{r4, lr}
 800429c:	2110      	movs	r1, #16
 800429e:	4604      	mov	r4, r0
 80042a0:	f026 ff5b 	bl	802b15a <_ZdlPvj>
 80042a4:	4620      	mov	r0, r4
 80042a6:	bd10      	pop	{r4, pc}

080042a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
 80042a8:	b510      	push	{r4, lr}
 80042aa:	2154      	movs	r1, #84	; 0x54
 80042ac:	4604      	mov	r4, r0
 80042ae:	f026 ff54 	bl	802b15a <_ZdlPvj>
 80042b2:	4620      	mov	r0, r4
 80042b4:	bd10      	pop	{r4, pc}

080042b6 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvED0Ev>:
 80042b6:	b510      	push	{r4, lr}
 80042b8:	2110      	movs	r1, #16
 80042ba:	4604      	mov	r4, r0
 80042bc:	f026 ff4d 	bl	802b15a <_ZdlPvj>
 80042c0:	4620      	mov	r0, r4
 80042c2:	bd10      	pop	{r4, pc}

080042c4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 80042c4:	b510      	push	{r4, lr}
 80042c6:	2154      	movs	r1, #84	; 0x54
 80042c8:	4604      	mov	r4, r0
 80042ca:	f026 ff46 	bl	802b15a <_ZdlPvj>
 80042ce:	4620      	mov	r0, r4
 80042d0:	bd10      	pop	{r4, pc}

080042d2 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED0Ev>:
 80042d2:	b510      	push	{r4, lr}
 80042d4:	2110      	movs	r1, #16
 80042d6:	4604      	mov	r4, r0
 80042d8:	f026 ff3f 	bl	802b15a <_ZdlPvj>
 80042dc:	4620      	mov	r0, r4
 80042de:	bd10      	pop	{r4, pc}

080042e0 <_ZN8touchgfx15BlockTransition15handleTickEventEv>:
    virtual void handleTickEvent()
 80042e0:	b570      	push	{r4, r5, r6, lr}
 80042e2:	4604      	mov	r4, r0
 80042e4:	b0b2      	sub	sp, #200	; 0xc8
        const int indeces[blocks] = { 20, 11, 47, 14, 10, 0, 18, 28, 13, 6, 2, 41,
 80042e6:	491e      	ldr	r1, [pc, #120]	; (8004360 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x80>)
 80042e8:	22c0      	movs	r2, #192	; 0xc0
 80042ea:	a802      	add	r0, sp, #8
 80042ec:	f027 fffa 	bl	802c2e4 <memcpy>
        if (animationCounter == 0 && HAL::USE_DOUBLE_BUFFERING)
 80042f0:	7c23      	ldrb	r3, [r4, #16]
 80042f2:	bb6b      	cbnz	r3, 8004350 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x70>
 80042f4:	4b1b      	ldr	r3, [pc, #108]	; (8004364 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x84>)
 80042f6:	781b      	ldrb	r3, [r3, #0]
 80042f8:	bb33      	cbnz	r3, 8004348 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x68>
    virtual void handleTickEvent()
 80042fa:	2503      	movs	r5, #3
            while (blocks_per_tick-- > 0 && animationCounter < blocks)
 80042fc:	3d01      	subs	r5, #1
 80042fe:	d02c      	beq.n	800435a <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x7a>
 8004300:	7c23      	ldrb	r3, [r4, #16]
 8004302:	2b2f      	cmp	r3, #47	; 0x2f
 8004304:	d829      	bhi.n	800435a <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x7a>
                const int index = indeces[animationCounter];
 8004306:	aa32      	add	r2, sp, #200	; 0xc8
 8004308:	eb02 0383 	add.w	r3, r2, r3, lsl #2
                const int16_t x = (index % blocksHorizontal) * blockWidth;
 800430c:	89e6      	ldrh	r6, [r4, #14]
                const int index = indeces[animationCounter];
 800430e:	f853 3cc0 	ldr.w	r3, [r3, #-192]
                const int16_t x = (index % blocksHorizontal) * blockWidth;
 8004312:	8960      	ldrh	r0, [r4, #10]
 8004314:	fb93 f2f6 	sdiv	r2, r3, r6
 8004318:	fb06 3312 	mls	r3, r6, r2, r3
 800431c:	fb13 f300 	smulbb	r3, r3, r0
        : x(x), y(y), width(width), height(height)
 8004320:	f8ad 0004 	strh.w	r0, [sp, #4]
                screenContainer->invalidateRect(invRect);
 8004324:	6860      	ldr	r0, [r4, #4]
                const int16_t y = (index / blocksHorizontal) * blockHeight;
 8004326:	89a1      	ldrh	r1, [r4, #12]
 8004328:	f8ad 3000 	strh.w	r3, [sp]
                screenContainer->invalidateRect(invRect);
 800432c:	6803      	ldr	r3, [r0, #0]
 800432e:	f8ad 1006 	strh.w	r1, [sp, #6]
                const int16_t y = (index / blocksHorizontal) * blockHeight;
 8004332:	fb12 f201 	smulbb	r2, r2, r1
                screenContainer->invalidateRect(invRect);
 8004336:	691b      	ldr	r3, [r3, #16]
 8004338:	f8ad 2002 	strh.w	r2, [sp, #2]
 800433c:	4669      	mov	r1, sp
 800433e:	4798      	blx	r3
                animationCounter++;
 8004340:	7c23      	ldrb	r3, [r4, #16]
 8004342:	3301      	adds	r3, #1
 8004344:	7423      	strb	r3, [r4, #16]
            while (blocks_per_tick-- > 0 && animationCounter < blocks)
 8004346:	e7d9      	b.n	80042fc <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004348:	f015 f81e 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 800434c:	f015 f876 	bl	801943c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
        if (animationCounter < blocks)
 8004350:	7c23      	ldrb	r3, [r4, #16]
 8004352:	2b2f      	cmp	r3, #47	; 0x2f
 8004354:	d9d1      	bls.n	80042fa <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1a>
            done = true;
 8004356:	2301      	movs	r3, #1
 8004358:	7223      	strb	r3, [r4, #8]
    }
 800435a:	b032      	add	sp, #200	; 0xc8
 800435c:	bd70      	pop	{r4, r5, r6, pc}
 800435e:	bf00      	nop
 8004360:	0802ec68 	.word	0x0802ec68
 8004364:	2001e1be 	.word	0x2001e1be

08004368 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8004368:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 800436a:	f015 f80d 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800436e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 8004372:	f015 bc41 	b.w	8019bf8 <_ZN8touchgfx11Application10invalidateEv>
	...

08004378 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8004378:	4b05      	ldr	r3, [pc, #20]	; (8004390 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x18>)
 800437a:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 800437c:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800437e:	b12b      	cbz	r3, 800438c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x14>
 8004380:	6840      	ldr	r0, [r0, #4]
 8004382:	b118      	cbz	r0, 800438c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 8004384:	6803      	ldr	r3, [r0, #0]
 8004386:	310c      	adds	r1, #12
 8004388:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800438a:	4718      	bx	r3
    }
 800438c:	4770      	bx	lr
 800438e:	bf00      	nop
 8004390:	2001e1bf 	.word	0x2001e1bf

08004394 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8004394:	4b05      	ldr	r3, [pc, #20]	; (80043ac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv+0x18>)
 8004396:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 8004398:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800439a:	b12b      	cbz	r3, 80043a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv+0x14>
 800439c:	6840      	ldr	r0, [r0, #4]
 800439e:	b118      	cbz	r0, 80043a8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 80043a0:	6803      	ldr	r3, [r0, #0]
 80043a2:	310c      	adds	r1, #12
 80043a4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80043a6:	4718      	bx	r3
    }
 80043a8:	4770      	bx	lr
 80043aa:	bf00      	nop
 80043ac:	2001e1bf 	.word	0x2001e1bf

080043b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80043b0:	4b05      	ldr	r3, [pc, #20]	; (80043c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
 80043b2:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80043b4:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80043b6:	b12b      	cbz	r3, 80043c4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
 80043b8:	6840      	ldr	r0, [r0, #4]
 80043ba:	b118      	cbz	r0, 80043c4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 80043bc:	6803      	ldr	r3, [r0, #0]
 80043be:	310c      	adds	r1, #12
 80043c0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80043c2:	4718      	bx	r3
    }
 80043c4:	4770      	bx	lr
 80043c6:	bf00      	nop
 80043c8:	2001e1bf 	.word	0x2001e1bf

080043cc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80043cc:	4b05      	ldr	r3, [pc, #20]	; (80043e4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 80043ce:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80043d0:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80043d2:	b12b      	cbz	r3, 80043e0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 80043d4:	6840      	ldr	r0, [r0, #4]
 80043d6:	b118      	cbz	r0, 80043e0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 80043d8:	6803      	ldr	r3, [r0, #0]
 80043da:	310c      	adds	r1, #12
 80043dc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80043de:	4718      	bx	r3
    }
 80043e0:	4770      	bx	lr
 80043e2:	bf00      	nop
 80043e4:	2001e1bf 	.word	0x2001e1bf

080043e8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 80043e8:	4b1f      	ldr	r3, [pc, #124]	; (8004468 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x80>)
 80043ea:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 80043ec:	b510      	push	{r4, lr}
 80043ee:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 80043f0:	b913      	cbnz	r3, 80043f8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x10>
            done = true;
 80043f2:	2301      	movs	r3, #1
 80043f4:	7203      	strb	r3, [r0, #8]
    }
 80043f6:	bd10      	pop	{r4, pc}
        animationCounter++;
 80043f8:	f890 004d 	ldrb.w	r0, [r0, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 80043fc:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
        animationCounter++;
 8004400:	3001      	adds	r0, #1
 8004402:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 8004404:	4298      	cmp	r0, r3
        animationCounter++;
 8004406:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 800440a:	d824      	bhi.n	8004456 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x6e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800440c:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 8004410:	2100      	movs	r1, #0
 8004412:	f016 fcdb 	bl	801adcc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8004416:	f010 0201 	ands.w	r2, r0, #1
 800441a:	b283      	uxth	r3, r0
 800441c:	d021      	beq.n	8004462 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x7a>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800441e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004422:	2800      	cmp	r0, #0
 8004424:	bfd8      	it	le
 8004426:	460a      	movle	r2, r1
 8004428:	4413      	add	r3, r2
 800442a:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
            calculatedValue -= snapshot.getX();
 800442e:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 8004432:	8a23      	ldrh	r3, [r4, #16]
 8004434:	1ac9      	subs	r1, r1, r3
 8004436:	b209      	sxth	r1, r1
 8004438:	f8a4 1050 	strh.w	r1, [r4, #80]	; 0x50
            snapshot.moveRelative(calculatedValue, 0);
 800443c:	f104 000c 	add.w	r0, r4, #12
 8004440:	2200      	movs	r2, #0
 8004442:	f016 f81f 	bl	801a484 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 8004446:	6860      	ldr	r0, [r4, #4]
 8004448:	6803      	ldr	r3, [r0, #0]
 800444a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800444e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    }
 8004450:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 8004454:	4718      	bx	r3
            done = true;
 8004456:	2301      	movs	r3, #1
 8004458:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800445a:	2300      	movs	r3, #0
 800445c:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
            return;
 8004460:	e7c9      	b.n	80043f6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004462:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 8004466:	e7e2      	b.n	800442e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x46>
 8004468:	2001e1bf 	.word	0x2001e1bf

0800446c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 800446c:	4b1f      	ldr	r3, [pc, #124]	; (80044ec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>)
 800446e:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 8004470:	b510      	push	{r4, lr}
 8004472:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 8004474:	b913      	cbnz	r3, 800447c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x10>
            done = true;
 8004476:	2301      	movs	r3, #1
 8004478:	7203      	strb	r3, [r0, #8]
    }
 800447a:	bd10      	pop	{r4, pc}
        animationCounter++;
 800447c:	f890 004d 	ldrb.w	r0, [r0, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 8004480:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
        animationCounter++;
 8004484:	3001      	adds	r0, #1
 8004486:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 8004488:	4298      	cmp	r0, r3
        animationCounter++;
 800448a:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 800448e:	d824      	bhi.n	80044da <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x6e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004490:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 8004494:	2100      	movs	r1, #0
 8004496:	f016 fc99 	bl	801adcc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800449a:	f010 0201 	ands.w	r2, r0, #1
 800449e:	b283      	uxth	r3, r0
 80044a0:	d021      	beq.n	80044e6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x7a>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80044a2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80044a6:	2800      	cmp	r0, #0
 80044a8:	bfd8      	it	le
 80044aa:	460a      	movle	r2, r1
 80044ac:	4413      	add	r3, r2
 80044ae:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
            calculatedValue -= snapshot.getX();
 80044b2:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 80044b6:	8a23      	ldrh	r3, [r4, #16]
 80044b8:	1ac9      	subs	r1, r1, r3
 80044ba:	b209      	sxth	r1, r1
 80044bc:	f8a4 1050 	strh.w	r1, [r4, #80]	; 0x50
            snapshot.moveRelative(calculatedValue, 0);
 80044c0:	f104 000c 	add.w	r0, r4, #12
 80044c4:	2200      	movs	r2, #0
 80044c6:	f015 ffdd 	bl	801a484 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 80044ca:	6860      	ldr	r0, [r4, #4]
 80044cc:	6803      	ldr	r3, [r0, #0]
 80044ce:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80044d2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    }
 80044d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 80044d8:	4718      	bx	r3
            done = true;
 80044da:	2301      	movs	r3, #1
 80044dc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80044de:	2300      	movs	r3, #0
 80044e0:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
            return;
 80044e4:	e7c9      	b.n	800447a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80044e6:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 80044ea:	e7e2      	b.n	80044b2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x46>
 80044ec:	2001e1bf 	.word	0x2001e1bf

080044f0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 80044f0:	4b1f      	ldr	r3, [pc, #124]	; (8004570 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x80>)
 80044f2:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 80044f4:	b510      	push	{r4, lr}
 80044f6:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 80044f8:	b913      	cbnz	r3, 8004500 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x10>
            done = true;
 80044fa:	2301      	movs	r3, #1
 80044fc:	7203      	strb	r3, [r0, #8]
    }
 80044fe:	bd10      	pop	{r4, pc}
        animationCounter++;
 8004500:	f890 004d 	ldrb.w	r0, [r0, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 8004504:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
        animationCounter++;
 8004508:	3001      	adds	r0, #1
 800450a:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 800450c:	4298      	cmp	r0, r3
        animationCounter++;
 800450e:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 8004512:	d824      	bhi.n	800455e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x6e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004514:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 8004518:	2100      	movs	r1, #0
 800451a:	f016 fc57 	bl	801adcc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800451e:	f010 0201 	ands.w	r2, r0, #1
 8004522:	b283      	uxth	r3, r0
 8004524:	d021      	beq.n	800456a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x7a>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004526:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800452a:	2800      	cmp	r0, #0
 800452c:	bfd8      	it	le
 800452e:	460a      	movle	r2, r1
 8004530:	4413      	add	r3, r2
 8004532:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
            calculatedValue -= snapshot.getY();
 8004536:	f8b4 2050 	ldrh.w	r2, [r4, #80]	; 0x50
 800453a:	8a63      	ldrh	r3, [r4, #18]
 800453c:	1ad2      	subs	r2, r2, r3
 800453e:	b212      	sxth	r2, r2
            snapshot.moveRelative(0, calculatedValue);
 8004540:	f104 000c 	add.w	r0, r4, #12
            calculatedValue -= snapshot.getY();
 8004544:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
            snapshot.moveRelative(0, calculatedValue);
 8004548:	2100      	movs	r1, #0
 800454a:	f015 ff9b 	bl	801a484 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 800454e:	6860      	ldr	r0, [r4, #4]
 8004550:	6803      	ldr	r3, [r0, #0]
 8004552:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8004556:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    }
 8004558:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 800455c:	4718      	bx	r3
            done = true;
 800455e:	2301      	movs	r3, #1
 8004560:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004562:	2300      	movs	r3, #0
 8004564:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
            return;
 8004568:	e7c9      	b.n	80044fe <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800456a:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 800456e:	e7e2      	b.n	8004536 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE15handleTickEventEv+0x46>
 8004570:	2001e1bf 	.word	0x2001e1bf

08004574 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 8004574:	4b1f      	ldr	r3, [pc, #124]	; (80045f4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x80>)
 8004576:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 8004578:	b510      	push	{r4, lr}
 800457a:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 800457c:	b913      	cbnz	r3, 8004584 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x10>
            done = true;
 800457e:	2301      	movs	r3, #1
 8004580:	7203      	strb	r3, [r0, #8]
    }
 8004582:	bd10      	pop	{r4, pc}
        animationCounter++;
 8004584:	f890 004d 	ldrb.w	r0, [r0, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 8004588:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
        animationCounter++;
 800458c:	3001      	adds	r0, #1
 800458e:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 8004590:	4298      	cmp	r0, r3
        animationCounter++;
 8004592:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 8004596:	d824      	bhi.n	80045e2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x6e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004598:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 800459c:	2100      	movs	r1, #0
 800459e:	f016 fc15 	bl	801adcc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 80045a2:	f010 0201 	ands.w	r2, r0, #1
 80045a6:	b283      	uxth	r3, r0
 80045a8:	d021      	beq.n	80045ee <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x7a>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80045aa:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80045ae:	2800      	cmp	r0, #0
 80045b0:	bfd8      	it	le
 80045b2:	460a      	movle	r2, r1
 80045b4:	4413      	add	r3, r2
 80045b6:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
            calculatedValue -= snapshot.getY();
 80045ba:	f8b4 2050 	ldrh.w	r2, [r4, #80]	; 0x50
 80045be:	8a63      	ldrh	r3, [r4, #18]
 80045c0:	1ad2      	subs	r2, r2, r3
 80045c2:	b212      	sxth	r2, r2
            snapshot.moveRelative(0, calculatedValue);
 80045c4:	f104 000c 	add.w	r0, r4, #12
            calculatedValue -= snapshot.getY();
 80045c8:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
            snapshot.moveRelative(0, calculatedValue);
 80045cc:	2100      	movs	r1, #0
 80045ce:	f015 ff59 	bl	801a484 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 80045d2:	6860      	ldr	r0, [r4, #4]
 80045d4:	6803      	ldr	r3, [r0, #0]
 80045d6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80045da:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    }
 80045dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 80045e0:	4718      	bx	r3
            done = true;
 80045e2:	2301      	movs	r3, #1
 80045e4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80045e6:	2300      	movs	r3, #0
 80045e8:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
            return;
 80045ec:	e7c9      	b.n	8004582 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80045ee:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 80045f2:	e7e2      	b.n	80045ba <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv+0x46>
 80045f4:	2001e1bf 	.word	0x2001e1bf

080045f8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80045f8:	b510      	push	{r4, lr}
 80045fa:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80045fc:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8004600:	b158      	cbz	r0, 800461a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8004602:	6803      	ldr	r3, [r0, #0]
 8004604:	68db      	ldr	r3, [r3, #12]
 8004606:	4798      	blx	r3
 8004608:	b138      	cbz	r0, 800461a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800460a:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800460e:	6803      	ldr	r3, [r0, #0]
 8004610:	689b      	ldr	r3, [r3, #8]
 8004612:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004614:	2300      	movs	r3, #0
 8004616:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 800461a:	bd10      	pop	{r4, pc}

0800461c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv>:
    virtual void init()
 800461c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 800461e:	4b0c      	ldr	r3, [pc, #48]	; (8004650 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x34>)
 8004620:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 8004622:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 8004624:	b18b      	cbz	r3, 800464a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x2e>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8004626:	4b0b      	ldr	r3, [pc, #44]	; (8004654 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EE4initEv+0x38>)
 8004628:	221c      	movs	r2, #28
 800462a:	e9cd 3000 	strd	r3, r0, [sp]
 800462e:	2301      	movs	r3, #1
 8004630:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 8004634:	6840      	ldr	r0, [r0, #4]
 8004636:	6803      	ldr	r3, [r0, #0]
 8004638:	4669      	mov	r1, sp
 800463a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800463c:	4798      	blx	r3
            screenContainer->add(snapshot);
 800463e:	6860      	ldr	r0, [r4, #4]
 8004640:	6803      	ldr	r3, [r0, #0]
 8004642:	f104 010c 	add.w	r1, r4, #12
 8004646:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004648:	4798      	blx	r3
    }
 800464a:	b004      	add	sp, #16
 800464c:	bd10      	pop	{r4, pc}
 800464e:	bf00      	nop
 8004650:	2001e1bf 	.word	0x2001e1bf
 8004654:	08030eb8 	.word	0x08030eb8

08004658 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv>:
    virtual void init()
 8004658:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 800465a:	4b0c      	ldr	r3, [pc, #48]	; (800468c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x34>)
 800465c:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 800465e:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 8004660:	b18b      	cbz	r3, 8004686 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x2e>
 8004662:	4b0b      	ldr	r3, [pc, #44]	; (8004690 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv+0x38>)
 8004664:	221c      	movs	r2, #28
 8004666:	e9cd 3000 	strd	r3, r0, [sp]
 800466a:	2301      	movs	r3, #1
 800466c:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 8004670:	6840      	ldr	r0, [r0, #4]
 8004672:	6803      	ldr	r3, [r0, #0]
 8004674:	4669      	mov	r1, sp
 8004676:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8004678:	4798      	blx	r3
            screenContainer->add(snapshot);
 800467a:	6860      	ldr	r0, [r4, #4]
 800467c:	6803      	ldr	r3, [r0, #0]
 800467e:	f104 010c 	add.w	r1, r4, #12
 8004682:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004684:	4798      	blx	r3
    }
 8004686:	b004      	add	sp, #16
 8004688:	bd10      	pop	{r4, pc}
 800468a:	bf00      	nop
 800468c:	2001e1bf 	.word	0x2001e1bf
 8004690:	08030e74 	.word	0x08030e74

08004694 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8004694:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 8004696:	4b0c      	ldr	r3, [pc, #48]	; (80046c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x34>)
 8004698:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 800469a:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 800469c:	b18b      	cbz	r3, 80046c2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x2e>
 800469e:	4b0b      	ldr	r3, [pc, #44]	; (80046cc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>)
 80046a0:	221c      	movs	r2, #28
 80046a2:	e9cd 3000 	strd	r3, r0, [sp]
 80046a6:	2301      	movs	r3, #1
 80046a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 80046ac:	6840      	ldr	r0, [r0, #4]
 80046ae:	6803      	ldr	r3, [r0, #0]
 80046b0:	4669      	mov	r1, sp
 80046b2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80046b4:	4798      	blx	r3
            screenContainer->add(snapshot);
 80046b6:	6860      	ldr	r0, [r4, #4]
 80046b8:	6803      	ldr	r3, [r0, #0]
 80046ba:	f104 010c 	add.w	r1, r4, #12
 80046be:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80046c0:	4798      	blx	r3
    }
 80046c2:	b004      	add	sp, #16
 80046c4:	bd10      	pop	{r4, pc}
 80046c6:	bf00      	nop
 80046c8:	2001e1bf 	.word	0x2001e1bf
 80046cc:	08030dec 	.word	0x08030dec

080046d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:
    virtual void init()
 80046d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 80046d2:	4b0c      	ldr	r3, [pc, #48]	; (8004704 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x34>)
 80046d4:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 80046d6:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 80046d8:	b18b      	cbz	r3, 80046fe <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x2e>
 80046da:	4b0b      	ldr	r3, [pc, #44]	; (8004708 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x38>)
 80046dc:	221c      	movs	r2, #28
 80046de:	e9cd 3000 	strd	r3, r0, [sp]
 80046e2:	2301      	movs	r3, #1
 80046e4:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 80046e8:	6840      	ldr	r0, [r0, #4]
 80046ea:	6803      	ldr	r3, [r0, #0]
 80046ec:	4669      	mov	r1, sp
 80046ee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80046f0:	4798      	blx	r3
            screenContainer->add(snapshot);
 80046f2:	6860      	ldr	r0, [r4, #4]
 80046f4:	6803      	ldr	r3, [r0, #0]
 80046f6:	f104 010c 	add.w	r1, r4, #12
 80046fa:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80046fc:	4798      	blx	r3
    }
 80046fe:	b004      	add	sp, #16
 8004700:	bd10      	pop	{r4, pc}
 8004702:	bf00      	nop
 8004704:	2001e1bf 	.word	0x2001e1bf
 8004708:	08030e30 	.word	0x08030e30

0800470c <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoFinishPageScreenBlockTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoFinishPageScreenBlockTransitionImpl()
{
 800470c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<FinishPageView, FinishPagePresenter, touchgfx::BlockTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004710:	e9d0 6954 	ldrd	r6, r9, [r0, #336]	; 0x150
{
 8004714:	4605      	mov	r5, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004716:	68b0      	ldr	r0, [r6, #8]
 8004718:	6803      	ldr	r3, [r0, #0]
 800471a:	6a1b      	ldr	r3, [r3, #32]
 800471c:	4798      	blx	r3
 800471e:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 8004722:	d205      	bcs.n	8004730 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x24>
 8004724:	4b50      	ldr	r3, [pc, #320]	; (8004868 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x15c>)
 8004726:	4a51      	ldr	r2, [pc, #324]	; (800486c <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x160>)
 8004728:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800472a:	4851      	ldr	r0, [pc, #324]	; (8004870 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x164>)
 800472c:	f027 fc62 	bl	802bff4 <__assert_func>
 8004730:	6870      	ldr	r0, [r6, #4]
 8004732:	6803      	ldr	r3, [r0, #0]
 8004734:	6a1b      	ldr	r3, [r3, #32]
 8004736:	4798      	blx	r3
 8004738:	280f      	cmp	r0, #15
 800473a:	d803      	bhi.n	8004744 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x38>
 800473c:	4b4d      	ldr	r3, [pc, #308]	; (8004874 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x168>)
 800473e:	4a4b      	ldr	r2, [pc, #300]	; (800486c <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x160>)
 8004740:	21a4      	movs	r1, #164	; 0xa4
 8004742:	e7f2      	b.n	800472a <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004744:	68f0      	ldr	r0, [r6, #12]
 8004746:	6803      	ldr	r3, [r0, #0]
 8004748:	6a1b      	ldr	r3, [r3, #32]
 800474a:	4798      	blx	r3
 800474c:	2813      	cmp	r0, #19
 800474e:	d803      	bhi.n	8004758 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x4c>
 8004750:	4b49      	ldr	r3, [pc, #292]	; (8004878 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x16c>)
 8004752:	4a46      	ldr	r2, [pc, #280]	; (800486c <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x160>)
 8004754:	21a5      	movs	r1, #165	; 0xa5
 8004756:	e7e8      	b.n	800472a <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x1e>
    if (*currentTrans)
 8004758:	f8df 8130 	ldr.w	r8, [pc, #304]	; 800488c <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x180>
    Application::getInstance()->clearAllTimerWidgets();
 800475c:	f014 fe14 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8004760:	f014 fe60 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004764:	f8d8 0000 	ldr.w	r0, [r8]
 8004768:	b110      	cbz	r0, 8004770 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800476a:	6803      	ldr	r3, [r0, #0]
 800476c:	68db      	ldr	r3, [r3, #12]
 800476e:	4798      	blx	r3
    if (*currentTrans)
 8004770:	f8d8 0000 	ldr.w	r0, [r8]
 8004774:	b110      	cbz	r0, 800477c <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8004776:	6803      	ldr	r3, [r0, #0]
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	4798      	blx	r3
    if (*currentScreen)
 800477c:	4f3f      	ldr	r7, [pc, #252]	; (800487c <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x170>)
 800477e:	6838      	ldr	r0, [r7, #0]
 8004780:	b110      	cbz	r0, 8004788 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x7c>
        (*currentScreen)->tearDownScreen();
 8004782:	6803      	ldr	r3, [r0, #0]
 8004784:	695b      	ldr	r3, [r3, #20]
 8004786:	4798      	blx	r3
    if (*currentPresenter)
 8004788:	f8d5 0138 	ldr.w	r0, [r5, #312]	; 0x138
 800478c:	b110      	cbz	r0, 8004794 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x88>
        (*currentPresenter)->deactivate();
 800478e:	6803      	ldr	r3, [r0, #0]
 8004790:	685b      	ldr	r3, [r3, #4]
 8004792:	4798      	blx	r3
    if (*currentScreen)
 8004794:	6838      	ldr	r0, [r7, #0]
 8004796:	b110      	cbz	r0, 800479e <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x92>
        (*currentScreen)->~Screen();
 8004798:	6803      	ldr	r3, [r0, #0]
 800479a:	681b      	ldr	r3, [r3, #0]
 800479c:	4798      	blx	r3
    if (*currentPresenter)
 800479e:	f8d5 0138 	ldr.w	r0, [r5, #312]	; 0x138
 80047a2:	b110      	cbz	r0, 80047aa <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x9e>
        (*currentPresenter)->~Presenter();
 80047a4:	6803      	ldr	r3, [r0, #0]
 80047a6:	689b      	ldr	r3, [r3, #8]
 80047a8:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80047aa:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80047ac:	6803      	ldr	r3, [r0, #0]
 80047ae:	2100      	movs	r1, #0
 80047b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047b2:	4798      	blx	r3
        : screenContainer(0), done(false)
 80047b4:	2300      	movs	r3, #0
 80047b6:	6043      	str	r3, [r0, #4]
 80047b8:	7203      	strb	r3, [r0, #8]
          animationCounter(0)
 80047ba:	7403      	strb	r3, [r0, #16]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 80047bc:	4b30      	ldr	r3, [pc, #192]	; (8004880 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x174>)
          animationCounter(0)
 80047be:	4a31      	ldr	r2, [pc, #196]	; (8004884 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x178>)
 80047c0:	6002      	str	r2, [r0, #0]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 80047c2:	881a      	ldrh	r2, [r3, #0]
 80047c4:	4b30      	ldr	r3, [pc, #192]	; (8004888 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x17c>)
 80047c6:	881b      	ldrh	r3, [r3, #0]
 80047c8:	429a      	cmp	r2, r3
 80047ca:	4604      	mov	r4, r0
 80047cc:	d93f      	bls.n	800484e <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x142>
            blockWidth = (HAL::DISPLAY_WIDTH + 7) / 8;
 80047ce:	3207      	adds	r2, #7
 80047d0:	10d2      	asrs	r2, r2, #3
 80047d2:	8142      	strh	r2, [r0, #10]
            blockHeight = (HAL::DISPLAY_HEIGHT + 5) / 6;
 80047d4:	3305      	adds	r3, #5
 80047d6:	2206      	movs	r2, #6
 80047d8:	fbb3 f3f2 	udiv	r3, r3, r2
 80047dc:	8183      	strh	r3, [r0, #12]
            blocksHorizontal = 8;
 80047de:	2308      	movs	r3, #8
 80047e0:	81c3      	strh	r3, [r0, #14]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80047e2:	68b0      	ldr	r0, [r6, #8]
 80047e4:	6803      	ldr	r3, [r0, #0]
 80047e6:	2100      	movs	r1, #0
 80047e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047ea:	4798      	blx	r3
 80047ec:	4682      	mov	sl, r0
 80047ee:	f006 fb43 	bl	800ae78 <_ZN14FinishPageViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80047f2:	6870      	ldr	r0, [r6, #4]
 80047f4:	6803      	ldr	r3, [r0, #0]
 80047f6:	2100      	movs	r1, #0
 80047f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047fa:	4798      	blx	r3
 80047fc:	4651      	mov	r1, sl
 80047fe:	4606      	mov	r6, r0
 8004800:	f006 fb20 	bl	800ae44 <_ZN19FinishPagePresenterC1ER14FinishPageView>
    *currentTrans = newTransition;
 8004804:	f8c8 4000 	str.w	r4, [r8]
    *currentPresenter = newPresenter;
 8004808:	f8c5 6138 	str.w	r6, [r5, #312]	; 0x138
    *currentScreen = newScreen;
 800480c:	f8c7 a000 	str.w	sl, [r7]
    model->bind(newPresenter);
 8004810:	b33e      	cbz	r6, 8004862 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x156>
 8004812:	1d33      	adds	r3, r6, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004814:	f8c9 3000 	str.w	r3, [r9]
    newScreen->setupScreen();
 8004818:	f8da 3000 	ldr.w	r3, [sl]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800481c:	f8c6 9008 	str.w	r9, [r6, #8]
 8004820:	4650      	mov	r0, sl
 8004822:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8004824:	f8ca 603c 	str.w	r6, [sl, #60]	; 0x3c
 8004828:	4798      	blx	r3
    newPresenter->activate();
 800482a:	6833      	ldr	r3, [r6, #0]
 800482c:	4630      	mov	r0, r6
 800482e:	681b      	ldr	r3, [r3, #0]
 8004830:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004832:	4621      	mov	r1, r4
 8004834:	4650      	mov	r0, sl
 8004836:	f016 fac3 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800483a:	6823      	ldr	r3, [r4, #0]
 800483c:	4620      	mov	r0, r4
 800483e:	691b      	ldr	r3, [r3, #16]
 8004840:	4798      	blx	r3
    newTransition->invalidate();
 8004842:	6823      	ldr	r3, [r4, #0]
 8004844:	4620      	mov	r0, r4
 8004846:	695b      	ldr	r3, [r3, #20]
}
 8004848:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800484c:	4718      	bx	r3
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 800484e:	3307      	adds	r3, #7
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8004850:	2106      	movs	r1, #6
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 8004852:	10db      	asrs	r3, r3, #3
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8004854:	3205      	adds	r2, #5
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 8004856:	8183      	strh	r3, [r0, #12]
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8004858:	fbb2 f2f1 	udiv	r2, r2, r1
            blocksHorizontal = 6;
 800485c:	81c1      	strh	r1, [r0, #14]
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 800485e:	8142      	strh	r2, [r0, #10]
            blocksHorizontal = 6;
 8004860:	e7bf      	b.n	80047e2 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0xd6>
    model->bind(newPresenter);
 8004862:	4633      	mov	r3, r6
 8004864:	e7d6      	b.n	8004814 <_ZN23FrontendApplicationBase39gotoFinishPageScreenBlockTransitionImplEv+0x108>
 8004866:	bf00      	nop
 8004868:	0802f918 	.word	0x0802f918
 800486c:	0802f9a6 	.word	0x0802f9a6
 8004870:	0802fab3 	.word	0x0802fab3
 8004874:	0802fafa 	.word	0x0802fafa
 8004878:	0802fb9d 	.word	0x0802fb9d
 800487c:	2001e21c 	.word	0x2001e21c
 8004880:	2001e1b4 	.word	0x2001e1b4
 8004884:	08030dc8 	.word	0x08030dc8
 8004888:	2001e1b6 	.word	0x2001e1b6
 800488c:	2001e220 	.word	0x2001e220

08004890 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv>:
{
 8004890:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartPageView, StartPagePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004894:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8004898:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800489a:	68a8      	ldr	r0, [r5, #8]
 800489c:	6803      	ldr	r3, [r0, #0]
 800489e:	6a1b      	ldr	r3, [r3, #32]
 80048a0:	4798      	blx	r3
 80048a2:	f5b0 7fba 	cmp.w	r0, #372	; 0x174
 80048a6:	d205      	bcs.n	80048b4 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x24>
 80048a8:	4b45      	ldr	r3, [pc, #276]	; (80049c0 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x130>)
 80048aa:	4a46      	ldr	r2, [pc, #280]	; (80049c4 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x134>)
 80048ac:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80048ae:	4846      	ldr	r0, [pc, #280]	; (80049c8 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x138>)
 80048b0:	f027 fba0 	bl	802bff4 <__assert_func>
 80048b4:	6868      	ldr	r0, [r5, #4]
 80048b6:	6803      	ldr	r3, [r0, #0]
 80048b8:	6a1b      	ldr	r3, [r3, #32]
 80048ba:	4798      	blx	r3
 80048bc:	280f      	cmp	r0, #15
 80048be:	d803      	bhi.n	80048c8 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x38>
 80048c0:	4b42      	ldr	r3, [pc, #264]	; (80049cc <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x13c>)
 80048c2:	4a40      	ldr	r2, [pc, #256]	; (80049c4 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x134>)
 80048c4:	21a4      	movs	r1, #164	; 0xa4
 80048c6:	e7f2      	b.n	80048ae <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048c8:	68e8      	ldr	r0, [r5, #12]
 80048ca:	6803      	ldr	r3, [r0, #0]
 80048cc:	6a1b      	ldr	r3, [r3, #32]
 80048ce:	4798      	blx	r3
 80048d0:	280b      	cmp	r0, #11
 80048d2:	d803      	bhi.n	80048dc <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x4c>
 80048d4:	4b3e      	ldr	r3, [pc, #248]	; (80049d0 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x140>)
 80048d6:	4a3b      	ldr	r2, [pc, #236]	; (80049c4 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x134>)
 80048d8:	21a5      	movs	r1, #165	; 0xa5
 80048da:	e7e8      	b.n	80048ae <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80048dc:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80049d8 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 80048e0:	f014 fd52 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 80048e4:	f014 fd9e 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80048e8:	f8d9 0000 	ldr.w	r0, [r9]
 80048ec:	b110      	cbz	r0, 80048f4 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80048ee:	6803      	ldr	r3, [r0, #0]
 80048f0:	68db      	ldr	r3, [r3, #12]
 80048f2:	4798      	blx	r3
    if (*currentTrans)
 80048f4:	f8d9 0000 	ldr.w	r0, [r9]
 80048f8:	b110      	cbz	r0, 8004900 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80048fa:	6803      	ldr	r3, [r0, #0]
 80048fc:	681b      	ldr	r3, [r3, #0]
 80048fe:	4798      	blx	r3
    if (*currentScreen)
 8004900:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80049dc <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x14c>
 8004904:	f8d8 0000 	ldr.w	r0, [r8]
 8004908:	b110      	cbz	r0, 8004910 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800490a:	6803      	ldr	r3, [r0, #0]
 800490c:	695b      	ldr	r3, [r3, #20]
 800490e:	4798      	blx	r3
    if (*currentPresenter)
 8004910:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004914:	b110      	cbz	r0, 800491c <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004916:	6803      	ldr	r3, [r0, #0]
 8004918:	685b      	ldr	r3, [r3, #4]
 800491a:	4798      	blx	r3
    if (*currentScreen)
 800491c:	f8d8 0000 	ldr.w	r0, [r8]
 8004920:	b110      	cbz	r0, 8004928 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8004922:	6803      	ldr	r3, [r0, #0]
 8004924:	681b      	ldr	r3, [r3, #0]
 8004926:	4798      	blx	r3
    if (*currentPresenter)
 8004928:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800492c:	b110      	cbz	r0, 8004934 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800492e:	6803      	ldr	r3, [r0, #0]
 8004930:	689b      	ldr	r3, [r3, #8]
 8004932:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004934:	68e8      	ldr	r0, [r5, #12]
 8004936:	6803      	ldr	r3, [r0, #0]
 8004938:	2100      	movs	r1, #0
 800493a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800493c:	4798      	blx	r3
 800493e:	f04f 0b00 	mov.w	fp, #0
 8004942:	4b24      	ldr	r3, [pc, #144]	; (80049d4 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x144>)
 8004944:	6003      	str	r3, [r0, #0]
 8004946:	4604      	mov	r4, r0
 8004948:	f8c0 b004 	str.w	fp, [r0, #4]
 800494c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004950:	68a8      	ldr	r0, [r5, #8]
 8004952:	6803      	ldr	r3, [r0, #0]
 8004954:	4659      	mov	r1, fp
 8004956:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004958:	4798      	blx	r3
 800495a:	4606      	mov	r6, r0
 800495c:	f006 fdb6 	bl	800b4cc <_ZN13StartPageViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004960:	6868      	ldr	r0, [r5, #4]
 8004962:	6803      	ldr	r3, [r0, #0]
 8004964:	4659      	mov	r1, fp
 8004966:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004968:	4798      	blx	r3
 800496a:	4631      	mov	r1, r6
 800496c:	4605      	mov	r5, r0
 800496e:	f006 fd93 	bl	800b498 <_ZN18StartPagePresenterC1ER13StartPageView>
    *currentTrans = newTransition;
 8004972:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004976:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800497a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800497e:	b1e5      	cbz	r5, 80049ba <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0x12a>
 8004980:	1d2b      	adds	r3, r5, #4
 8004982:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004986:	6833      	ldr	r3, [r6, #0]
 8004988:	f8c5 a008 	str.w	sl, [r5, #8]
 800498c:	4630      	mov	r0, r6
 800498e:	68db      	ldr	r3, [r3, #12]
 8004990:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004992:	4798      	blx	r3
    newPresenter->activate();
 8004994:	682b      	ldr	r3, [r5, #0]
 8004996:	4628      	mov	r0, r5
 8004998:	681b      	ldr	r3, [r3, #0]
 800499a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800499c:	4621      	mov	r1, r4
 800499e:	4630      	mov	r0, r6
 80049a0:	f016 fa0e 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80049a4:	6823      	ldr	r3, [r4, #0]
 80049a6:	4620      	mov	r0, r4
 80049a8:	691b      	ldr	r3, [r3, #16]
 80049aa:	4798      	blx	r3
    newTransition->invalidate();
 80049ac:	6823      	ldr	r3, [r4, #0]
 80049ae:	695b      	ldr	r3, [r3, #20]
 80049b0:	4620      	mov	r0, r4
}
 80049b2:	b001      	add	sp, #4
 80049b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049b8:	4718      	bx	r3
    model->bind(newPresenter);
 80049ba:	462b      	mov	r3, r5
 80049bc:	e7e1      	b.n	8004982 <_ZN23FrontendApplicationBase35gotoStartPageScreenNoTransitionImplEv+0xf2>
 80049be:	bf00      	nop
 80049c0:	0802f918 	.word	0x0802f918
 80049c4:	0802fc40 	.word	0x0802fc40
 80049c8:	0802fab3 	.word	0x0802fab3
 80049cc:	0802fafa 	.word	0x0802fafa
 80049d0:	0802fb9d 	.word	0x0802fb9d
 80049d4:	08030da4 	.word	0x08030da4
 80049d8:	2001e220 	.word	0x2001e220
 80049dc:	2001e21c 	.word	0x2001e21c

080049e0 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80049e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80049e4:	461d      	mov	r5, r3
        setX(x);
 80049e6:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80049e8:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 80049ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80049ee:	4604      	mov	r4, r0
 80049f0:	4616      	mov	r6, r2
        setX(x);
 80049f2:	4798      	blx	r3
        setY(y);
 80049f4:	6823      	ldr	r3, [r4, #0]
 80049f6:	4631      	mov	r1, r6
 80049f8:	4620      	mov	r0, r4
 80049fa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80049fc:	4798      	blx	r3
        setWidth(width);
 80049fe:	6823      	ldr	r3, [r4, #0]
 8004a00:	4629      	mov	r1, r5
 8004a02:	4620      	mov	r0, r4
 8004a04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004a06:	4798      	blx	r3
        setHeight(height);
 8004a08:	6823      	ldr	r3, [r4, #0]
 8004a0a:	4639      	mov	r1, r7
 8004a0c:	4620      	mov	r0, r4
 8004a0e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8004a10:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 8004a14:	4718      	bx	r3
	...

08004a18 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004a18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a1a:	4604      	mov	r4, r0
 8004a1c:	4617      	mov	r7, r2
 8004a1e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004a20:	f014 fd42 	bl	80194a8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004a24:	4b10      	ldr	r3, [pc, #64]	; (8004a68 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8004a26:	2500      	movs	r5, #0
      model(m)
 8004a28:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8004a2c:	4e0f      	ldr	r6, [pc, #60]	; (8004a6c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 8004a2e:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 8004a30:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8004a34:	4b0e      	ldr	r3, [pc, #56]	; (8004a70 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8004a36:	6830      	ldr	r0, [r6, #0]
 8004a38:	6023      	str	r3, [r4, #0]
 8004a3a:	4b0e      	ldr	r3, [pc, #56]	; (8004a74 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004a3c:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8004a40:	6803      	ldr	r3, [r0, #0]
 8004a42:	4629      	mov	r1, r5
 8004a44:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004a46:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8004a4a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004a4c:	4628      	mov	r0, r5
 8004a4e:	f006 f913 	bl	800ac78 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004a52:	6833      	ldr	r3, [r6, #0]
 8004a54:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8004a58:	b10a      	cbz	r2, 8004a5e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8004a5a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004a5c:	b900      	cbnz	r0, 8004a60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8004a5e:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004a60:	f01c fe27 	bl	80216b2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8004a64:	4620      	mov	r0, r4
 8004a66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004a68:	2001e22c 	.word	0x2001e22c
 8004a6c:	2001e1c0 	.word	0x2001e1c0
 8004a70:	08030d58 	.word	0x08030d58
 8004a74:	08030d40 	.word	0x08030d40

08004a78 <_ZN23FrontendApplicationBase31gotoStartPageScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004a78:	4b06      	ldr	r3, [pc, #24]	; (8004a94 <_ZN23FrontendApplicationBase31gotoStartPageScreenNoTransitionEv+0x1c>)
 8004a7a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004a7e:	2300      	movs	r3, #0
 8004a80:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004a84:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004a88:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004a8c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004a90:	4770      	bx	lr
 8004a92:	bf00      	nop
 8004a94:	08004891 	.word	0x08004891

08004a98 <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionNorthEv>:
 8004a98:	4b06      	ldr	r3, [pc, #24]	; (8004ab4 <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionNorthEv+0x1c>)
 8004a9a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004a9e:	2300      	movs	r3, #0
 8004aa0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004aa4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004aa8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004aac:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004ab0:	4770      	bx	lr
 8004ab2:	bf00      	nop
 8004ab4:	08005469 	.word	0x08005469

08004ab8 <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionSouthEv>:
 8004ab8:	4b06      	ldr	r3, [pc, #24]	; (8004ad4 <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionSouthEv+0x1c>)
 8004aba:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004abe:	2300      	movs	r3, #0
 8004ac0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004ac4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004ac8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004acc:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004ad0:	4770      	bx	lr
 8004ad2:	bf00      	nop
 8004ad4:	08005621 	.word	0x08005621

08004ad8 <_ZN23FrontendApplicationBase46gotoInstructionPage2ScreenSlideTransitionNorthEv>:
 8004ad8:	4b06      	ldr	r3, [pc, #24]	; (8004af4 <_ZN23FrontendApplicationBase46gotoInstructionPage2ScreenSlideTransitionNorthEv+0x1c>)
 8004ada:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004ade:	2300      	movs	r3, #0
 8004ae0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004ae4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004ae8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004aec:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004af0:	4770      	bx	lr
 8004af2:	bf00      	nop
 8004af4:	0800532d 	.word	0x0800532d

08004af8 <_ZN23FrontendApplicationBase39gotoKnownPageScreenSlideTransitionNorthEv>:
 8004af8:	4b06      	ldr	r3, [pc, #24]	; (8004b14 <_ZN23FrontendApplicationBase39gotoKnownPageScreenSlideTransitionNorthEv+0x1c>)
 8004afa:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004afe:	2300      	movs	r3, #0
 8004b00:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004b04:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004b08:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004b0c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004b10:	4770      	bx	lr
 8004b12:	bf00      	nop
 8004b14:	080051f1 	.word	0x080051f1

08004b18 <_ZN23FrontendApplicationBase36gotoPIPageScreenSlideTransitionNorthEv>:
 8004b18:	4b06      	ldr	r3, [pc, #24]	; (8004b34 <_ZN23FrontendApplicationBase36gotoPIPageScreenSlideTransitionNorthEv+0x1c>)
 8004b1a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004b1e:	2300      	movs	r3, #0
 8004b20:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004b24:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004b28:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004b2c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004b30:	4770      	bx	lr
 8004b32:	bf00      	nop
 8004b34:	080050b5 	.word	0x080050b5

08004b38 <_ZN23FrontendApplicationBase46gotoStartMeasurementScreenSlideTransitionNorthEv>:
 8004b38:	4b06      	ldr	r3, [pc, #24]	; (8004b54 <_ZN23FrontendApplicationBase46gotoStartMeasurementScreenSlideTransitionNorthEv+0x1c>)
 8004b3a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004b3e:	2300      	movs	r3, #0
 8004b40:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004b44:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004b48:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004b4c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004b50:	4770      	bx	lr
 8004b52:	bf00      	nop
 8004b54:	08004f79 	.word	0x08004f79

08004b58 <_ZN23FrontendApplicationBase41gotoProgressBarScreenSlideTransitionNorthEv>:
 8004b58:	4b06      	ldr	r3, [pc, #24]	; (8004b74 <_ZN23FrontendApplicationBase41gotoProgressBarScreenSlideTransitionNorthEv+0x1c>)
 8004b5a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004b5e:	2300      	movs	r3, #0
 8004b60:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004b64:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004b68:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004b6c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004b70:	4770      	bx	lr
 8004b72:	bf00      	nop
 8004b74:	08004e39 	.word	0x08004e39

08004b78 <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionNorthEv>:
 8004b78:	4b06      	ldr	r3, [pc, #24]	; (8004b94 <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionNorthEv+0x1c>)
 8004b7a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004b7e:	2300      	movs	r3, #0
 8004b80:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004b84:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004b88:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004b8c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004b90:	4770      	bx	lr
 8004b92:	bf00      	nop
 8004b94:	08005b9d 	.word	0x08005b9d

08004b98 <_ZN23FrontendApplicationBase44gotoDataDisplayListScreenSlideTransitionEastEv>:
 8004b98:	4b06      	ldr	r3, [pc, #24]	; (8004bb4 <_ZN23FrontendApplicationBase44gotoDataDisplayListScreenSlideTransitionEastEv+0x1c>)
 8004b9a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004b9e:	2300      	movs	r3, #0
 8004ba0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004ba4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004ba8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004bac:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004bb0:	4770      	bx	lr
 8004bb2:	bf00      	nop
 8004bb4:	080059f5 	.word	0x080059f5

08004bb8 <_ZN23FrontendApplicationBase37gotoDataDisplayListScreenNoTransitionEv>:
 8004bb8:	4b06      	ldr	r3, [pc, #24]	; (8004bd4 <_ZN23FrontendApplicationBase37gotoDataDisplayListScreenNoTransitionEv+0x1c>)
 8004bba:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004bbe:	2300      	movs	r3, #0
 8004bc0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004bc4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004bc8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004bcc:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004bd0:	4770      	bx	lr
 8004bd2:	bf00      	nop
 8004bd4:	080058a9 	.word	0x080058a9

08004bd8 <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionSouthEv>:
 8004bd8:	4b06      	ldr	r3, [pc, #24]	; (8004bf4 <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionSouthEv+0x1c>)
 8004bda:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004bde:	2300      	movs	r3, #0
 8004be0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004be4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004be8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004bec:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004bf0:	4770      	bx	lr
 8004bf2:	bf00      	nop
 8004bf4:	0800576d 	.word	0x0800576d

08004bf8 <_ZN23FrontendApplicationBase44gotoResistanceGraphScreenSlideTransitionWestEv>:
 8004bf8:	4b06      	ldr	r3, [pc, #24]	; (8004c14 <_ZN23FrontendApplicationBase44gotoResistanceGraphScreenSlideTransitionWestEv+0x1c>)
 8004bfa:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004bfe:	2300      	movs	r3, #0
 8004c00:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004c04:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004c08:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004c0c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004c10:	4770      	bx	lr
 8004c12:	bf00      	nop
 8004c14:	08005e91 	.word	0x08005e91

08004c18 <_ZN23FrontendApplicationBase43gotoReactanceGraphScreenSlideTransitionWestEv>:
 8004c18:	4b06      	ldr	r3, [pc, #24]	; (8004c34 <_ZN23FrontendApplicationBase43gotoReactanceGraphScreenSlideTransitionWestEv+0x1c>)
 8004c1a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004c1e:	2300      	movs	r3, #0
 8004c20:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004c24:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004c28:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004c2c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004c30:	4770      	bx	lr
 8004c32:	bf00      	nop
 8004c34:	08005d51 	.word	0x08005d51

08004c38 <_ZN23FrontendApplicationBase39gotoDataSavedScreenSlideTransitionNorthEv>:
 8004c38:	4b06      	ldr	r3, [pc, #24]	; (8004c54 <_ZN23FrontendApplicationBase39gotoDataSavedScreenSlideTransitionNorthEv+0x1c>)
 8004c3a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004c3e:	2300      	movs	r3, #0
 8004c40:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004c44:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004c48:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004c4c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004c50:	4770      	bx	lr
 8004c52:	bf00      	nop
 8004c54:	08004cfd 	.word	0x08004cfd

08004c58 <_ZN23FrontendApplicationBase35gotoFinishPageScreenBlockTransitionEv>:
 8004c58:	4b06      	ldr	r3, [pc, #24]	; (8004c74 <_ZN23FrontendApplicationBase35gotoFinishPageScreenBlockTransitionEv+0x1c>)
 8004c5a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004c5e:	2300      	movs	r3, #0
 8004c60:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8004c64:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004c68:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004c6c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004c70:	4770      	bx	lr
 8004c72:	bf00      	nop
 8004c74:	0800470d 	.word	0x0800470d

08004c78 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>:
 8004c78:	6803      	ldr	r3, [r0, #0]
 8004c7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c7c:	4718      	bx	r3
	...

08004c80 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8004c80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          calculatedValue(0)
 8004c82:	4605      	mov	r5, r0
 8004c84:	2600      	movs	r6, #0
 8004c86:	4b18      	ldr	r3, [pc, #96]	; (8004ce8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh+0x68>)
 8004c88:	6046      	str	r6, [r0, #4]
 8004c8a:	7206      	strb	r6, [r0, #8]
 8004c8c:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8004c90:	4604      	mov	r4, r0
          calculatedValue(0)
 8004c92:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8004c94:	460f      	mov	r7, r1
          calculatedValue(0)
 8004c96:	f011 fd09 	bl	80166ac <_ZN8touchgfx14SnapshotWidgetC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8004c9a:	4b14      	ldr	r3, [pc, #80]	; (8004cec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh+0x6c>)
 8004c9c:	63a5      	str	r5, [r4, #56]	; 0x38
 8004c9e:	e9c4 340f 	strd	r3, r4, [r4, #60]	; 0x3c
 8004ca2:	2220      	movs	r2, #32
 8004ca4:	2301      	movs	r3, #1
 8004ca6:	e9c4 2311 	strd	r2, r3, [r4, #68]	; 0x44
        if (HAL::USE_ANIMATION_STORAGE)
 8004caa:	4b11      	ldr	r3, [pc, #68]	; (8004cf0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh+0x70>)
          calculatedValue(0)
 8004cac:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
        if (HAL::USE_ANIMATION_STORAGE)
 8004cb0:	781b      	ldrb	r3, [r3, #0]
          calculatedValue(0)
 8004cb2:	f884 604d 	strb.w	r6, [r4, #77]	; 0x4d
 8004cb6:	f8a4 6050 	strh.w	r6, [r4, #80]	; 0x50
        if (HAL::USE_ANIMATION_STORAGE)
 8004cba:	b18b      	cbz	r3, 8004ce0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh+0x60>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004cbc:	4f0d      	ldr	r7, [pc, #52]	; (8004cf4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh+0x74>)
 8004cbe:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004cc2:	9300      	str	r3, [sp, #0]
 8004cc4:	4b0c      	ldr	r3, [pc, #48]	; (8004cf8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh+0x78>)
 8004cc6:	4632      	mov	r2, r6
 8004cc8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004ccc:	4631      	mov	r1, r6
 8004cce:	4628      	mov	r0, r5
 8004cd0:	f7ff fe86 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
            snapshot.makeSnapshot();
 8004cd4:	4628      	mov	r0, r5
 8004cd6:	f011 fc65 	bl	80165a4 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
                targetValue = HAL::DISPLAY_HEIGHT;
 8004cda:	883b      	ldrh	r3, [r7, #0]
 8004cdc:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
    }
 8004ce0:	4620      	mov	r0, r4
 8004ce2:	b003      	add	sp, #12
 8004ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004ce6:	bf00      	nop
 8004ce8:	08030ed0 	.word	0x08030ed0
 8004cec:	08030eb8 	.word	0x08030eb8
 8004cf0:	2001e1bf 	.word	0x2001e1bf
 8004cf4:	2001e1b6 	.word	0x2001e1b6
 8004cf8:	2001e1b4 	.word	0x2001e1b4

08004cfc <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv>:
{
 8004cfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<DataSavedView, DataSavedPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d00:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8004d04:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d06:	68a0      	ldr	r0, [r4, #8]
 8004d08:	6803      	ldr	r3, [r0, #0]
 8004d0a:	6a1b      	ldr	r3, [r3, #32]
 8004d0c:	4798      	blx	r3
 8004d0e:	f5b0 7fac 	cmp.w	r0, #344	; 0x158
 8004d12:	d205      	bcs.n	8004d20 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x24>
 8004d14:	4b41      	ldr	r3, [pc, #260]	; (8004e1c <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x120>)
 8004d16:	4a42      	ldr	r2, [pc, #264]	; (8004e20 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x124>)
 8004d18:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d1a:	4842      	ldr	r0, [pc, #264]	; (8004e24 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x128>)
 8004d1c:	f027 f96a 	bl	802bff4 <__assert_func>
 8004d20:	6860      	ldr	r0, [r4, #4]
 8004d22:	6803      	ldr	r3, [r0, #0]
 8004d24:	6a1b      	ldr	r3, [r3, #32]
 8004d26:	4798      	blx	r3
 8004d28:	280f      	cmp	r0, #15
 8004d2a:	d803      	bhi.n	8004d34 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x38>
 8004d2c:	4b3e      	ldr	r3, [pc, #248]	; (8004e28 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x12c>)
 8004d2e:	4a3c      	ldr	r2, [pc, #240]	; (8004e20 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x124>)
 8004d30:	21a4      	movs	r1, #164	; 0xa4
 8004d32:	e7f2      	b.n	8004d1a <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d34:	68e0      	ldr	r0, [r4, #12]
 8004d36:	6803      	ldr	r3, [r0, #0]
 8004d38:	6a1b      	ldr	r3, [r3, #32]
 8004d3a:	4798      	blx	r3
 8004d3c:	2853      	cmp	r0, #83	; 0x53
 8004d3e:	d803      	bhi.n	8004d48 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x4c>
 8004d40:	4b3a      	ldr	r3, [pc, #232]	; (8004e2c <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x130>)
 8004d42:	4a37      	ldr	r2, [pc, #220]	; (8004e20 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x124>)
 8004d44:	21a5      	movs	r1, #165	; 0xa5
 8004d46:	e7e8      	b.n	8004d1a <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 8004d48:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e30 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8004d4c:	f014 fb1c 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8004d50:	f014 fb68 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004d54:	f8d9 0000 	ldr.w	r0, [r9]
 8004d58:	b110      	cbz	r0, 8004d60 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 8004d5a:	6803      	ldr	r3, [r0, #0]
 8004d5c:	68db      	ldr	r3, [r3, #12]
 8004d5e:	4798      	blx	r3
    if (*currentTrans)
 8004d60:	f8d9 0000 	ldr.w	r0, [r9]
 8004d64:	b110      	cbz	r0, 8004d6c <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 8004d66:	6803      	ldr	r3, [r0, #0]
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	4798      	blx	r3
    if (*currentScreen)
 8004d6c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004e34 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x138>
 8004d70:	f8d8 0000 	ldr.w	r0, [r8]
 8004d74:	b110      	cbz	r0, 8004d7c <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8004d76:	6803      	ldr	r3, [r0, #0]
 8004d78:	695b      	ldr	r3, [r3, #20]
 8004d7a:	4798      	blx	r3
    if (*currentPresenter)
 8004d7c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004d80:	b110      	cbz	r0, 8004d88 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004d82:	6803      	ldr	r3, [r0, #0]
 8004d84:	685b      	ldr	r3, [r3, #4]
 8004d86:	4798      	blx	r3
    if (*currentScreen)
 8004d88:	f8d8 0000 	ldr.w	r0, [r8]
 8004d8c:	b110      	cbz	r0, 8004d94 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 8004d8e:	6803      	ldr	r3, [r0, #0]
 8004d90:	681b      	ldr	r3, [r3, #0]
 8004d92:	4798      	blx	r3
    if (*currentPresenter)
 8004d94:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004d98:	b110      	cbz	r0, 8004da0 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8004d9a:	6803      	ldr	r3, [r0, #0]
 8004d9c:	689b      	ldr	r3, [r3, #8]
 8004d9e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004da0:	68e0      	ldr	r0, [r4, #12]
 8004da2:	2100      	movs	r1, #0
 8004da4:	f7ff ff68 	bl	8004c78 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 8004da8:	2114      	movs	r1, #20
 8004daa:	4605      	mov	r5, r0
 8004dac:	f7ff ff68 	bl	8004c80 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004db0:	68a0      	ldr	r0, [r4, #8]
 8004db2:	6803      	ldr	r3, [r0, #0]
 8004db4:	2100      	movs	r1, #0
 8004db6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004db8:	4798      	blx	r3
 8004dba:	4606      	mov	r6, r0
 8004dbc:	f006 f82a 	bl	800ae14 <_ZN13DataSavedViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004dc0:	6860      	ldr	r0, [r4, #4]
 8004dc2:	6803      	ldr	r3, [r0, #0]
 8004dc4:	2100      	movs	r1, #0
 8004dc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dc8:	4798      	blx	r3
 8004dca:	4631      	mov	r1, r6
 8004dcc:	4604      	mov	r4, r0
 8004dce:	f006 f801 	bl	800add4 <_ZN18DataSavedPresenterC1ER13DataSavedView>
    *currentTrans = newTransition;
 8004dd2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004dd6:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8004dda:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004dde:	b1dc      	cbz	r4, 8004e18 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0x11c>
 8004de0:	1d23      	adds	r3, r4, #4
 8004de2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004de6:	6833      	ldr	r3, [r6, #0]
 8004de8:	f8c4 a008 	str.w	sl, [r4, #8]
 8004dec:	4630      	mov	r0, r6
 8004dee:	68db      	ldr	r3, [r3, #12]
 8004df0:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004df2:	4798      	blx	r3
    newPresenter->activate();
 8004df4:	6823      	ldr	r3, [r4, #0]
 8004df6:	4620      	mov	r0, r4
 8004df8:	681b      	ldr	r3, [r3, #0]
 8004dfa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004dfc:	4629      	mov	r1, r5
 8004dfe:	4630      	mov	r0, r6
 8004e00:	f015 ffde 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e04:	682b      	ldr	r3, [r5, #0]
 8004e06:	4628      	mov	r0, r5
 8004e08:	691b      	ldr	r3, [r3, #16]
 8004e0a:	4798      	blx	r3
    newTransition->invalidate();
 8004e0c:	682b      	ldr	r3, [r5, #0]
 8004e0e:	4628      	mov	r0, r5
 8004e10:	695b      	ldr	r3, [r3, #20]
}
 8004e12:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e16:	4718      	bx	r3
    model->bind(newPresenter);
 8004e18:	4623      	mov	r3, r4
 8004e1a:	e7e2      	b.n	8004de2 <_ZN23FrontendApplicationBase43gotoDataSavedScreenSlideTransitionNorthImplEv+0xe6>
 8004e1c:	0802f918 	.word	0x0802f918
 8004e20:	0802fd48 	.word	0x0802fd48
 8004e24:	0802fab3 	.word	0x0802fab3
 8004e28:	0802fafa 	.word	0x0802fafa
 8004e2c:	0802fb9d 	.word	0x0802fb9d
 8004e30:	2001e220 	.word	0x2001e220
 8004e34:	2001e21c 	.word	0x2001e21c

08004e38 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv>:
{
 8004e38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ProgressBarView, ProgressBarPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e3c:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8004e40:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e42:	68a0      	ldr	r0, [r4, #8]
 8004e44:	6803      	ldr	r3, [r0, #0]
 8004e46:	6a1b      	ldr	r3, [r3, #32]
 8004e48:	4798      	blx	r3
 8004e4a:	f241 53e7 	movw	r3, #5607	; 0x15e7
 8004e4e:	4298      	cmp	r0, r3
 8004e50:	d805      	bhi.n	8004e5e <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x26>
 8004e52:	4b42      	ldr	r3, [pc, #264]	; (8004f5c <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x124>)
 8004e54:	4a42      	ldr	r2, [pc, #264]	; (8004f60 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x128>)
 8004e56:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e58:	4842      	ldr	r0, [pc, #264]	; (8004f64 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x12c>)
 8004e5a:	f027 f8cb 	bl	802bff4 <__assert_func>
 8004e5e:	6860      	ldr	r0, [r4, #4]
 8004e60:	6803      	ldr	r3, [r0, #0]
 8004e62:	6a1b      	ldr	r3, [r3, #32]
 8004e64:	4798      	blx	r3
 8004e66:	280f      	cmp	r0, #15
 8004e68:	d803      	bhi.n	8004e72 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x3a>
 8004e6a:	4b3f      	ldr	r3, [pc, #252]	; (8004f68 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x130>)
 8004e6c:	4a3c      	ldr	r2, [pc, #240]	; (8004f60 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x128>)
 8004e6e:	21a4      	movs	r1, #164	; 0xa4
 8004e70:	e7f2      	b.n	8004e58 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e72:	68e0      	ldr	r0, [r4, #12]
 8004e74:	6803      	ldr	r3, [r0, #0]
 8004e76:	6a1b      	ldr	r3, [r3, #32]
 8004e78:	4798      	blx	r3
 8004e7a:	2853      	cmp	r0, #83	; 0x53
 8004e7c:	d803      	bhi.n	8004e86 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x4e>
 8004e7e:	4b3b      	ldr	r3, [pc, #236]	; (8004f6c <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x134>)
 8004e80:	4a37      	ldr	r2, [pc, #220]	; (8004f60 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x128>)
 8004e82:	21a5      	movs	r1, #165	; 0xa5
 8004e84:	e7e8      	b.n	8004e58 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x20>
    if (*currentTrans)
 8004e86:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8004f70 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8004e8a:	f014 fa7d 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8004e8e:	f014 fac9 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004e92:	f8d9 0000 	ldr.w	r0, [r9]
 8004e96:	b110      	cbz	r0, 8004e9e <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x66>
        (*currentTrans)->tearDown();
 8004e98:	6803      	ldr	r3, [r0, #0]
 8004e9a:	68db      	ldr	r3, [r3, #12]
 8004e9c:	4798      	blx	r3
    if (*currentTrans)
 8004e9e:	f8d9 0000 	ldr.w	r0, [r9]
 8004ea2:	b110      	cbz	r0, 8004eaa <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x72>
        (*currentTrans)->~Transition();
 8004ea4:	6803      	ldr	r3, [r0, #0]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	4798      	blx	r3
    if (*currentScreen)
 8004eaa:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004f74 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x13c>
 8004eae:	f8d8 0000 	ldr.w	r0, [r8]
 8004eb2:	b110      	cbz	r0, 8004eba <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004eb4:	6803      	ldr	r3, [r0, #0]
 8004eb6:	695b      	ldr	r3, [r3, #20]
 8004eb8:	4798      	blx	r3
    if (*currentPresenter)
 8004eba:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004ebe:	b110      	cbz	r0, 8004ec6 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004ec0:	6803      	ldr	r3, [r0, #0]
 8004ec2:	685b      	ldr	r3, [r3, #4]
 8004ec4:	4798      	blx	r3
    if (*currentScreen)
 8004ec6:	f8d8 0000 	ldr.w	r0, [r8]
 8004eca:	b110      	cbz	r0, 8004ed2 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004ecc:	6803      	ldr	r3, [r0, #0]
 8004ece:	681b      	ldr	r3, [r3, #0]
 8004ed0:	4798      	blx	r3
    if (*currentPresenter)
 8004ed2:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004ed6:	b110      	cbz	r0, 8004ede <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004ed8:	6803      	ldr	r3, [r0, #0]
 8004eda:	689b      	ldr	r3, [r3, #8]
 8004edc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ede:	68e0      	ldr	r0, [r4, #12]
 8004ee0:	2100      	movs	r1, #0
 8004ee2:	f7ff fec9 	bl	8004c78 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 8004ee6:	2114      	movs	r1, #20
 8004ee8:	4605      	mov	r5, r0
 8004eea:	f7ff fec9 	bl	8004c80 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004eee:	68a0      	ldr	r0, [r4, #8]
 8004ef0:	6803      	ldr	r3, [r0, #0]
 8004ef2:	2100      	movs	r1, #0
 8004ef4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ef6:	4798      	blx	r3
 8004ef8:	4606      	mov	r6, r0
 8004efa:	f006 f939 	bl	800b170 <_ZN15ProgressBarViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004efe:	6860      	ldr	r0, [r4, #4]
 8004f00:	6803      	ldr	r3, [r0, #0]
 8004f02:	2100      	movs	r1, #0
 8004f04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f06:	4798      	blx	r3
 8004f08:	4631      	mov	r1, r6
 8004f0a:	4604      	mov	r4, r0
 8004f0c:	f006 f8f6 	bl	800b0fc <_ZN20ProgressBarPresenterC1ER15ProgressBarView>
    *currentTrans = newTransition;
 8004f10:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f14:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8004f18:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f1c:	b1dc      	cbz	r4, 8004f56 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0x11e>
 8004f1e:	1d23      	adds	r3, r4, #4
 8004f20:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f24:	6833      	ldr	r3, [r6, #0]
 8004f26:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f2a:	4630      	mov	r0, r6
 8004f2c:	68db      	ldr	r3, [r3, #12]
 8004f2e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f30:	4798      	blx	r3
    newPresenter->activate();
 8004f32:	6823      	ldr	r3, [r4, #0]
 8004f34:	4620      	mov	r0, r4
 8004f36:	681b      	ldr	r3, [r3, #0]
 8004f38:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f3a:	4629      	mov	r1, r5
 8004f3c:	4630      	mov	r0, r6
 8004f3e:	f015 ff3f 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f42:	682b      	ldr	r3, [r5, #0]
 8004f44:	4628      	mov	r0, r5
 8004f46:	691b      	ldr	r3, [r3, #16]
 8004f48:	4798      	blx	r3
    newTransition->invalidate();
 8004f4a:	682b      	ldr	r3, [r5, #0]
 8004f4c:	4628      	mov	r0, r5
 8004f4e:	695b      	ldr	r3, [r3, #20]
}
 8004f50:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f54:	4718      	bx	r3
    model->bind(newPresenter);
 8004f56:	4623      	mov	r3, r4
 8004f58:	e7e2      	b.n	8004f20 <_ZN23FrontendApplicationBase45gotoProgressBarScreenSlideTransitionNorthImplEv+0xe8>
 8004f5a:	bf00      	nop
 8004f5c:	0802f918 	.word	0x0802f918
 8004f60:	0802fe64 	.word	0x0802fe64
 8004f64:	0802fab3 	.word	0x0802fab3
 8004f68:	0802fafa 	.word	0x0802fafa
 8004f6c:	0802fb9d 	.word	0x0802fb9d
 8004f70:	2001e220 	.word	0x2001e220
 8004f74:	2001e21c 	.word	0x2001e21c

08004f78 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv>:
{
 8004f78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<StartMeasurementView, StartMeasurementPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004f7c:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8004f80:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004f82:	68a0      	ldr	r0, [r4, #8]
 8004f84:	6803      	ldr	r3, [r0, #0]
 8004f86:	6a1b      	ldr	r3, [r3, #32]
 8004f88:	4798      	blx	r3
 8004f8a:	f5b0 7f94 	cmp.w	r0, #296	; 0x128
 8004f8e:	d205      	bcs.n	8004f9c <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x24>
 8004f90:	4b41      	ldr	r3, [pc, #260]	; (8005098 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x120>)
 8004f92:	4a42      	ldr	r2, [pc, #264]	; (800509c <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x124>)
 8004f94:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004f96:	4842      	ldr	r0, [pc, #264]	; (80050a0 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x128>)
 8004f98:	f027 f82c 	bl	802bff4 <__assert_func>
 8004f9c:	6860      	ldr	r0, [r4, #4]
 8004f9e:	6803      	ldr	r3, [r0, #0]
 8004fa0:	6a1b      	ldr	r3, [r3, #32]
 8004fa2:	4798      	blx	r3
 8004fa4:	280f      	cmp	r0, #15
 8004fa6:	d803      	bhi.n	8004fb0 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x38>
 8004fa8:	4b3e      	ldr	r3, [pc, #248]	; (80050a4 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x12c>)
 8004faa:	4a3c      	ldr	r2, [pc, #240]	; (800509c <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x124>)
 8004fac:	21a4      	movs	r1, #164	; 0xa4
 8004fae:	e7f2      	b.n	8004f96 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004fb0:	68e0      	ldr	r0, [r4, #12]
 8004fb2:	6803      	ldr	r3, [r0, #0]
 8004fb4:	6a1b      	ldr	r3, [r3, #32]
 8004fb6:	4798      	blx	r3
 8004fb8:	2853      	cmp	r0, #83	; 0x53
 8004fba:	d803      	bhi.n	8004fc4 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x4c>
 8004fbc:	4b3a      	ldr	r3, [pc, #232]	; (80050a8 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x130>)
 8004fbe:	4a37      	ldr	r2, [pc, #220]	; (800509c <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x124>)
 8004fc0:	21a5      	movs	r1, #165	; 0xa5
 8004fc2:	e7e8      	b.n	8004f96 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 8004fc4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80050ac <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8004fc8:	f014 f9de 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8004fcc:	f014 fa2a 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004fd0:	f8d9 0000 	ldr.w	r0, [r9]
 8004fd4:	b110      	cbz	r0, 8004fdc <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 8004fd6:	6803      	ldr	r3, [r0, #0]
 8004fd8:	68db      	ldr	r3, [r3, #12]
 8004fda:	4798      	blx	r3
    if (*currentTrans)
 8004fdc:	f8d9 0000 	ldr.w	r0, [r9]
 8004fe0:	b110      	cbz	r0, 8004fe8 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 8004fe2:	6803      	ldr	r3, [r0, #0]
 8004fe4:	681b      	ldr	r3, [r3, #0]
 8004fe6:	4798      	blx	r3
    if (*currentScreen)
 8004fe8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80050b0 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x138>
 8004fec:	f8d8 0000 	ldr.w	r0, [r8]
 8004ff0:	b110      	cbz	r0, 8004ff8 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8004ff2:	6803      	ldr	r3, [r0, #0]
 8004ff4:	695b      	ldr	r3, [r3, #20]
 8004ff6:	4798      	blx	r3
    if (*currentPresenter)
 8004ff8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8004ffc:	b110      	cbz	r0, 8005004 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004ffe:	6803      	ldr	r3, [r0, #0]
 8005000:	685b      	ldr	r3, [r3, #4]
 8005002:	4798      	blx	r3
    if (*currentScreen)
 8005004:	f8d8 0000 	ldr.w	r0, [r8]
 8005008:	b110      	cbz	r0, 8005010 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 800500a:	6803      	ldr	r3, [r0, #0]
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	4798      	blx	r3
    if (*currentPresenter)
 8005010:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005014:	b110      	cbz	r0, 800501c <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005016:	6803      	ldr	r3, [r0, #0]
 8005018:	689b      	ldr	r3, [r3, #8]
 800501a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800501c:	68e0      	ldr	r0, [r4, #12]
 800501e:	2100      	movs	r1, #0
 8005020:	f7ff fe2a 	bl	8004c78 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 8005024:	2114      	movs	r1, #20
 8005026:	4605      	mov	r5, r0
 8005028:	f7ff fe2a 	bl	8004c80 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800502c:	68a0      	ldr	r0, [r4, #8]
 800502e:	6803      	ldr	r3, [r0, #0]
 8005030:	2100      	movs	r1, #0
 8005032:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005034:	4798      	blx	r3
 8005036:	4606      	mov	r6, r0
 8005038:	f006 fa16 	bl	800b468 <_ZN20StartMeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800503c:	6860      	ldr	r0, [r4, #4]
 800503e:	6803      	ldr	r3, [r0, #0]
 8005040:	2100      	movs	r1, #0
 8005042:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005044:	4798      	blx	r3
 8005046:	4631      	mov	r1, r6
 8005048:	4604      	mov	r4, r0
 800504a:	f006 f9ed 	bl	800b428 <_ZN25StartMeasurementPresenterC1ER20StartMeasurementView>
    *currentTrans = newTransition;
 800504e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005052:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005056:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800505a:	b1dc      	cbz	r4, 8005094 <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0x11c>
 800505c:	1d23      	adds	r3, r4, #4
 800505e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005062:	6833      	ldr	r3, [r6, #0]
 8005064:	f8c4 a008 	str.w	sl, [r4, #8]
 8005068:	4630      	mov	r0, r6
 800506a:	68db      	ldr	r3, [r3, #12]
 800506c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800506e:	4798      	blx	r3
    newPresenter->activate();
 8005070:	6823      	ldr	r3, [r4, #0]
 8005072:	4620      	mov	r0, r4
 8005074:	681b      	ldr	r3, [r3, #0]
 8005076:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005078:	4629      	mov	r1, r5
 800507a:	4630      	mov	r0, r6
 800507c:	f015 fea0 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005080:	682b      	ldr	r3, [r5, #0]
 8005082:	4628      	mov	r0, r5
 8005084:	691b      	ldr	r3, [r3, #16]
 8005086:	4798      	blx	r3
    newTransition->invalidate();
 8005088:	682b      	ldr	r3, [r5, #0]
 800508a:	4628      	mov	r0, r5
 800508c:	695b      	ldr	r3, [r3, #20]
}
 800508e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005092:	4718      	bx	r3
    model->bind(newPresenter);
 8005094:	4623      	mov	r3, r4
 8005096:	e7e2      	b.n	800505e <_ZN23FrontendApplicationBase50gotoStartMeasurementScreenSlideTransitionNorthImplEv+0xe6>
 8005098:	0802f918 	.word	0x0802f918
 800509c:	0802ff84 	.word	0x0802ff84
 80050a0:	0802fab3 	.word	0x0802fab3
 80050a4:	0802fafa 	.word	0x0802fafa
 80050a8:	0802fb9d 	.word	0x0802fb9d
 80050ac:	2001e220 	.word	0x2001e220
 80050b0:	2001e21c 	.word	0x2001e21c

080050b4 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv>:
{
 80050b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<PIPageView, PIPagePresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80050b8:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 80050bc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80050be:	68a0      	ldr	r0, [r4, #8]
 80050c0:	6803      	ldr	r3, [r0, #0]
 80050c2:	6a1b      	ldr	r3, [r3, #32]
 80050c4:	4798      	blx	r3
 80050c6:	f5b0 7f96 	cmp.w	r0, #300	; 0x12c
 80050ca:	d205      	bcs.n	80050d8 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x24>
 80050cc:	4b41      	ldr	r3, [pc, #260]	; (80051d4 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x120>)
 80050ce:	4a42      	ldr	r2, [pc, #264]	; (80051d8 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x124>)
 80050d0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80050d2:	4842      	ldr	r0, [pc, #264]	; (80051dc <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x128>)
 80050d4:	f026 ff8e 	bl	802bff4 <__assert_func>
 80050d8:	6860      	ldr	r0, [r4, #4]
 80050da:	6803      	ldr	r3, [r0, #0]
 80050dc:	6a1b      	ldr	r3, [r3, #32]
 80050de:	4798      	blx	r3
 80050e0:	280f      	cmp	r0, #15
 80050e2:	d803      	bhi.n	80050ec <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x38>
 80050e4:	4b3e      	ldr	r3, [pc, #248]	; (80051e0 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x12c>)
 80050e6:	4a3c      	ldr	r2, [pc, #240]	; (80051d8 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x124>)
 80050e8:	21a4      	movs	r1, #164	; 0xa4
 80050ea:	e7f2      	b.n	80050d2 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80050ec:	68e0      	ldr	r0, [r4, #12]
 80050ee:	6803      	ldr	r3, [r0, #0]
 80050f0:	6a1b      	ldr	r3, [r3, #32]
 80050f2:	4798      	blx	r3
 80050f4:	2853      	cmp	r0, #83	; 0x53
 80050f6:	d803      	bhi.n	8005100 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x4c>
 80050f8:	4b3a      	ldr	r3, [pc, #232]	; (80051e4 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x130>)
 80050fa:	4a37      	ldr	r2, [pc, #220]	; (80051d8 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x124>)
 80050fc:	21a5      	movs	r1, #165	; 0xa5
 80050fe:	e7e8      	b.n	80050d2 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 8005100:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80051e8 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8005104:	f014 f940 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8005108:	f014 f98c 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800510c:	f8d9 0000 	ldr.w	r0, [r9]
 8005110:	b110      	cbz	r0, 8005118 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 8005112:	6803      	ldr	r3, [r0, #0]
 8005114:	68db      	ldr	r3, [r3, #12]
 8005116:	4798      	blx	r3
    if (*currentTrans)
 8005118:	f8d9 0000 	ldr.w	r0, [r9]
 800511c:	b110      	cbz	r0, 8005124 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 800511e:	6803      	ldr	r3, [r0, #0]
 8005120:	681b      	ldr	r3, [r3, #0]
 8005122:	4798      	blx	r3
    if (*currentScreen)
 8005124:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80051ec <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x138>
 8005128:	f8d8 0000 	ldr.w	r0, [r8]
 800512c:	b110      	cbz	r0, 8005134 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800512e:	6803      	ldr	r3, [r0, #0]
 8005130:	695b      	ldr	r3, [r3, #20]
 8005132:	4798      	blx	r3
    if (*currentPresenter)
 8005134:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005138:	b110      	cbz	r0, 8005140 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800513a:	6803      	ldr	r3, [r0, #0]
 800513c:	685b      	ldr	r3, [r3, #4]
 800513e:	4798      	blx	r3
    if (*currentScreen)
 8005140:	f8d8 0000 	ldr.w	r0, [r8]
 8005144:	b110      	cbz	r0, 800514c <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 8005146:	6803      	ldr	r3, [r0, #0]
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	4798      	blx	r3
    if (*currentPresenter)
 800514c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005150:	b110      	cbz	r0, 8005158 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005152:	6803      	ldr	r3, [r0, #0]
 8005154:	689b      	ldr	r3, [r3, #8]
 8005156:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005158:	68e0      	ldr	r0, [r4, #12]
 800515a:	2100      	movs	r1, #0
 800515c:	f7ff fd8c 	bl	8004c78 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 8005160:	2114      	movs	r1, #20
 8005162:	4605      	mov	r5, r0
 8005164:	f7ff fd8c 	bl	8004c80 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005168:	68a0      	ldr	r0, [r4, #8]
 800516a:	6803      	ldr	r3, [r0, #0]
 800516c:	2100      	movs	r1, #0
 800516e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005170:	4798      	blx	r3
 8005172:	4606      	mov	r6, r0
 8005174:	f005 ffaa 	bl	800b0cc <_ZN10PIPageViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005178:	6860      	ldr	r0, [r4, #4]
 800517a:	6803      	ldr	r3, [r0, #0]
 800517c:	2100      	movs	r1, #0
 800517e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005180:	4798      	blx	r3
 8005182:	4631      	mov	r1, r6
 8005184:	4604      	mov	r4, r0
 8005186:	f005 ff87 	bl	800b098 <_ZN15PIPagePresenterC1ER10PIPageView>
    *currentTrans = newTransition;
 800518a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800518e:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005192:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005196:	b1dc      	cbz	r4, 80051d0 <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0x11c>
 8005198:	1d23      	adds	r3, r4, #4
 800519a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800519e:	6833      	ldr	r3, [r6, #0]
 80051a0:	f8c4 a008 	str.w	sl, [r4, #8]
 80051a4:	4630      	mov	r0, r6
 80051a6:	68db      	ldr	r3, [r3, #12]
 80051a8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80051aa:	4798      	blx	r3
    newPresenter->activate();
 80051ac:	6823      	ldr	r3, [r4, #0]
 80051ae:	4620      	mov	r0, r4
 80051b0:	681b      	ldr	r3, [r3, #0]
 80051b2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80051b4:	4629      	mov	r1, r5
 80051b6:	4630      	mov	r0, r6
 80051b8:	f015 fe02 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80051bc:	682b      	ldr	r3, [r5, #0]
 80051be:	4628      	mov	r0, r5
 80051c0:	691b      	ldr	r3, [r3, #16]
 80051c2:	4798      	blx	r3
    newTransition->invalidate();
 80051c4:	682b      	ldr	r3, [r5, #0]
 80051c6:	4628      	mov	r0, r5
 80051c8:	695b      	ldr	r3, [r3, #20]
}
 80051ca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80051ce:	4718      	bx	r3
    model->bind(newPresenter);
 80051d0:	4623      	mov	r3, r4
 80051d2:	e7e2      	b.n	800519a <_ZN23FrontendApplicationBase40gotoPIPageScreenSlideTransitionNorthImplEv+0xe6>
 80051d4:	0802f918 	.word	0x0802f918
 80051d8:	080300ae 	.word	0x080300ae
 80051dc:	0802fab3 	.word	0x0802fab3
 80051e0:	0802fafa 	.word	0x0802fafa
 80051e4:	0802fb9d 	.word	0x0802fb9d
 80051e8:	2001e220 	.word	0x2001e220
 80051ec:	2001e21c 	.word	0x2001e21c

080051f0 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv>:
{
 80051f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<KnownPageView, KnownPagePresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80051f4:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 80051f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80051fa:	68a0      	ldr	r0, [r4, #8]
 80051fc:	6803      	ldr	r3, [r0, #0]
 80051fe:	6a1b      	ldr	r3, [r3, #32]
 8005200:	4798      	blx	r3
 8005202:	f5b0 7fe4 	cmp.w	r0, #456	; 0x1c8
 8005206:	d205      	bcs.n	8005214 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x24>
 8005208:	4b41      	ldr	r3, [pc, #260]	; (8005310 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x120>)
 800520a:	4a42      	ldr	r2, [pc, #264]	; (8005314 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x124>)
 800520c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800520e:	4842      	ldr	r0, [pc, #264]	; (8005318 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x128>)
 8005210:	f026 fef0 	bl	802bff4 <__assert_func>
 8005214:	6860      	ldr	r0, [r4, #4]
 8005216:	6803      	ldr	r3, [r0, #0]
 8005218:	6a1b      	ldr	r3, [r3, #32]
 800521a:	4798      	blx	r3
 800521c:	280f      	cmp	r0, #15
 800521e:	d803      	bhi.n	8005228 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x38>
 8005220:	4b3e      	ldr	r3, [pc, #248]	; (800531c <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x12c>)
 8005222:	4a3c      	ldr	r2, [pc, #240]	; (8005314 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x124>)
 8005224:	21a4      	movs	r1, #164	; 0xa4
 8005226:	e7f2      	b.n	800520e <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005228:	68e0      	ldr	r0, [r4, #12]
 800522a:	6803      	ldr	r3, [r0, #0]
 800522c:	6a1b      	ldr	r3, [r3, #32]
 800522e:	4798      	blx	r3
 8005230:	2853      	cmp	r0, #83	; 0x53
 8005232:	d803      	bhi.n	800523c <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x4c>
 8005234:	4b3a      	ldr	r3, [pc, #232]	; (8005320 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x130>)
 8005236:	4a37      	ldr	r2, [pc, #220]	; (8005314 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x124>)
 8005238:	21a5      	movs	r1, #165	; 0xa5
 800523a:	e7e8      	b.n	800520e <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 800523c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005324 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8005240:	f014 f8a2 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8005244:	f014 f8ee 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005248:	f8d9 0000 	ldr.w	r0, [r9]
 800524c:	b110      	cbz	r0, 8005254 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 800524e:	6803      	ldr	r3, [r0, #0]
 8005250:	68db      	ldr	r3, [r3, #12]
 8005252:	4798      	blx	r3
    if (*currentTrans)
 8005254:	f8d9 0000 	ldr.w	r0, [r9]
 8005258:	b110      	cbz	r0, 8005260 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 800525a:	6803      	ldr	r3, [r0, #0]
 800525c:	681b      	ldr	r3, [r3, #0]
 800525e:	4798      	blx	r3
    if (*currentScreen)
 8005260:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005328 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x138>
 8005264:	f8d8 0000 	ldr.w	r0, [r8]
 8005268:	b110      	cbz	r0, 8005270 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800526a:	6803      	ldr	r3, [r0, #0]
 800526c:	695b      	ldr	r3, [r3, #20]
 800526e:	4798      	blx	r3
    if (*currentPresenter)
 8005270:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005274:	b110      	cbz	r0, 800527c <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8005276:	6803      	ldr	r3, [r0, #0]
 8005278:	685b      	ldr	r3, [r3, #4]
 800527a:	4798      	blx	r3
    if (*currentScreen)
 800527c:	f8d8 0000 	ldr.w	r0, [r8]
 8005280:	b110      	cbz	r0, 8005288 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 8005282:	6803      	ldr	r3, [r0, #0]
 8005284:	681b      	ldr	r3, [r3, #0]
 8005286:	4798      	blx	r3
    if (*currentPresenter)
 8005288:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800528c:	b110      	cbz	r0, 8005294 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800528e:	6803      	ldr	r3, [r0, #0]
 8005290:	689b      	ldr	r3, [r3, #8]
 8005292:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005294:	68e0      	ldr	r0, [r4, #12]
 8005296:	2100      	movs	r1, #0
 8005298:	f7ff fcee 	bl	8004c78 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 800529c:	2114      	movs	r1, #20
 800529e:	4605      	mov	r5, r0
 80052a0:	f7ff fcee 	bl	8004c80 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80052a4:	68a0      	ldr	r0, [r4, #8]
 80052a6:	6803      	ldr	r3, [r0, #0]
 80052a8:	2100      	movs	r1, #0
 80052aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052ac:	4798      	blx	r3
 80052ae:	4606      	mov	r6, r0
 80052b0:	f005 fe96 	bl	800afe0 <_ZN13KnownPageViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80052b4:	6860      	ldr	r0, [r4, #4]
 80052b6:	6803      	ldr	r3, [r0, #0]
 80052b8:	2100      	movs	r1, #0
 80052ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052bc:	4798      	blx	r3
 80052be:	4631      	mov	r1, r6
 80052c0:	4604      	mov	r4, r0
 80052c2:	f005 fe73 	bl	800afac <_ZN18KnownPagePresenterC1ER13KnownPageView>
    *currentTrans = newTransition;
 80052c6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80052ca:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80052ce:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80052d2:	b1dc      	cbz	r4, 800530c <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0x11c>
 80052d4:	1d23      	adds	r3, r4, #4
 80052d6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80052da:	6833      	ldr	r3, [r6, #0]
 80052dc:	f8c4 a008 	str.w	sl, [r4, #8]
 80052e0:	4630      	mov	r0, r6
 80052e2:	68db      	ldr	r3, [r3, #12]
 80052e4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80052e6:	4798      	blx	r3
    newPresenter->activate();
 80052e8:	6823      	ldr	r3, [r4, #0]
 80052ea:	4620      	mov	r0, r4
 80052ec:	681b      	ldr	r3, [r3, #0]
 80052ee:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80052f0:	4629      	mov	r1, r5
 80052f2:	4630      	mov	r0, r6
 80052f4:	f015 fd64 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80052f8:	682b      	ldr	r3, [r5, #0]
 80052fa:	4628      	mov	r0, r5
 80052fc:	691b      	ldr	r3, [r3, #16]
 80052fe:	4798      	blx	r3
    newTransition->invalidate();
 8005300:	682b      	ldr	r3, [r5, #0]
 8005302:	4628      	mov	r0, r5
 8005304:	695b      	ldr	r3, [r3, #20]
}
 8005306:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800530a:	4718      	bx	r3
    model->bind(newPresenter);
 800530c:	4623      	mov	r3, r4
 800530e:	e7e2      	b.n	80052d6 <_ZN23FrontendApplicationBase43gotoKnownPageScreenSlideTransitionNorthImplEv+0xe6>
 8005310:	0802f918 	.word	0x0802f918
 8005314:	080301c4 	.word	0x080301c4
 8005318:	0802fab3 	.word	0x0802fab3
 800531c:	0802fafa 	.word	0x0802fafa
 8005320:	0802fb9d 	.word	0x0802fb9d
 8005324:	2001e220 	.word	0x2001e220
 8005328:	2001e21c 	.word	0x2001e21c

0800532c <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv>:
{
 800532c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<InstructionPage2View, InstructionPage2Presenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005330:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005334:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005336:	68a0      	ldr	r0, [r4, #8]
 8005338:	6803      	ldr	r3, [r0, #0]
 800533a:	6a1b      	ldr	r3, [r3, #32]
 800533c:	4798      	blx	r3
 800533e:	f5b0 7fce 	cmp.w	r0, #412	; 0x19c
 8005342:	d205      	bcs.n	8005350 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x24>
 8005344:	4b41      	ldr	r3, [pc, #260]	; (800544c <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x120>)
 8005346:	4a42      	ldr	r2, [pc, #264]	; (8005450 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x124>)
 8005348:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800534a:	4842      	ldr	r0, [pc, #264]	; (8005454 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x128>)
 800534c:	f026 fe52 	bl	802bff4 <__assert_func>
 8005350:	6860      	ldr	r0, [r4, #4]
 8005352:	6803      	ldr	r3, [r0, #0]
 8005354:	6a1b      	ldr	r3, [r3, #32]
 8005356:	4798      	blx	r3
 8005358:	280f      	cmp	r0, #15
 800535a:	d803      	bhi.n	8005364 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x38>
 800535c:	4b3e      	ldr	r3, [pc, #248]	; (8005458 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x12c>)
 800535e:	4a3c      	ldr	r2, [pc, #240]	; (8005450 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x124>)
 8005360:	21a4      	movs	r1, #164	; 0xa4
 8005362:	e7f2      	b.n	800534a <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005364:	68e0      	ldr	r0, [r4, #12]
 8005366:	6803      	ldr	r3, [r0, #0]
 8005368:	6a1b      	ldr	r3, [r3, #32]
 800536a:	4798      	blx	r3
 800536c:	2853      	cmp	r0, #83	; 0x53
 800536e:	d803      	bhi.n	8005378 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x4c>
 8005370:	4b3a      	ldr	r3, [pc, #232]	; (800545c <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x130>)
 8005372:	4a37      	ldr	r2, [pc, #220]	; (8005450 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x124>)
 8005374:	21a5      	movs	r1, #165	; 0xa5
 8005376:	e7e8      	b.n	800534a <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 8005378:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005460 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 800537c:	f014 f804 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8005380:	f014 f850 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005384:	f8d9 0000 	ldr.w	r0, [r9]
 8005388:	b110      	cbz	r0, 8005390 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 800538a:	6803      	ldr	r3, [r0, #0]
 800538c:	68db      	ldr	r3, [r3, #12]
 800538e:	4798      	blx	r3
    if (*currentTrans)
 8005390:	f8d9 0000 	ldr.w	r0, [r9]
 8005394:	b110      	cbz	r0, 800539c <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 8005396:	6803      	ldr	r3, [r0, #0]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	4798      	blx	r3
    if (*currentScreen)
 800539c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005464 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x138>
 80053a0:	f8d8 0000 	ldr.w	r0, [r8]
 80053a4:	b110      	cbz	r0, 80053ac <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80053a6:	6803      	ldr	r3, [r0, #0]
 80053a8:	695b      	ldr	r3, [r3, #20]
 80053aa:	4798      	blx	r3
    if (*currentPresenter)
 80053ac:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80053b0:	b110      	cbz	r0, 80053b8 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80053b2:	6803      	ldr	r3, [r0, #0]
 80053b4:	685b      	ldr	r3, [r3, #4]
 80053b6:	4798      	blx	r3
    if (*currentScreen)
 80053b8:	f8d8 0000 	ldr.w	r0, [r8]
 80053bc:	b110      	cbz	r0, 80053c4 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 80053be:	6803      	ldr	r3, [r0, #0]
 80053c0:	681b      	ldr	r3, [r3, #0]
 80053c2:	4798      	blx	r3
    if (*currentPresenter)
 80053c4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80053c8:	b110      	cbz	r0, 80053d0 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80053ca:	6803      	ldr	r3, [r0, #0]
 80053cc:	689b      	ldr	r3, [r3, #8]
 80053ce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80053d0:	68e0      	ldr	r0, [r4, #12]
 80053d2:	2100      	movs	r1, #0
 80053d4:	f7ff fc50 	bl	8004c78 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 80053d8:	2114      	movs	r1, #20
 80053da:	4605      	mov	r5, r0
 80053dc:	f7ff fc50 	bl	8004c80 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80053e0:	68a0      	ldr	r0, [r4, #8]
 80053e2:	6803      	ldr	r3, [r0, #0]
 80053e4:	2100      	movs	r1, #0
 80053e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053e8:	4798      	blx	r3
 80053ea:	4606      	mov	r6, r0
 80053ec:	f005 fdc6 	bl	800af7c <_ZN20InstructionPage2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80053f0:	6860      	ldr	r0, [r4, #4]
 80053f2:	6803      	ldr	r3, [r0, #0]
 80053f4:	2100      	movs	r1, #0
 80053f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053f8:	4798      	blx	r3
 80053fa:	4631      	mov	r1, r6
 80053fc:	4604      	mov	r4, r0
 80053fe:	f005 fda3 	bl	800af48 <_ZN25InstructionPage2PresenterC1ER20InstructionPage2View>
    *currentTrans = newTransition;
 8005402:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005406:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800540a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800540e:	b1dc      	cbz	r4, 8005448 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0x11c>
 8005410:	1d23      	adds	r3, r4, #4
 8005412:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005416:	6833      	ldr	r3, [r6, #0]
 8005418:	f8c4 a008 	str.w	sl, [r4, #8]
 800541c:	4630      	mov	r0, r6
 800541e:	68db      	ldr	r3, [r3, #12]
 8005420:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005422:	4798      	blx	r3
    newPresenter->activate();
 8005424:	6823      	ldr	r3, [r4, #0]
 8005426:	4620      	mov	r0, r4
 8005428:	681b      	ldr	r3, [r3, #0]
 800542a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800542c:	4629      	mov	r1, r5
 800542e:	4630      	mov	r0, r6
 8005430:	f015 fcc6 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005434:	682b      	ldr	r3, [r5, #0]
 8005436:	4628      	mov	r0, r5
 8005438:	691b      	ldr	r3, [r3, #16]
 800543a:	4798      	blx	r3
    newTransition->invalidate();
 800543c:	682b      	ldr	r3, [r5, #0]
 800543e:	4628      	mov	r0, r5
 8005440:	695b      	ldr	r3, [r3, #20]
}
 8005442:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005446:	4718      	bx	r3
    model->bind(newPresenter);
 8005448:	4623      	mov	r3, r4
 800544a:	e7e2      	b.n	8005412 <_ZN23FrontendApplicationBase50gotoInstructionPage2ScreenSlideTransitionNorthImplEv+0xe6>
 800544c:	0802f918 	.word	0x0802f918
 8005450:	080302e0 	.word	0x080302e0
 8005454:	0802fab3 	.word	0x0802fab3
 8005458:	0802fafa 	.word	0x0802fafa
 800545c:	0802fb9d 	.word	0x0802fb9d
 8005460:	2001e220 	.word	0x2001e220
 8005464:	2001e21c 	.word	0x2001e21c

08005468 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv>:
{
 8005468:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<InstructionPage1View, InstructionPage1Presenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800546c:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005470:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005472:	68a0      	ldr	r0, [r4, #8]
 8005474:	6803      	ldr	r3, [r0, #0]
 8005476:	6a1b      	ldr	r3, [r3, #32]
 8005478:	4798      	blx	r3
 800547a:	f5b0 7fb0 	cmp.w	r0, #352	; 0x160
 800547e:	d205      	bcs.n	800548c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x24>
 8005480:	4b41      	ldr	r3, [pc, #260]	; (8005588 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x120>)
 8005482:	4a42      	ldr	r2, [pc, #264]	; (800558c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x124>)
 8005484:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005486:	4842      	ldr	r0, [pc, #264]	; (8005590 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x128>)
 8005488:	f026 fdb4 	bl	802bff4 <__assert_func>
 800548c:	6860      	ldr	r0, [r4, #4]
 800548e:	6803      	ldr	r3, [r0, #0]
 8005490:	6a1b      	ldr	r3, [r3, #32]
 8005492:	4798      	blx	r3
 8005494:	280f      	cmp	r0, #15
 8005496:	d803      	bhi.n	80054a0 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x38>
 8005498:	4b3e      	ldr	r3, [pc, #248]	; (8005594 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x12c>)
 800549a:	4a3c      	ldr	r2, [pc, #240]	; (800558c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x124>)
 800549c:	21a4      	movs	r1, #164	; 0xa4
 800549e:	e7f2      	b.n	8005486 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80054a0:	68e0      	ldr	r0, [r4, #12]
 80054a2:	6803      	ldr	r3, [r0, #0]
 80054a4:	6a1b      	ldr	r3, [r3, #32]
 80054a6:	4798      	blx	r3
 80054a8:	2853      	cmp	r0, #83	; 0x53
 80054aa:	d803      	bhi.n	80054b4 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x4c>
 80054ac:	4b3a      	ldr	r3, [pc, #232]	; (8005598 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x130>)
 80054ae:	4a37      	ldr	r2, [pc, #220]	; (800558c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x124>)
 80054b0:	21a5      	movs	r1, #165	; 0xa5
 80054b2:	e7e8      	b.n	8005486 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 80054b4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800559c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 80054b8:	f013 ff66 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 80054bc:	f013 ffb2 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80054c0:	f8d9 0000 	ldr.w	r0, [r9]
 80054c4:	b110      	cbz	r0, 80054cc <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 80054c6:	6803      	ldr	r3, [r0, #0]
 80054c8:	68db      	ldr	r3, [r3, #12]
 80054ca:	4798      	blx	r3
    if (*currentTrans)
 80054cc:	f8d9 0000 	ldr.w	r0, [r9]
 80054d0:	b110      	cbz	r0, 80054d8 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 80054d2:	6803      	ldr	r3, [r0, #0]
 80054d4:	681b      	ldr	r3, [r3, #0]
 80054d6:	4798      	blx	r3
    if (*currentScreen)
 80054d8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80055a0 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x138>
 80054dc:	f8d8 0000 	ldr.w	r0, [r8]
 80054e0:	b110      	cbz	r0, 80054e8 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80054e2:	6803      	ldr	r3, [r0, #0]
 80054e4:	695b      	ldr	r3, [r3, #20]
 80054e6:	4798      	blx	r3
    if (*currentPresenter)
 80054e8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80054ec:	b110      	cbz	r0, 80054f4 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80054ee:	6803      	ldr	r3, [r0, #0]
 80054f0:	685b      	ldr	r3, [r3, #4]
 80054f2:	4798      	blx	r3
    if (*currentScreen)
 80054f4:	f8d8 0000 	ldr.w	r0, [r8]
 80054f8:	b110      	cbz	r0, 8005500 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 80054fa:	6803      	ldr	r3, [r0, #0]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	4798      	blx	r3
    if (*currentPresenter)
 8005500:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005504:	b110      	cbz	r0, 800550c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005506:	6803      	ldr	r3, [r0, #0]
 8005508:	689b      	ldr	r3, [r3, #8]
 800550a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800550c:	68e0      	ldr	r0, [r4, #12]
 800550e:	2100      	movs	r1, #0
 8005510:	f7ff fbb2 	bl	8004c78 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 8005514:	2114      	movs	r1, #20
 8005516:	4605      	mov	r5, r0
 8005518:	f7ff fbb2 	bl	8004c80 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800551c:	68a0      	ldr	r0, [r4, #8]
 800551e:	6803      	ldr	r3, [r0, #0]
 8005520:	2100      	movs	r1, #0
 8005522:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005524:	4798      	blx	r3
 8005526:	4606      	mov	r6, r0
 8005528:	f005 fcf6 	bl	800af18 <_ZN20InstructionPage1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800552c:	6860      	ldr	r0, [r4, #4]
 800552e:	6803      	ldr	r3, [r0, #0]
 8005530:	2100      	movs	r1, #0
 8005532:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005534:	4798      	blx	r3
 8005536:	4631      	mov	r1, r6
 8005538:	4604      	mov	r4, r0
 800553a:	f005 fcd3 	bl	800aee4 <_ZN25InstructionPage1PresenterC1ER20InstructionPage1View>
    *currentTrans = newTransition;
 800553e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005542:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005546:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800554a:	b1dc      	cbz	r4, 8005584 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0x11c>
 800554c:	1d23      	adds	r3, r4, #4
 800554e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005552:	6833      	ldr	r3, [r6, #0]
 8005554:	f8c4 a008 	str.w	sl, [r4, #8]
 8005558:	4630      	mov	r0, r6
 800555a:	68db      	ldr	r3, [r3, #12]
 800555c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800555e:	4798      	blx	r3
    newPresenter->activate();
 8005560:	6823      	ldr	r3, [r4, #0]
 8005562:	4620      	mov	r0, r4
 8005564:	681b      	ldr	r3, [r3, #0]
 8005566:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005568:	4629      	mov	r1, r5
 800556a:	4630      	mov	r0, r6
 800556c:	f015 fc28 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005570:	682b      	ldr	r3, [r5, #0]
 8005572:	4628      	mov	r0, r5
 8005574:	691b      	ldr	r3, [r3, #16]
 8005576:	4798      	blx	r3
    newTransition->invalidate();
 8005578:	682b      	ldr	r3, [r5, #0]
 800557a:	4628      	mov	r0, r5
 800557c:	695b      	ldr	r3, [r3, #20]
}
 800557e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005582:	4718      	bx	r3
    model->bind(newPresenter);
 8005584:	4623      	mov	r3, r4
 8005586:	e7e2      	b.n	800554e <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionNorthImplEv+0xe6>
 8005588:	0802f918 	.word	0x0802f918
 800558c:	0803040a 	.word	0x0803040a
 8005590:	0802fab3 	.word	0x0802fab3
 8005594:	0802fafa 	.word	0x0802fafa
 8005598:	0802fb9d 	.word	0x0802fb9d
 800559c:	2001e220 	.word	0x2001e220
 80055a0:	2001e21c 	.word	0x2001e21c

080055a4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 80055a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          calculatedValue(0)
 80055a6:	4605      	mov	r5, r0
 80055a8:	2600      	movs	r6, #0
 80055aa:	4b18      	ldr	r3, [pc, #96]	; (800560c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh+0x68>)
 80055ac:	6046      	str	r6, [r0, #4]
 80055ae:	7206      	strb	r6, [r0, #8]
 80055b0:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 80055b4:	4604      	mov	r4, r0
          calculatedValue(0)
 80055b6:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 80055b8:	460f      	mov	r7, r1
          calculatedValue(0)
 80055ba:	f011 f877 	bl	80166ac <_ZN8touchgfx14SnapshotWidgetC1Ev>
 80055be:	4b14      	ldr	r3, [pc, #80]	; (8005610 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh+0x6c>)
 80055c0:	63a5      	str	r5, [r4, #56]	; 0x38
 80055c2:	e9c4 340f 	strd	r3, r4, [r4, #60]	; 0x3c
 80055c6:	2220      	movs	r2, #32
 80055c8:	2301      	movs	r3, #1
 80055ca:	e9c4 2311 	strd	r2, r3, [r4, #68]	; 0x44
        if (HAL::USE_ANIMATION_STORAGE)
 80055ce:	4b11      	ldr	r3, [pc, #68]	; (8005614 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh+0x70>)
          calculatedValue(0)
 80055d0:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
        if (HAL::USE_ANIMATION_STORAGE)
 80055d4:	781b      	ldrb	r3, [r3, #0]
          calculatedValue(0)
 80055d6:	f884 604d 	strb.w	r6, [r4, #77]	; 0x4d
 80055da:	f8a4 6050 	strh.w	r6, [r4, #80]	; 0x50
        if (HAL::USE_ANIMATION_STORAGE)
 80055de:	b193      	cbz	r3, 8005606 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh+0x62>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80055e0:	4f0d      	ldr	r7, [pc, #52]	; (8005618 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh+0x74>)
 80055e2:	f9b7 3000 	ldrsh.w	r3, [r7]
 80055e6:	9300      	str	r3, [sp, #0]
 80055e8:	4b0c      	ldr	r3, [pc, #48]	; (800561c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh+0x78>)
 80055ea:	4632      	mov	r2, r6
 80055ec:	f9b3 3000 	ldrsh.w	r3, [r3]
 80055f0:	4631      	mov	r1, r6
 80055f2:	4628      	mov	r0, r5
 80055f4:	f7ff f9f4 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
            snapshot.makeSnapshot();
 80055f8:	4628      	mov	r0, r5
 80055fa:	f010 ffd3 	bl	80165a4 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
                targetValue = -HAL::DISPLAY_HEIGHT;
 80055fe:	883b      	ldrh	r3, [r7, #0]
 8005600:	425b      	negs	r3, r3
 8005602:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
    }
 8005606:	4620      	mov	r0, r4
 8005608:	b003      	add	sp, #12
 800560a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800560c:	08030e8c 	.word	0x08030e8c
 8005610:	08030e74 	.word	0x08030e74
 8005614:	2001e1bf 	.word	0x2001e1bf
 8005618:	2001e1b6 	.word	0x2001e1b6
 800561c:	2001e1b4 	.word	0x2001e1b4

08005620 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv>:
{
 8005620:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<InstructionPage1View, InstructionPage1Presenter, touchgfx::SlideTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005624:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005628:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800562a:	68a0      	ldr	r0, [r4, #8]
 800562c:	6803      	ldr	r3, [r0, #0]
 800562e:	6a1b      	ldr	r3, [r3, #32]
 8005630:	4798      	blx	r3
 8005632:	f5b0 7fb0 	cmp.w	r0, #352	; 0x160
 8005636:	d205      	bcs.n	8005644 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x24>
 8005638:	4b42      	ldr	r3, [pc, #264]	; (8005744 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x124>)
 800563a:	4a43      	ldr	r2, [pc, #268]	; (8005748 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x128>)
 800563c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800563e:	4843      	ldr	r0, [pc, #268]	; (800574c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x12c>)
 8005640:	f026 fcd8 	bl	802bff4 <__assert_func>
 8005644:	6860      	ldr	r0, [r4, #4]
 8005646:	6803      	ldr	r3, [r0, #0]
 8005648:	6a1b      	ldr	r3, [r3, #32]
 800564a:	4798      	blx	r3
 800564c:	280f      	cmp	r0, #15
 800564e:	d803      	bhi.n	8005658 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x38>
 8005650:	4b3f      	ldr	r3, [pc, #252]	; (8005750 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x130>)
 8005652:	4a3d      	ldr	r2, [pc, #244]	; (8005748 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x128>)
 8005654:	21a4      	movs	r1, #164	; 0xa4
 8005656:	e7f2      	b.n	800563e <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005658:	68e0      	ldr	r0, [r4, #12]
 800565a:	6803      	ldr	r3, [r0, #0]
 800565c:	6a1b      	ldr	r3, [r3, #32]
 800565e:	4798      	blx	r3
 8005660:	2853      	cmp	r0, #83	; 0x53
 8005662:	d803      	bhi.n	800566c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x4c>
 8005664:	4b3b      	ldr	r3, [pc, #236]	; (8005754 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x134>)
 8005666:	4a38      	ldr	r2, [pc, #224]	; (8005748 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x128>)
 8005668:	21a5      	movs	r1, #165	; 0xa5
 800566a:	e7e8      	b.n	800563e <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x1e>
    if (*currentTrans)
 800566c:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8005758 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8005670:	f013 fe8a 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8005674:	f013 fed6 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005678:	f8d9 0000 	ldr.w	r0, [r9]
 800567c:	b110      	cbz	r0, 8005684 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x64>
        (*currentTrans)->tearDown();
 800567e:	6803      	ldr	r3, [r0, #0]
 8005680:	68db      	ldr	r3, [r3, #12]
 8005682:	4798      	blx	r3
    if (*currentTrans)
 8005684:	f8d9 0000 	ldr.w	r0, [r9]
 8005688:	b110      	cbz	r0, 8005690 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x70>
        (*currentTrans)->~Transition();
 800568a:	6803      	ldr	r3, [r0, #0]
 800568c:	681b      	ldr	r3, [r3, #0]
 800568e:	4798      	blx	r3
    if (*currentScreen)
 8005690:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800575c <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x13c>
 8005694:	f8d8 0000 	ldr.w	r0, [r8]
 8005698:	b110      	cbz	r0, 80056a0 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800569a:	6803      	ldr	r3, [r0, #0]
 800569c:	695b      	ldr	r3, [r3, #20]
 800569e:	4798      	blx	r3
    if (*currentPresenter)
 80056a0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80056a4:	b110      	cbz	r0, 80056ac <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80056a6:	6803      	ldr	r3, [r0, #0]
 80056a8:	685b      	ldr	r3, [r3, #4]
 80056aa:	4798      	blx	r3
    if (*currentScreen)
 80056ac:	f8d8 0000 	ldr.w	r0, [r8]
 80056b0:	b110      	cbz	r0, 80056b8 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x98>
        (*currentScreen)->~Screen();
 80056b2:	6803      	ldr	r3, [r0, #0]
 80056b4:	681b      	ldr	r3, [r3, #0]
 80056b6:	4798      	blx	r3
    if (*currentPresenter)
 80056b8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80056bc:	b110      	cbz	r0, 80056c4 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80056be:	6803      	ldr	r3, [r0, #0]
 80056c0:	689b      	ldr	r3, [r3, #8]
 80056c2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80056c4:	68e0      	ldr	r0, [r4, #12]
 80056c6:	6803      	ldr	r3, [r0, #0]
 80056c8:	2100      	movs	r1, #0
 80056ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056cc:	4798      	blx	r3
 80056ce:	2114      	movs	r1, #20
 80056d0:	4605      	mov	r5, r0
 80056d2:	f7ff ff67 	bl	80055a4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80056d6:	68a0      	ldr	r0, [r4, #8]
 80056d8:	6803      	ldr	r3, [r0, #0]
 80056da:	2100      	movs	r1, #0
 80056dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056de:	4798      	blx	r3
 80056e0:	4606      	mov	r6, r0
 80056e2:	f005 fc19 	bl	800af18 <_ZN20InstructionPage1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80056e6:	6860      	ldr	r0, [r4, #4]
 80056e8:	6803      	ldr	r3, [r0, #0]
 80056ea:	2100      	movs	r1, #0
 80056ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056ee:	4798      	blx	r3
 80056f0:	4631      	mov	r1, r6
 80056f2:	4604      	mov	r4, r0
 80056f4:	f005 fbf6 	bl	800aee4 <_ZN25InstructionPage1PresenterC1ER20InstructionPage1View>
    *currentTrans = newTransition;
 80056f8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80056fc:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005700:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005704:	b1dc      	cbz	r4, 800573e <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0x11e>
 8005706:	1d23      	adds	r3, r4, #4
 8005708:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800570c:	6833      	ldr	r3, [r6, #0]
 800570e:	f8c4 a008 	str.w	sl, [r4, #8]
 8005712:	4630      	mov	r0, r6
 8005714:	68db      	ldr	r3, [r3, #12]
 8005716:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005718:	4798      	blx	r3
    newPresenter->activate();
 800571a:	6823      	ldr	r3, [r4, #0]
 800571c:	4620      	mov	r0, r4
 800571e:	681b      	ldr	r3, [r3, #0]
 8005720:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005722:	4629      	mov	r1, r5
 8005724:	4630      	mov	r0, r6
 8005726:	f015 fb4b 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800572a:	682b      	ldr	r3, [r5, #0]
 800572c:	4628      	mov	r0, r5
 800572e:	691b      	ldr	r3, [r3, #16]
 8005730:	4798      	blx	r3
    newTransition->invalidate();
 8005732:	682b      	ldr	r3, [r5, #0]
 8005734:	4628      	mov	r0, r5
 8005736:	695b      	ldr	r3, [r3, #20]
}
 8005738:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800573c:	4718      	bx	r3
    model->bind(newPresenter);
 800573e:	4623      	mov	r3, r4
 8005740:	e7e2      	b.n	8005708 <_ZN23FrontendApplicationBase50gotoInstructionPage1ScreenSlideTransitionSouthImplEv+0xe8>
 8005742:	bf00      	nop
 8005744:	0802f918 	.word	0x0802f918
 8005748:	08030534 	.word	0x08030534
 800574c:	0802fab3 	.word	0x0802fab3
 8005750:	0802fafa 	.word	0x0802fafa
 8005754:	0802fb9d 	.word	0x0802fb9d
 8005758:	2001e220 	.word	0x2001e220
 800575c:	2001e21c 	.word	0x2001e21c

08005760 <_ZN8touchgfx17AbstractPartition2atI19DataDisplayListViewEERT_t>:
 8005760:	6803      	ldr	r3, [r0, #0]
 8005762:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005764:	4718      	bx	r3

08005766 <_ZN8touchgfx17AbstractPartition2atI24DataDisplayListPresenterEERT_t>:
 8005766:	6803      	ldr	r3, [r0, #0]
 8005768:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800576a:	4718      	bx	r3

0800576c <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv>:
{
 800576c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<DataDisplayListView, DataDisplayListPresenter, touchgfx::SlideTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005770:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005774:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005776:	68a0      	ldr	r0, [r4, #8]
 8005778:	6803      	ldr	r3, [r0, #0]
 800577a:	6a1b      	ldr	r3, [r3, #32]
 800577c:	4798      	blx	r3
 800577e:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 8005782:	d205      	bcs.n	8005790 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x24>
 8005784:	4b41      	ldr	r3, [pc, #260]	; (800588c <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x120>)
 8005786:	4a42      	ldr	r2, [pc, #264]	; (8005890 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x124>)
 8005788:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800578a:	4842      	ldr	r0, [pc, #264]	; (8005894 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x128>)
 800578c:	f026 fc32 	bl	802bff4 <__assert_func>
 8005790:	6860      	ldr	r0, [r4, #4]
 8005792:	6803      	ldr	r3, [r0, #0]
 8005794:	6a1b      	ldr	r3, [r3, #32]
 8005796:	4798      	blx	r3
 8005798:	280f      	cmp	r0, #15
 800579a:	d803      	bhi.n	80057a4 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x38>
 800579c:	4b3e      	ldr	r3, [pc, #248]	; (8005898 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x12c>)
 800579e:	4a3c      	ldr	r2, [pc, #240]	; (8005890 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x124>)
 80057a0:	21a4      	movs	r1, #164	; 0xa4
 80057a2:	e7f2      	b.n	800578a <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80057a4:	68e0      	ldr	r0, [r4, #12]
 80057a6:	6803      	ldr	r3, [r0, #0]
 80057a8:	6a1b      	ldr	r3, [r3, #32]
 80057aa:	4798      	blx	r3
 80057ac:	2853      	cmp	r0, #83	; 0x53
 80057ae:	d803      	bhi.n	80057b8 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x4c>
 80057b0:	4b3a      	ldr	r3, [pc, #232]	; (800589c <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x130>)
 80057b2:	4a37      	ldr	r2, [pc, #220]	; (8005890 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x124>)
 80057b4:	21a5      	movs	r1, #165	; 0xa5
 80057b6:	e7e8      	b.n	800578a <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x1e>
    if (*currentTrans)
 80057b8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80058a0 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 80057bc:	f013 fde4 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 80057c0:	f013 fe30 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80057c4:	f8d9 0000 	ldr.w	r0, [r9]
 80057c8:	b110      	cbz	r0, 80057d0 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x64>
        (*currentTrans)->tearDown();
 80057ca:	6803      	ldr	r3, [r0, #0]
 80057cc:	68db      	ldr	r3, [r3, #12]
 80057ce:	4798      	blx	r3
    if (*currentTrans)
 80057d0:	f8d9 0000 	ldr.w	r0, [r9]
 80057d4:	b110      	cbz	r0, 80057dc <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x70>
        (*currentTrans)->~Transition();
 80057d6:	6803      	ldr	r3, [r0, #0]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	4798      	blx	r3
    if (*currentScreen)
 80057dc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80058a4 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x138>
 80057e0:	f8d8 0000 	ldr.w	r0, [r8]
 80057e4:	b110      	cbz	r0, 80057ec <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80057e6:	6803      	ldr	r3, [r0, #0]
 80057e8:	695b      	ldr	r3, [r3, #20]
 80057ea:	4798      	blx	r3
    if (*currentPresenter)
 80057ec:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80057f0:	b110      	cbz	r0, 80057f8 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80057f2:	6803      	ldr	r3, [r0, #0]
 80057f4:	685b      	ldr	r3, [r3, #4]
 80057f6:	4798      	blx	r3
    if (*currentScreen)
 80057f8:	f8d8 0000 	ldr.w	r0, [r8]
 80057fc:	b110      	cbz	r0, 8005804 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x98>
        (*currentScreen)->~Screen();
 80057fe:	6803      	ldr	r3, [r0, #0]
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	4798      	blx	r3
    if (*currentPresenter)
 8005804:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005808:	b110      	cbz	r0, 8005810 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800580a:	6803      	ldr	r3, [r0, #0]
 800580c:	689b      	ldr	r3, [r3, #8]
 800580e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005810:	68e0      	ldr	r0, [r4, #12]
 8005812:	6803      	ldr	r3, [r0, #0]
 8005814:	2100      	movs	r1, #0
 8005816:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005818:	4798      	blx	r3
 800581a:	2114      	movs	r1, #20
 800581c:	4605      	mov	r5, r0
 800581e:	f7ff fec1 	bl	80055a4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005822:	2100      	movs	r1, #0
 8005824:	68a0      	ldr	r0, [r4, #8]
 8005826:	f7ff ff9b 	bl	8005760 <_ZN8touchgfx17AbstractPartition2atI19DataDisplayListViewEERT_t>
 800582a:	4606      	mov	r6, r0
 800582c:	f005 faba 	bl	800ada4 <_ZN19DataDisplayListViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005830:	6860      	ldr	r0, [r4, #4]
 8005832:	2100      	movs	r1, #0
 8005834:	f7ff ff97 	bl	8005766 <_ZN8touchgfx17AbstractPartition2atI24DataDisplayListPresenterEERT_t>
 8005838:	4631      	mov	r1, r6
 800583a:	4604      	mov	r4, r0
 800583c:	f005 fa98 	bl	800ad70 <_ZN24DataDisplayListPresenterC1ER19DataDisplayListView>
    *currentTrans = newTransition;
 8005840:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005844:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005848:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800584c:	b1dc      	cbz	r4, 8005886 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0x11a>
 800584e:	1d23      	adds	r3, r4, #4
 8005850:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005854:	6833      	ldr	r3, [r6, #0]
 8005856:	f8c4 a008 	str.w	sl, [r4, #8]
 800585a:	4630      	mov	r0, r6
 800585c:	68db      	ldr	r3, [r3, #12]
 800585e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005860:	4798      	blx	r3
    newPresenter->activate();
 8005862:	6823      	ldr	r3, [r4, #0]
 8005864:	4620      	mov	r0, r4
 8005866:	681b      	ldr	r3, [r3, #0]
 8005868:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800586a:	4629      	mov	r1, r5
 800586c:	4630      	mov	r0, r6
 800586e:	f015 faa7 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005872:	682b      	ldr	r3, [r5, #0]
 8005874:	4628      	mov	r0, r5
 8005876:	691b      	ldr	r3, [r3, #16]
 8005878:	4798      	blx	r3
    newTransition->invalidate();
 800587a:	682b      	ldr	r3, [r5, #0]
 800587c:	4628      	mov	r0, r5
 800587e:	695b      	ldr	r3, [r3, #20]
}
 8005880:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005884:	4718      	bx	r3
    model->bind(newPresenter);
 8005886:	4623      	mov	r3, r4
 8005888:	e7e2      	b.n	8005850 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionSouthImplEv+0xe4>
 800588a:	bf00      	nop
 800588c:	0802f918 	.word	0x0802f918
 8005890:	0803065e 	.word	0x0803065e
 8005894:	0802fab3 	.word	0x0802fab3
 8005898:	0802fafa 	.word	0x0802fafa
 800589c:	0802fb9d 	.word	0x0802fb9d
 80058a0:	2001e220 	.word	0x2001e220
 80058a4:	2001e21c 	.word	0x2001e21c

080058a8 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv>:
{
 80058a8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<DataDisplayListView, DataDisplayListPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80058ac:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80058b0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80058b2:	68a8      	ldr	r0, [r5, #8]
 80058b4:	6803      	ldr	r3, [r0, #0]
 80058b6:	6a1b      	ldr	r3, [r3, #32]
 80058b8:	4798      	blx	r3
 80058ba:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 80058be:	d205      	bcs.n	80058cc <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x24>
 80058c0:	4b44      	ldr	r3, [pc, #272]	; (80059d4 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x12c>)
 80058c2:	4a45      	ldr	r2, [pc, #276]	; (80059d8 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x130>)
 80058c4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058c6:	4845      	ldr	r0, [pc, #276]	; (80059dc <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x134>)
 80058c8:	f026 fb94 	bl	802bff4 <__assert_func>
 80058cc:	6868      	ldr	r0, [r5, #4]
 80058ce:	6803      	ldr	r3, [r0, #0]
 80058d0:	6a1b      	ldr	r3, [r3, #32]
 80058d2:	4798      	blx	r3
 80058d4:	280f      	cmp	r0, #15
 80058d6:	d803      	bhi.n	80058e0 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x38>
 80058d8:	4b41      	ldr	r3, [pc, #260]	; (80059e0 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x138>)
 80058da:	4a3f      	ldr	r2, [pc, #252]	; (80059d8 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x130>)
 80058dc:	21a4      	movs	r1, #164	; 0xa4
 80058de:	e7f2      	b.n	80058c6 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058e0:	68e8      	ldr	r0, [r5, #12]
 80058e2:	6803      	ldr	r3, [r0, #0]
 80058e4:	6a1b      	ldr	r3, [r3, #32]
 80058e6:	4798      	blx	r3
 80058e8:	280b      	cmp	r0, #11
 80058ea:	d803      	bhi.n	80058f4 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x4c>
 80058ec:	4b3d      	ldr	r3, [pc, #244]	; (80059e4 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x13c>)
 80058ee:	4a3a      	ldr	r2, [pc, #232]	; (80059d8 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x130>)
 80058f0:	21a5      	movs	r1, #165	; 0xa5
 80058f2:	e7e8      	b.n	80058c6 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80058f4:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 80059ec <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 80058f8:	f013 fd46 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 80058fc:	f013 fd92 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005900:	f8d9 0000 	ldr.w	r0, [r9]
 8005904:	b110      	cbz	r0, 800590c <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8005906:	6803      	ldr	r3, [r0, #0]
 8005908:	68db      	ldr	r3, [r3, #12]
 800590a:	4798      	blx	r3
    if (*currentTrans)
 800590c:	f8d9 0000 	ldr.w	r0, [r9]
 8005910:	b110      	cbz	r0, 8005918 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8005912:	6803      	ldr	r3, [r0, #0]
 8005914:	681b      	ldr	r3, [r3, #0]
 8005916:	4798      	blx	r3
    if (*currentScreen)
 8005918:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 80059f0 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x148>
 800591c:	f8d8 0000 	ldr.w	r0, [r8]
 8005920:	b110      	cbz	r0, 8005928 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8005922:	6803      	ldr	r3, [r0, #0]
 8005924:	695b      	ldr	r3, [r3, #20]
 8005926:	4798      	blx	r3
    if (*currentPresenter)
 8005928:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800592c:	b110      	cbz	r0, 8005934 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800592e:	6803      	ldr	r3, [r0, #0]
 8005930:	685b      	ldr	r3, [r3, #4]
 8005932:	4798      	blx	r3
    if (*currentScreen)
 8005934:	f8d8 0000 	ldr.w	r0, [r8]
 8005938:	b110      	cbz	r0, 8005940 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800593a:	6803      	ldr	r3, [r0, #0]
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	4798      	blx	r3
    if (*currentPresenter)
 8005940:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005944:	b110      	cbz	r0, 800594c <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005946:	6803      	ldr	r3, [r0, #0]
 8005948:	689b      	ldr	r3, [r3, #8]
 800594a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800594c:	68e8      	ldr	r0, [r5, #12]
 800594e:	6803      	ldr	r3, [r0, #0]
 8005950:	2100      	movs	r1, #0
 8005952:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005954:	4798      	blx	r3
 8005956:	f04f 0b00 	mov.w	fp, #0
 800595a:	4b23      	ldr	r3, [pc, #140]	; (80059e8 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x140>)
 800595c:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800595e:	4659      	mov	r1, fp
 8005960:	4604      	mov	r4, r0
 8005962:	f8c0 b004 	str.w	fp, [r0, #4]
 8005966:	f880 b008 	strb.w	fp, [r0, #8]
 800596a:	68a8      	ldr	r0, [r5, #8]
 800596c:	f7ff fef8 	bl	8005760 <_ZN8touchgfx17AbstractPartition2atI19DataDisplayListViewEERT_t>
 8005970:	4606      	mov	r6, r0
 8005972:	f005 fa17 	bl	800ada4 <_ZN19DataDisplayListViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005976:	6868      	ldr	r0, [r5, #4]
 8005978:	4659      	mov	r1, fp
 800597a:	f7ff fef4 	bl	8005766 <_ZN8touchgfx17AbstractPartition2atI24DataDisplayListPresenterEERT_t>
 800597e:	4631      	mov	r1, r6
 8005980:	4605      	mov	r5, r0
 8005982:	f005 f9f5 	bl	800ad70 <_ZN24DataDisplayListPresenterC1ER19DataDisplayListView>
    *currentTrans = newTransition;
 8005986:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800598a:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800598e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005992:	b1e5      	cbz	r5, 80059ce <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0x126>
 8005994:	1d2b      	adds	r3, r5, #4
 8005996:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800599a:	6833      	ldr	r3, [r6, #0]
 800599c:	f8c5 a008 	str.w	sl, [r5, #8]
 80059a0:	4630      	mov	r0, r6
 80059a2:	68db      	ldr	r3, [r3, #12]
 80059a4:	63f5      	str	r5, [r6, #60]	; 0x3c
 80059a6:	4798      	blx	r3
    newPresenter->activate();
 80059a8:	682b      	ldr	r3, [r5, #0]
 80059aa:	4628      	mov	r0, r5
 80059ac:	681b      	ldr	r3, [r3, #0]
 80059ae:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80059b0:	4621      	mov	r1, r4
 80059b2:	4630      	mov	r0, r6
 80059b4:	f015 fa04 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80059b8:	6823      	ldr	r3, [r4, #0]
 80059ba:	4620      	mov	r0, r4
 80059bc:	691b      	ldr	r3, [r3, #16]
 80059be:	4798      	blx	r3
    newTransition->invalidate();
 80059c0:	6823      	ldr	r3, [r4, #0]
 80059c2:	695b      	ldr	r3, [r3, #20]
 80059c4:	4620      	mov	r0, r4
}
 80059c6:	b001      	add	sp, #4
 80059c8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059cc:	4718      	bx	r3
    model->bind(newPresenter);
 80059ce:	462b      	mov	r3, r5
 80059d0:	e7e1      	b.n	8005996 <_ZN23FrontendApplicationBase41gotoDataDisplayListScreenNoTransitionImplEv+0xee>
 80059d2:	bf00      	nop
 80059d4:	0802f918 	.word	0x0802f918
 80059d8:	08030786 	.word	0x08030786
 80059dc:	0802fab3 	.word	0x0802fab3
 80059e0:	0802fafa 	.word	0x0802fafa
 80059e4:	0802fb9d 	.word	0x0802fb9d
 80059e8:	08030da4 	.word	0x08030da4
 80059ec:	2001e220 	.word	0x2001e220
 80059f0:	2001e21c 	.word	0x2001e21c

080059f4 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv>:
{
 80059f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<DataDisplayListView, DataDisplayListPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80059f8:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80059fc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80059fe:	68a8      	ldr	r0, [r5, #8]
 8005a00:	6803      	ldr	r3, [r0, #0]
 8005a02:	6a1b      	ldr	r3, [r3, #32]
 8005a04:	4798      	blx	r3
 8005a06:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 8005a0a:	d205      	bcs.n	8005a18 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x24>
 8005a0c:	4b57      	ldr	r3, [pc, #348]	; (8005b6c <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x178>)
 8005a0e:	4a58      	ldr	r2, [pc, #352]	; (8005b70 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x17c>)
 8005a10:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005a12:	4858      	ldr	r0, [pc, #352]	; (8005b74 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x180>)
 8005a14:	f026 faee 	bl	802bff4 <__assert_func>
 8005a18:	6868      	ldr	r0, [r5, #4]
 8005a1a:	6803      	ldr	r3, [r0, #0]
 8005a1c:	6a1b      	ldr	r3, [r3, #32]
 8005a1e:	4798      	blx	r3
 8005a20:	280f      	cmp	r0, #15
 8005a22:	d803      	bhi.n	8005a2c <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x38>
 8005a24:	4b54      	ldr	r3, [pc, #336]	; (8005b78 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x184>)
 8005a26:	4a52      	ldr	r2, [pc, #328]	; (8005b70 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x17c>)
 8005a28:	21a4      	movs	r1, #164	; 0xa4
 8005a2a:	e7f2      	b.n	8005a12 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a2c:	68e8      	ldr	r0, [r5, #12]
 8005a2e:	6803      	ldr	r3, [r0, #0]
 8005a30:	6a1b      	ldr	r3, [r3, #32]
 8005a32:	4798      	blx	r3
 8005a34:	2853      	cmp	r0, #83	; 0x53
 8005a36:	d803      	bhi.n	8005a40 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x4c>
 8005a38:	4b50      	ldr	r3, [pc, #320]	; (8005b7c <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x188>)
 8005a3a:	4a4d      	ldr	r2, [pc, #308]	; (8005b70 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x17c>)
 8005a3c:	21a5      	movs	r1, #165	; 0xa5
 8005a3e:	e7e8      	b.n	8005a12 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x1e>
    if (*currentTrans)
 8005a40:	f8df 914c 	ldr.w	r9, [pc, #332]	; 8005b90 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 8005a44:	f013 fca0 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8005a48:	f013 fcec 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005a4c:	f8d9 0000 	ldr.w	r0, [r9]
 8005a50:	b110      	cbz	r0, 8005a58 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 8005a52:	6803      	ldr	r3, [r0, #0]
 8005a54:	68db      	ldr	r3, [r3, #12]
 8005a56:	4798      	blx	r3
    if (*currentTrans)
 8005a58:	f8d9 0000 	ldr.w	r0, [r9]
 8005a5c:	b110      	cbz	r0, 8005a64 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 8005a5e:	6803      	ldr	r3, [r0, #0]
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	4798      	blx	r3
    if (*currentScreen)
 8005a64:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8005b94 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x1a0>
 8005a68:	f8d8 0000 	ldr.w	r0, [r8]
 8005a6c:	b110      	cbz	r0, 8005a74 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8005a6e:	6803      	ldr	r3, [r0, #0]
 8005a70:	695b      	ldr	r3, [r3, #20]
 8005a72:	4798      	blx	r3
    if (*currentPresenter)
 8005a74:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005a78:	b110      	cbz	r0, 8005a80 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8005a7a:	6803      	ldr	r3, [r0, #0]
 8005a7c:	685b      	ldr	r3, [r3, #4]
 8005a7e:	4798      	blx	r3
    if (*currentScreen)
 8005a80:	f8d8 0000 	ldr.w	r0, [r8]
 8005a84:	b110      	cbz	r0, 8005a8c <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 8005a86:	6803      	ldr	r3, [r0, #0]
 8005a88:	681b      	ldr	r3, [r3, #0]
 8005a8a:	4798      	blx	r3
    if (*currentPresenter)
 8005a8c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005a90:	b110      	cbz	r0, 8005a98 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005a92:	6803      	ldr	r3, [r0, #0]
 8005a94:	689b      	ldr	r3, [r3, #8]
 8005a96:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a98:	68e8      	ldr	r0, [r5, #12]
 8005a9a:	6803      	ldr	r3, [r0, #0]
 8005a9c:	2100      	movs	r1, #0
 8005a9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005aa0:	4798      	blx	r3
          calculatedValue(0)
 8005aa2:	4606      	mov	r6, r0
 8005aa4:	2200      	movs	r2, #0
 8005aa6:	4b36      	ldr	r3, [pc, #216]	; (8005b80 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x18c>)
 8005aa8:	6042      	str	r2, [r0, #4]
 8005aaa:	7202      	strb	r2, [r0, #8]
 8005aac:	f846 3b0c 	str.w	r3, [r6], #12
 8005ab0:	4604      	mov	r4, r0
 8005ab2:	4630      	mov	r0, r6
 8005ab4:	f010 fdfa 	bl	80166ac <_ZN8touchgfx14SnapshotWidgetC1Ev>
 8005ab8:	4b32      	ldr	r3, [pc, #200]	; (8005b84 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x190>)
 8005aba:	63a6      	str	r6, [r4, #56]	; 0x38
 8005abc:	2220      	movs	r2, #32
 8005abe:	e9c4 340f 	strd	r3, r4, [r4, #60]	; 0x3c
 8005ac2:	2301      	movs	r3, #1
 8005ac4:	e9c4 2311 	strd	r2, r3, [r4, #68]	; 0x44
 8005ac8:	2314      	movs	r3, #20
 8005aca:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
        if (HAL::USE_ANIMATION_STORAGE)
 8005ace:	4b2e      	ldr	r3, [pc, #184]	; (8005b88 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x194>)
 8005ad0:	781b      	ldrb	r3, [r3, #0]
          calculatedValue(0)
 8005ad2:	2200      	movs	r2, #0
 8005ad4:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
        if (HAL::USE_ANIMATION_STORAGE)
 8005ad8:	b19b      	cbz	r3, 8005b02 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x10e>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005ada:	4b2c      	ldr	r3, [pc, #176]	; (8005b8c <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x198>)
 8005adc:	f8df b0b8 	ldr.w	fp, [pc, #184]	; 8005b98 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x1a4>
 8005ae0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005ae4:	9300      	str	r3, [sp, #0]
 8005ae6:	4611      	mov	r1, r2
 8005ae8:	f9bb 3000 	ldrsh.w	r3, [fp]
 8005aec:	4630      	mov	r0, r6
 8005aee:	f7fe ff77 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
            snapshot.makeSnapshot();
 8005af2:	4630      	mov	r0, r6
 8005af4:	f010 fd56 	bl	80165a4 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
                targetValue = -HAL::DISPLAY_WIDTH;
 8005af8:	f8bb 3000 	ldrh.w	r3, [fp]
 8005afc:	425b      	negs	r3, r3
 8005afe:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005b02:	2100      	movs	r1, #0
 8005b04:	68a8      	ldr	r0, [r5, #8]
 8005b06:	f7ff fe2b 	bl	8005760 <_ZN8touchgfx17AbstractPartition2atI19DataDisplayListViewEERT_t>
 8005b0a:	4606      	mov	r6, r0
 8005b0c:	f005 f94a 	bl	800ada4 <_ZN19DataDisplayListViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005b10:	6868      	ldr	r0, [r5, #4]
 8005b12:	2100      	movs	r1, #0
 8005b14:	f7ff fe27 	bl	8005766 <_ZN8touchgfx17AbstractPartition2atI24DataDisplayListPresenterEERT_t>
 8005b18:	4631      	mov	r1, r6
 8005b1a:	4605      	mov	r5, r0
 8005b1c:	f005 f928 	bl	800ad70 <_ZN24DataDisplayListPresenterC1ER19DataDisplayListView>
    *currentTrans = newTransition;
 8005b20:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8005b24:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005b28:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005b2c:	b1e5      	cbz	r5, 8005b68 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x174>
 8005b2e:	1d2b      	adds	r3, r5, #4
 8005b30:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005b34:	6833      	ldr	r3, [r6, #0]
 8005b36:	f8c5 a008 	str.w	sl, [r5, #8]
 8005b3a:	4630      	mov	r0, r6
 8005b3c:	68db      	ldr	r3, [r3, #12]
 8005b3e:	63f5      	str	r5, [r6, #60]	; 0x3c
 8005b40:	4798      	blx	r3
    newPresenter->activate();
 8005b42:	682b      	ldr	r3, [r5, #0]
 8005b44:	4628      	mov	r0, r5
 8005b46:	681b      	ldr	r3, [r3, #0]
 8005b48:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005b4a:	4621      	mov	r1, r4
 8005b4c:	4630      	mov	r0, r6
 8005b4e:	f015 f937 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005b52:	6823      	ldr	r3, [r4, #0]
 8005b54:	4620      	mov	r0, r4
 8005b56:	691b      	ldr	r3, [r3, #16]
 8005b58:	4798      	blx	r3
    newTransition->invalidate();
 8005b5a:	6823      	ldr	r3, [r4, #0]
 8005b5c:	695b      	ldr	r3, [r3, #20]
 8005b5e:	4620      	mov	r0, r4
}
 8005b60:	b003      	add	sp, #12
 8005b62:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b66:	4718      	bx	r3
    model->bind(newPresenter);
 8005b68:	462b      	mov	r3, r5
 8005b6a:	e7e1      	b.n	8005b30 <_ZN23FrontendApplicationBase48gotoDataDisplayListScreenSlideTransitionEastImplEv+0x13c>
 8005b6c:	0802f918 	.word	0x0802f918
 8005b70:	0803089a 	.word	0x0803089a
 8005b74:	0802fab3 	.word	0x0802fab3
 8005b78:	0802fafa 	.word	0x0802fafa
 8005b7c:	0802fb9d 	.word	0x0802fb9d
 8005b80:	08030e04 	.word	0x08030e04
 8005b84:	08030dec 	.word	0x08030dec
 8005b88:	2001e1bf 	.word	0x2001e1bf
 8005b8c:	2001e1b6 	.word	0x2001e1b6
 8005b90:	2001e220 	.word	0x2001e220
 8005b94:	2001e21c 	.word	0x2001e21c
 8005b98:	2001e1b4 	.word	0x2001e1b4

08005b9c <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv>:
{
 8005b9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<DataDisplayListView, DataDisplayListPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005ba0:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005ba4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005ba6:	68a0      	ldr	r0, [r4, #8]
 8005ba8:	6803      	ldr	r3, [r0, #0]
 8005baa:	6a1b      	ldr	r3, [r3, #32]
 8005bac:	4798      	blx	r3
 8005bae:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 8005bb2:	d205      	bcs.n	8005bc0 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x24>
 8005bb4:	4b40      	ldr	r3, [pc, #256]	; (8005cb8 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x11c>)
 8005bb6:	4a41      	ldr	r2, [pc, #260]	; (8005cbc <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x120>)
 8005bb8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005bba:	4841      	ldr	r0, [pc, #260]	; (8005cc0 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x124>)
 8005bbc:	f026 fa1a 	bl	802bff4 <__assert_func>
 8005bc0:	6860      	ldr	r0, [r4, #4]
 8005bc2:	6803      	ldr	r3, [r0, #0]
 8005bc4:	6a1b      	ldr	r3, [r3, #32]
 8005bc6:	4798      	blx	r3
 8005bc8:	280f      	cmp	r0, #15
 8005bca:	d803      	bhi.n	8005bd4 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x38>
 8005bcc:	4b3d      	ldr	r3, [pc, #244]	; (8005cc4 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x128>)
 8005bce:	4a3b      	ldr	r2, [pc, #236]	; (8005cbc <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x120>)
 8005bd0:	21a4      	movs	r1, #164	; 0xa4
 8005bd2:	e7f2      	b.n	8005bba <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005bd4:	68e0      	ldr	r0, [r4, #12]
 8005bd6:	6803      	ldr	r3, [r0, #0]
 8005bd8:	6a1b      	ldr	r3, [r3, #32]
 8005bda:	4798      	blx	r3
 8005bdc:	2853      	cmp	r0, #83	; 0x53
 8005bde:	d803      	bhi.n	8005be8 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x4c>
 8005be0:	4b39      	ldr	r3, [pc, #228]	; (8005cc8 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x12c>)
 8005be2:	4a36      	ldr	r2, [pc, #216]	; (8005cbc <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x120>)
 8005be4:	21a5      	movs	r1, #165	; 0xa5
 8005be6:	e7e8      	b.n	8005bba <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x1e>
    if (*currentTrans)
 8005be8:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8005ccc <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x130>
    Application::getInstance()->clearAllTimerWidgets();
 8005bec:	f013 fbcc 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8005bf0:	f013 fc18 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005bf4:	f8d9 0000 	ldr.w	r0, [r9]
 8005bf8:	b110      	cbz	r0, 8005c00 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x64>
        (*currentTrans)->tearDown();
 8005bfa:	6803      	ldr	r3, [r0, #0]
 8005bfc:	68db      	ldr	r3, [r3, #12]
 8005bfe:	4798      	blx	r3
    if (*currentTrans)
 8005c00:	f8d9 0000 	ldr.w	r0, [r9]
 8005c04:	b110      	cbz	r0, 8005c0c <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x70>
        (*currentTrans)->~Transition();
 8005c06:	6803      	ldr	r3, [r0, #0]
 8005c08:	681b      	ldr	r3, [r3, #0]
 8005c0a:	4798      	blx	r3
    if (*currentScreen)
 8005c0c:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8005cd0 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x134>
 8005c10:	f8d8 0000 	ldr.w	r0, [r8]
 8005c14:	b110      	cbz	r0, 8005c1c <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8005c16:	6803      	ldr	r3, [r0, #0]
 8005c18:	695b      	ldr	r3, [r3, #20]
 8005c1a:	4798      	blx	r3
    if (*currentPresenter)
 8005c1c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005c20:	b110      	cbz	r0, 8005c28 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8005c22:	6803      	ldr	r3, [r0, #0]
 8005c24:	685b      	ldr	r3, [r3, #4]
 8005c26:	4798      	blx	r3
    if (*currentScreen)
 8005c28:	f8d8 0000 	ldr.w	r0, [r8]
 8005c2c:	b110      	cbz	r0, 8005c34 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x98>
        (*currentScreen)->~Screen();
 8005c2e:	6803      	ldr	r3, [r0, #0]
 8005c30:	681b      	ldr	r3, [r3, #0]
 8005c32:	4798      	blx	r3
    if (*currentPresenter)
 8005c34:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005c38:	b110      	cbz	r0, 8005c40 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005c3a:	6803      	ldr	r3, [r0, #0]
 8005c3c:	689b      	ldr	r3, [r3, #8]
 8005c3e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005c40:	68e0      	ldr	r0, [r4, #12]
 8005c42:	2100      	movs	r1, #0
 8005c44:	f7ff f818 	bl	8004c78 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE0EEEEERT_t>
 8005c48:	2114      	movs	r1, #20
 8005c4a:	4605      	mov	r5, r0
 8005c4c:	f7ff f818 	bl	8004c80 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE0EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005c50:	2100      	movs	r1, #0
 8005c52:	68a0      	ldr	r0, [r4, #8]
 8005c54:	f7ff fd84 	bl	8005760 <_ZN8touchgfx17AbstractPartition2atI19DataDisplayListViewEERT_t>
 8005c58:	4606      	mov	r6, r0
 8005c5a:	f005 f8a3 	bl	800ada4 <_ZN19DataDisplayListViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c5e:	6860      	ldr	r0, [r4, #4]
 8005c60:	2100      	movs	r1, #0
 8005c62:	f7ff fd80 	bl	8005766 <_ZN8touchgfx17AbstractPartition2atI24DataDisplayListPresenterEERT_t>
 8005c66:	4631      	mov	r1, r6
 8005c68:	4604      	mov	r4, r0
 8005c6a:	f005 f881 	bl	800ad70 <_ZN24DataDisplayListPresenterC1ER19DataDisplayListView>
    *currentTrans = newTransition;
 8005c6e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c72:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005c76:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c7a:	b1dc      	cbz	r4, 8005cb4 <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0x118>
 8005c7c:	1d23      	adds	r3, r4, #4
 8005c7e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c82:	6833      	ldr	r3, [r6, #0]
 8005c84:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c88:	4630      	mov	r0, r6
 8005c8a:	68db      	ldr	r3, [r3, #12]
 8005c8c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005c8e:	4798      	blx	r3
    newPresenter->activate();
 8005c90:	6823      	ldr	r3, [r4, #0]
 8005c92:	4620      	mov	r0, r4
 8005c94:	681b      	ldr	r3, [r3, #0]
 8005c96:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c98:	4629      	mov	r1, r5
 8005c9a:	4630      	mov	r0, r6
 8005c9c:	f015 f890 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ca0:	682b      	ldr	r3, [r5, #0]
 8005ca2:	4628      	mov	r0, r5
 8005ca4:	691b      	ldr	r3, [r3, #16]
 8005ca6:	4798      	blx	r3
    newTransition->invalidate();
 8005ca8:	682b      	ldr	r3, [r5, #0]
 8005caa:	4628      	mov	r0, r5
 8005cac:	695b      	ldr	r3, [r3, #20]
}
 8005cae:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005cb2:	4718      	bx	r3
    model->bind(newPresenter);
 8005cb4:	4623      	mov	r3, r4
 8005cb6:	e7e2      	b.n	8005c7e <_ZN23FrontendApplicationBase49gotoDataDisplayListScreenSlideTransitionNorthImplEv+0xe2>
 8005cb8:	0802f918 	.word	0x0802f918
 8005cbc:	080309c1 	.word	0x080309c1
 8005cc0:	0802fab3 	.word	0x0802fab3
 8005cc4:	0802fafa 	.word	0x0802fafa
 8005cc8:	0802fb9d 	.word	0x0802fb9d
 8005ccc:	2001e220 	.word	0x2001e220
 8005cd0:	2001e21c 	.word	0x2001e21c

08005cd4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8005cd4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          calculatedValue(0)
 8005cd6:	4605      	mov	r5, r0
 8005cd8:	2600      	movs	r6, #0
 8005cda:	4b18      	ldr	r3, [pc, #96]	; (8005d3c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x68>)
 8005cdc:	6046      	str	r6, [r0, #4]
 8005cde:	7206      	strb	r6, [r0, #8]
 8005ce0:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8005ce4:	4604      	mov	r4, r0
          calculatedValue(0)
 8005ce6:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8005ce8:	460f      	mov	r7, r1
          calculatedValue(0)
 8005cea:	f010 fcdf 	bl	80166ac <_ZN8touchgfx14SnapshotWidgetC1Ev>
 8005cee:	4b14      	ldr	r3, [pc, #80]	; (8005d40 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x6c>)
 8005cf0:	63a5      	str	r5, [r4, #56]	; 0x38
 8005cf2:	e9c4 340f 	strd	r3, r4, [r4, #60]	; 0x3c
 8005cf6:	2220      	movs	r2, #32
 8005cf8:	2301      	movs	r3, #1
 8005cfa:	e9c4 2311 	strd	r2, r3, [r4, #68]	; 0x44
        if (HAL::USE_ANIMATION_STORAGE)
 8005cfe:	4b11      	ldr	r3, [pc, #68]	; (8005d44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x70>)
          calculatedValue(0)
 8005d00:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
        if (HAL::USE_ANIMATION_STORAGE)
 8005d04:	781b      	ldrb	r3, [r3, #0]
          calculatedValue(0)
 8005d06:	f884 604d 	strb.w	r6, [r4, #77]	; 0x4d
 8005d0a:	f8a4 6050 	strh.w	r6, [r4, #80]	; 0x50
        if (HAL::USE_ANIMATION_STORAGE)
 8005d0e:	b18b      	cbz	r3, 8005d34 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x60>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005d10:	4b0d      	ldr	r3, [pc, #52]	; (8005d48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x74>)
 8005d12:	4f0e      	ldr	r7, [pc, #56]	; (8005d4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x78>)
 8005d14:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005d18:	9300      	str	r3, [sp, #0]
 8005d1a:	f9b7 3000 	ldrsh.w	r3, [r7]
 8005d1e:	4632      	mov	r2, r6
 8005d20:	4631      	mov	r1, r6
 8005d22:	4628      	mov	r0, r5
 8005d24:	f7fe fe5c 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
            snapshot.makeSnapshot();
 8005d28:	4628      	mov	r0, r5
 8005d2a:	f010 fc3b 	bl	80165a4 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
                targetValue = HAL::DISPLAY_WIDTH;
 8005d2e:	883b      	ldrh	r3, [r7, #0]
 8005d30:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
    }
 8005d34:	4620      	mov	r0, r4
 8005d36:	b003      	add	sp, #12
 8005d38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005d3a:	bf00      	nop
 8005d3c:	08030e48 	.word	0x08030e48
 8005d40:	08030e30 	.word	0x08030e30
 8005d44:	2001e1bf 	.word	0x2001e1bf
 8005d48:	2001e1b6 	.word	0x2001e1b6
 8005d4c:	2001e1b4 	.word	0x2001e1b4

08005d50 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv>:
{
 8005d50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ReactanceGraphView, ReactanceGraphPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005d54:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005d58:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005d5a:	68a0      	ldr	r0, [r4, #8]
 8005d5c:	6803      	ldr	r3, [r0, #0]
 8005d5e:	6a1b      	ldr	r3, [r3, #32]
 8005d60:	4798      	blx	r3
 8005d62:	f241 73b7 	movw	r3, #6071	; 0x17b7
 8005d66:	4298      	cmp	r0, r3
 8005d68:	d805      	bhi.n	8005d76 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x26>
 8005d6a:	4b42      	ldr	r3, [pc, #264]	; (8005e74 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x124>)
 8005d6c:	4a42      	ldr	r2, [pc, #264]	; (8005e78 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x128>)
 8005d6e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005d70:	4842      	ldr	r0, [pc, #264]	; (8005e7c <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x12c>)
 8005d72:	f026 f93f 	bl	802bff4 <__assert_func>
 8005d76:	6860      	ldr	r0, [r4, #4]
 8005d78:	6803      	ldr	r3, [r0, #0]
 8005d7a:	6a1b      	ldr	r3, [r3, #32]
 8005d7c:	4798      	blx	r3
 8005d7e:	280f      	cmp	r0, #15
 8005d80:	d803      	bhi.n	8005d8a <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x3a>
 8005d82:	4b3f      	ldr	r3, [pc, #252]	; (8005e80 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x130>)
 8005d84:	4a3c      	ldr	r2, [pc, #240]	; (8005e78 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x128>)
 8005d86:	21a4      	movs	r1, #164	; 0xa4
 8005d88:	e7f2      	b.n	8005d70 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005d8a:	68e0      	ldr	r0, [r4, #12]
 8005d8c:	6803      	ldr	r3, [r0, #0]
 8005d8e:	6a1b      	ldr	r3, [r3, #32]
 8005d90:	4798      	blx	r3
 8005d92:	2853      	cmp	r0, #83	; 0x53
 8005d94:	d803      	bhi.n	8005d9e <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x4e>
 8005d96:	4b3b      	ldr	r3, [pc, #236]	; (8005e84 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x134>)
 8005d98:	4a37      	ldr	r2, [pc, #220]	; (8005e78 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x128>)
 8005d9a:	21a5      	movs	r1, #165	; 0xa5
 8005d9c:	e7e8      	b.n	8005d70 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x20>
    if (*currentTrans)
 8005d9e:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8005e88 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8005da2:	f013 faf1 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8005da6:	f013 fb3d 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005daa:	f8d9 0000 	ldr.w	r0, [r9]
 8005dae:	b110      	cbz	r0, 8005db6 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8005db0:	6803      	ldr	r3, [r0, #0]
 8005db2:	68db      	ldr	r3, [r3, #12]
 8005db4:	4798      	blx	r3
    if (*currentTrans)
 8005db6:	f8d9 0000 	ldr.w	r0, [r9]
 8005dba:	b110      	cbz	r0, 8005dc2 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8005dbc:	6803      	ldr	r3, [r0, #0]
 8005dbe:	681b      	ldr	r3, [r3, #0]
 8005dc0:	4798      	blx	r3
    if (*currentScreen)
 8005dc2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005e8c <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x13c>
 8005dc6:	f8d8 0000 	ldr.w	r0, [r8]
 8005dca:	b110      	cbz	r0, 8005dd2 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005dcc:	6803      	ldr	r3, [r0, #0]
 8005dce:	695b      	ldr	r3, [r3, #20]
 8005dd0:	4798      	blx	r3
    if (*currentPresenter)
 8005dd2:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005dd6:	b110      	cbz	r0, 8005dde <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005dd8:	6803      	ldr	r3, [r0, #0]
 8005dda:	685b      	ldr	r3, [r3, #4]
 8005ddc:	4798      	blx	r3
    if (*currentScreen)
 8005dde:	f8d8 0000 	ldr.w	r0, [r8]
 8005de2:	b110      	cbz	r0, 8005dea <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005de4:	6803      	ldr	r3, [r0, #0]
 8005de6:	681b      	ldr	r3, [r3, #0]
 8005de8:	4798      	blx	r3
    if (*currentPresenter)
 8005dea:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005dee:	b110      	cbz	r0, 8005df6 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005df0:	6803      	ldr	r3, [r0, #0]
 8005df2:	689b      	ldr	r3, [r3, #8]
 8005df4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005df6:	68e0      	ldr	r0, [r4, #12]
 8005df8:	6803      	ldr	r3, [r0, #0]
 8005dfa:	2100      	movs	r1, #0
 8005dfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005dfe:	4798      	blx	r3
 8005e00:	2114      	movs	r1, #20
 8005e02:	4605      	mov	r5, r0
 8005e04:	f7ff ff66 	bl	8005cd4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005e08:	68a0      	ldr	r0, [r4, #8]
 8005e0a:	6803      	ldr	r3, [r0, #0]
 8005e0c:	2100      	movs	r1, #0
 8005e0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e10:	4798      	blx	r3
 8005e12:	4606      	mov	r6, r0
 8005e14:	f005 fa4e 	bl	800b2b4 <_ZN18ReactanceGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005e18:	6860      	ldr	r0, [r4, #4]
 8005e1a:	6803      	ldr	r3, [r0, #0]
 8005e1c:	2100      	movs	r1, #0
 8005e1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e20:	4798      	blx	r3
 8005e22:	4631      	mov	r1, r6
 8005e24:	4604      	mov	r4, r0
 8005e26:	f005 f9bb 	bl	800b1a0 <_ZN23ReactanceGraphPresenterC1ER18ReactanceGraphView>
    *currentTrans = newTransition;
 8005e2a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005e2e:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005e32:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005e36:	b1dc      	cbz	r4, 8005e70 <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0x120>
 8005e38:	1d23      	adds	r3, r4, #4
 8005e3a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005e3e:	6833      	ldr	r3, [r6, #0]
 8005e40:	f8c4 a008 	str.w	sl, [r4, #8]
 8005e44:	4630      	mov	r0, r6
 8005e46:	68db      	ldr	r3, [r3, #12]
 8005e48:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005e4a:	4798      	blx	r3
    newPresenter->activate();
 8005e4c:	6823      	ldr	r3, [r4, #0]
 8005e4e:	4620      	mov	r0, r4
 8005e50:	681b      	ldr	r3, [r3, #0]
 8005e52:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005e54:	4629      	mov	r1, r5
 8005e56:	4630      	mov	r0, r6
 8005e58:	f014 ffb2 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005e5c:	682b      	ldr	r3, [r5, #0]
 8005e5e:	4628      	mov	r0, r5
 8005e60:	691b      	ldr	r3, [r3, #16]
 8005e62:	4798      	blx	r3
    newTransition->invalidate();
 8005e64:	682b      	ldr	r3, [r5, #0]
 8005e66:	4628      	mov	r0, r5
 8005e68:	695b      	ldr	r3, [r3, #20]
}
 8005e6a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e6e:	4718      	bx	r3
    model->bind(newPresenter);
 8005e70:	4623      	mov	r3, r4
 8005e72:	e7e2      	b.n	8005e3a <_ZN23FrontendApplicationBase47gotoReactanceGraphScreenSlideTransitionWestImplEv+0xea>
 8005e74:	0802f918 	.word	0x0802f918
 8005e78:	08030ae9 	.word	0x08030ae9
 8005e7c:	0802fab3 	.word	0x0802fab3
 8005e80:	0802fafa 	.word	0x0802fafa
 8005e84:	0802fb9d 	.word	0x0802fb9d
 8005e88:	2001e220 	.word	0x2001e220
 8005e8c:	2001e21c 	.word	0x2001e21c

08005e90 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv>:
{
 8005e90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ResistanceGraphView, ResistanceGraphPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005e94:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8005e98:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005e9a:	68a0      	ldr	r0, [r4, #8]
 8005e9c:	6803      	ldr	r3, [r0, #0]
 8005e9e:	6a1b      	ldr	r3, [r3, #32]
 8005ea0:	4798      	blx	r3
 8005ea2:	f241 73b7 	movw	r3, #6071	; 0x17b7
 8005ea6:	4298      	cmp	r0, r3
 8005ea8:	d805      	bhi.n	8005eb6 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x26>
 8005eaa:	4b42      	ldr	r3, [pc, #264]	; (8005fb4 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x124>)
 8005eac:	4a42      	ldr	r2, [pc, #264]	; (8005fb8 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x128>)
 8005eae:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005eb0:	4842      	ldr	r0, [pc, #264]	; (8005fbc <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x12c>)
 8005eb2:	f026 f89f 	bl	802bff4 <__assert_func>
 8005eb6:	6860      	ldr	r0, [r4, #4]
 8005eb8:	6803      	ldr	r3, [r0, #0]
 8005eba:	6a1b      	ldr	r3, [r3, #32]
 8005ebc:	4798      	blx	r3
 8005ebe:	280f      	cmp	r0, #15
 8005ec0:	d803      	bhi.n	8005eca <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x3a>
 8005ec2:	4b3f      	ldr	r3, [pc, #252]	; (8005fc0 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x130>)
 8005ec4:	4a3c      	ldr	r2, [pc, #240]	; (8005fb8 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x128>)
 8005ec6:	21a4      	movs	r1, #164	; 0xa4
 8005ec8:	e7f2      	b.n	8005eb0 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005eca:	68e0      	ldr	r0, [r4, #12]
 8005ecc:	6803      	ldr	r3, [r0, #0]
 8005ece:	6a1b      	ldr	r3, [r3, #32]
 8005ed0:	4798      	blx	r3
 8005ed2:	2853      	cmp	r0, #83	; 0x53
 8005ed4:	d803      	bhi.n	8005ede <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x4e>
 8005ed6:	4b3b      	ldr	r3, [pc, #236]	; (8005fc4 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x134>)
 8005ed8:	4a37      	ldr	r2, [pc, #220]	; (8005fb8 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x128>)
 8005eda:	21a5      	movs	r1, #165	; 0xa5
 8005edc:	e7e8      	b.n	8005eb0 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x20>
    if (*currentTrans)
 8005ede:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8005fc8 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8005ee2:	f013 fa51 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8005ee6:	f013 fa9d 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8005eea:	f8d9 0000 	ldr.w	r0, [r9]
 8005eee:	b110      	cbz	r0, 8005ef6 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8005ef0:	6803      	ldr	r3, [r0, #0]
 8005ef2:	68db      	ldr	r3, [r3, #12]
 8005ef4:	4798      	blx	r3
    if (*currentTrans)
 8005ef6:	f8d9 0000 	ldr.w	r0, [r9]
 8005efa:	b110      	cbz	r0, 8005f02 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8005efc:	6803      	ldr	r3, [r0, #0]
 8005efe:	681b      	ldr	r3, [r3, #0]
 8005f00:	4798      	blx	r3
    if (*currentScreen)
 8005f02:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005fcc <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x13c>
 8005f06:	f8d8 0000 	ldr.w	r0, [r8]
 8005f0a:	b110      	cbz	r0, 8005f12 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005f0c:	6803      	ldr	r3, [r0, #0]
 8005f0e:	695b      	ldr	r3, [r3, #20]
 8005f10:	4798      	blx	r3
    if (*currentPresenter)
 8005f12:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005f16:	b110      	cbz	r0, 8005f1e <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005f18:	6803      	ldr	r3, [r0, #0]
 8005f1a:	685b      	ldr	r3, [r3, #4]
 8005f1c:	4798      	blx	r3
    if (*currentScreen)
 8005f1e:	f8d8 0000 	ldr.w	r0, [r8]
 8005f22:	b110      	cbz	r0, 8005f2a <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005f24:	6803      	ldr	r3, [r0, #0]
 8005f26:	681b      	ldr	r3, [r3, #0]
 8005f28:	4798      	blx	r3
    if (*currentPresenter)
 8005f2a:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8005f2e:	b110      	cbz	r0, 8005f36 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005f30:	6803      	ldr	r3, [r0, #0]
 8005f32:	689b      	ldr	r3, [r3, #8]
 8005f34:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005f36:	68e0      	ldr	r0, [r4, #12]
 8005f38:	6803      	ldr	r3, [r0, #0]
 8005f3a:	2100      	movs	r1, #0
 8005f3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f3e:	4798      	blx	r3
 8005f40:	2114      	movs	r1, #20
 8005f42:	4605      	mov	r5, r0
 8005f44:	f7ff fec6 	bl	8005cd4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005f48:	68a0      	ldr	r0, [r4, #8]
 8005f4a:	6803      	ldr	r3, [r0, #0]
 8005f4c:	2100      	movs	r1, #0
 8005f4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f50:	4798      	blx	r3
 8005f52:	4606      	mov	r6, r0
 8005f54:	f005 fa50 	bl	800b3f8 <_ZN19ResistanceGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005f58:	6860      	ldr	r0, [r4, #4]
 8005f5a:	6803      	ldr	r3, [r0, #0]
 8005f5c:	2100      	movs	r1, #0
 8005f5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f60:	4798      	blx	r3
 8005f62:	4631      	mov	r1, r6
 8005f64:	4604      	mov	r4, r0
 8005f66:	f005 f9bd 	bl	800b2e4 <_ZN24ResistanceGraphPresenterC1ER19ResistanceGraphView>
    *currentTrans = newTransition;
 8005f6a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005f6e:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8005f72:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005f76:	b1dc      	cbz	r4, 8005fb0 <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0x120>
 8005f78:	1d23      	adds	r3, r4, #4
 8005f7a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005f7e:	6833      	ldr	r3, [r6, #0]
 8005f80:	f8c4 a008 	str.w	sl, [r4, #8]
 8005f84:	4630      	mov	r0, r6
 8005f86:	68db      	ldr	r3, [r3, #12]
 8005f88:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005f8a:	4798      	blx	r3
    newPresenter->activate();
 8005f8c:	6823      	ldr	r3, [r4, #0]
 8005f8e:	4620      	mov	r0, r4
 8005f90:	681b      	ldr	r3, [r3, #0]
 8005f92:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005f94:	4629      	mov	r1, r5
 8005f96:	4630      	mov	r0, r6
 8005f98:	f014 ff12 	bl	801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005f9c:	682b      	ldr	r3, [r5, #0]
 8005f9e:	4628      	mov	r0, r5
 8005fa0:	691b      	ldr	r3, [r3, #16]
 8005fa2:	4798      	blx	r3
    newTransition->invalidate();
 8005fa4:	682b      	ldr	r3, [r5, #0]
 8005fa6:	4628      	mov	r0, r5
 8005fa8:	695b      	ldr	r3, [r3, #20]
}
 8005faa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005fae:	4718      	bx	r3
    model->bind(newPresenter);
 8005fb0:	4623      	mov	r3, r4
 8005fb2:	e7e2      	b.n	8005f7a <_ZN23FrontendApplicationBase48gotoResistanceGraphScreenSlideTransitionWestImplEv+0xea>
 8005fb4:	0802f918 	.word	0x0802f918
 8005fb8:	08030c0e 	.word	0x08030c0e
 8005fbc:	0802fab3 	.word	0x0802fab3
 8005fc0:	0802fafa 	.word	0x0802fafa
 8005fc4:	0802fb9d 	.word	0x0802fb9d
 8005fc8:	2001e220 	.word	0x2001e220
 8005fcc:	2001e21c 	.word	0x2001e21c

08005fd0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005fd0:	6a00      	ldr	r0, [r0, #32]
 8005fd2:	4770      	bx	lr

08005fd4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005fd4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005fd6:	4770      	bx	lr

08005fd8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005fd8:	4770      	bx	lr

08005fda <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005fda:	888b      	ldrh	r3, [r1, #4]
 8005fdc:	6980      	ldr	r0, [r0, #24]
 8005fde:	680a      	ldr	r2, [r1, #0]
 8005fe0:	0adb      	lsrs	r3, r3, #11
 8005fe2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005fe6:	4410      	add	r0, r2
 8005fe8:	4770      	bx	lr

08005fea <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005fea:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005fec:	b1c2      	cbz	r2, 8006020 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005fee:	7b13      	ldrb	r3, [r2, #12]
 8005ff0:	b1b3      	cbz	r3, 8006020 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005ff2:	7b54      	ldrb	r4, [r2, #13]
 8005ff4:	7ad2      	ldrb	r2, [r2, #11]
 8005ff6:	0224      	lsls	r4, r4, #8
 8005ff8:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005ffc:	4314      	orrs	r4, r2
 8005ffe:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006000:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8006002:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8006006:	8813      	ldrh	r3, [r2, #0]
 8006008:	428b      	cmp	r3, r1
 800600a:	d102      	bne.n	8006012 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800600c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8006010:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8006012:	d805      	bhi.n	8006020 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006014:	3801      	subs	r0, #1
 8006016:	b280      	uxth	r0, r0
 8006018:	3204      	adds	r2, #4
 800601a:	2800      	cmp	r0, #0
 800601c:	d1f3      	bne.n	8006006 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800601e:	e7f7      	b.n	8006010 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8006020:	2000      	movs	r0, #0
 8006022:	e7f5      	b.n	8006010 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08006024 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8006024:	b510      	push	{r4, lr}
 8006026:	2128      	movs	r1, #40	; 0x28
 8006028:	4604      	mov	r4, r0
 800602a:	f025 f896 	bl	802b15a <_ZdlPvj>
 800602e:	4620      	mov	r0, r4
 8006030:	bd10      	pop	{r4, pc}
	...

08006034 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8006034:	b530      	push	{r4, r5, lr}
 8006036:	b089      	sub	sp, #36	; 0x24
 8006038:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800603a:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800603e:	9506      	str	r5, [sp, #24]
 8006040:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8006044:	9505      	str	r5, [sp, #20]
 8006046:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800604a:	9504      	str	r5, [sp, #16]
 800604c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8006050:	9503      	str	r5, [sp, #12]
 8006052:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8006056:	9502      	str	r5, [sp, #8]
 8006058:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 800605c:	9501      	str	r5, [sp, #4]
 800605e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8006062:	9500      	str	r5, [sp, #0]
 8006064:	f014 fa3a 	bl	801a4dc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8006068:	4b06      	ldr	r3, [pc, #24]	; (8006084 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 800606a:	6023      	str	r3, [r4, #0]
 800606c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800606e:	61a3      	str	r3, [r4, #24]
 8006070:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006072:	61e3      	str	r3, [r4, #28]
 8006074:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006076:	6223      	str	r3, [r4, #32]
 8006078:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800607a:	6263      	str	r3, [r4, #36]	; 0x24
}
 800607c:	4620      	mov	r0, r4
 800607e:	b009      	add	sp, #36	; 0x24
 8006080:	bd30      	pop	{r4, r5, pc}
 8006082:	bf00      	nop
 8006084:	08030efc 	.word	0x08030efc

08006088 <_ZN24InstructionPage1ViewBaseD1Ev>:

class InstructionPage1ViewBase : public touchgfx::View<InstructionPage1Presenter>
{
public:
    InstructionPage1ViewBase();
    virtual ~InstructionPage1ViewBase() {}
 8006088:	4770      	bx	lr

0800608a <_ZN24InstructionPage1ViewBase11setupScreenEv>:
}

void InstructionPage1ViewBase::setupScreen()
{

}
 800608a:	4770      	bx	lr

0800608c <_ZN8touchgfx8CallbackI24InstructionPage1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800608c:	4770      	bx	lr

0800608e <_ZN8touchgfx8CallbackI24InstructionPage1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800608e:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8006090:	68c2      	ldr	r2, [r0, #12]
 8006092:	6844      	ldr	r4, [r0, #4]
 8006094:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006096:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8006098:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800609c:	07d2      	lsls	r2, r2, #31
 800609e:	bf48      	it	mi
 80060a0:	5962      	ldrmi	r2, [r4, r5]
 80060a2:	689b      	ldr	r3, [r3, #8]
    }
 80060a4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80060a6:	bf48      	it	mi
 80060a8:	58d3      	ldrmi	r3, [r2, r3]
 80060aa:	4718      	bx	r3

080060ac <_ZNK8touchgfx8CallbackI24InstructionPage1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80060ac:	6843      	ldr	r3, [r0, #4]
 80060ae:	b12b      	cbz	r3, 80060bc <_ZNK8touchgfx8CallbackI24InstructionPage1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80060b0:	6883      	ldr	r3, [r0, #8]
 80060b2:	b92b      	cbnz	r3, 80060c0 <_ZNK8touchgfx8CallbackI24InstructionPage1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80060b4:	68c0      	ldr	r0, [r0, #12]
 80060b6:	f000 0001 	and.w	r0, r0, #1
 80060ba:	4770      	bx	lr
 80060bc:	4618      	mov	r0, r3
 80060be:	4770      	bx	lr
 80060c0:	2001      	movs	r0, #1
    }
 80060c2:	4770      	bx	lr

080060c4 <_ZN8touchgfx8CallbackI24InstructionPage1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80060c4:	b510      	push	{r4, lr}
 80060c6:	2110      	movs	r1, #16
 80060c8:	4604      	mov	r4, r0
 80060ca:	f025 f846 	bl	802b15a <_ZdlPvj>
 80060ce:	4620      	mov	r0, r4
 80060d0:	bd10      	pop	{r4, pc}

080060d2 <_ZN24InstructionPage1ViewBaseD0Ev>:
 80060d2:	b510      	push	{r4, lr}
 80060d4:	f44f 71b0 	mov.w	r1, #352	; 0x160
 80060d8:	4604      	mov	r4, r0
 80060da:	f025 f83e 	bl	802b15a <_ZdlPvj>
 80060de:	4620      	mov	r0, r4
 80060e0:	bd10      	pop	{r4, pc}

080060e2 <_ZN24InstructionPage1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void InstructionPage1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &I_nextbutton1)
 80060e2:	f500 708a 	add.w	r0, r0, #276	; 0x114
 80060e6:	4288      	cmp	r0, r1
{
 80060e8:	b508      	push	{r3, lr}
    if (&src == &I_nextbutton1)
 80060ea:	d105      	bne.n	80060f8 <_ZN24InstructionPage1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80060ec:	f013 f94c 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When I_nextbutton1 clicked change screen to InstructionPage2
        //Go to InstructionPage2 with screen transition towards North
        application().gotoInstructionPage2ScreenSlideTransitionNorth();
    }
}
 80060f0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoInstructionPage2ScreenSlideTransitionNorth();
 80060f4:	f7fe bcf0 	b.w	8004ad8 <_ZN23FrontendApplicationBase46gotoInstructionPage2ScreenSlideTransitionNorthEv>
}
 80060f8:	bd08      	pop	{r3, pc}
	...

080060fc <_ZN8touchgfx3BoxC1Ev>:
    Box()
 80060fc:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 80060fe:	2226      	movs	r2, #38	; 0x26
    Box()
 8006100:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8006102:	2100      	movs	r1, #0
 8006104:	f026 f8fc 	bl	802c300 <memset>
 8006108:	4620      	mov	r0, r4
 800610a:	f7fd fd23 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 800610e:	4b04      	ldr	r3, [pc, #16]	; (8006120 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8006110:	6023      	str	r3, [r4, #0]
 8006112:	23ff      	movs	r3, #255	; 0xff
 8006114:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8006118:	2300      	movs	r3, #0
 800611a:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 800611c:	4620      	mov	r0, r4
 800611e:	bd10      	pop	{r4, pc}
 8006120:	08034854 	.word	0x08034854

08006124 <_ZN24InstructionPage1ViewBaseC1Ev>:
InstructionPage1ViewBase::InstructionPage1ViewBase() :
 8006124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006128:	4604      	mov	r4, r0
 800612a:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &InstructionPage1ViewBase::buttonCallbackHandler)
 800612c:	46a0      	mov	r8, r4
        : presenter(0)
 800612e:	2500      	movs	r5, #0
 8006130:	f014 fc9a 	bl	801aa68 <_ZN8touchgfx6ScreenC1Ev>
 8006134:	4b6e      	ldr	r3, [pc, #440]	; (80062f0 <_ZN24InstructionPage1ViewBaseC1Ev+0x1cc>)
 8006136:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006138:	f848 3b40 	str.w	r3, [r8], #64
 800613c:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8006140:	4640      	mov	r0, r8
 8006142:	f7ff ffdb 	bl	80060fc <_ZN8touchgfx3BoxC1Ev>
 8006146:	f64f 79ff 	movw	r9, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800614a:	2226      	movs	r2, #38	; 0x26
 800614c:	4629      	mov	r1, r5
 800614e:	4638      	mov	r0, r7
 8006150:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 8006154:	f026 f8d4 	bl	802c300 <memset>
 8006158:	4638      	mov	r0, r7
 800615a:	f7fd fcfb 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 800615e:	4b65      	ldr	r3, [pc, #404]	; (80062f4 <_ZN24InstructionPage1ViewBaseC1Ev+0x1d0>)
 8006160:	66e3      	str	r3, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8006162:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
        : Widget(), bitmap(bmp), alpha(255)
 8006166:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800616a:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800616e:	f104 0698 	add.w	r6, r4, #152	; 0x98
 8006172:	f884 9094 	strb.w	r9, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006176:	4651      	mov	r1, sl
 8006178:	4638      	mov	r0, r7
 800617a:	f011 fa4a 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800617e:	4629      	mov	r1, r5
 8006180:	2226      	movs	r2, #38	; 0x26
 8006182:	4630      	mov	r0, r6
 8006184:	f026 f8bc 	bl	802c300 <memset>
 8006188:	4630      	mov	r0, r6
 800618a:	f7fd fce3 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 800618e:	4b5a      	ldr	r3, [pc, #360]	; (80062f8 <_ZN24InstructionPage1ViewBaseC1Ev+0x1d4>)
 8006190:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : typedTextId(id)
 8006194:	4b59      	ldr	r3, [pc, #356]	; (80062fc <_ZN24InstructionPage1ViewBaseC1Ev+0x1d8>)
 8006196:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800619a:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 800619e:	f104 0be0 	add.w	fp, r4, #224	; 0xe0
 80061a2:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
        : x(x), y(y), width(width), height(height)
 80061a6:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 80061aa:	e9c4 3536 	strd	r3, r5, [r4, #216]	; 0xd8
 80061ae:	f8a4 90c4 	strh.w	r9, [r4, #196]	; 0xc4
        : color(col)
 80061b2:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80061b6:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(x), y(y), width(width), height(height)
 80061ba:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 80061be:	4658      	mov	r0, fp
 80061c0:	f7ff ff9c 	bl	80060fc <_ZN8touchgfx3BoxC1Ev>
 80061c4:	f504 798a 	add.w	r9, r4, #276	; 0x114
 80061c8:	4b4d      	ldr	r3, [pc, #308]	; (8006300 <_ZN24InstructionPage1ViewBaseC1Ev+0x1dc>)
 80061ca:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
        : color(col)
 80061ce:	f8c4 510c 	str.w	r5, [r4, #268]	; 0x10c
 80061d2:	f8a4 5110 	strh.w	r5, [r4, #272]	; 0x110
 80061d6:	4648      	mov	r0, r9
 80061d8:	f011 f9f4 	bl	80175c4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80061dc:	4b49      	ldr	r3, [pc, #292]	; (8006304 <_ZN24InstructionPage1ViewBaseC1Ev+0x1e0>)
 80061de:	e9c4 3454 	strd	r3, r4, [r4, #336]	; 0x150
 80061e2:	4b49      	ldr	r3, [pc, #292]	; (8006308 <_ZN24InstructionPage1ViewBaseC1Ev+0x1e4>)
 80061e4:	e9c4 3556 	strd	r3, r5, [r4, #344]	; 0x158
    __background.setPosition(0, 0, 320, 240);
 80061e8:	23f0      	movs	r3, #240	; 0xf0
 80061ea:	9300      	str	r3, [sp, #0]
 80061ec:	462a      	mov	r2, r5
 80061ee:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80061f2:	4629      	mov	r1, r5
 80061f4:	4640      	mov	r0, r8
 80061f6:	f7fe fbf3 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80061fa:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 80061fe:	66a2      	str	r2, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 8006200:	4629      	mov	r1, r5
 8006202:	462a      	mov	r2, r5
 8006204:	4638      	mov	r0, r7
 8006206:	f7fd fb2f 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 800620a:	4651      	mov	r1, sl
 800620c:	4638      	mov	r0, r7
 800620e:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 8006212:	f011 f9fe 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textArea1.setXY(28, 27);
 8006216:	4630      	mov	r0, r6
 8006218:	221b      	movs	r2, #27
 800621a:	211c      	movs	r1, #28
 800621c:	f7fd fb24 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8006220:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        linespace = space;
 8006224:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006228:	ad04      	add	r5, sp, #16
        this->color = color;
 800622a:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800622e:	4631      	mov	r1, r6
 8006230:	4628      	mov	r0, r5
 8006232:	f010 fb25 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006236:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800623a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800623e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006242:	4b2e      	ldr	r3, [pc, #184]	; (80062fc <_ZN24InstructionPage1ViewBaseC1Ev+0x1d8>)
 8006244:	930c      	str	r3, [sp, #48]	; 0x30
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SS71));
 8006246:	4651      	mov	r1, sl
 8006248:	2318      	movs	r3, #24
 800624a:	4630      	mov	r0, r6
 800624c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006250:	f010 fe5c 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    boxWithBorder1.setPosition(28, 58, 264, 112);
 8006254:	2370      	movs	r3, #112	; 0x70
 8006256:	9300      	str	r3, [sp, #0]
 8006258:	4658      	mov	r0, fp
 800625a:	f44f 7384 	mov.w	r3, #264	; 0x108
 800625e:	223a      	movs	r2, #58	; 0x3a
 8006260:	211c      	movs	r1, #28
 8006262:	f7fe fbbd 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006266:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800626a:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 800626e:	f503 4307 	add.w	r3, r3, #34560	; 0x8700
 8006272:	33bd      	adds	r3, #189	; 0xbd
 8006274:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8006278:	2305      	movs	r3, #5
 800627a:	f8a4 3110 	strh.w	r3, [r4, #272]	; 0x110
    I_nextbutton1.setXY(130, 180);
 800627e:	4648      	mov	r0, r9
 8006280:	22b4      	movs	r2, #180	; 0xb4
 8006282:	2182      	movs	r1, #130	; 0x82
 8006284:	f7fd faf0 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 8006288:	2303      	movs	r3, #3
 800628a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800628e:	2304      	movs	r3, #4
 8006290:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006294:	2308      	movs	r3, #8
    I_nextbutton1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID));
 8006296:	aa0a      	add	r2, sp, #40	; 0x28
 8006298:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800629c:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80062a0:	a909      	add	r1, sp, #36	; 0x24
 80062a2:	ab0b      	add	r3, sp, #44	; 0x2c
 80062a4:	4648      	mov	r0, r9
 80062a6:	f8cd a000 	str.w	sl, [sp]
 80062aa:	f011 f8e8 	bl	801747e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80062ae:	4b17      	ldr	r3, [pc, #92]	; (800630c <_ZN24InstructionPage1ViewBaseC1Ev+0x1e8>)
 80062b0:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
    I_nextbutton1.setAction(buttonCallback);
 80062b4:	f504 73a8 	add.w	r3, r4, #336	; 0x150
 80062b8:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
 80062bc:	1d20      	adds	r0, r4, #4
 80062be:	4641      	mov	r1, r8
 80062c0:	9003      	str	r0, [sp, #12]
 80062c2:	f00b fde3 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80062c6:	9803      	ldr	r0, [sp, #12]
 80062c8:	4639      	mov	r1, r7
 80062ca:	f00b fddf 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80062ce:	9803      	ldr	r0, [sp, #12]
 80062d0:	4631      	mov	r1, r6
 80062d2:	f00b fddb 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80062d6:	9803      	ldr	r0, [sp, #12]
 80062d8:	4659      	mov	r1, fp
 80062da:	f00b fdd7 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80062de:	9803      	ldr	r0, [sp, #12]
 80062e0:	4649      	mov	r1, r9
 80062e2:	f00b fdd3 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80062e6:	4620      	mov	r0, r4
 80062e8:	b00f      	add	sp, #60	; 0x3c
 80062ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062ee:	bf00      	nop
 80062f0:	08030f6c 	.word	0x08030f6c
 80062f4:	08034a34 	.word	0x08034a34
 80062f8:	08034794 	.word	0x08034794
 80062fc:	0802f874 	.word	0x0802f874
 8006300:	08034920 	.word	0x08034920
 8006304:	08030f54 	.word	0x08030f54
 8006308:	080060e3 	.word	0x080060e3
 800630c:	0016000f 	.word	0x0016000f

08006310 <_ZN24InstructionPage2ViewBaseD1Ev>:

class InstructionPage2ViewBase : public touchgfx::View<InstructionPage2Presenter>
{
public:
    InstructionPage2ViewBase();
    virtual ~InstructionPage2ViewBase() {}
 8006310:	4770      	bx	lr

08006312 <_ZN24InstructionPage2ViewBase11setupScreenEv>:
}

void InstructionPage2ViewBase::setupScreen()
{

}
 8006312:	4770      	bx	lr

08006314 <_ZN8touchgfx8CallbackI24InstructionPage2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006314:	4770      	bx	lr

08006316 <_ZN8touchgfx8CallbackI24InstructionPage2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006316:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8006318:	68c2      	ldr	r2, [r0, #12]
 800631a:	6844      	ldr	r4, [r0, #4]
 800631c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800631e:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8006320:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006324:	07d2      	lsls	r2, r2, #31
 8006326:	bf48      	it	mi
 8006328:	5962      	ldrmi	r2, [r4, r5]
 800632a:	689b      	ldr	r3, [r3, #8]
    }
 800632c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800632e:	bf48      	it	mi
 8006330:	58d3      	ldrmi	r3, [r2, r3]
 8006332:	4718      	bx	r3

08006334 <_ZNK8touchgfx8CallbackI24InstructionPage2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8006334:	6843      	ldr	r3, [r0, #4]
 8006336:	b12b      	cbz	r3, 8006344 <_ZNK8touchgfx8CallbackI24InstructionPage2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006338:	6883      	ldr	r3, [r0, #8]
 800633a:	b92b      	cbnz	r3, 8006348 <_ZNK8touchgfx8CallbackI24InstructionPage2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800633c:	68c0      	ldr	r0, [r0, #12]
 800633e:	f000 0001 	and.w	r0, r0, #1
 8006342:	4770      	bx	lr
 8006344:	4618      	mov	r0, r3
 8006346:	4770      	bx	lr
 8006348:	2001      	movs	r0, #1
    }
 800634a:	4770      	bx	lr

0800634c <_ZN8touchgfx8CallbackI24InstructionPage2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800634c:	b510      	push	{r4, lr}
 800634e:	2110      	movs	r1, #16
 8006350:	4604      	mov	r4, r0
 8006352:	f024 ff02 	bl	802b15a <_ZdlPvj>
 8006356:	4620      	mov	r0, r4
 8006358:	bd10      	pop	{r4, pc}

0800635a <_ZN24InstructionPage2ViewBaseD0Ev>:
 800635a:	b510      	push	{r4, lr}
 800635c:	f44f 71ce 	mov.w	r1, #412	; 0x19c
 8006360:	4604      	mov	r4, r0
 8006362:	f024 fefa 	bl	802b15a <_ZdlPvj>
 8006366:	4620      	mov	r0, r4
 8006368:	bd10      	pop	{r4, pc}

0800636a <_ZN24InstructionPage2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void InstructionPage2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800636a:	b508      	push	{r3, lr}
    if (&src == &I_lastbutton)
 800636c:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8006370:	4299      	cmp	r1, r3
 8006372:	d105      	bne.n	8006380 <_ZN24InstructionPage2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006374:	f013 f808 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When I_nextbutton2 clicked change screen to InstructionPage1
        //Go to InstructionPage1 with screen transition towards South
        application().gotoInstructionPage1ScreenSlideTransitionSouth();
    }
}
 8006378:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoKnownPageScreenSlideTransitionNorth();
 800637c:	f7fe bbbc 	b.w	8004af8 <_ZN23FrontendApplicationBase39gotoKnownPageScreenSlideTransitionNorthEv>
    else if (&src == &I_nextbutton2)
 8006380:	f500 70a8 	add.w	r0, r0, #336	; 0x150
 8006384:	4281      	cmp	r1, r0
 8006386:	d105      	bne.n	8006394 <_ZN24InstructionPage2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
 8006388:	f012 fffe 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
}
 800638c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoInstructionPage1ScreenSlideTransitionSouth();
 8006390:	f7fe bb92 	b.w	8004ab8 <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionSouthEv>
}
 8006394:	bd08      	pop	{r3, pc}
	...

08006398 <_ZN24InstructionPage2ViewBaseC1Ev>:
InstructionPage2ViewBase::InstructionPage2ViewBase() :
 8006398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800639c:	4604      	mov	r4, r0
 800639e:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &InstructionPage2ViewBase::buttonCallbackHandler)
 80063a0:	46a0      	mov	r8, r4
 80063a2:	2500      	movs	r5, #0
 80063a4:	f014 fb60 	bl	801aa68 <_ZN8touchgfx6ScreenC1Ev>
 80063a8:	4b85      	ldr	r3, [pc, #532]	; (80065c0 <_ZN24InstructionPage2ViewBaseC1Ev+0x228>)
 80063aa:	63e5      	str	r5, [r4, #60]	; 0x3c
 80063ac:	f848 3b40 	str.w	r3, [r8], #64
 80063b0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80063b4:	4640      	mov	r0, r8
 80063b6:	f7ff fea1 	bl	80060fc <_ZN8touchgfx3BoxC1Ev>
 80063ba:	f64f 79ff 	movw	r9, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 80063be:	2226      	movs	r2, #38	; 0x26
 80063c0:	4629      	mov	r1, r5
 80063c2:	4638      	mov	r0, r7
 80063c4:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 80063c8:	f025 ff9a 	bl	802c300 <memset>
 80063cc:	4638      	mov	r0, r7
 80063ce:	f7fd fbc1 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 80063d2:	4b7c      	ldr	r3, [pc, #496]	; (80065c4 <_ZN24InstructionPage2ViewBaseC1Ev+0x22c>)
 80063d4:	66e3      	str	r3, [r4, #108]	; 0x6c
 80063d6:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80063da:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80063de:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        Image::setBitmap(bmp);
 80063e2:	a90c      	add	r1, sp, #48	; 0x30
        : Widget(), bitmap(bmp), alpha(255)
 80063e4:	f884 9094 	strb.w	r9, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80063e8:	4638      	mov	r0, r7
 80063ea:	f104 06d4 	add.w	r6, r4, #212	; 0xd4
 80063ee:	f011 f910 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80063f2:	4650      	mov	r0, sl
 80063f4:	f011 f8e6 	bl	80175c4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80063f8:	4629      	mov	r1, r5
 80063fa:	2226      	movs	r2, #38	; 0x26
 80063fc:	4630      	mov	r0, r6
 80063fe:	f025 ff7f 	bl	802c300 <memset>
 8006402:	4630      	mov	r0, r6
 8006404:	f7fd fba6 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 8006408:	4b6f      	ldr	r3, [pc, #444]	; (80065c8 <_ZN24InstructionPage2ViewBaseC1Ev+0x230>)
 800640a:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 800640e:	4b6f      	ldr	r3, [pc, #444]	; (80065cc <_ZN24InstructionPage2ViewBaseC1Ev+0x234>)
 8006410:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 8006414:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8006418:	f504 7b8e 	add.w	fp, r4, #284	; 0x11c
 800641c:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        : x(x), y(y), width(width), height(height)
 8006420:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 8006424:	e9c4 3545 	strd	r3, r5, [r4, #276]	; 0x114
 8006428:	f8a4 9100 	strh.w	r9, [r4, #256]	; 0x100
        : color(col)
 800642c:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006430:	f8a4 510c 	strh.w	r5, [r4, #268]	; 0x10c
        : x(x), y(y), width(width), height(height)
 8006434:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
        : Box(), borderColor(0), borderSize(0)
 8006438:	4658      	mov	r0, fp
 800643a:	f7ff fe5f 	bl	80060fc <_ZN8touchgfx3BoxC1Ev>
 800643e:	f504 79a8 	add.w	r9, r4, #336	; 0x150
 8006442:	4b63      	ldr	r3, [pc, #396]	; (80065d0 <_ZN24InstructionPage2ViewBaseC1Ev+0x238>)
 8006444:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
        : color(col)
 8006448:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 800644c:	f8a4 514c 	strh.w	r5, [r4, #332]	; 0x14c
 8006450:	4648      	mov	r0, r9
 8006452:	f011 f8b7 	bl	80175c4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8006456:	4b5f      	ldr	r3, [pc, #380]	; (80065d4 <_ZN24InstructionPage2ViewBaseC1Ev+0x23c>)
 8006458:	e9c4 3463 	strd	r3, r4, [r4, #396]	; 0x18c
 800645c:	4b5e      	ldr	r3, [pc, #376]	; (80065d8 <_ZN24InstructionPage2ViewBaseC1Ev+0x240>)
 800645e:	e9c4 3565 	strd	r3, r5, [r4, #404]	; 0x194
    __background.setPosition(0, 0, 320, 240);
 8006462:	23f0      	movs	r3, #240	; 0xf0
 8006464:	9300      	str	r3, [sp, #0]
 8006466:	462a      	mov	r2, r5
 8006468:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800646c:	4629      	mov	r1, r5
 800646e:	4640      	mov	r0, r8
 8006470:	f7fe fab6 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006474:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8006478:	66a2      	str	r2, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 800647a:	4629      	mov	r1, r5
 800647c:	462a      	mov	r2, r5
 800647e:	4638      	mov	r0, r7
 8006480:	f7fd f9f2 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 8006484:	a90c      	add	r1, sp, #48	; 0x30
 8006486:	4638      	mov	r0, r7
 8006488:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 800648c:	f011 f8c1 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    I_lastbutton.setXY(63, 180);
 8006490:	4650      	mov	r0, sl
 8006492:	22b4      	movs	r2, #180	; 0xb4
 8006494:	213f      	movs	r1, #63	; 0x3f
 8006496:	f7fd f9e7 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 800649a:	230a      	movs	r3, #10
    I_lastbutton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID));
 800649c:	a80b      	add	r0, sp, #44	; 0x2c
 800649e:	f04f 0203 	mov.w	r2, #3
 80064a2:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80064a6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80064aa:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80064ae:	aa0c      	add	r2, sp, #48	; 0x30
 80064b0:	4603      	mov	r3, r0
 80064b2:	f04f 0104 	mov.w	r1, #4
 80064b6:	a809      	add	r0, sp, #36	; 0x24
 80064b8:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 80064bc:	9200      	str	r2, [sp, #0]
 80064be:	4601      	mov	r1, r0
 80064c0:	aa0a      	add	r2, sp, #40	; 0x28
 80064c2:	4650      	mov	r0, sl
 80064c4:	f010 ffdb 	bl	801747e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    I_lastbutton.setAction(buttonCallback);
 80064c8:	f504 70c6 	add.w	r0, r4, #396	; 0x18c
 80064cc:	4a43      	ldr	r2, [pc, #268]	; (80065dc <_ZN24InstructionPage2ViewBaseC1Ev+0x244>)
 80064ce:	f8c4 20d0 	str.w	r2, [r4, #208]	; 0xd0
 80064d2:	9003      	str	r0, [sp, #12]
 80064d4:	f8c4 00c0 	str.w	r0, [r4, #192]	; 0xc0
    textArea1.setXY(28, 27);
 80064d8:	221b      	movs	r2, #27
 80064da:	4630      	mov	r0, r6
 80064dc:	211c      	movs	r1, #28
 80064de:	f7fd f9c3 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 80064e2:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
        this->color = color;
 80064e6:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 80064ea:	ad04      	add	r5, sp, #16
        this->color = color;
 80064ec:	f8c4 0104 	str.w	r0, [r4, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 80064f0:	4631      	mov	r1, r6
 80064f2:	4628      	mov	r0, r5
 80064f4:	f010 f9c4 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064f8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80064fc:	f504 7388 	add.w	r3, r4, #272	; 0x110
 8006500:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D9D));
 8006504:	a80c      	add	r0, sp, #48	; 0x30
 8006506:	4b31      	ldr	r3, [pc, #196]	; (80065cc <_ZN24InstructionPage2ViewBaseC1Ev+0x234>)
 8006508:	930c      	str	r3, [sp, #48]	; 0x30
 800650a:	4601      	mov	r1, r0
 800650c:	2317      	movs	r3, #23
 800650e:	4630      	mov	r0, r6
 8006510:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006514:	f010 fcfa 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    boxWithBorder1.setPosition(28, 58, 264, 112);
 8006518:	2370      	movs	r3, #112	; 0x70
 800651a:	9300      	str	r3, [sp, #0]
 800651c:	4658      	mov	r0, fp
 800651e:	f44f 7384 	mov.w	r3, #264	; 0x108
 8006522:	223a      	movs	r2, #58	; 0x3a
 8006524:	211c      	movs	r1, #28
 8006526:	f7fe fa5b 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800652a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800652e:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
        borderColor = color;
 8006532:	f503 4307 	add.w	r3, r3, #34560	; 0x8700
 8006536:	33bd      	adds	r3, #189	; 0xbd
 8006538:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
        borderSize = size;
 800653c:	2305      	movs	r3, #5
 800653e:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
    I_nextbutton2.setXY(196, 180);
 8006542:	4648      	mov	r0, r9
 8006544:	22b4      	movs	r2, #180	; 0xb4
 8006546:	21c4      	movs	r1, #196	; 0xc4
 8006548:	f7fd f98e 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 800654c:	f04f 0303 	mov.w	r3, #3
 8006550:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006554:	f04f 0104 	mov.w	r1, #4
 8006558:	2308      	movs	r3, #8
 800655a:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 800655e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006562:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
    I_nextbutton2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID));
 8006566:	a90a      	add	r1, sp, #40	; 0x28
 8006568:	ab0c      	add	r3, sp, #48	; 0x30
 800656a:	9300      	str	r3, [sp, #0]
 800656c:	460a      	mov	r2, r1
 800656e:	ab0b      	add	r3, sp, #44	; 0x2c
 8006570:	a909      	add	r1, sp, #36	; 0x24
 8006572:	4648      	mov	r0, r9
 8006574:	f010 ff83 	bl	801747e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006578:	9b03      	ldr	r3, [sp, #12]
 800657a:	4a18      	ldr	r2, [pc, #96]	; (80065dc <_ZN24InstructionPage2ViewBaseC1Ev+0x244>)
 800657c:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
 8006580:	f8c4 3178 	str.w	r3, [r4, #376]	; 0x178
 8006584:	1d20      	adds	r0, r4, #4
 8006586:	4641      	mov	r1, r8
 8006588:	9003      	str	r0, [sp, #12]
 800658a:	f00b fc7f 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800658e:	9803      	ldr	r0, [sp, #12]
 8006590:	4639      	mov	r1, r7
 8006592:	f00b fc7b 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006596:	9803      	ldr	r0, [sp, #12]
 8006598:	4651      	mov	r1, sl
 800659a:	f00b fc77 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800659e:	9803      	ldr	r0, [sp, #12]
 80065a0:	4631      	mov	r1, r6
 80065a2:	f00b fc73 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80065a6:	9803      	ldr	r0, [sp, #12]
 80065a8:	4659      	mov	r1, fp
 80065aa:	f00b fc6f 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80065ae:	9803      	ldr	r0, [sp, #12]
 80065b0:	4649      	mov	r1, r9
 80065b2:	f00b fc6b 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80065b6:	4620      	mov	r0, r4
 80065b8:	b00f      	add	sp, #60	; 0x3c
 80065ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80065be:	bf00      	nop
 80065c0:	08030fb8 	.word	0x08030fb8
 80065c4:	08034a34 	.word	0x08034a34
 80065c8:	08034794 	.word	0x08034794
 80065cc:	0802f874 	.word	0x0802f874
 80065d0:	08034920 	.word	0x08034920
 80065d4:	08030fa0 	.word	0x08030fa0
 80065d8:	0800636b 	.word	0x0800636b
 80065dc:	0016000f 	.word	0x0016000f

080065e0 <_ZN17KnownPageViewBaseD1Ev>:

class KnownPageViewBase : public touchgfx::View<KnownPagePresenter>
{
public:
    KnownPageViewBase();
    virtual ~KnownPageViewBase() {}
 80065e0:	4770      	bx	lr

080065e2 <_ZN17KnownPageViewBase8PowerOffEv>:
     * Virtual Action Handlers
     */
    virtual void PowerOff()
    {
        // Override and implement this function in KnownPage
    }
 80065e2:	4770      	bx	lr

080065e4 <_ZN17KnownPageViewBase11setupScreenEv>:
}

void KnownPageViewBase::setupScreen()
{

}
 80065e4:	4770      	bx	lr

080065e6 <_ZN8touchgfx8CallbackI17KnownPageViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80065e6:	4770      	bx	lr

080065e8 <_ZN8touchgfx8CallbackI17KnownPageViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80065e8:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80065ea:	68c2      	ldr	r2, [r0, #12]
 80065ec:	6844      	ldr	r4, [r0, #4]
 80065ee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80065f0:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80065f2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80065f6:	07d2      	lsls	r2, r2, #31
 80065f8:	bf48      	it	mi
 80065fa:	5962      	ldrmi	r2, [r4, r5]
 80065fc:	689b      	ldr	r3, [r3, #8]
    }
 80065fe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8006600:	bf48      	it	mi
 8006602:	58d3      	ldrmi	r3, [r2, r3]
 8006604:	4718      	bx	r3

08006606 <_ZNK8touchgfx8CallbackI17KnownPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8006606:	6843      	ldr	r3, [r0, #4]
 8006608:	b12b      	cbz	r3, 8006616 <_ZNK8touchgfx8CallbackI17KnownPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800660a:	6883      	ldr	r3, [r0, #8]
 800660c:	b92b      	cbnz	r3, 800661a <_ZNK8touchgfx8CallbackI17KnownPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800660e:	68c0      	ldr	r0, [r0, #12]
 8006610:	f000 0001 	and.w	r0, r0, #1
 8006614:	4770      	bx	lr
 8006616:	4618      	mov	r0, r3
 8006618:	4770      	bx	lr
 800661a:	2001      	movs	r0, #1
    }
 800661c:	4770      	bx	lr

0800661e <_ZN8touchgfx8CallbackI17KnownPageViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800661e:	b510      	push	{r4, lr}
 8006620:	2110      	movs	r1, #16
 8006622:	4604      	mov	r4, r0
 8006624:	f024 fd99 	bl	802b15a <_ZdlPvj>
 8006628:	4620      	mov	r0, r4
 800662a:	bd10      	pop	{r4, pc}

0800662c <_ZN17KnownPageViewBaseD0Ev>:
    virtual ~KnownPageViewBase() {}
 800662c:	b510      	push	{r4, lr}
 800662e:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
 8006632:	4604      	mov	r4, r0
 8006634:	f024 fd91 	bl	802b15a <_ZdlPvj>
 8006638:	4620      	mov	r0, r4
 800663a:	bd10      	pop	{r4, pc}

0800663c <_ZN17KnownPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void KnownPageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &AgreeButton)
 800663c:	f100 0298 	add.w	r2, r0, #152	; 0x98
 8006640:	4291      	cmp	r1, r2
{
 8006642:	b510      	push	{r4, lr}
    if (&src == &AgreeButton)
 8006644:	d105      	bne.n	8006652 <_ZN17KnownPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006646:	f012 fe9f 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When RefuseButton clicked call virtual function
        //Call PowerOff
        PowerOff();
    }
}
 800664a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoPIPageScreenSlideTransitionNorth();
 800664e:	f7fe ba63 	b.w	8004b18 <_ZN23FrontendApplicationBase36gotoPIPageScreenSlideTransitionNorthEv>
    else if (&src == &RefuseButton)
 8006652:	f100 02e0 	add.w	r2, r0, #224	; 0xe0
 8006656:	4291      	cmp	r1, r2
 8006658:	d104      	bne.n	8006664 <_ZN17KnownPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
        PowerOff();
 800665a:	6803      	ldr	r3, [r0, #0]
}
 800665c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        PowerOff();
 8006660:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006662:	4718      	bx	r3
}
 8006664:	bd10      	pop	{r4, pc}
	...

08006668 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8006668:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800666a:	2226      	movs	r2, #38	; 0x26
    TextArea()
 800666c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800666e:	2100      	movs	r1, #0
 8006670:	f025 fe46 	bl	802c300 <memset>
 8006674:	4620      	mov	r0, r4
 8006676:	f7fd fa6d 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 800667a:	4b0a      	ldr	r3, [pc, #40]	; (80066a4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 800667c:	6023      	str	r3, [r4, #0]
 800667e:	4b0a      	ldr	r3, [pc, #40]	; (80066a8 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8006680:	62a3      	str	r3, [r4, #40]	; 0x28
 8006682:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006686:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8006688:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800668c:	2300      	movs	r3, #0
 800668e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(x), y(y), width(width), height(height)
 8006692:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8006696:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800669a:	8723      	strh	r3, [r4, #56]	; 0x38
 800669c:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 800669e:	4620      	mov	r0, r4
 80066a0:	bd10      	pop	{r4, pc}
 80066a2:	bf00      	nop
 80066a4:	08034794 	.word	0x08034794
 80066a8:	0802f874 	.word	0x0802f874

080066ac <_ZN17KnownPageViewBaseC1Ev>:
KnownPageViewBase::KnownPageViewBase() :
 80066ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80066b0:	4604      	mov	r4, r0
 80066b2:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &KnownPageViewBase::buttonCallbackHandler)
 80066b4:	4626      	mov	r6, r4
 80066b6:	2500      	movs	r5, #0
 80066b8:	f014 f9d6 	bl	801aa68 <_ZN8touchgfx6ScreenC1Ev>
 80066bc:	4b7c      	ldr	r3, [pc, #496]	; (80068b0 <_ZN17KnownPageViewBaseC1Ev+0x204>)
 80066be:	63e5      	str	r5, [r4, #60]	; 0x3c
 80066c0:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 80066c4:	4629      	mov	r1, r5
 80066c6:	2226      	movs	r2, #38	; 0x26
 80066c8:	4630      	mov	r0, r6
 80066ca:	f025 fe19 	bl	802c300 <memset>
 80066ce:	4630      	mov	r0, r6
 80066d0:	f7fd fa40 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 80066d4:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80066d8:	f04f 08ff 	mov.w	r8, #255	; 0xff
 80066dc:	4b75      	ldr	r3, [pc, #468]	; (80068b4 <_ZN17KnownPageViewBaseC1Ev+0x208>)
 80066de:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80066e0:	2226      	movs	r2, #38	; 0x26
 80066e2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80066e6:	4629      	mov	r1, r5
 80066e8:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
        : color(col)
 80066ec:	66a5      	str	r5, [r4, #104]	; 0x68
 80066ee:	4638      	mov	r0, r7
 80066f0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80066f4:	f025 fe04 	bl	802c300 <memset>
 80066f8:	4638      	mov	r0, r7
 80066fa:	f7fd fa2b 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 80066fe:	4b6e      	ldr	r3, [pc, #440]	; (80068b8 <_ZN17KnownPageViewBaseC1Ev+0x20c>)
 8006700:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006702:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8006706:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800670a:	a908      	add	r1, sp, #32
 800670c:	f104 0b98 	add.w	fp, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006710:	f884 8094 	strb.w	r8, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006714:	4638      	mov	r0, r7
 8006716:	f010 ff7c 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800671a:	f104 0ae0 	add.w	sl, r4, #224	; 0xe0
 800671e:	4658      	mov	r0, fp
 8006720:	f011 f8c0 	bl	80178a4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006724:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8006728:	4650      	mov	r0, sl
 800672a:	f011 f8bb 	bl	80178a4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800672e:	f504 78b8 	add.w	r8, r4, #368	; 0x170
 8006732:	4648      	mov	r0, r9
 8006734:	f7ff ff98 	bl	8006668 <_ZN8touchgfx8TextAreaC1Ev>
 8006738:	4640      	mov	r0, r8
 800673a:	f7ff ff95 	bl	8006668 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800673e:	4b5f      	ldr	r3, [pc, #380]	; (80068bc <_ZN17KnownPageViewBaseC1Ev+0x210>)
 8006740:	e9c4 346e 	strd	r3, r4, [r4, #440]	; 0x1b8
 8006744:	4b5e      	ldr	r3, [pc, #376]	; (80068c0 <_ZN17KnownPageViewBaseC1Ev+0x214>)
        setXY(x, y);
 8006746:	462a      	mov	r2, r5
 8006748:	e9c4 3570 	strd	r3, r5, [r4, #448]	; 0x1c0
 800674c:	4629      	mov	r1, r5
 800674e:	4630      	mov	r0, r6
 8006750:	f7fd f88a 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8006754:	4630      	mov	r0, r6
 8006756:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800675a:	f7fd f805 	bl	8003768 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800675e:	4630      	mov	r0, r6
 8006760:	21f0      	movs	r1, #240	; 0xf0
 8006762:	f7fd f803 	bl	800376c <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 8006766:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800676a:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 800676c:	462a      	mov	r2, r5
 800676e:	4629      	mov	r1, r5
 8006770:	4638      	mov	r0, r7
 8006772:	f7fd f879 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 8006776:	a908      	add	r1, sp, #32
 8006778:	4638      	mov	r0, r7
 800677a:	f8ad 5020 	strh.w	r5, [sp, #32]
 800677e:	f010 ff48 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    AgreeButton.setXY(75, 90);
 8006782:	4658      	mov	r0, fp
 8006784:	225a      	movs	r2, #90	; 0x5a
 8006786:	214b      	movs	r1, #75	; 0x4b
 8006788:	f7fd f86e 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 800678c:	2301      	movs	r3, #1
    AgreeButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 800678e:	aa08      	add	r2, sp, #32
 8006790:	a907      	add	r1, sp, #28
 8006792:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006796:	4658      	mov	r0, fp
 8006798:	2302      	movs	r3, #2
 800679a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800679e:	f010 fc0f 	bl	8016fc0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80067a2:	2316      	movs	r3, #22
 80067a4:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        updateTextPosition();
 80067a8:	4658      	mov	r0, fp
 80067aa:	f7fd f86b 	bl	8003884 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80067ae:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 80067b2:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    AgreeButton.setAction(buttonCallback);
 80067b6:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 80067ba:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    RefuseButton.setXY(75, 150);
 80067be:	4650      	mov	r0, sl
 80067c0:	2296      	movs	r2, #150	; 0x96
 80067c2:	214b      	movs	r1, #75	; 0x4b
    AgreeButton.setAction(buttonCallback);
 80067c4:	9301      	str	r3, [sp, #4]
    RefuseButton.setXY(75, 150);
 80067c6:	f7fd f84f 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 80067ca:	220f      	movs	r2, #15
 80067cc:	f04f 030e 	mov.w	r3, #14
    RefuseButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80067d0:	a907      	add	r1, sp, #28
 80067d2:	f8ad 2020 	strh.w	r2, [sp, #32]
 80067d6:	4650      	mov	r0, sl
 80067d8:	aa08      	add	r2, sp, #32
 80067da:	f8ad 301c 	strh.w	r3, [sp, #28]
 80067de:	f010 fbef 	bl	8016fc0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80067e2:	2215      	movs	r2, #21
 80067e4:	f8a4 2118 	strh.w	r2, [r4, #280]	; 0x118
        updateTextPosition();
 80067e8:	4650      	mov	r0, sl
 80067ea:	f7fd f84b 	bl	8003884 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80067ee:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 80067f2:	e9c4 3347 	strd	r3, r3, [r4, #284]	; 0x11c
 80067f6:	9b01      	ldr	r3, [sp, #4]
 80067f8:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
    Note1.setXY(14, 45);
 80067fc:	222d      	movs	r2, #45	; 0x2d
 80067fe:	4648      	mov	r0, r9
 8006800:	210e      	movs	r1, #14
 8006802:	f7fd f831 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8006806:	4b2f      	ldr	r3, [pc, #188]	; (80068c4 <_ZN17KnownPageViewBaseC1Ev+0x218>)
 8006808:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
        linespace = space;
 800680c:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8006810:	4649      	mov	r1, r9
 8006812:	a802      	add	r0, sp, #8
 8006814:	f010 f834 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006818:	ab02      	add	r3, sp, #8
 800681a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800681e:	f504 7cb2 	add.w	ip, r4, #356	; 0x164
 8006822:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        : typedTextId(id)
 8006826:	4b28      	ldr	r3, [pc, #160]	; (80068c8 <_ZN17KnownPageViewBaseC1Ev+0x21c>)
 8006828:	9308      	str	r3, [sp, #32]
 800682a:	2208      	movs	r2, #8
    Note1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X1OM));
 800682c:	a908      	add	r1, sp, #32
 800682e:	4648      	mov	r0, r9
 8006830:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8006834:	f010 fb6a 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    Note2.setXY(7, 59);
 8006838:	223b      	movs	r2, #59	; 0x3b
 800683a:	4640      	mov	r0, r8
 800683c:	2107      	movs	r1, #7
 800683e:	f7fd f813 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8006842:	4b20      	ldr	r3, [pc, #128]	; (80068c4 <_ZN17KnownPageViewBaseC1Ev+0x218>)
 8006844:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
        linespace = space;
 8006848:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 800684c:	4641      	mov	r1, r8
 800684e:	a802      	add	r0, sp, #8
 8006850:	f010 f816 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006854:	ab02      	add	r3, sp, #8
 8006856:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800685a:	f504 75d6 	add.w	r5, r4, #428	; 0x1ac
 800685e:	4b1a      	ldr	r3, [pc, #104]	; (80068c8 <_ZN17KnownPageViewBaseC1Ev+0x21c>)
 8006860:	9308      	str	r3, [sp, #32]
 8006862:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8006866:	2307      	movs	r3, #7
    Note2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XN3R));
 8006868:	a908      	add	r1, sp, #32
 800686a:	4640      	mov	r0, r8
 800686c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006870:	f010 fb4c 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006874:	1d20      	adds	r0, r4, #4
 8006876:	4631      	mov	r1, r6
 8006878:	9001      	str	r0, [sp, #4]
 800687a:	f00b fb07 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800687e:	9801      	ldr	r0, [sp, #4]
 8006880:	4639      	mov	r1, r7
 8006882:	f00b fb03 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006886:	9801      	ldr	r0, [sp, #4]
 8006888:	4659      	mov	r1, fp
 800688a:	f00b faff 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800688e:	9801      	ldr	r0, [sp, #4]
 8006890:	4651      	mov	r1, sl
 8006892:	f00b fafb 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006896:	9801      	ldr	r0, [sp, #4]
 8006898:	4649      	mov	r1, r9
 800689a:	f00b faf7 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800689e:	9801      	ldr	r0, [sp, #4]
 80068a0:	4641      	mov	r1, r8
 80068a2:	f00b faf3 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80068a6:	4620      	mov	r0, r4
 80068a8:	b00b      	add	sp, #44	; 0x2c
 80068aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80068ae:	bf00      	nop
 80068b0:	08031004 	.word	0x08031004
 80068b4:	08034854 	.word	0x08034854
 80068b8:	08034a34 	.word	0x08034a34
 80068bc:	08030fec 	.word	0x08030fec
 80068c0:	0800663d 	.word	0x0800663d
 80068c4:	ffff0000 	.word	0xffff0000
 80068c8:	0802f874 	.word	0x0802f874

080068cc <_ZN14PIPageViewBaseD1Ev>:

class PIPageViewBase : public touchgfx::View<PIPagePresenter>
{
public:
    PIPageViewBase();
    virtual ~PIPageViewBase() {}
 80068cc:	4770      	bx	lr

080068ce <_ZN14PIPageViewBase11setupScreenEv>:
}

void PIPageViewBase::setupScreen()
{

}
 80068ce:	4770      	bx	lr

080068d0 <_ZN8touchgfx8CallbackI14PIPageViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80068d0:	4770      	bx	lr

080068d2 <_ZN8touchgfx8CallbackI14PIPageViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80068d2:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80068d4:	68c2      	ldr	r2, [r0, #12]
 80068d6:	6844      	ldr	r4, [r0, #4]
 80068d8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80068da:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80068dc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80068e0:	07d2      	lsls	r2, r2, #31
 80068e2:	bf48      	it	mi
 80068e4:	5962      	ldrmi	r2, [r4, r5]
 80068e6:	689b      	ldr	r3, [r3, #8]
    }
 80068e8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80068ea:	bf48      	it	mi
 80068ec:	58d3      	ldrmi	r3, [r2, r3]
 80068ee:	4718      	bx	r3

080068f0 <_ZNK8touchgfx8CallbackI14PIPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80068f0:	6843      	ldr	r3, [r0, #4]
 80068f2:	b12b      	cbz	r3, 8006900 <_ZNK8touchgfx8CallbackI14PIPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80068f4:	6883      	ldr	r3, [r0, #8]
 80068f6:	b92b      	cbnz	r3, 8006904 <_ZNK8touchgfx8CallbackI14PIPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80068f8:	68c0      	ldr	r0, [r0, #12]
 80068fa:	f000 0001 	and.w	r0, r0, #1
 80068fe:	4770      	bx	lr
 8006900:	4618      	mov	r0, r3
 8006902:	4770      	bx	lr
 8006904:	2001      	movs	r0, #1
    }
 8006906:	4770      	bx	lr

08006908 <_ZN8touchgfx8CallbackI14PIPageViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006908:	b510      	push	{r4, lr}
 800690a:	2110      	movs	r1, #16
 800690c:	4604      	mov	r4, r0
 800690e:	f024 fc24 	bl	802b15a <_ZdlPvj>
 8006912:	4620      	mov	r0, r4
 8006914:	bd10      	pop	{r4, pc}

08006916 <_ZN14PIPageViewBaseD0Ev>:
 8006916:	b510      	push	{r4, lr}
 8006918:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800691c:	4604      	mov	r4, r0
 800691e:	f024 fc1c 	bl	802b15a <_ZdlPvj>
 8006922:	4620      	mov	r0, r4
 8006924:	bd10      	pop	{r4, pc}

08006926 <_ZN14PIPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void PIPageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &NextButton2)
 8006926:	30e0      	adds	r0, #224	; 0xe0
 8006928:	4288      	cmp	r0, r1
{
 800692a:	b508      	push	{r3, lr}
    if (&src == &NextButton2)
 800692c:	d105      	bne.n	800693a <_ZN14PIPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800692e:	f012 fd2b 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When NextButton2 clicked change screen to StartMeasurement
        //Go to StartMeasurement with screen transition towards North
        application().gotoStartMeasurementScreenSlideTransitionNorth();
    }
}
 8006932:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoStartMeasurementScreenSlideTransitionNorth();
 8006936:	f7fe b8ff 	b.w	8004b38 <_ZN23FrontendApplicationBase46gotoStartMeasurementScreenSlideTransitionNorthEv>
}
 800693a:	bd08      	pop	{r3, pc}

0800693c <_ZN14PIPageViewBaseC1Ev>:
PIPageViewBase::PIPageViewBase() :
 800693c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006940:	4604      	mov	r4, r0
 8006942:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &PIPageViewBase::buttonCallbackHandler)
 8006944:	4626      	mov	r6, r4
 8006946:	2500      	movs	r5, #0
 8006948:	f014 f88e 	bl	801aa68 <_ZN8touchgfx6ScreenC1Ev>
 800694c:	4b64      	ldr	r3, [pc, #400]	; (8006ae0 <_ZN14PIPageViewBaseC1Ev+0x1a4>)
 800694e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006950:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8006954:	4629      	mov	r1, r5
 8006956:	2226      	movs	r2, #38	; 0x26
 8006958:	4630      	mov	r0, r6
 800695a:	f025 fcd1 	bl	802c300 <memset>
 800695e:	4630      	mov	r0, r6
 8006960:	f7fd f8f8 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 8006964:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006968:	4b5e      	ldr	r3, [pc, #376]	; (8006ae4 <_ZN14PIPageViewBaseC1Ev+0x1a8>)
 800696a:	6423      	str	r3, [r4, #64]	; 0x40
 800696c:	27ff      	movs	r7, #255	; 0xff
        : Widget(), bitmap(bmp), alpha(255)
 800696e:	2226      	movs	r2, #38	; 0x26
 8006970:	4629      	mov	r1, r5
 8006972:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8006976:	66a5      	str	r5, [r4, #104]	; 0x68
 8006978:	f64f 79ff 	movw	r9, #65535	; 0xffff
 800697c:	4640      	mov	r0, r8
 800697e:	f8ad 9030 	strh.w	r9, [sp, #48]	; 0x30
 8006982:	f025 fcbd 	bl	802c300 <memset>
 8006986:	4640      	mov	r0, r8
 8006988:	f7fd f8e4 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 800698c:	4b56      	ldr	r3, [pc, #344]	; (8006ae8 <_ZN14PIPageViewBaseC1Ev+0x1ac>)
 800698e:	66e3      	str	r3, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8006990:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
        : Widget(), bitmap(bmp), alpha(255)
 8006994:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8006998:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800699c:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80069a0:	4651      	mov	r1, sl
 80069a2:	f104 0798 	add.w	r7, r4, #152	; 0x98
 80069a6:	4640      	mov	r0, r8
 80069a8:	f010 fe33 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80069ac:	4629      	mov	r1, r5
 80069ae:	2226      	movs	r2, #38	; 0x26
 80069b0:	4638      	mov	r0, r7
 80069b2:	f025 fca5 	bl	802c300 <memset>
 80069b6:	4638      	mov	r0, r7
 80069b8:	f7fd f8cc 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 80069bc:	4b4b      	ldr	r3, [pc, #300]	; (8006aec <_ZN14PIPageViewBaseC1Ev+0x1b0>)
 80069be:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80069c2:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80069c6:	f8df b134 	ldr.w	fp, [pc, #308]	; 8006afc <_ZN14PIPageViewBaseC1Ev+0x1c0>
 80069ca:	f8a4 90c4 	strh.w	r9, [r4, #196]	; 0xc4
 80069ce:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 80069d2:	f104 09e0 	add.w	r9, r4, #224	; 0xe0
        : x(x), y(y), width(width), height(height)
 80069d6:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 80069da:	e9c4 3536 	strd	r3, r5, [r4, #216]	; 0xd8
        : color(col)
 80069de:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80069e2:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(x), y(y), width(width), height(height)
 80069e6:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
 80069ea:	f8c4 b0c0 	str.w	fp, [r4, #192]	; 0xc0
 80069ee:	4648      	mov	r0, r9
 80069f0:	f010 fde8 	bl	80175c4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80069f4:	4b3e      	ldr	r3, [pc, #248]	; (8006af0 <_ZN14PIPageViewBaseC1Ev+0x1b4>)
 80069f6:	e9c4 3447 	strd	r3, r4, [r4, #284]	; 0x11c
 80069fa:	4b3e      	ldr	r3, [pc, #248]	; (8006af4 <_ZN14PIPageViewBaseC1Ev+0x1b8>)
        setXY(x, y);
 80069fc:	462a      	mov	r2, r5
 80069fe:	e9c4 3549 	strd	r3, r5, [r4, #292]	; 0x124
 8006a02:	4629      	mov	r1, r5
 8006a04:	4630      	mov	r0, r6
 8006a06:	f7fc ff2f 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8006a0a:	4630      	mov	r0, r6
 8006a0c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006a10:	f7fc feaa 	bl	8003768 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8006a14:	4630      	mov	r0, r6
 8006a16:	21f0      	movs	r1, #240	; 0xf0
 8006a18:	f7fc fea8 	bl	800376c <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 8006a1c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006a20:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 8006a22:	462a      	mov	r2, r5
 8006a24:	4629      	mov	r1, r5
 8006a26:	4640      	mov	r0, r8
 8006a28:	f7fc ff1e 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 8006a2c:	4651      	mov	r1, sl
 8006a2e:	4640      	mov	r0, r8
 8006a30:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 8006a34:	f010 fded 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textArea1.setXY(28, 27);
 8006a38:	221b      	movs	r2, #27
 8006a3a:	4638      	mov	r0, r7
 8006a3c:	211c      	movs	r1, #28
 8006a3e:	f7fc ff13 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8006a42:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        linespace = space;
 8006a46:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006a4a:	ad04      	add	r5, sp, #16
        this->color = color;
 8006a4c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006a50:	4639      	mov	r1, r7
 8006a52:	4628      	mov	r0, r5
 8006a54:	f00f ff14 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a58:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006a5c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006a60:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a64:	2314      	movs	r3, #20
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P62M));
 8006a66:	4651      	mov	r1, sl
 8006a68:	4638      	mov	r0, r7
 8006a6a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006a6e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006a72:	f010 fa4b 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    NextButton2.setXY(130, 180);
 8006a76:	4648      	mov	r0, r9
 8006a78:	22b4      	movs	r2, #180	; 0xb4
 8006a7a:	2182      	movs	r1, #130	; 0x82
 8006a7c:	f7fc fef4 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 8006a80:	2303      	movs	r3, #3
 8006a82:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006a86:	2304      	movs	r3, #4
 8006a88:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006a8c:	2308      	movs	r3, #8
    NextButton2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID));
 8006a8e:	aa0a      	add	r2, sp, #40	; 0x28
 8006a90:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a94:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006a98:	a909      	add	r1, sp, #36	; 0x24
 8006a9a:	ab0b      	add	r3, sp, #44	; 0x2c
 8006a9c:	4648      	mov	r0, r9
 8006a9e:	f8cd a000 	str.w	sl, [sp]
 8006aa2:	f010 fcec 	bl	801747e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006aa6:	4b14      	ldr	r3, [pc, #80]	; (8006af8 <_ZN14PIPageViewBaseC1Ev+0x1bc>)
 8006aa8:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
    NextButton2.setAction(buttonCallback);
 8006aac:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006ab0:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8006ab4:	1d20      	adds	r0, r4, #4
 8006ab6:	4631      	mov	r1, r6
 8006ab8:	9003      	str	r0, [sp, #12]
 8006aba:	f00b f9e7 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006abe:	9803      	ldr	r0, [sp, #12]
 8006ac0:	4641      	mov	r1, r8
 8006ac2:	f00b f9e3 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006ac6:	9803      	ldr	r0, [sp, #12]
 8006ac8:	4639      	mov	r1, r7
 8006aca:	f00b f9df 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006ace:	9803      	ldr	r0, [sp, #12]
 8006ad0:	4649      	mov	r1, r9
 8006ad2:	f00b f9db 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006ad6:	4620      	mov	r0, r4
 8006ad8:	b00f      	add	sp, #60	; 0x3c
 8006ada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ade:	bf00      	nop
 8006ae0:	08031054 	.word	0x08031054
 8006ae4:	08034854 	.word	0x08034854
 8006ae8:	08034a34 	.word	0x08034a34
 8006aec:	08034794 	.word	0x08034794
 8006af0:	0803103c 	.word	0x0803103c
 8006af4:	08006927 	.word	0x08006927
 8006af8:	0016000f 	.word	0x0016000f
 8006afc:	0802f874 	.word	0x0802f874

08006b00 <_ZN19ProgressBarViewBaseD1Ev>:

class ProgressBarViewBase : public touchgfx::View<ProgressBarPresenter>
{
public:
    ProgressBarViewBase();
    virtual ~ProgressBarViewBase() {}
 8006b00:	4770      	bx	lr

08006b02 <_ZN19ProgressBarViewBase11setupScreenEv>:
}

void ProgressBarViewBase::setupScreen()
{

}
 8006b02:	4770      	bx	lr

08006b04 <_ZN19ProgressBarViewBaseD0Ev>:
 8006b04:	b510      	push	{r4, lr}
 8006b06:	f241 51e8 	movw	r1, #5608	; 0x15e8
 8006b0a:	4604      	mov	r4, r0
 8006b0c:	f024 fb25 	bl	802b15a <_ZdlPvj>
 8006b10:	4620      	mov	r0, r4
 8006b12:	bd10      	pop	{r4, pc}

08006b14 <_ZN19ProgressBarViewBase14handleKeyEventEh>:

//Handles when a key is pressed
void ProgressBarViewBase::handleKeyEvent(uint8_t key)
{
 8006b14:	b508      	push	{r3, lr}
    if(0 == key)
 8006b16:	b929      	cbnz	r1, 8006b24 <_ZN19ProgressBarViewBase14handleKeyEventEh+0x10>
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006b18:	f012 fc36 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When hardware button 0 clicked change screen to DataDisplayList
        //Go to DataDisplayList with screen transition towards North
        application().gotoDataDisplayListScreenSlideTransitionNorth();
    }
}
 8006b1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoDataDisplayListScreenSlideTransitionNorth();
 8006b20:	f7fe b82a 	b.w	8004b78 <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionNorthEv>
}
 8006b24:	bd08      	pop	{r3, pc}
	...

08006b28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8006b28:	b570      	push	{r4, r5, r6, lr}
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8006b2a:	4e15      	ldr	r6, [pc, #84]	; (8006b80 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
public:
    /** Initializes a new instance of the AbstractPainter class. */
    AbstractPainter()
        : areaOffsetX(0),
          areaOffsetY(0),
          widgetAlpha(255)
 8006b2c:	2300      	movs	r3, #0
 8006b2e:	22ff      	movs	r2, #255	; 0xff
        : AbstractPainter(), currentX(0), currentY(0)
 8006b30:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006b34:	6043      	str	r3, [r0, #4]
 8006b36:	6833      	ldr	r3, [r6, #0]
 8006b38:	7202      	strb	r2, [r0, #8]
 8006b3a:	4a12      	ldr	r2, [pc, #72]	; (8006b84 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8006b3c:	6002      	str	r2, [r0, #0]
 8006b3e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8006b42:	4604      	mov	r4, r0
 8006b44:	b10a      	cbz	r2, 8006b4a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x22>
 8006b46:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8006b48:	b900      	cbnz	r0, 8006b4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x24>
        return instance->lcdRef;
 8006b4a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8006b4c:	6803      	ldr	r3, [r0, #0]
 8006b4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b50:	4798      	blx	r3
        return auxiliaryLCD;
 8006b52:	6833      	ldr	r3, [r6, #0]
 8006b54:	fab0 f580 	clz	r5, r0
 8006b58:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8006b5a:	096d      	lsrs	r5, r5, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8006b5c:	b130      	cbz	r0, 8006b6c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x44>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8006b5e:	6803      	ldr	r3, [r0, #0]
 8006b60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b62:	4798      	blx	r3
 8006b64:	2800      	cmp	r0, #0
 8006b66:	bf08      	it	eq
 8006b68:	f045 0501 	orreq.w	r5, r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8006b6c:	b92d      	cbnz	r5, 8006b7a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x52>
 8006b6e:	4b06      	ldr	r3, [pc, #24]	; (8006b88 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8006b70:	4a06      	ldr	r2, [pc, #24]	; (8006b8c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x64>)
 8006b72:	4807      	ldr	r0, [pc, #28]	; (8006b90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x68>)
 8006b74:	212c      	movs	r1, #44	; 0x2c
 8006b76:	f025 fa3d 	bl	802bff4 <__assert_func>
    }
 8006b7a:	4620      	mov	r0, r4
 8006b7c:	bd70      	pop	{r4, r5, r6, pc}
 8006b7e:	bf00      	nop
 8006b80:	2001e1c0 	.word	0x2001e1c0
 8006b84:	08033d34 	.word	0x08033d34
 8006b88:	08031080 	.word	0x08031080
 8006b8c:	080310de 	.word	0x080310de
 8006b90:	08031117 	.word	0x08031117

08006b94 <_ZN19ProgressBarViewBaseC1Ev>:
ProgressBarViewBase::ProgressBarViewBase()
 8006b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b98:	ed2d 8b02 	vpush	{d8}
 8006b9c:	4604      	mov	r4, r0
 8006b9e:	b08b      	sub	sp, #44	; 0x2c
 8006ba0:	46a0      	mov	r8, r4
 8006ba2:	2500      	movs	r5, #0
 8006ba4:	f013 ff60 	bl	801aa68 <_ZN8touchgfx6ScreenC1Ev>
 8006ba8:	4b9c      	ldr	r3, [pc, #624]	; (8006e1c <_ZN19ProgressBarViewBaseC1Ev+0x288>)
 8006baa:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006bac:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8006bb0:	4629      	mov	r1, r5
 8006bb2:	2226      	movs	r2, #38	; 0x26
 8006bb4:	4640      	mov	r0, r8
 8006bb6:	f025 fba3 	bl	802c300 <memset>
 8006bba:	4640      	mov	r0, r8
 8006bbc:	f7fc ffca 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 8006bc0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006bc4:	4b96      	ldr	r3, [pc, #600]	; (8006e20 <_ZN19ProgressBarViewBaseC1Ev+0x28c>)
 8006bc6:	6423      	str	r3, [r4, #64]	; 0x40
 8006bc8:	26ff      	movs	r6, #255	; 0xff
        : Widget(), bitmap(bmp), alpha(255)
 8006bca:	2226      	movs	r2, #38	; 0x26
 8006bcc:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8006bd0:	4629      	mov	r1, r5
 8006bd2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
        : color(col)
 8006bd6:	66a5      	str	r5, [r4, #104]	; 0x68
 8006bd8:	4650      	mov	r0, sl
 8006bda:	f8ad b020 	strh.w	fp, [sp, #32]
 8006bde:	f025 fb8f 	bl	802c300 <memset>
 8006be2:	4650      	mov	r0, sl
 8006be4:	f7fc ffb6 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 8006be8:	4b8e      	ldr	r3, [pc, #568]	; (8006e24 <_ZN19ProgressBarViewBaseC1Ev+0x290>)
 8006bea:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006bec:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8006bf0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006bf4:	a908      	add	r1, sp, #32
        : Widget(), bitmap(bmp), alpha(255)
 8006bf6:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006bfa:	4650      	mov	r0, sl
 8006bfc:	f104 0698 	add.w	r6, r4, #152	; 0x98
 8006c00:	f010 fd07 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c04:	4630      	mov	r0, r6
 8006c06:	f00a fed1 	bl	80119ac <_ZN8touchgfx14CircleProgressC1Ev>
 8006c0a:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8006c0e:	ee08 3a10 	vmov	s16, r3
     */
    PainterRGB565Bitmap(const Bitmap& bmp = Bitmap(BITMAP_INVALID))
        : AbstractPainterRGB565(),
          bitmapARGB8888Pointer(0), bitmapRGB565Pointer(0), bitmapAlphaPointer(0),
          bitmap(), bitmapRectToFrameBuffer(),
          xOffset(0), yOffset(0), isTiled(false)
 8006c12:	4618      	mov	r0, r3
 8006c14:	f8ad b020 	strh.w	fp, [sp, #32]
 8006c18:	f7ff ff86 	bl	8006b28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006c1c:	4b82      	ldr	r3, [pc, #520]	; (8006e28 <_ZN19ProgressBarViewBaseC1Ev+0x294>)
 8006c1e:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006c22:	f504 77e6 	add.w	r7, r4, #460	; 0x1cc
 8006c26:	e9c4 5b6e 	strd	r5, fp, [r4, #440]	; 0x1b8
    {
        setBitmap(bmp);
 8006c2a:	a908      	add	r1, sp, #32
          xOffset(0), yOffset(0), isTiled(false)
 8006c2c:	e9c4 556c 	strd	r5, r5, [r4, #432]	; 0x1b0
        : x(0), y(0), width(0), height(0)
 8006c30:	e9c4 5570 	strd	r5, r5, [r4, #448]	; 0x1c0
        setBitmap(bmp);
 8006c34:	ee18 0a10 	vmov	r0, s16
          xOffset(0), yOffset(0), isTiled(false)
 8006c38:	f8a4 51c8 	strh.w	r5, [r4, #456]	; 0x1c8
 8006c3c:	f884 51ca 	strb.w	r5, [r4, #458]	; 0x1ca
        setBitmap(bmp);
 8006c40:	f00c fe86 	bl	8013950 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>
 8006c44:	f504 7938 	add.w	r9, r4, #736	; 0x2e0
 8006c48:	4638      	mov	r0, r7
 8006c4a:	f00a fd97 	bl	801177c <_ZN8touchgfx12TextProgressC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006c4e:	2226      	movs	r2, #38	; 0x26
 8006c50:	4629      	mov	r1, r5
 8006c52:	4648      	mov	r0, r9
 8006c54:	f025 fb54 	bl	802c300 <memset>
 8006c58:	4648      	mov	r0, r9
 8006c5a:	f7fc ff7b 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 8006c5e:	4b73      	ldr	r3, [pc, #460]	; (8006e2c <_ZN19ProgressBarViewBaseC1Ev+0x298>)
 8006c60:	f8c4 32e0 	str.w	r3, [r4, #736]	; 0x2e0
 8006c64:	4b72      	ldr	r3, [pc, #456]	; (8006e30 <_ZN19ProgressBarViewBaseC1Ev+0x29c>)
 8006c66:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 8006c6a:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8006c6e:	f8c4 3314 	str.w	r3, [r4, #788]	; 0x314
        : x(x), y(y), width(width), height(height)
 8006c72:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 8006c76:	e9c4 35c8 	strd	r3, r5, [r4, #800]	; 0x320
 8006c7a:	f8a4 b30c 	strh.w	fp, [r4, #780]	; 0x30c
        : color(col)
 8006c7e:	f8c4 5310 	str.w	r5, [r4, #784]	; 0x310
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8006c82:	f8a4 5318 	strh.w	r5, [r4, #792]	; 0x318
        : x(x), y(y), width(width), height(height)
 8006c86:	f8c4 531c 	str.w	r5, [r4, #796]	; 0x31c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006c8a:	f504 704a 	add.w	r0, r4, #808	; 0x328
 8006c8e:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8006c92:	f010 fe35 	bl	8017900 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        setXY(x, y);
 8006c96:	462a      	mov	r2, r5
 8006c98:	4629      	mov	r1, r5
 8006c9a:	4640      	mov	r0, r8
 8006c9c:	f7fc fde4 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8006ca0:	4640      	mov	r0, r8
 8006ca2:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006ca6:	f7fc fd5f 	bl	8003768 <_ZN8touchgfx8Drawable8setWidthEs>
        this->color = color;
 8006caa:	f04f 4b7f 	mov.w	fp, #4278190080	; 0xff000000
        setHeight(height);
 8006cae:	4640      	mov	r0, r8
 8006cb0:	21f0      	movs	r1, #240	; 0xf0
 8006cb2:	f7fc fd5b 	bl	800376c <_ZN8touchgfx8Drawable9setHeightEs>
    image1.setXY(0, 0);
 8006cb6:	462a      	mov	r2, r5
 8006cb8:	4629      	mov	r1, r5
 8006cba:	4650      	mov	r0, sl
 8006cbc:	f8c4 b068 	str.w	fp, [r4, #104]	; 0x68
 8006cc0:	f7fc fdd2 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 8006cc4:	a908      	add	r1, sp, #32
 8006cc6:	4650      	mov	r0, sl
 8006cc8:	f8ad 5020 	strh.w	r5, [sp, #32]
 8006ccc:	f010 fca1 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    circleProgress1.setXY(18, 68);
 8006cd0:	4630      	mov	r0, r6
 8006cd2:	2244      	movs	r2, #68	; 0x44
 8006cd4:	2112      	movs	r1, #18
 8006cd6:	f7fc fdc7 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    circleProgress1.setProgressIndicatorPosition(0, 0, 104, 104);
 8006cda:	2368      	movs	r3, #104	; 0x68
 8006cdc:	9300      	str	r3, [sp, #0]
 8006cde:	462a      	mov	r2, r5
 8006ce0:	4629      	mov	r1, r5
 8006ce2:	4630      	mov	r0, r6
 8006ce4:	f00a fdf9 	bl	80118da <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>
    circleProgress1.setRange(0, 100);
 8006ce8:	462b      	mov	r3, r5
 8006cea:	9500      	str	r5, [sp, #0]
 8006cec:	4629      	mov	r1, r5
 8006cee:	4630      	mov	r0, r6
 8006cf0:	2264      	movs	r2, #100	; 0x64
 8006cf2:	f00a ff29 	bl	8011b48 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    circleProgress1.setCenter(52, 52);
 8006cf6:	2234      	movs	r2, #52	; 0x34
 8006cf8:	4611      	mov	r1, r2
 8006cfa:	4630      	mov	r0, r6
 8006cfc:	f00a fd94 	bl	8011828 <_ZN8touchgfx14CircleProgress9setCenterEii>
    circleProgress1.setRadius(50);
 8006d00:	4630      	mov	r0, r6
 8006d02:	2132      	movs	r1, #50	; 0x32
 8006d04:	f00a fda4 	bl	8011850 <_ZN8touchgfx14CircleProgress9setRadiusEi>
    circleProgress1.setLineWidth(0);
 8006d08:	4629      	mov	r1, r5
 8006d0a:	4630      	mov	r0, r6
 8006d0c:	f00a fdaa 	bl	8011864 <_ZN8touchgfx14CircleProgress12setLineWidthEi>
    circleProgress1.setStartEndAngle(0, 360);
 8006d10:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8006d14:	4629      	mov	r1, r5
 8006d16:	4630      	mov	r0, r6
 8006d18:	f00a fe28 	bl	801196c <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
 8006d1c:	230b      	movs	r3, #11
    circleProgress1.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_FULL_ID));
 8006d1e:	a908      	add	r1, sp, #32
 8006d20:	4630      	mov	r0, r6
 8006d22:	f8ad 3020 	strh.w	r3, [sp, #32]
 8006d26:	f00a ffd4 	bl	8011cd2 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
 8006d2a:	230d      	movs	r3, #13
    circleProgress1Painter.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_FILL_MEDIUM_CIRCLE_INDICATOR_FILL_FULL_ID));
 8006d2c:	ee18 0a10 	vmov	r0, s16
 8006d30:	a908      	add	r1, sp, #32
 8006d32:	f8ad 3020 	strh.w	r3, [sp, #32]
 8006d36:	f00c fe0b 	bl	8013950 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>
    circleProgress1.setPainter(circleProgress1Painter);
 8006d3a:	ee18 1a10 	vmov	r1, s16
 8006d3e:	4630      	mov	r0, r6
 8006d40:	f00a fda5 	bl	801188e <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>
    circleProgress1.setValue(60);
 8006d44:	4630      	mov	r0, r6
 8006d46:	213c      	movs	r1, #60	; 0x3c
 8006d48:	f00a fdf4 	bl	8011934 <_ZN8touchgfx14CircleProgress8setValueEi>
    textProgress1.setXY(28, 107);
 8006d4c:	4638      	mov	r0, r7
 8006d4e:	226b      	movs	r2, #107	; 0x6b
 8006d50:	211c      	movs	r1, #28
 8006d52:	f7fc fd89 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    textProgress1.setProgressIndicatorPosition(0, 0, 84, 34);
 8006d56:	2322      	movs	r3, #34	; 0x22
 8006d58:	9300      	str	r3, [sp, #0]
 8006d5a:	462a      	mov	r2, r5
 8006d5c:	4629      	mov	r1, r5
 8006d5e:	4638      	mov	r0, r7
 8006d60:	2354      	movs	r3, #84	; 0x54
 8006d62:	f00a fced 	bl	8011740 <_ZN8touchgfx12TextProgress28setProgressIndicatorPositionEssss>
    textProgress1.setRange(0, 100);
 8006d66:	2264      	movs	r2, #100	; 0x64
 8006d68:	462b      	mov	r3, r5
 8006d6a:	9500      	str	r5, [sp, #0]
 8006d6c:	4629      	mov	r1, r5
 8006d6e:	4638      	mov	r0, r7
 8006d70:	f00a feea 	bl	8011b48 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    textProgress1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8006d74:	4659      	mov	r1, fp
 8006d76:	4638      	mov	r0, r7
 8006d78:	f00a fc10 	bl	801159c <_ZN8touchgfx12TextProgress8setColorENS_9colortypeE>
    textProgress1.setNumberOfDecimals(0);
 8006d7c:	4629      	mov	r1, r5
 8006d7e:	4638      	mov	r0, r7
 8006d80:	f00a fc12 	bl	80115a8 <_ZN8touchgfx12TextProgress19setNumberOfDecimalsEt>
 8006d84:	4b2a      	ldr	r3, [pc, #168]	; (8006e30 <_ZN19ProgressBarViewBaseC1Ev+0x29c>)
 8006d86:	9308      	str	r3, [sp, #32]
    textProgress1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KOIW));
 8006d88:	a908      	add	r1, sp, #32
 8006d8a:	2312      	movs	r3, #18
 8006d8c:	4638      	mov	r0, r7
 8006d8e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006d92:	f00a fc67 	bl	8011664 <_ZN8touchgfx12TextProgress12setTypedTextERKNS_9TypedTextE>
 8006d96:	230c      	movs	r3, #12
    textProgress1.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_TEXT_PROGRESS_BG_SQUARE_ID));
 8006d98:	a908      	add	r1, sp, #32
 8006d9a:	4638      	mov	r0, r7
 8006d9c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8006da0:	f00a ff97 	bl	8011cd2 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    textProgress1.setValue(0);
 8006da4:	4629      	mov	r1, r5
 8006da6:	4638      	mov	r0, r7
 8006da8:	f00a fc68 	bl	801167c <_ZN8touchgfx12TextProgress8setValueEi>
    textArea1.setXY(130, 88);
 8006dac:	2258      	movs	r2, #88	; 0x58
 8006dae:	4648      	mov	r0, r9
 8006db0:	2182      	movs	r1, #130	; 0x82
 8006db2:	f7fc fd59 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 8006db6:	f8a4 5314 	strh.w	r5, [r4, #788]	; 0x314
        boundingArea = calculateBoundingArea();
 8006dba:	ad04      	add	r5, sp, #16
 8006dbc:	4649      	mov	r1, r9
 8006dbe:	4628      	mov	r0, r5
        this->color = color;
 8006dc0:	f8c4 b310 	str.w	fp, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 8006dc4:	f00f fd5c 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006dc8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006dcc:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 8006dd0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006dd4:	4b16      	ldr	r3, [pc, #88]	; (8006e30 <_ZN19ProgressBarViewBaseC1Ev+0x29c>)
 8006dd6:	9308      	str	r3, [sp, #32]
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I9XH));
 8006dd8:	a908      	add	r1, sp, #32
 8006dda:	2311      	movs	r3, #17
 8006ddc:	4648      	mov	r0, r9
 8006dde:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006de2:	f010 f893 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006de6:	1d20      	adds	r0, r4, #4
 8006de8:	4641      	mov	r1, r8
 8006dea:	9003      	str	r0, [sp, #12]
 8006dec:	f00b f84e 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006df0:	9803      	ldr	r0, [sp, #12]
 8006df2:	4651      	mov	r1, sl
 8006df4:	f00b f84a 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006df8:	9803      	ldr	r0, [sp, #12]
 8006dfa:	4631      	mov	r1, r6
 8006dfc:	f00b f846 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006e00:	9803      	ldr	r0, [sp, #12]
 8006e02:	4639      	mov	r1, r7
 8006e04:	f00b f842 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006e08:	9803      	ldr	r0, [sp, #12]
 8006e0a:	4649      	mov	r1, r9
 8006e0c:	f00b f83e 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006e10:	4620      	mov	r0, r4
 8006e12:	b00b      	add	sp, #44	; 0x2c
 8006e14:	ecbd 8b02 	vpop	{d8}
 8006e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e1c:	08031184 	.word	0x08031184
 8006e20:	08034854 	.word	0x08034854
 8006e24:	08034a34 	.word	0x08034a34
 8006e28:	08033c70 	.word	0x08033c70
 8006e2c:	08034794 	.word	0x08034794
 8006e30:	0802f874 	.word	0x0802f874

08006e34 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8006e34:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8006e36:	4770      	bx	lr

08006e38 <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
     * @see setScaleX, setScaleY, getScaleY
     */
    virtual int getScaleX() const
    {
        return xScale;
    }
 8006e38:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8006e3a:	4770      	bx	lr

08006e3c <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
     * @see setScaleY, setScaleX, getScaleX
     */
    virtual int getScaleY() const
    {
        return yScale;
    }
 8006e3c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8006e3e:	4770      	bx	lr

08006e40 <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8006e40:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 8006e44:	4770      	bx	lr

08006e46 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8006e46:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8006e48:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 8006e4a:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8006e4c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8006e50:	4362      	muls	r2, r4
 8006e52:	4361      	muls	r1, r4
    }
 8006e54:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8006e58:	4718      	bx	r3

08006e5a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * scale;
 8006e5a:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8006e5e:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 8006e60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8006e64:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * scale;
 8006e68:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8006e6c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8006e70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e74:	db17      	blt.n	8006ea6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return int(fs + 0.5f);
 8006e76:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006e7a:	ee30 0a07 	vadd.f32	s0, s0, s14
 8006e7e:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8006e82:	ee17 1a10 	vmov	r1, s14
        const float fs = f * scale;
 8006e86:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8006e8a:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8006e8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e92:	db1c      	blt.n	8006ece <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return int(fs + 0.5f);
 8006e94:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8006e98:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8006e9c:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8006ea0:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8006ea4:	4718      	bx	r3
        }
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 8006ea6:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8006eaa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006eae:	ee17 2a10 	vmov	r2, s14
 8006eb2:	ee30 0a66 	vsub.f32	s0, s0, s13
 8006eb6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006eba:	ee30 0a26 	vadd.f32	s0, s0, s13
 8006ebe:	1e51      	subs	r1, r2, #1
 8006ec0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8006ec4:	ee10 2a10 	vmov	r2, s0
 8006ec8:	440a      	add	r2, r1
 8006eca:	4611      	mov	r1, r2
 8006ecc:	e7db      	b.n	8006e86 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 8006ece:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8006ed2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006ed6:	ee17 2a90 	vmov	r2, s15
 8006eda:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8006ede:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8006ee2:	ee70 0a87 	vadd.f32	s1, s1, s14
 8006ee6:	3a01      	subs	r2, #1
 8006ee8:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8006eec:	ee10 ca90 	vmov	ip, s1
 8006ef0:	4494      	add	ip, r2
 8006ef2:	4662      	mov	r2, ip
 8006ef4:	e7d6      	b.n	8006ea4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08006ef6 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8006ef6:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8006ef8:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8006efa:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8006efc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8006f00:	4362      	muls	r2, r4
    }
 8006f02:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8006f06:	4718      	bx	r3

08006f08 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * scale;
 8006f08:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8006f0c:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 8006f0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8006f12:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * scale;
 8006f16:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8006f1a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8006f1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006f22:	db08      	blt.n	8006f36 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return int(fs + 0.5f);
 8006f24:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8006f28:	ee30 0a27 	vadd.f32	s0, s0, s15
 8006f2c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8006f30:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8006f34:	4718      	bx	r3
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 8006f36:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8006f3a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006f3e:	ee17 2a90 	vmov	r2, s15
 8006f42:	ee30 0a47 	vsub.f32	s0, s0, s14
 8006f46:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8006f4a:	ee30 0a07 	vadd.f32	s0, s0, s14
 8006f4e:	3a01      	subs	r2, #1
 8006f50:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8006f54:	ee10 ca10 	vmov	ip, s0
 8006f58:	4494      	add	ip, r2
 8006f5a:	4662      	mov	r2, ip
 8006f5c:	e7ea      	b.n	8006f34 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

08006f5e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 8006f5e:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8006f60:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 8006f62:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8006f64:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8006f68:	4362      	muls	r2, r4
 8006f6a:	4361      	muls	r1, r4
    }
 8006f6c:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8006f70:	4718      	bx	r3

08006f72 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * scale;
 8006f72:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8006f76:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 8006f78:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8006f7c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * scale;
 8006f80:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8006f84:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8006f88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006f8c:	db17      	blt.n	8006fbe <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return int(fs + 0.5f);
 8006f8e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006f92:	ee30 0a07 	vadd.f32	s0, s0, s14
 8006f96:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8006f9a:	ee17 1a10 	vmov	r1, s14
        const float fs = f * scale;
 8006f9e:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8006fa2:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8006fa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006faa:	db1c      	blt.n	8006fe6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return int(fs + 0.5f);
 8006fac:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8006fb0:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8006fb4:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8006fb8:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8006fbc:	4718      	bx	r3
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 8006fbe:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8006fc2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006fc6:	ee17 2a10 	vmov	r2, s14
 8006fca:	ee30 0a66 	vsub.f32	s0, s0, s13
 8006fce:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006fd2:	ee30 0a26 	vadd.f32	s0, s0, s13
 8006fd6:	1e51      	subs	r1, r2, #1
 8006fd8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8006fdc:	ee10 2a10 	vmov	r2, s0
 8006fe0:	440a      	add	r2, r1
 8006fe2:	4611      	mov	r1, r2
 8006fe4:	e7db      	b.n	8006f9e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8006fe6:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8006fea:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006fee:	ee17 2a90 	vmov	r2, s15
 8006ff2:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8006ff6:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8006ffa:	ee70 0a87 	vadd.f32	s1, s1, s14
 8006ffe:	3a01      	subs	r2, #1
 8007000:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8007004:	ee10 ca90 	vmov	ip, s1
 8007008:	4494      	add	ip, r2
 800700a:	4662      	mov	r2, ip
 800700c:	e7d6      	b.n	8006fbc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

0800700e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 800700e:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8007010:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8007012:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8007014:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8007018:	4362      	muls	r2, r4
    }
 800701a:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800701e:	4718      	bx	r3

08007020 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * scale;
 8007020:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8007024:	6803      	ldr	r3, [r0, #0]
        const float fs = f * scale;
 8007026:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800702a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * scale;
 800702e:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8007032:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8007036:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800703a:	db08      	blt.n	800704e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return int(fs + 0.5f);
 800703c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8007040:	ee30 0a27 	vadd.f32	s0, s0, s15
 8007044:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8007048:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800704c:	4718      	bx	r3
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 800704e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8007052:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8007056:	ee17 2a90 	vmov	r2, s15
 800705a:	ee30 0a47 	vsub.f32	s0, s0, s14
 800705e:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8007062:	ee30 0a07 	vadd.f32	s0, s0, s14
 8007066:	3a01      	subs	r2, #1
 8007068:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800706c:	ee10 ca10 	vmov	ip, s0
 8007070:	4494      	add	ip, r2
 8007072:	4662      	mov	r2, ip
 8007074:	e7ea      	b.n	800704c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

08007076 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 8007076:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 800707a:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 800707c:	2b00      	cmp	r3, #0
 800707e:	db07      	blt.n	8007090 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8007080:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8007084:	fb93 f0f2 	sdiv	r0, r3, r2
 8007088:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800708c:	1040      	asrs	r0, r0, #1
 800708e:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8007090:	f06f 0001 	mvn.w	r0, #1
 8007094:	fb00 2003 	mla	r0, r0, r3, r2
 8007098:	3801      	subs	r0, #1
 800709a:	fb90 f0f2 	sdiv	r0, r0, r2
 800709e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80070a2:	1040      	asrs	r0, r0, #1
 80070a4:	4240      	negs	r0, r0
    }
 80070a6:	4770      	bx	lr

080070a8 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 80070a8:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 80070ac:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80070b0:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 80070b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80070b8:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80070bc:	4770      	bx	lr

080070be <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 80070be:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 80070c2:	4770      	bx	lr

080070c4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 80070c4:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 80070c8:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80070ca:	2b00      	cmp	r3, #0
 80070cc:	db07      	blt.n	80070de <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80070ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80070d2:	fb93 f0f2 	sdiv	r0, r3, r2
 80070d6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80070da:	1040      	asrs	r0, r0, #1
 80070dc:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80070de:	f06f 0001 	mvn.w	r0, #1
 80070e2:	fb00 2003 	mla	r0, r0, r3, r2
 80070e6:	3801      	subs	r0, #1
 80070e8:	fb90 f0f2 	sdiv	r0, r0, r2
 80070ec:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80070f0:	1040      	asrs	r0, r0, #1
 80070f2:	4240      	negs	r0, r0
    }
 80070f4:	4770      	bx	lr

080070f6 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 80070f6:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 80070fa:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80070fe:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8007102:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8007106:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800710a:	4770      	bx	lr

0800710c <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 800710c:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 8007110:	4770      	bx	lr

08007112 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8007112:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8007116:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8007118:	2b00      	cmp	r3, #0
 800711a:	db07      	blt.n	800712c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800711c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8007120:	fb93 f0f2 	sdiv	r0, r3, r2
 8007124:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8007128:	1040      	asrs	r0, r0, #1
 800712a:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800712c:	f06f 0001 	mvn.w	r0, #1
 8007130:	fb00 2003 	mla	r0, r0, r3, r2
 8007134:	3801      	subs	r0, #1
 8007136:	fb90 f0f2 	sdiv	r0, r0, r2
 800713a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800713e:	1040      	asrs	r0, r0, #1
 8007140:	4240      	negs	r0, r0
    }
 8007142:	4770      	bx	lr

08007144 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 8007144:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8007148:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800714c:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8007150:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8007154:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8007158:	4770      	bx	lr

0800715a <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 800715a:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 800715e:	4770      	bx	lr

08007160 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 8007160:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 8007164:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8007166:	2b00      	cmp	r3, #0
 8007168:	db07      	blt.n	800717a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800716a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800716e:	fb93 f0f2 	sdiv	r0, r3, r2
 8007172:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8007176:	1040      	asrs	r0, r0, #1
 8007178:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800717a:	f06f 0001 	mvn.w	r0, #1
 800717e:	fb00 2003 	mla	r0, r0, r3, r2
 8007182:	3801      	subs	r0, #1
 8007184:	fb90 f0f2 	sdiv	r0, r0, r2
 8007188:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800718c:	1040      	asrs	r0, r0, #1
 800718e:	4240      	negs	r0, r0
    }
 8007190:	4770      	bx	lr

08007192 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 8007192:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 8007196:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800719a:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 800719e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80071a2:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80071a6:	4770      	bx	lr

080071a8 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 80071a8:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 80071ac:	4770      	bx	lr

080071ae <_ZNK8touchgfx15StaticDataGraph12indexToXAxisEii>:
    virtual int16_t deleteIndex(int index);

    virtual int indexToXAxis(const int /*valueScaled*/, const int labelScaled) const
    {
        return labelScaled;
    }
 80071ae:	4610      	mov	r0, r2
 80071b0:	4770      	bx	lr

080071b2 <_ZNK8touchgfx15StaticDataGraph16indexToScreenXQ5Es>:

    virtual bool xScreenRangeToIndexRange(int16_t xMin, int16_t xMax, int16_t& indexMin, int16_t& indexMax) const;

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(xValues[index]);
 80071b2:	f8d0 213c 	ldr.w	r2, [r0, #316]	; 0x13c
 80071b6:	6803      	ldr	r3, [r0, #0]
 80071b8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80071bc:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80071c0:	4718      	bx	r3

080071c2 <_ZNK8touchgfx15StaticDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[index]);
 80071c2:	f8d0 2140 	ldr.w	r2, [r0, #320]	; 0x140
 80071c6:	6803      	ldr	r3, [r0, #0]
 80071c8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80071cc:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 80071d0:	4718      	bx	r3

080071d2 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    virtual AbstractPainter& getPainter() const;

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80071d2:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80071d6:	4770      	bx	lr

080071d8 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80071d8:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80071dc:	4770      	bx	lr

080071de <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 80071de:	6301      	str	r1, [r0, #48]	; 0x30
    }
 80071e0:	4770      	bx	lr

080071e2 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 80071e2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80071e4:	4770      	bx	lr

080071e6 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 80071e6:	2001      	movs	r0, #1
 80071e8:	4770      	bx	lr

080071ea <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    /**
     * Protected function to prevent users from setting a painter.
     *
     * @param [in] painter The painter.
     */
    virtual void setPainter(AbstractPainter& painter){};
 80071ea:	4770      	bx	lr

080071ec <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 80071ec:	4770      	bx	lr

080071ee <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 80071ee:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80071f0:	b118      	cbz	r0, 80071fa <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 80071f2:	6803      	ldr	r3, [r0, #0]
 80071f4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80071f8:	4718      	bx	r3
    }
 80071fa:	4770      	bx	lr

080071fc <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 80071fc:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80071fe:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8007202:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8007206:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 800720a:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
 800720e:	8044      	strh	r4, [r0, #2]
 8007210:	4421      	add	r1, r4
 8007212:	1a52      	subs	r2, r2, r1
 8007214:	2100      	movs	r1, #0
 8007216:	8001      	strh	r1, [r0, #0]
 8007218:	8085      	strh	r5, [r0, #4]
 800721a:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 800721c:	bd30      	pop	{r4, r5, pc}

0800721e <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 800721e:	b510      	push	{r4, lr}
 8007220:	8042      	strh	r2, [r0, #2]
 8007222:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8007226:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800722a:	8004      	strh	r4, [r0, #0]
 800722c:	8082      	strh	r2, [r0, #4]
 800722e:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8007230:	bd10      	pop	{r4, pc}

08007232 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8007232:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8007234:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8007236:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800723a:	4718      	bx	r3

0800723c <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 800723c:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 800723e:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8007240:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8007244:	4718      	bx	r3

08007246 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8007246:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 800724a:	4770      	bx	lr

0800724c <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 800724c:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8007250:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8007254:	4403      	add	r3, r0
 8007256:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 800725a:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 800725c:	b200      	sxth	r0, r0
 800725e:	4770      	bx	lr

08007260 <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8007260:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8007264:	4770      	bx	lr

08007266 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8007266:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 800726a:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 800726e:	4403      	add	r3, r0
 8007270:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8007274:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8007276:	b200      	sxth	r0, r0
 8007278:	4770      	bx	lr

0800727a <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 800727a:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 800727c:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 800727e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8007282:	4611      	mov	r1, r2
 8007284:	4718      	bx	r3

08007286 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8007286:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 800728a:	b530      	push	{r4, r5, lr}
        return leftPadding;
 800728c:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8007290:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8007292:	186c      	adds	r4, r5, r1
 8007294:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8007298:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 800729c:	80c2      	strh	r2, [r0, #6]
 800729e:	1b09      	subs	r1, r1, r4
 80072a0:	2400      	movs	r4, #0
 80072a2:	8044      	strh	r4, [r0, #2]
 80072a4:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 80072a6:	bd30      	pop	{r4, r5, pc}

080072a8 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 80072a8:	8002      	strh	r2, [r0, #0]
 80072aa:	8083      	strh	r3, [r0, #4]
 80072ac:	f9bd 2000 	ldrsh.w	r2, [sp]
 80072b0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80072b4:	8042      	strh	r2, [r0, #2]
 80072b6:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 80072b8:	4770      	bx	lr

080072ba <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 80072ba:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 80072bc:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 80072be:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 80072c2:	4718      	bx	r3

080072c4 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 80072c4:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 80072c6:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 80072c8:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80072cc:	4718      	bx	r3

080072ce <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 80072ce:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 80072d2:	4770      	bx	lr

080072d4 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 80072d4:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 80072d8:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 80072dc:	4403      	add	r3, r0
 80072de:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 80072e2:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 80072e4:	b200      	sxth	r0, r0
 80072e6:	4770      	bx	lr

080072e8 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 80072e8:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 80072ec:	4770      	bx	lr

080072ee <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80072ee:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 80072f2:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 80072f6:	4403      	add	r3, r0
 80072f8:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 80072fc:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 80072fe:	b200      	sxth	r0, r0
 8007300:	4770      	bx	lr

08007302 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8007302:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8007304:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8007306:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800730a:	4611      	mov	r1, r2
 800730c:	4718      	bx	r3

0800730e <_ZN22ReactanceGraphViewBaseD1Ev>:

class ReactanceGraphViewBase : public touchgfx::View<ReactanceGraphPresenter>
{
public:
    ReactanceGraphViewBase();
    virtual ~ReactanceGraphViewBase() {}
 800730e:	4770      	bx	lr

08007310 <_ZN22ReactanceGraphViewBase13PlotReactanceEv>:
     * Virtual Action Handlers
     */
    virtual void PlotReactance()
    {
        // Override and implement this function in ReactanceGraph
    }
 8007310:	4770      	bx	lr

08007312 <_ZN22ReactanceGraphViewBase11setupScreenEv>:
{

    //Interaction2
    //When screen transition begins call virtual function
    //Call PlotReactance
    PlotReactance();
 8007312:	6803      	ldr	r3, [r0, #0]
 8007314:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007316:	4718      	bx	r3

08007318 <_ZN8touchgfx8CallbackI22ReactanceGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007318:	4770      	bx	lr

0800731a <_ZN8touchgfx5GraphILs26EED1Ev>:
 * The Graph will show a graph of data points, drawn from lower x valut to highest x value.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class Graph : public GraphData
 800731a:	4770      	bx	lr

0800731c <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 800731c:	4770      	bx	lr

0800731e <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 800731e:	4770      	bx	lr

08007320 <_ZN8touchgfx8CallbackI22ReactanceGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007320:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8007322:	68c2      	ldr	r2, [r0, #12]
 8007324:	6844      	ldr	r4, [r0, #4]
 8007326:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007328:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800732a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800732e:	07d2      	lsls	r2, r2, #31
 8007330:	bf48      	it	mi
 8007332:	5962      	ldrmi	r2, [r4, r5]
 8007334:	689b      	ldr	r3, [r3, #8]
    }
 8007336:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8007338:	bf48      	it	mi
 800733a:	58d3      	ldrmi	r3, [r2, r3]
 800733c:	4718      	bx	r3

0800733e <_ZNK8touchgfx8CallbackI22ReactanceGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800733e:	6843      	ldr	r3, [r0, #4]
 8007340:	b12b      	cbz	r3, 800734e <_ZNK8touchgfx8CallbackI22ReactanceGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007342:	6883      	ldr	r3, [r0, #8]
 8007344:	b92b      	cbnz	r3, 8007352 <_ZNK8touchgfx8CallbackI22ReactanceGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007346:	68c0      	ldr	r0, [r0, #12]
 8007348:	f000 0001 	and.w	r0, r0, #1
 800734c:	4770      	bx	lr
 800734e:	4618      	mov	r0, r3
 8007350:	4770      	bx	lr
 8007352:	2001      	movs	r0, #1
    }
 8007354:	4770      	bx	lr

08007356 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8007356:	b510      	push	{r4, lr}
 8007358:	2144      	movs	r1, #68	; 0x44
 800735a:	4604      	mov	r4, r0
 800735c:	f023 fefd 	bl	802b15a <_ZdlPvj>
 8007360:	4620      	mov	r0, r4
 8007362:	bd10      	pop	{r4, pc}

08007364 <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8007364:	b510      	push	{r4, lr}
 8007366:	2144      	movs	r1, #68	; 0x44
 8007368:	4604      	mov	r4, r0
 800736a:	f023 fef6 	bl	802b15a <_ZdlPvj>
 800736e:	4620      	mov	r0, r4
 8007370:	bd10      	pop	{r4, pc}

08007372 <_ZN8touchgfx5GraphILs26EED0Ev>:
 8007372:	b510      	push	{r4, lr}
 8007374:	f44f 7105 	mov.w	r1, #532	; 0x214
 8007378:	4604      	mov	r4, r0
 800737a:	f023 feee 	bl	802b15a <_ZdlPvj>
 800737e:	4620      	mov	r0, r4
 8007380:	bd10      	pop	{r4, pc}

08007382 <_ZN8touchgfx8CallbackI22ReactanceGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007382:	b510      	push	{r4, lr}
 8007384:	2110      	movs	r1, #16
 8007386:	4604      	mov	r4, r0
 8007388:	f023 fee7 	bl	802b15a <_ZdlPvj>
 800738c:	4620      	mov	r0, r4
 800738e:	bd10      	pop	{r4, pc}

08007390 <_ZN22ReactanceGraphViewBaseD0Ev>:
    virtual ~ReactanceGraphViewBase() {}
 8007390:	b510      	push	{r4, lr}
 8007392:	f241 71b8 	movw	r1, #6072	; 0x17b8
 8007396:	4604      	mov	r4, r0
 8007398:	f023 fedf 	bl	802b15a <_ZdlPvj>
 800739c:	4620      	mov	r0, r4
 800739e:	bd10      	pop	{r4, pc}

080073a0 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 80073a0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80073a4:	b10b      	cbz	r3, 80073aa <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 80073a6:	f00a bd2d 	b.w	8011e04 <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 80073aa:	4770      	bx	lr

080073ac <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 80073ac:	b513      	push	{r0, r1, r4, lr}
 80073ae:	4603      	mov	r3, r0
 80073b0:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 80073b2:	e9d3 140d 	ldrd	r1, r4, [r3, #52]	; 0x34
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 80073b6:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 80073b8:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 80073ba:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80073be:	4798      	blx	r3
 80073c0:	9901      	ldr	r1, [sp, #4]
 80073c2:	4602      	mov	r2, r0
 80073c4:	4620      	mov	r0, r4
    }
 80073c6:	b002      	add	sp, #8
 80073c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 80073cc:	f00d be28 	b.w	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

080073d0 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 80073d0:	b513      	push	{r0, r1, r4, lr}
 80073d2:	4603      	mov	r3, r0
 80073d4:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 80073d6:	e9d3 140d 	ldrd	r1, r4, [r3, #52]	; 0x34
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 80073da:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 80073dc:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 80073de:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80073e2:	4798      	blx	r3
 80073e4:	9901      	ldr	r1, [sp, #4]
 80073e6:	4602      	mov	r2, r0
 80073e8:	4620      	mov	r0, r4
    }
 80073ea:	b002      	add	sp, #8
 80073ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 80073f0:	f00d be16 	b.w	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

080073f4 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 80073f4:	2900      	cmp	r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 80073f6:	b508      	push	{r3, lr}
        assert(index >= 0 && index < usedCapacity);
 80073f8:	db03      	blt.n	8007402 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0xe>
 80073fa:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 80073fe:	428b      	cmp	r3, r1
 8007400:	dc06      	bgt.n	8007410 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0x1c>
 8007402:	4b06      	ldr	r3, [pc, #24]	; (800741c <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0x28>)
 8007404:	4a06      	ldr	r2, [pc, #24]	; (8007420 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0x2c>)
 8007406:	4807      	ldr	r0, [pc, #28]	; (8007424 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0x30>)
 8007408:	f240 61eb 	movw	r1, #1771	; 0x6eb
 800740c:	f024 fdf2 	bl	802bff4 <__assert_func>
        return yValues[index];
 8007410:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
    }
 8007414:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8007418:	bd08      	pop	{r3, pc}
 800741a:	bf00      	nop
 800741c:	080311b0 	.word	0x080311b0
 8007420:	080311d3 	.word	0x080311d3
 8007424:	08031221 	.word	0x08031221

08007428 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8007428:	2900      	cmp	r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 800742a:	b508      	push	{r3, lr}
        assert(index >= 0 && index < usedCapacity);
 800742c:	db03      	blt.n	8007436 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0xe>
 800742e:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8007432:	428b      	cmp	r3, r1
 8007434:	dc06      	bgt.n	8007444 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0x1c>
 8007436:	4b06      	ldr	r3, [pc, #24]	; (8007450 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0x28>)
 8007438:	4a06      	ldr	r2, [pc, #24]	; (8007454 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0x2c>)
 800743a:	4807      	ldr	r0, [pc, #28]	; (8007458 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0x30>)
 800743c:	f240 61db 	movw	r1, #1755	; 0x6db
 8007440:	f024 fdd8 	bl	802bff4 <__assert_func>
        return xValues[index];
 8007444:	f8d0 313c 	ldr.w	r3, [r0, #316]	; 0x13c
    }
 8007448:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800744c:	bd08      	pop	{r3, pc}
 800744e:	bf00      	nop
 8007450:	080311b0 	.word	0x080311b0
 8007454:	0803127e 	.word	0x0803127e
 8007458:	08031221 	.word	0x08031221

0800745c <_ZN22ReactanceGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ReactanceGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ReturnToList2)
 800745c:	3098      	adds	r0, #152	; 0x98
 800745e:	4288      	cmp	r0, r1
{
 8007460:	b508      	push	{r3, lr}
    if (&src == &ReturnToList2)
 8007462:	d105      	bne.n	8007470 <_ZN22ReactanceGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007464:	f011 ff90 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When ReturnToList2 clicked change screen to DataDisplayList
        //Go to DataDisplayList with no screen transition
        application().gotoDataDisplayListScreenNoTransition();
    }
}
 8007468:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoDataDisplayListScreenNoTransition();
 800746c:	f7fd bba4 	b.w	8004bb8 <_ZN23FrontendApplicationBase37gotoDataDisplayListScreenNoTransitionEv>
}
 8007470:	bd08      	pop	{r3, pc}

08007472 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8007472:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8007474:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8007476:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8007478:	f013 f92c 	bl	801a6d4 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 800747c:	2800      	cmp	r0, #0
 800747e:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv(int(factor1), int(factor2), int(divisor)));
 8007482:	9901      	ldr	r1, [sp, #4]
 8007484:	462a      	mov	r2, r5
 8007486:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 800748a:	db04      	blt.n	8007496 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv(int(factor1), int(factor2), int(divisor)));
 800748c:	f013 f941 	bl	801a712 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8007490:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8007492:	b003      	add	sp, #12
 8007494:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv(int(factor1), int(factor2), int(divisor)));
 8007496:	f013 f93c 	bl	801a712 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 800749a:	1a20      	subs	r0, r4, r0
 800749c:	e7f9      	b.n	8007492 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

0800749e <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 800749e:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80074a0:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 80074a4:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 80074a8:	1963      	adds	r3, r4, r5
 80074aa:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 80074ae:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 80074b0:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 80074b4:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 80074b6:	b22d      	sxth	r5, r5
 80074b8:	1ad2      	subs	r2, r2, r3
 80074ba:	1e69      	subs	r1, r5, #1
 80074bc:	1af0      	subs	r0, r6, r3
 80074be:	f7ff ffd8 	bl	8007472 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 80074c2:	442c      	add	r4, r5
 80074c4:	3c01      	subs	r4, #1
    }
 80074c6:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 80074ca:	bd70      	pop	{r4, r5, r6, pc}

080074cc <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 80074cc:	b538      	push	{r3, r4, r5, lr}
 80074ce:	4604      	mov	r4, r0
 80074d0:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80074d2:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 80074d6:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 80074da:	440b      	add	r3, r1
 80074dc:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80074e0:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80074e4:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 80074e6:	b209      	sxth	r1, r1
 80074e8:	1b52      	subs	r2, r2, r5
 80074ea:	3901      	subs	r1, #1
 80074ec:	1b40      	subs	r0, r0, r5
 80074ee:	f7ff ffc0 	bl	8007472 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 80074f2:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 80074f6:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 80074fa:	bd38      	pop	{r3, r4, r5, pc}

080074fc <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 80074fc:	b510      	push	{r4, lr}
 80074fe:	4604      	mov	r4, r0
        : CanvasWidget()
 8007500:	f00d f922 	bl	8014748 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TypedText(TYPED_TEXT_INVALID)), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8007504:	4a0b      	ldr	r2, [pc, #44]	; (8007534 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 8007506:	6022      	str	r2, [r4, #0]
        : color(col)
 8007508:	2300      	movs	r3, #0
 800750a:	2201      	movs	r2, #1
 800750c:	e9c4 230d 	strd	r2, r3, [r4, #52]	; 0x34
 8007510:	4a09      	ldr	r2, [pc, #36]	; (8007538 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x3c>)
 8007512:	63e2      	str	r2, [r4, #60]	; 0x3c
 8007514:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007518:	f8a4 2040 	strh.w	r2, [r4, #64]	; 0x40
 800751c:	222e      	movs	r2, #46	; 0x2e
 800751e:	6323      	str	r3, [r4, #48]	; 0x30
 8007520:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8007524:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 8007528:	f8a4 2048 	strh.w	r2, [r4, #72]	; 0x48
 800752c:	64e3      	str	r3, [r4, #76]	; 0x4c
    {
    }
 800752e:	4620      	mov	r0, r4
 8007530:	bd10      	pop	{r4, pc}
 8007532:	bf00      	nop
 8007534:	080345dc 	.word	0x080345dc
 8007538:	0802f874 	.word	0x0802f874

0800753c <_ZN22ReactanceGraphViewBaseC1Ev>:
ReactanceGraphViewBase::ReactanceGraphViewBase() :
 800753c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007540:	ed2d 8b08 	vpush	{d8-d11}
 8007544:	4604      	mov	r4, r0
 8007546:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &ReactanceGraphViewBase::buttonCallbackHandler)
 8007548:	46a3      	mov	fp, r4
 800754a:	2600      	movs	r6, #0
 800754c:	f013 fa8c 	bl	801aa68 <_ZN8touchgfx6ScreenC1Ev>
 8007550:	4beb      	ldr	r3, [pc, #940]	; (8007900 <_ZN22ReactanceGraphViewBaseC1Ev+0x3c4>)
 8007552:	63e6      	str	r6, [r4, #60]	; 0x3c
 8007554:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007558:	4631      	mov	r1, r6
 800755a:	2226      	movs	r2, #38	; 0x26
 800755c:	4658      	mov	r0, fp
 800755e:	f024 fecf 	bl	802c300 <memset>
 8007562:	4658      	mov	r0, fp
 8007564:	f7fc faf6 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 8007568:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800756c:	25ff      	movs	r5, #255	; 0xff
 800756e:	4be5      	ldr	r3, [pc, #916]	; (8007904 <_ZN22ReactanceGraphViewBaseC1Ev+0x3c8>)
 8007570:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007572:	2226      	movs	r2, #38	; 0x26
 8007574:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007578:	4631      	mov	r1, r6
 800757a:	f884 5066 	strb.w	r5, [r4, #102]	; 0x66
 800757e:	66a6      	str	r6, [r4, #104]	; 0x68
 8007580:	4650      	mov	r0, sl
 8007582:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8007586:	f024 febb 	bl	802c300 <memset>
 800758a:	4650      	mov	r0, sl
 800758c:	f7fc fae2 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 8007590:	4bdd      	ldr	r3, [pc, #884]	; (8007908 <_ZN22ReactanceGraphViewBaseC1Ev+0x3cc>)
 8007592:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007594:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8007598:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800759c:	a90c      	add	r1, sp, #48	; 0x30
        : Widget(), bitmap(bmp), alpha(255)
 800759e:	f884 5094 	strb.w	r5, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80075a2:	4650      	mov	r0, sl
 80075a4:	f010 f835 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80075a8:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80075ac:	f104 05d4 	add.w	r5, r4, #212	; 0xd4
 80075b0:	4618      	mov	r0, r3
 80075b2:	ee08 3a10 	vmov	s16, r3
 80075b6:	f010 f805 	bl	80175c4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : AbstractDataGraph(capacity), xValues(xvalues), yValues(yvalues)
 80075ba:	211a      	movs	r1, #26
 80075bc:	4628      	mov	r0, r5
 80075be:	f00d fcbd 	bl	8014f3c <_ZN8touchgfx17AbstractDataGraphC1Es>
 80075c2:	4bd2      	ldr	r3, [pc, #840]	; (800790c <_ZN22ReactanceGraphViewBaseC1Ev+0x3d0>)
 80075c4:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
{
public:
    Graph()
        : GraphData(CAPACITY, xValues, yValues)
 80075c8:	f504 7306 	add.w	r3, r4, #536	; 0x218
 80075cc:	f8c4 3210 	str.w	r3, [r4, #528]	; 0x210
 80075d0:	f504 7320 	add.w	r3, r4, #640	; 0x280
        StaticDataGraph::setGraphRangeX(0, capacity - 1);
 80075d4:	2219      	movs	r2, #25
 80075d6:	4631      	mov	r1, r6
        : AbstractDataGraph(capacity), xValues(xvalues), yValues(yvalues)
 80075d8:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
        StaticDataGraph::setGraphRangeX(0, capacity - 1);
 80075dc:	4628      	mov	r0, r5
 80075de:	f7ff fc32 	bl	8006e46 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 80075e2:	4bcb      	ldr	r3, [pc, #812]	; (8007910 <_ZN22ReactanceGraphViewBaseC1Ev+0x3d4>)
 80075e4:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 80075e8:	f504 733a 	add.w	r3, r4, #744	; 0x2e8
 80075ec:	4618      	mov	r0, r3
 80075ee:	ee08 3a90 	vmov	s17, r3
 80075f2:	f00d f8a9 	bl	8014748 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 80075f6:	4bc7      	ldr	r3, [pc, #796]	; (8007914 <_ZN22ReactanceGraphViewBaseC1Ev+0x3d8>)
 80075f8:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 80075fc:	f04f 0302 	mov.w	r3, #2
 8007600:	f884 3316 	strb.w	r3, [r4, #790]	; 0x316
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), painterColor(0)
 8007604:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8007608:	4618      	mov	r0, r3
 800760a:	ee0b 3a10 	vmov	s22, r3
 800760e:	f7ff fa8b 	bl	8006b28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007612:	4bc1      	ldr	r3, [pc, #772]	; (8007918 <_ZN22ReactanceGraphViewBaseC1Ev+0x3dc>)
 8007614:	f8c4 3318 	str.w	r3, [r4, #792]	; 0x318
 8007618:	f504 734c 	add.w	r3, r4, #816	; 0x330
     *
     * @param  color The color.
     */
    void setColor(colortype color)
    {
        painterColor = color;
 800761c:	f8c4 632c 	str.w	r6, [r4, #812]	; 0x32c
        : CanvasWidget()
 8007620:	4618      	mov	r0, r3
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8007622:	2701      	movs	r7, #1
 8007624:	ee09 3a10 	vmov	s18, r3
        : CanvasWidget()
 8007628:	f00d f88e 	bl	8014748 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 800762c:	230a      	movs	r3, #10
 800762e:	e9c4 73d9 	strd	r7, r3, [r4, #868]	; 0x364
class GraphElementGridX : public GraphElementGridBase
 8007632:	4bba      	ldr	r3, [pc, #744]	; (800791c <_ZN22ReactanceGraphViewBaseC1Ev+0x3e0>)
 8007634:	f8c4 3330 	str.w	r3, [r4, #816]	; 0x330
 8007638:	f504 735d 	add.w	r3, r4, #884	; 0x374
 800763c:	f8c4 6360 	str.w	r6, [r4, #864]	; 0x360
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8007640:	f884 736c 	strb.w	r7, [r4, #876]	; 0x36c
 8007644:	f8c4 6370 	str.w	r6, [r4, #880]	; 0x370
        : CanvasWidget()
 8007648:	4618      	mov	r0, r3
 800764a:	ee09 3a90 	vmov	s19, r3
 800764e:	f00d f87b 	bl	8014748 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8007652:	230a      	movs	r3, #10
 8007654:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
class GraphElementGridY : public GraphElementGridBase
 8007658:	4bb1      	ldr	r3, [pc, #708]	; (8007920 <_ZN22ReactanceGraphViewBaseC1Ev+0x3e4>)
 800765a:	f8c4 3374 	str.w	r3, [r4, #884]	; 0x374
 800765e:	f504 736e 	add.w	r3, r4, #952	; 0x3b8
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8007662:	e9c4 67e9 	strd	r6, r7, [r4, #932]	; 0x3a4
 8007666:	f884 73b0 	strb.w	r7, [r4, #944]	; 0x3b0
 800766a:	f8c4 63b4 	str.w	r6, [r4, #948]	; 0x3b4

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 800766e:	4618      	mov	r0, r3
 8007670:	ee0a 3a10 	vmov	s20, r3
 8007674:	f7ff ff42 	bl	80074fc <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8007678:	4baa      	ldr	r3, [pc, #680]	; (8007924 <_ZN22ReactanceGraphViewBaseC1Ev+0x3e8>)
 800767a:	f8c4 33b8 	str.w	r3, [r4, #952]	; 0x3b8
 800767e:	f504 6381 	add.w	r3, r4, #1032	; 0x408

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8007682:	4618      	mov	r0, r3
 8007684:	ee0a 3a90 	vmov	s21, r3
 8007688:	f504 698b 	add.w	r9, r4, #1112	; 0x458
 800768c:	f7ff ff36 	bl	80074fc <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8007690:	4ba5      	ldr	r3, [pc, #660]	; (8007928 <_ZN22ReactanceGraphViewBaseC1Ev+0x3ec>)
 8007692:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8007696:	4648      	mov	r0, r9
 8007698:	f504 6894 	add.w	r8, r4, #1184	; 0x4a0
 800769c:	f7fe ffe4 	bl	8006668 <_ZN8touchgfx8TextAreaC1Ev>
 80076a0:	4640      	mov	r0, r8
 80076a2:	f7fe ffe1 	bl	8006668 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80076a6:	4ba1      	ldr	r3, [pc, #644]	; (800792c <_ZN22ReactanceGraphViewBaseC1Ev+0x3f0>)
 80076a8:	f8c4 34e8 	str.w	r3, [r4, #1256]	; 0x4e8
 80076ac:	4ba0      	ldr	r3, [pc, #640]	; (8007930 <_ZN22ReactanceGraphViewBaseC1Ev+0x3f4>)
 80076ae:	f8c4 34f0 	str.w	r3, [r4, #1264]	; 0x4f0
 80076b2:	f8c4 64f4 	str.w	r6, [r4, #1268]	; 0x4f4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80076b6:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 80076ba:	f504 609f 	add.w	r0, r4, #1272	; 0x4f8
 80076be:	f8c4 44ec 	str.w	r4, [r4, #1260]	; 0x4ec
 80076c2:	f010 f91d 	bl	8017900 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80076c6:	23f0      	movs	r3, #240	; 0xf0
 80076c8:	4632      	mov	r2, r6
 80076ca:	4631      	mov	r1, r6
 80076cc:	9300      	str	r3, [sp, #0]
 80076ce:	4658      	mov	r0, fp
 80076d0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80076d4:	f7fd f984 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80076d8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80076dc:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 80076de:	4632      	mov	r2, r6
 80076e0:	4631      	mov	r1, r6
 80076e2:	4650      	mov	r0, sl
 80076e4:	f7fc f8c0 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 80076e8:	a90c      	add	r1, sp, #48	; 0x30
 80076ea:	4650      	mov	r0, sl
 80076ec:	f8ad 6030 	strh.w	r6, [sp, #48]	; 0x30
 80076f0:	f00f ff8f 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    ReturnToList2.setXY(130, 180);
 80076f4:	ee18 0a10 	vmov	r0, s16
 80076f8:	22b4      	movs	r2, #180	; 0xb4
 80076fa:	2182      	movs	r1, #130	; 0x82
 80076fc:	f7fc f8b4 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 8007700:	f04f 0303 	mov.w	r3, #3
 8007704:	f04f 0204 	mov.w	r2, #4
 8007708:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800770c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ReturnToList2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID));
 8007710:	ab0c      	add	r3, sp, #48	; 0x30
 8007712:	f04f 020a 	mov.w	r2, #10
 8007716:	ee18 0a10 	vmov	r0, s16
 800771a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800771e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8007722:	9300      	str	r3, [sp, #0]
 8007724:	aa0a      	add	r2, sp, #40	; 0x28
 8007726:	ab0b      	add	r3, sp, #44	; 0x2c
 8007728:	a909      	add	r1, sp, #36	; 0x24
 800772a:	f00f fea8 	bl	801747e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800772e:	4b81      	ldr	r3, [pc, #516]	; (8007934 <_ZN22ReactanceGraphViewBaseC1Ev+0x3f8>)
 8007730:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
    ReturnToList2.setAction(buttonCallback);
 8007734:	f504 639d 	add.w	r3, r4, #1256	; 0x4e8
 8007738:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    ReactanceGraph.setScaleX(1);
 800773c:	4632      	mov	r2, r6
 800773e:	4639      	mov	r1, r7
 8007740:	4628      	mov	r0, r5
 8007742:	f00d fc75 	bl	8015030 <_ZN8touchgfx15StaticDataGraph9setScaleXEib>
    ReactanceGraph.setScaleY(1000);
 8007746:	4632      	mov	r2, r6
 8007748:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800774c:	4628      	mov	r0, r5
 800774e:	f00d fc93 	bl	8015078 <_ZN8touchgfx15StaticDataGraph9setScaleYEib>
    ReactanceGraph.setPosition(13, 12, 295, 173);
 8007752:	23ad      	movs	r3, #173	; 0xad
 8007754:	9300      	str	r3, [sp, #0]
 8007756:	220c      	movs	r2, #12
 8007758:	f240 1327 	movw	r3, #295	; 0x127
 800775c:	210d      	movs	r1, #13
 800775e:	4628      	mov	r0, r5
 8007760:	f7fd f93e 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
    ReactanceGraph.setGraphAreaMargin(20, 40, 10, 20);
 8007764:	2114      	movs	r1, #20
 8007766:	9100      	str	r1, [sp, #0]
 8007768:	230a      	movs	r3, #10
 800776a:	2228      	movs	r2, #40	; 0x28
 800776c:	4628      	mov	r0, r5
 800776e:	f00d fb96 	bl	8014e9e <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    ReactanceGraph.setGraphAreaPadding(0, 0, 0, 0);
 8007772:	4633      	mov	r3, r6
 8007774:	4632      	mov	r2, r6
 8007776:	4631      	mov	r1, r6
 8007778:	9600      	str	r6, [sp, #0]
 800777a:	4628      	mov	r0, r5
 800777c:	f00d fa8f 	bl	8014c9e <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    ReactanceGraph.setGraphRangeX(0, 32);
 8007780:	4631      	mov	r1, r6
 8007782:	2220      	movs	r2, #32
 8007784:	4628      	mov	r0, r5
 8007786:	f7ff fb5e 	bl	8006e46 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    ReactanceGraph.setGraphRangeY(-50, 250);
 800778a:	22fa      	movs	r2, #250	; 0xfa
 800778c:	f06f 0131 	mvn.w	r1, #49	; 0x31
 8007790:	4628      	mov	r0, r5
 8007792:	f7ff fbe4 	bl	8006f5e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8007796:	463a      	mov	r2, r7
 8007798:	e9d4 10d9 	ldrd	r1, r0, [r4, #868]	; 0x364
 800779c:	f00d fc40 	bl	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 80077a0:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 80077a4:	f8c4 2360 	str.w	r2, [r4, #864]	; 0x360
        gridInterval = abs(interval);
 80077a8:	2204      	movs	r2, #4
    ReactanceGraph.addGraphElement(ReactanceGraphMajorXAxisGrid);
 80077aa:	ee19 1a10 	vmov	r1, s18
        dataScale = scale;
 80077ae:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
        gridInterval = abs(interval);
 80077b2:	f8c4 2368 	str.w	r2, [r4, #872]	; 0x368
        lineWidth = width;
 80077b6:	f884 736c 	strb.w	r7, [r4, #876]	; 0x36c
 80077ba:	4628      	mov	r0, r5
 80077bc:	f00d fa7a 	bl	8014cb4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80077c0:	e9d4 10ea 	ldrd	r1, r0, [r4, #936]	; 0x3a8
 80077c4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80077c8:	f00d fc2a 	bl	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 80077cc:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        dataScale = scale;
 80077d0:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
        color = newColor;
 80077d4:	f8c4 23a4 	str.w	r2, [r4, #932]	; 0x3a4
        gridInterval = abs(interval);
 80077d8:	f246 12a8 	movw	r2, #25000	; 0x61a8
    ReactanceGraph.addGraphElement(ReactanceGraphMajorYAxisGrid);
 80077dc:	ee19 1a90 	vmov	r1, s19
 80077e0:	f8c4 23ac 	str.w	r2, [r4, #940]	; 0x3ac
        lineWidth = width;
 80077e4:	f884 73b0 	strb.w	r7, [r4, #944]	; 0x3b0
 80077e8:	4628      	mov	r0, r5
        dataScale = scale;
 80077ea:	f8c4 63a8 	str.w	r6, [r4, #936]	; 0x3a8
 80077ee:	f00d fa61 	bl	8014cb4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80077f2:	463a      	mov	r2, r7
 80077f4:	e9d4 10fb 	ldrd	r1, r0, [r4, #1004]	; 0x3ec
 80077f8:	f00d fc12 	bl	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80077fc:	2305      	movs	r3, #5
        dataScale = scale;
 80077fe:	f8c4 73ec 	str.w	r7, [r4, #1004]	; 0x3ec
        labelInterval = abs(interval);
 8007802:	f8c4 33f0 	str.w	r3, [r4, #1008]	; 0x3f0
        color = newColor;
 8007806:	4f4c      	ldr	r7, [pc, #304]	; (8007938 <_ZN22ReactanceGraphViewBaseC1Ev+0x3fc>)
 8007808:	f8c4 73e8 	str.w	r7, [r4, #1000]	; 0x3e8
class TypedText
 800780c:	f04f 0303 	mov.w	r3, #3
 8007810:	f8a4 33f8 	strh.w	r3, [r4, #1016]	; 0x3f8
    ReactanceGraph.addBottomElement(ReactanceGraphMajorXAxisLabel);
 8007814:	ee1a 1a10 	vmov	r1, s20
 8007818:	4628      	mov	r0, r5
 800781a:	f00d fa6f 	bl	8014cfc <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800781e:	f8d4 143c 	ldr.w	r1, [r4, #1084]	; 0x43c
 8007822:	f8d4 0440 	ldr.w	r0, [r4, #1088]	; 0x440
 8007826:	4632      	mov	r2, r6
 8007828:	f00d fbfa 	bl	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 800782c:	f246 12a8 	movw	r2, #25000	; 0x61a8
        labelDecimals = decimals;
 8007830:	f04f 0303 	mov.w	r3, #3
        labelInterval = abs(interval);
 8007834:	f8c4 2440 	str.w	r2, [r4, #1088]	; 0x440
 8007838:	f04f 0202 	mov.w	r2, #2
 800783c:	f8a4 2448 	strh.w	r2, [r4, #1096]	; 0x448
    ReactanceGraph.addLeftElement(ReactanceGraphMajorYAxisLabel);
 8007840:	ee1a 1a90 	vmov	r1, s21
        labelDecimals = decimals;
 8007844:	f8a4 344e 	strh.w	r3, [r4, #1102]	; 0x44e
 8007848:	4628      	mov	r0, r5
        dataScale = scale;
 800784a:	f8c4 643c 	str.w	r6, [r4, #1084]	; 0x43c
 800784e:	f8c4 7438 	str.w	r7, [r4, #1080]	; 0x438
 8007852:	f00d fa41 	bl	8014cd8 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 8007856:	4b39      	ldr	r3, [pc, #228]	; (800793c <_ZN22ReactanceGraphViewBaseC1Ev+0x400>)
 8007858:	f8c4 332c 	str.w	r3, [r4, #812]	; 0x32c
    ReactanceGraphLine1.setPainter(ReactanceGraphLine1Painter);
 800785c:	ee1b 1a10 	vmov	r1, s22
 8007860:	ee18 0a90 	vmov	r0, s17
 8007864:	f00c fe6c 	bl	8014540 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 8007868:	f04f 0303 	mov.w	r3, #3
    ReactanceGraph.addGraphElement(ReactanceGraphLine1);
 800786c:	ee18 1a90 	vmov	r1, s17
 8007870:	f884 3316 	strb.w	r3, [r4, #790]	; 0x316
 8007874:	4628      	mov	r0, r5
 8007876:	f00d fa1d 	bl	8014cb4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        const float fs = f * scale;
 800787a:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 800787e:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8007940 <_ZN22ReactanceGraphViewBaseC1Ev+0x404>
 8007882:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007886:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800788a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800788e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007892:	f2c0 8568 	blt.w	8008366 <_ZN22ReactanceGraphViewBaseC1Ev+0xe2a>
            return int(fs + 0.5f);
 8007896:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800789a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800789e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80078a2:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80078a6:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 80078aa:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8007944 <_ZN22ReactanceGraphViewBaseC1Ev+0x408>
 80078ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80078b2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80078b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80078ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80078be:	f2c0 8567 	blt.w	8008390 <_ZN22ReactanceGraphViewBaseC1Ev+0xe54>
            return int(fs + 0.5f);
 80078c2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80078c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80078ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80078ce:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80078d2:	4628      	mov	r0, r5
 80078d4:	f00d fbf4 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80078d8:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 80078dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        if (fs >= 0)
 80078e0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80078e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80078e8:	f2c0 8567 	blt.w	80083ba <_ZN22ReactanceGraphViewBaseC1Ev+0xe7e>
            return int(fs + 0.5f);
 80078ec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80078f0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80078f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80078f8:	ee17 1a90 	vmov	r1, s15
 80078fc:	e03a      	b.n	8007974 <_ZN22ReactanceGraphViewBaseC1Ev+0x438>
 80078fe:	bf00      	nop
 8007900:	080315a0 	.word	0x080315a0
 8007904:	08034854 	.word	0x08034854
 8007908:	08034a34 	.word	0x08034a34
 800790c:	08034020 	.word	0x08034020
 8007910:	0803144c 	.word	0x0803144c
 8007914:	08034410 	.word	0x08034410
 8007918:	08033d14 	.word	0x08033d14
 800791c:	080312d4 	.word	0x080312d4
 8007920:	08031390 	.word	0x08031390
 8007924:	08034494 	.word	0x08034494
 8007928:	08034538 	.word	0x08034538
 800792c:	08031588 	.word	0x08031588
 8007930:	0800745d 	.word	0x0800745d
 8007934:	0016000f 	.word	0x0016000f
 8007938:	ff001a36 	.word	0xff001a36
 800793c:	ff1497c5 	.word	0xff1497c5
 8007940:	00000000 	.word	0x00000000
 8007944:	c18d3d71 	.word	0xc18d3d71
 8007948:	430dc4dd 	.word	0x430dc4dd
 800794c:	4356a354 	.word	0x4356a354
 8007950:	42d652f2 	.word	0x42d652f2
 8007954:	430a97cf 	.word	0x430a97cf
 8007958:	432571aa 	.word	0x432571aa
 800795c:	3f2a7efa 	.word	0x3f2a7efa
 8007960:	c19428f6 	.word	0xc19428f6
 8007964:	42f3e1cb 	.word	0x42f3e1cb
 8007968:	42c08dd3 	.word	0x42c08dd3
 800796c:	42abd4fe 	.word	0x42abd4fe
 8007970:	43642419 	.word	0x43642419
        const float fs = f * scale;
 8007974:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007978:	ed1f 7a0d 	vldr	s14, [pc, #-52]	; 8007948 <_ZN22ReactanceGraphViewBaseC1Ev+0x40c>
 800797c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007980:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007984:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007988:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800798c:	f2c0 852a 	blt.w	80083e4 <_ZN22ReactanceGraphViewBaseC1Ev+0xea8>
            return int(fs + 0.5f);
 8007990:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007994:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007998:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800799c:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80079a0:	4628      	mov	r0, r5
 80079a2:	f00d fb8d 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80079a6:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 80079aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80079ae:	ee77 7aa7 	vadd.f32	s15, s15, s15
        if (fs >= 0)
 80079b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80079b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80079ba:	f2c0 8528 	blt.w	800840e <_ZN22ReactanceGraphViewBaseC1Ev+0xed2>
            return int(fs + 0.5f);
 80079be:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80079c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80079c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80079ca:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80079ce:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 80079d2:	ed1f 7a22 	vldr	s14, [pc, #-136]	; 800794c <_ZN22ReactanceGraphViewBaseC1Ev+0x410>
 80079d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80079da:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80079de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80079e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80079e6:	f2c0 8527 	blt.w	8008438 <_ZN22ReactanceGraphViewBaseC1Ev+0xefc>
            return int(fs + 0.5f);
 80079ea:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80079ee:	ee77 7a87 	vadd.f32	s15, s15, s14
 80079f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80079f6:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80079fa:	4628      	mov	r0, r5
 80079fc:	f00d fb60 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007a00:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007a04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a08:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 8007a0c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007a10:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a18:	f2c0 8523 	blt.w	8008462 <_ZN22ReactanceGraphViewBaseC1Ev+0xf26>
            return int(fs + 0.5f);
 8007a1c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007a20:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007a24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a28:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007a2c:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007a30:	ed1f 7a39 	vldr	s14, [pc, #-228]	; 8007950 <_ZN22ReactanceGraphViewBaseC1Ev+0x414>
 8007a34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a38:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007a3c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a44:	f2c0 8522 	blt.w	800848c <_ZN22ReactanceGraphViewBaseC1Ev+0xf50>
            return int(fs + 0.5f);
 8007a48:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007a4c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007a50:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a54:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007a58:	4628      	mov	r0, r5
 8007a5a:	f00d fb31 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007a5e:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007a62:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a66:	eeb1 7a04 	vmov.f32	s14, #20	; 0x40a00000  5.0
 8007a6a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007a6e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a76:	f2c0 851e 	blt.w	80084b6 <_ZN22ReactanceGraphViewBaseC1Ev+0xf7a>
            return int(fs + 0.5f);
 8007a7a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007a7e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007a82:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a86:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007a8a:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007a8e:	ed1f 7a4f 	vldr	s14, [pc, #-316]	; 8007954 <_ZN22ReactanceGraphViewBaseC1Ev+0x418>
 8007a92:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a96:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007a9a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007aa2:	f2c0 851d 	blt.w	80084e0 <_ZN22ReactanceGraphViewBaseC1Ev+0xfa4>
            return int(fs + 0.5f);
 8007aa6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007aaa:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007aae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ab2:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007ab6:	4628      	mov	r0, r5
 8007ab8:	f00d fb02 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007abc:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007ac0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ac4:	eeb1 7a08 	vmov.f32	s14, #24	; 0x40c00000  6.0
 8007ac8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007acc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ad0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ad4:	f2c0 8519 	blt.w	800850a <_ZN22ReactanceGraphViewBaseC1Ev+0xfce>
            return int(fs + 0.5f);
 8007ad8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007adc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007ae0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ae4:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007ae8:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007aec:	ed1f 7a66 	vldr	s14, [pc, #-408]	; 8007958 <_ZN22ReactanceGraphViewBaseC1Ev+0x41c>
 8007af0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007af4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007af8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007afc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b00:	f2c0 8518 	blt.w	8008534 <_ZN22ReactanceGraphViewBaseC1Ev+0xff8>
            return int(fs + 0.5f);
 8007b04:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007b08:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007b0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b10:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007b14:	4628      	mov	r0, r5
 8007b16:	f00d fad3 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007b1a:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007b1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007b22:	eeb1 7a0c 	vmov.f32	s14, #28	; 0x40e00000  7.0
 8007b26:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007b2a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007b2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b32:	f2c0 8514 	blt.w	800855e <_ZN22ReactanceGraphViewBaseC1Ev+0x1022>
            return int(fs + 0.5f);
 8007b36:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007b3a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007b3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b42:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007b46:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007b4a:	ed1f 7a7c 	vldr	s14, [pc, #-496]	; 800795c <_ZN22ReactanceGraphViewBaseC1Ev+0x420>
 8007b4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007b52:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007b56:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007b5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b5e:	f2c0 8513 	blt.w	8008588 <_ZN22ReactanceGraphViewBaseC1Ev+0x104c>
            return int(fs + 0.5f);
 8007b62:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007b66:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007b6a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b6e:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007b72:	4628      	mov	r0, r5
 8007b74:	f00d faa4 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007b78:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007b7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007b80:	eeb2 7a02 	vmov.f32	s14, #34	; 0x41100000  9.0
 8007b84:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007b88:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007b8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b90:	f2c0 850f 	blt.w	80085b2 <_ZN22ReactanceGraphViewBaseC1Ev+0x1076>
            return int(fs + 0.5f);
 8007b94:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007b98:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007b9c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ba0:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007ba4:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007ba8:	ed1f 7a93 	vldr	s14, [pc, #-588]	; 8007960 <_ZN22ReactanceGraphViewBaseC1Ev+0x424>
 8007bac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007bb0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007bb4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007bb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007bbc:	f2c0 850e 	blt.w	80085dc <_ZN22ReactanceGraphViewBaseC1Ev+0x10a0>
            return int(fs + 0.5f);
 8007bc0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007bc4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007bc8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007bcc:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007bd0:	4628      	mov	r0, r5
 8007bd2:	f00d fa75 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007bd6:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007bda:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007bde:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8007be2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007be6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007bea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007bee:	f2c0 850a 	blt.w	8008606 <_ZN22ReactanceGraphViewBaseC1Ev+0x10ca>
            return int(fs + 0.5f);
 8007bf2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007bf6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007bfa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007bfe:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007c02:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007c06:	ed1f 7aa9 	vldr	s14, [pc, #-676]	; 8007964 <_ZN22ReactanceGraphViewBaseC1Ev+0x428>
 8007c0a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c0e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007c12:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007c16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c1a:	f2c0 8509 	blt.w	8008630 <_ZN22ReactanceGraphViewBaseC1Ev+0x10f4>
            return int(fs + 0.5f);
 8007c1e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007c22:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007c26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c2a:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007c2e:	4628      	mov	r0, r5
 8007c30:	f00d fa46 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007c34:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007c38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c3c:	eeb2 7a06 	vmov.f32	s14, #38	; 0x41300000  11.0
 8007c40:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007c44:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007c48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c4c:	f2c0 8505 	blt.w	800865a <_ZN22ReactanceGraphViewBaseC1Ev+0x111e>
            return int(fs + 0.5f);
 8007c50:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007c54:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007c58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c5c:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007c60:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007c64:	ed1f 7ac0 	vldr	s14, [pc, #-768]	; 8007968 <_ZN22ReactanceGraphViewBaseC1Ev+0x42c>
 8007c68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c6c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007c70:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007c74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c78:	f2c0 8504 	blt.w	8008684 <_ZN22ReactanceGraphViewBaseC1Ev+0x1148>
            return int(fs + 0.5f);
 8007c7c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007c80:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007c84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c88:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007c8c:	4628      	mov	r0, r5
 8007c8e:	f00d fa17 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007c92:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007c96:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c9a:	eeb2 7a08 	vmov.f32	s14, #40	; 0x41400000  12.0
 8007c9e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ca2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ca6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007caa:	f2c0 8503 	blt.w	80086b4 <_ZN22ReactanceGraphViewBaseC1Ev+0x1178>
            return int(fs + 0.5f);
 8007cae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007cb2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007cb6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007cba:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007cbe:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007cc2:	ed1f 7ad6 	vldr	s14, [pc, #-856]	; 800796c <_ZN22ReactanceGraphViewBaseC1Ev+0x430>
 8007cc6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007cca:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007cce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007cd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007cd6:	f2c0 8502 	blt.w	80086de <_ZN22ReactanceGraphViewBaseC1Ev+0x11a2>
            return int(fs + 0.5f);
 8007cda:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007cde:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007ce2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ce6:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007cea:	4628      	mov	r0, r5
 8007cec:	f00d f9e8 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007cf0:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007cf4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007cf8:	eeb2 7a0c 	vmov.f32	s14, #44	; 0x41600000  14.0
 8007cfc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d00:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d08:	f2c0 84fe 	blt.w	8008708 <_ZN22ReactanceGraphViewBaseC1Ev+0x11cc>
            return int(fs + 0.5f);
 8007d0c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007d10:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d18:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007d1c:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007d20:	ed1f 7aed 	vldr	s14, [pc, #-948]	; 8007970 <_ZN22ReactanceGraphViewBaseC1Ev+0x434>
 8007d24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d28:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d2c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d34:	f2c0 84fd 	blt.w	8008732 <_ZN22ReactanceGraphViewBaseC1Ev+0x11f6>
            return int(fs + 0.5f);
 8007d38:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007d3c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d44:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007d48:	4628      	mov	r0, r5
 8007d4a:	f00d f9b9 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007d4e:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007d52:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d56:	eeb2 7a0e 	vmov.f32	s14, #46	; 0x41700000  15.0
 8007d5a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d5e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d66:	f2c0 84f9 	blt.w	800875c <_ZN22ReactanceGraphViewBaseC1Ev+0x1220>
            return int(fs + 0.5f);
 8007d6a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007d6e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d76:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007d7a:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007d7e:	ed9f 7af1 	vldr	s14, [pc, #964]	; 8008144 <_ZN22ReactanceGraphViewBaseC1Ev+0xc08>
 8007d82:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d86:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d92:	f2c0 84f8 	blt.w	8008786 <_ZN22ReactanceGraphViewBaseC1Ev+0x124a>
            return int(fs + 0.5f);
 8007d96:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007d9a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007da2:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007da6:	4628      	mov	r0, r5
 8007da8:	f00d f98a 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007dac:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007db0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007db4:	eeb3 7a00 	vmov.f32	s14, #48	; 0x41800000  16.0
 8007db8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007dbc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007dc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007dc4:	f2c0 84f4 	blt.w	80087b0 <_ZN22ReactanceGraphViewBaseC1Ev+0x1274>
            return int(fs + 0.5f);
 8007dc8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007dcc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007dd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007dd4:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007dd8:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007ddc:	ed9f 7ada 	vldr	s14, [pc, #872]	; 8008148 <_ZN22ReactanceGraphViewBaseC1Ev+0xc0c>
 8007de0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007de4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007de8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007dec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007df0:	f2c0 84f3 	blt.w	80087da <_ZN22ReactanceGraphViewBaseC1Ev+0x129e>
            return int(fs + 0.5f);
 8007df4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007df8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007dfc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e00:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007e04:	4628      	mov	r0, r5
 8007e06:	f00d f95b 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007e0a:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007e0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007e12:	eeb3 7a01 	vmov.f32	s14, #49	; 0x41880000  17.0
 8007e16:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007e1a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007e1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e22:	f2c0 84ef 	blt.w	8008804 <_ZN22ReactanceGraphViewBaseC1Ev+0x12c8>
            return int(fs + 0.5f);
 8007e26:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007e2a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e32:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007e36:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007e3a:	ed9f 7ac4 	vldr	s14, [pc, #784]	; 800814c <_ZN22ReactanceGraphViewBaseC1Ev+0xc10>
 8007e3e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007e42:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007e46:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007e4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e4e:	f2c0 84ee 	blt.w	800882e <_ZN22ReactanceGraphViewBaseC1Ev+0x12f2>
            return int(fs + 0.5f);
 8007e52:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007e56:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e5a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e5e:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007e62:	4628      	mov	r0, r5
 8007e64:	f00d f92c 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007e68:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007e6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007e70:	eeb3 7a02 	vmov.f32	s14, #50	; 0x41900000  18.0
 8007e74:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007e78:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007e7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e80:	f2c0 84ea 	blt.w	8008858 <_ZN22ReactanceGraphViewBaseC1Ev+0x131c>
            return int(fs + 0.5f);
 8007e84:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007e88:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e8c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e90:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007e94:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007e98:	ed9f 7aad 	vldr	s14, [pc, #692]	; 8008150 <_ZN22ReactanceGraphViewBaseC1Ev+0xc14>
 8007e9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ea0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ea4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ea8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007eac:	f2c0 84e9 	blt.w	8008882 <_ZN22ReactanceGraphViewBaseC1Ev+0x1346>
            return int(fs + 0.5f);
 8007eb0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007eb4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007eb8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ebc:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007ec0:	4628      	mov	r0, r5
 8007ec2:	f00d f8fd 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007ec6:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007eca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ece:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 8007ed2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ed6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007eda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ede:	f2c0 84e5 	blt.w	80088ac <_ZN22ReactanceGraphViewBaseC1Ev+0x1370>
            return int(fs + 0.5f);
 8007ee2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007ee6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007eea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007eee:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007ef2:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007ef6:	ed9f 7a97 	vldr	s14, [pc, #604]	; 8008154 <_ZN22ReactanceGraphViewBaseC1Ev+0xc18>
 8007efa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007efe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f02:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f0a:	f2c0 84e4 	blt.w	80088d6 <_ZN22ReactanceGraphViewBaseC1Ev+0x139a>
            return int(fs + 0.5f);
 8007f0e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007f12:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007f16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f1a:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007f1e:	4628      	mov	r0, r5
 8007f20:	f00d f8ce 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007f24:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007f28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f2c:	eeb3 7a05 	vmov.f32	s14, #53	; 0x41a80000  21.0
 8007f30:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f34:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f3c:	f2c0 84e0 	blt.w	8008900 <_ZN22ReactanceGraphViewBaseC1Ev+0x13c4>
            return int(fs + 0.5f);
 8007f40:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007f44:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007f48:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f4c:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007f50:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007f54:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8008158 <_ZN22ReactanceGraphViewBaseC1Ev+0xc1c>
 8007f58:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f5c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f60:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f68:	f2c0 84df 	blt.w	800892a <_ZN22ReactanceGraphViewBaseC1Ev+0x13ee>
            return int(fs + 0.5f);
 8007f6c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007f70:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007f74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f78:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007f7c:	4628      	mov	r0, r5
 8007f7e:	f00d f89f 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007f82:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007f86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f8a:	eeb3 7a06 	vmov.f32	s14, #54	; 0x41b00000  22.0
 8007f8e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f92:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f9a:	f2c0 84db 	blt.w	8008954 <_ZN22ReactanceGraphViewBaseC1Ev+0x1418>
            return int(fs + 0.5f);
 8007f9e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007fa2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007fa6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007faa:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8007fae:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8007fb2:	ed9f 7a6a 	vldr	s14, [pc, #424]	; 800815c <_ZN22ReactanceGraphViewBaseC1Ev+0xc20>
 8007fb6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007fba:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007fbe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007fc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007fc6:	f2c0 84da 	blt.w	800897e <_ZN22ReactanceGraphViewBaseC1Ev+0x1442>
            return int(fs + 0.5f);
 8007fca:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007fce:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007fd2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007fd6:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8007fda:	4628      	mov	r0, r5
 8007fdc:	f00d f870 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8007fe0:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8007fe4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007fe8:	eeb3 7a07 	vmov.f32	s14, #55	; 0x41b80000  23.0
 8007fec:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ff0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ff4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ff8:	f2c0 84d6 	blt.w	80089a8 <_ZN22ReactanceGraphViewBaseC1Ev+0x146c>
            return int(fs + 0.5f);
 8007ffc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008000:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008004:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008008:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800800c:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8008010:	ed9f 7a53 	vldr	s14, [pc, #332]	; 8008160 <_ZN22ReactanceGraphViewBaseC1Ev+0xc24>
 8008014:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008018:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800801c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008020:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008024:	f2c0 84d5 	blt.w	80089d2 <_ZN22ReactanceGraphViewBaseC1Ev+0x1496>
            return int(fs + 0.5f);
 8008028:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800802c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008030:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008034:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8008038:	4628      	mov	r0, r5
 800803a:	f00d f841 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800803e:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8008042:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008046:	eeb3 7a09 	vmov.f32	s14, #57	; 0x41c80000  25.0
 800804a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800804e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008052:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008056:	f2c0 84d1 	blt.w	80089fc <_ZN22ReactanceGraphViewBaseC1Ev+0x14c0>
            return int(fs + 0.5f);
 800805a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800805e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008062:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008066:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800806a:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 800806e:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 8008164 <_ZN22ReactanceGraphViewBaseC1Ev+0xc28>
 8008072:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008076:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800807a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800807e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008082:	f2c0 84d0 	blt.w	8008a26 <_ZN22ReactanceGraphViewBaseC1Ev+0x14ea>
            return int(fs + 0.5f);
 8008086:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800808a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800808e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008092:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8008096:	4628      	mov	r0, r5
 8008098:	f00d f812 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800809c:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 80080a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80080a4:	eeb3 7a0a 	vmov.f32	s14, #58	; 0x41d00000  26.0
 80080a8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80080ac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80080b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80080b4:	f2c0 84cc 	blt.w	8008a50 <_ZN22ReactanceGraphViewBaseC1Ev+0x1514>
            return int(fs + 0.5f);
 80080b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80080bc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80080c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80080c4:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80080c8:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 80080cc:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8008168 <_ZN22ReactanceGraphViewBaseC1Ev+0xc2c>
 80080d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80080d4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80080d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80080dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80080e0:	f2c0 84cb 	blt.w	8008a7a <_ZN22ReactanceGraphViewBaseC1Ev+0x153e>
            return int(fs + 0.5f);
 80080e4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80080e8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80080ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80080f0:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80080f4:	4628      	mov	r0, r5
 80080f6:	f00c ffe3 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80080fa:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 80080fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008102:	eeb3 7a0b 	vmov.f32	s14, #59	; 0x41d80000  27.0
 8008106:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800810a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800810e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008112:	f2c0 84c7 	blt.w	8008aa4 <_ZN22ReactanceGraphViewBaseC1Ev+0x1568>
            return int(fs + 0.5f);
 8008116:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800811a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800811e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008122:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8008126:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 800812a:	ed9f 7a10 	vldr	s14, [pc, #64]	; 800816c <_ZN22ReactanceGraphViewBaseC1Ev+0xc30>
 800812e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008132:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008136:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800813a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800813e:	f2c0 84c6 	blt.w	8008ace <_ZN22ReactanceGraphViewBaseC1Ev+0x1592>
 8008142:	e01b      	b.n	800817c <_ZN22ReactanceGraphViewBaseC1Ev+0xc40>
 8008144:	43392e14 	.word	0x43392e14
 8008148:	41dcc49c 	.word	0x41dcc49c
 800814c:	428b9fbe 	.word	0x428b9fbe
 8008150:	42abe1cb 	.word	0x42abe1cb
 8008154:	c19a76c9 	.word	0xc19a76c9
 8008158:	4295deb8 	.word	0x4295deb8
 800815c:	435d48b4 	.word	0x435d48b4
 8008160:	430ccf9e 	.word	0x430ccf9e
 8008164:	42d9851f 	.word	0x42d9851f
 8008168:	4335076d 	.word	0x4335076d
 800816c:	42737df4 	.word	0x42737df4
 8008170:	c234cdd3 	.word	0xc234cdd3
 8008174:	42a58b44 	.word	0x42a58b44
 8008178:	42f69eb8 	.word	0x42f69eb8
            return int(fs + 0.5f);
 800817c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008180:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008184:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008188:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800818c:	4628      	mov	r0, r5
 800818e:	f00c ff97 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8008192:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8008196:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800819a:	eeb3 7a0c 	vmov.f32	s14, #60	; 0x41e00000  28.0
 800819e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80081a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80081a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80081aa:	f2c0 84a5 	blt.w	8008af8 <_ZN22ReactanceGraphViewBaseC1Ev+0x15bc>
            return int(fs + 0.5f);
 80081ae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80081b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80081b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80081ba:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80081be:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 80081c2:	ed1f 7a15 	vldr	s14, [pc, #-84]	; 8008170 <_ZN22ReactanceGraphViewBaseC1Ev+0xc34>
 80081c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80081ca:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80081ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80081d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80081d6:	f2c0 84a4 	blt.w	8008b22 <_ZN22ReactanceGraphViewBaseC1Ev+0x15e6>
            return int(fs + 0.5f);
 80081da:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80081de:	ee77 7a87 	vadd.f32	s15, s15, s14
 80081e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80081e6:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80081ea:	4628      	mov	r0, r5
 80081ec:	f00c ff68 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80081f0:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 80081f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80081f8:	eeb3 7a0e 	vmov.f32	s14, #62	; 0x41f00000  30.0
 80081fc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008200:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008204:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008208:	f2c0 84a0 	blt.w	8008b4c <_ZN22ReactanceGraphViewBaseC1Ev+0x1610>
            return int(fs + 0.5f);
 800820c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008210:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008214:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008218:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800821c:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 8008220:	ed1f 7a2c 	vldr	s14, [pc, #-176]	; 8008174 <_ZN22ReactanceGraphViewBaseC1Ev+0xc38>
 8008224:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008228:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800822c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008230:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008234:	f2c0 849f 	blt.w	8008b76 <_ZN22ReactanceGraphViewBaseC1Ev+0x163a>
            return int(fs + 0.5f);
 8008238:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800823c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008240:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008244:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8008248:	4628      	mov	r0, r5
 800824a:	f00c ff39 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800824e:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
 8008252:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008256:	eeb3 7a0f 	vmov.f32	s14, #63	; 0x41f80000  31.0
 800825a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800825e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008262:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008266:	f2c0 849b 	blt.w	8008ba0 <_ZN22ReactanceGraphViewBaseC1Ev+0x1664>
            return int(fs + 0.5f);
 800826a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800826e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008272:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008276:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800827a:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 800827e:	ed1f 7a42 	vldr	s14, [pc, #-264]	; 8008178 <_ZN22ReactanceGraphViewBaseC1Ev+0xc3c>
 8008282:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008286:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800828a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800828e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008292:	f2c0 849a 	blt.w	8008bca <_ZN22ReactanceGraphViewBaseC1Ev+0x168e>
            return int(fs + 0.5f);
 8008296:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800829a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800829e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80082a2:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80082a6:	4628      	mov	r0, r5
 80082a8:	f00c ff0a 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
    textArea1.setXY(243, 185);
 80082ac:	22b9      	movs	r2, #185	; 0xb9
 80082ae:	4648      	mov	r0, r9
 80082b0:	21f3      	movs	r1, #243	; 0xf3
 80082b2:	f7fb fad9 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 80082b6:	ae04      	add	r6, sp, #16
        linespace = space;
 80082b8:	2700      	movs	r7, #0
        this->color = color;
 80082ba:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80082be:	f8c4 3488 	str.w	r3, [r4, #1160]	; 0x488
        boundingArea = calculateBoundingArea();
 80082c2:	4649      	mov	r1, r9
 80082c4:	4630      	mov	r0, r6
        linespace = space;
 80082c6:	f8a4 748c 	strh.w	r7, [r4, #1164]	; 0x48c
        boundingArea = calculateBoundingArea();
 80082ca:	f00e fad9 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80082ce:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80082d2:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 80082d6:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        : typedTextId(id)
 80082da:	4bf5      	ldr	r3, [pc, #980]	; (80086b0 <_ZN22ReactanceGraphViewBaseC1Ev+0x1174>)
 80082dc:	930c      	str	r3, [sp, #48]	; 0x30
 80082de:	2201      	movs	r2, #1
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W9FP));
 80082e0:	a90c      	add	r1, sp, #48	; 0x30
 80082e2:	4648      	mov	r0, r9
 80082e4:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80082e8:	f00e fe10 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea1_1.setXY(13, 12);
 80082ec:	220c      	movs	r2, #12
 80082ee:	4640      	mov	r0, r8
 80082f0:	210d      	movs	r1, #13
 80082f2:	f7fb fab9 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80082f6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80082fa:	f8c4 34d0 	str.w	r3, [r4, #1232]	; 0x4d0
        boundingArea = calculateBoundingArea();
 80082fe:	4641      	mov	r1, r8
 8008300:	4630      	mov	r0, r6
        linespace = space;
 8008302:	f8a4 74d4 	strh.w	r7, [r4, #1236]	; 0x4d4
        boundingArea = calculateBoundingArea();
 8008306:	f00e fabb 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800830a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800830e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8008312:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008316:	4be6      	ldr	r3, [pc, #920]	; (80086b0 <_ZN22ReactanceGraphViewBaseC1Ev+0x1174>)
 8008318:	930c      	str	r3, [sp, #48]	; 0x30
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9KIH));
 800831a:	a90c      	add	r1, sp, #48	; 0x30
 800831c:	4640      	mov	r0, r8
 800831e:	f8ad 7034 	strh.w	r7, [sp, #52]	; 0x34
 8008322:	f00e fdf3 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008326:	1d20      	adds	r0, r4, #4
 8008328:	4659      	mov	r1, fp
 800832a:	9003      	str	r0, [sp, #12]
 800832c:	f009 fdae 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008330:	9803      	ldr	r0, [sp, #12]
 8008332:	4651      	mov	r1, sl
 8008334:	f009 fdaa 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008338:	ee18 1a10 	vmov	r1, s16
 800833c:	9803      	ldr	r0, [sp, #12]
 800833e:	f009 fda5 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008342:	9803      	ldr	r0, [sp, #12]
 8008344:	4629      	mov	r1, r5
 8008346:	f009 fda1 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800834a:	9803      	ldr	r0, [sp, #12]
 800834c:	4649      	mov	r1, r9
 800834e:	f009 fd9d 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008352:	9803      	ldr	r0, [sp, #12]
 8008354:	4641      	mov	r1, r8
 8008356:	f009 fd99 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800835a:	4620      	mov	r0, r4
 800835c:	b00f      	add	sp, #60	; 0x3c
 800835e:	ecbd 8b08 	vpop	{d8-d11}
 8008362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 8008366:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800836a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800836e:	ee17 3a10 	vmov	r3, s14
 8008372:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008376:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800837a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800837e:	1e59      	subs	r1, r3, #1
 8008380:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008384:	ee17 3a90 	vmov	r3, s15
 8008388:	440b      	add	r3, r1
 800838a:	4619      	mov	r1, r3
 800838c:	f7ff ba8b 	b.w	80078a6 <_ZN22ReactanceGraphViewBaseC1Ev+0x36a>
 8008390:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008394:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008398:	ee17 3a10 	vmov	r3, s14
 800839c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80083a0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80083a4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80083a8:	1e5a      	subs	r2, r3, #1
 80083aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80083ae:	ee17 3a90 	vmov	r3, s15
 80083b2:	4413      	add	r3, r2
 80083b4:	461a      	mov	r2, r3
 80083b6:	f7ff ba8c 	b.w	80078d2 <_ZN22ReactanceGraphViewBaseC1Ev+0x396>
 80083ba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80083be:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80083c2:	ee17 3a10 	vmov	r3, s14
 80083c6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80083ca:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80083ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80083d2:	1e59      	subs	r1, r3, #1
 80083d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80083d8:	ee17 3a90 	vmov	r3, s15
 80083dc:	440b      	add	r3, r1
 80083de:	4619      	mov	r1, r3
 80083e0:	f7ff bac8 	b.w	8007974 <_ZN22ReactanceGraphViewBaseC1Ev+0x438>
 80083e4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80083e8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80083ec:	ee17 3a10 	vmov	r3, s14
 80083f0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80083f4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80083f8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80083fc:	1e5a      	subs	r2, r3, #1
 80083fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008402:	ee17 3a90 	vmov	r3, s15
 8008406:	4413      	add	r3, r2
 8008408:	461a      	mov	r2, r3
 800840a:	f7ff bac9 	b.w	80079a0 <_ZN22ReactanceGraphViewBaseC1Ev+0x464>
 800840e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008412:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008416:	ee17 3a10 	vmov	r3, s14
 800841a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800841e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008422:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008426:	1e59      	subs	r1, r3, #1
 8008428:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800842c:	ee17 3a90 	vmov	r3, s15
 8008430:	440b      	add	r3, r1
 8008432:	4619      	mov	r1, r3
 8008434:	f7ff bacb 	b.w	80079ce <_ZN22ReactanceGraphViewBaseC1Ev+0x492>
 8008438:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800843c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008440:	ee17 3a10 	vmov	r3, s14
 8008444:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008448:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800844c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008450:	1e5a      	subs	r2, r3, #1
 8008452:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008456:	ee17 3a90 	vmov	r3, s15
 800845a:	4413      	add	r3, r2
 800845c:	461a      	mov	r2, r3
 800845e:	f7ff bacc 	b.w	80079fa <_ZN22ReactanceGraphViewBaseC1Ev+0x4be>
 8008462:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008466:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800846a:	ee17 3a10 	vmov	r3, s14
 800846e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008472:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008476:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800847a:	1e59      	subs	r1, r3, #1
 800847c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008480:	ee17 3a90 	vmov	r3, s15
 8008484:	440b      	add	r3, r1
 8008486:	4619      	mov	r1, r3
 8008488:	f7ff bad0 	b.w	8007a2c <_ZN22ReactanceGraphViewBaseC1Ev+0x4f0>
 800848c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008490:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008494:	ee17 3a10 	vmov	r3, s14
 8008498:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800849c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80084a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80084a4:	1e5a      	subs	r2, r3, #1
 80084a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80084aa:	ee17 3a90 	vmov	r3, s15
 80084ae:	4413      	add	r3, r2
 80084b0:	461a      	mov	r2, r3
 80084b2:	f7ff bad1 	b.w	8007a58 <_ZN22ReactanceGraphViewBaseC1Ev+0x51c>
 80084b6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80084ba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80084be:	ee17 3a10 	vmov	r3, s14
 80084c2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80084c6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80084ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80084ce:	1e59      	subs	r1, r3, #1
 80084d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80084d4:	ee17 3a90 	vmov	r3, s15
 80084d8:	440b      	add	r3, r1
 80084da:	4619      	mov	r1, r3
 80084dc:	f7ff bad5 	b.w	8007a8a <_ZN22ReactanceGraphViewBaseC1Ev+0x54e>
 80084e0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80084e4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80084e8:	ee17 3a10 	vmov	r3, s14
 80084ec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80084f0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80084f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80084f8:	1e5a      	subs	r2, r3, #1
 80084fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80084fe:	ee17 3a90 	vmov	r3, s15
 8008502:	4413      	add	r3, r2
 8008504:	461a      	mov	r2, r3
 8008506:	f7ff bad6 	b.w	8007ab6 <_ZN22ReactanceGraphViewBaseC1Ev+0x57a>
 800850a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800850e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008512:	ee17 3a10 	vmov	r3, s14
 8008516:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800851a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800851e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008522:	1e59      	subs	r1, r3, #1
 8008524:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008528:	ee17 3a90 	vmov	r3, s15
 800852c:	440b      	add	r3, r1
 800852e:	4619      	mov	r1, r3
 8008530:	f7ff bada 	b.w	8007ae8 <_ZN22ReactanceGraphViewBaseC1Ev+0x5ac>
 8008534:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008538:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800853c:	ee17 3a10 	vmov	r3, s14
 8008540:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008544:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008548:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800854c:	1e5a      	subs	r2, r3, #1
 800854e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008552:	ee17 3a90 	vmov	r3, s15
 8008556:	4413      	add	r3, r2
 8008558:	461a      	mov	r2, r3
 800855a:	f7ff badb 	b.w	8007b14 <_ZN22ReactanceGraphViewBaseC1Ev+0x5d8>
 800855e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008562:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008566:	ee17 3a10 	vmov	r3, s14
 800856a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800856e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008572:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008576:	1e59      	subs	r1, r3, #1
 8008578:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800857c:	ee17 3a90 	vmov	r3, s15
 8008580:	440b      	add	r3, r1
 8008582:	4619      	mov	r1, r3
 8008584:	f7ff badf 	b.w	8007b46 <_ZN22ReactanceGraphViewBaseC1Ev+0x60a>
 8008588:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800858c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008590:	ee17 3a10 	vmov	r3, s14
 8008594:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008598:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800859c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80085a0:	1e5a      	subs	r2, r3, #1
 80085a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085a6:	ee17 3a90 	vmov	r3, s15
 80085aa:	4413      	add	r3, r2
 80085ac:	461a      	mov	r2, r3
 80085ae:	f7ff bae0 	b.w	8007b72 <_ZN22ReactanceGraphViewBaseC1Ev+0x636>
 80085b2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80085b6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80085ba:	ee17 3a10 	vmov	r3, s14
 80085be:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80085c2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80085c6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80085ca:	1e59      	subs	r1, r3, #1
 80085cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085d0:	ee17 3a90 	vmov	r3, s15
 80085d4:	440b      	add	r3, r1
 80085d6:	4619      	mov	r1, r3
 80085d8:	f7ff bae4 	b.w	8007ba4 <_ZN22ReactanceGraphViewBaseC1Ev+0x668>
 80085dc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80085e0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80085e4:	ee17 3a10 	vmov	r3, s14
 80085e8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80085ec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80085f0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80085f4:	1e5a      	subs	r2, r3, #1
 80085f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085fa:	ee17 3a90 	vmov	r3, s15
 80085fe:	4413      	add	r3, r2
 8008600:	461a      	mov	r2, r3
 8008602:	f7ff bae5 	b.w	8007bd0 <_ZN22ReactanceGraphViewBaseC1Ev+0x694>
 8008606:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800860a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800860e:	ee17 3a10 	vmov	r3, s14
 8008612:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008616:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800861a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800861e:	1e59      	subs	r1, r3, #1
 8008620:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008624:	ee17 3a90 	vmov	r3, s15
 8008628:	440b      	add	r3, r1
 800862a:	4619      	mov	r1, r3
 800862c:	f7ff bae9 	b.w	8007c02 <_ZN22ReactanceGraphViewBaseC1Ev+0x6c6>
 8008630:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008634:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008638:	ee17 3a10 	vmov	r3, s14
 800863c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008640:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008644:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008648:	1e5a      	subs	r2, r3, #1
 800864a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800864e:	ee17 3a90 	vmov	r3, s15
 8008652:	4413      	add	r3, r2
 8008654:	461a      	mov	r2, r3
 8008656:	f7ff baea 	b.w	8007c2e <_ZN22ReactanceGraphViewBaseC1Ev+0x6f2>
 800865a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800865e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008662:	ee17 3a10 	vmov	r3, s14
 8008666:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800866a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800866e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008672:	1e59      	subs	r1, r3, #1
 8008674:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008678:	ee17 3a90 	vmov	r3, s15
 800867c:	440b      	add	r3, r1
 800867e:	4619      	mov	r1, r3
 8008680:	f7ff baee 	b.w	8007c60 <_ZN22ReactanceGraphViewBaseC1Ev+0x724>
 8008684:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008688:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800868c:	ee17 3a10 	vmov	r3, s14
 8008690:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008694:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008698:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800869c:	1e5a      	subs	r2, r3, #1
 800869e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80086a2:	ee17 3a90 	vmov	r3, s15
 80086a6:	4413      	add	r3, r2
 80086a8:	461a      	mov	r2, r3
 80086aa:	f7ff baef 	b.w	8007c8c <_ZN22ReactanceGraphViewBaseC1Ev+0x750>
 80086ae:	bf00      	nop
 80086b0:	0802f874 	.word	0x0802f874
 80086b4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80086b8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80086bc:	ee17 3a10 	vmov	r3, s14
 80086c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80086c4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80086c8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80086cc:	1e59      	subs	r1, r3, #1
 80086ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80086d2:	ee17 3a90 	vmov	r3, s15
 80086d6:	440b      	add	r3, r1
 80086d8:	4619      	mov	r1, r3
 80086da:	f7ff baf0 	b.w	8007cbe <_ZN22ReactanceGraphViewBaseC1Ev+0x782>
 80086de:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80086e2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80086e6:	ee17 3a10 	vmov	r3, s14
 80086ea:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80086ee:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80086f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80086f6:	1e5a      	subs	r2, r3, #1
 80086f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80086fc:	ee17 3a90 	vmov	r3, s15
 8008700:	4413      	add	r3, r2
 8008702:	461a      	mov	r2, r3
 8008704:	f7ff baf1 	b.w	8007cea <_ZN22ReactanceGraphViewBaseC1Ev+0x7ae>
 8008708:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800870c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008710:	ee17 3a10 	vmov	r3, s14
 8008714:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008718:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800871c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008720:	1e59      	subs	r1, r3, #1
 8008722:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008726:	ee17 3a90 	vmov	r3, s15
 800872a:	440b      	add	r3, r1
 800872c:	4619      	mov	r1, r3
 800872e:	f7ff baf5 	b.w	8007d1c <_ZN22ReactanceGraphViewBaseC1Ev+0x7e0>
 8008732:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008736:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800873a:	ee17 3a10 	vmov	r3, s14
 800873e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008742:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008746:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800874a:	1e5a      	subs	r2, r3, #1
 800874c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008750:	ee17 3a90 	vmov	r3, s15
 8008754:	4413      	add	r3, r2
 8008756:	461a      	mov	r2, r3
 8008758:	f7ff baf6 	b.w	8007d48 <_ZN22ReactanceGraphViewBaseC1Ev+0x80c>
 800875c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008760:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008764:	ee17 3a10 	vmov	r3, s14
 8008768:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800876c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008770:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008774:	1e59      	subs	r1, r3, #1
 8008776:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800877a:	ee17 3a90 	vmov	r3, s15
 800877e:	440b      	add	r3, r1
 8008780:	4619      	mov	r1, r3
 8008782:	f7ff bafa 	b.w	8007d7a <_ZN22ReactanceGraphViewBaseC1Ev+0x83e>
 8008786:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800878a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800878e:	ee17 3a10 	vmov	r3, s14
 8008792:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008796:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800879a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800879e:	1e5a      	subs	r2, r3, #1
 80087a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087a4:	ee17 3a90 	vmov	r3, s15
 80087a8:	4413      	add	r3, r2
 80087aa:	461a      	mov	r2, r3
 80087ac:	f7ff bafb 	b.w	8007da6 <_ZN22ReactanceGraphViewBaseC1Ev+0x86a>
 80087b0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80087b4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80087b8:	ee17 3a10 	vmov	r3, s14
 80087bc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80087c0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80087c4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80087c8:	1e59      	subs	r1, r3, #1
 80087ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087ce:	ee17 3a90 	vmov	r3, s15
 80087d2:	440b      	add	r3, r1
 80087d4:	4619      	mov	r1, r3
 80087d6:	f7ff baff 	b.w	8007dd8 <_ZN22ReactanceGraphViewBaseC1Ev+0x89c>
 80087da:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80087de:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80087e2:	ee17 3a10 	vmov	r3, s14
 80087e6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80087ea:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80087ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80087f2:	1e5a      	subs	r2, r3, #1
 80087f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087f8:	ee17 3a90 	vmov	r3, s15
 80087fc:	4413      	add	r3, r2
 80087fe:	461a      	mov	r2, r3
 8008800:	f7ff bb00 	b.w	8007e04 <_ZN22ReactanceGraphViewBaseC1Ev+0x8c8>
 8008804:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008808:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800880c:	ee17 3a10 	vmov	r3, s14
 8008810:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008814:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008818:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800881c:	1e59      	subs	r1, r3, #1
 800881e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008822:	ee17 3a90 	vmov	r3, s15
 8008826:	440b      	add	r3, r1
 8008828:	4619      	mov	r1, r3
 800882a:	f7ff bb04 	b.w	8007e36 <_ZN22ReactanceGraphViewBaseC1Ev+0x8fa>
 800882e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008832:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008836:	ee17 3a10 	vmov	r3, s14
 800883a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800883e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008842:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008846:	1e5a      	subs	r2, r3, #1
 8008848:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800884c:	ee17 3a90 	vmov	r3, s15
 8008850:	4413      	add	r3, r2
 8008852:	461a      	mov	r2, r3
 8008854:	f7ff bb05 	b.w	8007e62 <_ZN22ReactanceGraphViewBaseC1Ev+0x926>
 8008858:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800885c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008860:	ee17 3a10 	vmov	r3, s14
 8008864:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008868:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800886c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008870:	1e59      	subs	r1, r3, #1
 8008872:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008876:	ee17 3a90 	vmov	r3, s15
 800887a:	440b      	add	r3, r1
 800887c:	4619      	mov	r1, r3
 800887e:	f7ff bb09 	b.w	8007e94 <_ZN22ReactanceGraphViewBaseC1Ev+0x958>
 8008882:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008886:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800888a:	ee17 3a10 	vmov	r3, s14
 800888e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008892:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008896:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800889a:	1e5a      	subs	r2, r3, #1
 800889c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80088a0:	ee17 3a90 	vmov	r3, s15
 80088a4:	4413      	add	r3, r2
 80088a6:	461a      	mov	r2, r3
 80088a8:	f7ff bb0a 	b.w	8007ec0 <_ZN22ReactanceGraphViewBaseC1Ev+0x984>
 80088ac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80088b0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80088b4:	ee17 3a10 	vmov	r3, s14
 80088b8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80088bc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80088c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80088c4:	1e59      	subs	r1, r3, #1
 80088c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80088ca:	ee17 3a90 	vmov	r3, s15
 80088ce:	440b      	add	r3, r1
 80088d0:	4619      	mov	r1, r3
 80088d2:	f7ff bb0e 	b.w	8007ef2 <_ZN22ReactanceGraphViewBaseC1Ev+0x9b6>
 80088d6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80088da:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80088de:	ee17 3a10 	vmov	r3, s14
 80088e2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80088e6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80088ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80088ee:	1e5a      	subs	r2, r3, #1
 80088f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80088f4:	ee17 3a90 	vmov	r3, s15
 80088f8:	4413      	add	r3, r2
 80088fa:	461a      	mov	r2, r3
 80088fc:	f7ff bb0f 	b.w	8007f1e <_ZN22ReactanceGraphViewBaseC1Ev+0x9e2>
 8008900:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008904:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008908:	ee17 3a10 	vmov	r3, s14
 800890c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008910:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008914:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008918:	1e59      	subs	r1, r3, #1
 800891a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800891e:	ee17 3a90 	vmov	r3, s15
 8008922:	440b      	add	r3, r1
 8008924:	4619      	mov	r1, r3
 8008926:	f7ff bb13 	b.w	8007f50 <_ZN22ReactanceGraphViewBaseC1Ev+0xa14>
 800892a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800892e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008932:	ee17 3a10 	vmov	r3, s14
 8008936:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800893a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800893e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008942:	1e5a      	subs	r2, r3, #1
 8008944:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008948:	ee17 3a90 	vmov	r3, s15
 800894c:	4413      	add	r3, r2
 800894e:	461a      	mov	r2, r3
 8008950:	f7ff bb14 	b.w	8007f7c <_ZN22ReactanceGraphViewBaseC1Ev+0xa40>
 8008954:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008958:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800895c:	ee17 3a10 	vmov	r3, s14
 8008960:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008964:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008968:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800896c:	1e59      	subs	r1, r3, #1
 800896e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008972:	ee17 3a90 	vmov	r3, s15
 8008976:	440b      	add	r3, r1
 8008978:	4619      	mov	r1, r3
 800897a:	f7ff bb18 	b.w	8007fae <_ZN22ReactanceGraphViewBaseC1Ev+0xa72>
 800897e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008982:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008986:	ee17 3a10 	vmov	r3, s14
 800898a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800898e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008992:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008996:	1e5a      	subs	r2, r3, #1
 8008998:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800899c:	ee17 3a90 	vmov	r3, s15
 80089a0:	4413      	add	r3, r2
 80089a2:	461a      	mov	r2, r3
 80089a4:	f7ff bb19 	b.w	8007fda <_ZN22ReactanceGraphViewBaseC1Ev+0xa9e>
 80089a8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80089ac:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80089b0:	ee17 3a10 	vmov	r3, s14
 80089b4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80089b8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80089bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80089c0:	1e59      	subs	r1, r3, #1
 80089c2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80089c6:	ee17 3a90 	vmov	r3, s15
 80089ca:	440b      	add	r3, r1
 80089cc:	4619      	mov	r1, r3
 80089ce:	f7ff bb1d 	b.w	800800c <_ZN22ReactanceGraphViewBaseC1Ev+0xad0>
 80089d2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80089d6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80089da:	ee17 3a10 	vmov	r3, s14
 80089de:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80089e2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80089e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80089ea:	1e5a      	subs	r2, r3, #1
 80089ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80089f0:	ee17 3a90 	vmov	r3, s15
 80089f4:	4413      	add	r3, r2
 80089f6:	461a      	mov	r2, r3
 80089f8:	f7ff bb1e 	b.w	8008038 <_ZN22ReactanceGraphViewBaseC1Ev+0xafc>
 80089fc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a00:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008a04:	ee17 3a10 	vmov	r3, s14
 8008a08:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008a0c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008a10:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008a14:	1e59      	subs	r1, r3, #1
 8008a16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a1a:	ee17 3a90 	vmov	r3, s15
 8008a1e:	440b      	add	r3, r1
 8008a20:	4619      	mov	r1, r3
 8008a22:	f7ff bb22 	b.w	800806a <_ZN22ReactanceGraphViewBaseC1Ev+0xb2e>
 8008a26:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a2a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008a2e:	ee17 3a10 	vmov	r3, s14
 8008a32:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008a36:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008a3a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008a3e:	1e5a      	subs	r2, r3, #1
 8008a40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a44:	ee17 3a90 	vmov	r3, s15
 8008a48:	4413      	add	r3, r2
 8008a4a:	461a      	mov	r2, r3
 8008a4c:	f7ff bb23 	b.w	8008096 <_ZN22ReactanceGraphViewBaseC1Ev+0xb5a>
 8008a50:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a54:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008a58:	ee17 3a10 	vmov	r3, s14
 8008a5c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008a60:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008a64:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008a68:	1e59      	subs	r1, r3, #1
 8008a6a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a6e:	ee17 3a90 	vmov	r3, s15
 8008a72:	440b      	add	r3, r1
 8008a74:	4619      	mov	r1, r3
 8008a76:	f7ff bb27 	b.w	80080c8 <_ZN22ReactanceGraphViewBaseC1Ev+0xb8c>
 8008a7a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008a7e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008a82:	ee17 3a10 	vmov	r3, s14
 8008a86:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008a8a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008a8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008a92:	1e5a      	subs	r2, r3, #1
 8008a94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a98:	ee17 3a90 	vmov	r3, s15
 8008a9c:	4413      	add	r3, r2
 8008a9e:	461a      	mov	r2, r3
 8008aa0:	f7ff bb28 	b.w	80080f4 <_ZN22ReactanceGraphViewBaseC1Ev+0xbb8>
 8008aa4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008aa8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008aac:	ee17 3a10 	vmov	r3, s14
 8008ab0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008ab4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008ab8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008abc:	1e59      	subs	r1, r3, #1
 8008abe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008ac2:	ee17 3a90 	vmov	r3, s15
 8008ac6:	440b      	add	r3, r1
 8008ac8:	4619      	mov	r1, r3
 8008aca:	f7ff bb2c 	b.w	8008126 <_ZN22ReactanceGraphViewBaseC1Ev+0xbea>
 8008ace:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008ad2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008ad6:	ee17 3a10 	vmov	r3, s14
 8008ada:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008ade:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008ae2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008ae6:	1e5a      	subs	r2, r3, #1
 8008ae8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008aec:	ee17 3a90 	vmov	r3, s15
 8008af0:	4413      	add	r3, r2
 8008af2:	461a      	mov	r2, r3
 8008af4:	f7ff bb4a 	b.w	800818c <_ZN22ReactanceGraphViewBaseC1Ev+0xc50>
 8008af8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008afc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008b00:	ee17 3a10 	vmov	r3, s14
 8008b04:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008b08:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008b0c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008b10:	1e59      	subs	r1, r3, #1
 8008b12:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b16:	ee17 3a90 	vmov	r3, s15
 8008b1a:	440b      	add	r3, r1
 8008b1c:	4619      	mov	r1, r3
 8008b1e:	f7ff bb4e 	b.w	80081be <_ZN22ReactanceGraphViewBaseC1Ev+0xc82>
 8008b22:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008b26:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008b2a:	ee17 3a10 	vmov	r3, s14
 8008b2e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008b32:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008b36:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008b3a:	1e5a      	subs	r2, r3, #1
 8008b3c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b40:	ee17 3a90 	vmov	r3, s15
 8008b44:	4413      	add	r3, r2
 8008b46:	461a      	mov	r2, r3
 8008b48:	f7ff bb4f 	b.w	80081ea <_ZN22ReactanceGraphViewBaseC1Ev+0xcae>
 8008b4c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008b50:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008b54:	ee17 3a10 	vmov	r3, s14
 8008b58:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008b5c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008b60:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008b64:	1e59      	subs	r1, r3, #1
 8008b66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b6a:	ee17 3a90 	vmov	r3, s15
 8008b6e:	440b      	add	r3, r1
 8008b70:	4619      	mov	r1, r3
 8008b72:	f7ff bb53 	b.w	800821c <_ZN22ReactanceGraphViewBaseC1Ev+0xce0>
 8008b76:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008b7a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008b7e:	ee17 3a10 	vmov	r3, s14
 8008b82:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008b86:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008b8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008b8e:	1e5a      	subs	r2, r3, #1
 8008b90:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b94:	ee17 3a90 	vmov	r3, s15
 8008b98:	4413      	add	r3, r2
 8008b9a:	461a      	mov	r2, r3
 8008b9c:	f7ff bb54 	b.w	8008248 <_ZN22ReactanceGraphViewBaseC1Ev+0xd0c>
 8008ba0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008ba4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008ba8:	ee17 3a10 	vmov	r3, s14
 8008bac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008bb0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008bb4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008bb8:	1e59      	subs	r1, r3, #1
 8008bba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008bbe:	ee17 3a90 	vmov	r3, s15
 8008bc2:	440b      	add	r3, r1
 8008bc4:	4619      	mov	r1, r3
 8008bc6:	f7ff bb58 	b.w	800827a <_ZN22ReactanceGraphViewBaseC1Ev+0xd3e>
 8008bca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008bce:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008bd2:	ee17 3a10 	vmov	r3, s14
 8008bd6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008bda:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8008bde:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008be2:	1e5a      	subs	r2, r3, #1
 8008be4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008be8:	ee17 3a90 	vmov	r3, s15
 8008bec:	4413      	add	r3, r2
 8008bee:	461a      	mov	r2, r3
 8008bf0:	f7ff bb59 	b.w	80082a6 <_ZN22ReactanceGraphViewBaseC1Ev+0xd6a>

08008bf4 <_ZN23ResistanceGraphViewBaseD1Ev>:

class ResistanceGraphViewBase : public touchgfx::View<ResistanceGraphPresenter>
{
public:
    ResistanceGraphViewBase();
    virtual ~ResistanceGraphViewBase() {}
 8008bf4:	4770      	bx	lr

08008bf6 <_ZN23ResistanceGraphViewBase14PlotResistanceEv>:
     * Virtual Action Handlers
     */
    virtual void PlotResistance()
    {
        // Override and implement this function in ResistanceGraph
    }
 8008bf6:	4770      	bx	lr

08008bf8 <_ZN23ResistanceGraphViewBase11setupScreenEv>:
{

    //Interaction2
    //When screen transition begins call virtual function
    //Call PlotResistance
    PlotResistance();
 8008bf8:	6803      	ldr	r3, [r0, #0]
 8008bfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008bfc:	4718      	bx	r3

08008bfe <_ZN8touchgfx8CallbackI23ResistanceGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008bfe:	4770      	bx	lr

08008c00 <_ZN8touchgfx8CallbackI23ResistanceGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008c00:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8008c02:	68c2      	ldr	r2, [r0, #12]
 8008c04:	6844      	ldr	r4, [r0, #4]
 8008c06:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008c08:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8008c0a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008c0e:	07d2      	lsls	r2, r2, #31
 8008c10:	bf48      	it	mi
 8008c12:	5962      	ldrmi	r2, [r4, r5]
 8008c14:	689b      	ldr	r3, [r3, #8]
    }
 8008c16:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8008c18:	bf48      	it	mi
 8008c1a:	58d3      	ldrmi	r3, [r2, r3]
 8008c1c:	4718      	bx	r3

08008c1e <_ZNK8touchgfx8CallbackI23ResistanceGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8008c1e:	6843      	ldr	r3, [r0, #4]
 8008c20:	b12b      	cbz	r3, 8008c2e <_ZNK8touchgfx8CallbackI23ResistanceGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008c22:	6883      	ldr	r3, [r0, #8]
 8008c24:	b92b      	cbnz	r3, 8008c32 <_ZNK8touchgfx8CallbackI23ResistanceGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008c26:	68c0      	ldr	r0, [r0, #12]
 8008c28:	f000 0001 	and.w	r0, r0, #1
 8008c2c:	4770      	bx	lr
 8008c2e:	4618      	mov	r0, r3
 8008c30:	4770      	bx	lr
 8008c32:	2001      	movs	r0, #1
    }
 8008c34:	4770      	bx	lr

08008c36 <_ZN8touchgfx8CallbackI23ResistanceGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008c36:	b510      	push	{r4, lr}
 8008c38:	2110      	movs	r1, #16
 8008c3a:	4604      	mov	r4, r0
 8008c3c:	f022 fa8d 	bl	802b15a <_ZdlPvj>
 8008c40:	4620      	mov	r0, r4
 8008c42:	bd10      	pop	{r4, pc}

08008c44 <_ZN23ResistanceGraphViewBaseD0Ev>:
    virtual ~ResistanceGraphViewBase() {}
 8008c44:	b510      	push	{r4, lr}
 8008c46:	f241 71b8 	movw	r1, #6072	; 0x17b8
 8008c4a:	4604      	mov	r4, r0
 8008c4c:	f022 fa85 	bl	802b15a <_ZdlPvj>
 8008c50:	4620      	mov	r0, r4
 8008c52:	bd10      	pop	{r4, pc}

08008c54 <_ZN23ResistanceGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ResistanceGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ReturnToList)
 8008c54:	f200 401c 	addw	r0, r0, #1052	; 0x41c
 8008c58:	4288      	cmp	r0, r1
{
 8008c5a:	b508      	push	{r3, lr}
    if (&src == &ReturnToList)
 8008c5c:	d105      	bne.n	8008c6a <_ZN23ResistanceGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008c5e:	f010 fb93 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When ReturnToList clicked change screen to DataDisplayList
        //Go to DataDisplayList with screen transition towards East
        application().gotoDataDisplayListScreenSlideTransitionEast();
    }
}
 8008c62:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoDataDisplayListScreenSlideTransitionEast();
 8008c66:	f7fb bf97 	b.w	8004b98 <_ZN23FrontendApplicationBase44gotoDataDisplayListScreenSlideTransitionEastEv>
}
 8008c6a:	bd08      	pop	{r3, pc}

08008c6c <_ZN23ResistanceGraphViewBaseC1Ev>:
ResistanceGraphViewBase::ResistanceGraphViewBase() :
 8008c6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c70:	ed2d 8b08 	vpush	{d8-d11}
 8008c74:	4604      	mov	r4, r0
 8008c76:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &ResistanceGraphViewBase::buttonCallbackHandler)
 8008c78:	46a1      	mov	r9, r4
 8008c7a:	2600      	movs	r6, #0
 8008c7c:	f011 fef4 	bl	801aa68 <_ZN8touchgfx6ScreenC1Ev>
 8008c80:	4bec      	ldr	r3, [pc, #944]	; (8009034 <_ZN23ResistanceGraphViewBaseC1Ev+0x3c8>)
 8008c82:	63e6      	str	r6, [r4, #60]	; 0x3c
 8008c84:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8008c88:	4631      	mov	r1, r6
 8008c8a:	2226      	movs	r2, #38	; 0x26
 8008c8c:	4648      	mov	r0, r9
 8008c8e:	f023 fb37 	bl	802c300 <memset>
 8008c92:	4648      	mov	r0, r9
 8008c94:	f7fa ff5e 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 8008c98:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8008c9c:	25ff      	movs	r5, #255	; 0xff
 8008c9e:	4be6      	ldr	r3, [pc, #920]	; (8009038 <_ZN23ResistanceGraphViewBaseC1Ev+0x3cc>)
 8008ca0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008ca2:	2226      	movs	r2, #38	; 0x26
 8008ca4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008ca8:	4631      	mov	r1, r6
 8008caa:	f884 5066 	strb.w	r5, [r4, #102]	; 0x66
 8008cae:	66a6      	str	r6, [r4, #104]	; 0x68
 8008cb0:	4658      	mov	r0, fp
 8008cb2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008cb6:	f023 fb23 	bl	802c300 <memset>
 8008cba:	4658      	mov	r0, fp
 8008cbc:	f7fa ff4a 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 8008cc0:	4bde      	ldr	r3, [pc, #888]	; (800903c <_ZN23ResistanceGraphViewBaseC1Ev+0x3d0>)
 8008cc2:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008cc4:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8008cc8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008ccc:	f884 5094 	strb.w	r5, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008cd0:	a90c      	add	r1, sp, #48	; 0x30
 8008cd2:	f104 0598 	add.w	r5, r4, #152	; 0x98
 8008cd6:	4658      	mov	r0, fp
 8008cd8:	f00e fc9b 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : AbstractDataGraph(capacity), xValues(xvalues), yValues(yvalues)
 8008cdc:	211a      	movs	r1, #26
 8008cde:	4628      	mov	r0, r5
 8008ce0:	f00c f92c 	bl	8014f3c <_ZN8touchgfx17AbstractDataGraphC1Es>
 8008ce4:	4bd6      	ldr	r3, [pc, #856]	; (8009040 <_ZN23ResistanceGraphViewBaseC1Ev+0x3d4>)
 8008ce6:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008cea:	f504 73ee 	add.w	r3, r4, #476	; 0x1dc
 8008cee:	f8c4 31d4 	str.w	r3, [r4, #468]	; 0x1d4
 8008cf2:	f504 7311 	add.w	r3, r4, #580	; 0x244
        StaticDataGraph::setGraphRangeX(0, capacity - 1);
 8008cf6:	2219      	movs	r2, #25
 8008cf8:	4631      	mov	r1, r6
        : AbstractDataGraph(capacity), xValues(xvalues), yValues(yvalues)
 8008cfa:	f8c4 31d8 	str.w	r3, [r4, #472]	; 0x1d8
        StaticDataGraph::setGraphRangeX(0, capacity - 1);
 8008cfe:	4628      	mov	r0, r5
 8008d00:	f7fe f8a1 	bl	8006e46 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8008d04:	4bcf      	ldr	r3, [pc, #828]	; (8009044 <_ZN23ResistanceGraphViewBaseC1Ev+0x3d8>)
 8008d06:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008d0a:	f504 732b 	add.w	r3, r4, #684	; 0x2ac
        : CanvasWidget()
 8008d0e:	4618      	mov	r0, r3
 8008d10:	ee08 3a90 	vmov	s17, r3
 8008d14:	f00b fd18 	bl	8014748 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 8008d18:	4bcb      	ldr	r3, [pc, #812]	; (8009048 <_ZN23ResistanceGraphViewBaseC1Ev+0x3dc>)
 8008d1a:	f8c4 32ac 	str.w	r3, [r4, #684]	; 0x2ac
 8008d1e:	2302      	movs	r3, #2
 8008d20:	f884 32da 	strb.w	r3, [r4, #730]	; 0x2da
        : AbstractPainterRGB565(), painterColor(0)
 8008d24:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8008d28:	4618      	mov	r0, r3
 8008d2a:	ee0b 3a10 	vmov	s22, r3
 8008d2e:	f7fd fefb 	bl	8006b28 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008d32:	4bc6      	ldr	r3, [pc, #792]	; (800904c <_ZN23ResistanceGraphViewBaseC1Ev+0x3e0>)
 8008d34:	f8c4 32dc 	str.w	r3, [r4, #732]	; 0x2dc
 8008d38:	f504 733d 	add.w	r3, r4, #756	; 0x2f4
        painterColor = color;
 8008d3c:	f8c4 62f0 	str.w	r6, [r4, #752]	; 0x2f0
        : CanvasWidget()
 8008d40:	4618      	mov	r0, r3
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8008d42:	f04f 0801 	mov.w	r8, #1
 8008d46:	ee09 3a10 	vmov	s18, r3
        : CanvasWidget()
 8008d4a:	f00b fcfd 	bl	8014748 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8008d4e:	230a      	movs	r3, #10
 8008d50:	e9c4 83ca 	strd	r8, r3, [r4, #808]	; 0x328
class GraphElementGridX : public GraphElementGridBase
 8008d54:	4bbe      	ldr	r3, [pc, #760]	; (8009050 <_ZN23ResistanceGraphViewBaseC1Ev+0x3e4>)
 8008d56:	f8c4 32f4 	str.w	r3, [r4, #756]	; 0x2f4
 8008d5a:	f504 734e 	add.w	r3, r4, #824	; 0x338
 8008d5e:	f8c4 6324 	str.w	r6, [r4, #804]	; 0x324
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8008d62:	f884 8330 	strb.w	r8, [r4, #816]	; 0x330
 8008d66:	f8c4 6334 	str.w	r6, [r4, #820]	; 0x334
        : CanvasWidget()
 8008d6a:	4618      	mov	r0, r3
 8008d6c:	ee09 3a90 	vmov	s19, r3
 8008d70:	f00b fcea 	bl	8014748 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8008d74:	230a      	movs	r3, #10
 8008d76:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
class GraphElementGridY : public GraphElementGridBase
 8008d7a:	4bb6      	ldr	r3, [pc, #728]	; (8009054 <_ZN23ResistanceGraphViewBaseC1Ev+0x3e8>)
 8008d7c:	f8c4 3338 	str.w	r3, [r4, #824]	; 0x338
 8008d80:	f504 735f 	add.w	r3, r4, #892	; 0x37c
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8008d84:	e9c4 68da 	strd	r6, r8, [r4, #872]	; 0x368
 8008d88:	f884 8374 	strb.w	r8, [r4, #884]	; 0x374
 8008d8c:	f8c4 6378 	str.w	r6, [r4, #888]	; 0x378
class GraphLabelsX : public GraphLabelsBase
 8008d90:	4618      	mov	r0, r3
 8008d92:	ee0a 3a10 	vmov	s20, r3
 8008d96:	f7fe fbb1 	bl	80074fc <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8008d9a:	4baf      	ldr	r3, [pc, #700]	; (8009058 <_ZN23ResistanceGraphViewBaseC1Ev+0x3ec>)
 8008d9c:	f8c4 337c 	str.w	r3, [r4, #892]	; 0x37c
 8008da0:	f504 7373 	add.w	r3, r4, #972	; 0x3cc
class GraphLabelsY : public GraphLabelsBase
 8008da4:	4618      	mov	r0, r3
 8008da6:	ee0a 3a90 	vmov	s21, r3
 8008daa:	f7fe fba7 	bl	80074fc <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8008dae:	4bab      	ldr	r3, [pc, #684]	; (800905c <_ZN23ResistanceGraphViewBaseC1Ev+0x3f0>)
 8008db0:	f8c4 33cc 	str.w	r3, [r4, #972]	; 0x3cc
 8008db4:	f204 431c 	addw	r3, r4, #1052	; 0x41c
 8008db8:	4618      	mov	r0, r3
 8008dba:	f504 6a8b 	add.w	sl, r4, #1112	; 0x458
 8008dbe:	ee08 3a10 	vmov	s16, r3
 8008dc2:	f504 6794 	add.w	r7, r4, #1184	; 0x4a0
 8008dc6:	f00e fbfd 	bl	80175c4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8008dca:	4650      	mov	r0, sl
 8008dcc:	f7fd fc4c 	bl	8006668 <_ZN8touchgfx8TextAreaC1Ev>
 8008dd0:	4638      	mov	r0, r7
 8008dd2:	f7fd fc49 	bl	8006668 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8008dd6:	4ba2      	ldr	r3, [pc, #648]	; (8009060 <_ZN23ResistanceGraphViewBaseC1Ev+0x3f4>)
 8008dd8:	f8c4 34e8 	str.w	r3, [r4, #1256]	; 0x4e8
 8008ddc:	4ba1      	ldr	r3, [pc, #644]	; (8009064 <_ZN23ResistanceGraphViewBaseC1Ev+0x3f8>)
 8008dde:	f8c4 34f0 	str.w	r3, [r4, #1264]	; 0x4f0
 8008de2:	f8c4 64f4 	str.w	r6, [r4, #1268]	; 0x4f4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008de6:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8008dea:	f504 609f 	add.w	r0, r4, #1272	; 0x4f8
 8008dee:	f8c4 44ec 	str.w	r4, [r4, #1260]	; 0x4ec
 8008df2:	f00e fd85 	bl	8017900 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8008df6:	23f0      	movs	r3, #240	; 0xf0
 8008df8:	4632      	mov	r2, r6
 8008dfa:	4631      	mov	r1, r6
 8008dfc:	9300      	str	r3, [sp, #0]
 8008dfe:	4648      	mov	r0, r9
 8008e00:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008e04:	f7fb fdec 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8008e08:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008e0c:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 8008e0e:	4632      	mov	r2, r6
 8008e10:	4631      	mov	r1, r6
 8008e12:	4658      	mov	r0, fp
 8008e14:	f7fa fd28 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 8008e18:	a90c      	add	r1, sp, #48	; 0x30
 8008e1a:	4658      	mov	r0, fp
 8008e1c:	f8ad 6030 	strh.w	r6, [sp, #48]	; 0x30
 8008e20:	f00e fbf7 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    ResistanceGraph.setScaleX(1);
 8008e24:	4632      	mov	r2, r6
 8008e26:	4641      	mov	r1, r8
 8008e28:	4628      	mov	r0, r5
 8008e2a:	f00c f901 	bl	8015030 <_ZN8touchgfx15StaticDataGraph9setScaleXEib>
    ResistanceGraph.setScaleY(1000);
 8008e2e:	4632      	mov	r2, r6
 8008e30:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008e34:	4628      	mov	r0, r5
 8008e36:	f00c f91f 	bl	8015078 <_ZN8touchgfx15StaticDataGraph9setScaleYEib>
    ResistanceGraph.setPosition(13, 12, 295, 173);
 8008e3a:	23ad      	movs	r3, #173	; 0xad
 8008e3c:	9300      	str	r3, [sp, #0]
 8008e3e:	220c      	movs	r2, #12
 8008e40:	f240 1327 	movw	r3, #295	; 0x127
 8008e44:	210d      	movs	r1, #13
 8008e46:	4628      	mov	r0, r5
 8008e48:	f7fb fdca 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
    ResistanceGraph.setGraphAreaMargin(20, 40, 10, 20);
 8008e4c:	2114      	movs	r1, #20
 8008e4e:	9100      	str	r1, [sp, #0]
 8008e50:	230a      	movs	r3, #10
 8008e52:	2228      	movs	r2, #40	; 0x28
 8008e54:	4628      	mov	r0, r5
 8008e56:	f00c f822 	bl	8014e9e <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    ResistanceGraph.setGraphAreaPadding(0, 0, 0, 0);
 8008e5a:	4633      	mov	r3, r6
 8008e5c:	4632      	mov	r2, r6
 8008e5e:	4631      	mov	r1, r6
 8008e60:	9600      	str	r6, [sp, #0]
 8008e62:	4628      	mov	r0, r5
 8008e64:	f00b ff1b 	bl	8014c9e <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    ResistanceGraph.setGraphRangeX(0, 32);
 8008e68:	4631      	mov	r1, r6
 8008e6a:	2220      	movs	r2, #32
 8008e6c:	4628      	mov	r0, r5
 8008e6e:	f7fd ffea 	bl	8006e46 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    ResistanceGraph.setGraphRangeY(-50, 250);
 8008e72:	22fa      	movs	r2, #250	; 0xfa
 8008e74:	f06f 0131 	mvn.w	r1, #49	; 0x31
 8008e78:	4628      	mov	r0, r5
 8008e7a:	f7fe f870 	bl	8006f5e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8008e7e:	4642      	mov	r2, r8
 8008e80:	e9d4 10ca 	ldrd	r1, r0, [r4, #808]	; 0x328
 8008e84:	f00c f8cc 	bl	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8008e88:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008e8c:	f8c4 3324 	str.w	r3, [r4, #804]	; 0x324
        gridInterval = abs(interval);
 8008e90:	2304      	movs	r3, #4
 8008e92:	f8c4 332c 	str.w	r3, [r4, #812]	; 0x32c
    ResistanceGraph.addGraphElement(ResistanceGraphMajorXAxisGrid);
 8008e96:	ee19 1a10 	vmov	r1, s18
        dataScale = scale;
 8008e9a:	f8c4 8328 	str.w	r8, [r4, #808]	; 0x328
        lineWidth = width;
 8008e9e:	f884 8330 	strb.w	r8, [r4, #816]	; 0x330
 8008ea2:	4628      	mov	r0, r5
 8008ea4:	f00b ff06 	bl	8014cb4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8008ea8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8008eac:	e9d4 10db 	ldrd	r1, r0, [r4, #876]	; 0x36c
 8008eb0:	f00c f8b6 	bl	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8008eb4:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8008eb8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008ebc:	e9c4 36da 	strd	r3, r6, [r4, #872]	; 0x368
        gridInterval = abs(interval);
 8008ec0:	f246 13a8 	movw	r3, #25000	; 0x61a8
 8008ec4:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
    ResistanceGraph.addGraphElement(ResistanceGraphMajorYAxisGrid);
 8008ec8:	ee19 1a90 	vmov	r1, s19
        lineWidth = width;
 8008ecc:	f884 8374 	strb.w	r8, [r4, #884]	; 0x374
 8008ed0:	4628      	mov	r0, r5
 8008ed2:	f00b feef 	bl	8014cb4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8008ed6:	4642      	mov	r2, r8
 8008ed8:	e9d4 10ec 	ldrd	r1, r0, [r4, #944]	; 0x3b0
 8008edc:	f00c f8a0 	bl	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8008ee0:	2305      	movs	r3, #5
        dataScale = scale;
 8008ee2:	f8c4 83b0 	str.w	r8, [r4, #944]	; 0x3b0
        labelInterval = abs(interval);
 8008ee6:	f8c4 33b4 	str.w	r3, [r4, #948]	; 0x3b4
        color = newColor;
 8008eea:	f8df 818c 	ldr.w	r8, [pc, #396]	; 8009078 <_ZN23ResistanceGraphViewBaseC1Ev+0x40c>
 8008eee:	f8c4 83ac 	str.w	r8, [r4, #940]	; 0x3ac
class TypedText
 8008ef2:	2306      	movs	r3, #6
 8008ef4:	f8a4 33bc 	strh.w	r3, [r4, #956]	; 0x3bc
    ResistanceGraph.addBottomElement(ResistanceGraphMajorXAxisLabel);
 8008ef8:	ee1a 1a10 	vmov	r1, s20
 8008efc:	4628      	mov	r0, r5
 8008efe:	f00b fefd 	bl	8014cfc <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8008f02:	4632      	mov	r2, r6
 8008f04:	f8d4 1400 	ldr.w	r1, [r4, #1024]	; 0x400
 8008f08:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8008f0c:	f00c f888 	bl	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8008f10:	f246 13a8 	movw	r3, #25000	; 0x61a8
        dataScale = scale;
 8008f14:	f8c4 6400 	str.w	r6, [r4, #1024]	; 0x400
        labelInterval = abs(interval);
 8008f18:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
        labelDecimals = decimals;
 8008f1c:	2603      	movs	r6, #3
 8008f1e:	230d      	movs	r3, #13
    ResistanceGraph.addLeftElement(ResistanceGraphMajorYAxisLabel);
 8008f20:	ee1a 1a90 	vmov	r1, s21
 8008f24:	f8a4 340c 	strh.w	r3, [r4, #1036]	; 0x40c
 8008f28:	4628      	mov	r0, r5
 8008f2a:	f8a4 6412 	strh.w	r6, [r4, #1042]	; 0x412
 8008f2e:	f8c4 83fc 	str.w	r8, [r4, #1020]	; 0x3fc
 8008f32:	f00b fed1 	bl	8014cd8 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 8008f36:	4b4c      	ldr	r3, [pc, #304]	; (8009068 <_ZN23ResistanceGraphViewBaseC1Ev+0x3fc>)
 8008f38:	f8c4 32f0 	str.w	r3, [r4, #752]	; 0x2f0
    ResistanceGraphLine1.setPainter(ResistanceGraphLine1Painter);
 8008f3c:	ee1b 1a10 	vmov	r1, s22
 8008f40:	ee18 0a90 	vmov	r0, s17
 8008f44:	f00b fafc 	bl	8014540 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    ResistanceGraph.addGraphElement(ResistanceGraphLine1);
 8008f48:	ee18 1a90 	vmov	r1, s17
        lineWidth = width;
 8008f4c:	f884 62da 	strb.w	r6, [r4, #730]	; 0x2da
 8008f50:	4628      	mov	r0, r5
 8008f52:	f00b feaf 	bl	8014cb4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        const float fs = f * scale;
 8008f56:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8008f5a:	ed9f 7a44 	vldr	s14, [pc, #272]	; 800906c <_ZN23ResistanceGraphViewBaseC1Ev+0x400>
 8008f5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008f62:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008f66:	eef4 7ac7 	vcmpe.f32	s15, s14
 8008f6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f6e:	f2c0 858e 	blt.w	8009a8e <_ZN23ResistanceGraphViewBaseC1Ev+0xe22>
            return int(fs + 0.5f);
 8008f72:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008f76:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008f7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008f7e:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8008f82:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8008f86:	ed9f 7a3a 	vldr	s14, [pc, #232]	; 8009070 <_ZN23ResistanceGraphViewBaseC1Ev+0x404>
 8008f8a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008f8e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008f92:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008f96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f9a:	f2c0 858d 	blt.w	8009ab8 <_ZN23ResistanceGraphViewBaseC1Ev+0xe4c>
            return int(fs + 0.5f);
 8008f9e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008fa2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008fa6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008faa:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8008fae:	4628      	mov	r0, r5
 8008fb0:	f00c f886 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8008fb4:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8008fb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        if (fs >= 0)
 8008fbc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008fc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008fc4:	f2c0 858d 	blt.w	8009ae2 <_ZN23ResistanceGraphViewBaseC1Ev+0xe76>
            return int(fs + 0.5f);
 8008fc8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008fcc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008fd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008fd4:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8008fd8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8008fdc:	ed9f 7a25 	vldr	s14, [pc, #148]	; 8009074 <_ZN23ResistanceGraphViewBaseC1Ev+0x408>
 8008fe0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008fe4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008fe8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008fec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008ff0:	f2c0 858c 	blt.w	8009b0c <_ZN23ResistanceGraphViewBaseC1Ev+0xea0>
            return int(fs + 0.5f);
 8008ff4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008ff8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008ffc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009000:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009004:	4628      	mov	r0, r5
 8009006:	f00c f85b 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800900a:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 800900e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009012:	ee77 7aa7 	vadd.f32	s15, s15, s15
        if (fs >= 0)
 8009016:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800901a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800901e:	f2c0 858a 	blt.w	8009b36 <_ZN23ResistanceGraphViewBaseC1Ev+0xeca>
            return int(fs + 0.5f);
 8009022:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009026:	ee77 7a87 	vadd.f32	s15, s15, s14
 800902a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800902e:	ee17 1a90 	vmov	r1, s15
 8009032:	e039      	b.n	80090a8 <_ZN23ResistanceGraphViewBaseC1Ev+0x43c>
 8009034:	080315f0 	.word	0x080315f0
 8009038:	08034854 	.word	0x08034854
 800903c:	08034a34 	.word	0x08034a34
 8009040:	08034020 	.word	0x08034020
 8009044:	0803144c 	.word	0x0803144c
 8009048:	08034410 	.word	0x08034410
 800904c:	08033d14 	.word	0x08033d14
 8009050:	080312d4 	.word	0x080312d4
 8009054:	08031390 	.word	0x08031390
 8009058:	08034494 	.word	0x08034494
 800905c:	08034538 	.word	0x08034538
 8009060:	080315d8 	.word	0x080315d8
 8009064:	08008c55 	.word	0x08008c55
 8009068:	ff1497c5 	.word	0xff1497c5
 800906c:	00000000 	.word	0x00000000
 8009070:	c18d3d71 	.word	0xc18d3d71
 8009074:	430dc4dd 	.word	0x430dc4dd
 8009078:	ff001a36 	.word	0xff001a36
 800907c:	4356a354 	.word	0x4356a354
 8009080:	42d652f2 	.word	0x42d652f2
 8009084:	430a97cf 	.word	0x430a97cf
 8009088:	432571aa 	.word	0x432571aa
 800908c:	3f2a7efa 	.word	0x3f2a7efa
 8009090:	c19428f6 	.word	0xc19428f6
 8009094:	42f3e1cb 	.word	0x42f3e1cb
 8009098:	42c08dd3 	.word	0x42c08dd3
 800909c:	42abd4fe 	.word	0x42abd4fe
 80090a0:	43642419 	.word	0x43642419
 80090a4:	43392e14 	.word	0x43392e14
        const float fs = f * scale;
 80090a8:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80090ac:	ed1f 7a0d 	vldr	s14, [pc, #-52]	; 800907c <_ZN23ResistanceGraphViewBaseC1Ev+0x410>
 80090b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80090b4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80090b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80090bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80090c0:	f2c0 854e 	blt.w	8009b60 <_ZN23ResistanceGraphViewBaseC1Ev+0xef4>
            return int(fs + 0.5f);
 80090c4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80090c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80090cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80090d0:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80090d4:	4628      	mov	r0, r5
 80090d6:	f00b fff3 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80090da:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80090de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80090e2:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 80090e6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80090ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80090ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80090f2:	f2c0 854a 	blt.w	8009b8a <_ZN23ResistanceGraphViewBaseC1Ev+0xf1e>
            return int(fs + 0.5f);
 80090f6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80090fa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80090fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009102:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009106:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800910a:	ed1f 7a23 	vldr	s14, [pc, #-140]	; 8009080 <_ZN23ResistanceGraphViewBaseC1Ev+0x414>
 800910e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009112:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009116:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800911a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800911e:	f2c0 8549 	blt.w	8009bb4 <_ZN23ResistanceGraphViewBaseC1Ev+0xf48>
            return int(fs + 0.5f);
 8009122:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009126:	ee77 7a87 	vadd.f32	s15, s15, s14
 800912a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800912e:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009132:	4628      	mov	r0, r5
 8009134:	f00b ffc4 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009138:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 800913c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009140:	eeb1 7a04 	vmov.f32	s14, #20	; 0x40a00000  5.0
 8009144:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009148:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800914c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009150:	f2c0 8545 	blt.w	8009bde <_ZN23ResistanceGraphViewBaseC1Ev+0xf72>
            return int(fs + 0.5f);
 8009154:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009158:	ee77 7a87 	vadd.f32	s15, s15, s14
 800915c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009160:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009164:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009168:	ed1f 7a3a 	vldr	s14, [pc, #-232]	; 8009084 <_ZN23ResistanceGraphViewBaseC1Ev+0x418>
 800916c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009170:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009174:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009178:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800917c:	f2c0 8544 	blt.w	8009c08 <_ZN23ResistanceGraphViewBaseC1Ev+0xf9c>
            return int(fs + 0.5f);
 8009180:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009184:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009188:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800918c:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009190:	4628      	mov	r0, r5
 8009192:	f00b ff95 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009196:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 800919a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800919e:	eeb1 7a08 	vmov.f32	s14, #24	; 0x40c00000  6.0
 80091a2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80091a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80091aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80091ae:	f2c0 8540 	blt.w	8009c32 <_ZN23ResistanceGraphViewBaseC1Ev+0xfc6>
            return int(fs + 0.5f);
 80091b2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80091b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80091ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80091be:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80091c2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80091c6:	ed1f 7a50 	vldr	s14, [pc, #-320]	; 8009088 <_ZN23ResistanceGraphViewBaseC1Ev+0x41c>
 80091ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80091ce:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80091d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80091d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80091da:	f2c0 853f 	blt.w	8009c5c <_ZN23ResistanceGraphViewBaseC1Ev+0xff0>
            return int(fs + 0.5f);
 80091de:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80091e2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80091e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80091ea:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80091ee:	4628      	mov	r0, r5
 80091f0:	f00b ff66 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80091f4:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80091f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80091fc:	eeb1 7a0c 	vmov.f32	s14, #28	; 0x40e00000  7.0
 8009200:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009204:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009208:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800920c:	f2c0 853b 	blt.w	8009c86 <_ZN23ResistanceGraphViewBaseC1Ev+0x101a>
            return int(fs + 0.5f);
 8009210:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009214:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009218:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800921c:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009220:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009224:	ed1f 7a67 	vldr	s14, [pc, #-412]	; 800908c <_ZN23ResistanceGraphViewBaseC1Ev+0x420>
 8009228:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800922c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009230:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009234:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009238:	f2c0 853a 	blt.w	8009cb0 <_ZN23ResistanceGraphViewBaseC1Ev+0x1044>
            return int(fs + 0.5f);
 800923c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009240:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009244:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009248:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800924c:	4628      	mov	r0, r5
 800924e:	f00b ff37 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009252:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009256:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800925a:	eeb2 7a02 	vmov.f32	s14, #34	; 0x41100000  9.0
 800925e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009262:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009266:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800926a:	f2c0 8536 	blt.w	8009cda <_ZN23ResistanceGraphViewBaseC1Ev+0x106e>
            return int(fs + 0.5f);
 800926e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009272:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009276:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800927a:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800927e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009282:	ed1f 7a7d 	vldr	s14, [pc, #-500]	; 8009090 <_ZN23ResistanceGraphViewBaseC1Ev+0x424>
 8009286:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800928a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800928e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009292:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009296:	f2c0 8535 	blt.w	8009d04 <_ZN23ResistanceGraphViewBaseC1Ev+0x1098>
            return int(fs + 0.5f);
 800929a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800929e:	ee77 7a87 	vadd.f32	s15, s15, s14
 80092a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80092a6:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80092aa:	4628      	mov	r0, r5
 80092ac:	f00b ff08 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80092b0:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80092b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80092b8:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80092bc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80092c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80092c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80092c8:	f2c0 8531 	blt.w	8009d2e <_ZN23ResistanceGraphViewBaseC1Ev+0x10c2>
            return int(fs + 0.5f);
 80092cc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80092d0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80092d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80092d8:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80092dc:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80092e0:	ed1f 7a94 	vldr	s14, [pc, #-592]	; 8009094 <_ZN23ResistanceGraphViewBaseC1Ev+0x428>
 80092e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80092e8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80092ec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80092f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80092f4:	f2c0 8530 	blt.w	8009d58 <_ZN23ResistanceGraphViewBaseC1Ev+0x10ec>
            return int(fs + 0.5f);
 80092f8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80092fc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009300:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009304:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009308:	4628      	mov	r0, r5
 800930a:	f00b fed9 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800930e:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009312:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009316:	eeb2 7a06 	vmov.f32	s14, #38	; 0x41300000  11.0
 800931a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800931e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009322:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009326:	f2c0 8531 	blt.w	8009d8c <_ZN23ResistanceGraphViewBaseC1Ev+0x1120>
            return int(fs + 0.5f);
 800932a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800932e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009332:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009336:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800933a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800933e:	ed1f 7aaa 	vldr	s14, [pc, #-680]	; 8009098 <_ZN23ResistanceGraphViewBaseC1Ev+0x42c>
 8009342:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009346:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800934a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800934e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009352:	f2c0 8530 	blt.w	8009db6 <_ZN23ResistanceGraphViewBaseC1Ev+0x114a>
            return int(fs + 0.5f);
 8009356:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800935a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800935e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009362:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009366:	4628      	mov	r0, r5
 8009368:	f00b feaa 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800936c:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009370:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009374:	eeb2 7a08 	vmov.f32	s14, #40	; 0x41400000  12.0
 8009378:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800937c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009380:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009384:	f2c0 852c 	blt.w	8009de0 <_ZN23ResistanceGraphViewBaseC1Ev+0x1174>
            return int(fs + 0.5f);
 8009388:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800938c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009390:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009394:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009398:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800939c:	ed1f 7ac1 	vldr	s14, [pc, #-772]	; 800909c <_ZN23ResistanceGraphViewBaseC1Ev+0x430>
 80093a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80093a4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80093a8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80093ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80093b0:	f2c0 852b 	blt.w	8009e0a <_ZN23ResistanceGraphViewBaseC1Ev+0x119e>
            return int(fs + 0.5f);
 80093b4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80093b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80093bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80093c0:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80093c4:	4628      	mov	r0, r5
 80093c6:	f00b fe7b 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80093ca:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80093ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80093d2:	eeb2 7a0c 	vmov.f32	s14, #44	; 0x41600000  14.0
 80093d6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80093da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80093de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80093e2:	f2c0 8527 	blt.w	8009e34 <_ZN23ResistanceGraphViewBaseC1Ev+0x11c8>
            return int(fs + 0.5f);
 80093e6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80093ea:	ee77 7a87 	vadd.f32	s15, s15, s14
 80093ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80093f2:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80093f6:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80093fa:	ed1f 7ad7 	vldr	s14, [pc, #-860]	; 80090a0 <_ZN23ResistanceGraphViewBaseC1Ev+0x434>
 80093fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009402:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009406:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800940a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800940e:	f2c0 8526 	blt.w	8009e5e <_ZN23ResistanceGraphViewBaseC1Ev+0x11f2>
            return int(fs + 0.5f);
 8009412:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009416:	ee77 7a87 	vadd.f32	s15, s15, s14
 800941a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800941e:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009422:	4628      	mov	r0, r5
 8009424:	f00b fe4c 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009428:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 800942c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009430:	eeb2 7a0e 	vmov.f32	s14, #46	; 0x41700000  15.0
 8009434:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009438:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800943c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009440:	f2c0 8522 	blt.w	8009e88 <_ZN23ResistanceGraphViewBaseC1Ev+0x121c>
            return int(fs + 0.5f);
 8009444:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009448:	ee77 7a87 	vadd.f32	s15, s15, s14
 800944c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009450:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009454:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009458:	ed1f 7aee 	vldr	s14, [pc, #-952]	; 80090a4 <_ZN23ResistanceGraphViewBaseC1Ev+0x438>
 800945c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009460:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009464:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009468:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800946c:	f2c0 8521 	blt.w	8009eb2 <_ZN23ResistanceGraphViewBaseC1Ev+0x1246>
            return int(fs + 0.5f);
 8009470:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009474:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009478:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800947c:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009480:	4628      	mov	r0, r5
 8009482:	f00b fe1d 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009486:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 800948a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800948e:	eeb3 7a00 	vmov.f32	s14, #48	; 0x41800000  16.0
 8009492:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009496:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800949a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800949e:	f2c0 851d 	blt.w	8009edc <_ZN23ResistanceGraphViewBaseC1Ev+0x1270>
            return int(fs + 0.5f);
 80094a2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80094a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80094aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80094ae:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80094b2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80094b6:	ed9f 7af1 	vldr	s14, [pc, #964]	; 800987c <_ZN23ResistanceGraphViewBaseC1Ev+0xc10>
 80094ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80094be:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80094c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80094c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80094ca:	f2c0 851c 	blt.w	8009f06 <_ZN23ResistanceGraphViewBaseC1Ev+0x129a>
            return int(fs + 0.5f);
 80094ce:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80094d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80094d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80094da:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80094de:	4628      	mov	r0, r5
 80094e0:	f00b fdee 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80094e4:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80094e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80094ec:	eeb3 7a01 	vmov.f32	s14, #49	; 0x41880000  17.0
 80094f0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80094f4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80094f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80094fc:	f2c0 8518 	blt.w	8009f30 <_ZN23ResistanceGraphViewBaseC1Ev+0x12c4>
            return int(fs + 0.5f);
 8009500:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009504:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009508:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800950c:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009510:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009514:	ed9f 7ada 	vldr	s14, [pc, #872]	; 8009880 <_ZN23ResistanceGraphViewBaseC1Ev+0xc14>
 8009518:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800951c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009520:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009524:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009528:	f2c0 8517 	blt.w	8009f5a <_ZN23ResistanceGraphViewBaseC1Ev+0x12ee>
            return int(fs + 0.5f);
 800952c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009530:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009534:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009538:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800953c:	4628      	mov	r0, r5
 800953e:	f00b fdbf 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009542:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009546:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800954a:	eeb3 7a02 	vmov.f32	s14, #50	; 0x41900000  18.0
 800954e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009552:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009556:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800955a:	f2c0 8513 	blt.w	8009f84 <_ZN23ResistanceGraphViewBaseC1Ev+0x1318>
            return int(fs + 0.5f);
 800955e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009562:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009566:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800956a:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800956e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009572:	ed9f 7ac4 	vldr	s14, [pc, #784]	; 8009884 <_ZN23ResistanceGraphViewBaseC1Ev+0xc18>
 8009576:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800957a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800957e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009586:	f2c0 8512 	blt.w	8009fae <_ZN23ResistanceGraphViewBaseC1Ev+0x1342>
            return int(fs + 0.5f);
 800958a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800958e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009592:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009596:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800959a:	4628      	mov	r0, r5
 800959c:	f00b fd90 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80095a0:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80095a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80095a8:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 80095ac:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80095b0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80095b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80095b8:	f2c0 850e 	blt.w	8009fd8 <_ZN23ResistanceGraphViewBaseC1Ev+0x136c>
            return int(fs + 0.5f);
 80095bc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80095c0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80095c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80095c8:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80095cc:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80095d0:	ed9f 7aad 	vldr	s14, [pc, #692]	; 8009888 <_ZN23ResistanceGraphViewBaseC1Ev+0xc1c>
 80095d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80095d8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80095dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80095e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80095e4:	f2c0 850d 	blt.w	800a002 <_ZN23ResistanceGraphViewBaseC1Ev+0x1396>
            return int(fs + 0.5f);
 80095e8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80095ec:	ee77 7a87 	vadd.f32	s15, s15, s14
 80095f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80095f4:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80095f8:	4628      	mov	r0, r5
 80095fa:	f00b fd61 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80095fe:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009602:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009606:	eeb3 7a05 	vmov.f32	s14, #53	; 0x41a80000  21.0
 800960a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800960e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009612:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009616:	f2c0 8509 	blt.w	800a02c <_ZN23ResistanceGraphViewBaseC1Ev+0x13c0>
            return int(fs + 0.5f);
 800961a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800961e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009622:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009626:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800962a:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800962e:	ed9f 7a97 	vldr	s14, [pc, #604]	; 800988c <_ZN23ResistanceGraphViewBaseC1Ev+0xc20>
 8009632:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009636:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800963a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800963e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009642:	f2c0 8508 	blt.w	800a056 <_ZN23ResistanceGraphViewBaseC1Ev+0x13ea>
            return int(fs + 0.5f);
 8009646:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800964a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800964e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009652:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009656:	4628      	mov	r0, r5
 8009658:	f00b fd32 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 800965c:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009660:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009664:	eeb3 7a06 	vmov.f32	s14, #54	; 0x41b00000  22.0
 8009668:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800966c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009674:	f2c0 8504 	blt.w	800a080 <_ZN23ResistanceGraphViewBaseC1Ev+0x1414>
            return int(fs + 0.5f);
 8009678:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800967c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009680:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009684:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009688:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800968c:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8009890 <_ZN23ResistanceGraphViewBaseC1Ev+0xc24>
 8009690:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009694:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009698:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800969c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80096a0:	f2c0 8503 	blt.w	800a0aa <_ZN23ResistanceGraphViewBaseC1Ev+0x143e>
            return int(fs + 0.5f);
 80096a4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80096a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80096ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80096b0:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80096b4:	4628      	mov	r0, r5
 80096b6:	f00b fd03 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80096ba:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80096be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80096c2:	eeb3 7a07 	vmov.f32	s14, #55	; 0x41b80000  23.0
 80096c6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80096ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80096ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80096d2:	f2c0 84ff 	blt.w	800a0d4 <_ZN23ResistanceGraphViewBaseC1Ev+0x1468>
            return int(fs + 0.5f);
 80096d6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80096da:	ee77 7a87 	vadd.f32	s15, s15, s14
 80096de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80096e2:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80096e6:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80096ea:	ed9f 7a6a 	vldr	s14, [pc, #424]	; 8009894 <_ZN23ResistanceGraphViewBaseC1Ev+0xc28>
 80096ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80096f2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80096f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80096fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80096fe:	f2c0 84fe 	blt.w	800a0fe <_ZN23ResistanceGraphViewBaseC1Ev+0x1492>
            return int(fs + 0.5f);
 8009702:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009706:	ee77 7a87 	vadd.f32	s15, s15, s14
 800970a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800970e:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009712:	4628      	mov	r0, r5
 8009714:	f00b fcd4 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009718:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 800971c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009720:	eeb3 7a09 	vmov.f32	s14, #57	; 0x41c80000  25.0
 8009724:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009728:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800972c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009730:	f2c0 84fa 	blt.w	800a128 <_ZN23ResistanceGraphViewBaseC1Ev+0x14bc>
            return int(fs + 0.5f);
 8009734:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009738:	ee77 7a87 	vadd.f32	s15, s15, s14
 800973c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009740:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009744:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009748:	ed9f 7a53 	vldr	s14, [pc, #332]	; 8009898 <_ZN23ResistanceGraphViewBaseC1Ev+0xc2c>
 800974c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009750:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009754:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009758:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800975c:	f2c0 84f9 	blt.w	800a152 <_ZN23ResistanceGraphViewBaseC1Ev+0x14e6>
            return int(fs + 0.5f);
 8009760:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009764:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009768:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800976c:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 8009770:	4628      	mov	r0, r5
 8009772:	f00b fca5 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009776:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 800977a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800977e:	eeb3 7a0a 	vmov.f32	s14, #58	; 0x41d00000  26.0
 8009782:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009786:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800978a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800978e:	f2c0 84f5 	blt.w	800a17c <_ZN23ResistanceGraphViewBaseC1Ev+0x1510>
            return int(fs + 0.5f);
 8009792:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009796:	ee77 7a87 	vadd.f32	s15, s15, s14
 800979a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800979e:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80097a2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80097a6:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 800989c <_ZN23ResistanceGraphViewBaseC1Ev+0xc30>
 80097aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80097ae:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80097b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80097b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80097ba:	f2c0 84f4 	blt.w	800a1a6 <_ZN23ResistanceGraphViewBaseC1Ev+0x153a>
            return int(fs + 0.5f);
 80097be:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80097c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80097c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80097ca:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80097ce:	4628      	mov	r0, r5
 80097d0:	f00b fc76 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80097d4:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80097d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80097dc:	eeb3 7a0b 	vmov.f32	s14, #59	; 0x41d80000  27.0
 80097e0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80097e4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80097e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80097ec:	f2c0 84f0 	blt.w	800a1d0 <_ZN23ResistanceGraphViewBaseC1Ev+0x1564>
            return int(fs + 0.5f);
 80097f0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80097f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80097f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80097fc:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009800:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009804:	ed9f 7a26 	vldr	s14, [pc, #152]	; 80098a0 <_ZN23ResistanceGraphViewBaseC1Ev+0xc34>
 8009808:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800980c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009810:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009814:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009818:	f2c0 84ef 	blt.w	800a1fa <_ZN23ResistanceGraphViewBaseC1Ev+0x158e>
            return int(fs + 0.5f);
 800981c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009820:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009824:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009828:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800982c:	4628      	mov	r0, r5
 800982e:	f00b fc47 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009832:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009836:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800983a:	eeb3 7a0c 	vmov.f32	s14, #60	; 0x41e00000  28.0
 800983e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009842:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009846:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800984a:	f2c0 84eb 	blt.w	800a224 <_ZN23ResistanceGraphViewBaseC1Ev+0x15b8>
            return int(fs + 0.5f);
 800984e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009852:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009856:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800985a:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800985e:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009862:	ed9f 7a10 	vldr	s14, [pc, #64]	; 80098a4 <_ZN23ResistanceGraphViewBaseC1Ev+0xc38>
 8009866:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800986a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800986e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009872:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009876:	f2c0 84ea 	blt.w	800a24e <_ZN23ResistanceGraphViewBaseC1Ev+0x15e2>
 800987a:	e019      	b.n	80098b0 <_ZN23ResistanceGraphViewBaseC1Ev+0xc44>
 800987c:	41dcc49c 	.word	0x41dcc49c
 8009880:	428b9fbe 	.word	0x428b9fbe
 8009884:	42abe1cb 	.word	0x42abe1cb
 8009888:	c19a76c9 	.word	0xc19a76c9
 800988c:	4295deb8 	.word	0x4295deb8
 8009890:	435d48b4 	.word	0x435d48b4
 8009894:	430ccf9e 	.word	0x430ccf9e
 8009898:	42d9851f 	.word	0x42d9851f
 800989c:	4335076d 	.word	0x4335076d
 80098a0:	42737df4 	.word	0x42737df4
 80098a4:	c234cdd3 	.word	0xc234cdd3
 80098a8:	42a58b44 	.word	0x42a58b44
 80098ac:	42f69eb8 	.word	0x42f69eb8
            return int(fs + 0.5f);
 80098b0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80098b4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80098b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80098bc:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 80098c0:	4628      	mov	r0, r5
 80098c2:	f00b fbfd 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 80098c6:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 80098ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80098ce:	eeb3 7a0e 	vmov.f32	s14, #62	; 0x41f00000  30.0
 80098d2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80098d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80098da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80098de:	f2c0 84cb 	blt.w	800a278 <_ZN23ResistanceGraphViewBaseC1Ev+0x160c>
            return int(fs + 0.5f);
 80098e2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80098e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80098ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80098ee:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 80098f2:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 80098f6:	ed1f 7a14 	vldr	s14, [pc, #-80]	; 80098a8 <_ZN23ResistanceGraphViewBaseC1Ev+0xc3c>
 80098fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80098fe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009902:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009906:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800990a:	f2c0 84ca 	blt.w	800a2a2 <_ZN23ResistanceGraphViewBaseC1Ev+0x1636>
            return int(fs + 0.5f);
 800990e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009912:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009916:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800991a:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800991e:	4628      	mov	r0, r5
 8009920:	f00b fbce 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
        const float fs = f * scale;
 8009924:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
 8009928:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800992c:	eeb3 7a0f 	vmov.f32	s14, #63	; 0x41f80000  31.0
 8009930:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009934:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009938:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800993c:	f2c0 84c6 	blt.w	800a2cc <_ZN23ResistanceGraphViewBaseC1Ev+0x1660>
            return int(fs + 0.5f);
 8009940:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009944:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009948:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800994c:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 8009950:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 8009954:	ed1f 7a2b 	vldr	s14, [pc, #-172]	; 80098ac <_ZN23ResistanceGraphViewBaseC1Ev+0xc40>
 8009958:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800995c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009960:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009968:	f2c0 84c5 	blt.w	800a2f6 <_ZN23ResistanceGraphViewBaseC1Ev+0x168a>
            return int(fs + 0.5f);
 800996c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009970:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009974:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009978:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800997c:	4628      	mov	r0, r5
 800997e:	f00b fb9f 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
    ReturnToList.setXY(130, 180);
 8009982:	ee18 0a10 	vmov	r0, s16
 8009986:	22b4      	movs	r2, #180	; 0xb4
 8009988:	2182      	movs	r1, #130	; 0x82
 800998a:	f7f9 ff6d 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 800998e:	2303      	movs	r3, #3
 8009990:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009994:	f04f 0304 	mov.w	r3, #4
    ReturnToList.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID));
 8009998:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800999c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80099a0:	230a      	movs	r3, #10
 80099a2:	ee18 0a10 	vmov	r0, s16
 80099a6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80099aa:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80099ae:	aa0a      	add	r2, sp, #40	; 0x28
 80099b0:	ab0b      	add	r3, sp, #44	; 0x2c
 80099b2:	a909      	add	r1, sp, #36	; 0x24
 80099b4:	f8cd 8000 	str.w	r8, [sp]
 80099b8:	f00d fd61 	bl	801747e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80099bc:	4bf1      	ldr	r3, [pc, #964]	; (8009d84 <_ZN23ResistanceGraphViewBaseC1Ev+0x1118>)
 80099be:	f8c4 3454 	str.w	r3, [r4, #1108]	; 0x454
    ReturnToList.setAction(buttonCallback);
 80099c2:	f504 639d 	add.w	r3, r4, #1256	; 0x4e8
 80099c6:	f8c4 3444 	str.w	r3, [r4, #1092]	; 0x444
    textArea1.setXY(243, 185);
 80099ca:	4650      	mov	r0, sl
 80099cc:	22b9      	movs	r2, #185	; 0xb9
 80099ce:	21f3      	movs	r1, #243	; 0xf3
 80099d0:	f7f9 ff4a 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 80099d4:	ae04      	add	r6, sp, #16
        this->color = color;
 80099d6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        linespace = space;
 80099da:	f04f 0200 	mov.w	r2, #0
        this->color = color;
 80099de:	f8c4 3488 	str.w	r3, [r4, #1160]	; 0x488
        linespace = space;
 80099e2:	f8a4 248c 	strh.w	r2, [r4, #1164]	; 0x48c
        boundingArea = calculateBoundingArea();
 80099e6:	4651      	mov	r1, sl
 80099e8:	4630      	mov	r0, r6
 80099ea:	f00c ff49 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80099ee:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80099f2:	f10a 0c3c 	add.w	ip, sl, #60	; 0x3c
 80099f6:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        : typedTextId(id)
 80099fa:	4be3      	ldr	r3, [pc, #908]	; (8009d88 <_ZN23ResistanceGraphViewBaseC1Ev+0x111c>)
 80099fc:	930c      	str	r3, [sp, #48]	; 0x30
 80099fe:	2205      	movs	r2, #5
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4YA4));
 8009a00:	4641      	mov	r1, r8
 8009a02:	4650      	mov	r0, sl
 8009a04:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8009a08:	f00d fa80 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea1_1.setXY(13, 12);
 8009a0c:	4638      	mov	r0, r7
 8009a0e:	220c      	movs	r2, #12
 8009a10:	210d      	movs	r1, #13
 8009a12:	f7f9 ff29 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8009a16:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        linespace = space;
 8009a1a:	f04f 0200 	mov.w	r2, #0
        this->color = color;
 8009a1e:	f8c4 34d0 	str.w	r3, [r4, #1232]	; 0x4d0
        linespace = space;
 8009a22:	f8a4 24d4 	strh.w	r2, [r4, #1236]	; 0x4d4
        boundingArea = calculateBoundingArea();
 8009a26:	4639      	mov	r1, r7
 8009a28:	4630      	mov	r0, r6
 8009a2a:	f00c ff29 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009a2e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8009a32:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8009a36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009a3a:	4bd3      	ldr	r3, [pc, #844]	; (8009d88 <_ZN23ResistanceGraphViewBaseC1Ev+0x111c>)
 8009a3c:	930c      	str	r3, [sp, #48]	; 0x30
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X8L));
 8009a3e:	4641      	mov	r1, r8
 8009a40:	f04f 0304 	mov.w	r3, #4
 8009a44:	4638      	mov	r0, r7
 8009a46:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8009a4a:	f00d fa5f 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009a4e:	1d20      	adds	r0, r4, #4
 8009a50:	4649      	mov	r1, r9
 8009a52:	9003      	str	r0, [sp, #12]
 8009a54:	f008 fa1a 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009a58:	9803      	ldr	r0, [sp, #12]
 8009a5a:	4659      	mov	r1, fp
 8009a5c:	f008 fa16 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009a60:	9803      	ldr	r0, [sp, #12]
 8009a62:	4629      	mov	r1, r5
 8009a64:	f008 fa12 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009a68:	ee18 1a10 	vmov	r1, s16
 8009a6c:	9803      	ldr	r0, [sp, #12]
 8009a6e:	f008 fa0d 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009a72:	9803      	ldr	r0, [sp, #12]
 8009a74:	4651      	mov	r1, sl
 8009a76:	f008 fa09 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009a7a:	9803      	ldr	r0, [sp, #12]
 8009a7c:	4639      	mov	r1, r7
 8009a7e:	f008 fa05 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009a82:	4620      	mov	r0, r4
 8009a84:	b00f      	add	sp, #60	; 0x3c
 8009a86:	ecbd 8b08 	vpop	{d8-d11}
 8009a8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 8009a8e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009a92:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009a96:	ee17 3a10 	vmov	r3, s14
 8009a9a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009a9e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009aa2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009aa6:	1e59      	subs	r1, r3, #1
 8009aa8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009aac:	ee17 3a90 	vmov	r3, s15
 8009ab0:	440b      	add	r3, r1
 8009ab2:	4619      	mov	r1, r3
 8009ab4:	f7ff ba65 	b.w	8008f82 <_ZN23ResistanceGraphViewBaseC1Ev+0x316>
 8009ab8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009abc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009ac0:	ee17 3a10 	vmov	r3, s14
 8009ac4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009ac8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009acc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ad0:	1e5a      	subs	r2, r3, #1
 8009ad2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ad6:	ee17 3a90 	vmov	r3, s15
 8009ada:	4413      	add	r3, r2
 8009adc:	461a      	mov	r2, r3
 8009ade:	f7ff ba66 	b.w	8008fae <_ZN23ResistanceGraphViewBaseC1Ev+0x342>
 8009ae2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009ae6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009aea:	ee17 3a10 	vmov	r3, s14
 8009aee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009af2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009af6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009afa:	1e59      	subs	r1, r3, #1
 8009afc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b00:	ee17 3a90 	vmov	r3, s15
 8009b04:	440b      	add	r3, r1
 8009b06:	4619      	mov	r1, r3
 8009b08:	f7ff ba66 	b.w	8008fd8 <_ZN23ResistanceGraphViewBaseC1Ev+0x36c>
 8009b0c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009b10:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009b14:	ee17 3a10 	vmov	r3, s14
 8009b18:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009b1c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009b20:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009b24:	1e5a      	subs	r2, r3, #1
 8009b26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b2a:	ee17 3a90 	vmov	r3, s15
 8009b2e:	4413      	add	r3, r2
 8009b30:	461a      	mov	r2, r3
 8009b32:	f7ff ba67 	b.w	8009004 <_ZN23ResistanceGraphViewBaseC1Ev+0x398>
 8009b36:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009b3a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009b3e:	ee17 3a10 	vmov	r3, s14
 8009b42:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009b46:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009b4a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009b4e:	1e59      	subs	r1, r3, #1
 8009b50:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b54:	ee17 3a90 	vmov	r3, s15
 8009b58:	440b      	add	r3, r1
 8009b5a:	4619      	mov	r1, r3
 8009b5c:	f7ff baa4 	b.w	80090a8 <_ZN23ResistanceGraphViewBaseC1Ev+0x43c>
 8009b60:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009b64:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009b68:	ee17 3a10 	vmov	r3, s14
 8009b6c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009b70:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009b74:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009b78:	1e5a      	subs	r2, r3, #1
 8009b7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b7e:	ee17 3a90 	vmov	r3, s15
 8009b82:	4413      	add	r3, r2
 8009b84:	461a      	mov	r2, r3
 8009b86:	f7ff baa5 	b.w	80090d4 <_ZN23ResistanceGraphViewBaseC1Ev+0x468>
 8009b8a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009b8e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009b92:	ee17 3a10 	vmov	r3, s14
 8009b96:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009b9a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009b9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ba2:	1e59      	subs	r1, r3, #1
 8009ba4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ba8:	ee17 3a90 	vmov	r3, s15
 8009bac:	440b      	add	r3, r1
 8009bae:	4619      	mov	r1, r3
 8009bb0:	f7ff baa9 	b.w	8009106 <_ZN23ResistanceGraphViewBaseC1Ev+0x49a>
 8009bb4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009bb8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009bbc:	ee17 3a10 	vmov	r3, s14
 8009bc0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009bc4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009bc8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009bcc:	1e5a      	subs	r2, r3, #1
 8009bce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009bd2:	ee17 3a90 	vmov	r3, s15
 8009bd6:	4413      	add	r3, r2
 8009bd8:	461a      	mov	r2, r3
 8009bda:	f7ff baaa 	b.w	8009132 <_ZN23ResistanceGraphViewBaseC1Ev+0x4c6>
 8009bde:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009be2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009be6:	ee17 3a10 	vmov	r3, s14
 8009bea:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009bee:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009bf2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009bf6:	1e59      	subs	r1, r3, #1
 8009bf8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009bfc:	ee17 3a90 	vmov	r3, s15
 8009c00:	440b      	add	r3, r1
 8009c02:	4619      	mov	r1, r3
 8009c04:	f7ff baae 	b.w	8009164 <_ZN23ResistanceGraphViewBaseC1Ev+0x4f8>
 8009c08:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009c0c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009c10:	ee17 3a10 	vmov	r3, s14
 8009c14:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009c18:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009c1c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009c20:	1e5a      	subs	r2, r3, #1
 8009c22:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c26:	ee17 3a90 	vmov	r3, s15
 8009c2a:	4413      	add	r3, r2
 8009c2c:	461a      	mov	r2, r3
 8009c2e:	f7ff baaf 	b.w	8009190 <_ZN23ResistanceGraphViewBaseC1Ev+0x524>
 8009c32:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009c36:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009c3a:	ee17 3a10 	vmov	r3, s14
 8009c3e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009c42:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009c46:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009c4a:	1e59      	subs	r1, r3, #1
 8009c4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c50:	ee17 3a90 	vmov	r3, s15
 8009c54:	440b      	add	r3, r1
 8009c56:	4619      	mov	r1, r3
 8009c58:	f7ff bab3 	b.w	80091c2 <_ZN23ResistanceGraphViewBaseC1Ev+0x556>
 8009c5c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009c60:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009c64:	ee17 3a10 	vmov	r3, s14
 8009c68:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009c6c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009c70:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009c74:	1e5a      	subs	r2, r3, #1
 8009c76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c7a:	ee17 3a90 	vmov	r3, s15
 8009c7e:	4413      	add	r3, r2
 8009c80:	461a      	mov	r2, r3
 8009c82:	f7ff bab4 	b.w	80091ee <_ZN23ResistanceGraphViewBaseC1Ev+0x582>
 8009c86:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009c8a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009c8e:	ee17 3a10 	vmov	r3, s14
 8009c92:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009c96:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009c9a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009c9e:	1e59      	subs	r1, r3, #1
 8009ca0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ca4:	ee17 3a90 	vmov	r3, s15
 8009ca8:	440b      	add	r3, r1
 8009caa:	4619      	mov	r1, r3
 8009cac:	f7ff bab8 	b.w	8009220 <_ZN23ResistanceGraphViewBaseC1Ev+0x5b4>
 8009cb0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009cb4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009cb8:	ee17 3a10 	vmov	r3, s14
 8009cbc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009cc0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009cc4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009cc8:	1e5a      	subs	r2, r3, #1
 8009cca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009cce:	ee17 3a90 	vmov	r3, s15
 8009cd2:	4413      	add	r3, r2
 8009cd4:	461a      	mov	r2, r3
 8009cd6:	f7ff bab9 	b.w	800924c <_ZN23ResistanceGraphViewBaseC1Ev+0x5e0>
 8009cda:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009cde:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009ce2:	ee17 3a10 	vmov	r3, s14
 8009ce6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009cea:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009cee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009cf2:	1e59      	subs	r1, r3, #1
 8009cf4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009cf8:	ee17 3a90 	vmov	r3, s15
 8009cfc:	440b      	add	r3, r1
 8009cfe:	4619      	mov	r1, r3
 8009d00:	f7ff babd 	b.w	800927e <_ZN23ResistanceGraphViewBaseC1Ev+0x612>
 8009d04:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009d08:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009d0c:	ee17 3a10 	vmov	r3, s14
 8009d10:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009d14:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009d18:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d1c:	1e5a      	subs	r2, r3, #1
 8009d1e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d22:	ee17 3a90 	vmov	r3, s15
 8009d26:	4413      	add	r3, r2
 8009d28:	461a      	mov	r2, r3
 8009d2a:	f7ff babe 	b.w	80092aa <_ZN23ResistanceGraphViewBaseC1Ev+0x63e>
 8009d2e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009d32:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009d36:	ee17 3a10 	vmov	r3, s14
 8009d3a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009d3e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009d42:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d46:	1e59      	subs	r1, r3, #1
 8009d48:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d4c:	ee17 3a90 	vmov	r3, s15
 8009d50:	440b      	add	r3, r1
 8009d52:	4619      	mov	r1, r3
 8009d54:	f7ff bac2 	b.w	80092dc <_ZN23ResistanceGraphViewBaseC1Ev+0x670>
 8009d58:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009d5c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009d60:	ee17 3a10 	vmov	r3, s14
 8009d64:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009d68:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009d6c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d70:	1e5a      	subs	r2, r3, #1
 8009d72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d76:	ee17 3a90 	vmov	r3, s15
 8009d7a:	4413      	add	r3, r2
 8009d7c:	461a      	mov	r2, r3
 8009d7e:	f7ff bac3 	b.w	8009308 <_ZN23ResistanceGraphViewBaseC1Ev+0x69c>
 8009d82:	bf00      	nop
 8009d84:	0016000f 	.word	0x0016000f
 8009d88:	0802f874 	.word	0x0802f874
 8009d8c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009d90:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009d94:	ee17 3a10 	vmov	r3, s14
 8009d98:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009d9c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009da0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009da4:	1e59      	subs	r1, r3, #1
 8009da6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009daa:	ee17 3a90 	vmov	r3, s15
 8009dae:	440b      	add	r3, r1
 8009db0:	4619      	mov	r1, r3
 8009db2:	f7ff bac2 	b.w	800933a <_ZN23ResistanceGraphViewBaseC1Ev+0x6ce>
 8009db6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009dba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009dbe:	ee17 3a10 	vmov	r3, s14
 8009dc2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009dc6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009dca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009dce:	1e5a      	subs	r2, r3, #1
 8009dd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009dd4:	ee17 3a90 	vmov	r3, s15
 8009dd8:	4413      	add	r3, r2
 8009dda:	461a      	mov	r2, r3
 8009ddc:	f7ff bac3 	b.w	8009366 <_ZN23ResistanceGraphViewBaseC1Ev+0x6fa>
 8009de0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009de4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009de8:	ee17 3a10 	vmov	r3, s14
 8009dec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009df0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009df4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009df8:	1e59      	subs	r1, r3, #1
 8009dfa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009dfe:	ee17 3a90 	vmov	r3, s15
 8009e02:	440b      	add	r3, r1
 8009e04:	4619      	mov	r1, r3
 8009e06:	f7ff bac7 	b.w	8009398 <_ZN23ResistanceGraphViewBaseC1Ev+0x72c>
 8009e0a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009e0e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009e12:	ee17 3a10 	vmov	r3, s14
 8009e16:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009e1a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009e1e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009e22:	1e5a      	subs	r2, r3, #1
 8009e24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e28:	ee17 3a90 	vmov	r3, s15
 8009e2c:	4413      	add	r3, r2
 8009e2e:	461a      	mov	r2, r3
 8009e30:	f7ff bac8 	b.w	80093c4 <_ZN23ResistanceGraphViewBaseC1Ev+0x758>
 8009e34:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009e38:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009e3c:	ee17 3a10 	vmov	r3, s14
 8009e40:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009e44:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009e48:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009e4c:	1e59      	subs	r1, r3, #1
 8009e4e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e52:	ee17 3a90 	vmov	r3, s15
 8009e56:	440b      	add	r3, r1
 8009e58:	4619      	mov	r1, r3
 8009e5a:	f7ff bacc 	b.w	80093f6 <_ZN23ResistanceGraphViewBaseC1Ev+0x78a>
 8009e5e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009e62:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009e66:	ee17 3a10 	vmov	r3, s14
 8009e6a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009e6e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009e72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009e76:	1e5a      	subs	r2, r3, #1
 8009e78:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e7c:	ee17 3a90 	vmov	r3, s15
 8009e80:	4413      	add	r3, r2
 8009e82:	461a      	mov	r2, r3
 8009e84:	f7ff bacd 	b.w	8009422 <_ZN23ResistanceGraphViewBaseC1Ev+0x7b6>
 8009e88:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009e8c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009e90:	ee17 3a10 	vmov	r3, s14
 8009e94:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009e98:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009e9c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ea0:	1e59      	subs	r1, r3, #1
 8009ea2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ea6:	ee17 3a90 	vmov	r3, s15
 8009eaa:	440b      	add	r3, r1
 8009eac:	4619      	mov	r1, r3
 8009eae:	f7ff bad1 	b.w	8009454 <_ZN23ResistanceGraphViewBaseC1Ev+0x7e8>
 8009eb2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009eb6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009eba:	ee17 3a10 	vmov	r3, s14
 8009ebe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009ec2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009ec6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009eca:	1e5a      	subs	r2, r3, #1
 8009ecc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ed0:	ee17 3a90 	vmov	r3, s15
 8009ed4:	4413      	add	r3, r2
 8009ed6:	461a      	mov	r2, r3
 8009ed8:	f7ff bad2 	b.w	8009480 <_ZN23ResistanceGraphViewBaseC1Ev+0x814>
 8009edc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009ee0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009ee4:	ee17 3a10 	vmov	r3, s14
 8009ee8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009eec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009ef0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ef4:	1e59      	subs	r1, r3, #1
 8009ef6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009efa:	ee17 3a90 	vmov	r3, s15
 8009efe:	440b      	add	r3, r1
 8009f00:	4619      	mov	r1, r3
 8009f02:	f7ff bad6 	b.w	80094b2 <_ZN23ResistanceGraphViewBaseC1Ev+0x846>
 8009f06:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009f0a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009f0e:	ee17 3a10 	vmov	r3, s14
 8009f12:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009f16:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009f1a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f1e:	1e5a      	subs	r2, r3, #1
 8009f20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f24:	ee17 3a90 	vmov	r3, s15
 8009f28:	4413      	add	r3, r2
 8009f2a:	461a      	mov	r2, r3
 8009f2c:	f7ff bad7 	b.w	80094de <_ZN23ResistanceGraphViewBaseC1Ev+0x872>
 8009f30:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009f34:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009f38:	ee17 3a10 	vmov	r3, s14
 8009f3c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009f40:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009f44:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f48:	1e59      	subs	r1, r3, #1
 8009f4a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f4e:	ee17 3a90 	vmov	r3, s15
 8009f52:	440b      	add	r3, r1
 8009f54:	4619      	mov	r1, r3
 8009f56:	f7ff badb 	b.w	8009510 <_ZN23ResistanceGraphViewBaseC1Ev+0x8a4>
 8009f5a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009f5e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009f62:	ee17 3a10 	vmov	r3, s14
 8009f66:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009f6a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009f6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f72:	1e5a      	subs	r2, r3, #1
 8009f74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f78:	ee17 3a90 	vmov	r3, s15
 8009f7c:	4413      	add	r3, r2
 8009f7e:	461a      	mov	r2, r3
 8009f80:	f7ff badc 	b.w	800953c <_ZN23ResistanceGraphViewBaseC1Ev+0x8d0>
 8009f84:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009f88:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009f8c:	ee17 3a10 	vmov	r3, s14
 8009f90:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009f94:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009f98:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f9c:	1e59      	subs	r1, r3, #1
 8009f9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009fa2:	ee17 3a90 	vmov	r3, s15
 8009fa6:	440b      	add	r3, r1
 8009fa8:	4619      	mov	r1, r3
 8009faa:	f7ff bae0 	b.w	800956e <_ZN23ResistanceGraphViewBaseC1Ev+0x902>
 8009fae:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009fb2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009fb6:	ee17 3a10 	vmov	r3, s14
 8009fba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009fbe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009fc2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009fc6:	1e5a      	subs	r2, r3, #1
 8009fc8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009fcc:	ee17 3a90 	vmov	r3, s15
 8009fd0:	4413      	add	r3, r2
 8009fd2:	461a      	mov	r2, r3
 8009fd4:	f7ff bae1 	b.w	800959a <_ZN23ResistanceGraphViewBaseC1Ev+0x92e>
 8009fd8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8009fdc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009fe0:	ee17 3a10 	vmov	r3, s14
 8009fe4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009fe8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8009fec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ff0:	1e59      	subs	r1, r3, #1
 8009ff2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ff6:	ee17 3a90 	vmov	r3, s15
 8009ffa:	440b      	add	r3, r1
 8009ffc:	4619      	mov	r1, r3
 8009ffe:	f7ff bae5 	b.w	80095cc <_ZN23ResistanceGraphViewBaseC1Ev+0x960>
 800a002:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a006:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a00a:	ee17 3a10 	vmov	r3, s14
 800a00e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a012:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a016:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a01a:	1e5a      	subs	r2, r3, #1
 800a01c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a020:	ee17 3a90 	vmov	r3, s15
 800a024:	4413      	add	r3, r2
 800a026:	461a      	mov	r2, r3
 800a028:	f7ff bae6 	b.w	80095f8 <_ZN23ResistanceGraphViewBaseC1Ev+0x98c>
 800a02c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a030:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a034:	ee17 3a10 	vmov	r3, s14
 800a038:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a03c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a040:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a044:	1e59      	subs	r1, r3, #1
 800a046:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a04a:	ee17 3a90 	vmov	r3, s15
 800a04e:	440b      	add	r3, r1
 800a050:	4619      	mov	r1, r3
 800a052:	f7ff baea 	b.w	800962a <_ZN23ResistanceGraphViewBaseC1Ev+0x9be>
 800a056:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a05a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a05e:	ee17 3a10 	vmov	r3, s14
 800a062:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a066:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a06a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a06e:	1e5a      	subs	r2, r3, #1
 800a070:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a074:	ee17 3a90 	vmov	r3, s15
 800a078:	4413      	add	r3, r2
 800a07a:	461a      	mov	r2, r3
 800a07c:	f7ff baeb 	b.w	8009656 <_ZN23ResistanceGraphViewBaseC1Ev+0x9ea>
 800a080:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a084:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a088:	ee17 3a10 	vmov	r3, s14
 800a08c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a090:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a094:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a098:	1e59      	subs	r1, r3, #1
 800a09a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a09e:	ee17 3a90 	vmov	r3, s15
 800a0a2:	440b      	add	r3, r1
 800a0a4:	4619      	mov	r1, r3
 800a0a6:	f7ff baef 	b.w	8009688 <_ZN23ResistanceGraphViewBaseC1Ev+0xa1c>
 800a0aa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a0ae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a0b2:	ee17 3a10 	vmov	r3, s14
 800a0b6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a0ba:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a0be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a0c2:	1e5a      	subs	r2, r3, #1
 800a0c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a0c8:	ee17 3a90 	vmov	r3, s15
 800a0cc:	4413      	add	r3, r2
 800a0ce:	461a      	mov	r2, r3
 800a0d0:	f7ff baf0 	b.w	80096b4 <_ZN23ResistanceGraphViewBaseC1Ev+0xa48>
 800a0d4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a0d8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a0dc:	ee17 3a10 	vmov	r3, s14
 800a0e0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a0e4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a0e8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a0ec:	1e59      	subs	r1, r3, #1
 800a0ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a0f2:	ee17 3a90 	vmov	r3, s15
 800a0f6:	440b      	add	r3, r1
 800a0f8:	4619      	mov	r1, r3
 800a0fa:	f7ff baf4 	b.w	80096e6 <_ZN23ResistanceGraphViewBaseC1Ev+0xa7a>
 800a0fe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a102:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a106:	ee17 3a10 	vmov	r3, s14
 800a10a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a10e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a112:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a116:	1e5a      	subs	r2, r3, #1
 800a118:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a11c:	ee17 3a90 	vmov	r3, s15
 800a120:	4413      	add	r3, r2
 800a122:	461a      	mov	r2, r3
 800a124:	f7ff baf5 	b.w	8009712 <_ZN23ResistanceGraphViewBaseC1Ev+0xaa6>
 800a128:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a12c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a130:	ee17 3a10 	vmov	r3, s14
 800a134:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a138:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a13c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a140:	1e59      	subs	r1, r3, #1
 800a142:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a146:	ee17 3a90 	vmov	r3, s15
 800a14a:	440b      	add	r3, r1
 800a14c:	4619      	mov	r1, r3
 800a14e:	f7ff baf9 	b.w	8009744 <_ZN23ResistanceGraphViewBaseC1Ev+0xad8>
 800a152:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a156:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a15a:	ee17 3a10 	vmov	r3, s14
 800a15e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a162:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a166:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a16a:	1e5a      	subs	r2, r3, #1
 800a16c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a170:	ee17 3a90 	vmov	r3, s15
 800a174:	4413      	add	r3, r2
 800a176:	461a      	mov	r2, r3
 800a178:	f7ff bafa 	b.w	8009770 <_ZN23ResistanceGraphViewBaseC1Ev+0xb04>
 800a17c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a180:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a184:	ee17 3a10 	vmov	r3, s14
 800a188:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a18c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a190:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a194:	1e59      	subs	r1, r3, #1
 800a196:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a19a:	ee17 3a90 	vmov	r3, s15
 800a19e:	440b      	add	r3, r1
 800a1a0:	4619      	mov	r1, r3
 800a1a2:	f7ff bafe 	b.w	80097a2 <_ZN23ResistanceGraphViewBaseC1Ev+0xb36>
 800a1a6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a1aa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a1ae:	ee17 3a10 	vmov	r3, s14
 800a1b2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a1b6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a1ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a1be:	1e5a      	subs	r2, r3, #1
 800a1c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a1c4:	ee17 3a90 	vmov	r3, s15
 800a1c8:	4413      	add	r3, r2
 800a1ca:	461a      	mov	r2, r3
 800a1cc:	f7ff baff 	b.w	80097ce <_ZN23ResistanceGraphViewBaseC1Ev+0xb62>
 800a1d0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a1d4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a1d8:	ee17 3a10 	vmov	r3, s14
 800a1dc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a1e0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a1e4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a1e8:	1e59      	subs	r1, r3, #1
 800a1ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a1ee:	ee17 3a90 	vmov	r3, s15
 800a1f2:	440b      	add	r3, r1
 800a1f4:	4619      	mov	r1, r3
 800a1f6:	f7ff bb03 	b.w	8009800 <_ZN23ResistanceGraphViewBaseC1Ev+0xb94>
 800a1fa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a1fe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a202:	ee17 3a10 	vmov	r3, s14
 800a206:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a20a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a20e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a212:	1e5a      	subs	r2, r3, #1
 800a214:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a218:	ee17 3a90 	vmov	r3, s15
 800a21c:	4413      	add	r3, r2
 800a21e:	461a      	mov	r2, r3
 800a220:	f7ff bb04 	b.w	800982c <_ZN23ResistanceGraphViewBaseC1Ev+0xbc0>
 800a224:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a228:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a22c:	ee17 3a10 	vmov	r3, s14
 800a230:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a234:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a238:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a23c:	1e59      	subs	r1, r3, #1
 800a23e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a242:	ee17 3a90 	vmov	r3, s15
 800a246:	440b      	add	r3, r1
 800a248:	4619      	mov	r1, r3
 800a24a:	f7ff bb08 	b.w	800985e <_ZN23ResistanceGraphViewBaseC1Ev+0xbf2>
 800a24e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a252:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a256:	ee17 3a10 	vmov	r3, s14
 800a25a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a25e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a262:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a266:	1e5a      	subs	r2, r3, #1
 800a268:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a26c:	ee17 3a90 	vmov	r3, s15
 800a270:	4413      	add	r3, r2
 800a272:	461a      	mov	r2, r3
 800a274:	f7ff bb24 	b.w	80098c0 <_ZN23ResistanceGraphViewBaseC1Ev+0xc54>
 800a278:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a27c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a280:	ee17 3a10 	vmov	r3, s14
 800a284:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a288:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a28c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a290:	1e59      	subs	r1, r3, #1
 800a292:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a296:	ee17 3a90 	vmov	r3, s15
 800a29a:	440b      	add	r3, r1
 800a29c:	4619      	mov	r1, r3
 800a29e:	f7ff bb28 	b.w	80098f2 <_ZN23ResistanceGraphViewBaseC1Ev+0xc86>
 800a2a2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a2a6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a2aa:	ee17 3a10 	vmov	r3, s14
 800a2ae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a2b2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a2b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a2ba:	1e5a      	subs	r2, r3, #1
 800a2bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a2c0:	ee17 3a90 	vmov	r3, s15
 800a2c4:	4413      	add	r3, r2
 800a2c6:	461a      	mov	r2, r3
 800a2c8:	f7ff bb29 	b.w	800991e <_ZN23ResistanceGraphViewBaseC1Ev+0xcb2>
 800a2cc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a2d0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a2d4:	ee17 3a10 	vmov	r3, s14
 800a2d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a2dc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a2e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a2e4:	1e59      	subs	r1, r3, #1
 800a2e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a2ea:	ee17 3a90 	vmov	r3, s15
 800a2ee:	440b      	add	r3, r1
 800a2f0:	4619      	mov	r1, r3
 800a2f2:	f7ff bb2d 	b.w	8009950 <_ZN23ResistanceGraphViewBaseC1Ev+0xce4>
 800a2f6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800a2fa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a2fe:	ee17 3a10 	vmov	r3, s14
 800a302:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a306:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800a30a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a30e:	1e5a      	subs	r2, r3, #1
 800a310:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a314:	ee17 3a90 	vmov	r3, s15
 800a318:	4413      	add	r3, r2
 800a31a:	461a      	mov	r2, r3
 800a31c:	f7ff bb2e 	b.w	800997c <_ZN23ResistanceGraphViewBaseC1Ev+0xd10>

0800a320 <_ZN24StartMeasurementViewBaseD1Ev>:

class StartMeasurementViewBase : public touchgfx::View<StartMeasurementPresenter>
{
public:
    StartMeasurementViewBase();
    virtual ~StartMeasurementViewBase() {}
 800a320:	4770      	bx	lr

0800a322 <_ZN24StartMeasurementViewBase16StartMeasurementEv>:
     * Virtual Action Handlers
     */
    virtual void StartMeasurement()
    {
        // Override and implement this function in StartMeasurement
    }
 800a322:	4770      	bx	lr

0800a324 <_ZN24StartMeasurementViewBase11setupScreenEv>:
}

void StartMeasurementViewBase::setupScreen()
{

}
 800a324:	4770      	bx	lr

0800a326 <_ZN8touchgfx8CallbackI24StartMeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a326:	4770      	bx	lr

0800a328 <_ZN8touchgfx8CallbackI24StartMeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800a328:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800a32a:	68c2      	ldr	r2, [r0, #12]
 800a32c:	6844      	ldr	r4, [r0, #4]
 800a32e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800a330:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800a332:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a336:	07d2      	lsls	r2, r2, #31
 800a338:	bf48      	it	mi
 800a33a:	5962      	ldrmi	r2, [r4, r5]
 800a33c:	689b      	ldr	r3, [r3, #8]
    }
 800a33e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800a340:	bf48      	it	mi
 800a342:	58d3      	ldrmi	r3, [r2, r3]
 800a344:	4718      	bx	r3

0800a346 <_ZNK8touchgfx8CallbackI24StartMeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800a346:	6843      	ldr	r3, [r0, #4]
 800a348:	b12b      	cbz	r3, 800a356 <_ZNK8touchgfx8CallbackI24StartMeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800a34a:	6883      	ldr	r3, [r0, #8]
 800a34c:	b92b      	cbnz	r3, 800a35a <_ZNK8touchgfx8CallbackI24StartMeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800a34e:	68c0      	ldr	r0, [r0, #12]
 800a350:	f000 0001 	and.w	r0, r0, #1
 800a354:	4770      	bx	lr
 800a356:	4618      	mov	r0, r3
 800a358:	4770      	bx	lr
 800a35a:	2001      	movs	r0, #1
    }
 800a35c:	4770      	bx	lr

0800a35e <_ZN8touchgfx8CallbackI24StartMeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a35e:	b510      	push	{r4, lr}
 800a360:	2110      	movs	r1, #16
 800a362:	4604      	mov	r4, r0
 800a364:	f020 fef9 	bl	802b15a <_ZdlPvj>
 800a368:	4620      	mov	r0, r4
 800a36a:	bd10      	pop	{r4, pc}

0800a36c <_ZN24StartMeasurementViewBaseD0Ev>:
    virtual ~StartMeasurementViewBase() {}
 800a36c:	b510      	push	{r4, lr}
 800a36e:	f44f 7194 	mov.w	r1, #296	; 0x128
 800a372:	4604      	mov	r4, r0
 800a374:	f020 fef1 	bl	802b15a <_ZdlPvj>
 800a378:	4620      	mov	r0, r4
 800a37a:	bd10      	pop	{r4, pc}

0800a37c <_ZN24StartMeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void StartMeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
 800a37c:	f100 0298 	add.w	r2, r0, #152	; 0x98
 800a380:	428a      	cmp	r2, r1
{
 800a382:	b508      	push	{r3, lr}
    if (&src == &toggleButton1)
 800a384:	d108      	bne.n	800a398 <_ZN24StartMeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1c>
    {
        //Interaction1
        //When toggleButton1 clicked call virtual function
        //Call StartMeasurement
        StartMeasurement();
 800a386:	6803      	ldr	r3, [r0, #0]
 800a388:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a38a:	4798      	blx	r3

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800a38c:	f00e fffc 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When Interaction1 completed change screen to ProgressBar
        //Go to ProgressBar with screen transition towards North
        application().gotoProgressBarScreenSlideTransitionNorth();
    }
}
 800a390:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoProgressBarScreenSlideTransitionNorth();
 800a394:	f7fa bbe0 	b.w	8004b58 <_ZN23FrontendApplicationBase41gotoProgressBarScreenSlideTransitionNorthEv>
}
 800a398:	bd08      	pop	{r3, pc}
	...

0800a39c <_ZN24StartMeasurementViewBaseC1Ev>:
StartMeasurementViewBase::StartMeasurementViewBase() :
 800a39c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a3a0:	4604      	mov	r4, r0
 800a3a2:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &StartMeasurementViewBase::buttonCallbackHandler)
 800a3a4:	4626      	mov	r6, r4
 800a3a6:	2500      	movs	r5, #0
 800a3a8:	f010 fb5e 	bl	801aa68 <_ZN8touchgfx6ScreenC1Ev>
 800a3ac:	4b69      	ldr	r3, [pc, #420]	; (800a554 <_ZN24StartMeasurementViewBaseC1Ev+0x1b8>)
 800a3ae:	63e5      	str	r5, [r4, #60]	; 0x3c
 800a3b0:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800a3b4:	4629      	mov	r1, r5
 800a3b6:	2226      	movs	r2, #38	; 0x26
 800a3b8:	4630      	mov	r0, r6
 800a3ba:	f021 ffa1 	bl	802c300 <memset>
 800a3be:	4630      	mov	r0, r6
 800a3c0:	f7f9 fbc8 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 800a3c4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800a3c8:	4b63      	ldr	r3, [pc, #396]	; (800a558 <_ZN24StartMeasurementViewBaseC1Ev+0x1bc>)
 800a3ca:	6423      	str	r3, [r4, #64]	; 0x40
 800a3cc:	27ff      	movs	r7, #255	; 0xff
 800a3ce:	f64f 79ff 	movw	r9, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800a3d2:	2226      	movs	r2, #38	; 0x26
 800a3d4:	4629      	mov	r1, r5
 800a3d6:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 800a3da:	66a5      	str	r5, [r4, #104]	; 0x68
 800a3dc:	4640      	mov	r0, r8
 800a3de:	f8ad 9020 	strh.w	r9, [sp, #32]
 800a3e2:	f021 ff8d 	bl	802c300 <memset>
 800a3e6:	4640      	mov	r0, r8
 800a3e8:	f7f9 fbb4 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 800a3ec:	4b5b      	ldr	r3, [pc, #364]	; (800a55c <_ZN24StartMeasurementViewBaseC1Ev+0x1c0>)
 800a3ee:	66e3      	str	r3, [r4, #108]	; 0x6c
 800a3f0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800a3f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800a3f8:	f104 0a98 	add.w	sl, r4, #152	; 0x98
 800a3fc:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800a400:	a908      	add	r1, sp, #32
 800a402:	4640      	mov	r0, r8
 800a404:	f00d f905 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), action(), pressed(false)
 800a408:	4629      	mov	r1, r5
 800a40a:	2226      	movs	r2, #38	; 0x26
 800a40c:	4650      	mov	r0, sl
 800a40e:	f021 ff77 	bl	802c300 <memset>
 800a412:	4650      	mov	r0, sl
 800a414:	f7f9 fb9e 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 800a418:	2301      	movs	r3, #1
 800a41a:	f104 07d0 	add.w	r7, r4, #208	; 0xd0
 800a41e:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 800a422:	4b4f      	ldr	r3, [pc, #316]	; (800a560 <_ZN24StartMeasurementViewBaseC1Ev+0x1c4>)
 800a424:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800a428:	4629      	mov	r1, r5
 800a42a:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 800a42e:	f884 50c4 	strb.w	r5, [r4, #196]	; 0xc4
 800a432:	f8a4 90c6 	strh.w	r9, [r4, #198]	; 0xc6
 800a436:	f8a4 90c8 	strh.w	r9, [r4, #200]	; 0xc8
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 800a43a:	f884 90ca 	strb.w	r9, [r4, #202]	; 0xca
 800a43e:	f8a4 90cc 	strh.w	r9, [r4, #204]	; 0xcc
 800a442:	2226      	movs	r2, #38	; 0x26
 800a444:	4638      	mov	r0, r7
 800a446:	f021 ff5b 	bl	802c300 <memset>
 800a44a:	4638      	mov	r0, r7
 800a44c:	f7f9 fb82 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 800a450:	4b44      	ldr	r3, [pc, #272]	; (800a564 <_ZN24StartMeasurementViewBaseC1Ev+0x1c8>)
 800a452:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
 800a456:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 800a45a:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
        : x(x), y(y), width(width), height(height)
 800a45e:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 800a462:	e9c4 3544 	strd	r3, r5, [r4, #272]	; 0x110
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800a466:	4b40      	ldr	r3, [pc, #256]	; (800a568 <_ZN24StartMeasurementViewBaseC1Ev+0x1cc>)
 800a468:	f8df b104 	ldr.w	fp, [pc, #260]	; 800a570 <_ZN24StartMeasurementViewBaseC1Ev+0x1d4>
 800a46c:	f8a4 90fc 	strh.w	r9, [r4, #252]	; 0xfc
 800a470:	e9c4 3446 	strd	r3, r4, [r4, #280]	; 0x118
 800a474:	4b3d      	ldr	r3, [pc, #244]	; (800a56c <_ZN24StartMeasurementViewBaseC1Ev+0x1d0>)
        : color(col)
 800a476:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 800a47a:	e9c4 3548 	strd	r3, r5, [r4, #288]	; 0x120
        setXY(x, y);
 800a47e:	462a      	mov	r2, r5
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800a480:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
        : x(x), y(y), width(width), height(height)
 800a484:	f8c4 510c 	str.w	r5, [r4, #268]	; 0x10c
 800a488:	4629      	mov	r1, r5
 800a48a:	4630      	mov	r0, r6
 800a48c:	f8c4 b0f8 	str.w	fp, [r4, #248]	; 0xf8
 800a490:	f7f9 f9ea 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800a494:	4630      	mov	r0, r6
 800a496:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800a49a:	f7f9 f965 	bl	8003768 <_ZN8touchgfx8Drawable8setWidthEs>
        this->color = color;
 800a49e:	f04f 497f 	mov.w	r9, #4278190080	; 0xff000000
        setHeight(height);
 800a4a2:	4630      	mov	r0, r6
 800a4a4:	21f0      	movs	r1, #240	; 0xf0
 800a4a6:	f7f9 f961 	bl	800376c <_ZN8touchgfx8Drawable9setHeightEs>
    image1.setXY(0, 0);
 800a4aa:	462a      	mov	r2, r5
 800a4ac:	4629      	mov	r1, r5
 800a4ae:	4640      	mov	r0, r8
 800a4b0:	f8c4 9068 	str.w	r9, [r4, #104]	; 0x68
 800a4b4:	f7f9 f9d8 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 800a4b8:	a908      	add	r1, sp, #32
 800a4ba:	4640      	mov	r0, r8
 800a4bc:	f8ad 5020 	strh.w	r5, [sp, #32]
 800a4c0:	f00d f8a7 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    toggleButton1.setXY(96, 82);
 800a4c4:	4650      	mov	r0, sl
 800a4c6:	2252      	movs	r2, #82	; 0x52
 800a4c8:	2160      	movs	r1, #96	; 0x60
 800a4ca:	f7f9 f9cd 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 800a4ce:	2310      	movs	r3, #16
 800a4d0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a4d4:	2311      	movs	r3, #17
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
 800a4d6:	f8a4 30cc 	strh.w	r3, [r4, #204]	; 0xcc
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800a4da:	aa08      	add	r2, sp, #32
 800a4dc:	a907      	add	r1, sp, #28
 800a4de:	4650      	mov	r0, sl
 800a4e0:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a4e4:	f00c fd6c 	bl	8016fc0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.setAction(buttonCallback);
 800a4e8:	f504 738c 	add.w	r3, r4, #280	; 0x118
        action = &callback;
 800a4ec:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    textArea1.setXY(58, 134);
 800a4f0:	2286      	movs	r2, #134	; 0x86
 800a4f2:	4638      	mov	r0, r7
 800a4f4:	213a      	movs	r1, #58	; 0x3a
 800a4f6:	f7f9 f9b7 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 800a4fa:	f8a4 5104 	strh.w	r5, [r4, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 800a4fe:	ad02      	add	r5, sp, #8
 800a500:	4639      	mov	r1, r7
 800a502:	4628      	mov	r0, r5
        this->color = color;
 800a504:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
        boundingArea = calculateBoundingArea();
 800a508:	f00c f9ba 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a50c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a510:	f504 7386 	add.w	r3, r4, #268	; 0x10c
 800a514:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a518:	2313      	movs	r3, #19
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9NT));
 800a51a:	a908      	add	r1, sp, #32
 800a51c:	4638      	mov	r0, r7
 800a51e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a522:	f8cd b020 	str.w	fp, [sp, #32]
 800a526:	f00c fcf1 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a52a:	1d20      	adds	r0, r4, #4
 800a52c:	4631      	mov	r1, r6
 800a52e:	9001      	str	r0, [sp, #4]
 800a530:	f007 fcac 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a534:	9801      	ldr	r0, [sp, #4]
 800a536:	4641      	mov	r1, r8
 800a538:	f007 fca8 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a53c:	9801      	ldr	r0, [sp, #4]
 800a53e:	4651      	mov	r1, sl
 800a540:	f007 fca4 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a544:	9801      	ldr	r0, [sp, #4]
 800a546:	4639      	mov	r1, r7
 800a548:	f007 fca0 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a54c:	4620      	mov	r0, r4
 800a54e:	b00b      	add	sp, #44	; 0x2c
 800a550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a554:	08031640 	.word	0x08031640
 800a558:	08034854 	.word	0x08034854
 800a55c:	08034a34 	.word	0x08034a34
 800a560:	080346b0 	.word	0x080346b0
 800a564:	08034794 	.word	0x08034794
 800a568:	08031628 	.word	0x08031628
 800a56c:	0800a37d 	.word	0x0800a37d
 800a570:	0802f874 	.word	0x0802f874

0800a574 <_ZN17StartPageViewBaseD1Ev>:

class StartPageViewBase : public touchgfx::View<StartPagePresenter>
{
public:
    StartPageViewBase();
    virtual ~StartPageViewBase() {}
 800a574:	4770      	bx	lr

0800a576 <_ZN17StartPageViewBase11setupScreenEv>:
}

void StartPageViewBase::setupScreen()
{

}
 800a576:	4770      	bx	lr

0800a578 <_ZN8touchgfx8CallbackI17StartPageViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a578:	4770      	bx	lr

0800a57a <_ZN8touchgfx8CallbackI17StartPageViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800a57a:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800a57c:	68c2      	ldr	r2, [r0, #12]
 800a57e:	6844      	ldr	r4, [r0, #4]
 800a580:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800a582:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800a584:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800a588:	07d2      	lsls	r2, r2, #31
 800a58a:	bf48      	it	mi
 800a58c:	5962      	ldrmi	r2, [r4, r5]
 800a58e:	689b      	ldr	r3, [r3, #8]
    }
 800a590:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800a592:	bf48      	it	mi
 800a594:	58d3      	ldrmi	r3, [r2, r3]
 800a596:	4718      	bx	r3

0800a598 <_ZNK8touchgfx8CallbackI17StartPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800a598:	6843      	ldr	r3, [r0, #4]
 800a59a:	b12b      	cbz	r3, 800a5a8 <_ZNK8touchgfx8CallbackI17StartPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800a59c:	6883      	ldr	r3, [r0, #8]
 800a59e:	b92b      	cbnz	r3, 800a5ac <_ZNK8touchgfx8CallbackI17StartPageViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800a5a0:	68c0      	ldr	r0, [r0, #12]
 800a5a2:	f000 0001 	and.w	r0, r0, #1
 800a5a6:	4770      	bx	lr
 800a5a8:	4618      	mov	r0, r3
 800a5aa:	4770      	bx	lr
 800a5ac:	2001      	movs	r0, #1
    }
 800a5ae:	4770      	bx	lr

0800a5b0 <_ZN8touchgfx8CallbackI17StartPageViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a5b0:	b510      	push	{r4, lr}
 800a5b2:	2110      	movs	r1, #16
 800a5b4:	4604      	mov	r4, r0
 800a5b6:	f020 fdd0 	bl	802b15a <_ZdlPvj>
 800a5ba:	4620      	mov	r0, r4
 800a5bc:	bd10      	pop	{r4, pc}

0800a5be <_ZN17StartPageViewBaseD0Ev>:
 800a5be:	b510      	push	{r4, lr}
 800a5c0:	f44f 71ba 	mov.w	r1, #372	; 0x174
 800a5c4:	4604      	mov	r4, r0
 800a5c6:	f020 fdc8 	bl	802b15a <_ZdlPvj>
 800a5ca:	4620      	mov	r0, r4
 800a5cc:	bd10      	pop	{r4, pc}

0800a5ce <_ZN17StartPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void StartPageViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &HomeButton)
 800a5ce:	f500 7094 	add.w	r0, r0, #296	; 0x128
 800a5d2:	4288      	cmp	r0, r1
{
 800a5d4:	b508      	push	{r3, lr}
    if (&src == &HomeButton)
 800a5d6:	d105      	bne.n	800a5e4 <_ZN17StartPageViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800a5d8:	f00e fed6 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When HomeButton clicked change screen to InstructionPage1
        //Go to InstructionPage1 with screen transition towards North
        application().gotoInstructionPage1ScreenSlideTransitionNorth();
    }
}
 800a5dc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoInstructionPage1ScreenSlideTransitionNorth();
 800a5e0:	f7fa ba5a 	b.w	8004a98 <_ZN23FrontendApplicationBase46gotoInstructionPage1ScreenSlideTransitionNorthEv>
}
 800a5e4:	bd08      	pop	{r3, pc}
	...

0800a5e8 <_ZN17StartPageViewBaseC1Ev>:
StartPageViewBase::StartPageViewBase() :
 800a5e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a5ec:	4604      	mov	r4, r0
 800a5ee:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &StartPageViewBase::buttonCallbackHandler)
 800a5f0:	4626      	mov	r6, r4
 800a5f2:	2500      	movs	r5, #0
 800a5f4:	f010 fa38 	bl	801aa68 <_ZN8touchgfx6ScreenC1Ev>
 800a5f8:	4b68      	ldr	r3, [pc, #416]	; (800a79c <_ZN17StartPageViewBaseC1Ev+0x1b4>)
 800a5fa:	63e5      	str	r5, [r4, #60]	; 0x3c
 800a5fc:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800a600:	4629      	mov	r1, r5
 800a602:	2226      	movs	r2, #38	; 0x26
 800a604:	4630      	mov	r0, r6
 800a606:	f021 fe7b 	bl	802c300 <memset>
 800a60a:	4630      	mov	r0, r6
 800a60c:	f7f9 faa2 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 800a610:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800a614:	27ff      	movs	r7, #255	; 0xff
 800a616:	4b62      	ldr	r3, [pc, #392]	; (800a7a0 <_ZN17StartPageViewBaseC1Ev+0x1b8>)
 800a618:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800a61a:	2226      	movs	r2, #38	; 0x26
 800a61c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a620:	4629      	mov	r1, r5
 800a622:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
        : color(col)
 800a626:	66a5      	str	r5, [r4, #104]	; 0x68
 800a628:	4640      	mov	r0, r8
 800a62a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800a62e:	f021 fe67 	bl	802c300 <memset>
 800a632:	4640      	mov	r0, r8
 800a634:	f7f9 fa8e 	bl	8003b54 <_ZN8touchgfx6WidgetC1Ev>
 800a638:	4b5a      	ldr	r3, [pc, #360]	; (800a7a4 <_ZN17StartPageViewBaseC1Ev+0x1bc>)
 800a63a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800a63c:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
 800a640:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800a644:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800a648:	af0c      	add	r7, sp, #48	; 0x30
 800a64a:	4639      	mov	r1, r7
 800a64c:	f104 0a98 	add.w	sl, r4, #152	; 0x98
 800a650:	4640      	mov	r0, r8
 800a652:	f00c ffde 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a656:	f104 09e0 	add.w	r9, r4, #224	; 0xe0
 800a65a:	4650      	mov	r0, sl
 800a65c:	f7fc f804 	bl	8006668 <_ZN8touchgfx8TextAreaC1Ev>
 800a660:	f504 7b94 	add.w	fp, r4, #296	; 0x128
 800a664:	4648      	mov	r0, r9
 800a666:	f7fb ffff 	bl	8006668 <_ZN8touchgfx8TextAreaC1Ev>
 800a66a:	4658      	mov	r0, fp
 800a66c:	f00c ffaa 	bl	80175c4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800a670:	4a4d      	ldr	r2, [pc, #308]	; (800a7a8 <_ZN17StartPageViewBaseC1Ev+0x1c0>)
 800a672:	e9c4 2459 	strd	r2, r4, [r4, #356]	; 0x164
 800a676:	4a4d      	ldr	r2, [pc, #308]	; (800a7ac <_ZN17StartPageViewBaseC1Ev+0x1c4>)
        setXY(x, y);
 800a678:	4629      	mov	r1, r5
 800a67a:	e9c4 255b 	strd	r2, r5, [r4, #364]	; 0x16c
 800a67e:	4630      	mov	r0, r6
 800a680:	462a      	mov	r2, r5
 800a682:	f7f9 f8f1 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800a686:	4630      	mov	r0, r6
 800a688:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800a68c:	f7f9 f86c 	bl	8003768 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800a690:	4630      	mov	r0, r6
 800a692:	21f0      	movs	r1, #240	; 0xf0
 800a694:	f7f9 f86a 	bl	800376c <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 800a698:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 800a69c:	66a2      	str	r2, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 800a69e:	4629      	mov	r1, r5
 800a6a0:	462a      	mov	r2, r5
 800a6a2:	4640      	mov	r0, r8
 800a6a4:	f7f9 f8e0 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_320X240PX_ID));
 800a6a8:	4639      	mov	r1, r7
 800a6aa:	4640      	mov	r0, r8
 800a6ac:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 800a6b0:	f00c ffaf 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textArea1.setXY(14, 59);
 800a6b4:	4650      	mov	r0, sl
 800a6b6:	223b      	movs	r2, #59	; 0x3b
 800a6b8:	210e      	movs	r1, #14
 800a6ba:	f7f9 f8d5 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 800a6be:	4a3c      	ldr	r2, [pc, #240]	; (800a7b0 <_ZN17StartPageViewBaseC1Ev+0x1c8>)
 800a6c0:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
        linespace = space;
 800a6c4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800a6c8:	4651      	mov	r1, sl
 800a6ca:	a804      	add	r0, sp, #16
 800a6cc:	f00c f8d8 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a6d0:	ab04      	add	r3, sp, #16
 800a6d2:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800a6d6:	f104 0cd4 	add.w	ip, r4, #212	; 0xd4
 800a6da:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 800a6de:	4b35      	ldr	r3, [pc, #212]	; (800a7b4 <_ZN17StartPageViewBaseC1Ev+0x1cc>)
 800a6e0:	930c      	str	r3, [sp, #48]	; 0x30
 800a6e2:	221a      	movs	r2, #26
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DZRR));
 800a6e4:	4639      	mov	r1, r7
 800a6e6:	4650      	mov	r0, sl
 800a6e8:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800a6ec:	f00c fc0e 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2.setXY(71, 108);
 800a6f0:	4648      	mov	r0, r9
 800a6f2:	226c      	movs	r2, #108	; 0x6c
 800a6f4:	2147      	movs	r1, #71	; 0x47
 800a6f6:	f7f9 f8b7 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 800a6fa:	4a2f      	ldr	r2, [pc, #188]	; (800a7b8 <_ZN17StartPageViewBaseC1Ev+0x1d0>)
 800a6fc:	f8c4 2110 	str.w	r2, [r4, #272]	; 0x110
        linespace = space;
 800a700:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800a704:	4649      	mov	r1, r9
 800a706:	a804      	add	r0, sp, #16
 800a708:	f00c f8ba 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a70c:	ab04      	add	r3, sp, #16
 800a70e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800a712:	f504 758e 	add.w	r5, r4, #284	; 0x11c
 800a716:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800a71a:	4b26      	ldr	r3, [pc, #152]	; (800a7b4 <_ZN17StartPageViewBaseC1Ev+0x1cc>)
 800a71c:	930c      	str	r3, [sp, #48]	; 0x30
 800a71e:	2219      	movs	r2, #25
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IDTO));
 800a720:	4639      	mov	r1, r7
 800a722:	4648      	mov	r0, r9
 800a724:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800a728:	f00c fbf0 	bl	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    HomeButton.setXY(130, 165);
 800a72c:	4658      	mov	r0, fp
 800a72e:	22a5      	movs	r2, #165	; 0xa5
 800a730:	2182      	movs	r1, #130	; 0x82
 800a732:	f7f9 f899 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 800a736:	2203      	movs	r2, #3
 800a738:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800a73c:	2204      	movs	r2, #4
 800a73e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800a742:	2209      	movs	r2, #9
 800a744:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800a748:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
    HomeButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID));
 800a74c:	ab0b      	add	r3, sp, #44	; 0x2c
 800a74e:	aa0a      	add	r2, sp, #40	; 0x28
 800a750:	a909      	add	r1, sp, #36	; 0x24
 800a752:	4658      	mov	r0, fp
 800a754:	9700      	str	r7, [sp, #0]
 800a756:	f00c fe92 	bl	801747e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800a75a:	4b18      	ldr	r3, [pc, #96]	; (800a7bc <_ZN17StartPageViewBaseC1Ev+0x1d4>)
 800a75c:	f8c4 3160 	str.w	r3, [r4, #352]	; 0x160
    HomeButton.setAction(buttonCallback);
 800a760:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 800a764:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 800a768:	1d20      	adds	r0, r4, #4
 800a76a:	4631      	mov	r1, r6
 800a76c:	9003      	str	r0, [sp, #12]
 800a76e:	f007 fb8d 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a772:	9803      	ldr	r0, [sp, #12]
 800a774:	4641      	mov	r1, r8
 800a776:	f007 fb89 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a77a:	9803      	ldr	r0, [sp, #12]
 800a77c:	4651      	mov	r1, sl
 800a77e:	f007 fb85 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a782:	9803      	ldr	r0, [sp, #12]
 800a784:	4649      	mov	r1, r9
 800a786:	f007 fb81 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a78a:	9803      	ldr	r0, [sp, #12]
 800a78c:	4659      	mov	r1, fp
 800a78e:	f007 fb7d 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a792:	4620      	mov	r0, r4
 800a794:	b00f      	add	sp, #60	; 0x3c
 800a796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a79a:	bf00      	nop
 800a79c:	08031690 	.word	0x08031690
 800a7a0:	08034854 	.word	0x08034854
 800a7a4:	08034a34 	.word	0x08034a34
 800a7a8:	08031678 	.word	0x08031678
 800a7ac:	0800a5cf 	.word	0x0800a5cf
 800a7b0:	ff0482af 	.word	0xff0482af
 800a7b4:	0802f874 	.word	0x0802f874
 800a7b8:	ff005a78 	.word	0xff005a78
 800a7bc:	0010000f 	.word	0x0010000f

0800a7c0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_VLADIMIR_TTF_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_VLADIMIR_TTF_40_4bpp();

touchgfx::GeneratedFont& getFont_VLADIMIR_TTF_40_4bpp()
{
    static touchgfx::GeneratedFont VLADIMIR_TTF_40_4bpp(glyphs_VLADIMIR_TTF_40_4bpp, 12, 40, 12, 4, 1, 8, 12, unicodes_VLADIMIR_TTF_40_4bpp, kerning_VLADIMIR_TTF_40_4bpp, 63, 0, 0, 0);
 800a7c0:	4770      	bx	lr
	...

0800a7c4 <_Z28getFont_VLADIMIR_TTF_40_4bppv>:
{
 800a7c4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont VLADIMIR_TTF_40_4bpp(glyphs_VLADIMIR_TTF_40_4bpp, 12, 40, 12, 4, 1, 8, 12, unicodes_VLADIMIR_TTF_40_4bpp, kerning_VLADIMIR_TTF_40_4bpp, 63, 0, 0, 0);
 800a7c6:	4d16      	ldr	r5, [pc, #88]	; (800a820 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x5c>)
 800a7c8:	782c      	ldrb	r4, [r5, #0]
 800a7ca:	f3bf 8f5b 	dmb	ish
 800a7ce:	f014 0401 	ands.w	r4, r4, #1
{
 800a7d2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont VLADIMIR_TTF_40_4bpp(glyphs_VLADIMIR_TTF_40_4bpp, 12, 40, 12, 4, 1, 8, 12, unicodes_VLADIMIR_TTF_40_4bpp, kerning_VLADIMIR_TTF_40_4bpp, 63, 0, 0, 0);
 800a7d4:	d120      	bne.n	800a818 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x54>
 800a7d6:	4628      	mov	r0, r5
 800a7d8:	f020 fcc1 	bl	802b15e <__cxa_guard_acquire>
 800a7dc:	b1e0      	cbz	r0, 800a818 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x54>
 800a7de:	233f      	movs	r3, #63	; 0x3f
 800a7e0:	9307      	str	r3, [sp, #28]
 800a7e2:	4b10      	ldr	r3, [pc, #64]	; (800a824 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x60>)
 800a7e4:	9306      	str	r3, [sp, #24]
 800a7e6:	4b10      	ldr	r3, [pc, #64]	; (800a828 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x64>)
 800a7e8:	9305      	str	r3, [sp, #20]
 800a7ea:	220c      	movs	r2, #12
 800a7ec:	2308      	movs	r3, #8
 800a7ee:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a7f2:	2101      	movs	r1, #1
 800a7f4:	2304      	movs	r3, #4
 800a7f6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a7fa:	9200      	str	r2, [sp, #0]
 800a7fc:	490b      	ldr	r1, [pc, #44]	; (800a82c <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x68>)
 800a7fe:	480c      	ldr	r0, [pc, #48]	; (800a830 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x6c>)
 800a800:	9408      	str	r4, [sp, #32]
 800a802:	2328      	movs	r3, #40	; 0x28
 800a804:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800a808:	f7fb fc14 	bl	8006034 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a80c:	4809      	ldr	r0, [pc, #36]	; (800a834 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x70>)
 800a80e:	f021 fc0f 	bl	802c030 <atexit>
 800a812:	4628      	mov	r0, r5
 800a814:	f020 fcaf 	bl	802b176 <__cxa_guard_release>
    return VLADIMIR_TTF_40_4bpp;
}
 800a818:	4805      	ldr	r0, [pc, #20]	; (800a830 <_Z28getFont_VLADIMIR_TTF_40_4bppv+0x6c>)
 800a81a:	b00d      	add	sp, #52	; 0x34
 800a81c:	bd30      	pop	{r4, r5, pc}
 800a81e:	bf00      	nop
 800a820:	2000d208 	.word	0x2000d208
 800a824:	0804c6d8 	.word	0x0804c6d8
 800a828:	0804c734 	.word	0x0804c734
 800a82c:	0804be54 	.word	0x0804be54
 800a830:	2000d20c 	.word	0x2000d20c
 800a834:	0800a7c1 	.word	0x0800a7c1

0800a838 <__tcf_0>:

touchgfx::GeneratedFont& getFont_arialbd_14_4bpp();

touchgfx::GeneratedFont& getFont_arialbd_14_4bpp()
{
    static touchgfx::GeneratedFont arialbd_14_4bpp(glyphs_arialbd_14_4bpp, 32, 14, 3, 4, 1, 0, 1, unicodes_arialbd_14_4bpp, kerning_arialbd_14_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a838:	4770      	bx	lr
	...

0800a83c <_Z23getFont_arialbd_14_4bppv>:
{
 800a83c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbd_14_4bpp(glyphs_arialbd_14_4bpp, 32, 14, 3, 4, 1, 0, 1, unicodes_arialbd_14_4bpp, kerning_arialbd_14_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a83e:	4d16      	ldr	r5, [pc, #88]	; (800a898 <_Z23getFont_arialbd_14_4bppv+0x5c>)
 800a840:	782c      	ldrb	r4, [r5, #0]
 800a842:	f3bf 8f5b 	dmb	ish
 800a846:	f014 0401 	ands.w	r4, r4, #1
{
 800a84a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont arialbd_14_4bpp(glyphs_arialbd_14_4bpp, 32, 14, 3, 4, 1, 0, 1, unicodes_arialbd_14_4bpp, kerning_arialbd_14_4bpp, 63, 0, 0, &arialbd_contextualFormsTable);
 800a84c:	d121      	bne.n	800a892 <_Z23getFont_arialbd_14_4bppv+0x56>
 800a84e:	4628      	mov	r0, r5
 800a850:	f020 fc85 	bl	802b15e <__cxa_guard_acquire>
 800a854:	b1e8      	cbz	r0, 800a892 <_Z23getFont_arialbd_14_4bppv+0x56>
 800a856:	4b11      	ldr	r3, [pc, #68]	; (800a89c <_Z23getFont_arialbd_14_4bppv+0x60>)
 800a858:	4911      	ldr	r1, [pc, #68]	; (800a8a0 <_Z23getFont_arialbd_14_4bppv+0x64>)
 800a85a:	4812      	ldr	r0, [pc, #72]	; (800a8a4 <_Z23getFont_arialbd_14_4bppv+0x68>)
 800a85c:	9408      	str	r4, [sp, #32]
 800a85e:	e9cd 4309 	strd	r4, r3, [sp, #36]	; 0x24
 800a862:	233f      	movs	r3, #63	; 0x3f
 800a864:	9307      	str	r3, [sp, #28]
 800a866:	4b10      	ldr	r3, [pc, #64]	; (800a8a8 <_Z23getFont_arialbd_14_4bppv+0x6c>)
 800a868:	9306      	str	r3, [sp, #24]
 800a86a:	4b10      	ldr	r3, [pc, #64]	; (800a8ac <_Z23getFont_arialbd_14_4bppv+0x70>)
 800a86c:	9305      	str	r3, [sp, #20]
 800a86e:	2301      	movs	r3, #1
 800a870:	e9cd 4303 	strd	r4, r3, [sp, #12]
 800a874:	9302      	str	r3, [sp, #8]
 800a876:	2204      	movs	r2, #4
 800a878:	2303      	movs	r3, #3
 800a87a:	e9cd 3200 	strd	r3, r2, [sp]
 800a87e:	230e      	movs	r3, #14
 800a880:	2220      	movs	r2, #32
 800a882:	f7fb fbd7 	bl	8006034 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a886:	480a      	ldr	r0, [pc, #40]	; (800a8b0 <_Z23getFont_arialbd_14_4bppv+0x74>)
 800a888:	f021 fbd2 	bl	802c030 <atexit>
 800a88c:	4628      	mov	r0, r5
 800a88e:	f020 fc72 	bl	802b176 <__cxa_guard_release>
    return arialbd_14_4bpp;
}
 800a892:	4804      	ldr	r0, [pc, #16]	; (800a8a4 <_Z23getFont_arialbd_14_4bppv+0x68>)
 800a894:	b00d      	add	sp, #52	; 0x34
 800a896:	bd30      	pop	{r4, r5, pc}
 800a898:	2000d234 	.word	0x2000d234
 800a89c:	08031af4 	.word	0x08031af4
 800a8a0:	0804befc 	.word	0x0804befc
 800a8a4:	2000d238 	.word	0x2000d238
 800a8a8:	0804c6dc 	.word	0x0804c6dc
 800a8ac:	0804c738 	.word	0x0804c738
 800a8b0:	0800a839 	.word	0x0800a839

0800a8b4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_arialbi_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_arialbi_10_4bpp();

touchgfx::GeneratedFont& getFont_arialbi_10_4bpp()
{
    static touchgfx::GeneratedFont arialbi_10_4bpp(glyphs_arialbi_10_4bpp, 23, 10, 2, 4, 1, 1, 1, unicodes_arialbi_10_4bpp, kerning_arialbi_10_4bpp, 63, 0, 0, 0);
 800a8b4:	4770      	bx	lr
	...

0800a8b8 <_Z23getFont_arialbi_10_4bppv>:
{
 800a8b8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont arialbi_10_4bpp(glyphs_arialbi_10_4bpp, 23, 10, 2, 4, 1, 1, 1, unicodes_arialbi_10_4bpp, kerning_arialbi_10_4bpp, 63, 0, 0, 0);
 800a8ba:	4d16      	ldr	r5, [pc, #88]	; (800a914 <_Z23getFont_arialbi_10_4bppv+0x5c>)
 800a8bc:	782c      	ldrb	r4, [r5, #0]
 800a8be:	f3bf 8f5b 	dmb	ish
 800a8c2:	f014 0401 	ands.w	r4, r4, #1
{
 800a8c6:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont arialbi_10_4bpp(glyphs_arialbi_10_4bpp, 23, 10, 2, 4, 1, 1, 1, unicodes_arialbi_10_4bpp, kerning_arialbi_10_4bpp, 63, 0, 0, 0);
 800a8c8:	d120      	bne.n	800a90c <_Z23getFont_arialbi_10_4bppv+0x54>
 800a8ca:	4628      	mov	r0, r5
 800a8cc:	f020 fc47 	bl	802b15e <__cxa_guard_acquire>
 800a8d0:	b1e0      	cbz	r0, 800a90c <_Z23getFont_arialbi_10_4bppv+0x54>
 800a8d2:	233f      	movs	r3, #63	; 0x3f
 800a8d4:	9307      	str	r3, [sp, #28]
 800a8d6:	4b10      	ldr	r3, [pc, #64]	; (800a918 <_Z23getFont_arialbi_10_4bppv+0x60>)
 800a8d8:	9306      	str	r3, [sp, #24]
 800a8da:	4b10      	ldr	r3, [pc, #64]	; (800a91c <_Z23getFont_arialbi_10_4bppv+0x64>)
 800a8dc:	9305      	str	r3, [sp, #20]
 800a8de:	2301      	movs	r3, #1
 800a8e0:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800a8e4:	9302      	str	r3, [sp, #8]
 800a8e6:	2204      	movs	r2, #4
 800a8e8:	2302      	movs	r3, #2
 800a8ea:	e9cd 3200 	strd	r3, r2, [sp]
 800a8ee:	490c      	ldr	r1, [pc, #48]	; (800a920 <_Z23getFont_arialbi_10_4bppv+0x68>)
 800a8f0:	480c      	ldr	r0, [pc, #48]	; (800a924 <_Z23getFont_arialbi_10_4bppv+0x6c>)
 800a8f2:	9408      	str	r4, [sp, #32]
 800a8f4:	230a      	movs	r3, #10
 800a8f6:	2217      	movs	r2, #23
 800a8f8:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800a8fc:	f7fb fb9a 	bl	8006034 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a900:	4809      	ldr	r0, [pc, #36]	; (800a928 <_Z23getFont_arialbi_10_4bppv+0x70>)
 800a902:	f021 fb95 	bl	802c030 <atexit>
 800a906:	4628      	mov	r0, r5
 800a908:	f020 fc35 	bl	802b176 <__cxa_guard_release>
    return arialbi_10_4bpp;
}
 800a90c:	4805      	ldr	r0, [pc, #20]	; (800a924 <_Z23getFont_arialbi_10_4bppv+0x6c>)
 800a90e:	b00d      	add	sp, #52	; 0x34
 800a910:	bd30      	pop	{r4, r5, pc}
 800a912:	bf00      	nop
 800a914:	2000d260 	.word	0x2000d260
 800a918:	0804c704 	.word	0x0804c704
 800a91c:	0804c73c 	.word	0x0804c73c
 800a920:	0804c0bc 	.word	0x0804c0bc
 800a924:	2000d264 	.word	0x2000d264
 800a928:	0800a8b5 	.word	0x0800a8b5

0800a92c <__tcf_0>:

touchgfx::GeneratedFont& getFont_times_12_4bpp();

touchgfx::GeneratedFont& getFont_times_12_4bpp()
{
    static touchgfx::GeneratedFont times_12_4bpp(glyphs_times_12_4bpp, 37, 12, 3, 4, 1, 0, 2, unicodes_times_12_4bpp, kerning_times_12_4bpp, 63, 0, 0, &times_contextualFormsTable);
 800a92c:	4770      	bx	lr
	...

0800a930 <_Z21getFont_times_12_4bppv>:
{
 800a930:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont times_12_4bpp(glyphs_times_12_4bpp, 37, 12, 3, 4, 1, 0, 2, unicodes_times_12_4bpp, kerning_times_12_4bpp, 63, 0, 0, &times_contextualFormsTable);
 800a932:	4d17      	ldr	r5, [pc, #92]	; (800a990 <_Z21getFont_times_12_4bppv+0x60>)
 800a934:	782c      	ldrb	r4, [r5, #0]
 800a936:	f3bf 8f5b 	dmb	ish
 800a93a:	f014 0401 	ands.w	r4, r4, #1
{
 800a93e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont times_12_4bpp(glyphs_times_12_4bpp, 37, 12, 3, 4, 1, 0, 2, unicodes_times_12_4bpp, kerning_times_12_4bpp, 63, 0, 0, &times_contextualFormsTable);
 800a940:	d122      	bne.n	800a988 <_Z21getFont_times_12_4bppv+0x58>
 800a942:	4628      	mov	r0, r5
 800a944:	f020 fc0b 	bl	802b15e <__cxa_guard_acquire>
 800a948:	b1f0      	cbz	r0, 800a988 <_Z21getFont_times_12_4bppv+0x58>
 800a94a:	4b12      	ldr	r3, [pc, #72]	; (800a994 <_Z21getFont_times_12_4bppv+0x64>)
 800a94c:	4912      	ldr	r1, [pc, #72]	; (800a998 <_Z21getFont_times_12_4bppv+0x68>)
 800a94e:	4813      	ldr	r0, [pc, #76]	; (800a99c <_Z21getFont_times_12_4bppv+0x6c>)
 800a950:	9408      	str	r4, [sp, #32]
 800a952:	e9cd 4309 	strd	r4, r3, [sp, #36]	; 0x24
 800a956:	233f      	movs	r3, #63	; 0x3f
 800a958:	9307      	str	r3, [sp, #28]
 800a95a:	4b11      	ldr	r3, [pc, #68]	; (800a9a0 <_Z21getFont_times_12_4bppv+0x70>)
 800a95c:	9306      	str	r3, [sp, #24]
 800a95e:	4b11      	ldr	r3, [pc, #68]	; (800a9a4 <_Z21getFont_times_12_4bppv+0x74>)
 800a960:	9305      	str	r3, [sp, #20]
 800a962:	2302      	movs	r3, #2
 800a964:	e9cd 4303 	strd	r4, r3, [sp, #12]
 800a968:	2201      	movs	r2, #1
 800a96a:	2304      	movs	r3, #4
 800a96c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800a970:	2303      	movs	r3, #3
 800a972:	9300      	str	r3, [sp, #0]
 800a974:	2225      	movs	r2, #37	; 0x25
 800a976:	230c      	movs	r3, #12
 800a978:	f7fb fb5c 	bl	8006034 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a97c:	480a      	ldr	r0, [pc, #40]	; (800a9a8 <_Z21getFont_times_12_4bppv+0x78>)
 800a97e:	f021 fb57 	bl	802c030 <atexit>
 800a982:	4628      	mov	r0, r5
 800a984:	f020 fbf7 	bl	802b176 <__cxa_guard_release>
    return times_12_4bpp;
}
 800a988:	4804      	ldr	r0, [pc, #16]	; (800a99c <_Z21getFont_times_12_4bppv+0x6c>)
 800a98a:	b00d      	add	sp, #52	; 0x34
 800a98c:	bd30      	pop	{r4, r5, pc}
 800a98e:	bf00      	nop
 800a990:	2000d28c 	.word	0x2000d28c
 800a994:	08031f4c 	.word	0x08031f4c
 800a998:	0804c200 	.word	0x0804c200
 800a99c:	2000d290 	.word	0x2000d290
 800a9a0:	0804c708 	.word	0x0804c708
 800a9a4:	0804c750 	.word	0x0804c750
 800a9a8:	0800a92d 	.word	0x0800a92d

0800a9ac <__tcf_0>:

touchgfx::GeneratedFont& getFont_timesbd_20_4bpp();

touchgfx::GeneratedFont& getFont_timesbd_20_4bpp()
{
    static touchgfx::GeneratedFont timesbd_20_4bpp(glyphs_timesbd_20_4bpp, 34, 20, 5, 4, 1, 0, 2, unicodes_timesbd_20_4bpp, kerning_timesbd_20_4bpp, 63, 0, 0, &timesbd_contextualFormsTable);
 800a9ac:	4770      	bx	lr
	...

0800a9b0 <_Z23getFont_timesbd_20_4bppv>:
{
 800a9b0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont timesbd_20_4bpp(glyphs_timesbd_20_4bpp, 34, 20, 5, 4, 1, 0, 2, unicodes_timesbd_20_4bpp, kerning_timesbd_20_4bpp, 63, 0, 0, &timesbd_contextualFormsTable);
 800a9b2:	4d17      	ldr	r5, [pc, #92]	; (800aa10 <_Z23getFont_timesbd_20_4bppv+0x60>)
 800a9b4:	782c      	ldrb	r4, [r5, #0]
 800a9b6:	f3bf 8f5b 	dmb	ish
 800a9ba:	f014 0401 	ands.w	r4, r4, #1
{
 800a9be:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont timesbd_20_4bpp(glyphs_timesbd_20_4bpp, 34, 20, 5, 4, 1, 0, 2, unicodes_timesbd_20_4bpp, kerning_timesbd_20_4bpp, 63, 0, 0, &timesbd_contextualFormsTable);
 800a9c0:	d122      	bne.n	800aa08 <_Z23getFont_timesbd_20_4bppv+0x58>
 800a9c2:	4628      	mov	r0, r5
 800a9c4:	f020 fbcb 	bl	802b15e <__cxa_guard_acquire>
 800a9c8:	b1f0      	cbz	r0, 800aa08 <_Z23getFont_timesbd_20_4bppv+0x58>
 800a9ca:	4b12      	ldr	r3, [pc, #72]	; (800aa14 <_Z23getFont_timesbd_20_4bppv+0x64>)
 800a9cc:	4912      	ldr	r1, [pc, #72]	; (800aa18 <_Z23getFont_timesbd_20_4bppv+0x68>)
 800a9ce:	4813      	ldr	r0, [pc, #76]	; (800aa1c <_Z23getFont_timesbd_20_4bppv+0x6c>)
 800a9d0:	9408      	str	r4, [sp, #32]
 800a9d2:	e9cd 4309 	strd	r4, r3, [sp, #36]	; 0x24
 800a9d6:	233f      	movs	r3, #63	; 0x3f
 800a9d8:	9307      	str	r3, [sp, #28]
 800a9da:	4b11      	ldr	r3, [pc, #68]	; (800aa20 <_Z23getFont_timesbd_20_4bppv+0x70>)
 800a9dc:	9306      	str	r3, [sp, #24]
 800a9de:	4b11      	ldr	r3, [pc, #68]	; (800aa24 <_Z23getFont_timesbd_20_4bppv+0x74>)
 800a9e0:	9305      	str	r3, [sp, #20]
 800a9e2:	2302      	movs	r3, #2
 800a9e4:	e9cd 4303 	strd	r4, r3, [sp, #12]
 800a9e8:	2201      	movs	r2, #1
 800a9ea:	2304      	movs	r3, #4
 800a9ec:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800a9f0:	2305      	movs	r3, #5
 800a9f2:	9300      	str	r3, [sp, #0]
 800a9f4:	2222      	movs	r2, #34	; 0x22
 800a9f6:	2314      	movs	r3, #20
 800a9f8:	f7fb fb1c 	bl	8006034 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a9fc:	480a      	ldr	r0, [pc, #40]	; (800aa28 <_Z23getFont_timesbd_20_4bppv+0x78>)
 800a9fe:	f021 fb17 	bl	802c030 <atexit>
 800aa02:	4628      	mov	r0, r5
 800aa04:	f020 fbb7 	bl	802b176 <__cxa_guard_release>
    return timesbd_20_4bpp;
}
 800aa08:	4804      	ldr	r0, [pc, #16]	; (800aa1c <_Z23getFont_timesbd_20_4bppv+0x6c>)
 800aa0a:	b00d      	add	sp, #52	; 0x34
 800aa0c:	bd30      	pop	{r4, r5, pc}
 800aa0e:	bf00      	nop
 800aa10:	2000d2b8 	.word	0x2000d2b8
 800aa14:	080323a4 	.word	0x080323a4
 800aa18:	0804c408 	.word	0x0804c408
 800aa1c:	2000d2bc 	.word	0x2000d2bc
 800aa20:	0804c714 	.word	0x0804c714
 800aa24:	0804c754 	.word	0x0804c754
 800aa28:	0800a9ad 	.word	0x0800a9ad

0800aa2c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 15, 10, 2, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800aa2c:	4770      	bx	lr
	...

0800aa30 <_Z23getFont_verdana_10_4bppv>:
{
 800aa30:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 15, 10, 2, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800aa32:	4d16      	ldr	r5, [pc, #88]	; (800aa8c <_Z23getFont_verdana_10_4bppv+0x5c>)
 800aa34:	782c      	ldrb	r4, [r5, #0]
 800aa36:	f3bf 8f5b 	dmb	ish
 800aa3a:	f014 0401 	ands.w	r4, r4, #1
{
 800aa3e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 15, 10, 2, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800aa40:	d120      	bne.n	800aa84 <_Z23getFont_verdana_10_4bppv+0x54>
 800aa42:	4628      	mov	r0, r5
 800aa44:	f020 fb8b 	bl	802b15e <__cxa_guard_acquire>
 800aa48:	b1e0      	cbz	r0, 800aa84 <_Z23getFont_verdana_10_4bppv+0x54>
 800aa4a:	233f      	movs	r3, #63	; 0x3f
 800aa4c:	9307      	str	r3, [sp, #28]
 800aa4e:	4b10      	ldr	r3, [pc, #64]	; (800aa90 <_Z23getFont_verdana_10_4bppv+0x60>)
 800aa50:	9306      	str	r3, [sp, #24]
 800aa52:	4b10      	ldr	r3, [pc, #64]	; (800aa94 <_Z23getFont_verdana_10_4bppv+0x64>)
 800aa54:	4910      	ldr	r1, [pc, #64]	; (800aa98 <_Z23getFont_verdana_10_4bppv+0x68>)
 800aa56:	4811      	ldr	r0, [pc, #68]	; (800aa9c <_Z23getFont_verdana_10_4bppv+0x6c>)
 800aa58:	9408      	str	r4, [sp, #32]
 800aa5a:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800aa5e:	2201      	movs	r2, #1
 800aa60:	2304      	movs	r3, #4
 800aa62:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800aa66:	2302      	movs	r3, #2
 800aa68:	9300      	str	r3, [sp, #0]
 800aa6a:	220f      	movs	r2, #15
 800aa6c:	230a      	movs	r3, #10
 800aa6e:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800aa72:	9403      	str	r4, [sp, #12]
 800aa74:	f7fb fade 	bl	8006034 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800aa78:	4809      	ldr	r0, [pc, #36]	; (800aaa0 <_Z23getFont_verdana_10_4bppv+0x70>)
 800aa7a:	f021 fad9 	bl	802c030 <atexit>
 800aa7e:	4628      	mov	r0, r5
 800aa80:	f020 fb79 	bl	802b176 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800aa84:	4805      	ldr	r0, [pc, #20]	; (800aa9c <_Z23getFont_verdana_10_4bppv+0x6c>)
 800aa86:	b00d      	add	sp, #52	; 0x34
 800aa88:	bd30      	pop	{r4, r5, pc}
 800aa8a:	bf00      	nop
 800aa8c:	2000d2e4 	.word	0x2000d2e4
 800aa90:	0804c728 	.word	0x0804c728
 800aa94:	0804c758 	.word	0x0804c758
 800aa98:	0804c5e4 	.word	0x0804c5e4
 800aa9c:	2000d2e8 	.word	0x2000d2e8
 800aaa0:	0800aa2d 	.word	0x0800aa2d

0800aaa4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800aaa4:	4770      	bx	lr
	...

0800aaa8 <_Z23getFont_verdana_20_4bppv>:
{
 800aaa8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800aaaa:	4d15      	ldr	r5, [pc, #84]	; (800ab00 <_Z23getFont_verdana_20_4bppv+0x58>)
 800aaac:	782c      	ldrb	r4, [r5, #0]
 800aaae:	f3bf 8f5b 	dmb	ish
 800aab2:	f014 0401 	ands.w	r4, r4, #1
{
 800aab6:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800aab8:	d11e      	bne.n	800aaf8 <_Z23getFont_verdana_20_4bppv+0x50>
 800aaba:	4628      	mov	r0, r5
 800aabc:	f020 fb4f 	bl	802b15e <__cxa_guard_acquire>
 800aac0:	b1d0      	cbz	r0, 800aaf8 <_Z23getFont_verdana_20_4bppv+0x50>
 800aac2:	233f      	movs	r3, #63	; 0x3f
 800aac4:	9307      	str	r3, [sp, #28]
 800aac6:	4b0f      	ldr	r3, [pc, #60]	; (800ab04 <_Z23getFont_verdana_20_4bppv+0x5c>)
 800aac8:	9306      	str	r3, [sp, #24]
 800aaca:	4b0f      	ldr	r3, [pc, #60]	; (800ab08 <_Z23getFont_verdana_20_4bppv+0x60>)
 800aacc:	490f      	ldr	r1, [pc, #60]	; (800ab0c <_Z23getFont_verdana_20_4bppv+0x64>)
 800aace:	4810      	ldr	r0, [pc, #64]	; (800ab10 <_Z23getFont_verdana_20_4bppv+0x68>)
 800aad0:	9408      	str	r4, [sp, #32]
 800aad2:	2201      	movs	r2, #1
 800aad4:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800aad8:	2304      	movs	r3, #4
 800aada:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800aade:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800aae2:	2314      	movs	r3, #20
 800aae4:	9403      	str	r4, [sp, #12]
 800aae6:	9400      	str	r4, [sp, #0]
 800aae8:	f7fb faa4 	bl	8006034 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800aaec:	4809      	ldr	r0, [pc, #36]	; (800ab14 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800aaee:	f021 fa9f 	bl	802c030 <atexit>
 800aaf2:	4628      	mov	r0, r5
 800aaf4:	f020 fb3f 	bl	802b176 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 800aaf8:	4805      	ldr	r0, [pc, #20]	; (800ab10 <_Z23getFont_verdana_20_4bppv+0x68>)
 800aafa:	b00d      	add	sp, #52	; 0x34
 800aafc:	bd30      	pop	{r4, r5, pc}
 800aafe:	bf00      	nop
 800ab00:	2000d310 	.word	0x2000d310
 800ab04:	0804c72c 	.word	0x0804c72c
 800ab08:	0804c75c 	.word	0x0804c75c
 800ab0c:	0804c6b8 	.word	0x0804c6b8
 800ab10:	2000d314 	.word	0x2000d314
 800ab14:	0800aaa5 	.word	0x0800aaa5

0800ab18 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800ab18:	4770      	bx	lr
	...

0800ab1c <_Z23getFont_verdana_40_4bppv>:
{
 800ab1c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800ab1e:	4d15      	ldr	r5, [pc, #84]	; (800ab74 <_Z23getFont_verdana_40_4bppv+0x58>)
 800ab20:	782c      	ldrb	r4, [r5, #0]
 800ab22:	f3bf 8f5b 	dmb	ish
 800ab26:	f014 0401 	ands.w	r4, r4, #1
{
 800ab2a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800ab2c:	d11e      	bne.n	800ab6c <_Z23getFont_verdana_40_4bppv+0x50>
 800ab2e:	4628      	mov	r0, r5
 800ab30:	f020 fb15 	bl	802b15e <__cxa_guard_acquire>
 800ab34:	b1d0      	cbz	r0, 800ab6c <_Z23getFont_verdana_40_4bppv+0x50>
 800ab36:	233f      	movs	r3, #63	; 0x3f
 800ab38:	9307      	str	r3, [sp, #28]
 800ab3a:	4b0f      	ldr	r3, [pc, #60]	; (800ab78 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800ab3c:	9306      	str	r3, [sp, #24]
 800ab3e:	4b0f      	ldr	r3, [pc, #60]	; (800ab7c <_Z23getFont_verdana_40_4bppv+0x60>)
 800ab40:	490f      	ldr	r1, [pc, #60]	; (800ab80 <_Z23getFont_verdana_40_4bppv+0x64>)
 800ab42:	4810      	ldr	r0, [pc, #64]	; (800ab84 <_Z23getFont_verdana_40_4bppv+0x68>)
 800ab44:	9408      	str	r4, [sp, #32]
 800ab46:	2201      	movs	r2, #1
 800ab48:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800ab4c:	2304      	movs	r3, #4
 800ab4e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ab52:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800ab56:	2328      	movs	r3, #40	; 0x28
 800ab58:	9403      	str	r4, [sp, #12]
 800ab5a:	9400      	str	r4, [sp, #0]
 800ab5c:	f7fb fa6a 	bl	8006034 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800ab60:	4809      	ldr	r0, [pc, #36]	; (800ab88 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800ab62:	f021 fa65 	bl	802c030 <atexit>
 800ab66:	4628      	mov	r0, r5
 800ab68:	f020 fb05 	bl	802b176 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800ab6c:	4805      	ldr	r0, [pc, #20]	; (800ab84 <_Z23getFont_verdana_40_4bppv+0x68>)
 800ab6e:	b00d      	add	sp, #52	; 0x34
 800ab70:	bd30      	pop	{r4, r5, pc}
 800ab72:	bf00      	nop
 800ab74:	2000d33c 	.word	0x2000d33c
 800ab78:	0804c730 	.word	0x0804c730
 800ab7c:	0804c760 	.word	0x0804c760
 800ab80:	0804c6c8 	.word	0x0804c6c8
 800ab84:	2000d340 	.word	0x2000d340
 800ab88:	0800ab19 	.word	0x0800ab19

0800ab8c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800ab8c:	2000      	movs	r0, #0
 800ab8e:	4770      	bx	lr

0800ab90 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800ab90:	2000      	movs	r0, #0
 800ab92:	4770      	bx	lr

0800ab94 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800ab94:	b40e      	push	{r1, r2, r3}
 800ab96:	b503      	push	{r0, r1, lr}
 800ab98:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800ab9a:	2100      	movs	r1, #0
{
 800ab9c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800aba0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800aba2:	f00f facd 	bl	801a140 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800aba6:	b002      	add	sp, #8
 800aba8:	f85d eb04 	ldr.w	lr, [sp], #4
 800abac:	b003      	add	sp, #12
 800abae:	4770      	bx	lr

0800abb0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800abb0:	b40c      	push	{r2, r3}
 800abb2:	b507      	push	{r0, r1, r2, lr}
 800abb4:	ab04      	add	r3, sp, #16
 800abb6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800abba:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800abbc:	f00f fac0 	bl	801a140 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800abc0:	b003      	add	sp, #12
 800abc2:	f85d eb04 	ldr.w	lr, [sp], #4
 800abc6:	b002      	add	sp, #8
 800abc8:	4770      	bx	lr
	...

0800abcc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800abcc:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800abce:	b510      	push	{r4, lr}
 800abd0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800abd2:	b373      	cbz	r3, 800ac32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800abd4:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800abd6:	b92b      	cbnz	r3, 800abe4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800abd8:	4b18      	ldr	r3, [pc, #96]	; (800ac3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800abda:	4a19      	ldr	r2, [pc, #100]	; (800ac40 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800abdc:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800abde:	4819      	ldr	r0, [pc, #100]	; (800ac44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800abe0:	f021 fa08 	bl	802bff4 <__assert_func>
            return buffer[pos];
 800abe4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800abe6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800abea:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800abec:	b30b      	cbz	r3, 800ac32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800abee:	f010 fedf 	bl	801b9b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800abf2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800abf4:	2b01      	cmp	r3, #1
 800abf6:	d803      	bhi.n	800ac00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800abf8:	4b13      	ldr	r3, [pc, #76]	; (800ac48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800abfa:	4a14      	ldr	r2, [pc, #80]	; (800ac4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800abfc:	21c5      	movs	r1, #197	; 0xc5
 800abfe:	e7ee      	b.n	800abde <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800ac00:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ac02:	1c53      	adds	r3, r2, #1
 800ac04:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800ac06:	2b09      	cmp	r3, #9
 800ac08:	4619      	mov	r1, r3
 800ac0a:	bf88      	it	hi
 800ac0c:	f1a3 010a 	subhi.w	r1, r3, #10
 800ac10:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800ac14:	f640 103f 	movw	r0, #2367	; 0x93f
 800ac18:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800ac1a:	4281      	cmp	r1, r0
 800ac1c:	d109      	bne.n	800ac32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800ac1e:	2b0a      	cmp	r3, #10
 800ac20:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800ac24:	bf28      	it	cs
 800ac26:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800ac28:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800ac2c:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800ac2e:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800ac30:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800ac32:	4620      	mov	r0, r4
}
 800ac34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800ac38:	f010 bd9e 	b.w	801b778 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ac3c:	080323c4 	.word	0x080323c4
 800ac40:	080323cd 	.word	0x080323cd
 800ac44:	08032478 	.word	0x08032478
 800ac48:	080324c2 	.word	0x080324c2
 800ac4c:	080324d0 	.word	0x080324d0

0800ac50 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800ac50:	f010 bd4a 	b.w	801b6e8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800ac54 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800ac54:	b510      	push	{r4, lr}
 800ac56:	b086      	sub	sp, #24
 800ac58:	ac02      	add	r4, sp, #8
 800ac5a:	e884 0006 	stmia.w	r4, {r1, r2}
 800ac5e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800ac60:	ab0a      	add	r3, sp, #40	; 0x28
 800ac62:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800ac64:	9301      	str	r3, [sp, #4]
 800ac66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ac68:	9300      	str	r3, [sp, #0]
 800ac6a:	4621      	mov	r1, r4
 800ac6c:	9b08      	ldr	r3, [sp, #32]
 800ac6e:	f00d ff15 	bl	8018a9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800ac72:	b006      	add	sp, #24
 800ac74:	bd10      	pop	{r4, pc}
	...

0800ac78 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800ac78:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800ac7a:	bb18      	cbnz	r0, 800acc4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800ac7c:	4b12      	ldr	r3, [pc, #72]	; (800acc8 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800ac7e:	4813      	ldr	r0, [pc, #76]	; (800accc <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800ac80:	681b      	ldr	r3, [r3, #0]
 800ac82:	4913      	ldr	r1, [pc, #76]	; (800acd0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800ac84:	b1b3      	cbz	r3, 800acb4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800ac86:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800ac88:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800ac8a:	441a      	add	r2, r3
 800ac8c:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800ac8e:	685a      	ldr	r2, [r3, #4]
 800ac90:	441a      	add	r2, r3
 800ac92:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800ac94:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800ac96:	4b0f      	ldr	r3, [pc, #60]	; (800acd4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800ac98:	2200      	movs	r2, #0
 800ac9a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800ac9c:	f000 f838 	bl	800ad10 <_ZN17TypedTextDatabase8getFontsEv>
 800aca0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800aca2:	f000 f833 	bl	800ad0c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800aca6:	4b0c      	ldr	r3, [pc, #48]	; (800acd8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800aca8:	601c      	str	r4, [r3, #0]
        fonts = f;
 800acaa:	4b0c      	ldr	r3, [pc, #48]	; (800acdc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800acac:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800acae:	4b0c      	ldr	r3, [pc, #48]	; (800ace0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800acb0:	8018      	strh	r0, [r3, #0]
    }
}
 800acb2:	e007      	b.n	800acc4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800acb4:	4b0b      	ldr	r3, [pc, #44]	; (800ace4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800acb6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800acb8:	4b0b      	ldr	r3, [pc, #44]	; (800ace8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800acba:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800acbc:	4b0b      	ldr	r3, [pc, #44]	; (800acec <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800acbe:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800acc0:	2c00      	cmp	r4, #0
 800acc2:	d1e8      	bne.n	800ac96 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800acc4:	bd38      	pop	{r3, r4, r5, pc}
 800acc6:	bf00      	nop
 800acc8:	2000d368 	.word	0x2000d368
 800accc:	2000d36c 	.word	0x2000d36c
 800acd0:	2000d370 	.word	0x2000d370
 800acd4:	2000d374 	.word	0x2000d374
 800acd8:	2001e230 	.word	0x2001e230
 800acdc:	2001e238 	.word	0x2001e238
 800ace0:	2001e234 	.word	0x2001e234
 800ace4:	0804c7d0 	.word	0x0804c7d0
 800ace8:	0804c764 	.word	0x0804c764
 800acec:	0804cc18 	.word	0x0804cc18

0800acf0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800acf0:	4b04      	ldr	r3, [pc, #16]	; (800ad04 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800acf2:	681b      	ldr	r3, [r3, #0]
 800acf4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800acf8:	4b03      	ldr	r3, [pc, #12]	; (800ad08 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800acfa:	681b      	ldr	r3, [r3, #0]
}
 800acfc:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800ad00:	4770      	bx	lr
 800ad02:	bf00      	nop
 800ad04:	2000d370 	.word	0x2000d370
 800ad08:	2000d36c 	.word	0x2000d36c

0800ad0c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800ad0c:	201b      	movs	r0, #27
 800ad0e:	4770      	bx	lr

0800ad10 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800ad10:	4800      	ldr	r0, [pc, #0]	; (800ad14 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800ad12:	4770      	bx	lr
 800ad14:	2000d378 	.word	0x2000d378

0800ad18 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 7:
        touchgfx_fonts[7] = &(getFont_arialbi_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800ad18:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800ad1a:	f7ff fec5 	bl	800aaa8 <_Z23getFont_verdana_20_4bppv>
};
 800ad1e:	4c0c      	ldr	r4, [pc, #48]	; (800ad50 <_GLOBAL__sub_I_touchgfx_fonts+0x38>)
 800ad20:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800ad22:	f7ff fefb 	bl	800ab1c <_Z23getFont_verdana_40_4bppv>
};
 800ad26:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800ad28:	f7ff fe82 	bl	800aa30 <_Z23getFont_verdana_10_4bppv>
};
 800ad2c:	60a0      	str	r0, [r4, #8]
    &(getFont_VLADIMIR_TTF_40_4bpp()),
 800ad2e:	f7ff fd49 	bl	800a7c4 <_Z28getFont_VLADIMIR_TTF_40_4bppv>
};
 800ad32:	60e0      	str	r0, [r4, #12]
    &(getFont_times_12_4bpp()),
 800ad34:	f7ff fdfc 	bl	800a930 <_Z21getFont_times_12_4bppv>
};
 800ad38:	6120      	str	r0, [r4, #16]
    &(getFont_timesbd_20_4bpp()),
 800ad3a:	f7ff fe39 	bl	800a9b0 <_Z23getFont_timesbd_20_4bppv>
};
 800ad3e:	6160      	str	r0, [r4, #20]
    &(getFont_arialbd_14_4bpp()),
 800ad40:	f7ff fd7c 	bl	800a83c <_Z23getFont_arialbd_14_4bppv>
};
 800ad44:	61a0      	str	r0, [r4, #24]
    &(getFont_arialbi_10_4bpp())
 800ad46:	f7ff fdb7 	bl	800a8b8 <_Z23getFont_arialbi_10_4bppv>
};
 800ad4a:	61e0      	str	r0, [r4, #28]
} // namespace TypedTextDatabase
 800ad4c:	bd10      	pop	{r4, pc}
 800ad4e:	bf00      	nop
 800ad50:	2000d378 	.word	0x2000d378

0800ad54 <_ZN24DataDisplayListPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~DataDisplayListPresenter() {};
 800ad54:	4770      	bx	lr

0800ad56 <_ZThn4_N24DataDisplayListPresenterD1Ev>:
 800ad56:	3804      	subs	r0, #4
 800ad58:	4770      	bx	lr

0800ad5a <_ZN24DataDisplayListPresenter10deactivateEv>:
}

void DataDisplayListPresenter::activate()
{

}
 800ad5a:	4770      	bx	lr

0800ad5c <_ZN24DataDisplayListPresenterD0Ev>:
 800ad5c:	b510      	push	{r4, lr}
 800ad5e:	2110      	movs	r1, #16
 800ad60:	4604      	mov	r4, r0
 800ad62:	f020 f9fa 	bl	802b15a <_ZdlPvj>
 800ad66:	4620      	mov	r0, r4
 800ad68:	bd10      	pop	{r4, pc}

0800ad6a <_ZThn4_N24DataDisplayListPresenterD0Ev>:
 800ad6a:	f1a0 0004 	sub.w	r0, r0, #4
 800ad6e:	e7f5      	b.n	800ad5c <_ZN24DataDisplayListPresenterD0Ev>

0800ad70 <_ZN24DataDisplayListPresenterC1ER19DataDisplayListView>:
DataDisplayListPresenter::DataDisplayListPresenter(DataDisplayListView& v)
 800ad70:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800ad72:	2200      	movs	r2, #0
 800ad74:	6082      	str	r2, [r0, #8]
    : view(v)
 800ad76:	4a04      	ldr	r2, [pc, #16]	; (800ad88 <_ZN24DataDisplayListPresenterC1ER19DataDisplayListView+0x18>)
 800ad78:	60c1      	str	r1, [r0, #12]
 800ad7a:	f102 0408 	add.w	r4, r2, #8
 800ad7e:	3220      	adds	r2, #32
 800ad80:	6004      	str	r4, [r0, #0]
 800ad82:	6042      	str	r2, [r0, #4]
}
 800ad84:	bd10      	pop	{r4, pc}
 800ad86:	bf00      	nop
 800ad88:	080325a4 	.word	0x080325a4

0800ad8c <_ZN19DataDisplayListViewD1Ev>:

class DataDisplayListView : public DataDisplayListViewBase
{
public:
    DataDisplayListView();
    virtual ~DataDisplayListView() {}
 800ad8c:	4770      	bx	lr

0800ad8e <_ZN19DataDisplayListView14tearDownScreenEv>:
}

void DataDisplayListView::tearDownScreen()
{
    DataDisplayListViewBase::tearDownScreen();
}
 800ad8e:	4770      	bx	lr

0800ad90 <_ZN19DataDisplayListView11setupScreenEv>:
    DataDisplayListViewBase::setupScreen();
 800ad90:	f7f8 bd17 	b.w	80037c2 <_ZN23DataDisplayListViewBase11setupScreenEv>

0800ad94 <_ZN19DataDisplayListViewD0Ev>:
 800ad94:	b510      	push	{r4, lr}
 800ad96:	f44f 71c0 	mov.w	r1, #384	; 0x180
 800ad9a:	4604      	mov	r4, r0
 800ad9c:	f020 f9dd 	bl	802b15a <_ZdlPvj>
 800ada0:	4620      	mov	r0, r4
 800ada2:	bd10      	pop	{r4, pc}

0800ada4 <_ZN19DataDisplayListViewC1Ev>:
DataDisplayListView::DataDisplayListView()
 800ada4:	b510      	push	{r4, lr}
 800ada6:	4604      	mov	r4, r0
 800ada8:	f7f8 fdb2 	bl	8003910 <_ZN23DataDisplayListViewBaseC1Ev>
 800adac:	4b01      	ldr	r3, [pc, #4]	; (800adb4 <_ZN19DataDisplayListViewC1Ev+0x10>)
 800adae:	6023      	str	r3, [r4, #0]
}
 800adb0:	4620      	mov	r0, r4
 800adb2:	bd10      	pop	{r4, pc}
 800adb4:	080325d4 	.word	0x080325d4

0800adb8 <_ZN18DataSavedPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~DataSavedPresenter() {};
 800adb8:	4770      	bx	lr

0800adba <_ZThn4_N18DataSavedPresenterD1Ev>:
 800adba:	3804      	subs	r0, #4
 800adbc:	4770      	bx	lr

0800adbe <_ZN18DataSavedPresenter10deactivateEv>:
}

void DataSavedPresenter::activate()
{

}
 800adbe:	4770      	bx	lr

0800adc0 <_ZN18DataSavedPresenterD0Ev>:
 800adc0:	b510      	push	{r4, lr}
 800adc2:	2110      	movs	r1, #16
 800adc4:	4604      	mov	r4, r0
 800adc6:	f020 f9c8 	bl	802b15a <_ZdlPvj>
 800adca:	4620      	mov	r0, r4
 800adcc:	bd10      	pop	{r4, pc}

0800adce <_ZThn4_N18DataSavedPresenterD0Ev>:
 800adce:	f1a0 0004 	sub.w	r0, r0, #4
 800add2:	e7f5      	b.n	800adc0 <_ZN18DataSavedPresenterD0Ev>

0800add4 <_ZN18DataSavedPresenterC1ER13DataSavedView>:
DataSavedPresenter::DataSavedPresenter(DataSavedView& v)
 800add4:	b510      	push	{r4, lr}
 800add6:	2200      	movs	r2, #0
 800add8:	6082      	str	r2, [r0, #8]
    : view(v)
 800adda:	4a04      	ldr	r2, [pc, #16]	; (800adec <_ZN18DataSavedPresenterC1ER13DataSavedView+0x18>)
 800addc:	60c1      	str	r1, [r0, #12]
 800adde:	f102 0408 	add.w	r4, r2, #8
 800ade2:	3220      	adds	r2, #32
 800ade4:	6004      	str	r4, [r0, #0]
 800ade6:	6042      	str	r2, [r0, #4]
}
 800ade8:	bd10      	pop	{r4, pc}
 800adea:	bf00      	nop
 800adec:	08032600 	.word	0x08032600

0800adf0 <_ZN18DataSavedPresenter14DSendPresenterEv>:
{

}

void DataSavedPresenter::DSendPresenter(){
	model-> DataSaveStart();
 800adf0:	6880      	ldr	r0, [r0, #8]
 800adf2:	f000 b937 	b.w	800b064 <_ZN5Model13DataSaveStartEv>

0800adf6 <_ZN13DataSavedViewD1Ev>:

class DataSavedView : public DataSavedViewBase
{
public:
    DataSavedView();
    virtual ~DataSavedView() {}
 800adf6:	4770      	bx	lr

0800adf8 <_ZN13DataSavedView14tearDownScreenEv>:
}

void DataSavedView::tearDownScreen()
{
    DataSavedViewBase::tearDownScreen();
}
 800adf8:	4770      	bx	lr

0800adfa <_ZN13DataSavedView11setupScreenEv>:
    DataSavedViewBase::setupScreen();
 800adfa:	f7f8 be6b 	b.w	8003ad4 <_ZN17DataSavedViewBase11setupScreenEv>

0800adfe <_ZN13DataSavedView15handleTickEventEv>:


void DataSavedView::handleTickEvent(){
	presenter->DSendPresenter();
 800adfe:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800ae00:	f7ff bff6 	b.w	800adf0 <_ZN18DataSavedPresenter14DSendPresenterEv>

0800ae04 <_ZN13DataSavedViewD0Ev>:
 800ae04:	b510      	push	{r4, lr}
 800ae06:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800ae0a:	4604      	mov	r4, r0
 800ae0c:	f020 f9a5 	bl	802b15a <_ZdlPvj>
 800ae10:	4620      	mov	r0, r4
 800ae12:	bd10      	pop	{r4, pc}

0800ae14 <_ZN13DataSavedViewC1Ev>:
DataSavedView::DataSavedView()
 800ae14:	b510      	push	{r4, lr}
 800ae16:	4604      	mov	r4, r0
 800ae18:	f7f8 fec8 	bl	8003bac <_ZN17DataSavedViewBaseC1Ev>
 800ae1c:	4b01      	ldr	r3, [pc, #4]	; (800ae24 <_ZN13DataSavedViewC1Ev+0x10>)
 800ae1e:	6023      	str	r3, [r4, #0]
}
 800ae20:	4620      	mov	r0, r4
 800ae22:	bd10      	pop	{r4, pc}
 800ae24:	08032630 	.word	0x08032630

0800ae28 <_ZN19FinishPagePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~FinishPagePresenter() {};
 800ae28:	4770      	bx	lr

0800ae2a <_ZThn4_N19FinishPagePresenterD1Ev>:
 800ae2a:	3804      	subs	r0, #4
 800ae2c:	4770      	bx	lr

0800ae2e <_ZN19FinishPagePresenter10deactivateEv>:
}

void FinishPagePresenter::activate()
{

}
 800ae2e:	4770      	bx	lr

0800ae30 <_ZN19FinishPagePresenterD0Ev>:
 800ae30:	b510      	push	{r4, lr}
 800ae32:	2110      	movs	r1, #16
 800ae34:	4604      	mov	r4, r0
 800ae36:	f020 f990 	bl	802b15a <_ZdlPvj>
 800ae3a:	4620      	mov	r0, r4
 800ae3c:	bd10      	pop	{r4, pc}

0800ae3e <_ZThn4_N19FinishPagePresenterD0Ev>:
 800ae3e:	f1a0 0004 	sub.w	r0, r0, #4
 800ae42:	e7f5      	b.n	800ae30 <_ZN19FinishPagePresenterD0Ev>

0800ae44 <_ZN19FinishPagePresenterC1ER14FinishPageView>:
FinishPagePresenter::FinishPagePresenter(FinishPageView& v)
 800ae44:	b510      	push	{r4, lr}
 800ae46:	2200      	movs	r2, #0
 800ae48:	6082      	str	r2, [r0, #8]
    : view(v)
 800ae4a:	4a04      	ldr	r2, [pc, #16]	; (800ae5c <_ZN19FinishPagePresenterC1ER14FinishPageView+0x18>)
 800ae4c:	60c1      	str	r1, [r0, #12]
 800ae4e:	f102 0408 	add.w	r4, r2, #8
 800ae52:	3220      	adds	r2, #32
 800ae54:	6004      	str	r4, [r0, #0]
 800ae56:	6042      	str	r2, [r0, #4]
}
 800ae58:	bd10      	pop	{r4, pc}
 800ae5a:	bf00      	nop
 800ae5c:	0803265c 	.word	0x0803265c

0800ae60 <_ZN14FinishPageViewD1Ev>:

class FinishPageView : public FinishPageViewBase
{
public:
    FinishPageView();
    virtual ~FinishPageView() {}
 800ae60:	4770      	bx	lr

0800ae62 <_ZN14FinishPageView14tearDownScreenEv>:
}

void FinishPageView::tearDownScreen()
{
    FinishPageViewBase::tearDownScreen();
}
 800ae62:	4770      	bx	lr

0800ae64 <_ZN14FinishPageView11setupScreenEv>:
    FinishPageViewBase::setupScreen();
 800ae64:	f7f8 bf8c 	b.w	8003d80 <_ZN18FinishPageViewBase11setupScreenEv>

0800ae68 <_ZN14FinishPageViewD0Ev>:
 800ae68:	b510      	push	{r4, lr}
 800ae6a:	f44f 71c0 	mov.w	r1, #384	; 0x180
 800ae6e:	4604      	mov	r4, r0
 800ae70:	f020 f973 	bl	802b15a <_ZdlPvj>
 800ae74:	4620      	mov	r0, r4
 800ae76:	bd10      	pop	{r4, pc}

0800ae78 <_ZN14FinishPageViewC1Ev>:
FinishPageView::FinishPageView()
 800ae78:	b510      	push	{r4, lr}
 800ae7a:	4604      	mov	r4, r0
 800ae7c:	f7f8 ffcc 	bl	8003e18 <_ZN18FinishPageViewBaseC1Ev>
 800ae80:	4b01      	ldr	r3, [pc, #4]	; (800ae88 <_ZN14FinishPageViewC1Ev+0x10>)
 800ae82:	6023      	str	r3, [r4, #0]
}
 800ae84:	4620      	mov	r0, r4
 800ae86:	bd10      	pop	{r4, pc}
 800ae88:	0803268c 	.word	0x0803268c

0800ae8c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800ae8c:	4770      	bx	lr

0800ae8e <_ZN19FrontendApplicationD0Ev>:
 800ae8e:	b510      	push	{r4, lr}
 800ae90:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800ae94:	4604      	mov	r4, r0
 800ae96:	f020 f960 	bl	802b15a <_ZdlPvj>
 800ae9a:	4620      	mov	r0, r4
 800ae9c:	bd10      	pop	{r4, pc}

0800ae9e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800ae9e:	b510      	push	{r4, lr}
 800aea0:	4604      	mov	r4, r0
    {
        model.tick();
 800aea2:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 800aea6:	f000 f8a8 	bl	800affa <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800aeaa:	4620      	mov	r0, r4
    }
 800aeac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800aeb0:	f00e b952 	b.w	8019158 <_ZN8touchgfx11Application15handleTickEventEv>

0800aeb4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800aeb4:	b510      	push	{r4, lr}
 800aeb6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800aeb8:	f7f9 fdae 	bl	8004a18 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800aebc:	4b01      	ldr	r3, [pc, #4]	; (800aec4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800aebe:	6023      	str	r3, [r4, #0]
{

}
 800aec0:	4620      	mov	r0, r4
 800aec2:	bd10      	pop	{r4, pc}
 800aec4:	080326c4 	.word	0x080326c4

0800aec8 <_ZN25InstructionPage1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~InstructionPage1Presenter() {};
 800aec8:	4770      	bx	lr

0800aeca <_ZThn4_N25InstructionPage1PresenterD1Ev>:
 800aeca:	3804      	subs	r0, #4
 800aecc:	4770      	bx	lr

0800aece <_ZN25InstructionPage1Presenter10deactivateEv>:
}

void InstructionPage1Presenter::activate()
{

}
 800aece:	4770      	bx	lr

0800aed0 <_ZN25InstructionPage1PresenterD0Ev>:
 800aed0:	b510      	push	{r4, lr}
 800aed2:	2110      	movs	r1, #16
 800aed4:	4604      	mov	r4, r0
 800aed6:	f020 f940 	bl	802b15a <_ZdlPvj>
 800aeda:	4620      	mov	r0, r4
 800aedc:	bd10      	pop	{r4, pc}

0800aede <_ZThn4_N25InstructionPage1PresenterD0Ev>:
 800aede:	f1a0 0004 	sub.w	r0, r0, #4
 800aee2:	e7f5      	b.n	800aed0 <_ZN25InstructionPage1PresenterD0Ev>

0800aee4 <_ZN25InstructionPage1PresenterC1ER20InstructionPage1View>:
InstructionPage1Presenter::InstructionPage1Presenter(InstructionPage1View& v)
 800aee4:	b510      	push	{r4, lr}
 800aee6:	2200      	movs	r2, #0
 800aee8:	6082      	str	r2, [r0, #8]
    : view(v)
 800aeea:	4a04      	ldr	r2, [pc, #16]	; (800aefc <_ZN25InstructionPage1PresenterC1ER20InstructionPage1View+0x18>)
 800aeec:	60c1      	str	r1, [r0, #12]
 800aeee:	f102 0408 	add.w	r4, r2, #8
 800aef2:	3220      	adds	r2, #32
 800aef4:	6004      	str	r4, [r0, #0]
 800aef6:	6042      	str	r2, [r0, #4]
}
 800aef8:	bd10      	pop	{r4, pc}
 800aefa:	bf00      	nop
 800aefc:	08032708 	.word	0x08032708

0800af00 <_ZN20InstructionPage1ViewD1Ev>:

class InstructionPage1View : public InstructionPage1ViewBase
{
public:
    InstructionPage1View();
    virtual ~InstructionPage1View() {}
 800af00:	4770      	bx	lr

0800af02 <_ZN20InstructionPage1View14tearDownScreenEv>:
}

void InstructionPage1View::tearDownScreen()
{
    InstructionPage1ViewBase::tearDownScreen();
}
 800af02:	4770      	bx	lr

0800af04 <_ZN20InstructionPage1View11setupScreenEv>:
    InstructionPage1ViewBase::setupScreen();
 800af04:	f7fb b8c1 	b.w	800608a <_ZN24InstructionPage1ViewBase11setupScreenEv>

0800af08 <_ZN20InstructionPage1ViewD0Ev>:
 800af08:	b510      	push	{r4, lr}
 800af0a:	f44f 71b0 	mov.w	r1, #352	; 0x160
 800af0e:	4604      	mov	r4, r0
 800af10:	f020 f923 	bl	802b15a <_ZdlPvj>
 800af14:	4620      	mov	r0, r4
 800af16:	bd10      	pop	{r4, pc}

0800af18 <_ZN20InstructionPage1ViewC1Ev>:
InstructionPage1View::InstructionPage1View()
 800af18:	b510      	push	{r4, lr}
 800af1a:	4604      	mov	r4, r0
 800af1c:	f7fb f902 	bl	8006124 <_ZN24InstructionPage1ViewBaseC1Ev>
 800af20:	4b01      	ldr	r3, [pc, #4]	; (800af28 <_ZN20InstructionPage1ViewC1Ev+0x10>)
 800af22:	6023      	str	r3, [r4, #0]
}
 800af24:	4620      	mov	r0, r4
 800af26:	bd10      	pop	{r4, pc}
 800af28:	08032738 	.word	0x08032738

0800af2c <_ZN25InstructionPage2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~InstructionPage2Presenter() {};
 800af2c:	4770      	bx	lr

0800af2e <_ZThn4_N25InstructionPage2PresenterD1Ev>:
 800af2e:	3804      	subs	r0, #4
 800af30:	4770      	bx	lr

0800af32 <_ZN25InstructionPage2Presenter10deactivateEv>:
}

void InstructionPage2Presenter::activate()
{

}
 800af32:	4770      	bx	lr

0800af34 <_ZN25InstructionPage2PresenterD0Ev>:
 800af34:	b510      	push	{r4, lr}
 800af36:	2110      	movs	r1, #16
 800af38:	4604      	mov	r4, r0
 800af3a:	f020 f90e 	bl	802b15a <_ZdlPvj>
 800af3e:	4620      	mov	r0, r4
 800af40:	bd10      	pop	{r4, pc}

0800af42 <_ZThn4_N25InstructionPage2PresenterD0Ev>:
 800af42:	f1a0 0004 	sub.w	r0, r0, #4
 800af46:	e7f5      	b.n	800af34 <_ZN25InstructionPage2PresenterD0Ev>

0800af48 <_ZN25InstructionPage2PresenterC1ER20InstructionPage2View>:
InstructionPage2Presenter::InstructionPage2Presenter(InstructionPage2View& v)
 800af48:	b510      	push	{r4, lr}
 800af4a:	2200      	movs	r2, #0
 800af4c:	6082      	str	r2, [r0, #8]
    : view(v)
 800af4e:	4a04      	ldr	r2, [pc, #16]	; (800af60 <_ZN25InstructionPage2PresenterC1ER20InstructionPage2View+0x18>)
 800af50:	60c1      	str	r1, [r0, #12]
 800af52:	f102 0408 	add.w	r4, r2, #8
 800af56:	3220      	adds	r2, #32
 800af58:	6004      	str	r4, [r0, #0]
 800af5a:	6042      	str	r2, [r0, #4]
}
 800af5c:	bd10      	pop	{r4, pc}
 800af5e:	bf00      	nop
 800af60:	08032764 	.word	0x08032764

0800af64 <_ZN20InstructionPage2ViewD1Ev>:

class InstructionPage2View : public InstructionPage2ViewBase
{
public:
    InstructionPage2View();
    virtual ~InstructionPage2View() {}
 800af64:	4770      	bx	lr

0800af66 <_ZN20InstructionPage2View14tearDownScreenEv>:
}

void InstructionPage2View::tearDownScreen()
{
    InstructionPage2ViewBase::tearDownScreen();
}
 800af66:	4770      	bx	lr

0800af68 <_ZN20InstructionPage2View11setupScreenEv>:
    InstructionPage2ViewBase::setupScreen();
 800af68:	f7fb b9d3 	b.w	8006312 <_ZN24InstructionPage2ViewBase11setupScreenEv>

0800af6c <_ZN20InstructionPage2ViewD0Ev>:
 800af6c:	b510      	push	{r4, lr}
 800af6e:	f44f 71ce 	mov.w	r1, #412	; 0x19c
 800af72:	4604      	mov	r4, r0
 800af74:	f020 f8f1 	bl	802b15a <_ZdlPvj>
 800af78:	4620      	mov	r0, r4
 800af7a:	bd10      	pop	{r4, pc}

0800af7c <_ZN20InstructionPage2ViewC1Ev>:
InstructionPage2View::InstructionPage2View()
 800af7c:	b510      	push	{r4, lr}
 800af7e:	4604      	mov	r4, r0
 800af80:	f7fb fa0a 	bl	8006398 <_ZN24InstructionPage2ViewBaseC1Ev>
 800af84:	4b01      	ldr	r3, [pc, #4]	; (800af8c <_ZN20InstructionPage2ViewC1Ev+0x10>)
 800af86:	6023      	str	r3, [r4, #0]
}
 800af88:	4620      	mov	r0, r4
 800af8a:	bd10      	pop	{r4, pc}
 800af8c:	08032794 	.word	0x08032794

0800af90 <_ZN18KnownPagePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~KnownPagePresenter() {};
 800af90:	4770      	bx	lr

0800af92 <_ZThn4_N18KnownPagePresenterD1Ev>:
 800af92:	3804      	subs	r0, #4
 800af94:	4770      	bx	lr

0800af96 <_ZN18KnownPagePresenter10deactivateEv>:
}

void KnownPagePresenter::activate()
{

}
 800af96:	4770      	bx	lr

0800af98 <_ZN18KnownPagePresenterD0Ev>:
 800af98:	b510      	push	{r4, lr}
 800af9a:	2110      	movs	r1, #16
 800af9c:	4604      	mov	r4, r0
 800af9e:	f020 f8dc 	bl	802b15a <_ZdlPvj>
 800afa2:	4620      	mov	r0, r4
 800afa4:	bd10      	pop	{r4, pc}

0800afa6 <_ZThn4_N18KnownPagePresenterD0Ev>:
 800afa6:	f1a0 0004 	sub.w	r0, r0, #4
 800afaa:	e7f5      	b.n	800af98 <_ZN18KnownPagePresenterD0Ev>

0800afac <_ZN18KnownPagePresenterC1ER13KnownPageView>:
KnownPagePresenter::KnownPagePresenter(KnownPageView& v)
 800afac:	b510      	push	{r4, lr}
 800afae:	2200      	movs	r2, #0
 800afb0:	6082      	str	r2, [r0, #8]
    : view(v)
 800afb2:	4a04      	ldr	r2, [pc, #16]	; (800afc4 <_ZN18KnownPagePresenterC1ER13KnownPageView+0x18>)
 800afb4:	60c1      	str	r1, [r0, #12]
 800afb6:	f102 0408 	add.w	r4, r2, #8
 800afba:	3220      	adds	r2, #32
 800afbc:	6004      	str	r4, [r0, #0]
 800afbe:	6042      	str	r2, [r0, #4]
}
 800afc0:	bd10      	pop	{r4, pc}
 800afc2:	bf00      	nop
 800afc4:	080327c0 	.word	0x080327c0

0800afc8 <_ZN13KnownPageViewD1Ev>:

class KnownPageView : public KnownPageViewBase
{
public:
    KnownPageView();
    virtual ~KnownPageView() {}
 800afc8:	4770      	bx	lr

0800afca <_ZN13KnownPageView14tearDownScreenEv>:
}

void KnownPageView::tearDownScreen()
{
    KnownPageViewBase::tearDownScreen();
}
 800afca:	4770      	bx	lr

0800afcc <_ZN13KnownPageView11setupScreenEv>:
    KnownPageViewBase::setupScreen();
 800afcc:	f7fb bb0a 	b.w	80065e4 <_ZN17KnownPageViewBase11setupScreenEv>

0800afd0 <_ZN13KnownPageViewD0Ev>:
 800afd0:	b510      	push	{r4, lr}
 800afd2:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
 800afd6:	4604      	mov	r4, r0
 800afd8:	f020 f8bf 	bl	802b15a <_ZdlPvj>
 800afdc:	4620      	mov	r0, r4
 800afde:	bd10      	pop	{r4, pc}

0800afe0 <_ZN13KnownPageViewC1Ev>:
KnownPageView::KnownPageView()
 800afe0:	b510      	push	{r4, lr}
 800afe2:	4604      	mov	r4, r0
 800afe4:	f7fb fb62 	bl	80066ac <_ZN17KnownPageViewBaseC1Ev>
 800afe8:	4b01      	ldr	r3, [pc, #4]	; (800aff0 <_ZN13KnownPageViewC1Ev+0x10>)
 800afea:	6023      	str	r3, [r4, #0]
}
 800afec:	4620      	mov	r0, r4
 800afee:	bd10      	pop	{r4, pc}
 800aff0:	080327f0 	.word	0x080327f0

0800aff4 <_ZN5ModelC1Ev>:
     extern osMessageQueueId_t SaveDataCheckHandle;
     extern osMessageQueueId_t SaveDataEndHandle;
    // extern osMessageQueueId_t SaveDataCheckHandle;

}
 Model::Model() : modelListener(0)
 800aff4:	2200      	movs	r2, #0
 800aff6:	6002      	str	r2, [r0, #0]
{
   // messageQ = xQueueGenericCreate(1, 1, 0);
}
 800aff8:	4770      	bx	lr

0800affa <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800affa:	4770      	bx	lr

0800affc <_ZN5Model15CallmeasurementEv>:

void Model::Callmeasurement()
{
	osMessageQueuePut(CallMeasurementHandle, &counter,0, 20);
 800affc:	4803      	ldr	r0, [pc, #12]	; (800b00c <_ZN5Model15CallmeasurementEv+0x10>)
 800affe:	4904      	ldr	r1, [pc, #16]	; (800b010 <_ZN5Model15CallmeasurementEv+0x14>)
 800b000:	6800      	ldr	r0, [r0, #0]
 800b002:	2314      	movs	r3, #20
 800b004:	2200      	movs	r2, #0
 800b006:	f004 b96f 	b.w	800f2e8 <osMessageQueuePut>
 800b00a:	bf00      	nop
 800b00c:	20002b70 	.word	0x20002b70
 800b010:	20000020 	.word	0x20000020

0800b014 <_ZN5Model13ProgressCheckEv>:

}

void Model::ProgressCheck()
{
 800b014:	b510      	push	{r4, lr}
	osMessageQueueGet(ProgressBarHandle, &Progress,0, osWaitForever);
 800b016:	480f      	ldr	r0, [pc, #60]	; (800b054 <_ZN5Model13ProgressCheckEv+0x40>)
 800b018:	4c0f      	ldr	r4, [pc, #60]	; (800b058 <_ZN5Model13ProgressCheckEv+0x44>)
 800b01a:	6800      	ldr	r0, [r0, #0]
 800b01c:	f04f 33ff 	mov.w	r3, #4294967295
 800b020:	2200      	movs	r2, #0
 800b022:	4621      	mov	r1, r4
 800b024:	f004 f9a2 	bl	800f36c <osMessageQueueGet>
	ProgressUpdate=((float)Progress-5)/25*100;
 800b028:	ed94 7a00 	vldr	s14, [r4]
 800b02c:	4b0b      	ldr	r3, [pc, #44]	; (800b05c <_ZN5Model13ProgressCheckEv+0x48>)
 800b02e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b032:	eef1 7a04 	vmov.f32	s15, #20	; 0x40a00000  5.0
 800b036:	ee37 7a67 	vsub.f32	s14, s14, s15
 800b03a:	eef3 6a09 	vmov.f32	s13, #57	; 0x41c80000  25.0
 800b03e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800b042:	ed9f 7a07 	vldr	s14, [pc, #28]	; 800b060 <_ZN5Model13ProgressCheckEv+0x4c>
 800b046:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b04a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b04e:	edc3 7a00 	vstr	s15, [r3]
}
 800b052:	bd10      	pop	{r4, pc}
 800b054:	20002b88 	.word	0x20002b88
 800b058:	2000d398 	.word	0x2000d398
 800b05c:	2000d39c 	.word	0x2000d39c
 800b060:	42c80000 	.word	0x42c80000

0800b064 <_ZN5Model13DataSaveStartEv>:

void Model::DataSaveStart(){
	osMessageQueuePut(SaveDataCheckHandle, &DSflag, 0, 20);
 800b064:	4803      	ldr	r0, [pc, #12]	; (800b074 <_ZN5Model13DataSaveStartEv+0x10>)
 800b066:	4904      	ldr	r1, [pc, #16]	; (800b078 <_ZN5Model13DataSaveStartEv+0x14>)
 800b068:	6800      	ldr	r0, [r0, #0]
 800b06a:	2314      	movs	r3, #20
 800b06c:	2200      	movs	r2, #0
 800b06e:	f004 b93b 	b.w	800f2e8 <osMessageQueuePut>
 800b072:	bf00      	nop
 800b074:	20002c84 	.word	0x20002c84
 800b078:	2000001c 	.word	0x2000001c

0800b07c <_ZN15PIPagePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~PIPagePresenter() {};
 800b07c:	4770      	bx	lr

0800b07e <_ZThn4_N15PIPagePresenterD1Ev>:
 800b07e:	3804      	subs	r0, #4
 800b080:	4770      	bx	lr

0800b082 <_ZN15PIPagePresenter10deactivateEv>:
}

void PIPagePresenter::activate()
{

}
 800b082:	4770      	bx	lr

0800b084 <_ZN15PIPagePresenterD0Ev>:
 800b084:	b510      	push	{r4, lr}
 800b086:	2110      	movs	r1, #16
 800b088:	4604      	mov	r4, r0
 800b08a:	f020 f866 	bl	802b15a <_ZdlPvj>
 800b08e:	4620      	mov	r0, r4
 800b090:	bd10      	pop	{r4, pc}

0800b092 <_ZThn4_N15PIPagePresenterD0Ev>:
 800b092:	f1a0 0004 	sub.w	r0, r0, #4
 800b096:	e7f5      	b.n	800b084 <_ZN15PIPagePresenterD0Ev>

0800b098 <_ZN15PIPagePresenterC1ER10PIPageView>:
PIPagePresenter::PIPagePresenter(PIPageView& v)
 800b098:	b510      	push	{r4, lr}
 800b09a:	2200      	movs	r2, #0
 800b09c:	6082      	str	r2, [r0, #8]
    : view(v)
 800b09e:	4a04      	ldr	r2, [pc, #16]	; (800b0b0 <_ZN15PIPagePresenterC1ER10PIPageView+0x18>)
 800b0a0:	60c1      	str	r1, [r0, #12]
 800b0a2:	f102 0408 	add.w	r4, r2, #8
 800b0a6:	3220      	adds	r2, #32
 800b0a8:	6004      	str	r4, [r0, #0]
 800b0aa:	6042      	str	r2, [r0, #4]
}
 800b0ac:	bd10      	pop	{r4, pc}
 800b0ae:	bf00      	nop
 800b0b0:	08032820 	.word	0x08032820

0800b0b4 <_ZN10PIPageViewD1Ev>:

class PIPageView : public PIPageViewBase
{
public:
    PIPageView();
    virtual ~PIPageView() {}
 800b0b4:	4770      	bx	lr

0800b0b6 <_ZN10PIPageView14tearDownScreenEv>:
}

void PIPageView::tearDownScreen()
{
    PIPageViewBase::tearDownScreen();
}
 800b0b6:	4770      	bx	lr

0800b0b8 <_ZN10PIPageView11setupScreenEv>:
    PIPageViewBase::setupScreen();
 800b0b8:	f7fb bc09 	b.w	80068ce <_ZN14PIPageViewBase11setupScreenEv>

0800b0bc <_ZN10PIPageViewD0Ev>:
 800b0bc:	b510      	push	{r4, lr}
 800b0be:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800b0c2:	4604      	mov	r4, r0
 800b0c4:	f020 f849 	bl	802b15a <_ZdlPvj>
 800b0c8:	4620      	mov	r0, r4
 800b0ca:	bd10      	pop	{r4, pc}

0800b0cc <_ZN10PIPageViewC1Ev>:
PIPageView::PIPageView()
 800b0cc:	b510      	push	{r4, lr}
 800b0ce:	4604      	mov	r4, r0
 800b0d0:	f7fb fc34 	bl	800693c <_ZN14PIPageViewBaseC1Ev>
 800b0d4:	4b01      	ldr	r3, [pc, #4]	; (800b0dc <_ZN10PIPageViewC1Ev+0x10>)
 800b0d6:	6023      	str	r3, [r4, #0]
}
 800b0d8:	4620      	mov	r0, r4
 800b0da:	bd10      	pop	{r4, pc}
 800b0dc:	08032850 	.word	0x08032850

0800b0e0 <_ZN20ProgressBarPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ProgressBarPresenter() {};
 800b0e0:	4770      	bx	lr

0800b0e2 <_ZThn4_N20ProgressBarPresenterD1Ev>:
 800b0e2:	3804      	subs	r0, #4
 800b0e4:	4770      	bx	lr

0800b0e6 <_ZN20ProgressBarPresenter10deactivateEv>:
}

void ProgressBarPresenter::activate()
{

}
 800b0e6:	4770      	bx	lr

0800b0e8 <_ZN20ProgressBarPresenterD0Ev>:
 800b0e8:	b510      	push	{r4, lr}
 800b0ea:	2110      	movs	r1, #16
 800b0ec:	4604      	mov	r4, r0
 800b0ee:	f020 f834 	bl	802b15a <_ZdlPvj>
 800b0f2:	4620      	mov	r0, r4
 800b0f4:	bd10      	pop	{r4, pc}

0800b0f6 <_ZThn4_N20ProgressBarPresenterD0Ev>:
 800b0f6:	f1a0 0004 	sub.w	r0, r0, #4
 800b0fa:	e7f5      	b.n	800b0e8 <_ZN20ProgressBarPresenterD0Ev>

0800b0fc <_ZN20ProgressBarPresenterC1ER15ProgressBarView>:
ProgressBarPresenter::ProgressBarPresenter(ProgressBarView& v)
 800b0fc:	b510      	push	{r4, lr}
 800b0fe:	2200      	movs	r2, #0
 800b100:	6082      	str	r2, [r0, #8]
    : view(v)
 800b102:	4a04      	ldr	r2, [pc, #16]	; (800b114 <_ZN20ProgressBarPresenterC1ER15ProgressBarView+0x18>)
 800b104:	60c1      	str	r1, [r0, #12]
 800b106:	f102 0408 	add.w	r4, r2, #8
 800b10a:	3220      	adds	r2, #32
 800b10c:	6004      	str	r4, [r0, #0]
 800b10e:	6042      	str	r2, [r0, #4]
}
 800b110:	bd10      	pop	{r4, pc}
 800b112:	bf00      	nop
 800b114:	0803287c 	.word	0x0803287c

0800b118 <_ZN20ProgressBarPresenter17ProgressPresenterEv>:
{

}

void ProgressBarPresenter::ProgressPresenter(){
	model->ProgressCheck();
 800b118:	6880      	ldr	r0, [r0, #8]
 800b11a:	f7ff bf7b 	b.w	800b014 <_ZN5Model13ProgressCheckEv>

0800b11e <_ZN15ProgressBarViewD1Ev>:

class ProgressBarView : public ProgressBarViewBase
{
public:
    ProgressBarView();
    virtual ~ProgressBarView() {}
 800b11e:	4770      	bx	lr

0800b120 <_ZN15ProgressBarView14tearDownScreenEv>:
}

void ProgressBarView::tearDownScreen()
{
    ProgressBarViewBase::tearDownScreen();
}
 800b120:	4770      	bx	lr

0800b122 <_ZN15ProgressBarView11setupScreenEv>:
    ProgressBarViewBase::setupScreen();
 800b122:	f7fb bcee 	b.w	8006b02 <_ZN19ProgressBarViewBase11setupScreenEv>

0800b126 <_ZN15ProgressBarViewD0Ev>:
 800b126:	b510      	push	{r4, lr}
 800b128:	f241 51e8 	movw	r1, #5608	; 0x15e8
 800b12c:	4604      	mov	r4, r0
 800b12e:	f020 f814 	bl	802b15a <_ZdlPvj>
 800b132:	4620      	mov	r0, r4
 800b134:	bd10      	pop	{r4, pc}
	...

0800b138 <_ZN15ProgressBarView15handleTickEventEv>:

extern int ProgressUpdate;
void ProgressBarView::handleTickEvent(){
 800b138:	b538      	push	{r3, r4, r5, lr}
  presenter->ProgressPresenter();
  circleProgress1.setValue(ProgressUpdate);
 800b13a:	4d0c      	ldr	r5, [pc, #48]	; (800b16c <_ZN15ProgressBarView15handleTickEventEv+0x34>)
void ProgressBarView::handleTickEvent(){
 800b13c:	4604      	mov	r4, r0
  presenter->ProgressPresenter();
 800b13e:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800b140:	f7ff ffea 	bl	800b118 <_ZN20ProgressBarPresenter17ProgressPresenterEv>
  circleProgress1.setValue(ProgressUpdate);
 800b144:	6829      	ldr	r1, [r5, #0]
 800b146:	f104 0098 	add.w	r0, r4, #152	; 0x98
 800b14a:	f006 fbf3 	bl	8011934 <_ZN8touchgfx14CircleProgress8setValueEi>
  textProgress1.setValue(ProgressUpdate);
 800b14e:	6829      	ldr	r1, [r5, #0]
 800b150:	f504 70e6 	add.w	r0, r4, #460	; 0x1cc
 800b154:	f006 fa92 	bl	801167c <_ZN8touchgfx12TextProgress8setValueEi>
  if(ProgressUpdate==100){
 800b158:	682b      	ldr	r3, [r5, #0]
 800b15a:	2b64      	cmp	r3, #100	; 0x64
 800b15c:	d105      	bne.n	800b16a <_ZN15ProgressBarView15handleTickEventEv+0x32>
 800b15e:	f00e f913 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
	  application().gotoDataDisplayListScreenSlideTransitionNorth();
  }
}
 800b162:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	  application().gotoDataDisplayListScreenSlideTransitionNorth();
 800b166:	f7f9 bd07 	b.w	8004b78 <_ZN23FrontendApplicationBase45gotoDataDisplayListScreenSlideTransitionNorthEv>
}
 800b16a:	bd38      	pop	{r3, r4, r5, pc}
 800b16c:	2000d39c 	.word	0x2000d39c

0800b170 <_ZN15ProgressBarViewC1Ev>:
ProgressBarView::ProgressBarView()
 800b170:	b510      	push	{r4, lr}
 800b172:	4604      	mov	r4, r0
 800b174:	f7fb fd0e 	bl	8006b94 <_ZN19ProgressBarViewBaseC1Ev>
 800b178:	4b01      	ldr	r3, [pc, #4]	; (800b180 <_ZN15ProgressBarViewC1Ev+0x10>)
 800b17a:	6023      	str	r3, [r4, #0]
}
 800b17c:	4620      	mov	r0, r4
 800b17e:	bd10      	pop	{r4, pc}
 800b180:	080328ac 	.word	0x080328ac

0800b184 <_ZN23ReactanceGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ReactanceGraphPresenter() {};
 800b184:	4770      	bx	lr

0800b186 <_ZThn4_N23ReactanceGraphPresenterD1Ev>:
 800b186:	3804      	subs	r0, #4
 800b188:	4770      	bx	lr

0800b18a <_ZN23ReactanceGraphPresenter10deactivateEv>:
}

void ReactanceGraphPresenter::activate()
{

}
 800b18a:	4770      	bx	lr

0800b18c <_ZN23ReactanceGraphPresenterD0Ev>:
 800b18c:	b510      	push	{r4, lr}
 800b18e:	2110      	movs	r1, #16
 800b190:	4604      	mov	r4, r0
 800b192:	f01f ffe2 	bl	802b15a <_ZdlPvj>
 800b196:	4620      	mov	r0, r4
 800b198:	bd10      	pop	{r4, pc}

0800b19a <_ZThn4_N23ReactanceGraphPresenterD0Ev>:
 800b19a:	f1a0 0004 	sub.w	r0, r0, #4
 800b19e:	e7f5      	b.n	800b18c <_ZN23ReactanceGraphPresenterD0Ev>

0800b1a0 <_ZN23ReactanceGraphPresenterC1ER18ReactanceGraphView>:
ReactanceGraphPresenter::ReactanceGraphPresenter(ReactanceGraphView& v)
 800b1a0:	b510      	push	{r4, lr}
 800b1a2:	2200      	movs	r2, #0
 800b1a4:	6082      	str	r2, [r0, #8]
    : view(v)
 800b1a6:	4a04      	ldr	r2, [pc, #16]	; (800b1b8 <_ZN23ReactanceGraphPresenterC1ER18ReactanceGraphView+0x18>)
 800b1a8:	60c1      	str	r1, [r0, #12]
 800b1aa:	f102 0408 	add.w	r4, r2, #8
 800b1ae:	3220      	adds	r2, #32
 800b1b0:	6004      	str	r4, [r0, #0]
 800b1b2:	6042      	str	r2, [r0, #4]
}
 800b1b4:	bd10      	pop	{r4, pc}
 800b1b6:	bf00      	nop
 800b1b8:	080328d8 	.word	0x080328d8

0800b1bc <_ZN18ReactanceGraphViewD1Ev>:

class ReactanceGraphView : public ReactanceGraphViewBase
{
public:
    ReactanceGraphView();
    virtual ~ReactanceGraphView() {}
 800b1bc:	4770      	bx	lr

0800b1be <_ZN18ReactanceGraphView14tearDownScreenEv>:
}

void ReactanceGraphView::tearDownScreen()
{
    ReactanceGraphViewBase::tearDownScreen();
}
 800b1be:	4770      	bx	lr

0800b1c0 <_ZN18ReactanceGraphView11setupScreenEv>:
    ReactanceGraphViewBase::setupScreen();
 800b1c0:	f7fc b8a7 	b.w	8007312 <_ZN22ReactanceGraphViewBase11setupScreenEv>

0800b1c4 <_ZN18ReactanceGraphView13PlotReactanceEv>:

extern float Reactance[31];
int m=5;

void ReactanceGraphView::PlotReactance(){
 800b1c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


	//	presenter->RGraphPresenter();
		ReactanceGraph.clear();
 800b1c6:	f100 06d4 	add.w	r6, r0, #212	; 0xd4
void ReactanceGraphView::PlotReactance(){
 800b1ca:	ed2d 8b02 	vpush	{d8}
		for(m=5;m<31;m++){
 800b1ce:	4d33      	ldr	r5, [pc, #204]	; (800b29c <_ZN18ReactanceGraphView13PlotReactanceEv+0xd8>)
			ReactanceGraph.addDataPoint((float)m,(float)Reactance[m]);
 800b1d0:	4f33      	ldr	r7, [pc, #204]	; (800b2a0 <_ZN18ReactanceGraphView13PlotReactanceEv+0xdc>)
void ReactanceGraphView::PlotReactance(){
 800b1d2:	4604      	mov	r4, r0
		ReactanceGraph.clear();
 800b1d4:	4630      	mov	r0, r6
 800b1d6:	f009 fb57 	bl	8014888 <_ZN8touchgfx17AbstractDataGraph5clearEv>
		for(m=5;m<31;m++){
 800b1da:	2305      	movs	r3, #5
 800b1dc:	602b      	str	r3, [r5, #0]
 800b1de:	eeb7 8a08 	vmov.f32	s16, #120	; 0x3fc00000  1.5
            return int(fs + 0.5f);
 800b1e2:	eef6 8a00 	vmov.f32	s17, #96	; 0x3f000000  0.5
 800b1e6:	682b      	ldr	r3, [r5, #0]
 800b1e8:	2b1e      	cmp	r3, #30
 800b1ea:	dc54      	bgt.n	800b296 <_ZN18ReactanceGraphView13PlotReactanceEv+0xd2>
        const float fs = f * scale;
 800b1ec:	edd4 7a41 	vldr	s15, [r4, #260]	; 0x104
			ReactanceGraph.addDataPoint((float)m,(float)Reactance[m]);
 800b1f0:	ee07 3a10 	vmov	s14, r3
 800b1f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b1f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b1fc:	eb07 0283 	add.w	r2, r7, r3, lsl #2
 800b200:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b204:	edd2 6a00 	vldr	s13, [r2]
        if (fs >= 0)
 800b208:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b20c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b210:	db1d      	blt.n	800b24e <_ZN18ReactanceGraphView13PlotReactanceEv+0x8a>
            return int(fs + 0.5f);
 800b212:	ee77 7aa8 	vadd.f32	s15, s15, s17
 800b216:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b21a:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800b21e:	edd4 7a42 	vldr	s15, [r4, #264]	; 0x108
 800b222:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b226:	ee67 7aa6 	vmul.f32	s15, s15, s13
        if (fs >= 0)
 800b22a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b22e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b232:	db1e      	blt.n	800b272 <_ZN18ReactanceGraphView13PlotReactanceEv+0xae>
            return int(fs + 0.5f);
 800b234:	ee77 7aa8 	vadd.f32	s15, s15, s17
 800b238:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b23c:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800b240:	4630      	mov	r0, r6
 800b242:	f009 ff3d 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
		for(m=5;m<31;m++){
 800b246:	682b      	ldr	r3, [r5, #0]
 800b248:	3301      	adds	r3, #1
 800b24a:	602b      	str	r3, [r5, #0]
 800b24c:	e7cb      	b.n	800b1e6 <_ZN18ReactanceGraphView13PlotReactanceEv+0x22>
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 800b24e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800b252:	eeb8 6ac7 	vcvt.f32.s32	s12, s14
 800b256:	ee17 3a10 	vmov	r3, s14
 800b25a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 800b25e:	1e59      	subs	r1, r3, #1
 800b260:	ee77 7a88 	vadd.f32	s15, s15, s16
 800b264:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b268:	ee17 3a90 	vmov	r3, s15
 800b26c:	440b      	add	r3, r1
 800b26e:	4619      	mov	r1, r3
 800b270:	e7d5      	b.n	800b21e <_ZN18ReactanceGraphView13PlotReactanceEv+0x5a>
 800b272:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800b276:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800b27a:	ee17 3a10 	vmov	r3, s14
 800b27e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800b282:	1e5a      	subs	r2, r3, #1
 800b284:	ee77 7a88 	vadd.f32	s15, s15, s16
 800b288:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b28c:	ee17 3a90 	vmov	r3, s15
 800b290:	4413      	add	r3, r2
 800b292:	461a      	mov	r2, r3
 800b294:	e7d4      	b.n	800b240 <_ZN18ReactanceGraphView13PlotReactanceEv+0x7c>
		}
}
 800b296:	ecbd 8b02 	vpop	{d8}
 800b29a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b29c:	20000024 	.word	0x20000024
 800b2a0:	20002b8c 	.word	0x20002b8c

0800b2a4 <_ZN18ReactanceGraphViewD0Ev>:
 800b2a4:	b510      	push	{r4, lr}
 800b2a6:	f241 71b8 	movw	r1, #6072	; 0x17b8
 800b2aa:	4604      	mov	r4, r0
 800b2ac:	f01f ff55 	bl	802b15a <_ZdlPvj>
 800b2b0:	4620      	mov	r0, r4
 800b2b2:	bd10      	pop	{r4, pc}

0800b2b4 <_ZN18ReactanceGraphViewC1Ev>:
ReactanceGraphView::ReactanceGraphView()
 800b2b4:	b510      	push	{r4, lr}
 800b2b6:	4604      	mov	r4, r0
 800b2b8:	f7fc f940 	bl	800753c <_ZN22ReactanceGraphViewBaseC1Ev>
 800b2bc:	4b01      	ldr	r3, [pc, #4]	; (800b2c4 <_ZN18ReactanceGraphViewC1Ev+0x10>)
 800b2be:	6023      	str	r3, [r4, #0]
}
 800b2c0:	4620      	mov	r0, r4
 800b2c2:	bd10      	pop	{r4, pc}
 800b2c4:	08032908 	.word	0x08032908

0800b2c8 <_ZN24ResistanceGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ResistanceGraphPresenter() {};
 800b2c8:	4770      	bx	lr

0800b2ca <_ZThn4_N24ResistanceGraphPresenterD1Ev>:
 800b2ca:	3804      	subs	r0, #4
 800b2cc:	4770      	bx	lr

0800b2ce <_ZN24ResistanceGraphPresenter10deactivateEv>:
}

void ResistanceGraphPresenter::activate()
{

}
 800b2ce:	4770      	bx	lr

0800b2d0 <_ZN24ResistanceGraphPresenterD0Ev>:
 800b2d0:	b510      	push	{r4, lr}
 800b2d2:	2110      	movs	r1, #16
 800b2d4:	4604      	mov	r4, r0
 800b2d6:	f01f ff40 	bl	802b15a <_ZdlPvj>
 800b2da:	4620      	mov	r0, r4
 800b2dc:	bd10      	pop	{r4, pc}

0800b2de <_ZThn4_N24ResistanceGraphPresenterD0Ev>:
 800b2de:	f1a0 0004 	sub.w	r0, r0, #4
 800b2e2:	e7f5      	b.n	800b2d0 <_ZN24ResistanceGraphPresenterD0Ev>

0800b2e4 <_ZN24ResistanceGraphPresenterC1ER19ResistanceGraphView>:
ResistanceGraphPresenter::ResistanceGraphPresenter(ResistanceGraphView& v)
 800b2e4:	b510      	push	{r4, lr}
 800b2e6:	2200      	movs	r2, #0
 800b2e8:	6082      	str	r2, [r0, #8]
    : view(v)
 800b2ea:	4a04      	ldr	r2, [pc, #16]	; (800b2fc <_ZN24ResistanceGraphPresenterC1ER19ResistanceGraphView+0x18>)
 800b2ec:	60c1      	str	r1, [r0, #12]
 800b2ee:	f102 0408 	add.w	r4, r2, #8
 800b2f2:	3220      	adds	r2, #32
 800b2f4:	6004      	str	r4, [r0, #0]
 800b2f6:	6042      	str	r2, [r0, #4]
}
 800b2f8:	bd10      	pop	{r4, pc}
 800b2fa:	bf00      	nop
 800b2fc:	08032938 	.word	0x08032938

0800b300 <_ZN19ResistanceGraphViewD1Ev>:

class ResistanceGraphView : public ResistanceGraphViewBase
{
public:
    ResistanceGraphView();
    virtual ~ResistanceGraphView() {}
 800b300:	4770      	bx	lr

0800b302 <_ZN19ResistanceGraphView14tearDownScreenEv>:
}

void ResistanceGraphView::tearDownScreen()
{
    ResistanceGraphViewBase::tearDownScreen();
}
 800b302:	4770      	bx	lr

0800b304 <_ZN19ResistanceGraphView11setupScreenEv>:
    ResistanceGraphViewBase::setupScreen();
 800b304:	f7fd bc78 	b.w	8008bf8 <_ZN23ResistanceGraphViewBase11setupScreenEv>

0800b308 <_ZN19ResistanceGraphView14PlotResistanceEv>:

extern float Resistance[31];
int n=5;

void ResistanceGraphView::PlotResistance(){
 800b308:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

//	presenter->RGraphPresenter();
	ResistanceGraph.clear();
 800b30a:	f100 0698 	add.w	r6, r0, #152	; 0x98
void ResistanceGraphView::PlotResistance(){
 800b30e:	ed2d 8b02 	vpush	{d8}
	for(n=5;n<31;n++){
 800b312:	4d33      	ldr	r5, [pc, #204]	; (800b3e0 <_ZN19ResistanceGraphView14PlotResistanceEv+0xd8>)
		ResistanceGraph.addDataPoint((float)n,(float)Resistance[n]);
 800b314:	4f33      	ldr	r7, [pc, #204]	; (800b3e4 <_ZN19ResistanceGraphView14PlotResistanceEv+0xdc>)
void ResistanceGraphView::PlotResistance(){
 800b316:	4604      	mov	r4, r0
	ResistanceGraph.clear();
 800b318:	4630      	mov	r0, r6
 800b31a:	f009 fab5 	bl	8014888 <_ZN8touchgfx17AbstractDataGraph5clearEv>
	for(n=5;n<31;n++){
 800b31e:	2305      	movs	r3, #5
 800b320:	602b      	str	r3, [r5, #0]
 800b322:	eeb7 8a08 	vmov.f32	s16, #120	; 0x3fc00000  1.5
            return int(fs + 0.5f);
 800b326:	eef6 8a00 	vmov.f32	s17, #96	; 0x3f000000  0.5
 800b32a:	682b      	ldr	r3, [r5, #0]
 800b32c:	2b1e      	cmp	r3, #30
 800b32e:	dc54      	bgt.n	800b3da <_ZN19ResistanceGraphView14PlotResistanceEv+0xd2>
        const float fs = f * scale;
 800b330:	edd4 7a32 	vldr	s15, [r4, #200]	; 0xc8
		ResistanceGraph.addDataPoint((float)n,(float)Resistance[n]);
 800b334:	ee07 3a10 	vmov	s14, r3
 800b338:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b33c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b340:	eb07 0283 	add.w	r2, r7, r3, lsl #2
 800b344:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b348:	edd2 6a00 	vldr	s13, [r2]
        if (fs >= 0)
 800b34c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b350:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b354:	db1d      	blt.n	800b392 <_ZN19ResistanceGraphView14PlotResistanceEv+0x8a>
            return int(fs + 0.5f);
 800b356:	ee77 7aa8 	vadd.f32	s15, s15, s17
 800b35a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b35e:	ee17 1a90 	vmov	r1, s15
        const float fs = f * scale;
 800b362:	edd4 7a33 	vldr	s15, [r4, #204]	; 0xcc
 800b366:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b36a:	ee67 7aa6 	vmul.f32	s15, s15, s13
        if (fs >= 0)
 800b36e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b372:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b376:	db1e      	blt.n	800b3b6 <_ZN19ResistanceGraphView14PlotResistanceEv+0xae>
            return int(fs + 0.5f);
 800b378:	ee77 7aa8 	vadd.f32	s15, s15, s17
 800b37c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b380:	ee17 2a90 	vmov	r2, s15
        return addValue(float2scaledX(x), float2scaledY(y));
 800b384:	4630      	mov	r0, r6
 800b386:	f009 fe9b 	bl	80150c0 <_ZN8touchgfx9GraphData8addValueEii>
	for(n=5;n<31;n++){
 800b38a:	682b      	ldr	r3, [r5, #0]
 800b38c:	3301      	adds	r3, #1
 800b38e:	602b      	str	r3, [r5, #0]
 800b390:	e7cb      	b.n	800b32a <_ZN19ResistanceGraphView14PlotResistanceEv+0x22>
        return (int(fs) - 1) + int(1.5f + (fs - int(fs)));
 800b392:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800b396:	eeb8 6ac7 	vcvt.f32.s32	s12, s14
 800b39a:	ee17 3a10 	vmov	r3, s14
 800b39e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 800b3a2:	1e59      	subs	r1, r3, #1
 800b3a4:	ee77 7a88 	vadd.f32	s15, s15, s16
 800b3a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b3ac:	ee17 3a90 	vmov	r3, s15
 800b3b0:	440b      	add	r3, r1
 800b3b2:	4619      	mov	r1, r3
 800b3b4:	e7d5      	b.n	800b362 <_ZN19ResistanceGraphView14PlotResistanceEv+0x5a>
 800b3b6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800b3ba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800b3be:	ee17 3a10 	vmov	r3, s14
 800b3c2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800b3c6:	1e5a      	subs	r2, r3, #1
 800b3c8:	ee77 7a88 	vadd.f32	s15, s15, s16
 800b3cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b3d0:	ee17 3a90 	vmov	r3, s15
 800b3d4:	4413      	add	r3, r2
 800b3d6:	461a      	mov	r2, r3
 800b3d8:	e7d4      	b.n	800b384 <_ZN19ResistanceGraphView14PlotResistanceEv+0x7c>
	}
}
 800b3da:	ecbd 8b02 	vpop	{d8}
 800b3de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b3e0:	20000028 	.word	0x20000028
 800b3e4:	20002c08 	.word	0x20002c08

0800b3e8 <_ZN19ResistanceGraphViewD0Ev>:
 800b3e8:	b510      	push	{r4, lr}
 800b3ea:	f241 71b8 	movw	r1, #6072	; 0x17b8
 800b3ee:	4604      	mov	r4, r0
 800b3f0:	f01f feb3 	bl	802b15a <_ZdlPvj>
 800b3f4:	4620      	mov	r0, r4
 800b3f6:	bd10      	pop	{r4, pc}

0800b3f8 <_ZN19ResistanceGraphViewC1Ev>:
ResistanceGraphView::ResistanceGraphView()
 800b3f8:	b510      	push	{r4, lr}
 800b3fa:	4604      	mov	r4, r0
 800b3fc:	f7fd fc36 	bl	8008c6c <_ZN23ResistanceGraphViewBaseC1Ev>
 800b400:	4b01      	ldr	r3, [pc, #4]	; (800b408 <_ZN19ResistanceGraphViewC1Ev+0x10>)
 800b402:	6023      	str	r3, [r4, #0]
}
 800b404:	4620      	mov	r0, r4
 800b406:	bd10      	pop	{r4, pc}
 800b408:	08032968 	.word	0x08032968

0800b40c <_ZN25StartMeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartMeasurementPresenter() {};
 800b40c:	4770      	bx	lr

0800b40e <_ZThn4_N25StartMeasurementPresenterD1Ev>:
 800b40e:	3804      	subs	r0, #4
 800b410:	4770      	bx	lr

0800b412 <_ZN25StartMeasurementPresenter10deactivateEv>:
}

void StartMeasurementPresenter::activate()
{

}
 800b412:	4770      	bx	lr

0800b414 <_ZN25StartMeasurementPresenterD0Ev>:
 800b414:	b510      	push	{r4, lr}
 800b416:	2110      	movs	r1, #16
 800b418:	4604      	mov	r4, r0
 800b41a:	f01f fe9e 	bl	802b15a <_ZdlPvj>
 800b41e:	4620      	mov	r0, r4
 800b420:	bd10      	pop	{r4, pc}

0800b422 <_ZThn4_N25StartMeasurementPresenterD0Ev>:
 800b422:	f1a0 0004 	sub.w	r0, r0, #4
 800b426:	e7f5      	b.n	800b414 <_ZN25StartMeasurementPresenterD0Ev>

0800b428 <_ZN25StartMeasurementPresenterC1ER20StartMeasurementView>:
StartMeasurementPresenter::StartMeasurementPresenter(StartMeasurementView& v)
 800b428:	b510      	push	{r4, lr}
 800b42a:	2200      	movs	r2, #0
 800b42c:	6082      	str	r2, [r0, #8]
    : view(v)
 800b42e:	4a04      	ldr	r2, [pc, #16]	; (800b440 <_ZN25StartMeasurementPresenterC1ER20StartMeasurementView+0x18>)
 800b430:	60c1      	str	r1, [r0, #12]
 800b432:	f102 0408 	add.w	r4, r2, #8
 800b436:	3220      	adds	r2, #32
 800b438:	6004      	str	r4, [r0, #0]
 800b43a:	6042      	str	r2, [r0, #4]
}
 800b43c:	bd10      	pop	{r4, pc}
 800b43e:	bf00      	nop
 800b440:	08032998 	.word	0x08032998

0800b444 <_ZN25StartMeasurementPresenter11SMpresenterEv>:
{

}

void StartMeasurementPresenter::SMpresenter(){
	model->Callmeasurement();
 800b444:	6880      	ldr	r0, [r0, #8]
 800b446:	f7ff bdd9 	b.w	800affc <_ZN5Model15CallmeasurementEv>

0800b44a <_ZN20StartMeasurementViewD1Ev>:

class StartMeasurementView : public StartMeasurementViewBase
{
public:
    StartMeasurementView();
    virtual ~StartMeasurementView() {}
 800b44a:	4770      	bx	lr

0800b44c <_ZN20StartMeasurementView14tearDownScreenEv>:
}

void StartMeasurementView::tearDownScreen()
{
    StartMeasurementViewBase::tearDownScreen();
}
 800b44c:	4770      	bx	lr

0800b44e <_ZN20StartMeasurementView11setupScreenEv>:
    StartMeasurementViewBase::setupScreen();
 800b44e:	f7fe bf69 	b.w	800a324 <_ZN24StartMeasurementViewBase11setupScreenEv>

0800b452 <_ZN20StartMeasurementView16StartMeasurementEv>:

void StartMeasurementView::StartMeasurement()
{
  presenter->SMpresenter();
 800b452:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800b454:	f7ff bff6 	b.w	800b444 <_ZN25StartMeasurementPresenter11SMpresenterEv>

0800b458 <_ZN20StartMeasurementViewD0Ev>:
 800b458:	b510      	push	{r4, lr}
 800b45a:	f44f 7194 	mov.w	r1, #296	; 0x128
 800b45e:	4604      	mov	r4, r0
 800b460:	f01f fe7b 	bl	802b15a <_ZdlPvj>
 800b464:	4620      	mov	r0, r4
 800b466:	bd10      	pop	{r4, pc}

0800b468 <_ZN20StartMeasurementViewC1Ev>:
StartMeasurementView::StartMeasurementView()
 800b468:	b510      	push	{r4, lr}
 800b46a:	4604      	mov	r4, r0
 800b46c:	f7fe ff96 	bl	800a39c <_ZN24StartMeasurementViewBaseC1Ev>
 800b470:	4b01      	ldr	r3, [pc, #4]	; (800b478 <_ZN20StartMeasurementViewC1Ev+0x10>)
 800b472:	6023      	str	r3, [r4, #0]
}
 800b474:	4620      	mov	r0, r4
 800b476:	bd10      	pop	{r4, pc}
 800b478:	080329c8 	.word	0x080329c8

0800b47c <_ZN18StartPagePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartPagePresenter() {};
 800b47c:	4770      	bx	lr

0800b47e <_ZThn4_N18StartPagePresenterD1Ev>:
 800b47e:	3804      	subs	r0, #4
 800b480:	4770      	bx	lr

0800b482 <_ZN18StartPagePresenter10deactivateEv>:
}

void StartPagePresenter::activate()
{

}
 800b482:	4770      	bx	lr

0800b484 <_ZN18StartPagePresenterD0Ev>:
 800b484:	b510      	push	{r4, lr}
 800b486:	2110      	movs	r1, #16
 800b488:	4604      	mov	r4, r0
 800b48a:	f01f fe66 	bl	802b15a <_ZdlPvj>
 800b48e:	4620      	mov	r0, r4
 800b490:	bd10      	pop	{r4, pc}

0800b492 <_ZThn4_N18StartPagePresenterD0Ev>:
 800b492:	f1a0 0004 	sub.w	r0, r0, #4
 800b496:	e7f5      	b.n	800b484 <_ZN18StartPagePresenterD0Ev>

0800b498 <_ZN18StartPagePresenterC1ER13StartPageView>:
StartPagePresenter::StartPagePresenter(StartPageView& v)
 800b498:	b510      	push	{r4, lr}
 800b49a:	2200      	movs	r2, #0
 800b49c:	6082      	str	r2, [r0, #8]
    : view(v)
 800b49e:	4a04      	ldr	r2, [pc, #16]	; (800b4b0 <_ZN18StartPagePresenterC1ER13StartPageView+0x18>)
 800b4a0:	60c1      	str	r1, [r0, #12]
 800b4a2:	f102 0408 	add.w	r4, r2, #8
 800b4a6:	3220      	adds	r2, #32
 800b4a8:	6004      	str	r4, [r0, #0]
 800b4aa:	6042      	str	r2, [r0, #4]
}
 800b4ac:	bd10      	pop	{r4, pc}
 800b4ae:	bf00      	nop
 800b4b0:	080329f8 	.word	0x080329f8

0800b4b4 <_ZN13StartPageViewD1Ev>:

class StartPageView : public StartPageViewBase
{
public:
    StartPageView();
    virtual ~StartPageView() {}
 800b4b4:	4770      	bx	lr

0800b4b6 <_ZN13StartPageView14tearDownScreenEv>:
}

void StartPageView::tearDownScreen()
{
    StartPageViewBase::tearDownScreen();
}
 800b4b6:	4770      	bx	lr

0800b4b8 <_ZN13StartPageView11setupScreenEv>:
    StartPageViewBase::setupScreen();
 800b4b8:	f7ff b85d 	b.w	800a576 <_ZN17StartPageViewBase11setupScreenEv>

0800b4bc <_ZN13StartPageViewD0Ev>:
 800b4bc:	b510      	push	{r4, lr}
 800b4be:	f44f 71ba 	mov.w	r1, #372	; 0x174
 800b4c2:	4604      	mov	r4, r0
 800b4c4:	f01f fe49 	bl	802b15a <_ZdlPvj>
 800b4c8:	4620      	mov	r0, r4
 800b4ca:	bd10      	pop	{r4, pc}

0800b4cc <_ZN13StartPageViewC1Ev>:
StartPageView::StartPageView()
 800b4cc:	b510      	push	{r4, lr}
 800b4ce:	4604      	mov	r4, r0
 800b4d0:	f7ff f88a 	bl	800a5e8 <_ZN17StartPageViewBaseC1Ev>
 800b4d4:	4b01      	ldr	r3, [pc, #4]	; (800b4dc <_ZN13StartPageViewC1Ev+0x10>)
 800b4d6:	6023      	str	r3, [r4, #0]
}
 800b4d8:	4620      	mov	r0, r4
 800b4da:	bd10      	pop	{r4, pc}
 800b4dc:	08032a28 	.word	0x08032a28

0800b4e0 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800b4e0:	20f0      	movs	r0, #240	; 0xf0
 800b4e2:	4770      	bx	lr

0800b4e4 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800b4e4:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800b4e8:	4770      	bx	lr

0800b4ea <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800b4ea:	2029      	movs	r0, #41	; 0x29
 800b4ec:	f7f7 b8d6 	b.w	800269c <LCD_IO_WriteReg>

0800b4f0 <ili9341_DisplayOff>:
 800b4f0:	2028      	movs	r0, #40	; 0x28
 800b4f2:	f7f7 b8d3 	b.w	800269c <LCD_IO_WriteReg>

0800b4f6 <ili9341_Init>:
{
 800b4f6:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b4f8:	f7f7 f8a4 	bl	8002644 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800b4fc:	20ca      	movs	r0, #202	; 0xca
 800b4fe:	f7f7 f8cd 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b502:	20c3      	movs	r0, #195	; 0xc3
 800b504:	f7f7 f8ae 	bl	8002664 <LCD_IO_WriteData>
 800b508:	2008      	movs	r0, #8
 800b50a:	f7f7 f8ab 	bl	8002664 <LCD_IO_WriteData>
 800b50e:	2050      	movs	r0, #80	; 0x50
 800b510:	f7f7 f8a8 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b514:	20cf      	movs	r0, #207	; 0xcf
 800b516:	f7f7 f8c1 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b51a:	2000      	movs	r0, #0
 800b51c:	f7f7 f8a2 	bl	8002664 <LCD_IO_WriteData>
 800b520:	20c1      	movs	r0, #193	; 0xc1
 800b522:	f7f7 f89f 	bl	8002664 <LCD_IO_WriteData>
 800b526:	2030      	movs	r0, #48	; 0x30
 800b528:	f7f7 f89c 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b52c:	20ed      	movs	r0, #237	; 0xed
 800b52e:	f7f7 f8b5 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b532:	2064      	movs	r0, #100	; 0x64
 800b534:	f7f7 f896 	bl	8002664 <LCD_IO_WriteData>
 800b538:	2003      	movs	r0, #3
 800b53a:	f7f7 f893 	bl	8002664 <LCD_IO_WriteData>
 800b53e:	2012      	movs	r0, #18
 800b540:	f7f7 f890 	bl	8002664 <LCD_IO_WriteData>
 800b544:	2081      	movs	r0, #129	; 0x81
 800b546:	f7f7 f88d 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b54a:	20e8      	movs	r0, #232	; 0xe8
 800b54c:	f7f7 f8a6 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b550:	2085      	movs	r0, #133	; 0x85
 800b552:	f7f7 f887 	bl	8002664 <LCD_IO_WriteData>
 800b556:	2000      	movs	r0, #0
 800b558:	f7f7 f884 	bl	8002664 <LCD_IO_WriteData>
 800b55c:	2078      	movs	r0, #120	; 0x78
 800b55e:	f7f7 f881 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b562:	20cb      	movs	r0, #203	; 0xcb
 800b564:	f7f7 f89a 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b568:	2039      	movs	r0, #57	; 0x39
 800b56a:	f7f7 f87b 	bl	8002664 <LCD_IO_WriteData>
 800b56e:	202c      	movs	r0, #44	; 0x2c
 800b570:	f7f7 f878 	bl	8002664 <LCD_IO_WriteData>
 800b574:	2000      	movs	r0, #0
 800b576:	f7f7 f875 	bl	8002664 <LCD_IO_WriteData>
 800b57a:	2034      	movs	r0, #52	; 0x34
 800b57c:	f7f7 f872 	bl	8002664 <LCD_IO_WriteData>
 800b580:	2002      	movs	r0, #2
 800b582:	f7f7 f86f 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b586:	20f7      	movs	r0, #247	; 0xf7
 800b588:	f7f7 f888 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b58c:	2020      	movs	r0, #32
 800b58e:	f7f7 f869 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b592:	20ea      	movs	r0, #234	; 0xea
 800b594:	f7f7 f882 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b598:	2000      	movs	r0, #0
 800b59a:	f7f7 f863 	bl	8002664 <LCD_IO_WriteData>
 800b59e:	2000      	movs	r0, #0
 800b5a0:	f7f7 f860 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5a4:	20b1      	movs	r0, #177	; 0xb1
 800b5a6:	f7f7 f879 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5aa:	2000      	movs	r0, #0
 800b5ac:	f7f7 f85a 	bl	8002664 <LCD_IO_WriteData>
 800b5b0:	201b      	movs	r0, #27
 800b5b2:	f7f7 f857 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5b6:	20b6      	movs	r0, #182	; 0xb6
 800b5b8:	f7f7 f870 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5bc:	200a      	movs	r0, #10
 800b5be:	f7f7 f851 	bl	8002664 <LCD_IO_WriteData>
 800b5c2:	20a2      	movs	r0, #162	; 0xa2
 800b5c4:	f7f7 f84e 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5c8:	20c0      	movs	r0, #192	; 0xc0
 800b5ca:	f7f7 f867 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5ce:	2010      	movs	r0, #16
 800b5d0:	f7f7 f848 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5d4:	20c1      	movs	r0, #193	; 0xc1
 800b5d6:	f7f7 f861 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5da:	2010      	movs	r0, #16
 800b5dc:	f7f7 f842 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5e0:	20c5      	movs	r0, #197	; 0xc5
 800b5e2:	f7f7 f85b 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5e6:	2045      	movs	r0, #69	; 0x45
 800b5e8:	f7f7 f83c 	bl	8002664 <LCD_IO_WriteData>
 800b5ec:	2015      	movs	r0, #21
 800b5ee:	f7f7 f839 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5f2:	20c7      	movs	r0, #199	; 0xc7
 800b5f4:	f7f7 f852 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b5f8:	2090      	movs	r0, #144	; 0x90
 800b5fa:	f7f7 f833 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b5fe:	2036      	movs	r0, #54	; 0x36
 800b600:	f7f7 f84c 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b604:	20c8      	movs	r0, #200	; 0xc8
 800b606:	f7f7 f82d 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b60a:	20f2      	movs	r0, #242	; 0xf2
 800b60c:	f7f7 f846 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b610:	2000      	movs	r0, #0
 800b612:	f7f7 f827 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b616:	20b0      	movs	r0, #176	; 0xb0
 800b618:	f7f7 f840 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b61c:	20c2      	movs	r0, #194	; 0xc2
 800b61e:	f7f7 f821 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b622:	20b6      	movs	r0, #182	; 0xb6
 800b624:	f7f7 f83a 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b628:	200a      	movs	r0, #10
 800b62a:	f7f7 f81b 	bl	8002664 <LCD_IO_WriteData>
 800b62e:	20a7      	movs	r0, #167	; 0xa7
 800b630:	f7f7 f818 	bl	8002664 <LCD_IO_WriteData>
 800b634:	2027      	movs	r0, #39	; 0x27
 800b636:	f7f7 f815 	bl	8002664 <LCD_IO_WriteData>
 800b63a:	2004      	movs	r0, #4
 800b63c:	f7f7 f812 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b640:	202a      	movs	r0, #42	; 0x2a
 800b642:	f7f7 f82b 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b646:	2000      	movs	r0, #0
 800b648:	f7f7 f80c 	bl	8002664 <LCD_IO_WriteData>
 800b64c:	2000      	movs	r0, #0
 800b64e:	f7f7 f809 	bl	8002664 <LCD_IO_WriteData>
 800b652:	2000      	movs	r0, #0
 800b654:	f7f7 f806 	bl	8002664 <LCD_IO_WriteData>
 800b658:	20ef      	movs	r0, #239	; 0xef
 800b65a:	f7f7 f803 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b65e:	202b      	movs	r0, #43	; 0x2b
 800b660:	f7f7 f81c 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b664:	2000      	movs	r0, #0
 800b666:	f7f6 fffd 	bl	8002664 <LCD_IO_WriteData>
 800b66a:	2000      	movs	r0, #0
 800b66c:	f7f6 fffa 	bl	8002664 <LCD_IO_WriteData>
 800b670:	2001      	movs	r0, #1
 800b672:	f7f6 fff7 	bl	8002664 <LCD_IO_WriteData>
 800b676:	203f      	movs	r0, #63	; 0x3f
 800b678:	f7f6 fff4 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b67c:	20f6      	movs	r0, #246	; 0xf6
 800b67e:	f7f7 f80d 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b682:	2001      	movs	r0, #1
 800b684:	f7f6 ffee 	bl	8002664 <LCD_IO_WriteData>
 800b688:	2000      	movs	r0, #0
 800b68a:	f7f6 ffeb 	bl	8002664 <LCD_IO_WriteData>
 800b68e:	2006      	movs	r0, #6
 800b690:	f7f6 ffe8 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b694:	202c      	movs	r0, #44	; 0x2c
 800b696:	f7f7 f801 	bl	800269c <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b69a:	20c8      	movs	r0, #200	; 0xc8
 800b69c:	f7f7 f84c 	bl	8002738 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b6a0:	2026      	movs	r0, #38	; 0x26
 800b6a2:	f7f6 fffb 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b6a6:	2001      	movs	r0, #1
 800b6a8:	f7f6 ffdc 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b6ac:	20e0      	movs	r0, #224	; 0xe0
 800b6ae:	f7f6 fff5 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b6b2:	200f      	movs	r0, #15
 800b6b4:	f7f6 ffd6 	bl	8002664 <LCD_IO_WriteData>
 800b6b8:	2029      	movs	r0, #41	; 0x29
 800b6ba:	f7f6 ffd3 	bl	8002664 <LCD_IO_WriteData>
 800b6be:	2024      	movs	r0, #36	; 0x24
 800b6c0:	f7f6 ffd0 	bl	8002664 <LCD_IO_WriteData>
 800b6c4:	200c      	movs	r0, #12
 800b6c6:	f7f6 ffcd 	bl	8002664 <LCD_IO_WriteData>
 800b6ca:	200e      	movs	r0, #14
 800b6cc:	f7f6 ffca 	bl	8002664 <LCD_IO_WriteData>
 800b6d0:	2009      	movs	r0, #9
 800b6d2:	f7f6 ffc7 	bl	8002664 <LCD_IO_WriteData>
 800b6d6:	204e      	movs	r0, #78	; 0x4e
 800b6d8:	f7f6 ffc4 	bl	8002664 <LCD_IO_WriteData>
 800b6dc:	2078      	movs	r0, #120	; 0x78
 800b6de:	f7f6 ffc1 	bl	8002664 <LCD_IO_WriteData>
 800b6e2:	203c      	movs	r0, #60	; 0x3c
 800b6e4:	f7f6 ffbe 	bl	8002664 <LCD_IO_WriteData>
 800b6e8:	2009      	movs	r0, #9
 800b6ea:	f7f6 ffbb 	bl	8002664 <LCD_IO_WriteData>
 800b6ee:	2013      	movs	r0, #19
 800b6f0:	f7f6 ffb8 	bl	8002664 <LCD_IO_WriteData>
 800b6f4:	2005      	movs	r0, #5
 800b6f6:	f7f6 ffb5 	bl	8002664 <LCD_IO_WriteData>
 800b6fa:	2017      	movs	r0, #23
 800b6fc:	f7f6 ffb2 	bl	8002664 <LCD_IO_WriteData>
 800b700:	2011      	movs	r0, #17
 800b702:	f7f6 ffaf 	bl	8002664 <LCD_IO_WriteData>
 800b706:	2000      	movs	r0, #0
 800b708:	f7f6 ffac 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b70c:	20e1      	movs	r0, #225	; 0xe1
 800b70e:	f7f6 ffc5 	bl	800269c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b712:	2000      	movs	r0, #0
 800b714:	f7f6 ffa6 	bl	8002664 <LCD_IO_WriteData>
 800b718:	2016      	movs	r0, #22
 800b71a:	f7f6 ffa3 	bl	8002664 <LCD_IO_WriteData>
 800b71e:	201b      	movs	r0, #27
 800b720:	f7f6 ffa0 	bl	8002664 <LCD_IO_WriteData>
 800b724:	2004      	movs	r0, #4
 800b726:	f7f6 ff9d 	bl	8002664 <LCD_IO_WriteData>
 800b72a:	2011      	movs	r0, #17
 800b72c:	f7f6 ff9a 	bl	8002664 <LCD_IO_WriteData>
 800b730:	2007      	movs	r0, #7
 800b732:	f7f6 ff97 	bl	8002664 <LCD_IO_WriteData>
 800b736:	2031      	movs	r0, #49	; 0x31
 800b738:	f7f6 ff94 	bl	8002664 <LCD_IO_WriteData>
 800b73c:	2033      	movs	r0, #51	; 0x33
 800b73e:	f7f6 ff91 	bl	8002664 <LCD_IO_WriteData>
 800b742:	2042      	movs	r0, #66	; 0x42
 800b744:	f7f6 ff8e 	bl	8002664 <LCD_IO_WriteData>
 800b748:	2005      	movs	r0, #5
 800b74a:	f7f6 ff8b 	bl	8002664 <LCD_IO_WriteData>
 800b74e:	200c      	movs	r0, #12
 800b750:	f7f6 ff88 	bl	8002664 <LCD_IO_WriteData>
 800b754:	200a      	movs	r0, #10
 800b756:	f7f6 ff85 	bl	8002664 <LCD_IO_WriteData>
 800b75a:	2028      	movs	r0, #40	; 0x28
 800b75c:	f7f6 ff82 	bl	8002664 <LCD_IO_WriteData>
 800b760:	202f      	movs	r0, #47	; 0x2f
 800b762:	f7f6 ff7f 	bl	8002664 <LCD_IO_WriteData>
 800b766:	200f      	movs	r0, #15
 800b768:	f7f6 ff7c 	bl	8002664 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b76c:	2011      	movs	r0, #17
 800b76e:	f7f6 ff95 	bl	800269c <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b772:	20c8      	movs	r0, #200	; 0xc8
 800b774:	f7f6 ffe0 	bl	8002738 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b778:	2029      	movs	r0, #41	; 0x29
 800b77a:	f7f6 ff8f 	bl	800269c <LCD_IO_WriteReg>
}
 800b77e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800b782:	202c      	movs	r0, #44	; 0x2c
 800b784:	f7f6 bf8a 	b.w	800269c <LCD_IO_WriteReg>

0800b788 <ili9341_ReadID>:
{
 800b788:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b78a:	f7f6 ff5b 	bl	8002644 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800b78e:	2103      	movs	r1, #3
 800b790:	20d3      	movs	r0, #211	; 0xd3
 800b792:	f7f6 ff9f 	bl	80026d4 <LCD_IO_ReadData>
}
 800b796:	b280      	uxth	r0, r0
 800b798:	bd08      	pop	{r3, pc}

0800b79a <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800b79a:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b79c:	b2c4      	uxtb	r4, r0
 800b79e:	2202      	movs	r2, #2
 800b7a0:	2103      	movs	r1, #3
 800b7a2:	4620      	mov	r0, r4
 800b7a4:	f7f6 ff04 	bl	80025b0 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 800b7a8:	200a      	movs	r0, #10
 800b7aa:	f7f6 ff49 	bl	8002640 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b7ae:	4620      	mov	r0, r4
 800b7b0:	2200      	movs	r2, #0
 800b7b2:	2103      	movs	r1, #3
 800b7b4:	f7f6 fefc 	bl	80025b0 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 800b7b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b7bc:	2002      	movs	r0, #2
 800b7be:	f7f6 bf3f 	b.w	8002640 <IOE_Delay>

0800b7c2 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 800b7c2:	b538      	push	{r3, r4, r5, lr}
 800b7c4:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b7c6:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 800b7c8:	f7f6 fef0 	bl	80025ac <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b7cc:	2100      	movs	r1, #0
 800b7ce:	4620      	mov	r0, r4
 800b7d0:	f7f6 ff06 	bl	80025e0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b7d4:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b7d6:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b7d8:	4620      	mov	r0, r4
 800b7da:	f7f6 ff01 	bl	80025e0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b7de:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 800b7e2:	b280      	uxth	r0, r0
 800b7e4:	bd38      	pop	{r3, r4, r5, pc}

0800b7e6 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800b7e6:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800b7e8:	b2c4      	uxtb	r4, r0
 800b7ea:	2140      	movs	r1, #64	; 0x40
 800b7ec:	4620      	mov	r0, r4
 800b7ee:	f7f6 fef7 	bl	80025e0 <IOE_Read>
  
  if(state > 0)
 800b7f2:	0603      	lsls	r3, r0, #24
 800b7f4:	d507      	bpl.n	800b806 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800b7f6:	214c      	movs	r1, #76	; 0x4c
 800b7f8:	4620      	mov	r0, r4
 800b7fa:	f7f6 fef1 	bl	80025e0 <IOE_Read>
    {
      ret = 1;
 800b7fe:	3800      	subs	r0, #0
 800b800:	bf18      	it	ne
 800b802:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 800b804:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b806:	2201      	movs	r2, #1
 800b808:	214b      	movs	r1, #75	; 0x4b
 800b80a:	4620      	mov	r0, r4
 800b80c:	f7f6 fed0 	bl	80025b0 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b810:	4620      	mov	r0, r4
 800b812:	2200      	movs	r2, #0
 800b814:	214b      	movs	r1, #75	; 0x4b
 800b816:	f7f6 fecb 	bl	80025b0 <IOE_Write>
  uint8_t ret = 0;
 800b81a:	2000      	movs	r0, #0
 800b81c:	e7f2      	b.n	800b804 <stmpe811_TS_DetectTouch+0x1e>

0800b81e <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800b81e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b820:	2304      	movs	r3, #4
 800b822:	b2c4      	uxtb	r4, r0
{
 800b824:	460e      	mov	r6, r1
 800b826:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b828:	21d7      	movs	r1, #215	; 0xd7
 800b82a:	eb0d 0203 	add.w	r2, sp, r3
 800b82e:	4620      	mov	r0, r4
 800b830:	f7f6 fef0 	bl	8002614 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800b834:	9b01      	ldr	r3, [sp, #4]
 800b836:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b838:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b83a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b83e:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b840:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b842:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b844:	2201      	movs	r2, #1
 800b846:	214b      	movs	r1, #75	; 0x4b
 800b848:	f7f6 feb2 	bl	80025b0 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b84c:	2200      	movs	r2, #0
 800b84e:	214b      	movs	r1, #75	; 0x4b
 800b850:	4620      	mov	r0, r4
 800b852:	f7f6 fead 	bl	80025b0 <IOE_Write>
}
 800b856:	b002      	add	sp, #8
 800b858:	bd70      	pop	{r4, r5, r6, pc}
	...

0800b85c <stmpe811_Init>:
{
 800b85c:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800b85e:	4b0a      	ldr	r3, [pc, #40]	; (800b888 <stmpe811_Init+0x2c>)
 800b860:	781a      	ldrb	r2, [r3, #0]
 800b862:	4290      	cmp	r0, r2
{
 800b864:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800b866:	d00d      	beq.n	800b884 <stmpe811_Init+0x28>
 800b868:	7859      	ldrb	r1, [r3, #1]
 800b86a:	4288      	cmp	r0, r1
 800b86c:	d00a      	beq.n	800b884 <stmpe811_Init+0x28>
 800b86e:	b10a      	cbz	r2, 800b874 <stmpe811_Init+0x18>
 800b870:	b941      	cbnz	r1, 800b884 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800b872:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 800b874:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 800b876:	f7f6 fe99 	bl	80025ac <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800b87a:	4620      	mov	r0, r4
}
 800b87c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 800b880:	f7ff bf8b 	b.w	800b79a <stmpe811_Reset>
}
 800b884:	bd10      	pop	{r4, pc}
 800b886:	bf00      	nop
 800b888:	2000d3a0 	.word	0x2000d3a0

0800b88c <stmpe811_EnableGlobalIT>:
{
 800b88c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b88e:	b2c4      	uxtb	r4, r0
 800b890:	2109      	movs	r1, #9
 800b892:	4620      	mov	r0, r4
 800b894:	f7f6 fea4 	bl	80025e0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800b898:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b89c:	b2c2      	uxtb	r2, r0
 800b89e:	2109      	movs	r1, #9
 800b8a0:	4620      	mov	r0, r4
}
 800b8a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b8a6:	f7f6 be83 	b.w	80025b0 <IOE_Write>

0800b8aa <stmpe811_DisableGlobalIT>:
{
 800b8aa:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b8ac:	b2c4      	uxtb	r4, r0
 800b8ae:	2109      	movs	r1, #9
 800b8b0:	4620      	mov	r0, r4
 800b8b2:	f7f6 fe95 	bl	80025e0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b8b6:	2109      	movs	r1, #9
 800b8b8:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800b8bc:	4620      	mov	r0, r4
}
 800b8be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b8c2:	f7f6 be75 	b.w	80025b0 <IOE_Write>

0800b8c6 <stmpe811_EnableITSource>:
{
 800b8c6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b8c8:	b2c4      	uxtb	r4, r0
{
 800b8ca:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b8cc:	4620      	mov	r0, r4
 800b8ce:	210a      	movs	r1, #10
 800b8d0:	f7f6 fe86 	bl	80025e0 <IOE_Read>
  tmp |= Source; 
 800b8d4:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b8d6:	b2c2      	uxtb	r2, r0
 800b8d8:	210a      	movs	r1, #10
 800b8da:	4620      	mov	r0, r4
}
 800b8dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b8e0:	f7f6 be66 	b.w	80025b0 <IOE_Write>

0800b8e4 <stmpe811_TS_EnableIT>:
{
 800b8e4:	b507      	push	{r0, r1, r2, lr}
 800b8e6:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 800b8e8:	f7f6 fe61 	bl	80025ae <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 800b8ec:	9801      	ldr	r0, [sp, #4]
 800b8ee:	211f      	movs	r1, #31
 800b8f0:	f7ff ffe9 	bl	800b8c6 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 800b8f4:	9801      	ldr	r0, [sp, #4]
}
 800b8f6:	b003      	add	sp, #12
 800b8f8:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 800b8fc:	f7ff bfc6 	b.w	800b88c <stmpe811_EnableGlobalIT>

0800b900 <stmpe811_DisableITSource>:
{
 800b900:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b902:	b2c4      	uxtb	r4, r0
{
 800b904:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b906:	4620      	mov	r0, r4
 800b908:	210a      	movs	r1, #10
 800b90a:	f7f6 fe69 	bl	80025e0 <IOE_Read>
  tmp &= ~Source; 
 800b90e:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b912:	b2c2      	uxtb	r2, r0
 800b914:	210a      	movs	r1, #10
 800b916:	4620      	mov	r0, r4
}
 800b918:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b91c:	f7f6 be48 	b.w	80025b0 <IOE_Write>

0800b920 <stmpe811_TS_DisableIT>:
{
 800b920:	b510      	push	{r4, lr}
 800b922:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 800b924:	f7ff ffc1 	bl	800b8aa <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800b928:	4620      	mov	r0, r4
 800b92a:	211f      	movs	r1, #31
}
 800b92c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800b930:	f7ff bfe6 	b.w	800b900 <stmpe811_DisableITSource>

0800b934 <stmpe811_ReadGITStatus>:
{
 800b934:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b936:	b2c0      	uxtb	r0, r0
{
 800b938:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b93a:	210b      	movs	r1, #11
 800b93c:	f7f6 fe50 	bl	80025e0 <IOE_Read>
}
 800b940:	4020      	ands	r0, r4
 800b942:	bd10      	pop	{r4, pc}

0800b944 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 800b944:	211f      	movs	r1, #31
 800b946:	f7ff bff5 	b.w	800b934 <stmpe811_ReadGITStatus>

0800b94a <stmpe811_ClearGlobalIT>:
{
 800b94a:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800b94c:	b2c0      	uxtb	r0, r0
 800b94e:	210b      	movs	r1, #11
 800b950:	f7f6 be2e 	b.w	80025b0 <IOE_Write>

0800b954 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 800b954:	211f      	movs	r1, #31
 800b956:	f7ff bff8 	b.w	800b94a <stmpe811_ClearGlobalIT>

0800b95a <stmpe811_IO_EnableAF>:
{
 800b95a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b95c:	b2c4      	uxtb	r4, r0
{
 800b95e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b960:	4620      	mov	r0, r4
 800b962:	2117      	movs	r1, #23
 800b964:	f7f6 fe3c 	bl	80025e0 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 800b968:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b96c:	b2c2      	uxtb	r2, r0
 800b96e:	2117      	movs	r1, #23
 800b970:	4620      	mov	r0, r4
}
 800b972:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b976:	f7f6 be1b 	b.w	80025b0 <IOE_Write>

0800b97a <stmpe811_TS_Start>:
{
 800b97a:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b97c:	b2c4      	uxtb	r4, r0
{
 800b97e:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b980:	2104      	movs	r1, #4
 800b982:	4620      	mov	r0, r4
 800b984:	f7f6 fe2c 	bl	80025e0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b988:	2104      	movs	r1, #4
 800b98a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b98e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b990:	4620      	mov	r0, r4
 800b992:	f7f6 fe0d 	bl	80025b0 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800b996:	4630      	mov	r0, r6
 800b998:	21f0      	movs	r1, #240	; 0xf0
 800b99a:	f7ff ffde 	bl	800b95a <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b99e:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800b9a2:	4620      	mov	r0, r4
 800b9a4:	2104      	movs	r1, #4
 800b9a6:	f7f6 fe03 	bl	80025b0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800b9aa:	2249      	movs	r2, #73	; 0x49
 800b9ac:	2120      	movs	r1, #32
 800b9ae:	4620      	mov	r0, r4
 800b9b0:	f7f6 fdfe 	bl	80025b0 <IOE_Write>
  IOE_Delay(2); 
 800b9b4:	2002      	movs	r0, #2
 800b9b6:	f7f6 fe43 	bl	8002640 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800b9ba:	4620      	mov	r0, r4
 800b9bc:	2201      	movs	r2, #1
 800b9be:	2121      	movs	r1, #33	; 0x21
 800b9c0:	f7f6 fdf6 	bl	80025b0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800b9c4:	4620      	mov	r0, r4
 800b9c6:	229a      	movs	r2, #154	; 0x9a
 800b9c8:	2141      	movs	r1, #65	; 0x41
 800b9ca:	f7f6 fdf1 	bl	80025b0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800b9ce:	4620      	mov	r0, r4
 800b9d0:	2201      	movs	r2, #1
 800b9d2:	214a      	movs	r1, #74	; 0x4a
 800b9d4:	f7f6 fdec 	bl	80025b0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b9d8:	4620      	mov	r0, r4
 800b9da:	2201      	movs	r2, #1
 800b9dc:	214b      	movs	r1, #75	; 0x4b
 800b9de:	f7f6 fde7 	bl	80025b0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b9e2:	4620      	mov	r0, r4
 800b9e4:	2200      	movs	r2, #0
 800b9e6:	214b      	movs	r1, #75	; 0x4b
 800b9e8:	f7f6 fde2 	bl	80025b0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800b9ec:	4620      	mov	r0, r4
 800b9ee:	2201      	movs	r2, #1
 800b9f0:	2156      	movs	r1, #86	; 0x56
 800b9f2:	f7f6 fddd 	bl	80025b0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800b9f6:	4620      	mov	r0, r4
 800b9f8:	2201      	movs	r2, #1
 800b9fa:	2158      	movs	r1, #88	; 0x58
 800b9fc:	f7f6 fdd8 	bl	80025b0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800ba00:	4620      	mov	r0, r4
 800ba02:	2201      	movs	r2, #1
 800ba04:	2140      	movs	r1, #64	; 0x40
 800ba06:	f7f6 fdd3 	bl	80025b0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800ba0a:	4620      	mov	r0, r4
 800ba0c:	22ff      	movs	r2, #255	; 0xff
 800ba0e:	210b      	movs	r1, #11
 800ba10:	f7f6 fdce 	bl	80025b0 <IOE_Write>
}
 800ba14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 800ba18:	2002      	movs	r0, #2
 800ba1a:	f7f6 be11 	b.w	8002640 <IOE_Delay>
	...

0800ba20 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800ba20:	4b05      	ldr	r3, [pc, #20]	; (800ba38 <SystemInit+0x18>)
 800ba22:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800ba26:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800ba2a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800ba2e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800ba32:	609a      	str	r2, [r3, #8]
#endif
}
 800ba34:	4770      	bx	lr
 800ba36:	bf00      	nop
 800ba38:	e000ed00 	.word	0xe000ed00

0800ba3c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800ba3c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800ba3e:	4b0b      	ldr	r3, [pc, #44]	; (800ba6c <HAL_Init+0x30>)
 800ba40:	681a      	ldr	r2, [r3, #0]
 800ba42:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ba46:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800ba48:	681a      	ldr	r2, [r3, #0]
 800ba4a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ba4e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800ba50:	681a      	ldr	r2, [r3, #0]
 800ba52:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ba56:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800ba58:	2003      	movs	r0, #3
 800ba5a:	f000 fb11 	bl	800c080 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800ba5e:	2000      	movs	r0, #0
 800ba60:	f7f7 fd60 	bl	8003524 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800ba64:	f7f7 f980 	bl	8002d68 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800ba68:	2000      	movs	r0, #0
 800ba6a:	bd08      	pop	{r3, pc}
 800ba6c:	40023c00 	.word	0x40023c00

0800ba70 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800ba70:	4a03      	ldr	r2, [pc, #12]	; (800ba80 <HAL_IncTick+0x10>)
 800ba72:	4b04      	ldr	r3, [pc, #16]	; (800ba84 <HAL_IncTick+0x14>)
 800ba74:	6811      	ldr	r1, [r2, #0]
 800ba76:	781b      	ldrb	r3, [r3, #0]
 800ba78:	440b      	add	r3, r1
 800ba7a:	6013      	str	r3, [r2, #0]
}
 800ba7c:	4770      	bx	lr
 800ba7e:	bf00      	nop
 800ba80:	2000d3a4 	.word	0x2000d3a4
 800ba84:	20000090 	.word	0x20000090

0800ba88 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800ba88:	4b01      	ldr	r3, [pc, #4]	; (800ba90 <HAL_GetTick+0x8>)
 800ba8a:	6818      	ldr	r0, [r3, #0]
}
 800ba8c:	4770      	bx	lr
 800ba8e:	bf00      	nop
 800ba90:	2000d3a4 	.word	0x2000d3a4

0800ba94 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800ba94:	b538      	push	{r3, r4, r5, lr}
 800ba96:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800ba98:	f7ff fff6 	bl	800ba88 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800ba9c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800ba9e:	bf1c      	itt	ne
 800baa0:	4b05      	ldrne	r3, [pc, #20]	; (800bab8 <HAL_Delay+0x24>)
 800baa2:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800baa4:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800baa6:	bf18      	it	ne
 800baa8:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800baaa:	f7ff ffed 	bl	800ba88 <HAL_GetTick>
 800baae:	1b43      	subs	r3, r0, r5
 800bab0:	42a3      	cmp	r3, r4
 800bab2:	d3fa      	bcc.n	800baaa <HAL_Delay+0x16>
  {
  }
}
 800bab4:	bd38      	pop	{r3, r4, r5, pc}
 800bab6:	bf00      	nop
 800bab8:	20000090 	.word	0x20000090

0800babc <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 800babc:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 800babe:	4604      	mov	r4, r0
 800bac0:	2800      	cmp	r0, #0
 800bac2:	f000 809b 	beq.w	800bbfc <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 800bac6:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800bac8:	b925      	cbnz	r5, 800bad4 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 800baca:	f7f7 f96d 	bl	8002da8 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 800bace:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 800bad0:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800bad4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bad6:	06db      	lsls	r3, r3, #27
 800bad8:	f100 808e 	bmi.w	800bbf8 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 800badc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bade:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800bae2:	f023 0302 	bic.w	r3, r3, #2
 800bae6:	f043 0302 	orr.w	r3, r3, #2
 800baea:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 800baec:	4b44      	ldr	r3, [pc, #272]	; (800bc00 <HAL_ADC_Init+0x144>)
 800baee:	685a      	ldr	r2, [r3, #4]
 800baf0:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 800baf4:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800baf6:	685a      	ldr	r2, [r3, #4]
 800baf8:	6861      	ldr	r1, [r4, #4]
 800bafa:	430a      	orrs	r2, r1
 800bafc:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800bafe:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800bb00:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800bb02:	685a      	ldr	r2, [r3, #4]
 800bb04:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800bb08:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800bb0a:	685a      	ldr	r2, [r3, #4]
 800bb0c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800bb10:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800bb12:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800bb14:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800bb16:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800bb1a:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800bb1c:	685a      	ldr	r2, [r3, #4]
 800bb1e:	430a      	orrs	r2, r1
 800bb20:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800bb22:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800bb24:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800bb26:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800bb2a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800bb2c:	689a      	ldr	r2, [r3, #8]
 800bb2e:	430a      	orrs	r2, r1
 800bb30:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800bb32:	4934      	ldr	r1, [pc, #208]	; (800bc04 <HAL_ADC_Init+0x148>)
 800bb34:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800bb36:	428a      	cmp	r2, r1
 800bb38:	d052      	beq.n	800bbe0 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800bb3a:	6899      	ldr	r1, [r3, #8]
 800bb3c:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 800bb40:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800bb42:	6899      	ldr	r1, [r3, #8]
 800bb44:	430a      	orrs	r2, r1
 800bb46:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800bb48:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800bb4a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800bb4c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800bb50:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800bb52:	689a      	ldr	r2, [r3, #8]
 800bb54:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800bb56:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800bb58:	689a      	ldr	r2, [r3, #8]
 800bb5a:	f022 0202 	bic.w	r2, r2, #2
 800bb5e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 800bb60:	689a      	ldr	r2, [r3, #8]
 800bb62:	7e21      	ldrb	r1, [r4, #24]
 800bb64:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 800bb68:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 800bb6a:	f894 2020 	ldrb.w	r2, [r4, #32]
 800bb6e:	2a00      	cmp	r2, #0
 800bb70:	d03e      	beq.n	800bbf0 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800bb72:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800bb74:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800bb76:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800bb7a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 800bb7c:	685a      	ldr	r2, [r3, #4]
 800bb7e:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800bb82:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800bb84:	685a      	ldr	r2, [r3, #4]
 800bb86:	3901      	subs	r1, #1
 800bb88:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800bb8c:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800bb8e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800bb90:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800bb92:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800bb96:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800bb98:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800bb9a:	3901      	subs	r1, #1
 800bb9c:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 800bba0:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800bba2:	689a      	ldr	r2, [r3, #8]
 800bba4:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800bba8:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800bbaa:	689a      	ldr	r2, [r3, #8]
 800bbac:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 800bbb0:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 800bbb4:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800bbb6:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800bbb8:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800bbba:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bbbe:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800bbc0:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800bbc2:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800bbc4:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 800bbc8:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800bbca:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 800bbcc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bbce:	f023 0303 	bic.w	r3, r3, #3
 800bbd2:	f043 0301 	orr.w	r3, r3, #1
 800bbd6:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 800bbd8:	2300      	movs	r3, #0
 800bbda:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 800bbde:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800bbe0:	689a      	ldr	r2, [r3, #8]
 800bbe2:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800bbe6:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800bbe8:	689a      	ldr	r2, [r3, #8]
 800bbea:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800bbee:	e7b2      	b.n	800bb56 <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800bbf0:	685a      	ldr	r2, [r3, #4]
 800bbf2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800bbf6:	e7c9      	b.n	800bb8c <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 800bbf8:	2001      	movs	r0, #1
 800bbfa:	e7ed      	b.n	800bbd8 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 800bbfc:	2001      	movs	r0, #1
 800bbfe:	e7ee      	b.n	800bbde <HAL_ADC_Init+0x122>
 800bc00:	40012300 	.word	0x40012300
 800bc04:	0f000001 	.word	0x0f000001

0800bc08 <HAL_ADC_Start>:
{
 800bc08:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 800bc0a:	2300      	movs	r3, #0
 800bc0c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800bc0e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800bc12:	2b01      	cmp	r3, #1
 800bc14:	d060      	beq.n	800bcd8 <HAL_ADC_Start+0xd0>
 800bc16:	2301      	movs	r3, #1
 800bc18:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800bc1c:	6803      	ldr	r3, [r0, #0]
 800bc1e:	689a      	ldr	r2, [r3, #8]
 800bc20:	07d2      	lsls	r2, r2, #31
 800bc22:	d505      	bpl.n	800bc30 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 800bc24:	689a      	ldr	r2, [r3, #8]
 800bc26:	07d1      	lsls	r1, r2, #31
 800bc28:	d414      	bmi.n	800bc54 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 800bc2a:	2000      	movs	r0, #0
}
 800bc2c:	b002      	add	sp, #8
 800bc2e:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 800bc30:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800bc32:	492a      	ldr	r1, [pc, #168]	; (800bcdc <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 800bc34:	f042 0201 	orr.w	r2, r2, #1
 800bc38:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800bc3a:	4a29      	ldr	r2, [pc, #164]	; (800bce0 <HAL_ADC_Start+0xd8>)
 800bc3c:	6812      	ldr	r2, [r2, #0]
 800bc3e:	fbb2 f2f1 	udiv	r2, r2, r1
 800bc42:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 800bc46:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 800bc48:	9a01      	ldr	r2, [sp, #4]
 800bc4a:	2a00      	cmp	r2, #0
 800bc4c:	d0ea      	beq.n	800bc24 <HAL_ADC_Start+0x1c>
      counter--;
 800bc4e:	9a01      	ldr	r2, [sp, #4]
 800bc50:	3a01      	subs	r2, #1
 800bc52:	e7f8      	b.n	800bc46 <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 800bc54:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800bc56:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800bc5a:	f022 0201 	bic.w	r2, r2, #1
 800bc5e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800bc62:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 800bc64:	685a      	ldr	r2, [r3, #4]
 800bc66:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 800bc68:	bf41      	itttt	mi
 800bc6a:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 800bc6c:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 800bc70:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 800bc74:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800bc76:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800bc78:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 800bc7c:	bf1c      	itt	ne
 800bc7e:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 800bc80:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 800bc84:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 800bc86:	2200      	movs	r2, #0
 800bc88:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800bc8c:	f06f 0222 	mvn.w	r2, #34	; 0x22
 800bc90:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 800bc92:	4a14      	ldr	r2, [pc, #80]	; (800bce4 <HAL_ADC_Start+0xdc>)
 800bc94:	6851      	ldr	r1, [r2, #4]
 800bc96:	f011 0f1f 	tst.w	r1, #31
 800bc9a:	4913      	ldr	r1, [pc, #76]	; (800bce8 <HAL_ADC_Start+0xe0>)
 800bc9c:	d119      	bne.n	800bcd2 <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 800bc9e:	428b      	cmp	r3, r1
 800bca0:	d007      	beq.n	800bcb2 <HAL_ADC_Start+0xaa>
 800bca2:	f501 7180 	add.w	r1, r1, #256	; 0x100
 800bca6:	428b      	cmp	r3, r1
 800bca8:	d10c      	bne.n	800bcc4 <HAL_ADC_Start+0xbc>
 800bcaa:	6852      	ldr	r2, [r2, #4]
 800bcac:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800bcb0:	d1bb      	bne.n	800bc2a <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800bcb2:	6898      	ldr	r0, [r3, #8]
 800bcb4:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 800bcb8:	d1b7      	bne.n	800bc2a <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800bcba:	689a      	ldr	r2, [r3, #8]
 800bcbc:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800bcc0:	609a      	str	r2, [r3, #8]
 800bcc2:	e7b3      	b.n	800bc2c <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800bcc4:	4909      	ldr	r1, [pc, #36]	; (800bcec <HAL_ADC_Start+0xe4>)
 800bcc6:	428b      	cmp	r3, r1
 800bcc8:	d1af      	bne.n	800bc2a <HAL_ADC_Start+0x22>
 800bcca:	6852      	ldr	r2, [r2, #4]
 800bccc:	f012 0f10 	tst.w	r2, #16
 800bcd0:	e7ee      	b.n	800bcb0 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800bcd2:	428b      	cmp	r3, r1
 800bcd4:	d1a9      	bne.n	800bc2a <HAL_ADC_Start+0x22>
 800bcd6:	e7ec      	b.n	800bcb2 <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 800bcd8:	2002      	movs	r0, #2
 800bcda:	e7a7      	b.n	800bc2c <HAL_ADC_Start+0x24>
 800bcdc:	000f4240 	.word	0x000f4240
 800bce0:	2000008c 	.word	0x2000008c
 800bce4:	40012300 	.word	0x40012300
 800bce8:	40012000 	.word	0x40012000
 800bcec:	40012200 	.word	0x40012200

0800bcf0 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800bcf0:	6803      	ldr	r3, [r0, #0]
 800bcf2:	689a      	ldr	r2, [r3, #8]
 800bcf4:	0552      	lsls	r2, r2, #21
{
 800bcf6:	b570      	push	{r4, r5, r6, lr}
 800bcf8:	4604      	mov	r4, r0
 800bcfa:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800bcfc:	d50b      	bpl.n	800bd16 <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 800bcfe:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800bd00:	05de      	lsls	r6, r3, #23
 800bd02:	d508      	bpl.n	800bd16 <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800bd04:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800bd06:	f043 0320 	orr.w	r3, r3, #32
 800bd0a:	6403      	str	r3, [r0, #64]	; 0x40
    __HAL_UNLOCK(hadc);
 800bd0c:	2300      	movs	r3, #0
 800bd0e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    return HAL_ERROR;
 800bd12:	2001      	movs	r0, #1
}
 800bd14:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 800bd16:	f7ff feb7 	bl	800ba88 <HAL_GetTick>
 800bd1a:	4606      	mov	r6, r0
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800bd1c:	6823      	ldr	r3, [r4, #0]
 800bd1e:	681a      	ldr	r2, [r3, #0]
 800bd20:	0791      	lsls	r1, r2, #30
 800bd22:	d50c      	bpl.n	800bd3e <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 800bd24:	f06f 0212 	mvn.w	r2, #18
 800bd28:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800bd2a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800bd2c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bd30:	6422      	str	r2, [r4, #64]	; 0x40
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800bd32:	689a      	ldr	r2, [r3, #8]
 800bd34:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 800bd38:	d013      	beq.n	800bd62 <HAL_ADC_PollForConversion+0x72>
  return HAL_OK;
 800bd3a:	2000      	movs	r0, #0
 800bd3c:	e7ea      	b.n	800bd14 <HAL_ADC_PollForConversion+0x24>
    if(Timeout != HAL_MAX_DELAY)
 800bd3e:	1c68      	adds	r0, r5, #1
 800bd40:	d0ed      	beq.n	800bd1e <HAL_ADC_PollForConversion+0x2e>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 800bd42:	b945      	cbnz	r5, 800bd56 <HAL_ADC_PollForConversion+0x66>
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 800bd44:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bd46:	f043 0304 	orr.w	r3, r3, #4
 800bd4a:	6423      	str	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hadc);
 800bd4c:	2300      	movs	r3, #0
 800bd4e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_TIMEOUT;
 800bd52:	2003      	movs	r0, #3
 800bd54:	e7de      	b.n	800bd14 <HAL_ADC_PollForConversion+0x24>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 800bd56:	f7ff fe97 	bl	800ba88 <HAL_GetTick>
 800bd5a:	1b80      	subs	r0, r0, r6
 800bd5c:	42a8      	cmp	r0, r5
 800bd5e:	d9dd      	bls.n	800bd1c <HAL_ADC_PollForConversion+0x2c>
 800bd60:	e7f0      	b.n	800bd44 <HAL_ADC_PollForConversion+0x54>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800bd62:	7e20      	ldrb	r0, [r4, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800bd64:	2800      	cmp	r0, #0
 800bd66:	d1e8      	bne.n	800bd3a <HAL_ADC_PollForConversion+0x4a>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800bd68:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800bd6a:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 800bd6e:	d002      	beq.n	800bd76 <HAL_ADC_PollForConversion+0x86>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 800bd70:	689b      	ldr	r3, [r3, #8]
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800bd72:	055a      	lsls	r2, r3, #21
 800bd74:	d4e1      	bmi.n	800bd3a <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 800bd76:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bd78:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800bd7c:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800bd7e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bd80:	04db      	lsls	r3, r3, #19
 800bd82:	d4da      	bmi.n	800bd3a <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800bd84:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bd86:	f043 0301 	orr.w	r3, r3, #1
 800bd8a:	6423      	str	r3, [r4, #64]	; 0x40
 800bd8c:	e7c2      	b.n	800bd14 <HAL_ADC_PollForConversion+0x24>
	...

0800bd90 <HAL_ADC_Start_DMA>:
{
 800bd90:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bd92:	4613      	mov	r3, r2
  __IO uint32_t counter = 0U;
 800bd94:	2200      	movs	r2, #0
 800bd96:	9201      	str	r2, [sp, #4]
  __HAL_LOCK(hadc);
 800bd98:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800bd9c:	2a01      	cmp	r2, #1
{
 800bd9e:	4604      	mov	r4, r0
  __HAL_LOCK(hadc);
 800bda0:	d076      	beq.n	800be90 <HAL_ADC_Start_DMA+0x100>
 800bda2:	2201      	movs	r2, #1
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800bda4:	6805      	ldr	r5, [r0, #0]
  __HAL_LOCK(hadc);
 800bda6:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800bdaa:	68aa      	ldr	r2, [r5, #8]
 800bdac:	07d2      	lsls	r2, r2, #31
 800bdae:	d505      	bpl.n	800bdbc <HAL_ADC_Start_DMA+0x2c>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 800bdb0:	68aa      	ldr	r2, [r5, #8]
 800bdb2:	07d0      	lsls	r0, r2, #31
 800bdb4:	d415      	bmi.n	800bde2 <HAL_ADC_Start_DMA+0x52>
  return HAL_OK;
 800bdb6:	2000      	movs	r0, #0
}
 800bdb8:	b003      	add	sp, #12
 800bdba:	bd30      	pop	{r4, r5, pc}
    __HAL_ADC_ENABLE(hadc);
 800bdbc:	68aa      	ldr	r2, [r5, #8]
 800bdbe:	f042 0201 	orr.w	r2, r2, #1
 800bdc2:	60aa      	str	r2, [r5, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800bdc4:	4a33      	ldr	r2, [pc, #204]	; (800be94 <HAL_ADC_Start_DMA+0x104>)
 800bdc6:	6810      	ldr	r0, [r2, #0]
 800bdc8:	4a33      	ldr	r2, [pc, #204]	; (800be98 <HAL_ADC_Start_DMA+0x108>)
 800bdca:	fbb0 f0f2 	udiv	r0, r0, r2
 800bdce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800bdd2:	9001      	str	r0, [sp, #4]
    while(counter != 0U)
 800bdd4:	9a01      	ldr	r2, [sp, #4]
 800bdd6:	2a00      	cmp	r2, #0
 800bdd8:	d0ea      	beq.n	800bdb0 <HAL_ADC_Start_DMA+0x20>
      counter--;
 800bdda:	9a01      	ldr	r2, [sp, #4]
 800bddc:	3a01      	subs	r2, #1
 800bdde:	9201      	str	r2, [sp, #4]
 800bde0:	e7f8      	b.n	800bdd4 <HAL_ADC_Start_DMA+0x44>
    ADC_STATE_CLR_SET(hadc->State,
 800bde2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800bde4:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 800bde8:	f020 0001 	bic.w	r0, r0, #1
 800bdec:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 800bdf0:	6420      	str	r0, [r4, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 800bdf2:	686a      	ldr	r2, [r5, #4]
 800bdf4:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 800bdf6:	bf41      	itttt	mi
 800bdf8:	6c20      	ldrmi	r0, [r4, #64]	; 0x40
 800bdfa:	f420 5040 	bicmi.w	r0, r0, #12288	; 0x3000
 800bdfe:	f440 5080 	orrmi.w	r0, r0, #4096	; 0x1000
 800be02:	6420      	strmi	r0, [r4, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800be04:	6c22      	ldr	r2, [r4, #64]	; 0x40
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 800be06:	6ba0      	ldr	r0, [r4, #56]	; 0x38
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800be08:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 800be0c:	bf1c      	itt	ne
 800be0e:	6c62      	ldrne	r2, [r4, #68]	; 0x44
 800be10:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 800be14:	6462      	str	r2, [r4, #68]	; 0x44
    __HAL_UNLOCK(hadc);   
 800be16:	2200      	movs	r2, #0
 800be18:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 800be1c:	4a1f      	ldr	r2, [pc, #124]	; (800be9c <HAL_ADC_Start_DMA+0x10c>)
 800be1e:	63c2      	str	r2, [r0, #60]	; 0x3c
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 800be20:	4a1f      	ldr	r2, [pc, #124]	; (800bea0 <HAL_ADC_Start_DMA+0x110>)
 800be22:	6402      	str	r2, [r0, #64]	; 0x40
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 800be24:	4a1f      	ldr	r2, [pc, #124]	; (800bea4 <HAL_ADC_Start_DMA+0x114>)
 800be26:	64c2      	str	r2, [r0, #76]	; 0x4c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800be28:	f06f 0222 	mvn.w	r2, #34	; 0x22
 800be2c:	602a      	str	r2, [r5, #0]
    __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 800be2e:	686a      	ldr	r2, [r5, #4]
 800be30:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800be34:	606a      	str	r2, [r5, #4]
    hadc->Instance->CR2 |= ADC_CR2_DMA;
 800be36:	68aa      	ldr	r2, [r5, #8]
 800be38:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800be3c:	60aa      	str	r2, [r5, #8]
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 800be3e:	460a      	mov	r2, r1
 800be40:	f105 014c 	add.w	r1, r5, #76	; 0x4c
 800be44:	f000 fa14 	bl	800c270 <HAL_DMA_Start_IT>
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 800be48:	4a17      	ldr	r2, [pc, #92]	; (800bea8 <HAL_ADC_Start_DMA+0x118>)
 800be4a:	4918      	ldr	r1, [pc, #96]	; (800beac <HAL_ADC_Start_DMA+0x11c>)
 800be4c:	6853      	ldr	r3, [r2, #4]
 800be4e:	f013 0f1f 	tst.w	r3, #31
 800be52:	6823      	ldr	r3, [r4, #0]
 800be54:	d119      	bne.n	800be8a <HAL_ADC_Start_DMA+0xfa>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 800be56:	428b      	cmp	r3, r1
 800be58:	d007      	beq.n	800be6a <HAL_ADC_Start_DMA+0xda>
 800be5a:	f501 7180 	add.w	r1, r1, #256	; 0x100
 800be5e:	428b      	cmp	r3, r1
 800be60:	d10c      	bne.n	800be7c <HAL_ADC_Start_DMA+0xec>
 800be62:	6852      	ldr	r2, [r2, #4]
 800be64:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800be68:	d1a5      	bne.n	800bdb6 <HAL_ADC_Start_DMA+0x26>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800be6a:	6898      	ldr	r0, [r3, #8]
 800be6c:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 800be70:	d1a1      	bne.n	800bdb6 <HAL_ADC_Start_DMA+0x26>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800be72:	689a      	ldr	r2, [r3, #8]
 800be74:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800be78:	609a      	str	r2, [r3, #8]
 800be7a:	e79d      	b.n	800bdb8 <HAL_ADC_Start_DMA+0x28>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800be7c:	490c      	ldr	r1, [pc, #48]	; (800beb0 <HAL_ADC_Start_DMA+0x120>)
 800be7e:	428b      	cmp	r3, r1
 800be80:	d199      	bne.n	800bdb6 <HAL_ADC_Start_DMA+0x26>
 800be82:	6852      	ldr	r2, [r2, #4]
 800be84:	f012 0f10 	tst.w	r2, #16
 800be88:	e7ee      	b.n	800be68 <HAL_ADC_Start_DMA+0xd8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800be8a:	428b      	cmp	r3, r1
 800be8c:	d193      	bne.n	800bdb6 <HAL_ADC_Start_DMA+0x26>
 800be8e:	e7ec      	b.n	800be6a <HAL_ADC_Start_DMA+0xda>
  __HAL_LOCK(hadc);
 800be90:	2002      	movs	r0, #2
 800be92:	e791      	b.n	800bdb8 <HAL_ADC_Start_DMA+0x28>
 800be94:	2000008c 	.word	0x2000008c
 800be98:	000f4240 	.word	0x000f4240
 800be9c:	0800bedd 	.word	0x0800bedd
 800bea0:	0800bebb 	.word	0x0800bebb
 800bea4:	0800bec7 	.word	0x0800bec7
 800bea8:	40012300 	.word	0x40012300
 800beac:	40012000 	.word	0x40012000
 800beb0:	40012200 	.word	0x40012200

0800beb4 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 800beb4:	6803      	ldr	r3, [r0, #0]
 800beb6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 800beb8:	4770      	bx	lr

0800beba <ADC_DMAHalfConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
{
 800beba:	b508      	push	{r3, lr}
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
   /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 800bebc:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800bebe:	f7f6 fc45 	bl	800274c <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 800bec2:	bd08      	pop	{r3, pc}

0800bec4 <HAL_ADC_ErrorCallback>:
 800bec4:	4770      	bx	lr

0800bec6 <ADC_DMAError>:
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
{
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 800bec6:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800bec8:	b508      	push	{r3, lr}
  hadc->State= HAL_ADC_STATE_ERROR_DMA;
 800beca:	2340      	movs	r3, #64	; 0x40
 800becc:	6403      	str	r3, [r0, #64]	; 0x40
  /* Set ADC error code to DMA error */
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 800bece:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800bed0:	f043 0304 	orr.w	r3, r3, #4
 800bed4:	6443      	str	r3, [r0, #68]	; 0x44
   /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 800bed6:	f7ff fff5 	bl	800bec4 <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 800beda:	bd08      	pop	{r3, pc}

0800bedc <ADC_DMAConvCplt>:
  ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 800bedc:	6b83      	ldr	r3, [r0, #56]	; 0x38
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 800bede:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800bee0:	f012 0f50 	tst.w	r2, #80	; 0x50
{
 800bee4:	b510      	push	{r4, lr}
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800bee6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 800bee8:	d123      	bne.n	800bf32 <ADC_DMAConvCplt+0x56>
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800beea:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800beee:	641a      	str	r2, [r3, #64]	; 0x40
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800bef0:	681a      	ldr	r2, [r3, #0]
 800bef2:	6891      	ldr	r1, [r2, #8]
 800bef4:	f011 5f40 	tst.w	r1, #805306368	; 0x30000000
 800bef8:	d117      	bne.n	800bf2a <ADC_DMAConvCplt+0x4e>
 800befa:	7e19      	ldrb	r1, [r3, #24]
 800befc:	b9a9      	cbnz	r1, 800bf2a <ADC_DMAConvCplt+0x4e>
       (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 800befe:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
       (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800bf00:	f411 0f70 	tst.w	r1, #15728640	; 0xf00000
 800bf04:	d002      	beq.n	800bf0c <ADC_DMAConvCplt+0x30>
        HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 800bf06:	6891      	ldr	r1, [r2, #8]
       (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 800bf08:	0548      	lsls	r0, r1, #21
 800bf0a:	d40e      	bmi.n	800bf2a <ADC_DMAConvCplt+0x4e>
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 800bf0c:	6851      	ldr	r1, [r2, #4]
 800bf0e:	f021 0120 	bic.w	r1, r1, #32
 800bf12:	6051      	str	r1, [r2, #4]
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 800bf14:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800bf16:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800bf1a:	641a      	str	r2, [r3, #64]	; 0x40
      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800bf1c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800bf1e:	04d1      	lsls	r1, r2, #19
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800bf20:	bf5e      	ittt	pl
 800bf22:	6c1a      	ldrpl	r2, [r3, #64]	; 0x40
 800bf24:	f042 0201 	orrpl.w	r2, r2, #1
 800bf28:	641a      	strpl	r2, [r3, #64]	; 0x40
    HAL_ADC_ConvCpltCallback(hadc);
 800bf2a:	4618      	mov	r0, r3
 800bf2c:	f7f6 fc10 	bl	8002750 <HAL_ADC_ConvCpltCallback>
}
 800bf30:	bd10      	pop	{r4, pc}
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 800bf32:	06d2      	lsls	r2, r2, #27
 800bf34:	d503      	bpl.n	800bf3e <ADC_DMAConvCplt+0x62>
      HAL_ADC_ErrorCallback(hadc);
 800bf36:	4618      	mov	r0, r3
 800bf38:	f7ff ffc4 	bl	800bec4 <HAL_ADC_ErrorCallback>
 800bf3c:	e7f8      	b.n	800bf30 <ADC_DMAConvCplt+0x54>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 800bf3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
}
 800bf40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      hadc->DMA_Handle->XferErrorCallback(hdma);
 800bf44:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800bf46:	4718      	bx	r3

0800bf48 <HAL_ADC_ConfigChannel>:
{
 800bf48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 800bf4a:	2300      	movs	r3, #0
 800bf4c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800bf4e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800bf52:	2b01      	cmp	r3, #1
 800bf54:	d069      	beq.n	800c02a <HAL_ADC_ConfigChannel+0xe2>
 800bf56:	2301      	movs	r3, #1
 800bf58:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 800bf5c:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800bf5e:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800bf60:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 800bf62:	2d09      	cmp	r5, #9
 800bf64:	b2ac      	uxth	r4, r5
 800bf66:	d934      	bls.n	800bfd2 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800bf68:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 800bf6c:	68df      	ldr	r7, [r3, #12]
 800bf6e:	3a1e      	subs	r2, #30
 800bf70:	f04f 0c07 	mov.w	ip, #7
 800bf74:	fa0c fc02 	lsl.w	ip, ip, r2
 800bf78:	ea27 070c 	bic.w	r7, r7, ip
 800bf7c:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800bf7e:	68df      	ldr	r7, [r3, #12]
 800bf80:	fa06 f202 	lsl.w	r2, r6, r2
 800bf84:	433a      	orrs	r2, r7
 800bf86:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 800bf88:	6849      	ldr	r1, [r1, #4]
 800bf8a:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800bf8c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 800bf90:	d82f      	bhi.n	800bff2 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800bf92:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800bf94:	3a05      	subs	r2, #5
 800bf96:	261f      	movs	r6, #31
 800bf98:	4096      	lsls	r6, r2
 800bf9a:	ea21 0106 	bic.w	r1, r1, r6
 800bf9e:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 800bfa0:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800bfa2:	fa04 f202 	lsl.w	r2, r4, r2
 800bfa6:	430a      	orrs	r2, r1
 800bfa8:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800bfaa:	4a30      	ldr	r2, [pc, #192]	; (800c06c <HAL_ADC_ConfigChannel+0x124>)
 800bfac:	4293      	cmp	r3, r2
 800bfae:	d10a      	bne.n	800bfc6 <HAL_ADC_ConfigChannel+0x7e>
 800bfb0:	2d12      	cmp	r5, #18
 800bfb2:	d13c      	bne.n	800c02e <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 800bfb4:	4b2e      	ldr	r3, [pc, #184]	; (800c070 <HAL_ADC_ConfigChannel+0x128>)
 800bfb6:	685a      	ldr	r2, [r3, #4]
 800bfb8:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 800bfbc:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 800bfbe:	685a      	ldr	r2, [r3, #4]
 800bfc0:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800bfc4:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 800bfc6:	2300      	movs	r3, #0
 800bfc8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 800bfcc:	4618      	mov	r0, r3
}
 800bfce:	b003      	add	sp, #12
 800bfd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 800bfd2:	691f      	ldr	r7, [r3, #16]
 800bfd4:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800bfd8:	f04f 0c07 	mov.w	ip, #7
 800bfdc:	fa0c fc02 	lsl.w	ip, ip, r2
 800bfe0:	ea27 070c 	bic.w	r7, r7, ip
 800bfe4:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800bfe6:	691f      	ldr	r7, [r3, #16]
 800bfe8:	fa06 f202 	lsl.w	r2, r6, r2
 800bfec:	433a      	orrs	r2, r7
 800bfee:	611a      	str	r2, [r3, #16]
 800bff0:	e7ca      	b.n	800bf88 <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 800bff2:	290c      	cmp	r1, #12
 800bff4:	f04f 011f 	mov.w	r1, #31
 800bff8:	d80b      	bhi.n	800c012 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800bffa:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800bffc:	3a23      	subs	r2, #35	; 0x23
 800bffe:	4091      	lsls	r1, r2
 800c000:	ea26 0101 	bic.w	r1, r6, r1
 800c004:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800c006:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800c008:	fa04 f202 	lsl.w	r2, r4, r2
 800c00c:	430a      	orrs	r2, r1
 800c00e:	631a      	str	r2, [r3, #48]	; 0x30
 800c010:	e7cb      	b.n	800bfaa <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800c012:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800c014:	3a41      	subs	r2, #65	; 0x41
 800c016:	4091      	lsls	r1, r2
 800c018:	ea26 0101 	bic.w	r1, r6, r1
 800c01c:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800c01e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800c020:	fa04 f202 	lsl.w	r2, r4, r2
 800c024:	430a      	orrs	r2, r1
 800c026:	62da      	str	r2, [r3, #44]	; 0x2c
 800c028:	e7bf      	b.n	800bfaa <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800c02a:	2002      	movs	r0, #2
 800c02c:	e7cf      	b.n	800bfce <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800c02e:	4b11      	ldr	r3, [pc, #68]	; (800c074 <HAL_ADC_ConfigChannel+0x12c>)
 800c030:	429d      	cmp	r5, r3
 800c032:	d001      	beq.n	800c038 <HAL_ADC_ConfigChannel+0xf0>
 800c034:	2d11      	cmp	r5, #17
 800c036:	d1c6      	bne.n	800bfc6 <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800c038:	4b0d      	ldr	r3, [pc, #52]	; (800c070 <HAL_ADC_ConfigChannel+0x128>)
 800c03a:	685a      	ldr	r2, [r3, #4]
 800c03c:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 800c040:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 800c042:	685a      	ldr	r2, [r3, #4]
 800c044:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800c048:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800c04a:	4b0a      	ldr	r3, [pc, #40]	; (800c074 <HAL_ADC_ConfigChannel+0x12c>)
 800c04c:	429d      	cmp	r5, r3
 800c04e:	d1ba      	bne.n	800bfc6 <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800c050:	4b09      	ldr	r3, [pc, #36]	; (800c078 <HAL_ADC_ConfigChannel+0x130>)
 800c052:	4a0a      	ldr	r2, [pc, #40]	; (800c07c <HAL_ADC_ConfigChannel+0x134>)
 800c054:	681b      	ldr	r3, [r3, #0]
 800c056:	fbb3 f3f2 	udiv	r3, r3, r2
 800c05a:	220a      	movs	r2, #10
 800c05c:	4353      	muls	r3, r2
        counter--;
 800c05e:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 800c060:	9b01      	ldr	r3, [sp, #4]
 800c062:	2b00      	cmp	r3, #0
 800c064:	d0af      	beq.n	800bfc6 <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 800c066:	9b01      	ldr	r3, [sp, #4]
 800c068:	3b01      	subs	r3, #1
 800c06a:	e7f8      	b.n	800c05e <HAL_ADC_ConfigChannel+0x116>
 800c06c:	40012000 	.word	0x40012000
 800c070:	40012300 	.word	0x40012300
 800c074:	10000012 	.word	0x10000012
 800c078:	2000008c 	.word	0x2000008c
 800c07c:	000f4240 	.word	0x000f4240

0800c080 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800c080:	4907      	ldr	r1, [pc, #28]	; (800c0a0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800c082:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800c084:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800c088:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800c08a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800c08c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800c090:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800c092:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800c094:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800c098:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800c09c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800c09e:	4770      	bx	lr
 800c0a0:	e000ed00 	.word	0xe000ed00

0800c0a4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800c0a4:	4b16      	ldr	r3, [pc, #88]	; (800c100 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800c0a6:	b530      	push	{r4, r5, lr}
 800c0a8:	68dc      	ldr	r4, [r3, #12]
 800c0aa:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800c0ae:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800c0b2:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800c0b4:	2d04      	cmp	r5, #4
 800c0b6:	bf28      	it	cs
 800c0b8:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800c0ba:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800c0bc:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800c0c0:	bf8c      	ite	hi
 800c0c2:	3c03      	subhi	r4, #3
 800c0c4:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800c0c6:	fa03 f505 	lsl.w	r5, r3, r5
 800c0ca:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800c0ce:	40a3      	lsls	r3, r4
 800c0d0:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800c0d4:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800c0d6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800c0d8:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0dc:	bfac      	ite	ge
 800c0de:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0e2:	4a08      	ldrlt	r2, [pc, #32]	; (800c104 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0e4:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0e8:	bfb8      	it	lt
 800c0ea:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0ee:	b2db      	uxtb	r3, r3
 800c0f0:	bfaa      	itet	ge
 800c0f2:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0f6:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c0f8:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800c0fc:	bd30      	pop	{r4, r5, pc}
 800c0fe:	bf00      	nop
 800c100:	e000ed00 	.word	0xe000ed00
 800c104:	e000ed14 	.word	0xe000ed14

0800c108 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800c108:	2800      	cmp	r0, #0
 800c10a:	db08      	blt.n	800c11e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800c10c:	0942      	lsrs	r2, r0, #5
 800c10e:	2301      	movs	r3, #1
 800c110:	f000 001f 	and.w	r0, r0, #31
 800c114:	fa03 f000 	lsl.w	r0, r3, r0
 800c118:	4b01      	ldr	r3, [pc, #4]	; (800c120 <HAL_NVIC_EnableIRQ+0x18>)
 800c11a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800c11e:	4770      	bx	lr
 800c120:	e000e100 	.word	0xe000e100

0800c124 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800c124:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800c126:	4604      	mov	r4, r0
 800c128:	b150      	cbz	r0, 800c140 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800c12a:	7943      	ldrb	r3, [r0, #5]
 800c12c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c130:	b913      	cbnz	r3, 800c138 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800c132:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800c134:	f7f6 fee0 	bl	8002ef8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800c138:	2301      	movs	r3, #1
 800c13a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800c13c:	2000      	movs	r0, #0
}
 800c13e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800c140:	2001      	movs	r0, #1
 800c142:	e7fc      	b.n	800c13e <HAL_CRC_Init+0x1a>

0800c144 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800c144:	6803      	ldr	r3, [r0, #0]
{
 800c146:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800c148:	4c08      	ldr	r4, [pc, #32]	; (800c16c <DMA_CalcBaseAndBitshift+0x28>)
{
 800c14a:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800c14c:	b2d9      	uxtb	r1, r3
 800c14e:	3910      	subs	r1, #16
 800c150:	2018      	movs	r0, #24
 800c152:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800c156:	5c20      	ldrb	r0, [r4, r0]
 800c158:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800c15a:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 800c15e:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 800c162:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800c164:	bf88      	it	hi
 800c166:	3004      	addhi	r0, #4
 800c168:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 800c16a:	bd10      	pop	{r4, pc}
 800c16c:	08032a6c 	.word	0x08032a6c

0800c170 <HAL_DMA_Init>:
{
 800c170:	b570      	push	{r4, r5, r6, lr}
 800c172:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800c174:	f7ff fc88 	bl	800ba88 <HAL_GetTick>
 800c178:	4605      	mov	r5, r0
  if(hdma == NULL)
 800c17a:	2c00      	cmp	r4, #0
 800c17c:	d073      	beq.n	800c266 <HAL_DMA_Init+0xf6>
  __HAL_UNLOCK(hdma);
 800c17e:	2300      	movs	r3, #0
 800c180:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 800c184:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 800c186:	2302      	movs	r3, #2
 800c188:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 800c18c:	6813      	ldr	r3, [r2, #0]
 800c18e:	f023 0301 	bic.w	r3, r3, #1
 800c192:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800c194:	6821      	ldr	r1, [r4, #0]
 800c196:	680b      	ldr	r3, [r1, #0]
 800c198:	07d8      	lsls	r0, r3, #31
 800c19a:	d42f      	bmi.n	800c1fc <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 800c19c:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800c19e:	4d33      	ldr	r5, [pc, #204]	; (800c26c <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800c1a0:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800c1a2:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800c1a4:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 800c1a8:	4313      	orrs	r3, r2
 800c1aa:	68e2      	ldr	r2, [r4, #12]
 800c1ac:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800c1ae:	6922      	ldr	r2, [r4, #16]
 800c1b0:	4313      	orrs	r3, r2
 800c1b2:	6962      	ldr	r2, [r4, #20]
 800c1b4:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800c1b6:	69e2      	ldr	r2, [r4, #28]
 800c1b8:	4303      	orrs	r3, r0
 800c1ba:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 800c1bc:	6a22      	ldr	r2, [r4, #32]
 800c1be:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800c1c0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c1c2:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800c1c4:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800c1c8:	bf02      	ittt	eq
 800c1ca:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800c1ce:	4335      	orreq	r5, r6
 800c1d0:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 800c1d2:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 800c1d4:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800c1d6:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800c1d8:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 800c1dc:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800c1e0:	d133      	bne.n	800c24a <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 800c1e2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800c1e4:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 800c1e6:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800c1e8:	b37d      	cbz	r5, 800c24a <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800c1ea:	b990      	cbnz	r0, 800c212 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 800c1ec:	2a01      	cmp	r2, #1
 800c1ee:	d021      	beq.n	800c234 <HAL_DMA_Init+0xc4>
 800c1f0:	f032 0202 	bics.w	r2, r2, #2
 800c1f4:	d129      	bne.n	800c24a <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800c1f6:	01ea      	lsls	r2, r5, #7
 800c1f8:	d527      	bpl.n	800c24a <HAL_DMA_Init+0xda>
 800c1fa:	e01e      	b.n	800c23a <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800c1fc:	f7ff fc44 	bl	800ba88 <HAL_GetTick>
 800c200:	1b40      	subs	r0, r0, r5
 800c202:	2805      	cmp	r0, #5
 800c204:	d9c6      	bls.n	800c194 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800c206:	2320      	movs	r3, #32
 800c208:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800c20a:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 800c20c:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 800c210:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800c212:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 800c216:	d114      	bne.n	800c242 <HAL_DMA_Init+0xd2>
    switch (tmp)
 800c218:	2a03      	cmp	r2, #3
 800c21a:	d816      	bhi.n	800c24a <HAL_DMA_Init+0xda>
 800c21c:	a001      	add	r0, pc, #4	; (adr r0, 800c224 <HAL_DMA_Init+0xb4>)
 800c21e:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800c222:	bf00      	nop
 800c224:	0800c23b 	.word	0x0800c23b
 800c228:	0800c1f7 	.word	0x0800c1f7
 800c22c:	0800c23b 	.word	0x0800c23b
 800c230:	0800c235 	.word	0x0800c235
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800c234:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 800c238:	d107      	bne.n	800c24a <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800c23a:	2340      	movs	r3, #64	; 0x40
 800c23c:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800c23e:	2001      	movs	r0, #1
 800c240:	e7e4      	b.n	800c20c <HAL_DMA_Init+0x9c>
    switch (tmp)
 800c242:	2a02      	cmp	r2, #2
 800c244:	d9f9      	bls.n	800c23a <HAL_DMA_Init+0xca>
 800c246:	2a03      	cmp	r2, #3
 800c248:	d0d5      	beq.n	800c1f6 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 800c24a:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800c24c:	4620      	mov	r0, r4
 800c24e:	f7ff ff79 	bl	800c144 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800c252:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800c254:	233f      	movs	r3, #63	; 0x3f
 800c256:	4093      	lsls	r3, r2
 800c258:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800c25a:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 800c25c:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800c25e:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 800c260:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 800c264:	e7d4      	b.n	800c210 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 800c266:	2001      	movs	r0, #1
 800c268:	e7d2      	b.n	800c210 <HAL_DMA_Init+0xa0>
 800c26a:	bf00      	nop
 800c26c:	f010803f 	.word	0xf010803f

0800c270 <HAL_DMA_Start_IT>:
{
 800c270:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma);
 800c272:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800c276:	6d86      	ldr	r6, [r0, #88]	; 0x58
  __HAL_LOCK(hdma);
 800c278:	2c01      	cmp	r4, #1
 800c27a:	d031      	beq.n	800c2e0 <HAL_DMA_Start_IT+0x70>
 800c27c:	2401      	movs	r4, #1
 800c27e:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 800c282:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
 800c286:	2c01      	cmp	r4, #1
 800c288:	f04f 0500 	mov.w	r5, #0
 800c28c:	f04f 0402 	mov.w	r4, #2
 800c290:	d124      	bne.n	800c2dc <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 800c292:	f880 4035 	strb.w	r4, [r0, #53]	; 0x35
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 800c296:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800c298:	6545      	str	r5, [r0, #84]	; 0x54
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 800c29a:	6825      	ldr	r5, [r4, #0]
 800c29c:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
 800c2a0:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 800c2a2:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 800c2a4:	6883      	ldr	r3, [r0, #8]
 800c2a6:	2b40      	cmp	r3, #64	; 0x40
    hdma->Instance->PAR = DstAddress;
 800c2a8:	bf0e      	itee	eq
 800c2aa:	60a2      	streq	r2, [r4, #8]
    hdma->Instance->PAR = SrcAddress;
 800c2ac:	60a1      	strne	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 800c2ae:	60e2      	strne	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800c2b0:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
    hdma->Instance->M0AR = SrcAddress;
 800c2b2:	bf08      	it	eq
 800c2b4:	60e1      	streq	r1, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800c2b6:	233f      	movs	r3, #63	; 0x3f
 800c2b8:	4093      	lsls	r3, r2
 800c2ba:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 800c2bc:	6823      	ldr	r3, [r4, #0]
 800c2be:	f043 0316 	orr.w	r3, r3, #22
 800c2c2:	6023      	str	r3, [r4, #0]
    if(hdma->XferHalfCpltCallback != NULL)
 800c2c4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800c2c6:	b11b      	cbz	r3, 800c2d0 <HAL_DMA_Start_IT+0x60>
      hdma->Instance->CR  |= DMA_IT_HT;
 800c2c8:	6823      	ldr	r3, [r4, #0]
 800c2ca:	f043 0308 	orr.w	r3, r3, #8
 800c2ce:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 800c2d0:	6823      	ldr	r3, [r4, #0]
 800c2d2:	f043 0301 	orr.w	r3, r3, #1
 800c2d6:	6023      	str	r3, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800c2d8:	2000      	movs	r0, #0
}
 800c2da:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_UNLOCK(hdma);	  
 800c2dc:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  __HAL_LOCK(hdma);
 800c2e0:	2002      	movs	r0, #2
 800c2e2:	e7fa      	b.n	800c2da <HAL_DMA_Start_IT+0x6a>

0800c2e4 <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800c2e4:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800c2e8:	2b02      	cmp	r3, #2
 800c2ea:	d003      	beq.n	800c2f4 <HAL_DMA_Abort_IT+0x10>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800c2ec:	2380      	movs	r3, #128	; 0x80
 800c2ee:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800c2f0:	2001      	movs	r0, #1
 800c2f2:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 800c2f4:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800c2f6:	2305      	movs	r3, #5
 800c2f8:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800c2fc:	6813      	ldr	r3, [r2, #0]
 800c2fe:	f023 0301 	bic.w	r3, r3, #1
 800c302:	6013      	str	r3, [r2, #0]
  return HAL_OK;
 800c304:	2000      	movs	r0, #0
}
 800c306:	4770      	bx	lr

0800c308 <HAL_DMA_IRQHandler>:
{
 800c308:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t count = 0U;
 800c30a:	2300      	movs	r3, #0
 800c30c:	9301      	str	r3, [sp, #4]
  uint32_t timeout = SystemCoreClock / 9600U;
 800c30e:	4b5c      	ldr	r3, [pc, #368]	; (800c480 <HAL_DMA_IRQHandler+0x178>)
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800c310:	6d85      	ldr	r5, [r0, #88]	; 0x58
  uint32_t timeout = SystemCoreClock / 9600U;
 800c312:	681f      	ldr	r7, [r3, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800c314:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  tmpisr = regs->ISR;
 800c316:	682e      	ldr	r6, [r5, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800c318:	2208      	movs	r2, #8
 800c31a:	409a      	lsls	r2, r3
 800c31c:	4232      	tst	r2, r6
{
 800c31e:	4604      	mov	r4, r0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800c320:	d00c      	beq.n	800c33c <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 800c322:	6801      	ldr	r1, [r0, #0]
 800c324:	6808      	ldr	r0, [r1, #0]
 800c326:	0740      	lsls	r0, r0, #29
 800c328:	d508      	bpl.n	800c33c <HAL_DMA_IRQHandler+0x34>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 800c32a:	6808      	ldr	r0, [r1, #0]
 800c32c:	f020 0004 	bic.w	r0, r0, #4
 800c330:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 800c332:	60aa      	str	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 800c334:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800c336:	f042 0201 	orr.w	r2, r2, #1
 800c33a:	6562      	str	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 800c33c:	2201      	movs	r2, #1
 800c33e:	409a      	lsls	r2, r3
 800c340:	4232      	tst	r2, r6
 800c342:	d008      	beq.n	800c356 <HAL_DMA_IRQHandler+0x4e>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 800c344:	6821      	ldr	r1, [r4, #0]
 800c346:	6949      	ldr	r1, [r1, #20]
 800c348:	0609      	lsls	r1, r1, #24
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 800c34a:	bf41      	itttt	mi
 800c34c:	60aa      	strmi	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 800c34e:	6d62      	ldrmi	r2, [r4, #84]	; 0x54
 800c350:	f042 0202 	orrmi.w	r2, r2, #2
 800c354:	6562      	strmi	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 800c356:	2204      	movs	r2, #4
 800c358:	409a      	lsls	r2, r3
 800c35a:	4232      	tst	r2, r6
 800c35c:	d008      	beq.n	800c370 <HAL_DMA_IRQHandler+0x68>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 800c35e:	6821      	ldr	r1, [r4, #0]
 800c360:	6809      	ldr	r1, [r1, #0]
 800c362:	0788      	lsls	r0, r1, #30
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 800c364:	bf41      	itttt	mi
 800c366:	60aa      	strmi	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 800c368:	6d62      	ldrmi	r2, [r4, #84]	; 0x54
 800c36a:	f042 0204 	orrmi.w	r2, r2, #4
 800c36e:	6562      	strmi	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 800c370:	2210      	movs	r2, #16
 800c372:	409a      	lsls	r2, r3
 800c374:	4232      	tst	r2, r6
 800c376:	d010      	beq.n	800c39a <HAL_DMA_IRQHandler+0x92>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 800c378:	6823      	ldr	r3, [r4, #0]
 800c37a:	6819      	ldr	r1, [r3, #0]
 800c37c:	0709      	lsls	r1, r1, #28
 800c37e:	d50c      	bpl.n	800c39a <HAL_DMA_IRQHandler+0x92>
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 800c380:	60aa      	str	r2, [r5, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800c382:	681a      	ldr	r2, [r3, #0]
 800c384:	0350      	lsls	r0, r2, #13
 800c386:	d537      	bpl.n	800c3f8 <HAL_DMA_IRQHandler+0xf0>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800c388:	681b      	ldr	r3, [r3, #0]
 800c38a:	0319      	lsls	r1, r3, #12
 800c38c:	d401      	bmi.n	800c392 <HAL_DMA_IRQHandler+0x8a>
        if(hdma->XferHalfCpltCallback != NULL)
 800c38e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c390:	e000      	b.n	800c394 <HAL_DMA_IRQHandler+0x8c>
          if(hdma->XferM1HalfCpltCallback != NULL)
 800c392:	6ca3      	ldr	r3, [r4, #72]	; 0x48
        if(hdma->XferHalfCpltCallback != NULL)
 800c394:	b10b      	cbz	r3, 800c39a <HAL_DMA_IRQHandler+0x92>
          hdma->XferHalfCpltCallback(hdma);
 800c396:	4620      	mov	r0, r4
 800c398:	4798      	blx	r3
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 800c39a:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 800c39c:	2220      	movs	r2, #32
 800c39e:	408a      	lsls	r2, r1
 800c3a0:	4232      	tst	r2, r6
 800c3a2:	d03a      	beq.n	800c41a <HAL_DMA_IRQHandler+0x112>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 800c3a4:	6823      	ldr	r3, [r4, #0]
 800c3a6:	6818      	ldr	r0, [r3, #0]
 800c3a8:	06c6      	lsls	r6, r0, #27
 800c3aa:	d536      	bpl.n	800c41a <HAL_DMA_IRQHandler+0x112>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 800c3ac:	60aa      	str	r2, [r5, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 800c3ae:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 800c3b2:	2a05      	cmp	r2, #5
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800c3b4:	681a      	ldr	r2, [r3, #0]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 800c3b6:	d127      	bne.n	800c408 <HAL_DMA_IRQHandler+0x100>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800c3b8:	f022 0216 	bic.w	r2, r2, #22
 800c3bc:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 800c3be:	695a      	ldr	r2, [r3, #20]
 800c3c0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800c3c4:	615a      	str	r2, [r3, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800c3c6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c3c8:	b90a      	cbnz	r2, 800c3ce <HAL_DMA_IRQHandler+0xc6>
 800c3ca:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800c3cc:	b11a      	cbz	r2, 800c3d6 <HAL_DMA_IRQHandler+0xce>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800c3ce:	681a      	ldr	r2, [r3, #0]
 800c3d0:	f022 0208 	bic.w	r2, r2, #8
 800c3d4:	601a      	str	r2, [r3, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 800c3d6:	233f      	movs	r3, #63	; 0x3f
 800c3d8:	408b      	lsls	r3, r1
 800c3da:	60ab      	str	r3, [r5, #8]
        __HAL_UNLOCK(hdma);
 800c3dc:	2300      	movs	r3, #0
 800c3de:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_READY;
 800c3e2:	2301      	movs	r3, #1
 800c3e4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        if(hdma->XferAbortCallback != NULL)
 800c3e8:	6d23      	ldr	r3, [r4, #80]	; 0x50
    if(hdma->XferErrorCallback != NULL)
 800c3ea:	2b00      	cmp	r3, #0
 800c3ec:	d045      	beq.n	800c47a <HAL_DMA_IRQHandler+0x172>
      hdma->XferErrorCallback(hdma);
 800c3ee:	4620      	mov	r0, r4
}
 800c3f0:	b003      	add	sp, #12
 800c3f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 800c3f6:	4718      	bx	r3
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800c3f8:	681a      	ldr	r2, [r3, #0]
 800c3fa:	05d2      	lsls	r2, r2, #23
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800c3fc:	bf5e      	ittt	pl
 800c3fe:	681a      	ldrpl	r2, [r3, #0]
 800c400:	f022 0208 	bicpl.w	r2, r2, #8
 800c404:	601a      	strpl	r2, [r3, #0]
 800c406:	e7c2      	b.n	800c38e <HAL_DMA_IRQHandler+0x86>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800c408:	0350      	lsls	r0, r2, #13
 800c40a:	d527      	bpl.n	800c45c <HAL_DMA_IRQHandler+0x154>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 800c40c:	681b      	ldr	r3, [r3, #0]
 800c40e:	0319      	lsls	r1, r3, #12
 800c410:	d431      	bmi.n	800c476 <HAL_DMA_IRQHandler+0x16e>
          if(hdma->XferM1CpltCallback != NULL)
 800c412:	6c63      	ldr	r3, [r4, #68]	; 0x44
        if(hdma->XferCpltCallback != NULL)
 800c414:	b10b      	cbz	r3, 800c41a <HAL_DMA_IRQHandler+0x112>
          hdma->XferCpltCallback(hdma);
 800c416:	4620      	mov	r0, r4
 800c418:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 800c41a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c41c:	b36b      	cbz	r3, 800c47a <HAL_DMA_IRQHandler+0x172>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 800c41e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c420:	07da      	lsls	r2, r3, #31
 800c422:	d519      	bpl.n	800c458 <HAL_DMA_IRQHandler+0x150>
      __HAL_DMA_DISABLE(hdma);
 800c424:	6822      	ldr	r2, [r4, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 800c426:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 800c42a:	fbb7 f7f3 	udiv	r7, r7, r3
      hdma->State = HAL_DMA_STATE_ABORT;
 800c42e:	2305      	movs	r3, #5
 800c430:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
 800c434:	6813      	ldr	r3, [r2, #0]
 800c436:	f023 0301 	bic.w	r3, r3, #1
 800c43a:	6013      	str	r3, [r2, #0]
        if (++count > timeout)
 800c43c:	9b01      	ldr	r3, [sp, #4]
 800c43e:	3301      	adds	r3, #1
 800c440:	42bb      	cmp	r3, r7
 800c442:	9301      	str	r3, [sp, #4]
 800c444:	d802      	bhi.n	800c44c <HAL_DMA_IRQHandler+0x144>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 800c446:	6813      	ldr	r3, [r2, #0]
 800c448:	07db      	lsls	r3, r3, #31
 800c44a:	d4f7      	bmi.n	800c43c <HAL_DMA_IRQHandler+0x134>
      __HAL_UNLOCK(hdma);
 800c44c:	2300      	movs	r3, #0
 800c44e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
      hdma->State = HAL_DMA_STATE_READY;
 800c452:	2301      	movs	r3, #1
 800c454:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    if(hdma->XferErrorCallback != NULL)
 800c458:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800c45a:	e7c6      	b.n	800c3ea <HAL_DMA_IRQHandler+0xe2>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800c45c:	681a      	ldr	r2, [r3, #0]
 800c45e:	f412 7280 	ands.w	r2, r2, #256	; 0x100
 800c462:	d108      	bne.n	800c476 <HAL_DMA_IRQHandler+0x16e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 800c464:	6819      	ldr	r1, [r3, #0]
 800c466:	f021 0110 	bic.w	r1, r1, #16
 800c46a:	6019      	str	r1, [r3, #0]
          hdma->State = HAL_DMA_STATE_READY;
 800c46c:	2301      	movs	r3, #1
          __HAL_UNLOCK(hdma);
 800c46e:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
          hdma->State = HAL_DMA_STATE_READY;
 800c472:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        if(hdma->XferCpltCallback != NULL)
 800c476:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c478:	e7cc      	b.n	800c414 <HAL_DMA_IRQHandler+0x10c>
}
 800c47a:	b003      	add	sp, #12
 800c47c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c47e:	bf00      	nop
 800c480:	2000008c 	.word	0x2000008c

0800c484 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800c484:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 800c486:	4604      	mov	r4, r0
 800c488:	b330      	cbz	r0, 800c4d8 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 800c48a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800c48e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c492:	b91b      	cbnz	r3, 800c49c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800c494:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800c498:	f7f6 fd46 	bl	8002f28 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800c49c:	6822      	ldr	r2, [r4, #0]
 800c49e:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800c4a0:	2302      	movs	r3, #2
 800c4a2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800c4a6:	6813      	ldr	r3, [r2, #0]
 800c4a8:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c4ac:	430b      	orrs	r3, r1
 800c4ae:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800c4b0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800c4b2:	68a1      	ldr	r1, [r4, #8]
 800c4b4:	f023 0307 	bic.w	r3, r3, #7
 800c4b8:	430b      	orrs	r3, r1
 800c4ba:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800c4bc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c4be:	68e1      	ldr	r1, [r4, #12]
 800c4c0:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800c4c4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800c4c8:	430b      	orrs	r3, r1
 800c4ca:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800c4cc:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800c4ce:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800c4d0:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800c4d2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800c4d6:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800c4d8:	2001      	movs	r0, #1
 800c4da:	e7fc      	b.n	800c4d6 <HAL_DMA2D_Init+0x52>

0800c4dc <HAL_DMA2D_LineEventCallback>:
 800c4dc:	4770      	bx	lr

0800c4de <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800c4de:	4770      	bx	lr

0800c4e0 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800c4e0:	6803      	ldr	r3, [r0, #0]
{
 800c4e2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800c4e4:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800c4e6:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800c4e8:	07f2      	lsls	r2, r6, #31
{
 800c4ea:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800c4ec:	d514      	bpl.n	800c518 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800c4ee:	05e9      	lsls	r1, r5, #23
 800c4f0:	d512      	bpl.n	800c518 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800c4f2:	681a      	ldr	r2, [r3, #0]
 800c4f4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800c4f8:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800c4fa:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800c4fc:	f042 0201 	orr.w	r2, r2, #1
 800c500:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800c502:	2201      	movs	r2, #1
 800c504:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c506:	2304      	movs	r3, #4
 800c508:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800c50c:	2300      	movs	r3, #0
 800c50e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800c512:	6943      	ldr	r3, [r0, #20]
 800c514:	b103      	cbz	r3, 800c518 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800c516:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800c518:	06b2      	lsls	r2, r6, #26
 800c51a:	d516      	bpl.n	800c54a <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 800c51c:	04ab      	lsls	r3, r5, #18
 800c51e:	d514      	bpl.n	800c54a <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800c520:	6823      	ldr	r3, [r4, #0]
 800c522:	681a      	ldr	r2, [r3, #0]
 800c524:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c528:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800c52a:	2220      	movs	r2, #32
 800c52c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800c52e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c530:	f043 0302 	orr.w	r3, r3, #2
 800c534:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c536:	2304      	movs	r3, #4
 800c538:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800c53c:	2300      	movs	r3, #0
 800c53e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800c542:	6963      	ldr	r3, [r4, #20]
 800c544:	b10b      	cbz	r3, 800c54a <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800c546:	4620      	mov	r0, r4
 800c548:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800c54a:	0730      	lsls	r0, r6, #28
 800c54c:	d516      	bpl.n	800c57c <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800c54e:	0529      	lsls	r1, r5, #20
 800c550:	d514      	bpl.n	800c57c <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800c552:	6823      	ldr	r3, [r4, #0]
 800c554:	681a      	ldr	r2, [r3, #0]
 800c556:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800c55a:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800c55c:	2208      	movs	r2, #8
 800c55e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800c560:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c562:	f043 0304 	orr.w	r3, r3, #4
 800c566:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c568:	2304      	movs	r3, #4
 800c56a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800c56e:	2300      	movs	r3, #0
 800c570:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800c574:	6963      	ldr	r3, [r4, #20]
 800c576:	b10b      	cbz	r3, 800c57c <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800c578:	4620      	mov	r0, r4
 800c57a:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800c57c:	0772      	lsls	r2, r6, #29
 800c57e:	d50b      	bpl.n	800c598 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800c580:	056b      	lsls	r3, r5, #21
 800c582:	d509      	bpl.n	800c598 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800c584:	6823      	ldr	r3, [r4, #0]
 800c586:	681a      	ldr	r2, [r3, #0]
 800c588:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c58c:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800c58e:	2204      	movs	r2, #4
 800c590:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800c592:	4620      	mov	r0, r4
 800c594:	f7ff ffa2 	bl	800c4dc <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800c598:	07b0      	lsls	r0, r6, #30
 800c59a:	d514      	bpl.n	800c5c6 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800c59c:	05a9      	lsls	r1, r5, #22
 800c59e:	d512      	bpl.n	800c5c6 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800c5a0:	6823      	ldr	r3, [r4, #0]
 800c5a2:	681a      	ldr	r2, [r3, #0]
 800c5a4:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800c5a8:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800c5aa:	2202      	movs	r2, #2
 800c5ac:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800c5ae:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c5b0:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800c5b2:	2301      	movs	r3, #1
 800c5b4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800c5b8:	2300      	movs	r3, #0
 800c5ba:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 800c5be:	6923      	ldr	r3, [r4, #16]
 800c5c0:	b10b      	cbz	r3, 800c5c6 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800c5c2:	4620      	mov	r0, r4
 800c5c4:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800c5c6:	06f2      	lsls	r2, r6, #27
 800c5c8:	d513      	bpl.n	800c5f2 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800c5ca:	04eb      	lsls	r3, r5, #19
 800c5cc:	d511      	bpl.n	800c5f2 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800c5ce:	6823      	ldr	r3, [r4, #0]
 800c5d0:	681a      	ldr	r2, [r3, #0]
 800c5d2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800c5d6:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800c5d8:	2210      	movs	r2, #16
 800c5da:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800c5dc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c5de:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800c5e0:	2301      	movs	r3, #1
 800c5e2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800c5e6:	2300      	movs	r3, #0
 800c5e8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800c5ec:	4620      	mov	r0, r4
 800c5ee:	f7ff ff76 	bl	800c4de <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800c5f2:	bd70      	pop	{r4, r5, r6, pc}

0800c5f4 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800c5f4:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800c5f6:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800c5fa:	2b01      	cmp	r3, #1
 800c5fc:	f04f 0302 	mov.w	r3, #2
 800c600:	d02b      	beq.n	800c65a <HAL_DMA2D_ConfigLayer+0x66>
 800c602:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800c604:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800c608:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800c60c:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800c610:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800c614:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800c616:	4f18      	ldr	r7, [pc, #96]	; (800c678 <HAL_DMA2D_ConfigLayer+0x84>)
 800c618:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c61c:	3c09      	subs	r4, #9
 800c61e:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800c620:	bf9c      	itt	ls
 800c622:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800c626:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800c628:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c62c:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800c62e:	bf88      	it	hi
 800c630:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 800c634:	b999      	cbnz	r1, 800c65e <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c636:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800c638:	4039      	ands	r1, r7
 800c63a:	430a      	orrs	r2, r1
 800c63c:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c63e:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800c640:	6982      	ldr	r2, [r0, #24]
 800c642:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c644:	d803      	bhi.n	800c64e <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 800c646:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800c648:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 800c64c:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800c64e:	2301      	movs	r3, #1
 800c650:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800c654:	2300      	movs	r3, #0
 800c656:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800c65a:	4618      	mov	r0, r3

  return HAL_OK;
}
 800c65c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800c65e:	69d9      	ldr	r1, [r3, #28]
 800c660:	4039      	ands	r1, r7
 800c662:	430a      	orrs	r2, r1
 800c664:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800c666:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c668:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800c66a:	6992      	ldr	r2, [r2, #24]
 800c66c:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800c66e:	bf9c      	itt	ls
 800c670:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800c674:	621d      	strls	r5, [r3, #32]
 800c676:	e7ea      	b.n	800c64e <HAL_DMA2D_ConfigLayer+0x5a>
 800c678:	00fcfff0 	.word	0x00fcfff0

0800c67c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800c67c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800c680:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800c844 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800c684:	4a6d      	ldr	r2, [pc, #436]	; (800c83c <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c686:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 800c848 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800c68a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800c68c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800c68e:	2401      	movs	r4, #1
 800c690:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800c692:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800c696:	43ac      	bics	r4, r5
 800c698:	f040 80b7 	bne.w	800c80a <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800c69c:	684c      	ldr	r4, [r1, #4]
 800c69e:	f024 0c10 	bic.w	ip, r4, #16
 800c6a2:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c6a6:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800c6a8:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c6ac:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800c6b0:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c6b2:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800c6b6:	d811      	bhi.n	800c6dc <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 800c6b8:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c6ba:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 800c6be:	68cf      	ldr	r7, [r1, #12]
 800c6c0:	fa07 f70e 	lsl.w	r7, r7, lr
 800c6c4:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 800c6c8:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800c6ca:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800c6cc:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800c6d0:	f3c4 1700 	ubfx	r7, r4, #4, #1
 800c6d4:	409f      	lsls	r7, r3
 800c6d6:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 800c6da:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 800c6dc:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800c6de:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800c6e2:	688f      	ldr	r7, [r1, #8]
 800c6e4:	fa07 f70e 	lsl.w	r7, r7, lr
 800c6e8:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800c6ec:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 800c6f0:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800c6f2:	d116      	bne.n	800c722 <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 800c6f4:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800c6f8:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800c6fc:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800c700:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800c704:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800c708:	f04f 0c0f 	mov.w	ip, #15
 800c70c:	fa0c fc0b 	lsl.w	ip, ip, fp
 800c710:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800c714:	690f      	ldr	r7, [r1, #16]
 800c716:	fa07 f70b 	lsl.w	r7, r7, fp
 800c71a:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 800c71e:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 800c722:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800c724:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800c726:	f004 0703 	and.w	r7, r4, #3
 800c72a:	fa07 f70e 	lsl.w	r7, r7, lr
 800c72e:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 800c730:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800c732:	00e5      	lsls	r5, r4, #3
 800c734:	d569      	bpl.n	800c80a <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800c736:	f04f 0b00 	mov.w	fp, #0
 800c73a:	f8cd b004 	str.w	fp, [sp, #4]
 800c73e:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c742:	4d3f      	ldr	r5, [pc, #252]	; (800c840 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800c744:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 800c748:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 800c74c:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800c750:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 800c754:	9701      	str	r7, [sp, #4]
 800c756:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800c758:	f023 0703 	bic.w	r7, r3, #3
 800c75c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 800c760:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800c764:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800c768:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800c76c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800c770:	f04f 0c0f 	mov.w	ip, #15
 800c774:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c778:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800c77a:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c77e:	d04b      	beq.n	800c818 <HAL_GPIO_Init+0x19c>
 800c780:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c784:	42a8      	cmp	r0, r5
 800c786:	d049      	beq.n	800c81c <HAL_GPIO_Init+0x1a0>
 800c788:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c78c:	42a8      	cmp	r0, r5
 800c78e:	d047      	beq.n	800c820 <HAL_GPIO_Init+0x1a4>
 800c790:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c794:	42a8      	cmp	r0, r5
 800c796:	d045      	beq.n	800c824 <HAL_GPIO_Init+0x1a8>
 800c798:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c79c:	42a8      	cmp	r0, r5
 800c79e:	d043      	beq.n	800c828 <HAL_GPIO_Init+0x1ac>
 800c7a0:	4548      	cmp	r0, r9
 800c7a2:	d043      	beq.n	800c82c <HAL_GPIO_Init+0x1b0>
 800c7a4:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 800c7a8:	42a8      	cmp	r0, r5
 800c7aa:	d041      	beq.n	800c830 <HAL_GPIO_Init+0x1b4>
 800c7ac:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c7b0:	42a8      	cmp	r0, r5
 800c7b2:	d03f      	beq.n	800c834 <HAL_GPIO_Init+0x1b8>
 800c7b4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c7b8:	42a8      	cmp	r0, r5
 800c7ba:	d03d      	beq.n	800c838 <HAL_GPIO_Init+0x1bc>
 800c7bc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800c7c0:	42a8      	cmp	r0, r5
 800c7c2:	bf0c      	ite	eq
 800c7c4:	2509      	moveq	r5, #9
 800c7c6:	250a      	movne	r5, #10
 800c7c8:	fa05 f50e 	lsl.w	r5, r5, lr
 800c7cc:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 800c7d0:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 800c7d2:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800c7d4:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800c7d6:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 800c7da:	bf0c      	ite	eq
 800c7dc:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800c7de:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 800c7e0:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 800c7e2:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800c7e4:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800c7e8:	bf0c      	ite	eq
 800c7ea:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800c7ec:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 800c7ee:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800c7f0:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800c7f2:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800c7f6:	bf0c      	ite	eq
 800c7f8:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800c7fa:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 800c7fc:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 800c7fe:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800c800:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 800c802:	bf54      	ite	pl
 800c804:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 800c806:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 800c808:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800c80a:	3301      	adds	r3, #1
 800c80c:	2b10      	cmp	r3, #16
 800c80e:	f47f af3d 	bne.w	800c68c <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 800c812:	b003      	add	sp, #12
 800c814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c818:	465d      	mov	r5, fp
 800c81a:	e7d5      	b.n	800c7c8 <HAL_GPIO_Init+0x14c>
 800c81c:	2501      	movs	r5, #1
 800c81e:	e7d3      	b.n	800c7c8 <HAL_GPIO_Init+0x14c>
 800c820:	2502      	movs	r5, #2
 800c822:	e7d1      	b.n	800c7c8 <HAL_GPIO_Init+0x14c>
 800c824:	2503      	movs	r5, #3
 800c826:	e7cf      	b.n	800c7c8 <HAL_GPIO_Init+0x14c>
 800c828:	2504      	movs	r5, #4
 800c82a:	e7cd      	b.n	800c7c8 <HAL_GPIO_Init+0x14c>
 800c82c:	2505      	movs	r5, #5
 800c82e:	e7cb      	b.n	800c7c8 <HAL_GPIO_Init+0x14c>
 800c830:	2506      	movs	r5, #6
 800c832:	e7c9      	b.n	800c7c8 <HAL_GPIO_Init+0x14c>
 800c834:	2507      	movs	r5, #7
 800c836:	e7c7      	b.n	800c7c8 <HAL_GPIO_Init+0x14c>
 800c838:	2508      	movs	r5, #8
 800c83a:	e7c5      	b.n	800c7c8 <HAL_GPIO_Init+0x14c>
 800c83c:	40013c00 	.word	0x40013c00
 800c840:	40020000 	.word	0x40020000
 800c844:	40023800 	.word	0x40023800
 800c848:	40021400 	.word	0x40021400

0800c84c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800c84c:	b10a      	cbz	r2, 800c852 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800c84e:	6181      	str	r1, [r0, #24]
  }
}
 800c850:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800c852:	0409      	lsls	r1, r1, #16
 800c854:	e7fb      	b.n	800c84e <HAL_GPIO_WritePin+0x2>

0800c856 <HAL_GPIO_TogglePin>:
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->ODR & GPIO_Pin) == GPIO_Pin)
 800c856:	6943      	ldr	r3, [r0, #20]
 800c858:	ea31 0303 	bics.w	r3, r1, r3
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 800c85c:	bf08      	it	eq
 800c85e:	0409      	lsleq	r1, r1, #16
  }
  else
  {
    GPIOx->BSRR = GPIO_Pin;
 800c860:	6181      	str	r1, [r0, #24]
  }
}
 800c862:	4770      	bx	lr

0800c864 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c864:	6801      	ldr	r1, [r0, #0]
 800c866:	694b      	ldr	r3, [r1, #20]
 800c868:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800c86c:	f04f 0200 	mov.w	r2, #0
 800c870:	d010      	beq.n	800c894 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c872:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800c876:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800c878:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c87a:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c87c:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c880:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c884:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800c886:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c88a:	f043 0304 	orr.w	r3, r3, #4
 800c88e:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800c890:	2001      	movs	r0, #1
 800c892:	4770      	bx	lr
  }
  return HAL_OK;
 800c894:	4618      	mov	r0, r3
}
 800c896:	4770      	bx	lr

0800c898 <I2C_WaitOnFlagUntilTimeout>:
{
 800c898:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800c89c:	4606      	mov	r6, r0
 800c89e:	460f      	mov	r7, r1
 800c8a0:	4691      	mov	r9, r2
 800c8a2:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c8a4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800c8a8:	6833      	ldr	r3, [r6, #0]
 800c8aa:	f1ba 0f01 	cmp.w	sl, #1
 800c8ae:	bf0c      	ite	eq
 800c8b0:	695c      	ldreq	r4, [r3, #20]
 800c8b2:	699c      	ldrne	r4, [r3, #24]
 800c8b4:	ea27 0404 	bic.w	r4, r7, r4
 800c8b8:	b2a4      	uxth	r4, r4
 800c8ba:	fab4 f484 	clz	r4, r4
 800c8be:	0964      	lsrs	r4, r4, #5
 800c8c0:	45a1      	cmp	r9, r4
 800c8c2:	d001      	beq.n	800c8c8 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800c8c4:	2000      	movs	r0, #0
 800c8c6:	e017      	b.n	800c8f8 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800c8c8:	1c6a      	adds	r2, r5, #1
 800c8ca:	d0ee      	beq.n	800c8aa <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c8cc:	f7ff f8dc 	bl	800ba88 <HAL_GetTick>
 800c8d0:	9b08      	ldr	r3, [sp, #32]
 800c8d2:	1ac0      	subs	r0, r0, r3
 800c8d4:	42a8      	cmp	r0, r5
 800c8d6:	d801      	bhi.n	800c8dc <I2C_WaitOnFlagUntilTimeout+0x44>
 800c8d8:	2d00      	cmp	r5, #0
 800c8da:	d1e5      	bne.n	800c8a8 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c8dc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c8de:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c8e0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c8e2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c8e6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c8ea:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c8ec:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c8f0:	f042 0220 	orr.w	r2, r2, #32
 800c8f4:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 800c8f6:	2001      	movs	r0, #1
}
 800c8f8:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800c8fc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800c8fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c900:	4604      	mov	r4, r0
 800c902:	460f      	mov	r7, r1
 800c904:	4616      	mov	r6, r2
 800c906:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c908:	6825      	ldr	r5, [r4, #0]
 800c90a:	6968      	ldr	r0, [r5, #20]
 800c90c:	ea27 0000 	bic.w	r0, r7, r0
 800c910:	b280      	uxth	r0, r0
 800c912:	b1b8      	cbz	r0, 800c944 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c914:	696b      	ldr	r3, [r5, #20]
 800c916:	055a      	lsls	r2, r3, #21
 800c918:	d516      	bpl.n	800c948 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c91a:	682b      	ldr	r3, [r5, #0]
 800c91c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c920:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c922:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800c926:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800c928:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c92a:	2300      	movs	r3, #0
 800c92c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c92e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c932:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c936:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c938:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c93c:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c93e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800c942:	2001      	movs	r0, #1
}
 800c944:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800c948:	1c73      	adds	r3, r6, #1
 800c94a:	d0de      	beq.n	800c90a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c94c:	f7ff f89c 	bl	800ba88 <HAL_GetTick>
 800c950:	eba0 0008 	sub.w	r0, r0, r8
 800c954:	42b0      	cmp	r0, r6
 800c956:	d801      	bhi.n	800c95c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 800c958:	2e00      	cmp	r6, #0
 800c95a:	d1d5      	bne.n	800c908 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c95c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c95e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c960:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c962:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c966:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c96a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c96c:	f042 0220 	orr.w	r2, r2, #32
 800c970:	e7e4      	b.n	800c93c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800c972 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800c972:	b570      	push	{r4, r5, r6, lr}
 800c974:	4604      	mov	r4, r0
 800c976:	460d      	mov	r5, r1
 800c978:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c97a:	6821      	ldr	r1, [r4, #0]
 800c97c:	694b      	ldr	r3, [r1, #20]
 800c97e:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800c982:	d001      	beq.n	800c988 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800c984:	2000      	movs	r0, #0
 800c986:	e010      	b.n	800c9aa <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c988:	694a      	ldr	r2, [r1, #20]
 800c98a:	06d2      	lsls	r2, r2, #27
 800c98c:	d50e      	bpl.n	800c9ac <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c98e:	f06f 0210 	mvn.w	r2, #16
 800c992:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800c994:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c996:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c998:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c99c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800c9a0:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c9a2:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c9a4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 800c9a8:	2001      	movs	r0, #1
}
 800c9aa:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c9ac:	f7ff f86c 	bl	800ba88 <HAL_GetTick>
 800c9b0:	1b80      	subs	r0, r0, r6
 800c9b2:	42a8      	cmp	r0, r5
 800c9b4:	d801      	bhi.n	800c9ba <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800c9b6:	2d00      	cmp	r5, #0
 800c9b8:	d1df      	bne.n	800c97a <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c9ba:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800c9bc:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c9be:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c9c0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c9c4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c9c8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c9ca:	f042 0220 	orr.w	r2, r2, #32
 800c9ce:	e7e8      	b.n	800c9a2 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800c9d0 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800c9d0:	b570      	push	{r4, r5, r6, lr}
 800c9d2:	4604      	mov	r4, r0
 800c9d4:	460d      	mov	r5, r1
 800c9d6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c9d8:	6823      	ldr	r3, [r4, #0]
 800c9da:	695b      	ldr	r3, [r3, #20]
 800c9dc:	075b      	lsls	r3, r3, #29
 800c9de:	d501      	bpl.n	800c9e4 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800c9e0:	2000      	movs	r0, #0
}
 800c9e2:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800c9e4:	4620      	mov	r0, r4
 800c9e6:	f7ff ff3d 	bl	800c864 <I2C_IsAcknowledgeFailed>
 800c9ea:	b9a8      	cbnz	r0, 800ca18 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800c9ec:	1c6a      	adds	r2, r5, #1
 800c9ee:	d0f3      	beq.n	800c9d8 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c9f0:	f7ff f84a 	bl	800ba88 <HAL_GetTick>
 800c9f4:	1b80      	subs	r0, r0, r6
 800c9f6:	42a8      	cmp	r0, r5
 800c9f8:	d801      	bhi.n	800c9fe <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800c9fa:	2d00      	cmp	r5, #0
 800c9fc:	d1ec      	bne.n	800c9d8 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c9fe:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800ca00:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800ca02:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800ca04:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ca08:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ca0c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ca0e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ca12:	f042 0220 	orr.w	r2, r2, #32
 800ca16:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800ca18:	2001      	movs	r0, #1
 800ca1a:	e7e2      	b.n	800c9e2 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800ca1c <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800ca1c:	b570      	push	{r4, r5, r6, lr}
 800ca1e:	4604      	mov	r4, r0
 800ca20:	460d      	mov	r5, r1
 800ca22:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800ca24:	6823      	ldr	r3, [r4, #0]
 800ca26:	695b      	ldr	r3, [r3, #20]
 800ca28:	061b      	lsls	r3, r3, #24
 800ca2a:	d501      	bpl.n	800ca30 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800ca2c:	2000      	movs	r0, #0
}
 800ca2e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800ca30:	4620      	mov	r0, r4
 800ca32:	f7ff ff17 	bl	800c864 <I2C_IsAcknowledgeFailed>
 800ca36:	b9a8      	cbnz	r0, 800ca64 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800ca38:	1c6a      	adds	r2, r5, #1
 800ca3a:	d0f3      	beq.n	800ca24 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ca3c:	f7ff f824 	bl	800ba88 <HAL_GetTick>
 800ca40:	1b80      	subs	r0, r0, r6
 800ca42:	42a8      	cmp	r0, r5
 800ca44:	d801      	bhi.n	800ca4a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800ca46:	2d00      	cmp	r5, #0
 800ca48:	d1ec      	bne.n	800ca24 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800ca4a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800ca4c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800ca4e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800ca50:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ca54:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ca58:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ca5a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ca5e:	f042 0220 	orr.w	r2, r2, #32
 800ca62:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800ca64:	2001      	movs	r0, #1
 800ca66:	e7e2      	b.n	800ca2e <I2C_WaitOnTXEFlagUntilTimeout+0x12>

0800ca68 <I2C_RequestMemoryWrite>:
{
 800ca68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ca6c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ca6e:	6802      	ldr	r2, [r0, #0]
{
 800ca70:	b085      	sub	sp, #20
 800ca72:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800ca76:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ca78:	6813      	ldr	r3, [r2, #0]
 800ca7a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ca7e:	6013      	str	r3, [r2, #0]
{
 800ca80:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ca82:	463b      	mov	r3, r7
 800ca84:	f8cd 8000 	str.w	r8, [sp]
 800ca88:	2200      	movs	r2, #0
 800ca8a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800ca8e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ca90:	f7ff ff02 	bl	800c898 <I2C_WaitOnFlagUntilTimeout>
 800ca94:	6823      	ldr	r3, [r4, #0]
 800ca96:	b138      	cbz	r0, 800caa8 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800ca98:	681b      	ldr	r3, [r3, #0]
 800ca9a:	05db      	lsls	r3, r3, #23
 800ca9c:	d502      	bpl.n	800caa4 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800ca9e:	f44f 7300 	mov.w	r3, #512	; 0x200
 800caa2:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800caa4:	2003      	movs	r0, #3
 800caa6:	e00a      	b.n	800cabe <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800caa8:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800caac:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800caae:	4919      	ldr	r1, [pc, #100]	; (800cb14 <I2C_RequestMemoryWrite+0xac>)
 800cab0:	4643      	mov	r3, r8
 800cab2:	463a      	mov	r2, r7
 800cab4:	4620      	mov	r0, r4
 800cab6:	f7ff ff21 	bl	800c8fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800caba:	b118      	cbz	r0, 800cac4 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800cabc:	2001      	movs	r0, #1
}
 800cabe:	b005      	add	sp, #20
 800cac0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cac4:	6823      	ldr	r3, [r4, #0]
 800cac6:	9003      	str	r0, [sp, #12]
 800cac8:	695a      	ldr	r2, [r3, #20]
 800caca:	9203      	str	r2, [sp, #12]
 800cacc:	699b      	ldr	r3, [r3, #24]
 800cace:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cad0:	4642      	mov	r2, r8
 800cad2:	4639      	mov	r1, r7
 800cad4:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cad6:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cad8:	f7ff ffa0 	bl	800ca1c <I2C_WaitOnTXEFlagUntilTimeout>
 800cadc:	b140      	cbz	r0, 800caf0 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800cade:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cae0:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cae2:	bf01      	itttt	eq
 800cae4:	6822      	ldreq	r2, [r4, #0]
 800cae6:	6813      	ldreq	r3, [r2, #0]
 800cae8:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800caec:	6013      	streq	r3, [r2, #0]
 800caee:	e7e5      	b.n	800cabc <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800caf0:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800caf4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800caf6:	d102      	bne.n	800cafe <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800caf8:	b2ed      	uxtb	r5, r5
 800cafa:	611d      	str	r5, [r3, #16]
 800cafc:	e7df      	b.n	800cabe <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800cafe:	0a2a      	lsrs	r2, r5, #8
 800cb00:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cb02:	4639      	mov	r1, r7
 800cb04:	4642      	mov	r2, r8
 800cb06:	4620      	mov	r0, r4
 800cb08:	f7ff ff88 	bl	800ca1c <I2C_WaitOnTXEFlagUntilTimeout>
 800cb0c:	2800      	cmp	r0, #0
 800cb0e:	d1e6      	bne.n	800cade <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800cb10:	6823      	ldr	r3, [r4, #0]
 800cb12:	e7f1      	b.n	800caf8 <I2C_RequestMemoryWrite+0x90>
 800cb14:	00010002 	.word	0x00010002

0800cb18 <I2C_RequestMemoryRead>:
{
 800cb18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800cb1c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cb1e:	6803      	ldr	r3, [r0, #0]
{
 800cb20:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cb22:	681a      	ldr	r2, [r3, #0]
 800cb24:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800cb28:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800cb2a:	681a      	ldr	r2, [r3, #0]
{
 800cb2c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800cb30:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800cb34:	601a      	str	r2, [r3, #0]
{
 800cb36:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800cb38:	463b      	mov	r3, r7
 800cb3a:	f8cd 8000 	str.w	r8, [sp]
 800cb3e:	2200      	movs	r2, #0
 800cb40:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800cb44:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800cb46:	f7ff fea7 	bl	800c898 <I2C_WaitOnFlagUntilTimeout>
 800cb4a:	6823      	ldr	r3, [r4, #0]
 800cb4c:	b148      	cbz	r0, 800cb62 <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800cb4e:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800cb50:	05db      	lsls	r3, r3, #23
 800cb52:	d502      	bpl.n	800cb5a <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800cb54:	f44f 7300 	mov.w	r3, #512	; 0x200
 800cb58:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800cb5a:	2003      	movs	r0, #3
}
 800cb5c:	b004      	add	sp, #16
 800cb5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800cb62:	fa5f f986 	uxtb.w	r9, r6
 800cb66:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800cb6a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800cb6c:	492a      	ldr	r1, [pc, #168]	; (800cc18 <I2C_RequestMemoryRead+0x100>)
 800cb6e:	4643      	mov	r3, r8
 800cb70:	463a      	mov	r2, r7
 800cb72:	4620      	mov	r0, r4
 800cb74:	f7ff fec2 	bl	800c8fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800cb78:	b108      	cbz	r0, 800cb7e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800cb7a:	2001      	movs	r0, #1
 800cb7c:	e7ee      	b.n	800cb5c <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cb7e:	6823      	ldr	r3, [r4, #0]
 800cb80:	9003      	str	r0, [sp, #12]
 800cb82:	695a      	ldr	r2, [r3, #20]
 800cb84:	9203      	str	r2, [sp, #12]
 800cb86:	699b      	ldr	r3, [r3, #24]
 800cb88:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cb8a:	4642      	mov	r2, r8
 800cb8c:	4639      	mov	r1, r7
 800cb8e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cb90:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cb92:	f7ff ff43 	bl	800ca1c <I2C_WaitOnTXEFlagUntilTimeout>
 800cb96:	b140      	cbz	r0, 800cbaa <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800cb98:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cb9a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cb9c:	bf01      	itttt	eq
 800cb9e:	6822      	ldreq	r2, [r4, #0]
 800cba0:	6813      	ldreq	r3, [r2, #0]
 800cba2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800cba6:	6013      	streq	r3, [r2, #0]
 800cba8:	e7e7      	b.n	800cb7a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800cbaa:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cbae:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800cbb0:	d11a      	bne.n	800cbe8 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800cbb2:	b2ed      	uxtb	r5, r5
 800cbb4:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cbb6:	4642      	mov	r2, r8
 800cbb8:	4639      	mov	r1, r7
 800cbba:	4620      	mov	r0, r4
 800cbbc:	f7ff ff2e 	bl	800ca1c <I2C_WaitOnTXEFlagUntilTimeout>
 800cbc0:	2800      	cmp	r0, #0
 800cbc2:	d1e9      	bne.n	800cb98 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800cbc4:	6822      	ldr	r2, [r4, #0]
 800cbc6:	6813      	ldr	r3, [r2, #0]
 800cbc8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800cbcc:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800cbce:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800cbd2:	4602      	mov	r2, r0
 800cbd4:	f8cd 8000 	str.w	r8, [sp]
 800cbd8:	463b      	mov	r3, r7
 800cbda:	4620      	mov	r0, r4
 800cbdc:	f7ff fe5c 	bl	800c898 <I2C_WaitOnFlagUntilTimeout>
 800cbe0:	6822      	ldr	r2, [r4, #0]
 800cbe2:	b160      	cbz	r0, 800cbfe <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800cbe4:	6813      	ldr	r3, [r2, #0]
 800cbe6:	e7b3      	b.n	800cb50 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800cbe8:	0a2a      	lsrs	r2, r5, #8
 800cbea:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800cbec:	4639      	mov	r1, r7
 800cbee:	4642      	mov	r2, r8
 800cbf0:	4620      	mov	r0, r4
 800cbf2:	f7ff ff13 	bl	800ca1c <I2C_WaitOnTXEFlagUntilTimeout>
 800cbf6:	2800      	cmp	r0, #0
 800cbf8:	d1ce      	bne.n	800cb98 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800cbfa:	6823      	ldr	r3, [r4, #0]
 800cbfc:	e7d9      	b.n	800cbb2 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800cbfe:	f049 0301 	orr.w	r3, r9, #1
 800cc02:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800cc04:	4904      	ldr	r1, [pc, #16]	; (800cc18 <I2C_RequestMemoryRead+0x100>)
 800cc06:	4643      	mov	r3, r8
 800cc08:	463a      	mov	r2, r7
 800cc0a:	4620      	mov	r0, r4
 800cc0c:	f7ff fe76 	bl	800c8fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800cc10:	3800      	subs	r0, #0
 800cc12:	bf18      	it	ne
 800cc14:	2001      	movne	r0, #1
 800cc16:	e7a1      	b.n	800cb5c <I2C_RequestMemoryRead+0x44>
 800cc18:	00010002 	.word	0x00010002

0800cc1c <HAL_I2C_Init>:
{
 800cc1c:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800cc1e:	4604      	mov	r4, r0
 800cc20:	b908      	cbnz	r0, 800cc26 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800cc22:	2001      	movs	r0, #1
}
 800cc24:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800cc26:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cc2a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800cc2e:	b91b      	cbnz	r3, 800cc38 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800cc30:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800cc34:	f7f6 f99a 	bl	8002f6c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800cc38:	2324      	movs	r3, #36	; 0x24
 800cc3a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800cc3e:	6823      	ldr	r3, [r4, #0]
 800cc40:	681a      	ldr	r2, [r3, #0]
 800cc42:	f022 0201 	bic.w	r2, r2, #1
 800cc46:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800cc48:	681a      	ldr	r2, [r3, #0]
 800cc4a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800cc4e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800cc50:	681a      	ldr	r2, [r3, #0]
 800cc52:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800cc56:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800cc58:	f000 fe6e 	bl	800d938 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800cc5c:	4b3f      	ldr	r3, [pc, #252]	; (800cd5c <HAL_I2C_Init+0x140>)
 800cc5e:	6865      	ldr	r5, [r4, #4]
 800cc60:	429d      	cmp	r5, r3
 800cc62:	bf94      	ite	ls
 800cc64:	4b3e      	ldrls	r3, [pc, #248]	; (800cd60 <HAL_I2C_Init+0x144>)
 800cc66:	4b3f      	ldrhi	r3, [pc, #252]	; (800cd64 <HAL_I2C_Init+0x148>)
 800cc68:	4298      	cmp	r0, r3
 800cc6a:	bf8c      	ite	hi
 800cc6c:	2300      	movhi	r3, #0
 800cc6e:	2301      	movls	r3, #1
 800cc70:	2b00      	cmp	r3, #0
 800cc72:	d1d6      	bne.n	800cc22 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800cc74:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800cc76:	4e39      	ldr	r6, [pc, #228]	; (800cd5c <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800cc78:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800cc7a:	493b      	ldr	r1, [pc, #236]	; (800cd68 <HAL_I2C_Init+0x14c>)
 800cc7c:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800cc80:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800cc84:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800cc86:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800cc88:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800cc8a:	bf88      	it	hi
 800cc8c:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 800cc90:	6a13      	ldr	r3, [r2, #32]
 800cc92:	bf88      	it	hi
 800cc94:	4371      	mulhi	r1, r6
 800cc96:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800cc9a:	bf84      	itt	hi
 800cc9c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800cca0:	fbb1 f1f6 	udivhi	r1, r1, r6
 800cca4:	3101      	adds	r1, #1
 800cca6:	4319      	orrs	r1, r3
 800cca8:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800ccaa:	69d1      	ldr	r1, [r2, #28]
 800ccac:	1e43      	subs	r3, r0, #1
 800ccae:	482b      	ldr	r0, [pc, #172]	; (800cd5c <HAL_I2C_Init+0x140>)
 800ccb0:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800ccb4:	4285      	cmp	r5, r0
 800ccb6:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800ccba:	d832      	bhi.n	800cd22 <HAL_I2C_Init+0x106>
 800ccbc:	006d      	lsls	r5, r5, #1
 800ccbe:	f640 70fc 	movw	r0, #4092	; 0xffc
 800ccc2:	fbb3 f3f5 	udiv	r3, r3, r5
 800ccc6:	3301      	adds	r3, #1
 800ccc8:	4203      	tst	r3, r0
 800ccca:	d042      	beq.n	800cd52 <HAL_I2C_Init+0x136>
 800cccc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800ccd0:	430b      	orrs	r3, r1
 800ccd2:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800ccd4:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800ccd8:	6811      	ldr	r1, [r2, #0]
 800ccda:	4303      	orrs	r3, r0
 800ccdc:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800cce0:	430b      	orrs	r3, r1
 800cce2:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800cce4:	6891      	ldr	r1, [r2, #8]
 800cce6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800ccea:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800ccee:	4303      	orrs	r3, r0
 800ccf0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800ccf4:	430b      	orrs	r3, r1
 800ccf6:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800ccf8:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800ccfc:	68d1      	ldr	r1, [r2, #12]
 800ccfe:	4303      	orrs	r3, r0
 800cd00:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800cd04:	430b      	orrs	r3, r1
 800cd06:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800cd08:	6813      	ldr	r3, [r2, #0]
 800cd0a:	f043 0301 	orr.w	r3, r3, #1
 800cd0e:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cd10:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800cd12:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cd14:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800cd16:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800cd1a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800cd1c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800cd20:	e780      	b.n	800cc24 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800cd22:	68a0      	ldr	r0, [r4, #8]
 800cd24:	b950      	cbnz	r0, 800cd3c <HAL_I2C_Init+0x120>
 800cd26:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800cd2a:	fbb3 f3f5 	udiv	r3, r3, r5
 800cd2e:	3301      	adds	r3, #1
 800cd30:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800cd34:	b17b      	cbz	r3, 800cd56 <HAL_I2C_Init+0x13a>
 800cd36:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800cd3a:	e7c9      	b.n	800ccd0 <HAL_I2C_Init+0xb4>
 800cd3c:	2019      	movs	r0, #25
 800cd3e:	4345      	muls	r5, r0
 800cd40:	fbb3 f3f5 	udiv	r3, r3, r5
 800cd44:	3301      	adds	r3, #1
 800cd46:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800cd4a:	b123      	cbz	r3, 800cd56 <HAL_I2C_Init+0x13a>
 800cd4c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800cd50:	e7be      	b.n	800ccd0 <HAL_I2C_Init+0xb4>
 800cd52:	2304      	movs	r3, #4
 800cd54:	e7bc      	b.n	800ccd0 <HAL_I2C_Init+0xb4>
 800cd56:	2301      	movs	r3, #1
 800cd58:	e7ba      	b.n	800ccd0 <HAL_I2C_Init+0xb4>
 800cd5a:	bf00      	nop
 800cd5c:	000186a0 	.word	0x000186a0
 800cd60:	001e847f 	.word	0x001e847f
 800cd64:	003d08ff 	.word	0x003d08ff
 800cd68:	000f4240 	.word	0x000f4240

0800cd6c <HAL_I2C_Mem_Write>:
{
 800cd6c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800cd70:	4604      	mov	r4, r0
 800cd72:	4699      	mov	r9, r3
 800cd74:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800cd76:	460f      	mov	r7, r1
 800cd78:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800cd7a:	f7fe fe85 	bl	800ba88 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800cd7e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800cd82:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800cd84:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800cd86:	d003      	beq.n	800cd90 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800cd88:	2002      	movs	r0, #2
}
 800cd8a:	b003      	add	sp, #12
 800cd8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800cd90:	9000      	str	r0, [sp, #0]
 800cd92:	493c      	ldr	r1, [pc, #240]	; (800ce84 <HAL_I2C_Mem_Write+0x118>)
 800cd94:	2319      	movs	r3, #25
 800cd96:	2201      	movs	r2, #1
 800cd98:	4620      	mov	r0, r4
 800cd9a:	f7ff fd7d 	bl	800c898 <I2C_WaitOnFlagUntilTimeout>
 800cd9e:	2800      	cmp	r0, #0
 800cda0:	d1f2      	bne.n	800cd88 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800cda2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800cda6:	2b01      	cmp	r3, #1
 800cda8:	d0ee      	beq.n	800cd88 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cdaa:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800cdac:	2301      	movs	r3, #1
 800cdae:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cdb2:	6803      	ldr	r3, [r0, #0]
 800cdb4:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800cdb6:	bf5e      	ittt	pl
 800cdb8:	6803      	ldrpl	r3, [r0, #0]
 800cdba:	f043 0301 	orrpl.w	r3, r3, #1
 800cdbe:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800cdc0:	6803      	ldr	r3, [r0, #0]
 800cdc2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800cdc6:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800cdc8:	2321      	movs	r3, #33	; 0x21
 800cdca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800cdce:	2340      	movs	r3, #64	; 0x40
 800cdd0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cdd4:	2300      	movs	r3, #0
 800cdd6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800cdd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cdda:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800cddc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800cde0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800cde2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cde4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800cde6:	4b28      	ldr	r3, [pc, #160]	; (800ce88 <HAL_I2C_Mem_Write+0x11c>)
 800cde8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800cdea:	e9cd 6500 	strd	r6, r5, [sp]
 800cdee:	464b      	mov	r3, r9
 800cdf0:	4642      	mov	r2, r8
 800cdf2:	4639      	mov	r1, r7
 800cdf4:	4620      	mov	r0, r4
 800cdf6:	f7ff fe37 	bl	800ca68 <I2C_RequestMemoryWrite>
 800cdfa:	2800      	cmp	r0, #0
 800cdfc:	d02a      	beq.n	800ce54 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800cdfe:	2001      	movs	r0, #1
 800ce00:	e7c3      	b.n	800cd8a <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800ce02:	f7ff fe0b 	bl	800ca1c <I2C_WaitOnTXEFlagUntilTimeout>
 800ce06:	b140      	cbz	r0, 800ce1a <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800ce08:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ce0a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ce0c:	bf01      	itttt	eq
 800ce0e:	6822      	ldreq	r2, [r4, #0]
 800ce10:	6813      	ldreq	r3, [r2, #0]
 800ce12:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800ce16:	6013      	streq	r3, [r2, #0]
 800ce18:	e7f1      	b.n	800cdfe <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ce1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ce1c:	6827      	ldr	r7, [r4, #0]
 800ce1e:	461a      	mov	r2, r3
 800ce20:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ce24:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800ce26:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ce28:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800ce2a:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800ce2c:	3a01      	subs	r2, #1
 800ce2e:	b292      	uxth	r2, r2
 800ce30:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ce32:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800ce34:	1e48      	subs	r0, r1, #1
 800ce36:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ce38:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800ce3a:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ce3c:	d50a      	bpl.n	800ce54 <HAL_I2C_Mem_Write+0xe8>
 800ce3e:	b148      	cbz	r0, 800ce54 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ce40:	785a      	ldrb	r2, [r3, #1]
 800ce42:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800ce44:	3302      	adds	r3, #2
 800ce46:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ce48:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ce4a:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800ce4c:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800ce4e:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800ce50:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800ce52:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800ce54:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800ce56:	462a      	mov	r2, r5
 800ce58:	4631      	mov	r1, r6
 800ce5a:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800ce5c:	2b00      	cmp	r3, #0
 800ce5e:	d1d0      	bne.n	800ce02 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800ce60:	f7ff fdb6 	bl	800c9d0 <I2C_WaitOnBTFFlagUntilTimeout>
 800ce64:	2800      	cmp	r0, #0
 800ce66:	d1cf      	bne.n	800ce08 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ce68:	6822      	ldr	r2, [r4, #0]
 800ce6a:	6813      	ldr	r3, [r2, #0]
 800ce6c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800ce70:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ce72:	2320      	movs	r3, #32
 800ce74:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800ce78:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ce7c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800ce80:	e783      	b.n	800cd8a <HAL_I2C_Mem_Write+0x1e>
 800ce82:	bf00      	nop
 800ce84:	00100002 	.word	0x00100002
 800ce88:	ffff0000 	.word	0xffff0000

0800ce8c <HAL_I2C_Mem_Read>:
{
 800ce8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce90:	4604      	mov	r4, r0
 800ce92:	b087      	sub	sp, #28
 800ce94:	4699      	mov	r9, r3
 800ce96:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800ce98:	460d      	mov	r5, r1
 800ce9a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800ce9c:	f7fe fdf4 	bl	800ba88 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800cea0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800cea4:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800cea6:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800cea8:	d004      	beq.n	800ceb4 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800ceaa:	2502      	movs	r5, #2
}
 800ceac:	4628      	mov	r0, r5
 800ceae:	b007      	add	sp, #28
 800ceb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800ceb4:	9000      	str	r0, [sp, #0]
 800ceb6:	4976      	ldr	r1, [pc, #472]	; (800d090 <HAL_I2C_Mem_Read+0x204>)
 800ceb8:	2319      	movs	r3, #25
 800ceba:	2201      	movs	r2, #1
 800cebc:	4620      	mov	r0, r4
 800cebe:	f7ff fceb 	bl	800c898 <I2C_WaitOnFlagUntilTimeout>
 800cec2:	2800      	cmp	r0, #0
 800cec4:	d1f1      	bne.n	800ceaa <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800cec6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800ceca:	2b01      	cmp	r3, #1
 800cecc:	d0ed      	beq.n	800ceaa <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cece:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800ced0:	2301      	movs	r3, #1
 800ced2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800ced6:	6803      	ldr	r3, [r0, #0]
 800ced8:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800ceda:	bf5e      	ittt	pl
 800cedc:	6803      	ldrpl	r3, [r0, #0]
 800cede:	f043 0301 	orrpl.w	r3, r3, #1
 800cee2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800cee4:	6803      	ldr	r3, [r0, #0]
 800cee6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800ceea:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800ceec:	2322      	movs	r3, #34	; 0x22
 800ceee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800cef2:	2340      	movs	r3, #64	; 0x40
 800cef4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cef8:	2300      	movs	r3, #0
 800cefa:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800cefc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cefe:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800cf00:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800cf04:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800cf06:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cf08:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800cf0a:	4b62      	ldr	r3, [pc, #392]	; (800d094 <HAL_I2C_Mem_Read+0x208>)
 800cf0c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800cf0e:	4629      	mov	r1, r5
 800cf10:	e9cd 7600 	strd	r7, r6, [sp]
 800cf14:	464b      	mov	r3, r9
 800cf16:	4642      	mov	r2, r8
 800cf18:	4620      	mov	r0, r4
 800cf1a:	f7ff fdfd 	bl	800cb18 <I2C_RequestMemoryRead>
 800cf1e:	4605      	mov	r5, r0
 800cf20:	b108      	cbz	r0, 800cf26 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800cf22:	2501      	movs	r5, #1
 800cf24:	e7c2      	b.n	800ceac <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800cf26:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cf28:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800cf2a:	b9b2      	cbnz	r2, 800cf5a <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cf2c:	9002      	str	r0, [sp, #8]
 800cf2e:	695a      	ldr	r2, [r3, #20]
 800cf30:	9202      	str	r2, [sp, #8]
 800cf32:	699a      	ldr	r2, [r3, #24]
 800cf34:	9202      	str	r2, [sp, #8]
 800cf36:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cf38:	681a      	ldr	r2, [r3, #0]
 800cf3a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800cf3e:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cf40:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800d098 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800cf44:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800cf46:	2b00      	cmp	r3, #0
 800cf48:	d12c      	bne.n	800cfa4 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800cf4a:	2220      	movs	r2, #32
 800cf4c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800cf50:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800cf54:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800cf58:	e7a8      	b.n	800ceac <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800cf5a:	2a01      	cmp	r2, #1
 800cf5c:	d10a      	bne.n	800cf74 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cf5e:	681a      	ldr	r2, [r3, #0]
 800cf60:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800cf64:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cf66:	9003      	str	r0, [sp, #12]
 800cf68:	695a      	ldr	r2, [r3, #20]
 800cf6a:	9203      	str	r2, [sp, #12]
 800cf6c:	699a      	ldr	r2, [r3, #24]
 800cf6e:	9203      	str	r2, [sp, #12]
 800cf70:	9a03      	ldr	r2, [sp, #12]
 800cf72:	e7e1      	b.n	800cf38 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800cf74:	2a02      	cmp	r2, #2
 800cf76:	d10e      	bne.n	800cf96 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cf78:	681a      	ldr	r2, [r3, #0]
 800cf7a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800cf7e:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800cf80:	681a      	ldr	r2, [r3, #0]
 800cf82:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800cf86:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cf88:	9004      	str	r0, [sp, #16]
 800cf8a:	695a      	ldr	r2, [r3, #20]
 800cf8c:	9204      	str	r2, [sp, #16]
 800cf8e:	699b      	ldr	r3, [r3, #24]
 800cf90:	9304      	str	r3, [sp, #16]
 800cf92:	9b04      	ldr	r3, [sp, #16]
 800cf94:	e7d4      	b.n	800cf40 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cf96:	9005      	str	r0, [sp, #20]
 800cf98:	695a      	ldr	r2, [r3, #20]
 800cf9a:	9205      	str	r2, [sp, #20]
 800cf9c:	699b      	ldr	r3, [r3, #24]
 800cf9e:	9305      	str	r3, [sp, #20]
 800cfa0:	9b05      	ldr	r3, [sp, #20]
 800cfa2:	e7cd      	b.n	800cf40 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800cfa4:	2b03      	cmp	r3, #3
 800cfa6:	d856      	bhi.n	800d056 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800cfa8:	2b01      	cmp	r3, #1
 800cfaa:	d115      	bne.n	800cfd8 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800cfac:	4632      	mov	r2, r6
 800cfae:	4639      	mov	r1, r7
 800cfb0:	4620      	mov	r0, r4
 800cfb2:	f7ff fcde 	bl	800c972 <I2C_WaitOnRXNEFlagUntilTimeout>
 800cfb6:	2800      	cmp	r0, #0
 800cfb8:	d1b3      	bne.n	800cf22 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cfba:	6823      	ldr	r3, [r4, #0]
 800cfbc:	691a      	ldr	r2, [r3, #16]
 800cfbe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cfc0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800cfc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cfc4:	3301      	adds	r3, #1
 800cfc6:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800cfc8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800cfca:	3b01      	subs	r3, #1
 800cfcc:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800cfce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cfd0:	3b01      	subs	r3, #1
 800cfd2:	b29b      	uxth	r3, r3
 800cfd4:	8563      	strh	r3, [r4, #42]	; 0x2a
 800cfd6:	e7b5      	b.n	800cf44 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800cfd8:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cfda:	9600      	str	r6, [sp, #0]
 800cfdc:	463b      	mov	r3, r7
 800cfde:	f04f 0200 	mov.w	r2, #0
 800cfe2:	4641      	mov	r1, r8
 800cfe4:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800cfe6:	d119      	bne.n	800d01c <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cfe8:	f7ff fc56 	bl	800c898 <I2C_WaitOnFlagUntilTimeout>
 800cfec:	2800      	cmp	r0, #0
 800cfee:	d198      	bne.n	800cf22 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cff0:	6823      	ldr	r3, [r4, #0]
 800cff2:	681a      	ldr	r2, [r3, #0]
 800cff4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800cff8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cffa:	691a      	ldr	r2, [r3, #16]
 800cffc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cffe:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800d000:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d002:	1c53      	adds	r3, r2, #1
 800d004:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800d006:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800d008:	3b01      	subs	r3, #1
 800d00a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800d00c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d00e:	3b01      	subs	r3, #1
 800d010:	b29b      	uxth	r3, r3
 800d012:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d014:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d016:	691b      	ldr	r3, [r3, #16]
 800d018:	7053      	strb	r3, [r2, #1]
 800d01a:	e7d2      	b.n	800cfc2 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800d01c:	f7ff fc3c 	bl	800c898 <I2C_WaitOnFlagUntilTimeout>
 800d020:	2800      	cmp	r0, #0
 800d022:	f47f af7e 	bne.w	800cf22 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d026:	6823      	ldr	r3, [r4, #0]
 800d028:	681a      	ldr	r2, [r3, #0]
 800d02a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d02e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d030:	691a      	ldr	r2, [r3, #16]
 800d032:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d034:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800d036:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800d038:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800d03a:	3301      	adds	r3, #1
 800d03c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800d03e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800d040:	3b01      	subs	r3, #1
 800d042:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800d044:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d046:	3b01      	subs	r3, #1
 800d048:	b29b      	uxth	r3, r3
 800d04a:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800d04c:	4602      	mov	r2, r0
 800d04e:	463b      	mov	r3, r7
 800d050:	4641      	mov	r1, r8
 800d052:	4620      	mov	r0, r4
 800d054:	e7c8      	b.n	800cfe8 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800d056:	4632      	mov	r2, r6
 800d058:	4639      	mov	r1, r7
 800d05a:	4620      	mov	r0, r4
 800d05c:	f7ff fc89 	bl	800c972 <I2C_WaitOnRXNEFlagUntilTimeout>
 800d060:	2800      	cmp	r0, #0
 800d062:	f47f af5e 	bne.w	800cf22 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d066:	6823      	ldr	r3, [r4, #0]
 800d068:	691a      	ldr	r2, [r3, #16]
 800d06a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d06c:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800d06e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d070:	1c53      	adds	r3, r2, #1
 800d072:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800d074:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800d076:	3b01      	subs	r3, #1
 800d078:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800d07a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d07c:	3b01      	subs	r3, #1
 800d07e:	b29b      	uxth	r3, r3
 800d080:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800d082:	6823      	ldr	r3, [r4, #0]
 800d084:	6959      	ldr	r1, [r3, #20]
 800d086:	0749      	lsls	r1, r1, #29
 800d088:	f57f af5c 	bpl.w	800cf44 <HAL_I2C_Mem_Read+0xb8>
 800d08c:	e7c3      	b.n	800d016 <HAL_I2C_Mem_Read+0x18a>
 800d08e:	bf00      	nop
 800d090:	00100002 	.word	0x00100002
 800d094:	ffff0000 	.word	0xffff0000
 800d098:	00010004 	.word	0x00010004

0800d09c <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 800d09c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d09e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d0a2:	2b20      	cmp	r3, #32
 800d0a4:	b2dc      	uxtb	r4, r3
 800d0a6:	d116      	bne.n	800d0d6 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d0a8:	2324      	movs	r3, #36	; 0x24
 800d0aa:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800d0ae:	6803      	ldr	r3, [r0, #0]
 800d0b0:	681a      	ldr	r2, [r3, #0]
 800d0b2:	f022 0201 	bic.w	r2, r2, #1
 800d0b6:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800d0b8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800d0ba:	f022 0210 	bic.w	r2, r2, #16
 800d0be:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 800d0c0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800d0c2:	4311      	orrs	r1, r2
 800d0c4:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 800d0c6:	681a      	ldr	r2, [r3, #0]
 800d0c8:	f042 0201 	orr.w	r2, r2, #1
 800d0cc:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800d0ce:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 800d0d2:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800d0d4:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800d0d6:	2002      	movs	r0, #2
 800d0d8:	e7fc      	b.n	800d0d4 <HAL_I2CEx_ConfigAnalogFilter+0x38>

0800d0da <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800d0da:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d0dc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d0e0:	2b20      	cmp	r3, #32
 800d0e2:	b2dc      	uxtb	r4, r3
 800d0e4:	d116      	bne.n	800d114 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800d0e6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d0e8:	2324      	movs	r3, #36	; 0x24
 800d0ea:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d0ee:	6813      	ldr	r3, [r2, #0]
 800d0f0:	f023 0301 	bic.w	r3, r3, #1
 800d0f4:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 800d0f6:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 800d0f8:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 800d0fc:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800d0fe:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 800d100:	b29b      	uxth	r3, r3
 800d102:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 800d104:	6813      	ldr	r3, [r2, #0]
 800d106:	f043 0301 	orr.w	r3, r3, #1
 800d10a:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800d10c:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 800d110:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800d112:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 800d114:	2002      	movs	r0, #2
 800d116:	e7fc      	b.n	800d112 <HAL_I2CEx_ConfigDigitalFilter+0x38>

0800d118 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d118:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d11a:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d11e:	01d2      	lsls	r2, r2, #7
 800d120:	3284      	adds	r2, #132	; 0x84
 800d122:	1883      	adds	r3, r0, r2
{
 800d124:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d128:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d12a:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d12c:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800d12e:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d132:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800d136:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d138:	68c5      	ldr	r5, [r0, #12]
 800d13a:	f10c 0701 	add.w	r7, ip, #1
 800d13e:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d142:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d146:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d148:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d14a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800d14e:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d150:	68c5      	ldr	r5, [r0, #12]
 800d152:	68ce      	ldr	r6, [r1, #12]
 800d154:	f3c5 050a 	ubfx	r5, r5, #0, #11
 800d158:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800d15a:	689d      	ldr	r5, [r3, #8]
 800d15c:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800d160:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d162:	68c7      	ldr	r7, [r0, #12]
 800d164:	688d      	ldr	r5, [r1, #8]
 800d166:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800d16a:	3501      	adds	r5, #1
 800d16c:	443d      	add	r5, r7
 800d16e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800d172:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d174:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d176:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d178:	f025 0507 	bic.w	r5, r5, #7
 800d17c:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800d17e:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d182:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800d184:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800d186:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800d18a:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800d18e:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800d192:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800d196:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800d19a:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800d19e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800d1a2:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800d1a4:	695d      	ldr	r5, [r3, #20]
 800d1a6:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800d1aa:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800d1ac:	694d      	ldr	r5, [r1, #20]
 800d1ae:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800d1b0:	69dd      	ldr	r5, [r3, #28]
 800d1b2:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800d1b6:	f025 0507 	bic.w	r5, r5, #7
 800d1ba:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800d1bc:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800d1c0:	433d      	orrs	r5, r7
 800d1c2:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d1c4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d1c6:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d1c8:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d1cc:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d1ce:	b31e      	cbz	r6, 800d218 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800d1d0:	2e01      	cmp	r6, #1
 800d1d2:	d023      	beq.n	800d21c <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800d1d4:	1eb5      	subs	r5, r6, #2
 800d1d6:	2d02      	cmp	r5, #2
 800d1d8:	d922      	bls.n	800d220 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800d1da:	2e07      	cmp	r6, #7
 800d1dc:	bf0c      	ite	eq
 800d1de:	2502      	moveq	r5, #2
 800d1e0:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800d1e2:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800d1e4:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 800d1e8:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d1ea:	eba4 040c 	sub.w	r4, r4, ip
 800d1ee:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d1f0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d1f2:	436c      	muls	r4, r5
 800d1f4:	436e      	muls	r6, r5
 800d1f6:	3403      	adds	r4, #3
 800d1f8:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800d1fc:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800d1fe:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800d200:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 800d204:	f024 0407 	bic.w	r4, r4, #7
 800d208:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d20a:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800d20c:	5883      	ldr	r3, [r0, r2]
 800d20e:	f043 0301 	orr.w	r3, r3, #1
 800d212:	5083      	str	r3, [r0, r2]
}
 800d214:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800d218:	2504      	movs	r5, #4
 800d21a:	e7e2      	b.n	800d1e2 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800d21c:	2503      	movs	r5, #3
 800d21e:	e7e0      	b.n	800d1e2 <LTDC_SetConfig+0xca>
    tmp = 2U;
 800d220:	2502      	movs	r5, #2
 800d222:	e7de      	b.n	800d1e2 <LTDC_SetConfig+0xca>

0800d224 <HAL_LTDC_Init>:
{
 800d224:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800d226:	4604      	mov	r4, r0
 800d228:	2800      	cmp	r0, #0
 800d22a:	d063      	beq.n	800d2f4 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800d22c:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800d230:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d234:	b91b      	cbnz	r3, 800d23e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800d236:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800d23a:	f7f5 fef3 	bl	8003024 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d23e:	2302      	movs	r3, #2
 800d240:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d244:	6823      	ldr	r3, [r4, #0]
 800d246:	699a      	ldr	r2, [r3, #24]
 800d248:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800d24c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d24e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800d252:	4302      	orrs	r2, r0
 800d254:	68e0      	ldr	r0, [r4, #12]
 800d256:	6999      	ldr	r1, [r3, #24]
 800d258:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d25a:	6920      	ldr	r0, [r4, #16]
 800d25c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d25e:	430a      	orrs	r2, r1
 800d260:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d262:	689a      	ldr	r2, [r3, #8]
 800d264:	4924      	ldr	r1, [pc, #144]	; (800d2f8 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800d266:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d268:	400a      	ands	r2, r1
 800d26a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800d26c:	689a      	ldr	r2, [r3, #8]
 800d26e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d272:	69a0      	ldr	r0, [r4, #24]
 800d274:	4302      	orrs	r2, r0
 800d276:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d278:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800d27a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d27c:	400a      	ands	r2, r1
 800d27e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800d280:	68da      	ldr	r2, [r3, #12]
 800d282:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d286:	6a20      	ldr	r0, [r4, #32]
 800d288:	4302      	orrs	r2, r0
 800d28a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d28c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800d28e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d290:	400a      	ands	r2, r1
 800d292:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800d294:	691a      	ldr	r2, [r3, #16]
 800d296:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d29a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d29c:	4302      	orrs	r2, r0
 800d29e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d2a0:	695a      	ldr	r2, [r3, #20]
 800d2a2:	4011      	ands	r1, r2
 800d2a4:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800d2a6:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800d2a8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800d2aa:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800d2ae:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d2b0:	430a      	orrs	r2, r1
 800d2b2:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d2b4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800d2b6:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800d2ba:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d2be:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800d2c2:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800d2c4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800d2c6:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800d2ca:	430a      	orrs	r2, r1
 800d2cc:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800d2d0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d2d4:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800d2d6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d2d8:	f042 0206 	orr.w	r2, r2, #6
 800d2dc:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800d2de:	699a      	ldr	r2, [r3, #24]
 800d2e0:	f042 0201 	orr.w	r2, r2, #1
 800d2e4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d2e6:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800d2e8:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d2ea:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800d2ee:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800d2f2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800d2f4:	2001      	movs	r0, #1
 800d2f6:	e7fc      	b.n	800d2f2 <HAL_LTDC_Init+0xce>
 800d2f8:	f000f800 	.word	0xf000f800

0800d2fc <HAL_LTDC_ErrorCallback>:
 800d2fc:	4770      	bx	lr

0800d2fe <HAL_LTDC_ReloadEventCallback>:
 800d2fe:	4770      	bx	lr

0800d300 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d300:	6803      	ldr	r3, [r0, #0]
{
 800d302:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d304:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800d306:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d308:	0772      	lsls	r2, r6, #29
{
 800d30a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d30c:	d514      	bpl.n	800d338 <HAL_LTDC_IRQHandler+0x38>
 800d30e:	0769      	lsls	r1, r5, #29
 800d310:	d512      	bpl.n	800d338 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800d312:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d314:	f022 0204 	bic.w	r2, r2, #4
 800d318:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800d31a:	2204      	movs	r2, #4
 800d31c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800d31e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800d322:	f043 0301 	orr.w	r3, r3, #1
 800d326:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800d32a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d32c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d330:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d334:	f7ff ffe2 	bl	800d2fc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800d338:	07b2      	lsls	r2, r6, #30
 800d33a:	d516      	bpl.n	800d36a <HAL_LTDC_IRQHandler+0x6a>
 800d33c:	07ab      	lsls	r3, r5, #30
 800d33e:	d514      	bpl.n	800d36a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800d340:	6823      	ldr	r3, [r4, #0]
 800d342:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d344:	f022 0202 	bic.w	r2, r2, #2
 800d348:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800d34a:	2202      	movs	r2, #2
 800d34c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800d34e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d352:	4313      	orrs	r3, r2
 800d354:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d358:	2304      	movs	r3, #4
 800d35a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d35e:	2300      	movs	r3, #0
 800d360:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d364:	4620      	mov	r0, r4
 800d366:	f7ff ffc9 	bl	800d2fc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800d36a:	07f0      	lsls	r0, r6, #31
 800d36c:	d510      	bpl.n	800d390 <HAL_LTDC_IRQHandler+0x90>
 800d36e:	07e9      	lsls	r1, r5, #31
 800d370:	d50e      	bpl.n	800d390 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d372:	6823      	ldr	r3, [r4, #0]
 800d374:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d376:	f022 0201 	bic.w	r2, r2, #1
 800d37a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800d37c:	2201      	movs	r2, #1
 800d37e:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d380:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d382:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d386:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800d38a:	4620      	mov	r0, r4
 800d38c:	f7f4 fbfa 	bl	8001b84 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800d390:	0732      	lsls	r2, r6, #28
 800d392:	d511      	bpl.n	800d3b8 <HAL_LTDC_IRQHandler+0xb8>
 800d394:	072b      	lsls	r3, r5, #28
 800d396:	d50f      	bpl.n	800d3b8 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d398:	6823      	ldr	r3, [r4, #0]
 800d39a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d39c:	f022 0208 	bic.w	r2, r2, #8
 800d3a0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d3a2:	2208      	movs	r2, #8
 800d3a4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800d3a6:	2301      	movs	r3, #1
 800d3a8:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d3ac:	2300      	movs	r3, #0
 800d3ae:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800d3b2:	4620      	mov	r0, r4
 800d3b4:	f7ff ffa3 	bl	800d2fe <HAL_LTDC_ReloadEventCallback>
}
 800d3b8:	bd70      	pop	{r4, r5, r6, pc}

0800d3ba <HAL_LTDC_ConfigLayer>:
{
 800d3ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800d3be:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d3c2:	2b01      	cmp	r3, #1
{
 800d3c4:	4606      	mov	r6, r0
 800d3c6:	460f      	mov	r7, r1
 800d3c8:	4694      	mov	ip, r2
 800d3ca:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800d3ce:	d01f      	beq.n	800d410 <HAL_LTDC_ConfigLayer+0x56>
 800d3d0:	f04f 0801 	mov.w	r8, #1
 800d3d4:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d3d8:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d3dc:	2434      	movs	r4, #52	; 0x34
 800d3de:	460d      	mov	r5, r1
 800d3e0:	fb04 6402 	mla	r4, r4, r2, r6
 800d3e4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d3e6:	3438      	adds	r4, #56	; 0x38
 800d3e8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d3ea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d3ec:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d3ee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d3f0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d3f2:	682b      	ldr	r3, [r5, #0]
 800d3f4:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800d3f6:	4630      	mov	r0, r6
 800d3f8:	4662      	mov	r2, ip
 800d3fa:	4639      	mov	r1, r7
 800d3fc:	f7ff fe8c 	bl	800d118 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d400:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800d402:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d404:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800d408:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d40c:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800d410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d414 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800d414:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d418:	2b01      	cmp	r3, #1
 800d41a:	f04f 0302 	mov.w	r3, #2
 800d41e:	d012      	beq.n	800d446 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d420:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d424:	6803      	ldr	r3, [r0, #0]
 800d426:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d428:	f022 0201 	bic.w	r2, r2, #1
 800d42c:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d42e:	4a07      	ldr	r2, [pc, #28]	; (800d44c <HAL_LTDC_ProgramLineEvent+0x38>)
 800d430:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d432:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d434:	f042 0201 	orr.w	r2, r2, #1
 800d438:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800d43a:	2301      	movs	r3, #1
 800d43c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d440:	2300      	movs	r3, #0
 800d442:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 800d446:	4618      	mov	r0, r3
}
 800d448:	4770      	bx	lr
 800d44a:	bf00      	nop
 800d44c:	40016800 	.word	0x40016800

0800d450 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800d450:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800d454:	4604      	mov	r4, r0
 800d456:	b340      	cbz	r0, 800d4aa <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800d458:	6803      	ldr	r3, [r0, #0]
 800d45a:	07dd      	lsls	r5, r3, #31
 800d45c:	d410      	bmi.n	800d480 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800d45e:	6823      	ldr	r3, [r4, #0]
 800d460:	0798      	lsls	r0, r3, #30
 800d462:	d45e      	bmi.n	800d522 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800d464:	6823      	ldr	r3, [r4, #0]
 800d466:	071a      	lsls	r2, r3, #28
 800d468:	f100 80a0 	bmi.w	800d5ac <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800d46c:	6823      	ldr	r3, [r4, #0]
 800d46e:	075b      	lsls	r3, r3, #29
 800d470:	f100 80c0 	bmi.w	800d5f4 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800d474:	69a0      	ldr	r0, [r4, #24]
 800d476:	2800      	cmp	r0, #0
 800d478:	f040 8128 	bne.w	800d6cc <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800d47c:	2000      	movs	r0, #0
 800d47e:	e02b      	b.n	800d4d8 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800d480:	4b8f      	ldr	r3, [pc, #572]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
 800d482:	689a      	ldr	r2, [r3, #8]
 800d484:	f002 020c 	and.w	r2, r2, #12
 800d488:	2a04      	cmp	r2, #4
 800d48a:	d007      	beq.n	800d49c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800d48c:	689a      	ldr	r2, [r3, #8]
 800d48e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800d492:	2a08      	cmp	r2, #8
 800d494:	d10b      	bne.n	800d4ae <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800d496:	685a      	ldr	r2, [r3, #4]
 800d498:	0251      	lsls	r1, r2, #9
 800d49a:	d508      	bpl.n	800d4ae <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800d49c:	4b88      	ldr	r3, [pc, #544]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
 800d49e:	681b      	ldr	r3, [r3, #0]
 800d4a0:	039a      	lsls	r2, r3, #14
 800d4a2:	d5dc      	bpl.n	800d45e <HAL_RCC_OscConfig+0xe>
 800d4a4:	6863      	ldr	r3, [r4, #4]
 800d4a6:	2b00      	cmp	r3, #0
 800d4a8:	d1d9      	bne.n	800d45e <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800d4aa:	2001      	movs	r0, #1
 800d4ac:	e014      	b.n	800d4d8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d4ae:	6862      	ldr	r2, [r4, #4]
 800d4b0:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800d4b4:	d113      	bne.n	800d4de <HAL_RCC_OscConfig+0x8e>
 800d4b6:	681a      	ldr	r2, [r3, #0]
 800d4b8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800d4bc:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800d4be:	f7fe fae3 	bl	800ba88 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800d4c2:	4e7f      	ldr	r6, [pc, #508]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800d4c4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800d4c6:	6833      	ldr	r3, [r6, #0]
 800d4c8:	039b      	lsls	r3, r3, #14
 800d4ca:	d4c8      	bmi.n	800d45e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800d4cc:	f7fe fadc 	bl	800ba88 <HAL_GetTick>
 800d4d0:	1b40      	subs	r0, r0, r5
 800d4d2:	2864      	cmp	r0, #100	; 0x64
 800d4d4:	d9f7      	bls.n	800d4c6 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800d4d6:	2003      	movs	r0, #3
}
 800d4d8:	b002      	add	sp, #8
 800d4da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d4de:	4d78      	ldr	r5, [pc, #480]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
 800d4e0:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800d4e4:	682b      	ldr	r3, [r5, #0]
 800d4e6:	d107      	bne.n	800d4f8 <HAL_RCC_OscConfig+0xa8>
 800d4e8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800d4ec:	602b      	str	r3, [r5, #0]
 800d4ee:	682b      	ldr	r3, [r5, #0]
 800d4f0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800d4f4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800d4f6:	e7e2      	b.n	800d4be <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d4f8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800d4fc:	602b      	str	r3, [r5, #0]
 800d4fe:	682b      	ldr	r3, [r5, #0]
 800d500:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800d504:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800d506:	2a00      	cmp	r2, #0
 800d508:	d1d9      	bne.n	800d4be <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800d50a:	f7fe fabd 	bl	800ba88 <HAL_GetTick>
 800d50e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800d510:	682b      	ldr	r3, [r5, #0]
 800d512:	039f      	lsls	r7, r3, #14
 800d514:	d5a3      	bpl.n	800d45e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800d516:	f7fe fab7 	bl	800ba88 <HAL_GetTick>
 800d51a:	1b80      	subs	r0, r0, r6
 800d51c:	2864      	cmp	r0, #100	; 0x64
 800d51e:	d9f7      	bls.n	800d510 <HAL_RCC_OscConfig+0xc0>
 800d520:	e7d9      	b.n	800d4d6 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800d522:	4b67      	ldr	r3, [pc, #412]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
 800d524:	689a      	ldr	r2, [r3, #8]
 800d526:	f012 0f0c 	tst.w	r2, #12
 800d52a:	d007      	beq.n	800d53c <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800d52c:	689a      	ldr	r2, [r3, #8]
 800d52e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800d532:	2a08      	cmp	r2, #8
 800d534:	d111      	bne.n	800d55a <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800d536:	685b      	ldr	r3, [r3, #4]
 800d538:	025e      	lsls	r6, r3, #9
 800d53a:	d40e      	bmi.n	800d55a <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800d53c:	4a60      	ldr	r2, [pc, #384]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
 800d53e:	6813      	ldr	r3, [r2, #0]
 800d540:	079d      	lsls	r5, r3, #30
 800d542:	d502      	bpl.n	800d54a <HAL_RCC_OscConfig+0xfa>
 800d544:	68e3      	ldr	r3, [r4, #12]
 800d546:	2b01      	cmp	r3, #1
 800d548:	d1af      	bne.n	800d4aa <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800d54a:	6813      	ldr	r3, [r2, #0]
 800d54c:	6921      	ldr	r1, [r4, #16]
 800d54e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800d552:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800d556:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800d558:	e784      	b.n	800d464 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800d55a:	68e2      	ldr	r2, [r4, #12]
 800d55c:	4b59      	ldr	r3, [pc, #356]	; (800d6c4 <HAL_RCC_OscConfig+0x274>)
 800d55e:	b1b2      	cbz	r2, 800d58e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800d560:	2201      	movs	r2, #1
 800d562:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800d564:	f7fe fa90 	bl	800ba88 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d568:	4d55      	ldr	r5, [pc, #340]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800d56a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d56c:	682b      	ldr	r3, [r5, #0]
 800d56e:	0798      	lsls	r0, r3, #30
 800d570:	d507      	bpl.n	800d582 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800d572:	682b      	ldr	r3, [r5, #0]
 800d574:	6922      	ldr	r2, [r4, #16]
 800d576:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800d57a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800d57e:	602b      	str	r3, [r5, #0]
 800d580:	e770      	b.n	800d464 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800d582:	f7fe fa81 	bl	800ba88 <HAL_GetTick>
 800d586:	1b80      	subs	r0, r0, r6
 800d588:	2802      	cmp	r0, #2
 800d58a:	d9ef      	bls.n	800d56c <HAL_RCC_OscConfig+0x11c>
 800d58c:	e7a3      	b.n	800d4d6 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800d58e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800d590:	f7fe fa7a 	bl	800ba88 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800d594:	4e4a      	ldr	r6, [pc, #296]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800d596:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800d598:	6833      	ldr	r3, [r6, #0]
 800d59a:	0799      	lsls	r1, r3, #30
 800d59c:	f57f af62 	bpl.w	800d464 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800d5a0:	f7fe fa72 	bl	800ba88 <HAL_GetTick>
 800d5a4:	1b40      	subs	r0, r0, r5
 800d5a6:	2802      	cmp	r0, #2
 800d5a8:	d9f6      	bls.n	800d598 <HAL_RCC_OscConfig+0x148>
 800d5aa:	e794      	b.n	800d4d6 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800d5ac:	6962      	ldr	r2, [r4, #20]
 800d5ae:	4b45      	ldr	r3, [pc, #276]	; (800d6c4 <HAL_RCC_OscConfig+0x274>)
 800d5b0:	b182      	cbz	r2, 800d5d4 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800d5b2:	2201      	movs	r2, #1
 800d5b4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800d5b8:	f7fe fa66 	bl	800ba88 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800d5bc:	4e40      	ldr	r6, [pc, #256]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800d5be:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800d5c0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800d5c2:	079f      	lsls	r7, r3, #30
 800d5c4:	f53f af52 	bmi.w	800d46c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800d5c8:	f7fe fa5e 	bl	800ba88 <HAL_GetTick>
 800d5cc:	1b40      	subs	r0, r0, r5
 800d5ce:	2802      	cmp	r0, #2
 800d5d0:	d9f6      	bls.n	800d5c0 <HAL_RCC_OscConfig+0x170>
 800d5d2:	e780      	b.n	800d4d6 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800d5d4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800d5d8:	f7fe fa56 	bl	800ba88 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800d5dc:	4e38      	ldr	r6, [pc, #224]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800d5de:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800d5e0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800d5e2:	0798      	lsls	r0, r3, #30
 800d5e4:	f57f af42 	bpl.w	800d46c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800d5e8:	f7fe fa4e 	bl	800ba88 <HAL_GetTick>
 800d5ec:	1b40      	subs	r0, r0, r5
 800d5ee:	2802      	cmp	r0, #2
 800d5f0:	d9f6      	bls.n	800d5e0 <HAL_RCC_OscConfig+0x190>
 800d5f2:	e770      	b.n	800d4d6 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800d5f4:	4b32      	ldr	r3, [pc, #200]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
 800d5f6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800d5f8:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800d5fc:	d128      	bne.n	800d650 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800d5fe:	9201      	str	r2, [sp, #4]
 800d600:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800d602:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800d606:	641a      	str	r2, [r3, #64]	; 0x40
 800d608:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d60a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800d60e:	9301      	str	r3, [sp, #4]
 800d610:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800d612:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800d614:	4d2c      	ldr	r5, [pc, #176]	; (800d6c8 <HAL_RCC_OscConfig+0x278>)
 800d616:	682b      	ldr	r3, [r5, #0]
 800d618:	05d9      	lsls	r1, r3, #23
 800d61a:	d51b      	bpl.n	800d654 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800d61c:	68a3      	ldr	r3, [r4, #8]
 800d61e:	4d28      	ldr	r5, [pc, #160]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
 800d620:	2b01      	cmp	r3, #1
 800d622:	d127      	bne.n	800d674 <HAL_RCC_OscConfig+0x224>
 800d624:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d626:	f043 0301 	orr.w	r3, r3, #1
 800d62a:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800d62c:	f7fe fa2c 	bl	800ba88 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800d630:	4e23      	ldr	r6, [pc, #140]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800d632:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d634:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800d638:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800d63a:	079b      	lsls	r3, r3, #30
 800d63c:	d539      	bpl.n	800d6b2 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800d63e:	2f00      	cmp	r7, #0
 800d640:	f43f af18 	beq.w	800d474 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800d644:	4a1e      	ldr	r2, [pc, #120]	; (800d6c0 <HAL_RCC_OscConfig+0x270>)
 800d646:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800d648:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800d64c:	6413      	str	r3, [r2, #64]	; 0x40
 800d64e:	e711      	b.n	800d474 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800d650:	2700      	movs	r7, #0
 800d652:	e7df      	b.n	800d614 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800d654:	682b      	ldr	r3, [r5, #0]
 800d656:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800d65a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800d65c:	f7fe fa14 	bl	800ba88 <HAL_GetTick>
 800d660:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800d662:	682b      	ldr	r3, [r5, #0]
 800d664:	05da      	lsls	r2, r3, #23
 800d666:	d4d9      	bmi.n	800d61c <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800d668:	f7fe fa0e 	bl	800ba88 <HAL_GetTick>
 800d66c:	1b80      	subs	r0, r0, r6
 800d66e:	2802      	cmp	r0, #2
 800d670:	d9f7      	bls.n	800d662 <HAL_RCC_OscConfig+0x212>
 800d672:	e730      	b.n	800d4d6 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800d674:	2b05      	cmp	r3, #5
 800d676:	d104      	bne.n	800d682 <HAL_RCC_OscConfig+0x232>
 800d678:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d67a:	f043 0304 	orr.w	r3, r3, #4
 800d67e:	672b      	str	r3, [r5, #112]	; 0x70
 800d680:	e7d0      	b.n	800d624 <HAL_RCC_OscConfig+0x1d4>
 800d682:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800d684:	f022 0201 	bic.w	r2, r2, #1
 800d688:	672a      	str	r2, [r5, #112]	; 0x70
 800d68a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800d68c:	f022 0204 	bic.w	r2, r2, #4
 800d690:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800d692:	2b00      	cmp	r3, #0
 800d694:	d1ca      	bne.n	800d62c <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 800d696:	f7fe f9f7 	bl	800ba88 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d69a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800d69e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800d6a0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800d6a2:	0798      	lsls	r0, r3, #30
 800d6a4:	d5cb      	bpl.n	800d63e <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d6a6:	f7fe f9ef 	bl	800ba88 <HAL_GetTick>
 800d6aa:	1b80      	subs	r0, r0, r6
 800d6ac:	4540      	cmp	r0, r8
 800d6ae:	d9f7      	bls.n	800d6a0 <HAL_RCC_OscConfig+0x250>
 800d6b0:	e711      	b.n	800d4d6 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d6b2:	f7fe f9e9 	bl	800ba88 <HAL_GetTick>
 800d6b6:	1b40      	subs	r0, r0, r5
 800d6b8:	4540      	cmp	r0, r8
 800d6ba:	d9bd      	bls.n	800d638 <HAL_RCC_OscConfig+0x1e8>
 800d6bc:	e70b      	b.n	800d4d6 <HAL_RCC_OscConfig+0x86>
 800d6be:	bf00      	nop
 800d6c0:	40023800 	.word	0x40023800
 800d6c4:	42470000 	.word	0x42470000
 800d6c8:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800d6cc:	4d33      	ldr	r5, [pc, #204]	; (800d79c <HAL_RCC_OscConfig+0x34c>)
 800d6ce:	68ab      	ldr	r3, [r5, #8]
 800d6d0:	f003 030c 	and.w	r3, r3, #12
 800d6d4:	2b08      	cmp	r3, #8
 800d6d6:	d03d      	beq.n	800d754 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800d6d8:	4b31      	ldr	r3, [pc, #196]	; (800d7a0 <HAL_RCC_OscConfig+0x350>)
 800d6da:	2200      	movs	r2, #0
 800d6dc:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800d6de:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800d6e0:	d12b      	bne.n	800d73a <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 800d6e2:	f7fe f9d1 	bl	800ba88 <HAL_GetTick>
 800d6e6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800d6e8:	682b      	ldr	r3, [r5, #0]
 800d6ea:	0199      	lsls	r1, r3, #6
 800d6ec:	d41f      	bmi.n	800d72e <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800d6ee:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800d6f2:	4313      	orrs	r3, r2
 800d6f4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d6f6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800d6fa:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d6fc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d700:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d702:	0852      	lsrs	r2, r2, #1
 800d704:	3a01      	subs	r2, #1
 800d706:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800d70a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800d70c:	4b24      	ldr	r3, [pc, #144]	; (800d7a0 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d70e:	4d23      	ldr	r5, [pc, #140]	; (800d79c <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 800d710:	2201      	movs	r2, #1
 800d712:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 800d714:	f7fe f9b8 	bl	800ba88 <HAL_GetTick>
 800d718:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d71a:	682b      	ldr	r3, [r5, #0]
 800d71c:	019a      	lsls	r2, r3, #6
 800d71e:	f53f aead 	bmi.w	800d47c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800d722:	f7fe f9b1 	bl	800ba88 <HAL_GetTick>
 800d726:	1b00      	subs	r0, r0, r4
 800d728:	2802      	cmp	r0, #2
 800d72a:	d9f6      	bls.n	800d71a <HAL_RCC_OscConfig+0x2ca>
 800d72c:	e6d3      	b.n	800d4d6 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800d72e:	f7fe f9ab 	bl	800ba88 <HAL_GetTick>
 800d732:	1b80      	subs	r0, r0, r6
 800d734:	2802      	cmp	r0, #2
 800d736:	d9d7      	bls.n	800d6e8 <HAL_RCC_OscConfig+0x298>
 800d738:	e6cd      	b.n	800d4d6 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800d73a:	f7fe f9a5 	bl	800ba88 <HAL_GetTick>
 800d73e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800d740:	682b      	ldr	r3, [r5, #0]
 800d742:	019b      	lsls	r3, r3, #6
 800d744:	f57f ae9a 	bpl.w	800d47c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800d748:	f7fe f99e 	bl	800ba88 <HAL_GetTick>
 800d74c:	1b00      	subs	r0, r0, r4
 800d74e:	2802      	cmp	r0, #2
 800d750:	d9f6      	bls.n	800d740 <HAL_RCC_OscConfig+0x2f0>
 800d752:	e6c0      	b.n	800d4d6 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800d754:	2801      	cmp	r0, #1
 800d756:	f43f aebf 	beq.w	800d4d8 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800d75a:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800d75c:	69e2      	ldr	r2, [r4, #28]
 800d75e:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 800d762:	4291      	cmp	r1, r2
 800d764:	f47f aea1 	bne.w	800d4aa <HAL_RCC_OscConfig+0x5a>
 800d768:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800d76a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800d76e:	428a      	cmp	r2, r1
 800d770:	f47f ae9b 	bne.w	800d4aa <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800d774:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d776:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800d77a:	401a      	ands	r2, r3
 800d77c:	428a      	cmp	r2, r1
 800d77e:	f47f ae94 	bne.w	800d4aa <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800d782:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800d784:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800d788:	428a      	cmp	r2, r1
 800d78a:	f47f ae8e 	bne.w	800d4aa <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800d78e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 800d790:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800d794:	4293      	cmp	r3, r2
 800d796:	f43f ae71 	beq.w	800d47c <HAL_RCC_OscConfig+0x2c>
 800d79a:	e686      	b.n	800d4aa <HAL_RCC_OscConfig+0x5a>
 800d79c:	40023800 	.word	0x40023800
 800d7a0:	42470000 	.word	0x42470000

0800d7a4 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800d7a4:	4913      	ldr	r1, [pc, #76]	; (800d7f4 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800d7a6:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800d7a8:	688b      	ldr	r3, [r1, #8]
 800d7aa:	f003 030c 	and.w	r3, r3, #12
 800d7ae:	2b04      	cmp	r3, #4
 800d7b0:	d01c      	beq.n	800d7ec <HAL_RCC_GetSysClockFreq+0x48>
 800d7b2:	2b08      	cmp	r3, #8
 800d7b4:	d11c      	bne.n	800d7f0 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800d7b6:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800d7b8:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d7ba:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800d7bc:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d7c0:	bf14      	ite	ne
 800d7c2:	480d      	ldrne	r0, [pc, #52]	; (800d7f8 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d7c4:	480d      	ldreq	r0, [pc, #52]	; (800d7fc <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d7c6:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800d7ca:	bf18      	it	ne
 800d7cc:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800d7ce:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d7d2:	fba1 0100 	umull	r0, r1, r1, r0
 800d7d6:	f7f3 fac7 	bl	8000d68 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800d7da:	4b06      	ldr	r3, [pc, #24]	; (800d7f4 <HAL_RCC_GetSysClockFreq+0x50>)
 800d7dc:	685b      	ldr	r3, [r3, #4]
 800d7de:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800d7e2:	3301      	adds	r3, #1
 800d7e4:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800d7e6:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800d7ea:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800d7ec:	4802      	ldr	r0, [pc, #8]	; (800d7f8 <HAL_RCC_GetSysClockFreq+0x54>)
 800d7ee:	e7fc      	b.n	800d7ea <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800d7f0:	4802      	ldr	r0, [pc, #8]	; (800d7fc <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800d7f2:	e7fa      	b.n	800d7ea <HAL_RCC_GetSysClockFreq+0x46>
 800d7f4:	40023800 	.word	0x40023800
 800d7f8:	007a1200 	.word	0x007a1200
 800d7fc:	00f42400 	.word	0x00f42400

0800d800 <HAL_RCC_ClockConfig>:
{
 800d800:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d804:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800d806:	4604      	mov	r4, r0
 800d808:	b910      	cbnz	r0, 800d810 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800d80a:	2001      	movs	r0, #1
}
 800d80c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800d810:	4b44      	ldr	r3, [pc, #272]	; (800d924 <HAL_RCC_ClockConfig+0x124>)
 800d812:	681a      	ldr	r2, [r3, #0]
 800d814:	f002 020f 	and.w	r2, r2, #15
 800d818:	428a      	cmp	r2, r1
 800d81a:	d328      	bcc.n	800d86e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800d81c:	6822      	ldr	r2, [r4, #0]
 800d81e:	0797      	lsls	r7, r2, #30
 800d820:	d42d      	bmi.n	800d87e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800d822:	07d0      	lsls	r0, r2, #31
 800d824:	d441      	bmi.n	800d8aa <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800d826:	4b3f      	ldr	r3, [pc, #252]	; (800d924 <HAL_RCC_ClockConfig+0x124>)
 800d828:	681a      	ldr	r2, [r3, #0]
 800d82a:	f002 020f 	and.w	r2, r2, #15
 800d82e:	42aa      	cmp	r2, r5
 800d830:	d866      	bhi.n	800d900 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800d832:	6822      	ldr	r2, [r4, #0]
 800d834:	0751      	lsls	r1, r2, #29
 800d836:	d46c      	bmi.n	800d912 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800d838:	0713      	lsls	r3, r2, #28
 800d83a:	d507      	bpl.n	800d84c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800d83c:	4a3a      	ldr	r2, [pc, #232]	; (800d928 <HAL_RCC_ClockConfig+0x128>)
 800d83e:	6921      	ldr	r1, [r4, #16]
 800d840:	6893      	ldr	r3, [r2, #8]
 800d842:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800d846:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800d84a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800d84c:	f7ff ffaa 	bl	800d7a4 <HAL_RCC_GetSysClockFreq>
 800d850:	4b35      	ldr	r3, [pc, #212]	; (800d928 <HAL_RCC_ClockConfig+0x128>)
 800d852:	4a36      	ldr	r2, [pc, #216]	; (800d92c <HAL_RCC_ClockConfig+0x12c>)
 800d854:	689b      	ldr	r3, [r3, #8]
 800d856:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800d85a:	5cd3      	ldrb	r3, [r2, r3]
 800d85c:	40d8      	lsrs	r0, r3
 800d85e:	4b34      	ldr	r3, [pc, #208]	; (800d930 <HAL_RCC_ClockConfig+0x130>)
 800d860:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800d862:	4b34      	ldr	r3, [pc, #208]	; (800d934 <HAL_RCC_ClockConfig+0x134>)
 800d864:	6818      	ldr	r0, [r3, #0]
 800d866:	f7f5 fe5d 	bl	8003524 <HAL_InitTick>
  return HAL_OK;
 800d86a:	2000      	movs	r0, #0
 800d86c:	e7ce      	b.n	800d80c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800d86e:	b2ca      	uxtb	r2, r1
 800d870:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800d872:	681b      	ldr	r3, [r3, #0]
 800d874:	f003 030f 	and.w	r3, r3, #15
 800d878:	428b      	cmp	r3, r1
 800d87a:	d1c6      	bne.n	800d80a <HAL_RCC_ClockConfig+0xa>
 800d87c:	e7ce      	b.n	800d81c <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800d87e:	4b2a      	ldr	r3, [pc, #168]	; (800d928 <HAL_RCC_ClockConfig+0x128>)
 800d880:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800d884:	bf1e      	ittt	ne
 800d886:	6899      	ldrne	r1, [r3, #8]
 800d888:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800d88c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800d88e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800d890:	bf42      	ittt	mi
 800d892:	6899      	ldrmi	r1, [r3, #8]
 800d894:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 800d898:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800d89a:	4923      	ldr	r1, [pc, #140]	; (800d928 <HAL_RCC_ClockConfig+0x128>)
 800d89c:	68a0      	ldr	r0, [r4, #8]
 800d89e:	688b      	ldr	r3, [r1, #8]
 800d8a0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800d8a4:	4303      	orrs	r3, r0
 800d8a6:	608b      	str	r3, [r1, #8]
 800d8a8:	e7bb      	b.n	800d822 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800d8aa:	6862      	ldr	r2, [r4, #4]
 800d8ac:	4b1e      	ldr	r3, [pc, #120]	; (800d928 <HAL_RCC_ClockConfig+0x128>)
 800d8ae:	2a01      	cmp	r2, #1
 800d8b0:	d11c      	bne.n	800d8ec <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800d8b2:	681b      	ldr	r3, [r3, #0]
 800d8b4:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d8b8:	d0a7      	beq.n	800d80a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800d8ba:	4e1b      	ldr	r6, [pc, #108]	; (800d928 <HAL_RCC_ClockConfig+0x128>)
 800d8bc:	68b3      	ldr	r3, [r6, #8]
 800d8be:	f023 0303 	bic.w	r3, r3, #3
 800d8c2:	4313      	orrs	r3, r2
 800d8c4:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800d8c6:	f7fe f8df 	bl	800ba88 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800d8ca:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800d8ce:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800d8d0:	68b3      	ldr	r3, [r6, #8]
 800d8d2:	6862      	ldr	r2, [r4, #4]
 800d8d4:	f003 030c 	and.w	r3, r3, #12
 800d8d8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800d8dc:	d0a3      	beq.n	800d826 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800d8de:	f7fe f8d3 	bl	800ba88 <HAL_GetTick>
 800d8e2:	1bc0      	subs	r0, r0, r7
 800d8e4:	4540      	cmp	r0, r8
 800d8e6:	d9f3      	bls.n	800d8d0 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 800d8e8:	2003      	movs	r0, #3
 800d8ea:	e78f      	b.n	800d80c <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800d8ec:	1e91      	subs	r1, r2, #2
 800d8ee:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d8f0:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800d8f2:	d802      	bhi.n	800d8fa <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d8f4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800d8f8:	e7de      	b.n	800d8b8 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d8fa:	f013 0f02 	tst.w	r3, #2
 800d8fe:	e7db      	b.n	800d8b8 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800d900:	b2ea      	uxtb	r2, r5
 800d902:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800d904:	681b      	ldr	r3, [r3, #0]
 800d906:	f003 030f 	and.w	r3, r3, #15
 800d90a:	42ab      	cmp	r3, r5
 800d90c:	f47f af7d 	bne.w	800d80a <HAL_RCC_ClockConfig+0xa>
 800d910:	e78f      	b.n	800d832 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800d912:	4905      	ldr	r1, [pc, #20]	; (800d928 <HAL_RCC_ClockConfig+0x128>)
 800d914:	68e0      	ldr	r0, [r4, #12]
 800d916:	688b      	ldr	r3, [r1, #8]
 800d918:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800d91c:	4303      	orrs	r3, r0
 800d91e:	608b      	str	r3, [r1, #8]
 800d920:	e78a      	b.n	800d838 <HAL_RCC_ClockConfig+0x38>
 800d922:	bf00      	nop
 800d924:	40023c00 	.word	0x40023c00
 800d928:	40023800 	.word	0x40023800
 800d92c:	08032a54 	.word	0x08032a54
 800d930:	2000008c 	.word	0x2000008c
 800d934:	20000094 	.word	0x20000094

0800d938 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800d938:	4b04      	ldr	r3, [pc, #16]	; (800d94c <HAL_RCC_GetPCLK1Freq+0x14>)
 800d93a:	4a05      	ldr	r2, [pc, #20]	; (800d950 <HAL_RCC_GetPCLK1Freq+0x18>)
 800d93c:	689b      	ldr	r3, [r3, #8]
 800d93e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800d942:	5cd3      	ldrb	r3, [r2, r3]
 800d944:	4a03      	ldr	r2, [pc, #12]	; (800d954 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800d946:	6810      	ldr	r0, [r2, #0]
}
 800d948:	40d8      	lsrs	r0, r3
 800d94a:	4770      	bx	lr
 800d94c:	40023800 	.word	0x40023800
 800d950:	08032a64 	.word	0x08032a64
 800d954:	2000008c 	.word	0x2000008c

0800d958 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800d958:	4b04      	ldr	r3, [pc, #16]	; (800d96c <HAL_RCC_GetPCLK2Freq+0x14>)
 800d95a:	4a05      	ldr	r2, [pc, #20]	; (800d970 <HAL_RCC_GetPCLK2Freq+0x18>)
 800d95c:	689b      	ldr	r3, [r3, #8]
 800d95e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800d962:	5cd3      	ldrb	r3, [r2, r3]
 800d964:	4a03      	ldr	r2, [pc, #12]	; (800d974 <HAL_RCC_GetPCLK2Freq+0x1c>)
 800d966:	6810      	ldr	r0, [r2, #0]
}
 800d968:	40d8      	lsrs	r0, r3
 800d96a:	4770      	bx	lr
 800d96c:	40023800 	.word	0x40023800
 800d970:	08032a64 	.word	0x08032a64
 800d974:	2000008c 	.word	0x2000008c

0800d978 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800d978:	230f      	movs	r3, #15
 800d97a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800d97c:	4b0b      	ldr	r3, [pc, #44]	; (800d9ac <HAL_RCC_GetClockConfig+0x34>)
 800d97e:	689a      	ldr	r2, [r3, #8]
 800d980:	f002 0203 	and.w	r2, r2, #3
 800d984:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800d986:	689a      	ldr	r2, [r3, #8]
 800d988:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800d98c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800d98e:	689a      	ldr	r2, [r3, #8]
 800d990:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800d994:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800d996:	689b      	ldr	r3, [r3, #8]
 800d998:	08db      	lsrs	r3, r3, #3
 800d99a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800d99e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800d9a0:	4b03      	ldr	r3, [pc, #12]	; (800d9b0 <HAL_RCC_GetClockConfig+0x38>)
 800d9a2:	681b      	ldr	r3, [r3, #0]
 800d9a4:	f003 030f 	and.w	r3, r3, #15
 800d9a8:	600b      	str	r3, [r1, #0]
}
 800d9aa:	4770      	bx	lr
 800d9ac:	40023800 	.word	0x40023800
 800d9b0:	40023c00 	.word	0x40023c00

0800d9b4 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800d9b4:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800d9b6:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800d9ba:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d9bc:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800d9be:	f040 808c 	bne.w	800dada <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800d9c2:	6823      	ldr	r3, [r4, #0]
 800d9c4:	f013 0f0c 	tst.w	r3, #12
 800d9c8:	d045      	beq.n	800da56 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800d9ca:	4b8b      	ldr	r3, [pc, #556]	; (800dbf8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800d9cc:	4d8b      	ldr	r5, [pc, #556]	; (800dbfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 800d9ce:	2200      	movs	r2, #0
 800d9d0:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800d9d2:	f7fe f859 	bl	800ba88 <HAL_GetTick>
 800d9d6:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800d9d8:	682b      	ldr	r3, [r5, #0]
 800d9da:	009f      	lsls	r7, r3, #2
 800d9dc:	f100 80cf 	bmi.w	800db7e <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800d9e0:	6821      	ldr	r1, [r4, #0]
 800d9e2:	074e      	lsls	r6, r1, #29
 800d9e4:	d515      	bpl.n	800da12 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800d9e6:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800d9ea:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800d9ee:	061b      	lsls	r3, r3, #24
 800d9f0:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800d9f4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800d9f8:	4313      	orrs	r3, r2
 800d9fa:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800d9fe:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 800da02:	6a22      	ldr	r2, [r4, #32]
 800da04:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800da08:	3a01      	subs	r2, #1
 800da0a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800da0e:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800da12:	070d      	lsls	r5, r1, #28
 800da14:	d514      	bpl.n	800da40 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800da16:	4a79      	ldr	r2, [pc, #484]	; (800dbfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800da18:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800da1a:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800da1e:	6920      	ldr	r0, [r4, #16]
 800da20:	071b      	lsls	r3, r3, #28
 800da22:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800da26:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800da2a:	430b      	orrs	r3, r1
 800da2c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800da30:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800da34:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800da36:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800da3a:	430b      	orrs	r3, r1
 800da3c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800da40:	4b6d      	ldr	r3, [pc, #436]	; (800dbf8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800da42:	4e6e      	ldr	r6, [pc, #440]	; (800dbfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 800da44:	2201      	movs	r2, #1
 800da46:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800da48:	f7fe f81e 	bl	800ba88 <HAL_GetTick>
 800da4c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800da4e:	6833      	ldr	r3, [r6, #0]
 800da50:	0098      	lsls	r0, r3, #2
 800da52:	f140 809b 	bpl.w	800db8c <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800da56:	6823      	ldr	r3, [r4, #0]
 800da58:	069b      	lsls	r3, r3, #26
 800da5a:	d533      	bpl.n	800dac4 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800da5c:	2300      	movs	r3, #0
 800da5e:	9301      	str	r3, [sp, #4]
 800da60:	4b66      	ldr	r3, [pc, #408]	; (800dbfc <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800da62:	4d67      	ldr	r5, [pc, #412]	; (800dc00 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800da64:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800da66:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800da6a:	641a      	str	r2, [r3, #64]	; 0x40
 800da6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800da6e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800da72:	9301      	str	r3, [sp, #4]
 800da74:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800da76:	682b      	ldr	r3, [r5, #0]
 800da78:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800da7c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800da7e:	f7fe f803 	bl	800ba88 <HAL_GetTick>
 800da82:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 800da84:	682b      	ldr	r3, [r5, #0]
 800da86:	05d9      	lsls	r1, r3, #23
 800da88:	f140 8087 	bpl.w	800db9a <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800da8c:	4d5b      	ldr	r5, [pc, #364]	; (800dbfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800da8e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800da90:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800da94:	f040 8088 	bne.w	800dba8 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800da98:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800da9a:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800da9e:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800daa2:	4a56      	ldr	r2, [pc, #344]	; (800dbfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800daa4:	f040 80a4 	bne.w	800dbf0 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 800daa8:	6891      	ldr	r1, [r2, #8]
 800daaa:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800daae:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800dab2:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800dab6:	4301      	orrs	r1, r0
 800dab8:	6091      	str	r1, [r2, #8]
 800daba:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800dabc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800dac0:	430b      	orrs	r3, r1
 800dac2:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800dac4:	6820      	ldr	r0, [r4, #0]
 800dac6:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800daca:	bf1f      	itttt	ne
 800dacc:	4b4d      	ldrne	r3, [pc, #308]	; (800dc04 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800dace:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 800dad2:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800dad6:	2000      	movne	r0, #0
 800dad8:	e04f      	b.n	800db7a <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 800dada:	4b47      	ldr	r3, [pc, #284]	; (800dbf8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800dadc:	4e47      	ldr	r6, [pc, #284]	; (800dbfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 800dade:	2200      	movs	r2, #0
 800dae0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800dae2:	f7fd ffd1 	bl	800ba88 <HAL_GetTick>
 800dae6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800dae8:	6833      	ldr	r3, [r6, #0]
 800daea:	011f      	lsls	r7, r3, #4
 800daec:	d43f      	bmi.n	800db6e <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800daee:	6821      	ldr	r1, [r4, #0]
 800daf0:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800daf2:	bf41      	itttt	mi
 800daf4:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800daf8:	071b      	lslmi	r3, r3, #28
 800dafa:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800dafe:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800db02:	0788      	lsls	r0, r1, #30
 800db04:	d515      	bpl.n	800db32 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800db06:	4a3d      	ldr	r2, [pc, #244]	; (800dbfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800db08:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800db0a:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800db0e:	6865      	ldr	r5, [r4, #4]
 800db10:	061b      	lsls	r3, r3, #24
 800db12:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800db16:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800db1a:	4303      	orrs	r3, r0
 800db1c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800db20:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800db24:	69e3      	ldr	r3, [r4, #28]
 800db26:	f020 001f 	bic.w	r0, r0, #31
 800db2a:	3b01      	subs	r3, #1
 800db2c:	4303      	orrs	r3, r0
 800db2e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800db32:	0649      	lsls	r1, r1, #25
 800db34:	d50a      	bpl.n	800db4c <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800db36:	68e3      	ldr	r3, [r4, #12]
 800db38:	6862      	ldr	r2, [r4, #4]
 800db3a:	061b      	lsls	r3, r3, #24
 800db3c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800db40:	68a2      	ldr	r2, [r4, #8]
 800db42:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800db46:	4a2d      	ldr	r2, [pc, #180]	; (800dbfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800db48:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800db4c:	4b2a      	ldr	r3, [pc, #168]	; (800dbf8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800db4e:	4e2b      	ldr	r6, [pc, #172]	; (800dbfc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 800db50:	2201      	movs	r2, #1
 800db52:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800db54:	f7fd ff98 	bl	800ba88 <HAL_GetTick>
 800db58:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800db5a:	6833      	ldr	r3, [r6, #0]
 800db5c:	011a      	lsls	r2, r3, #4
 800db5e:	f53f af30 	bmi.w	800d9c2 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800db62:	f7fd ff91 	bl	800ba88 <HAL_GetTick>
 800db66:	1b40      	subs	r0, r0, r5
 800db68:	2802      	cmp	r0, #2
 800db6a:	d9f6      	bls.n	800db5a <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 800db6c:	e004      	b.n	800db78 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800db6e:	f7fd ff8b 	bl	800ba88 <HAL_GetTick>
 800db72:	1b40      	subs	r0, r0, r5
 800db74:	2802      	cmp	r0, #2
 800db76:	d9b7      	bls.n	800dae8 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 800db78:	2003      	movs	r0, #3
}
 800db7a:	b003      	add	sp, #12
 800db7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800db7e:	f7fd ff83 	bl	800ba88 <HAL_GetTick>
 800db82:	1b80      	subs	r0, r0, r6
 800db84:	2802      	cmp	r0, #2
 800db86:	f67f af27 	bls.w	800d9d8 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800db8a:	e7f5      	b.n	800db78 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800db8c:	f7fd ff7c 	bl	800ba88 <HAL_GetTick>
 800db90:	1b40      	subs	r0, r0, r5
 800db92:	2802      	cmp	r0, #2
 800db94:	f67f af5b 	bls.w	800da4e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800db98:	e7ee      	b.n	800db78 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800db9a:	f7fd ff75 	bl	800ba88 <HAL_GetTick>
 800db9e:	1b80      	subs	r0, r0, r6
 800dba0:	2802      	cmp	r0, #2
 800dba2:	f67f af6f 	bls.w	800da84 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800dba6:	e7e7      	b.n	800db78 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800dba8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800dbaa:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800dbae:	4293      	cmp	r3, r2
 800dbb0:	f43f af72 	beq.w	800da98 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800dbb4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800dbb6:	4a10      	ldr	r2, [pc, #64]	; (800dbf8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 800dbb8:	2101      	movs	r1, #1
 800dbba:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800dbbe:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800dbc2:	2100      	movs	r1, #0
 800dbc4:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800dbc8:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800dbca:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800dbcc:	07da      	lsls	r2, r3, #31
 800dbce:	f57f af63 	bpl.w	800da98 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 800dbd2:	f7fd ff59 	bl	800ba88 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dbd6:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800dbda:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dbdc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800dbde:	079b      	lsls	r3, r3, #30
 800dbe0:	f53f af5a 	bmi.w	800da98 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dbe4:	f7fd ff50 	bl	800ba88 <HAL_GetTick>
 800dbe8:	1b80      	subs	r0, r0, r6
 800dbea:	42b8      	cmp	r0, r7
 800dbec:	d9f6      	bls.n	800dbdc <HAL_RCCEx_PeriphCLKConfig+0x228>
 800dbee:	e7c3      	b.n	800db78 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800dbf0:	6891      	ldr	r1, [r2, #8]
 800dbf2:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800dbf6:	e75f      	b.n	800dab8 <HAL_RCCEx_PeriphCLKConfig+0x104>
 800dbf8:	42470000 	.word	0x42470000
 800dbfc:	40023800 	.word	0x40023800
 800dc00:	40007000 	.word	0x40007000
 800dc04:	42471000 	.word	0x42471000

0800dc08 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 800dc08:	b538      	push	{r3, r4, r5, lr}
 800dc0a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 800dc0c:	4604      	mov	r4, r0
 800dc0e:	b1c8      	cbz	r0, 800dc44 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 800dc10:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800dc14:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800dc18:	b91b      	cbnz	r3, 800dc22 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800dc1a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800dc1e:	f7f5 fc15 	bl	800344c <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800dc22:	2302      	movs	r3, #2
 800dc24:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800dc28:	1d21      	adds	r1, r4, #4
 800dc2a:	6820      	ldr	r0, [r4, #0]
 800dc2c:	f001 f8ce 	bl	800edcc <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 800dc30:	6862      	ldr	r2, [r4, #4]
 800dc32:	6820      	ldr	r0, [r4, #0]
 800dc34:	4629      	mov	r1, r5
 800dc36:	f001 f8ff 	bl	800ee38 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800dc3a:	2301      	movs	r3, #1
 800dc3c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 800dc40:	2000      	movs	r0, #0
}
 800dc42:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800dc44:	2001      	movs	r0, #1
 800dc46:	e7fc      	b.n	800dc42 <HAL_SDRAM_Init+0x3a>

0800dc48 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800dc48:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800dc4a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800dc4e:	2b02      	cmp	r3, #2
{
 800dc50:	4604      	mov	r4, r0
 800dc52:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800dc54:	b2d8      	uxtb	r0, r3
 800dc56:	d00d      	beq.n	800dc74 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800dc58:	2302      	movs	r3, #2
 800dc5a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800dc5e:	6820      	ldr	r0, [r4, #0]
 800dc60:	f001 f926 	bl	800eeb0 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800dc64:	682b      	ldr	r3, [r5, #0]
 800dc66:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800dc68:	bf0c      	ite	eq
 800dc6a:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 800dc6c:	2301      	movne	r3, #1
 800dc6e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 800dc72:	2000      	movs	r0, #0
}
 800dc74:	bd38      	pop	{r3, r4, r5, pc}

0800dc76 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800dc76:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800dc78:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800dc7c:	2b02      	cmp	r3, #2
{
 800dc7e:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800dc80:	b2d8      	uxtb	r0, r3
 800dc82:	d009      	beq.n	800dc98 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800dc84:	2302      	movs	r3, #2
 800dc86:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800dc8a:	6820      	ldr	r0, [r4, #0]
 800dc8c:	f001 f937 	bl	800eefe <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800dc90:	2301      	movs	r3, #1
 800dc92:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 800dc96:	2000      	movs	r0, #0
}
 800dc98:	bd10      	pop	{r4, pc}

0800dc9a <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800dc9a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dc9c:	4604      	mov	r4, r0
 800dc9e:	460e      	mov	r6, r1
 800dca0:	4615      	mov	r5, r2
 800dca2:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800dca4:	6822      	ldr	r2, [r4, #0]
 800dca6:	6893      	ldr	r3, [r2, #8]
 800dca8:	ea36 0303 	bics.w	r3, r6, r3
 800dcac:	d001      	beq.n	800dcb2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800dcae:	2000      	movs	r0, #0
 800dcb0:	e02d      	b.n	800dd0e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 800dcb2:	1c6b      	adds	r3, r5, #1
 800dcb4:	d0f7      	beq.n	800dca6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 800dcb6:	f7fd fee7 	bl	800ba88 <HAL_GetTick>
 800dcba:	1bc0      	subs	r0, r0, r7
 800dcbc:	4285      	cmp	r5, r0
 800dcbe:	d8f1      	bhi.n	800dca4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800dcc0:	6823      	ldr	r3, [r4, #0]
 800dcc2:	685a      	ldr	r2, [r3, #4]
 800dcc4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800dcc8:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800dcca:	6862      	ldr	r2, [r4, #4]
 800dccc:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800dcd0:	d10a      	bne.n	800dce8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 800dcd2:	68a2      	ldr	r2, [r4, #8]
 800dcd4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800dcd8:	d002      	beq.n	800dce0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800dcda:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800dcde:	d103      	bne.n	800dce8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 800dce0:	681a      	ldr	r2, [r3, #0]
 800dce2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800dce6:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800dce8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800dcea:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800dcee:	d107      	bne.n	800dd00 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 800dcf0:	681a      	ldr	r2, [r3, #0]
 800dcf2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800dcf6:	601a      	str	r2, [r3, #0]
 800dcf8:	681a      	ldr	r2, [r3, #0]
 800dcfa:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800dcfe:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800dd00:	2301      	movs	r3, #1
 800dd02:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800dd06:	2300      	movs	r3, #0
 800dd08:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800dd0c:	2003      	movs	r0, #3
}
 800dd0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800dd10 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800dd10:	b538      	push	{r3, r4, r5, lr}
 800dd12:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800dd14:	6842      	ldr	r2, [r0, #4]
 800dd16:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800dd1a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800dd1c:	d11f      	bne.n	800dd5e <SPI_EndRxTransaction+0x4e>
 800dd1e:	6882      	ldr	r2, [r0, #8]
 800dd20:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800dd24:	d002      	beq.n	800dd2c <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800dd26:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800dd2a:	d107      	bne.n	800dd3c <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 800dd2c:	6825      	ldr	r5, [r4, #0]
 800dd2e:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800dd30:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 800dd34:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 800dd38:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800dd3a:	d007      	beq.n	800dd4c <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800dd3c:	460a      	mov	r2, r1
 800dd3e:	2180      	movs	r1, #128	; 0x80
 800dd40:	4620      	mov	r0, r4
 800dd42:	f7ff ffaa 	bl	800dc9a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800dd46:	b920      	cbnz	r0, 800dd52 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800dd48:	2000      	movs	r0, #0
}
 800dd4a:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800dd4c:	460a      	mov	r2, r1
 800dd4e:	2101      	movs	r1, #1
 800dd50:	e7f6      	b.n	800dd40 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800dd52:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800dd54:	f043 0320 	orr.w	r3, r3, #32
 800dd58:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800dd5a:	2003      	movs	r0, #3
 800dd5c:	e7f5      	b.n	800dd4a <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800dd5e:	460a      	mov	r2, r1
 800dd60:	2101      	movs	r1, #1
 800dd62:	e7ee      	b.n	800dd42 <SPI_EndRxTransaction+0x32>

0800dd64 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800dd64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd66:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800dd68:	4a12      	ldr	r2, [pc, #72]	; (800ddb4 <SPI_EndRxTxTransaction+0x50>)
 800dd6a:	6815      	ldr	r5, [r2, #0]
 800dd6c:	4a12      	ldr	r2, [pc, #72]	; (800ddb8 <SPI_EndRxTxTransaction+0x54>)
 800dd6e:	fbb5 f5f2 	udiv	r5, r5, r2
 800dd72:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800dd76:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800dd78:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800dd7a:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800dd7c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800dd80:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800dd82:	d10b      	bne.n	800dd9c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800dd84:	460a      	mov	r2, r1
 800dd86:	2180      	movs	r1, #128	; 0x80
 800dd88:	f7ff ff87 	bl	800dc9a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800dd8c:	b178      	cbz	r0, 800ddae <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800dd8e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800dd90:	f043 0320 	orr.w	r3, r3, #32
 800dd94:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800dd96:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800dd98:	b003      	add	sp, #12
 800dd9a:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 800dd9c:	9b01      	ldr	r3, [sp, #4]
 800dd9e:	b133      	cbz	r3, 800ddae <SPI_EndRxTxTransaction+0x4a>
      count--;
 800dda0:	9b01      	ldr	r3, [sp, #4]
 800dda2:	3b01      	subs	r3, #1
 800dda4:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800dda6:	6823      	ldr	r3, [r4, #0]
 800dda8:	689b      	ldr	r3, [r3, #8]
 800ddaa:	061b      	lsls	r3, r3, #24
 800ddac:	d4f6      	bmi.n	800dd9c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 800ddae:	2000      	movs	r0, #0
 800ddb0:	e7f2      	b.n	800dd98 <SPI_EndRxTxTransaction+0x34>
 800ddb2:	bf00      	nop
 800ddb4:	2000008c 	.word	0x2000008c
 800ddb8:	016e3600 	.word	0x016e3600

0800ddbc <HAL_SPI_Init>:
{
 800ddbc:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800ddbe:	4604      	mov	r4, r0
 800ddc0:	2800      	cmp	r0, #0
 800ddc2:	d036      	beq.n	800de32 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800ddc4:	2300      	movs	r3, #0
 800ddc6:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800ddc8:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 800ddcc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ddd0:	b91b      	cbnz	r3, 800ddda <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 800ddd2:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800ddd6:	f7f5 f9eb 	bl	80031b0 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800ddda:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 800dddc:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800ddde:	2302      	movs	r3, #2
 800dde0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800dde4:	680b      	ldr	r3, [r1, #0]
 800dde6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ddea:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 800ddec:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 800ddf0:	4303      	orrs	r3, r0
 800ddf2:	68e0      	ldr	r0, [r4, #12]
 800ddf4:	4303      	orrs	r3, r0
 800ddf6:	6920      	ldr	r0, [r4, #16]
 800ddf8:	4303      	orrs	r3, r0
 800ddfa:	6960      	ldr	r0, [r4, #20]
 800ddfc:	4303      	orrs	r3, r0
 800ddfe:	69e0      	ldr	r0, [r4, #28]
 800de00:	4303      	orrs	r3, r0
 800de02:	6a20      	ldr	r0, [r4, #32]
 800de04:	4303      	orrs	r3, r0
 800de06:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800de08:	4303      	orrs	r3, r0
 800de0a:	f402 7000 	and.w	r0, r2, #512	; 0x200
 800de0e:	4303      	orrs	r3, r0
 800de10:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 800de12:	0c12      	lsrs	r2, r2, #16
 800de14:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800de16:	f002 0204 	and.w	r2, r2, #4
 800de1a:	431a      	orrs	r2, r3
 800de1c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800de1e:	69cb      	ldr	r3, [r1, #28]
 800de20:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800de24:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800de26:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800de28:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800de2a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800de2c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 800de30:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800de32:	2001      	movs	r0, #1
 800de34:	e7fc      	b.n	800de30 <HAL_SPI_Init+0x74>

0800de36 <HAL_SPI_Transmit>:
{
 800de36:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800de3a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 800de3c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 800de40:	2b01      	cmp	r3, #1
{
 800de42:	4604      	mov	r4, r0
 800de44:	460d      	mov	r5, r1
 800de46:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 800de48:	f000 809d 	beq.w	800df86 <HAL_SPI_Transmit+0x150>
 800de4c:	2301      	movs	r3, #1
 800de4e:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800de52:	f7fd fe19 	bl	800ba88 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800de56:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800de5a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800de5c:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800de5e:	b2d8      	uxtb	r0, r3
 800de60:	f040 808f 	bne.w	800df82 <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 800de64:	2d00      	cmp	r5, #0
 800de66:	d05a      	beq.n	800df1e <HAL_SPI_Transmit+0xe8>
 800de68:	2f00      	cmp	r7, #0
 800de6a:	d058      	beq.n	800df1e <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800de6c:	2303      	movs	r3, #3
 800de6e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800de72:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800de74:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800de76:	2300      	movs	r3, #0
 800de78:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 800de7a:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 800de7e:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800de80:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 800de82:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 800de84:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 800de86:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 800de88:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800de8a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 800de8e:	bf08      	it	eq
 800de90:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800de92:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 800de94:	bf04      	itt	eq
 800de96:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 800de9a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800de9c:	681a      	ldr	r2, [r3, #0]
 800de9e:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800dea0:	bf5e      	ittt	pl
 800dea2:	681a      	ldrpl	r2, [r3, #0]
 800dea4:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 800dea8:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800deaa:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800deae:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800deb0:	d141      	bne.n	800df36 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800deb2:	b10a      	cbz	r2, 800deb8 <HAL_SPI_Transmit+0x82>
 800deb4:	2f01      	cmp	r7, #1
 800deb6:	d107      	bne.n	800dec8 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800deb8:	f835 2b02 	ldrh.w	r2, [r5], #2
 800debc:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800debe:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800dec0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800dec2:	3b01      	subs	r3, #1
 800dec4:	b29b      	uxth	r3, r3
 800dec6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800dec8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800deca:	b29b      	uxth	r3, r3
 800decc:	b9a3      	cbnz	r3, 800def8 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800dece:	4642      	mov	r2, r8
 800ded0:	4631      	mov	r1, r6
 800ded2:	4620      	mov	r0, r4
 800ded4:	f7ff ff46 	bl	800dd64 <SPI_EndRxTxTransaction>
 800ded8:	2800      	cmp	r0, #0
 800deda:	d14f      	bne.n	800df7c <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800dedc:	68a3      	ldr	r3, [r4, #8]
 800dede:	b933      	cbnz	r3, 800deee <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800dee0:	9301      	str	r3, [sp, #4]
 800dee2:	6823      	ldr	r3, [r4, #0]
 800dee4:	68da      	ldr	r2, [r3, #12]
 800dee6:	9201      	str	r2, [sp, #4]
 800dee8:	689b      	ldr	r3, [r3, #8]
 800deea:	9301      	str	r3, [sp, #4]
 800deec:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800deee:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800def0:	3800      	subs	r0, #0
 800def2:	bf18      	it	ne
 800def4:	2001      	movne	r0, #1
error:
 800def6:	e012      	b.n	800df1e <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800def8:	6822      	ldr	r2, [r4, #0]
 800defa:	6893      	ldr	r3, [r2, #8]
 800defc:	0798      	lsls	r0, r3, #30
 800defe:	d505      	bpl.n	800df0c <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800df00:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800df02:	f833 1b02 	ldrh.w	r1, [r3], #2
 800df06:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800df08:	6323      	str	r3, [r4, #48]	; 0x30
 800df0a:	e7d9      	b.n	800dec0 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800df0c:	f7fd fdbc 	bl	800ba88 <HAL_GetTick>
 800df10:	eba0 0008 	sub.w	r0, r0, r8
 800df14:	42b0      	cmp	r0, r6
 800df16:	d30b      	bcc.n	800df30 <HAL_SPI_Transmit+0xfa>
 800df18:	1c71      	adds	r1, r6, #1
 800df1a:	d0d5      	beq.n	800dec8 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 800df1c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800df1e:	2301      	movs	r3, #1
 800df20:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800df24:	2300      	movs	r3, #0
 800df26:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800df2a:	b002      	add	sp, #8
 800df2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800df30:	2e00      	cmp	r6, #0
 800df32:	d1c9      	bne.n	800dec8 <HAL_SPI_Transmit+0x92>
 800df34:	e7f2      	b.n	800df1c <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800df36:	b10a      	cbz	r2, 800df3c <HAL_SPI_Transmit+0x106>
 800df38:	2f01      	cmp	r7, #1
 800df3a:	d108      	bne.n	800df4e <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800df3c:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800df3e:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800df40:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800df42:	3301      	adds	r3, #1
 800df44:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800df46:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800df48:	3b01      	subs	r3, #1
 800df4a:	b29b      	uxth	r3, r3
 800df4c:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800df4e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800df50:	b29b      	uxth	r3, r3
 800df52:	2b00      	cmp	r3, #0
 800df54:	d0bb      	beq.n	800dece <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800df56:	6823      	ldr	r3, [r4, #0]
 800df58:	689a      	ldr	r2, [r3, #8]
 800df5a:	0792      	lsls	r2, r2, #30
 800df5c:	d502      	bpl.n	800df64 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800df5e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800df60:	7812      	ldrb	r2, [r2, #0]
 800df62:	e7ec      	b.n	800df3e <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800df64:	f7fd fd90 	bl	800ba88 <HAL_GetTick>
 800df68:	eba0 0008 	sub.w	r0, r0, r8
 800df6c:	42b0      	cmp	r0, r6
 800df6e:	d302      	bcc.n	800df76 <HAL_SPI_Transmit+0x140>
 800df70:	1c73      	adds	r3, r6, #1
 800df72:	d0ec      	beq.n	800df4e <HAL_SPI_Transmit+0x118>
 800df74:	e7d2      	b.n	800df1c <HAL_SPI_Transmit+0xe6>
 800df76:	2e00      	cmp	r6, #0
 800df78:	d1e9      	bne.n	800df4e <HAL_SPI_Transmit+0x118>
 800df7a:	e7cf      	b.n	800df1c <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800df7c:	2320      	movs	r3, #32
 800df7e:	6563      	str	r3, [r4, #84]	; 0x54
 800df80:	e7ac      	b.n	800dedc <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 800df82:	2002      	movs	r0, #2
 800df84:	e7cb      	b.n	800df1e <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 800df86:	2002      	movs	r0, #2
 800df88:	e7cf      	b.n	800df2a <HAL_SPI_Transmit+0xf4>

0800df8a <HAL_SPI_TransmitReceive>:
{
 800df8a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800df8e:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 800df90:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 800df94:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 800df96:	2b01      	cmp	r3, #1
{
 800df98:	4604      	mov	r4, r0
 800df9a:	460d      	mov	r5, r1
 800df9c:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 800df9e:	f000 80e6 	beq.w	800e16e <HAL_SPI_TransmitReceive+0x1e4>
 800dfa2:	2301      	movs	r3, #1
 800dfa4:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800dfa8:	f7fd fd6e 	bl	800ba88 <HAL_GetTick>
  tmp_state           = hspi->State;
 800dfac:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800dfb0:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800dfb2:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800dfb4:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 800dfb6:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800dfb8:	d00a      	beq.n	800dfd0 <HAL_SPI_TransmitReceive+0x46>
 800dfba:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800dfbe:	f040 80d4 	bne.w	800e16a <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800dfc2:	68a3      	ldr	r3, [r4, #8]
 800dfc4:	2b00      	cmp	r3, #0
 800dfc6:	f040 80d0 	bne.w	800e16a <HAL_SPI_TransmitReceive+0x1e0>
 800dfca:	2904      	cmp	r1, #4
 800dfcc:	f040 80cd 	bne.w	800e16a <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800dfd0:	2d00      	cmp	r5, #0
 800dfd2:	d040      	beq.n	800e056 <HAL_SPI_TransmitReceive+0xcc>
 800dfd4:	f1b9 0f00 	cmp.w	r9, #0
 800dfd8:	d03d      	beq.n	800e056 <HAL_SPI_TransmitReceive+0xcc>
 800dfda:	2e00      	cmp	r6, #0
 800dfdc:	d03b      	beq.n	800e056 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800dfde:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800dfe2:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800dfe6:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800dfe8:	bf1c      	itt	ne
 800dfea:	2305      	movne	r3, #5
 800dfec:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800dff0:	2300      	movs	r3, #0
 800dff2:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800dff4:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800dff8:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800dffa:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800dffc:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800dffe:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800e000:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e002:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 800e004:	bf58      	it	pl
 800e006:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800e008:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 800e00a:	bf58      	it	pl
 800e00c:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 800e010:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 800e012:	bf58      	it	pl
 800e014:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e016:	68e1      	ldr	r1, [r4, #12]
 800e018:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800e01c:	d152      	bne.n	800e0c4 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e01e:	b10a      	cbz	r2, 800e024 <HAL_SPI_TransmitReceive+0x9a>
 800e020:	2e01      	cmp	r6, #1
 800e022:	d107      	bne.n	800e034 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e024:	f835 2b02 	ldrh.w	r2, [r5], #2
 800e028:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800e02a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e02c:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e02e:	3b01      	subs	r3, #1
 800e030:	b29b      	uxth	r3, r3
 800e032:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800e034:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e036:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e038:	b29b      	uxth	r3, r3
 800e03a:	b973      	cbnz	r3, 800e05a <HAL_SPI_TransmitReceive+0xd0>
 800e03c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e03e:	b29b      	uxth	r3, r3
 800e040:	b95b      	cbnz	r3, 800e05a <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800e042:	4642      	mov	r2, r8
 800e044:	4639      	mov	r1, r7
 800e046:	4620      	mov	r0, r4
 800e048:	f7ff fe8c 	bl	800dd64 <SPI_EndRxTxTransaction>
 800e04c:	2800      	cmp	r0, #0
 800e04e:	f000 8081 	beq.w	800e154 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e052:	2320      	movs	r3, #32
 800e054:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800e056:	2001      	movs	r0, #1
 800e058:	e02b      	b.n	800e0b2 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e05a:	6821      	ldr	r1, [r4, #0]
 800e05c:	688b      	ldr	r3, [r1, #8]
 800e05e:	079e      	lsls	r6, r3, #30
 800e060:	d50d      	bpl.n	800e07e <HAL_SPI_TransmitReceive+0xf4>
 800e062:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e064:	b29b      	uxth	r3, r3
 800e066:	b153      	cbz	r3, 800e07e <HAL_SPI_TransmitReceive+0xf4>
 800e068:	b14d      	cbz	r5, 800e07e <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e06a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e06c:	f833 2b02 	ldrh.w	r2, [r3], #2
 800e070:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e072:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e074:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e076:	3b01      	subs	r3, #1
 800e078:	b29b      	uxth	r3, r3
 800e07a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e07c:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e07e:	688a      	ldr	r2, [r1, #8]
 800e080:	f012 0201 	ands.w	r2, r2, #1
 800e084:	d00c      	beq.n	800e0a0 <HAL_SPI_TransmitReceive+0x116>
 800e086:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e088:	b29b      	uxth	r3, r3
 800e08a:	b14b      	cbz	r3, 800e0a0 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e08c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e08e:	68c9      	ldr	r1, [r1, #12]
 800e090:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e094:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e096:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e098:	3b01      	subs	r3, #1
 800e09a:	b29b      	uxth	r3, r3
 800e09c:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e09e:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800e0a0:	f7fd fcf2 	bl	800ba88 <HAL_GetTick>
 800e0a4:	eba0 0008 	sub.w	r0, r0, r8
 800e0a8:	42b8      	cmp	r0, r7
 800e0aa:	d3c4      	bcc.n	800e036 <HAL_SPI_TransmitReceive+0xac>
 800e0ac:	1c78      	adds	r0, r7, #1
 800e0ae:	d0c2      	beq.n	800e036 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 800e0b0:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800e0b2:	2301      	movs	r3, #1
 800e0b4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e0b8:	2300      	movs	r3, #0
 800e0ba:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e0be:	b003      	add	sp, #12
 800e0c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e0c4:	b10a      	cbz	r2, 800e0ca <HAL_SPI_TransmitReceive+0x140>
 800e0c6:	2e01      	cmp	r6, #1
 800e0c8:	d108      	bne.n	800e0dc <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e0ca:	782a      	ldrb	r2, [r5, #0]
 800e0cc:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e0ce:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e0d0:	3301      	adds	r3, #1
 800e0d2:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e0d4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e0d6:	3b01      	subs	r3, #1
 800e0d8:	b29b      	uxth	r3, r3
 800e0da:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800e0dc:	2501      	movs	r5, #1
 800e0de:	e02d      	b.n	800e13c <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e0e0:	6822      	ldr	r2, [r4, #0]
 800e0e2:	6893      	ldr	r3, [r2, #8]
 800e0e4:	0799      	lsls	r1, r3, #30
 800e0e6:	d50e      	bpl.n	800e106 <HAL_SPI_TransmitReceive+0x17c>
 800e0e8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e0ea:	b29b      	uxth	r3, r3
 800e0ec:	b15b      	cbz	r3, 800e106 <HAL_SPI_TransmitReceive+0x17c>
 800e0ee:	b155      	cbz	r5, 800e106 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e0f0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e0f2:	781b      	ldrb	r3, [r3, #0]
 800e0f4:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800e0f6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e0f8:	3301      	adds	r3, #1
 800e0fa:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e0fc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e0fe:	3b01      	subs	r3, #1
 800e100:	b29b      	uxth	r3, r3
 800e102:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e104:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e106:	6822      	ldr	r2, [r4, #0]
 800e108:	6891      	ldr	r1, [r2, #8]
 800e10a:	f011 0101 	ands.w	r1, r1, #1
 800e10e:	d00d      	beq.n	800e12c <HAL_SPI_TransmitReceive+0x1a2>
 800e110:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e112:	b29b      	uxth	r3, r3
 800e114:	b153      	cbz	r3, 800e12c <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e116:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e118:	68d2      	ldr	r2, [r2, #12]
 800e11a:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800e11c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e11e:	3301      	adds	r3, #1
 800e120:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e122:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e124:	3b01      	subs	r3, #1
 800e126:	b29b      	uxth	r3, r3
 800e128:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e12a:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e12c:	f7fd fcac 	bl	800ba88 <HAL_GetTick>
 800e130:	eba0 0008 	sub.w	r0, r0, r8
 800e134:	42b8      	cmp	r0, r7
 800e136:	d30a      	bcc.n	800e14e <HAL_SPI_TransmitReceive+0x1c4>
 800e138:	1c7b      	adds	r3, r7, #1
 800e13a:	d1b9      	bne.n	800e0b0 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e13c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e13e:	b29b      	uxth	r3, r3
 800e140:	2b00      	cmp	r3, #0
 800e142:	d1cd      	bne.n	800e0e0 <HAL_SPI_TransmitReceive+0x156>
 800e144:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e146:	b29b      	uxth	r3, r3
 800e148:	2b00      	cmp	r3, #0
 800e14a:	d1c9      	bne.n	800e0e0 <HAL_SPI_TransmitReceive+0x156>
 800e14c:	e779      	b.n	800e042 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e14e:	2f00      	cmp	r7, #0
 800e150:	d1f4      	bne.n	800e13c <HAL_SPI_TransmitReceive+0x1b2>
 800e152:	e7ad      	b.n	800e0b0 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e154:	68a3      	ldr	r3, [r4, #8]
 800e156:	2b00      	cmp	r3, #0
 800e158:	d1ab      	bne.n	800e0b2 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e15a:	6823      	ldr	r3, [r4, #0]
 800e15c:	9001      	str	r0, [sp, #4]
 800e15e:	68da      	ldr	r2, [r3, #12]
 800e160:	9201      	str	r2, [sp, #4]
 800e162:	689b      	ldr	r3, [r3, #8]
 800e164:	9301      	str	r3, [sp, #4]
 800e166:	9b01      	ldr	r3, [sp, #4]
 800e168:	e7a3      	b.n	800e0b2 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 800e16a:	2002      	movs	r0, #2
 800e16c:	e7a1      	b.n	800e0b2 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 800e16e:	2002      	movs	r0, #2
 800e170:	e7a5      	b.n	800e0be <HAL_SPI_TransmitReceive+0x134>

0800e172 <HAL_SPI_Receive>:
{
 800e172:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e176:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800e178:	6843      	ldr	r3, [r0, #4]
 800e17a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 800e17e:	4604      	mov	r4, r0
 800e180:	4689      	mov	r9, r1
 800e182:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800e184:	d10c      	bne.n	800e1a0 <HAL_SPI_Receive+0x2e>
 800e186:	6883      	ldr	r3, [r0, #8]
 800e188:	b953      	cbnz	r3, 800e1a0 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800e18a:	2304      	movs	r3, #4
 800e18c:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800e190:	4613      	mov	r3, r2
 800e192:	9500      	str	r5, [sp, #0]
 800e194:	460a      	mov	r2, r1
 800e196:	f7ff fef8 	bl	800df8a <HAL_SPI_TransmitReceive>
}
 800e19a:	b003      	add	sp, #12
 800e19c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 800e1a0:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800e1a4:	2b01      	cmp	r3, #1
 800e1a6:	f000 8084 	beq.w	800e2b2 <HAL_SPI_Receive+0x140>
 800e1aa:	2301      	movs	r3, #1
 800e1ac:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e1b0:	f7fd fc6a 	bl	800ba88 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800e1b4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800e1b8:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800e1ba:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800e1bc:	b2d8      	uxtb	r0, r3
 800e1be:	d176      	bne.n	800e2ae <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 800e1c0:	f1b9 0f00 	cmp.w	r9, #0
 800e1c4:	d05a      	beq.n	800e27c <HAL_SPI_Receive+0x10a>
 800e1c6:	2f00      	cmp	r7, #0
 800e1c8:	d058      	beq.n	800e27c <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e1ca:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800e1cc:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800e1d0:	2304      	movs	r3, #4
 800e1d2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e1d6:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 800e1d8:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e1da:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e1dc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 800e1e0:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800e1e2:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 800e1e4:	bf08      	it	eq
 800e1e6:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800e1e8:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 800e1ea:	bf08      	it	eq
 800e1ec:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 800e1f0:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 800e1f4:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 800e1f6:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 800e1f8:	bf08      	it	eq
 800e1fa:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e1fc:	681a      	ldr	r2, [r3, #0]
 800e1fe:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800e200:	bf5e      	ittt	pl
 800e202:	681a      	ldrpl	r2, [r3, #0]
 800e204:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 800e208:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800e20a:	68e3      	ldr	r3, [r4, #12]
 800e20c:	b1f3      	cbz	r3, 800e24c <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 800e20e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e210:	b29b      	uxth	r3, r3
 800e212:	b1fb      	cbz	r3, 800e254 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800e214:	6823      	ldr	r3, [r4, #0]
 800e216:	689a      	ldr	r2, [r3, #8]
 800e218:	07d2      	lsls	r2, r2, #31
 800e21a:	d539      	bpl.n	800e290 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e21c:	68da      	ldr	r2, [r3, #12]
 800e21e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e220:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e224:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e226:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e228:	3b01      	subs	r3, #1
 800e22a:	b29b      	uxth	r3, r3
 800e22c:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800e22e:	e7ee      	b.n	800e20e <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800e230:	6823      	ldr	r3, [r4, #0]
 800e232:	689a      	ldr	r2, [r3, #8]
 800e234:	07d0      	lsls	r0, r2, #31
 800e236:	d518      	bpl.n	800e26a <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800e238:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e23a:	7b1b      	ldrb	r3, [r3, #12]
 800e23c:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800e23e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e240:	3301      	adds	r3, #1
 800e242:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e244:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e246:	3b01      	subs	r3, #1
 800e248:	b29b      	uxth	r3, r3
 800e24a:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800e24c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e24e:	b29b      	uxth	r3, r3
 800e250:	2b00      	cmp	r3, #0
 800e252:	d1ed      	bne.n	800e230 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800e254:	4642      	mov	r2, r8
 800e256:	4629      	mov	r1, r5
 800e258:	4620      	mov	r0, r4
 800e25a:	f7ff fd59 	bl	800dd10 <SPI_EndRxTransaction>
 800e25e:	bb18      	cbnz	r0, 800e2a8 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e260:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800e262:	3800      	subs	r0, #0
 800e264:	bf18      	it	ne
 800e266:	2001      	movne	r0, #1
error :
 800e268:	e008      	b.n	800e27c <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e26a:	f7fd fc0d 	bl	800ba88 <HAL_GetTick>
 800e26e:	eba0 0008 	sub.w	r0, r0, r8
 800e272:	42a8      	cmp	r0, r5
 800e274:	d309      	bcc.n	800e28a <HAL_SPI_Receive+0x118>
 800e276:	1c69      	adds	r1, r5, #1
 800e278:	d0e8      	beq.n	800e24c <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 800e27a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800e27c:	2301      	movs	r3, #1
 800e27e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e282:	2300      	movs	r3, #0
 800e284:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 800e288:	e787      	b.n	800e19a <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e28a:	2d00      	cmp	r5, #0
 800e28c:	d1de      	bne.n	800e24c <HAL_SPI_Receive+0xda>
 800e28e:	e7f4      	b.n	800e27a <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e290:	f7fd fbfa 	bl	800ba88 <HAL_GetTick>
 800e294:	eba0 0008 	sub.w	r0, r0, r8
 800e298:	42a8      	cmp	r0, r5
 800e29a:	d302      	bcc.n	800e2a2 <HAL_SPI_Receive+0x130>
 800e29c:	1c6b      	adds	r3, r5, #1
 800e29e:	d0b6      	beq.n	800e20e <HAL_SPI_Receive+0x9c>
 800e2a0:	e7eb      	b.n	800e27a <HAL_SPI_Receive+0x108>
 800e2a2:	2d00      	cmp	r5, #0
 800e2a4:	d1b3      	bne.n	800e20e <HAL_SPI_Receive+0x9c>
 800e2a6:	e7e8      	b.n	800e27a <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e2a8:	2320      	movs	r3, #32
 800e2aa:	6563      	str	r3, [r4, #84]	; 0x54
 800e2ac:	e7d8      	b.n	800e260 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 800e2ae:	2002      	movs	r0, #2
 800e2b0:	e7e4      	b.n	800e27c <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 800e2b2:	2002      	movs	r0, #2
 800e2b4:	e771      	b.n	800e19a <HAL_SPI_Receive+0x28>
	...

0800e2b8 <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800e2b8:	6a03      	ldr	r3, [r0, #32]
 800e2ba:	f023 0301 	bic.w	r3, r3, #1
 800e2be:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800e2c0:	6a03      	ldr	r3, [r0, #32]
{
 800e2c2:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800e2c4:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800e2c6:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800e2c8:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800e2ca:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800e2ce:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800e2d0:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800e2d2:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 800e2d6:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800e2d8:	4d0e      	ldr	r5, [pc, #56]	; (800e314 <TIM_OC1_SetConfig+0x5c>)
 800e2da:	42a8      	cmp	r0, r5
 800e2dc:	d002      	beq.n	800e2e4 <TIM_OC1_SetConfig+0x2c>
 800e2de:	4e0e      	ldr	r6, [pc, #56]	; (800e318 <TIM_OC1_SetConfig+0x60>)
 800e2e0:	42b0      	cmp	r0, r6
 800e2e2:	d110      	bne.n	800e306 <TIM_OC1_SetConfig+0x4e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 800e2e4:	68ce      	ldr	r6, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800e2e6:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 800e2ea:	4333      	orrs	r3, r6
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e2ec:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800e2ee:	f023 0304 	bic.w	r3, r3, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e2f2:	d002      	beq.n	800e2fa <TIM_OC1_SetConfig+0x42>
 800e2f4:	4d08      	ldr	r5, [pc, #32]	; (800e318 <TIM_OC1_SetConfig+0x60>)
 800e2f6:	42a8      	cmp	r0, r5
 800e2f8:	d105      	bne.n	800e306 <TIM_OC1_SetConfig+0x4e>
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800e2fa:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800e2fe:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800e302:	4335      	orrs	r5, r6
 800e304:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800e306:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800e308:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800e30a:	684a      	ldr	r2, [r1, #4]
 800e30c:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800e30e:	6203      	str	r3, [r0, #32]
}
 800e310:	bd70      	pop	{r4, r5, r6, pc}
 800e312:	bf00      	nop
 800e314:	40010000 	.word	0x40010000
 800e318:	40010400 	.word	0x40010400

0800e31c <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800e31c:	6a03      	ldr	r3, [r0, #32]
 800e31e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800e322:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800e324:	6a03      	ldr	r3, [r0, #32]
{
 800e326:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800e328:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800e32a:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800e32c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800e32e:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800e332:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800e334:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800e336:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800e33a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800e33e:	4d11      	ldr	r5, [pc, #68]	; (800e384 <TIM_OC3_SetConfig+0x68>)
 800e340:	42a8      	cmp	r0, r5
 800e342:	d003      	beq.n	800e34c <TIM_OC3_SetConfig+0x30>
 800e344:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e348:	42a8      	cmp	r0, r5
 800e34a:	d114      	bne.n	800e376 <TIM_OC3_SetConfig+0x5a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800e34c:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800e34e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800e352:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e356:	4d0b      	ldr	r5, [pc, #44]	; (800e384 <TIM_OC3_SetConfig+0x68>)
 800e358:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800e35a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e35e:	d003      	beq.n	800e368 <TIM_OC3_SetConfig+0x4c>
 800e360:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e364:	42a8      	cmp	r0, r5
 800e366:	d106      	bne.n	800e376 <TIM_OC3_SetConfig+0x5a>
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800e368:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800e36c:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800e370:	4335      	orrs	r5, r6
 800e372:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800e376:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800e378:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800e37a:	684a      	ldr	r2, [r1, #4]
 800e37c:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800e37e:	6203      	str	r3, [r0, #32]
}
 800e380:	bd70      	pop	{r4, r5, r6, pc}
 800e382:	bf00      	nop
 800e384:	40010000 	.word	0x40010000

0800e388 <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800e388:	6a03      	ldr	r3, [r0, #32]
 800e38a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800e38e:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800e390:	6a03      	ldr	r3, [r0, #32]
{
 800e392:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800e394:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800e396:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800e398:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800e39a:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800e39e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800e3a2:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800e3a4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800e3a8:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e3ac:	4d08      	ldr	r5, [pc, #32]	; (800e3d0 <TIM_OC4_SetConfig+0x48>)
 800e3ae:	42a8      	cmp	r0, r5
 800e3b0:	d003      	beq.n	800e3ba <TIM_OC4_SetConfig+0x32>
 800e3b2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e3b6:	42a8      	cmp	r0, r5
 800e3b8:	d104      	bne.n	800e3c4 <TIM_OC4_SetConfig+0x3c>

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800e3ba:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800e3bc:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800e3c0:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800e3c4:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800e3c6:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800e3c8:	684a      	ldr	r2, [r1, #4]
 800e3ca:	6402      	str	r2, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800e3cc:	6203      	str	r3, [r0, #32]
}
 800e3ce:	bd30      	pop	{r4, r5, pc}
 800e3d0:	40010000 	.word	0x40010000

0800e3d4 <HAL_TIM_Base_Start>:
  htim->State = HAL_TIM_STATE_BUSY;
 800e3d4:	2302      	movs	r3, #2
 800e3d6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800e3da:	6803      	ldr	r3, [r0, #0]
 800e3dc:	689a      	ldr	r2, [r3, #8]
 800e3de:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800e3e2:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 800e3e4:	bf1e      	ittt	ne
 800e3e6:	681a      	ldrne	r2, [r3, #0]
 800e3e8:	f042 0201 	orrne.w	r2, r2, #1
 800e3ec:	601a      	strne	r2, [r3, #0]
  htim->State = HAL_TIM_STATE_READY;
 800e3ee:	2301      	movs	r3, #1
 800e3f0:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
}
 800e3f4:	2000      	movs	r0, #0
 800e3f6:	4770      	bx	lr

0800e3f8 <HAL_TIM_Base_Start_IT>:
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800e3f8:	6803      	ldr	r3, [r0, #0]
 800e3fa:	68da      	ldr	r2, [r3, #12]
 800e3fc:	f042 0201 	orr.w	r2, r2, #1
 800e400:	60da      	str	r2, [r3, #12]
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800e402:	689a      	ldr	r2, [r3, #8]
 800e404:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800e408:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 800e40a:	bf1e      	ittt	ne
 800e40c:	681a      	ldrne	r2, [r3, #0]
 800e40e:	f042 0201 	orrne.w	r2, r2, #1
 800e412:	601a      	strne	r2, [r3, #0]
}
 800e414:	2000      	movs	r0, #0
 800e416:	4770      	bx	lr

0800e418 <HAL_TIM_OC_DelayElapsedCallback>:
 800e418:	4770      	bx	lr

0800e41a <HAL_TIM_IC_CaptureCallback>:
 800e41a:	4770      	bx	lr

0800e41c <HAL_TIM_PWM_PulseFinishedCallback>:
 800e41c:	4770      	bx	lr

0800e41e <HAL_TIM_TriggerCallback>:
 800e41e:	4770      	bx	lr

0800e420 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800e420:	6803      	ldr	r3, [r0, #0]
 800e422:	691a      	ldr	r2, [r3, #16]
 800e424:	0791      	lsls	r1, r2, #30
{
 800e426:	b510      	push	{r4, lr}
 800e428:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800e42a:	d50e      	bpl.n	800e44a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800e42c:	68da      	ldr	r2, [r3, #12]
 800e42e:	0792      	lsls	r2, r2, #30
 800e430:	d50b      	bpl.n	800e44a <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800e432:	f06f 0202 	mvn.w	r2, #2
 800e436:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800e438:	2201      	movs	r2, #1
 800e43a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800e43c:	699b      	ldr	r3, [r3, #24]
 800e43e:	079b      	lsls	r3, r3, #30
 800e440:	d077      	beq.n	800e532 <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 800e442:	f7ff ffea 	bl	800e41a <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e446:	2300      	movs	r3, #0
 800e448:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800e44a:	6823      	ldr	r3, [r4, #0]
 800e44c:	691a      	ldr	r2, [r3, #16]
 800e44e:	0750      	lsls	r0, r2, #29
 800e450:	d510      	bpl.n	800e474 <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800e452:	68da      	ldr	r2, [r3, #12]
 800e454:	0751      	lsls	r1, r2, #29
 800e456:	d50d      	bpl.n	800e474 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800e458:	f06f 0204 	mvn.w	r2, #4
 800e45c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800e45e:	2202      	movs	r2, #2
 800e460:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800e462:	699b      	ldr	r3, [r3, #24]
 800e464:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800e468:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800e46a:	d068      	beq.n	800e53e <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800e46c:	f7ff ffd5 	bl	800e41a <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e470:	2300      	movs	r3, #0
 800e472:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800e474:	6823      	ldr	r3, [r4, #0]
 800e476:	691a      	ldr	r2, [r3, #16]
 800e478:	0712      	lsls	r2, r2, #28
 800e47a:	d50f      	bpl.n	800e49c <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800e47c:	68da      	ldr	r2, [r3, #12]
 800e47e:	0710      	lsls	r0, r2, #28
 800e480:	d50c      	bpl.n	800e49c <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800e482:	f06f 0208 	mvn.w	r2, #8
 800e486:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800e488:	2204      	movs	r2, #4
 800e48a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800e48c:	69db      	ldr	r3, [r3, #28]
 800e48e:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800e490:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800e492:	d05a      	beq.n	800e54a <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800e494:	f7ff ffc1 	bl	800e41a <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e498:	2300      	movs	r3, #0
 800e49a:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800e49c:	6823      	ldr	r3, [r4, #0]
 800e49e:	691a      	ldr	r2, [r3, #16]
 800e4a0:	06d2      	lsls	r2, r2, #27
 800e4a2:	d510      	bpl.n	800e4c6 <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800e4a4:	68da      	ldr	r2, [r3, #12]
 800e4a6:	06d0      	lsls	r0, r2, #27
 800e4a8:	d50d      	bpl.n	800e4c6 <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800e4aa:	f06f 0210 	mvn.w	r2, #16
 800e4ae:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800e4b0:	2208      	movs	r2, #8
 800e4b2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800e4b4:	69db      	ldr	r3, [r3, #28]
 800e4b6:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800e4ba:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800e4bc:	d04b      	beq.n	800e556 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800e4be:	f7ff ffac 	bl	800e41a <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e4c2:	2300      	movs	r3, #0
 800e4c4:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800e4c6:	6823      	ldr	r3, [r4, #0]
 800e4c8:	691a      	ldr	r2, [r3, #16]
 800e4ca:	07d1      	lsls	r1, r2, #31
 800e4cc:	d508      	bpl.n	800e4e0 <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800e4ce:	68da      	ldr	r2, [r3, #12]
 800e4d0:	07d2      	lsls	r2, r2, #31
 800e4d2:	d505      	bpl.n	800e4e0 <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800e4d4:	f06f 0201 	mvn.w	r2, #1
 800e4d8:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800e4da:	4620      	mov	r0, r4
 800e4dc:	f7f4 fc38 	bl	8002d50 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800e4e0:	6823      	ldr	r3, [r4, #0]
 800e4e2:	691a      	ldr	r2, [r3, #16]
 800e4e4:	0610      	lsls	r0, r2, #24
 800e4e6:	d508      	bpl.n	800e4fa <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800e4e8:	68da      	ldr	r2, [r3, #12]
 800e4ea:	0611      	lsls	r1, r2, #24
 800e4ec:	d505      	bpl.n	800e4fa <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800e4ee:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800e4f2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800e4f4:	4620      	mov	r0, r4
 800e4f6:	f000 fab8 	bl	800ea6a <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800e4fa:	6823      	ldr	r3, [r4, #0]
 800e4fc:	691a      	ldr	r2, [r3, #16]
 800e4fe:	0652      	lsls	r2, r2, #25
 800e500:	d508      	bpl.n	800e514 <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800e502:	68da      	ldr	r2, [r3, #12]
 800e504:	0650      	lsls	r0, r2, #25
 800e506:	d505      	bpl.n	800e514 <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800e508:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800e50c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800e50e:	4620      	mov	r0, r4
 800e510:	f7ff ff85 	bl	800e41e <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800e514:	6823      	ldr	r3, [r4, #0]
 800e516:	691a      	ldr	r2, [r3, #16]
 800e518:	0691      	lsls	r1, r2, #26
 800e51a:	d522      	bpl.n	800e562 <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800e51c:	68da      	ldr	r2, [r3, #12]
 800e51e:	0692      	lsls	r2, r2, #26
 800e520:	d51f      	bpl.n	800e562 <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800e522:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800e526:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800e528:	611a      	str	r2, [r3, #16]
}
 800e52a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800e52e:	f000 ba9b 	b.w	800ea68 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800e532:	f7ff ff71 	bl	800e418 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e536:	4620      	mov	r0, r4
 800e538:	f7ff ff70 	bl	800e41c <HAL_TIM_PWM_PulseFinishedCallback>
 800e53c:	e783      	b.n	800e446 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e53e:	f7ff ff6b 	bl	800e418 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e542:	4620      	mov	r0, r4
 800e544:	f7ff ff6a 	bl	800e41c <HAL_TIM_PWM_PulseFinishedCallback>
 800e548:	e792      	b.n	800e470 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e54a:	f7ff ff65 	bl	800e418 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e54e:	4620      	mov	r0, r4
 800e550:	f7ff ff64 	bl	800e41c <HAL_TIM_PWM_PulseFinishedCallback>
 800e554:	e7a0      	b.n	800e498 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e556:	f7ff ff5f 	bl	800e418 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e55a:	4620      	mov	r0, r4
 800e55c:	f7ff ff5e 	bl	800e41c <HAL_TIM_PWM_PulseFinishedCallback>
 800e560:	e7af      	b.n	800e4c2 <HAL_TIM_IRQHandler+0xa2>
}
 800e562:	bd10      	pop	{r4, pc}

0800e564 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800e564:	4a30      	ldr	r2, [pc, #192]	; (800e628 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800e566:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800e568:	4290      	cmp	r0, r2
 800e56a:	d012      	beq.n	800e592 <TIM_Base_SetConfig+0x2e>
 800e56c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800e570:	d00f      	beq.n	800e592 <TIM_Base_SetConfig+0x2e>
 800e572:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800e576:	4290      	cmp	r0, r2
 800e578:	d00b      	beq.n	800e592 <TIM_Base_SetConfig+0x2e>
 800e57a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e57e:	4290      	cmp	r0, r2
 800e580:	d007      	beq.n	800e592 <TIM_Base_SetConfig+0x2e>
 800e582:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e586:	4290      	cmp	r0, r2
 800e588:	d003      	beq.n	800e592 <TIM_Base_SetConfig+0x2e>
 800e58a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800e58e:	4290      	cmp	r0, r2
 800e590:	d119      	bne.n	800e5c6 <TIM_Base_SetConfig+0x62>
    tmpcr1 |= Structure->CounterMode;
 800e592:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800e594:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800e598:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800e59a:	4a23      	ldr	r2, [pc, #140]	; (800e628 <TIM_Base_SetConfig+0xc4>)
 800e59c:	4290      	cmp	r0, r2
 800e59e:	d029      	beq.n	800e5f4 <TIM_Base_SetConfig+0x90>
 800e5a0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800e5a4:	d026      	beq.n	800e5f4 <TIM_Base_SetConfig+0x90>
 800e5a6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800e5aa:	4290      	cmp	r0, r2
 800e5ac:	d022      	beq.n	800e5f4 <TIM_Base_SetConfig+0x90>
 800e5ae:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e5b2:	4290      	cmp	r0, r2
 800e5b4:	d01e      	beq.n	800e5f4 <TIM_Base_SetConfig+0x90>
 800e5b6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e5ba:	4290      	cmp	r0, r2
 800e5bc:	d01a      	beq.n	800e5f4 <TIM_Base_SetConfig+0x90>
 800e5be:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800e5c2:	4290      	cmp	r0, r2
 800e5c4:	d016      	beq.n	800e5f4 <TIM_Base_SetConfig+0x90>
 800e5c6:	4a19      	ldr	r2, [pc, #100]	; (800e62c <TIM_Base_SetConfig+0xc8>)
 800e5c8:	4290      	cmp	r0, r2
 800e5ca:	d013      	beq.n	800e5f4 <TIM_Base_SetConfig+0x90>
 800e5cc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e5d0:	4290      	cmp	r0, r2
 800e5d2:	d00f      	beq.n	800e5f4 <TIM_Base_SetConfig+0x90>
 800e5d4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e5d8:	4290      	cmp	r0, r2
 800e5da:	d00b      	beq.n	800e5f4 <TIM_Base_SetConfig+0x90>
 800e5dc:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800e5e0:	4290      	cmp	r0, r2
 800e5e2:	d007      	beq.n	800e5f4 <TIM_Base_SetConfig+0x90>
 800e5e4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e5e8:	4290      	cmp	r0, r2
 800e5ea:	d003      	beq.n	800e5f4 <TIM_Base_SetConfig+0x90>
 800e5ec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e5f0:	4290      	cmp	r0, r2
 800e5f2:	d103      	bne.n	800e5fc <TIM_Base_SetConfig+0x98>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800e5f4:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800e5f6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800e5fa:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800e5fc:	694a      	ldr	r2, [r1, #20]
 800e5fe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800e602:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 800e604:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800e606:	688b      	ldr	r3, [r1, #8]
 800e608:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800e60a:	680b      	ldr	r3, [r1, #0]
 800e60c:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800e60e:	4b06      	ldr	r3, [pc, #24]	; (800e628 <TIM_Base_SetConfig+0xc4>)
 800e610:	4298      	cmp	r0, r3
 800e612:	d003      	beq.n	800e61c <TIM_Base_SetConfig+0xb8>
 800e614:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800e618:	4298      	cmp	r0, r3
 800e61a:	d101      	bne.n	800e620 <TIM_Base_SetConfig+0xbc>
    TIMx->RCR = Structure->RepetitionCounter;
 800e61c:	690b      	ldr	r3, [r1, #16]
 800e61e:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 800e620:	2301      	movs	r3, #1
 800e622:	6143      	str	r3, [r0, #20]
}
 800e624:	4770      	bx	lr
 800e626:	bf00      	nop
 800e628:	40010000 	.word	0x40010000
 800e62c:	40014000 	.word	0x40014000

0800e630 <HAL_TIM_Base_Init>:
{
 800e630:	b510      	push	{r4, lr}
  if (htim == NULL)
 800e632:	4604      	mov	r4, r0
 800e634:	b1a0      	cbz	r0, 800e660 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 800e636:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800e63a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e63e:	b91b      	cbnz	r3, 800e648 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800e640:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800e644:	f7f4 fdea 	bl	800321c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800e648:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800e64a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800e64c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800e650:	1d21      	adds	r1, r4, #4
 800e652:	f7ff ff87 	bl	800e564 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 800e656:	2301      	movs	r3, #1
 800e658:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800e65c:	2000      	movs	r0, #0
}
 800e65e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800e660:	2001      	movs	r0, #1
 800e662:	e7fc      	b.n	800e65e <HAL_TIM_Base_Init+0x2e>

0800e664 <HAL_TIM_OC_Init>:
{
 800e664:	b510      	push	{r4, lr}
  if (htim == NULL)
 800e666:	4604      	mov	r4, r0
 800e668:	b1a0      	cbz	r0, 800e694 <HAL_TIM_OC_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 800e66a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800e66e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e672:	b91b      	cbnz	r3, 800e67c <HAL_TIM_OC_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800e674:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_OC_MspInit(htim);
 800e678:	f7f4 fe10 	bl	800329c <HAL_TIM_OC_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800e67c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance,  &htim->Init);
 800e67e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800e680:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance,  &htim->Init);
 800e684:	1d21      	adds	r1, r4, #4
 800e686:	f7ff ff6d 	bl	800e564 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 800e68a:	2301      	movs	r3, #1
 800e68c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800e690:	2000      	movs	r0, #0
}
 800e692:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800e694:	2001      	movs	r0, #1
 800e696:	e7fc      	b.n	800e692 <HAL_TIM_OC_Init+0x2e>

0800e698 <HAL_TIM_PWM_Init>:
{
 800e698:	b510      	push	{r4, lr}
  if (htim == NULL)
 800e69a:	4604      	mov	r4, r0
 800e69c:	b1a0      	cbz	r0, 800e6c8 <HAL_TIM_PWM_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 800e69e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800e6a2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e6a6:	b91b      	cbnz	r3, 800e6b0 <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800e6a8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800e6ac:	f7f4 fdce 	bl	800324c <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800e6b0:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800e6b2:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800e6b4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800e6b8:	1d21      	adds	r1, r4, #4
 800e6ba:	f7ff ff53 	bl	800e564 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 800e6be:	2301      	movs	r3, #1
 800e6c0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800e6c4:	2000      	movs	r0, #0
}
 800e6c6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800e6c8:	2001      	movs	r0, #1
 800e6ca:	e7fc      	b.n	800e6c6 <HAL_TIM_PWM_Init+0x2e>

0800e6cc <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800e6cc:	6a03      	ldr	r3, [r0, #32]
 800e6ce:	f023 0310 	bic.w	r3, r3, #16
 800e6d2:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 800e6d4:	6a03      	ldr	r3, [r0, #32]
{
 800e6d6:	b570      	push	{r4, r5, r6, lr}
  tmpcr2 =  TIMx->CR2;
 800e6d8:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 800e6da:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800e6dc:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800e6de:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800e6e2:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800e6e6:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800e6e8:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800e6ec:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800e6f0:	4d10      	ldr	r5, [pc, #64]	; (800e734 <TIM_OC2_SetConfig+0x68>)
 800e6f2:	42a8      	cmp	r0, r5
 800e6f4:	d003      	beq.n	800e6fe <TIM_OC2_SetConfig+0x32>
 800e6f6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e6fa:	42a8      	cmp	r0, r5
 800e6fc:	d114      	bne.n	800e728 <TIM_OC2_SetConfig+0x5c>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800e6fe:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800e700:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800e704:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e708:	4d0a      	ldr	r5, [pc, #40]	; (800e734 <TIM_OC2_SetConfig+0x68>)
 800e70a:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800e70c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800e710:	d003      	beq.n	800e71a <TIM_OC2_SetConfig+0x4e>
 800e712:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800e716:	42a8      	cmp	r0, r5
 800e718:	d106      	bne.n	800e728 <TIM_OC2_SetConfig+0x5c>
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800e71a:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800e71e:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800e722:	4335      	orrs	r5, r6
 800e724:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 800e728:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 800e72a:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800e72c:	684a      	ldr	r2, [r1, #4]
 800e72e:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800e730:	6203      	str	r3, [r0, #32]
}
 800e732:	bd70      	pop	{r4, r5, r6, pc}
 800e734:	40010000 	.word	0x40010000

0800e738 <HAL_TIM_OC_ConfigChannel>:
{
 800e738:	b510      	push	{r4, lr}
  __HAL_LOCK(htim);
 800e73a:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800e73e:	2b01      	cmp	r3, #1
{
 800e740:	4604      	mov	r4, r0
 800e742:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 800e746:	d010      	beq.n	800e76a <HAL_TIM_OC_ConfigChannel+0x32>
 800e748:	2301      	movs	r3, #1
  switch (Channel)
 800e74a:	2a08      	cmp	r2, #8
  __HAL_LOCK(htim);
 800e74c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_BUSY;
 800e750:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  switch (Channel)
 800e754:	d018      	beq.n	800e788 <HAL_TIM_OC_ConfigChannel+0x50>
 800e756:	d809      	bhi.n	800e76c <HAL_TIM_OC_ConfigChannel+0x34>
 800e758:	b172      	cbz	r2, 800e778 <HAL_TIM_OC_ConfigChannel+0x40>
 800e75a:	2a04      	cmp	r2, #4
 800e75c:	d010      	beq.n	800e780 <HAL_TIM_OC_ConfigChannel+0x48>
  htim->State = HAL_TIM_STATE_READY;
 800e75e:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 800e760:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 800e762:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800e766:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 800e76a:	bd10      	pop	{r4, pc}
  switch (Channel)
 800e76c:	2a0c      	cmp	r2, #12
 800e76e:	d1f6      	bne.n	800e75e <HAL_TIM_OC_ConfigChannel+0x26>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800e770:	6820      	ldr	r0, [r4, #0]
 800e772:	f7ff fe09 	bl	800e388 <TIM_OC4_SetConfig>
      break;
 800e776:	e7f2      	b.n	800e75e <HAL_TIM_OC_ConfigChannel+0x26>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800e778:	6820      	ldr	r0, [r4, #0]
 800e77a:	f7ff fd9d 	bl	800e2b8 <TIM_OC1_SetConfig>
      break;
 800e77e:	e7ee      	b.n	800e75e <HAL_TIM_OC_ConfigChannel+0x26>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800e780:	6820      	ldr	r0, [r4, #0]
 800e782:	f7ff ffa3 	bl	800e6cc <TIM_OC2_SetConfig>
      break;
 800e786:	e7ea      	b.n	800e75e <HAL_TIM_OC_ConfigChannel+0x26>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800e788:	6820      	ldr	r0, [r4, #0]
 800e78a:	f7ff fdc7 	bl	800e31c <TIM_OC3_SetConfig>
      break;
 800e78e:	e7e6      	b.n	800e75e <HAL_TIM_OC_ConfigChannel+0x26>

0800e790 <HAL_TIM_PWM_ConfigChannel>:
{
 800e790:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 800e792:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800e796:	2b01      	cmp	r3, #1
{
 800e798:	4604      	mov	r4, r0
 800e79a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 800e79e:	d010      	beq.n	800e7c2 <HAL_TIM_PWM_ConfigChannel+0x32>
 800e7a0:	2301      	movs	r3, #1
  switch (Channel)
 800e7a2:	2a08      	cmp	r2, #8
  __HAL_LOCK(htim);
 800e7a4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_BUSY;
 800e7a8:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  switch (Channel)
 800e7ac:	d03f      	beq.n	800e82e <HAL_TIM_PWM_ConfigChannel+0x9e>
 800e7ae:	d809      	bhi.n	800e7c4 <HAL_TIM_PWM_ConfigChannel+0x34>
 800e7b0:	b1da      	cbz	r2, 800e7ea <HAL_TIM_PWM_ConfigChannel+0x5a>
 800e7b2:	2a04      	cmp	r2, #4
 800e7b4:	d02a      	beq.n	800e80c <HAL_TIM_PWM_ConfigChannel+0x7c>
  htim->State = HAL_TIM_STATE_READY;
 800e7b6:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 800e7b8:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 800e7ba:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800e7be:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 800e7c2:	bd38      	pop	{r3, r4, r5, pc}
  switch (Channel)
 800e7c4:	2a0c      	cmp	r2, #12
 800e7c6:	d1f6      	bne.n	800e7b6 <HAL_TIM_PWM_ConfigChannel+0x26>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800e7c8:	6820      	ldr	r0, [r4, #0]
 800e7ca:	f7ff fddd 	bl	800e388 <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800e7ce:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800e7d0:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800e7d2:	69da      	ldr	r2, [r3, #28]
 800e7d4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800e7d8:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800e7da:	69da      	ldr	r2, [r3, #28]
 800e7dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800e7e0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800e7e2:	69da      	ldr	r2, [r3, #28]
 800e7e4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800e7e8:	e030      	b.n	800e84c <HAL_TIM_PWM_ConfigChannel+0xbc>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800e7ea:	6820      	ldr	r0, [r4, #0]
 800e7ec:	f7ff fd64 	bl	800e2b8 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800e7f0:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800e7f2:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800e7f4:	699a      	ldr	r2, [r3, #24]
 800e7f6:	f042 0208 	orr.w	r2, r2, #8
 800e7fa:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800e7fc:	699a      	ldr	r2, [r3, #24]
 800e7fe:	f022 0204 	bic.w	r2, r2, #4
 800e802:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800e804:	699a      	ldr	r2, [r3, #24]
 800e806:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800e808:	619a      	str	r2, [r3, #24]
      break;
 800e80a:	e7d4      	b.n	800e7b6 <HAL_TIM_PWM_ConfigChannel+0x26>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800e80c:	6820      	ldr	r0, [r4, #0]
 800e80e:	f7ff ff5d 	bl	800e6cc <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800e812:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800e814:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800e816:	699a      	ldr	r2, [r3, #24]
 800e818:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800e81c:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800e81e:	699a      	ldr	r2, [r3, #24]
 800e820:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800e824:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800e826:	699a      	ldr	r2, [r3, #24]
 800e828:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800e82c:	e7ec      	b.n	800e808 <HAL_TIM_PWM_ConfigChannel+0x78>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800e82e:	6820      	ldr	r0, [r4, #0]
 800e830:	f7ff fd74 	bl	800e31c <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800e834:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800e836:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800e838:	69da      	ldr	r2, [r3, #28]
 800e83a:	f042 0208 	orr.w	r2, r2, #8
 800e83e:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800e840:	69da      	ldr	r2, [r3, #28]
 800e842:	f022 0204 	bic.w	r2, r2, #4
 800e846:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800e848:	69da      	ldr	r2, [r3, #28]
 800e84a:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800e84c:	61da      	str	r2, [r3, #28]
      break;
 800e84e:	e7b2      	b.n	800e7b6 <HAL_TIM_PWM_ConfigChannel+0x26>

0800e850 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 800e850:	b510      	push	{r4, lr}
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800e852:	6884      	ldr	r4, [r0, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e854:	4311      	orrs	r1, r2
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800e856:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800e85a:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
 800e85e:	4323      	orrs	r3, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800e860:	6083      	str	r3, [r0, #8]
}
 800e862:	bd10      	pop	{r4, pc}

0800e864 <HAL_TIM_ConfigClockSource>:
{
 800e864:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(htim);
 800e866:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800e86a:	2b01      	cmp	r3, #1
{
 800e86c:	4604      	mov	r4, r0
 800e86e:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 800e872:	d027      	beq.n	800e8c4 <HAL_TIM_ConfigClockSource+0x60>
  htim->State = HAL_TIM_STATE_BUSY;
 800e874:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  __HAL_LOCK(htim);
 800e878:	2301      	movs	r3, #1
  tmpsmcr = htim->Instance->SMCR;
 800e87a:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(htim);
 800e87c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800e880:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800e882:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800e886:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800e88a:	6083      	str	r3, [r0, #8]
  switch (sClockSourceConfig->ClockSource)
 800e88c:	680b      	ldr	r3, [r1, #0]
 800e88e:	2b60      	cmp	r3, #96	; 0x60
 800e890:	d04d      	beq.n	800e92e <HAL_TIM_ConfigClockSource+0xca>
 800e892:	d832      	bhi.n	800e8fa <HAL_TIM_ConfigClockSource+0x96>
 800e894:	2b40      	cmp	r3, #64	; 0x40
 800e896:	d062      	beq.n	800e95e <HAL_TIM_ConfigClockSource+0xfa>
 800e898:	d815      	bhi.n	800e8c6 <HAL_TIM_ConfigClockSource+0x62>
 800e89a:	2b20      	cmp	r3, #32
 800e89c:	d003      	beq.n	800e8a6 <HAL_TIM_ConfigClockSource+0x42>
 800e89e:	d809      	bhi.n	800e8b4 <HAL_TIM_ConfigClockSource+0x50>
 800e8a0:	f033 0210 	bics.w	r2, r3, #16
 800e8a4:	d108      	bne.n	800e8b8 <HAL_TIM_ConfigClockSource+0x54>
  tmpsmcr = TIMx->SMCR;
 800e8a6:	6882      	ldr	r2, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800e8a8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800e8ac:	4313      	orrs	r3, r2
 800e8ae:	f043 0307 	orr.w	r3, r3, #7
 800e8b2:	e020      	b.n	800e8f6 <HAL_TIM_ConfigClockSource+0x92>
  switch (sClockSourceConfig->ClockSource)
 800e8b4:	2b30      	cmp	r3, #48	; 0x30
 800e8b6:	d0f6      	beq.n	800e8a6 <HAL_TIM_ConfigClockSource+0x42>
  htim->State = HAL_TIM_STATE_READY;
 800e8b8:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 800e8ba:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 800e8bc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800e8c0:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 800e8c4:	bd70      	pop	{r4, r5, r6, pc}
  switch (sClockSourceConfig->ClockSource)
 800e8c6:	2b50      	cmp	r3, #80	; 0x50
 800e8c8:	d1f6      	bne.n	800e8b8 <HAL_TIM_ConfigClockSource+0x54>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800e8ca:	684a      	ldr	r2, [r1, #4]
 800e8cc:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 800e8ce:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800e8d0:	6a05      	ldr	r5, [r0, #32]
 800e8d2:	f025 0501 	bic.w	r5, r5, #1
 800e8d6:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 800e8d8:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800e8da:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800e8de:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800e8e2:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 800e8e6:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 800e8e8:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 800e8ea:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800e8ec:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800e8ee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800e8f2:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  TIMx->SMCR = tmpsmcr;
 800e8f6:	6083      	str	r3, [r0, #8]
}
 800e8f8:	e7de      	b.n	800e8b8 <HAL_TIM_ConfigClockSource+0x54>
  switch (sClockSourceConfig->ClockSource)
 800e8fa:	2b70      	cmp	r3, #112	; 0x70
 800e8fc:	d00c      	beq.n	800e918 <HAL_TIM_ConfigClockSource+0xb4>
 800e8fe:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800e902:	d1d9      	bne.n	800e8b8 <HAL_TIM_ConfigClockSource+0x54>
      TIM_ETR_SetConfig(htim->Instance,
 800e904:	68cb      	ldr	r3, [r1, #12]
 800e906:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 800e90a:	f7ff ffa1 	bl	800e850 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800e90e:	6822      	ldr	r2, [r4, #0]
 800e910:	6893      	ldr	r3, [r2, #8]
 800e912:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800e916:	e008      	b.n	800e92a <HAL_TIM_ConfigClockSource+0xc6>
      TIM_ETR_SetConfig(htim->Instance,
 800e918:	68cb      	ldr	r3, [r1, #12]
 800e91a:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 800e91e:	f7ff ff97 	bl	800e850 <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 800e922:	6822      	ldr	r2, [r4, #0]
 800e924:	6893      	ldr	r3, [r2, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800e926:	f043 0377 	orr.w	r3, r3, #119	; 0x77
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800e92a:	6093      	str	r3, [r2, #8]
      break;
 800e92c:	e7c4      	b.n	800e8b8 <HAL_TIM_ConfigClockSource+0x54>
      TIM_TI2_ConfigInputStage(htim->Instance,
 800e92e:	684d      	ldr	r5, [r1, #4]
 800e930:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800e932:	6a01      	ldr	r1, [r0, #32]
 800e934:	f021 0110 	bic.w	r1, r1, #16
 800e938:	6201      	str	r1, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 800e93a:	6982      	ldr	r2, [r0, #24]
  tmpccer = TIMx->CCER;
 800e93c:	6a03      	ldr	r3, [r0, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800e93e:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800e942:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800e946:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800e94a:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800e94e:	6182      	str	r2, [r0, #24]
  TIMx->CCER = tmpccer;
 800e950:	6203      	str	r3, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800e952:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800e954:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800e958:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  TIMx->SMCR = tmpsmcr;
 800e95c:	e7cb      	b.n	800e8f6 <HAL_TIM_ConfigClockSource+0x92>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800e95e:	684a      	ldr	r2, [r1, #4]
 800e960:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 800e962:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800e964:	6a05      	ldr	r5, [r0, #32]
 800e966:	f025 0501 	bic.w	r5, r5, #1
 800e96a:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 800e96c:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800e96e:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800e972:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800e976:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 800e97a:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 800e97c:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 800e97e:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800e980:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800e982:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800e986:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  TIMx->SMCR = tmpsmcr;
 800e98a:	e7b4      	b.n	800e8f6 <HAL_TIM_ConfigClockSource+0x92>

0800e98c <TIM_CCxChannelCmd>:
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 800e98c:	6a03      	ldr	r3, [r0, #32]
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800e98e:	f001 011f 	and.w	r1, r1, #31
{
 800e992:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800e994:	2401      	movs	r4, #1
 800e996:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 800e998:	ea23 0304 	bic.w	r3, r3, r4
 800e99c:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800e99e:	6a03      	ldr	r3, [r0, #32]
 800e9a0:	408a      	lsls	r2, r1
 800e9a2:	431a      	orrs	r2, r3
 800e9a4:	6202      	str	r2, [r0, #32]
}
 800e9a6:	bd10      	pop	{r4, pc}

0800e9a8 <HAL_TIM_OC_Start>:
{
 800e9a8:	b510      	push	{r4, lr}
 800e9aa:	4604      	mov	r4, r0
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 800e9ac:	2201      	movs	r2, #1
 800e9ae:	6800      	ldr	r0, [r0, #0]
 800e9b0:	f7ff ffec 	bl	800e98c <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 800e9b4:	6823      	ldr	r3, [r4, #0]
 800e9b6:	4a0b      	ldr	r2, [pc, #44]	; (800e9e4 <HAL_TIM_OC_Start+0x3c>)
 800e9b8:	4293      	cmp	r3, r2
 800e9ba:	d003      	beq.n	800e9c4 <HAL_TIM_OC_Start+0x1c>
 800e9bc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800e9c0:	4293      	cmp	r3, r2
 800e9c2:	d103      	bne.n	800e9cc <HAL_TIM_OC_Start+0x24>
    __HAL_TIM_MOE_ENABLE(htim);
 800e9c4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800e9c6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800e9ca:	645a      	str	r2, [r3, #68]	; 0x44
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800e9cc:	689a      	ldr	r2, [r3, #8]
 800e9ce:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800e9d2:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 800e9d4:	bf1e      	ittt	ne
 800e9d6:	681a      	ldrne	r2, [r3, #0]
 800e9d8:	f042 0201 	orrne.w	r2, r2, #1
 800e9dc:	601a      	strne	r2, [r3, #0]
}
 800e9de:	2000      	movs	r0, #0
 800e9e0:	bd10      	pop	{r4, pc}
 800e9e2:	bf00      	nop
 800e9e4:	40010000 	.word	0x40010000

0800e9e8 <HAL_TIM_PWM_Start>:
 800e9e8:	f7ff bfde 	b.w	800e9a8 <HAL_TIM_OC_Start>

0800e9ec <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 800e9ec:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800e9ee:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800e9f2:	2b01      	cmp	r3, #1
 800e9f4:	f04f 0302 	mov.w	r3, #2
 800e9f8:	d032      	beq.n	800ea60 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800e9fa:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800e9fe:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800ea00:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 800ea02:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 800ea04:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800ea06:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800ea0a:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800ea0c:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ea0e:	4c15      	ldr	r4, [pc, #84]	; (800ea64 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 800ea10:	42a3      	cmp	r3, r4
 800ea12:	d01a      	beq.n	800ea4a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ea14:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ea18:	d017      	beq.n	800ea4a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ea1a:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 800ea1e:	42a3      	cmp	r3, r4
 800ea20:	d013      	beq.n	800ea4a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ea22:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ea26:	42a3      	cmp	r3, r4
 800ea28:	d00f      	beq.n	800ea4a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ea2a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ea2e:	42a3      	cmp	r3, r4
 800ea30:	d00b      	beq.n	800ea4a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ea32:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 800ea36:	42a3      	cmp	r3, r4
 800ea38:	d007      	beq.n	800ea4a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ea3a:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 800ea3e:	42a3      	cmp	r3, r4
 800ea40:	d003      	beq.n	800ea4a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ea42:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800ea46:	42a3      	cmp	r3, r4
 800ea48:	d104      	bne.n	800ea54 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800ea4a:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800ea4c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800ea50:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800ea52:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800ea54:	2301      	movs	r3, #1
 800ea56:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800ea5a:	2300      	movs	r3, #0
 800ea5c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 800ea60:	4618      	mov	r0, r3

  return HAL_OK;
}
 800ea62:	bd30      	pop	{r4, r5, pc}
 800ea64:	40010000 	.word	0x40010000

0800ea68 <HAL_TIMEx_CommutCallback>:
 800ea68:	4770      	bx	lr

0800ea6a <HAL_TIMEx_BreakCallback>:
 800ea6a:	4770      	bx	lr

0800ea6c <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800ea6c:	6803      	ldr	r3, [r0, #0]
 800ea6e:	68da      	ldr	r2, [r3, #12]
 800ea70:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800ea74:	60da      	str	r2, [r3, #12]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800ea76:	695a      	ldr	r2, [r3, #20]
 800ea78:	f022 0201 	bic.w	r2, r2, #1
 800ea7c:	615a      	str	r2, [r3, #20]

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800ea7e:	2320      	movs	r3, #32
 800ea80:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
}
 800ea84:	4770      	bx	lr
	...

0800ea88 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800ea88:	b538      	push	{r3, r4, r5, lr}
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800ea8a:	6803      	ldr	r3, [r0, #0]
 800ea8c:	68c1      	ldr	r1, [r0, #12]
 800ea8e:	691a      	ldr	r2, [r3, #16]
{
 800ea90:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800ea92:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 800ea96:	430a      	orrs	r2, r1
 800ea98:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800ea9a:	6925      	ldr	r5, [r4, #16]
 800ea9c:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1,
 800ea9e:	68d9      	ldr	r1, [r3, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800eaa0:	69c0      	ldr	r0, [r0, #28]
 800eaa2:	432a      	orrs	r2, r5
 800eaa4:	6965      	ldr	r5, [r4, #20]
  MODIFY_REG(huart->Instance->CR1,
 800eaa6:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800eaaa:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1,
 800eaac:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800eab0:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1,
 800eab2:	430a      	orrs	r2, r1
 800eab4:	60da      	str	r2, [r3, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800eab6:	695a      	ldr	r2, [r3, #20]
 800eab8:	69a1      	ldr	r1, [r4, #24]
 800eaba:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800eabe:	430a      	orrs	r2, r1

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800eac0:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800eac4:	615a      	str	r2, [r3, #20]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800eac6:	4a25      	ldr	r2, [pc, #148]	; (800eb5c <UART_SetConfig+0xd4>)
 800eac8:	d128      	bne.n	800eb1c <UART_SetConfig+0x94>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800eaca:	4293      	cmp	r3, r2
 800eacc:	d003      	beq.n	800ead6 <UART_SetConfig+0x4e>
 800eace:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ead2:	4293      	cmp	r3, r2
 800ead4:	d11f      	bne.n	800eb16 <UART_SetConfig+0x8e>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 800ead6:	f7fe ff3f 	bl	800d958 <HAL_RCC_GetPCLK2Freq>
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800eada:	6862      	ldr	r2, [r4, #4]
 800eadc:	2119      	movs	r1, #25
 800eade:	1892      	adds	r2, r2, r2
 800eae0:	f04f 0300 	mov.w	r3, #0
 800eae4:	415b      	adcs	r3, r3
 800eae6:	fba0 0101 	umull	r0, r1, r0, r1
 800eaea:	f7f2 f93d 	bl	8000d68 <__aeabi_uldivmod>
 800eaee:	2164      	movs	r1, #100	; 0x64
 800eaf0:	fbb0 f5f1 	udiv	r5, r0, r1
 800eaf4:	fb01 0315 	mls	r3, r1, r5, r0
 800eaf8:	00db      	lsls	r3, r3, #3
 800eafa:	3332      	adds	r3, #50	; 0x32
 800eafc:	fbb3 f3f1 	udiv	r3, r3, r1
 800eb00:	f003 0207 	and.w	r2, r3, #7
 800eb04:	005b      	lsls	r3, r3, #1
 800eb06:	6821      	ldr	r1, [r4, #0]
 800eb08:	eb02 1205 	add.w	r2, r2, r5, lsl #4
 800eb0c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800eb10:	4413      	add	r3, r2
 800eb12:	608b      	str	r3, [r1, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 800eb14:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 800eb16:	f7fe ff0f 	bl	800d938 <HAL_RCC_GetPCLK1Freq>
 800eb1a:	e7de      	b.n	800eada <UART_SetConfig+0x52>
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800eb1c:	4293      	cmp	r3, r2
 800eb1e:	d002      	beq.n	800eb26 <UART_SetConfig+0x9e>
 800eb20:	4a0f      	ldr	r2, [pc, #60]	; (800eb60 <UART_SetConfig+0xd8>)
 800eb22:	4293      	cmp	r3, r2
 800eb24:	d117      	bne.n	800eb56 <UART_SetConfig+0xce>
      pclk = HAL_RCC_GetPCLK2Freq();
 800eb26:	f7fe ff17 	bl	800d958 <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800eb2a:	6863      	ldr	r3, [r4, #4]
 800eb2c:	2119      	movs	r1, #25
 800eb2e:	009a      	lsls	r2, r3, #2
 800eb30:	fba0 0101 	umull	r0, r1, r0, r1
 800eb34:	0f9b      	lsrs	r3, r3, #30
 800eb36:	f7f2 f917 	bl	8000d68 <__aeabi_uldivmod>
 800eb3a:	2264      	movs	r2, #100	; 0x64
 800eb3c:	fbb0 f1f2 	udiv	r1, r0, r2
 800eb40:	fb02 0311 	mls	r3, r2, r1, r0
 800eb44:	6824      	ldr	r4, [r4, #0]
 800eb46:	011b      	lsls	r3, r3, #4
 800eb48:	3332      	adds	r3, #50	; 0x32
 800eb4a:	fbb3 f3f2 	udiv	r3, r3, r2
 800eb4e:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 800eb52:	60a3      	str	r3, [r4, #8]
}
 800eb54:	e7de      	b.n	800eb14 <UART_SetConfig+0x8c>
      pclk = HAL_RCC_GetPCLK1Freq();
 800eb56:	f7fe feef 	bl	800d938 <HAL_RCC_GetPCLK1Freq>
 800eb5a:	e7e6      	b.n	800eb2a <UART_SetConfig+0xa2>
 800eb5c:	40011000 	.word	0x40011000
 800eb60:	40011400 	.word	0x40011400

0800eb64 <HAL_UART_Init>:
{
 800eb64:	b510      	push	{r4, lr}
  if (huart == NULL)
 800eb66:	4604      	mov	r4, r0
 800eb68:	b340      	cbz	r0, 800ebbc <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 800eb6a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800eb6e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800eb72:	b91b      	cbnz	r3, 800eb7c <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 800eb74:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_UART_MspInit(huart);
 800eb78:	f7f4 fbfe 	bl	8003378 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 800eb7c:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800eb7e:	2324      	movs	r3, #36	; 0x24
 800eb80:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UART_DISABLE(huart);
 800eb84:	68d3      	ldr	r3, [r2, #12]
 800eb86:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800eb8a:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 800eb8c:	4620      	mov	r0, r4
 800eb8e:	f7ff ff7b 	bl	800ea88 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800eb92:	6823      	ldr	r3, [r4, #0]
 800eb94:	691a      	ldr	r2, [r3, #16]
 800eb96:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800eb9a:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800eb9c:	695a      	ldr	r2, [r3, #20]
 800eb9e:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800eba2:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 800eba4:	68da      	ldr	r2, [r3, #12]
 800eba6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800ebaa:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ebac:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800ebae:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ebb0:	63e0      	str	r0, [r4, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 800ebb2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 800ebb6:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
}
 800ebba:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800ebbc:	2001      	movs	r0, #1
 800ebbe:	e7fc      	b.n	800ebba <HAL_UART_Init+0x56>

0800ebc0 <HAL_UART_Transmit_IT>:
  if (huart->gState == HAL_UART_STATE_READY)
 800ebc0:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800ebc4:	2b20      	cmp	r3, #32
 800ebc6:	d118      	bne.n	800ebfa <HAL_UART_Transmit_IT+0x3a>
    if ((pData == NULL) || (Size == 0U))
 800ebc8:	b1a9      	cbz	r1, 800ebf6 <HAL_UART_Transmit_IT+0x36>
 800ebca:	b1a2      	cbz	r2, 800ebf6 <HAL_UART_Transmit_IT+0x36>
    __HAL_LOCK(huart);
 800ebcc:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800ebd0:	2b01      	cmp	r3, #1
 800ebd2:	d012      	beq.n	800ebfa <HAL_UART_Transmit_IT+0x3a>
    huart->TxXferCount = Size;
 800ebd4:	84c2      	strh	r2, [r0, #38]	; 0x26
    huart->pTxBuffPtr = pData;
 800ebd6:	6201      	str	r1, [r0, #32]
    huart->TxXferSize = Size;
 800ebd8:	8482      	strh	r2, [r0, #36]	; 0x24
    __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 800ebda:	6801      	ldr	r1, [r0, #0]
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ebdc:	2300      	movs	r3, #0
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800ebde:	2221      	movs	r2, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ebe0:	63c3      	str	r3, [r0, #60]	; 0x3c
    __HAL_UNLOCK(huart);
 800ebe2:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800ebe6:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
    __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 800ebea:	68ca      	ldr	r2, [r1, #12]
 800ebec:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800ebf0:	60ca      	str	r2, [r1, #12]
    return HAL_OK;
 800ebf2:	4618      	mov	r0, r3
 800ebf4:	4770      	bx	lr
      return HAL_ERROR;
 800ebf6:	2001      	movs	r0, #1
 800ebf8:	4770      	bx	lr
    return HAL_BUSY;
 800ebfa:	2002      	movs	r0, #2
}
 800ebfc:	4770      	bx	lr

0800ebfe <HAL_UART_RxCpltCallback>:
 800ebfe:	4770      	bx	lr

0800ec00 <UART_Receive_IT.isra.0>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800ec00:	f890 303a 	ldrb.w	r3, [r0, #58]	; 0x3a
 800ec04:	2b22      	cmp	r3, #34	; 0x22
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
 800ec06:	b510      	push	{r4, lr}
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 800ec08:	d124      	bne.n	800ec54 <UART_Receive_IT.isra.0+0x54>
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800ec0a:	6881      	ldr	r1, [r0, #8]
      if (huart->Init.Parity == UART_PARITY_NONE)
 800ec0c:	6904      	ldr	r4, [r0, #16]
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 800ec0e:	6802      	ldr	r2, [r0, #0]
      tmp = (uint16_t *) huart->pRxBuffPtr;
 800ec10:	6a83      	ldr	r3, [r0, #40]	; 0x28
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800ec12:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 800ec16:	d122      	bne.n	800ec5e <UART_Receive_IT.isra.0+0x5e>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 800ec18:	6852      	ldr	r2, [r2, #4]
      if (huart->Init.Parity == UART_PARITY_NONE)
 800ec1a:	b9e4      	cbnz	r4, 800ec56 <UART_Receive_IT.isra.0+0x56>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 800ec1c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800ec20:	f823 2b02 	strh.w	r2, [r3], #2
        huart->pRxBuffPtr += 1U;
 800ec24:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 800ec26:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ec28:	3b01      	subs	r3, #1
 800ec2a:	b29b      	uxth	r3, r3
 800ec2c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800ec2e:	b98b      	cbnz	r3, 800ec54 <UART_Receive_IT.isra.0+0x54>
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 800ec30:	6803      	ldr	r3, [r0, #0]
 800ec32:	68da      	ldr	r2, [r3, #12]
 800ec34:	f022 0220 	bic.w	r2, r2, #32
 800ec38:	60da      	str	r2, [r3, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 800ec3a:	68da      	ldr	r2, [r3, #12]
 800ec3c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800ec40:	60da      	str	r2, [r3, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 800ec42:	695a      	ldr	r2, [r3, #20]
 800ec44:	f022 0201 	bic.w	r2, r2, #1
 800ec48:	615a      	str	r2, [r3, #20]
      huart->RxState = HAL_UART_STATE_READY;
 800ec4a:	2320      	movs	r3, #32
 800ec4c:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
      HAL_UART_RxCpltCallback(huart);
 800ec50:	f7ff ffd5 	bl	800ebfe <HAL_UART_RxCpltCallback>
}
 800ec54:	bd10      	pop	{r4, pc}
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 800ec56:	b2d2      	uxtb	r2, r2
 800ec58:	f823 2b01 	strh.w	r2, [r3], #1
 800ec5c:	e7e2      	b.n	800ec24 <UART_Receive_IT.isra.0+0x24>
        huart->pRxBuffPtr += 1U;
 800ec5e:	1c59      	adds	r1, r3, #1
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 800ec60:	6852      	ldr	r2, [r2, #4]
 800ec62:	6281      	str	r1, [r0, #40]	; 0x28
      if (huart->Init.Parity == UART_PARITY_NONE)
 800ec64:	b90c      	cbnz	r4, 800ec6a <UART_Receive_IT.isra.0+0x6a>
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 800ec66:	701a      	strb	r2, [r3, #0]
 800ec68:	e7dd      	b.n	800ec26 <UART_Receive_IT.isra.0+0x26>
 800ec6a:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800ec6e:	e7fa      	b.n	800ec66 <UART_Receive_IT.isra.0+0x66>

0800ec70 <HAL_UART_ErrorCallback>:
 800ec70:	4770      	bx	lr
	...

0800ec74 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 800ec74:	6803      	ldr	r3, [r0, #0]
 800ec76:	681a      	ldr	r2, [r3, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 800ec78:	68d9      	ldr	r1, [r3, #12]
{
 800ec7a:	b570      	push	{r4, r5, r6, lr}
  if (errorflags == RESET)
 800ec7c:	0716      	lsls	r6, r2, #28
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 800ec7e:	695d      	ldr	r5, [r3, #20]
{
 800ec80:	4604      	mov	r4, r0
  if (errorflags == RESET)
 800ec82:	d107      	bne.n	800ec94 <HAL_UART_IRQHandler+0x20>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 800ec84:	0696      	lsls	r6, r2, #26
 800ec86:	d55c      	bpl.n	800ed42 <HAL_UART_IRQHandler+0xce>
 800ec88:	068d      	lsls	r5, r1, #26
 800ec8a:	d55a      	bpl.n	800ed42 <HAL_UART_IRQHandler+0xce>
}
 800ec8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      UART_Receive_IT(huart);
 800ec90:	f7ff bfb6 	b.w	800ec00 <UART_Receive_IT.isra.0>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 800ec94:	f005 0001 	and.w	r0, r5, #1
 800ec98:	f401 7590 	and.w	r5, r1, #288	; 0x120
 800ec9c:	4305      	orrs	r5, r0
 800ec9e:	d050      	beq.n	800ed42 <HAL_UART_IRQHandler+0xce>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 800eca0:	07d6      	lsls	r6, r2, #31
 800eca2:	d505      	bpl.n	800ecb0 <HAL_UART_IRQHandler+0x3c>
 800eca4:	05cd      	lsls	r5, r1, #23
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 800eca6:	bf42      	ittt	mi
 800eca8:	6be3      	ldrmi	r3, [r4, #60]	; 0x3c
 800ecaa:	f043 0301 	orrmi.w	r3, r3, #1
 800ecae:	63e3      	strmi	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 800ecb0:	0753      	lsls	r3, r2, #29
 800ecb2:	d504      	bpl.n	800ecbe <HAL_UART_IRQHandler+0x4a>
 800ecb4:	b118      	cbz	r0, 800ecbe <HAL_UART_IRQHandler+0x4a>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 800ecb6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ecb8:	f043 0302 	orr.w	r3, r3, #2
 800ecbc:	63e3      	str	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 800ecbe:	0796      	lsls	r6, r2, #30
 800ecc0:	d504      	bpl.n	800eccc <HAL_UART_IRQHandler+0x58>
 800ecc2:	b118      	cbz	r0, 800eccc <HAL_UART_IRQHandler+0x58>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 800ecc4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ecc6:	f043 0304 	orr.w	r3, r3, #4
 800ecca:	63e3      	str	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 800eccc:	0715      	lsls	r5, r2, #28
 800ecce:	d507      	bpl.n	800ece0 <HAL_UART_IRQHandler+0x6c>
 800ecd0:	f001 0320 	and.w	r3, r1, #32
 800ecd4:	4303      	orrs	r3, r0
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 800ecd6:	bf1e      	ittt	ne
 800ecd8:	6be3      	ldrne	r3, [r4, #60]	; 0x3c
 800ecda:	f043 0308 	orrne.w	r3, r3, #8
 800ecde:	63e3      	strne	r3, [r4, #60]	; 0x3c
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 800ece0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ece2:	b34b      	cbz	r3, 800ed38 <HAL_UART_IRQHandler+0xc4>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 800ece4:	0690      	lsls	r0, r2, #26
 800ece6:	d504      	bpl.n	800ecf2 <HAL_UART_IRQHandler+0x7e>
 800ece8:	0689      	lsls	r1, r1, #26
 800ecea:	d502      	bpl.n	800ecf2 <HAL_UART_IRQHandler+0x7e>
        UART_Receive_IT(huart);
 800ecec:	4620      	mov	r0, r4
 800ecee:	f7ff ff87 	bl	800ec00 <UART_Receive_IT.isra.0>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 800ecf2:	6823      	ldr	r3, [r4, #0]
 800ecf4:	695b      	ldr	r3, [r3, #20]
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 800ecf6:	6be5      	ldr	r5, [r4, #60]	; 0x3c
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 800ecf8:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 800ecfc:	f005 0508 	and.w	r5, r5, #8
 800ed00:	431d      	orrs	r5, r3
        UART_EndRxTransfer(huart);
 800ed02:	4620      	mov	r0, r4
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 800ed04:	d019      	beq.n	800ed3a <HAL_UART_IRQHandler+0xc6>
        UART_EndRxTransfer(huart);
 800ed06:	f7ff feb1 	bl	800ea6c <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800ed0a:	6823      	ldr	r3, [r4, #0]
 800ed0c:	695a      	ldr	r2, [r3, #20]
 800ed0e:	0652      	lsls	r2, r2, #25
 800ed10:	d50f      	bpl.n	800ed32 <HAL_UART_IRQHandler+0xbe>
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800ed12:	695a      	ldr	r2, [r3, #20]
          if (huart->hdmarx != NULL)
 800ed14:	6b60      	ldr	r0, [r4, #52]	; 0x34
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800ed16:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ed1a:	615a      	str	r2, [r3, #20]
          if (huart->hdmarx != NULL)
 800ed1c:	b148      	cbz	r0, 800ed32 <HAL_UART_IRQHandler+0xbe>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 800ed1e:	4b26      	ldr	r3, [pc, #152]	; (800edb8 <HAL_UART_IRQHandler+0x144>)
 800ed20:	6503      	str	r3, [r0, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 800ed22:	f7fd fadf 	bl	800c2e4 <HAL_DMA_Abort_IT>
 800ed26:	b138      	cbz	r0, 800ed38 <HAL_UART_IRQHandler+0xc4>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 800ed28:	6b60      	ldr	r0, [r4, #52]	; 0x34
}
 800ed2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 800ed2e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ed30:	4718      	bx	r3
            HAL_UART_ErrorCallback(huart);
 800ed32:	4620      	mov	r0, r4
 800ed34:	f7ff ff9c 	bl	800ec70 <HAL_UART_ErrorCallback>
}
 800ed38:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 800ed3a:	f7ff ff99 	bl	800ec70 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ed3e:	63e5      	str	r5, [r4, #60]	; 0x3c
 800ed40:	e7fa      	b.n	800ed38 <HAL_UART_IRQHandler+0xc4>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 800ed42:	0616      	lsls	r6, r2, #24
 800ed44:	d528      	bpl.n	800ed98 <HAL_UART_IRQHandler+0x124>
 800ed46:	060d      	lsls	r5, r1, #24
 800ed48:	d526      	bpl.n	800ed98 <HAL_UART_IRQHandler+0x124>
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 800ed4a:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800ed4e:	2a21      	cmp	r2, #33	; 0x21
 800ed50:	d1f2      	bne.n	800ed38 <HAL_UART_IRQHandler+0xc4>
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800ed52:	68a1      	ldr	r1, [r4, #8]
      tmp = (uint16_t *) huart->pTxBuffPtr;
 800ed54:	6a22      	ldr	r2, [r4, #32]
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800ed56:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 800ed5a:	d118      	bne.n	800ed8e <HAL_UART_IRQHandler+0x11a>
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 800ed5c:	8811      	ldrh	r1, [r2, #0]
 800ed5e:	f3c1 0108 	ubfx	r1, r1, #0, #9
 800ed62:	6059      	str	r1, [r3, #4]
      if (huart->Init.Parity == UART_PARITY_NONE)
 800ed64:	6921      	ldr	r1, [r4, #16]
 800ed66:	b981      	cbnz	r1, 800ed8a <HAL_UART_IRQHandler+0x116>
        huart->pTxBuffPtr += 2U;
 800ed68:	3202      	adds	r2, #2
        huart->pTxBuffPtr += 1U;
 800ed6a:	6222      	str	r2, [r4, #32]
    if (--huart->TxXferCount == 0U)
 800ed6c:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 800ed6e:	3a01      	subs	r2, #1
 800ed70:	b292      	uxth	r2, r2
 800ed72:	84e2      	strh	r2, [r4, #38]	; 0x26
 800ed74:	2a00      	cmp	r2, #0
 800ed76:	d1df      	bne.n	800ed38 <HAL_UART_IRQHandler+0xc4>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 800ed78:	68da      	ldr	r2, [r3, #12]
 800ed7a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800ed7e:	60da      	str	r2, [r3, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 800ed80:	68da      	ldr	r2, [r3, #12]
 800ed82:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800ed86:	60da      	str	r2, [r3, #12]
 800ed88:	e7d6      	b.n	800ed38 <HAL_UART_IRQHandler+0xc4>
        huart->pTxBuffPtr += 1U;
 800ed8a:	3201      	adds	r2, #1
 800ed8c:	e7ed      	b.n	800ed6a <HAL_UART_IRQHandler+0xf6>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 800ed8e:	1c51      	adds	r1, r2, #1
 800ed90:	6221      	str	r1, [r4, #32]
 800ed92:	7812      	ldrb	r2, [r2, #0]
 800ed94:	605a      	str	r2, [r3, #4]
 800ed96:	e7e9      	b.n	800ed6c <HAL_UART_IRQHandler+0xf8>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 800ed98:	0650      	lsls	r0, r2, #25
 800ed9a:	d5cd      	bpl.n	800ed38 <HAL_UART_IRQHandler+0xc4>
 800ed9c:	064a      	lsls	r2, r1, #25
 800ed9e:	d5cb      	bpl.n	800ed38 <HAL_UART_IRQHandler+0xc4>
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 800eda0:	68da      	ldr	r2, [r3, #12]
 800eda2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800eda6:	60da      	str	r2, [r3, #12]
  huart->gState = HAL_UART_STATE_READY;
 800eda8:	2320      	movs	r3, #32
 800edaa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  HAL_UART_TxCpltCallback(huart);
 800edae:	4620      	mov	r0, r4
 800edb0:	f7f3 fcc4 	bl	800273c <HAL_UART_TxCpltCallback>
  return HAL_OK;
 800edb4:	e7c0      	b.n	800ed38 <HAL_UART_IRQHandler+0xc4>
 800edb6:	bf00      	nop
 800edb8:	0800edbd 	.word	0x0800edbd

0800edbc <UART_DMAAbortOnError>:
{
 800edbc:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800edbe:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 800edc0:	2300      	movs	r3, #0
 800edc2:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 800edc4:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 800edc6:	f7ff ff53 	bl	800ec70 <HAL_UART_ErrorCallback>
}
 800edca:	bd08      	pop	{r3, pc}

0800edcc <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800edcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 800edd0:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 800edd2:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 800edd6:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 800edda:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 800edde:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800ede2:	6809      	ldr	r1, [r1, #0]
 800ede4:	2901      	cmp	r1, #1
 800ede6:	ea43 0304 	orr.w	r3, r3, r4
 800edea:	4912      	ldr	r1, [pc, #72]	; (800ee34 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800edec:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800edee:	d00f      	beq.n	800ee10 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800edf0:	431a      	orrs	r2, r3
 800edf2:	432a      	orrs	r2, r5
 800edf4:	ea42 0308 	orr.w	r3, r2, r8
 800edf8:	ea43 030e 	orr.w	r3, r3, lr
 800edfc:	ea43 030c 	orr.w	r3, r3, ip
 800ee00:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800ee02:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ee04:	4333      	orrs	r3, r6
 800ee06:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800ee08:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800ee0a:	2000      	movs	r0, #0
 800ee0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800ee10:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800ee12:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800ee14:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ee16:	ea45 0208 	orr.w	r2, r5, r8
 800ee1a:	ea42 020e 	orr.w	r2, r2, lr
 800ee1e:	ea42 020c 	orr.w	r2, r2, ip
 800ee22:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800ee24:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ee28:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800ee2a:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ee2c:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800ee2e:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 800ee30:	6042      	str	r2, [r0, #4]
 800ee32:	e7ea      	b.n	800ee0a <FMC_SDRAM_Init+0x3e>
 800ee34:	ffff8000 	.word	0xffff8000

0800ee38 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 800ee38:	68cb      	ldr	r3, [r1, #12]
{
 800ee3a:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ee3c:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800ee3e:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800ee40:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 800ee42:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 800ee44:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ee46:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 800ee4a:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 800ee4c:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 800ee4e:	3b01      	subs	r3, #1
 800ee50:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 800ee52:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800ee54:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800ee56:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 800ee58:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 800ee5a:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 800ee5c:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800ee60:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800ee64:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 800ee68:	ea4f 6101 	mov.w	r1, r1, lsl #24
 800ee6c:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 800ee70:	d00c      	beq.n	800ee8c <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ee72:	ea43 030c 	orr.w	r3, r3, ip
 800ee76:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800ee78:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ee7a:	4333      	orrs	r3, r6
 800ee7c:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800ee7e:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800ee82:	430b      	orrs	r3, r1
 800ee84:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800ee86:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 800ee88:	2000      	movs	r0, #0
 800ee8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800ee8c:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 800ee8e:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800ee92:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800ee96:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800ee98:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800ee9a:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 800ee9e:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800eea0:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800eea2:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800eea4:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800eea8:	430a      	orrs	r2, r1
 800eeaa:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 800eeac:	60c2      	str	r2, [r0, #12]
 800eeae:	e7eb      	b.n	800ee88 <FMC_SDRAM_Timing_Init+0x50>

0800eeb0 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800eeb0:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800eeb2:	2300      	movs	r3, #0
 800eeb4:	9301      	str	r3, [sp, #4]
{
 800eeb6:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800eeb8:	e9d1 3200 	ldrd	r3, r2, [r1]
 800eebc:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 800eebe:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800eec0:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800eec4:	688a      	ldr	r2, [r1, #8]
 800eec6:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800eec8:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800eecc:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 800eece:	9b01      	ldr	r3, [sp, #4]
 800eed0:	6103      	str	r3, [r0, #16]
{
 800eed2:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800eed4:	f7fc fdd8 	bl	800ba88 <HAL_GetTick>
 800eed8:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800eeda:	69a3      	ldr	r3, [r4, #24]
 800eedc:	f013 0320 	ands.w	r3, r3, #32
 800eee0:	d101      	bne.n	800eee6 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800eee2:	4618      	mov	r0, r3
 800eee4:	e003      	b.n	800eeee <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800eee6:	1c6b      	adds	r3, r5, #1
 800eee8:	d0f7      	beq.n	800eeda <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800eeea:	b915      	cbnz	r5, 800eef2 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 800eeec:	2003      	movs	r0, #3
}
 800eeee:	b002      	add	sp, #8
 800eef0:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800eef2:	f7fc fdc9 	bl	800ba88 <HAL_GetTick>
 800eef6:	1b80      	subs	r0, r0, r6
 800eef8:	42a8      	cmp	r0, r5
 800eefa:	d9ee      	bls.n	800eeda <FMC_SDRAM_SendCommand+0x2a>
 800eefc:	e7f6      	b.n	800eeec <FMC_SDRAM_SendCommand+0x3c>

0800eefe <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800eefe:	6943      	ldr	r3, [r0, #20]
 800ef00:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800ef04:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800ef06:	2000      	movs	r0, #0
 800ef08:	4770      	bx	lr
	...

0800ef0c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800ef0c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800ef10:	b113      	cbz	r3, 800ef18 <osKernelInitialize+0xc>
    stat = osErrorISR;
 800ef12:	f06f 0005 	mvn.w	r0, #5
 800ef16:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800ef18:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 800ef1c:	4b07      	ldr	r3, [pc, #28]	; (800ef3c <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 800ef1e:	b912      	cbnz	r2, 800ef26 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800ef20:	f3ef 8211 	mrs	r2, BASEPRI
 800ef24:	b112      	cbz	r2, 800ef2c <osKernelInitialize+0x20>
 800ef26:	681a      	ldr	r2, [r3, #0]
 800ef28:	2a02      	cmp	r2, #2
 800ef2a:	d0f2      	beq.n	800ef12 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 800ef2c:	6818      	ldr	r0, [r3, #0]
 800ef2e:	b910      	cbnz	r0, 800ef36 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800ef30:	2201      	movs	r2, #1
 800ef32:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800ef34:	4770      	bx	lr
    } else {
      stat = osError;
 800ef36:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800ef3a:	4770      	bx	lr
 800ef3c:	2000d668 	.word	0x2000d668

0800ef40 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800ef40:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800ef42:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800ef46:	b113      	cbz	r3, 800ef4e <osKernelStart+0xe>
    stat = osErrorISR;
 800ef48:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 800ef4c:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800ef4e:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 800ef52:	4b0a      	ldr	r3, [pc, #40]	; (800ef7c <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 800ef54:	b912      	cbnz	r2, 800ef5c <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800ef56:	f3ef 8211 	mrs	r2, BASEPRI
 800ef5a:	b112      	cbz	r2, 800ef62 <osKernelStart+0x22>
 800ef5c:	681a      	ldr	r2, [r3, #0]
 800ef5e:	2a02      	cmp	r2, #2
 800ef60:	d0f2      	beq.n	800ef48 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 800ef62:	681a      	ldr	r2, [r3, #0]
 800ef64:	2a01      	cmp	r2, #1
 800ef66:	d105      	bne.n	800ef74 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 800ef68:	2202      	movs	r2, #2
 800ef6a:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 800ef6c:	f001 fc72 	bl	8010854 <vTaskStartScheduler>
      stat = osOK;
 800ef70:	2000      	movs	r0, #0
 800ef72:	e7eb      	b.n	800ef4c <osKernelStart+0xc>
      stat = osError;
 800ef74:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800ef78:	e7e8      	b.n	800ef4c <osKernelStart+0xc>
 800ef7a:	bf00      	nop
 800ef7c:	2000d668 	.word	0x2000d668

0800ef80 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ef80:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef82:	b087      	sub	sp, #28
 800ef84:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800ef86:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ef88:	460b      	mov	r3, r1
  hTask = NULL;
 800ef8a:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800ef8c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800ef90:	bb22      	cbnz	r2, 800efdc <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800ef92:	f3ef 8210 	mrs	r2, PRIMASK
 800ef96:	b912      	cbnz	r2, 800ef9e <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800ef98:	f3ef 8211 	mrs	r2, BASEPRI
 800ef9c:	b11a      	cbz	r2, 800efa6 <osThreadNew+0x26>
 800ef9e:	4a22      	ldr	r2, [pc, #136]	; (800f028 <osThreadNew+0xa8>)
 800efa0:	6812      	ldr	r2, [r2, #0]
 800efa2:	2a02      	cmp	r2, #2
 800efa4:	d01a      	beq.n	800efdc <osThreadNew+0x5c>
 800efa6:	b1c8      	cbz	r0, 800efdc <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800efa8:	2c00      	cmp	r4, #0
 800efaa:	d02f      	beq.n	800f00c <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800efac:	69a5      	ldr	r5, [r4, #24]
 800efae:	2d00      	cmp	r5, #0
 800efb0:	bf08      	it	eq
 800efb2:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800efb4:	1e6a      	subs	r2, r5, #1
 800efb6:	2a37      	cmp	r2, #55	; 0x37
 800efb8:	46ac      	mov	ip, r5
 800efba:	d82b      	bhi.n	800f014 <osThreadNew+0x94>
 800efbc:	6862      	ldr	r2, [r4, #4]
 800efbe:	07d2      	lsls	r2, r2, #31
 800efc0:	d428      	bmi.n	800f014 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800efc2:	6966      	ldr	r6, [r4, #20]
 800efc4:	b16e      	cbz	r6, 800efe2 <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800efc6:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800efc8:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800efcc:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800efce:	b157      	cbz	r7, 800efe6 <osThreadNew+0x66>
 800efd0:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 800efd4:	d902      	bls.n	800efdc <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800efd6:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800efd8:	b104      	cbz	r4, 800efdc <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800efda:	b9ee      	cbnz	r6, 800f018 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 800efdc:	9805      	ldr	r0, [sp, #20]
}
 800efde:	b007      	add	sp, #28
 800efe0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800efe2:	2280      	movs	r2, #128	; 0x80
 800efe4:	e7f0      	b.n	800efc8 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800efe6:	f1be 0f00 	cmp.w	lr, #0
 800efea:	d1f7      	bne.n	800efdc <osThreadNew+0x5c>
      if (mem == 0) {
 800efec:	6924      	ldr	r4, [r4, #16]
 800efee:	2c00      	cmp	r4, #0
 800eff0:	d1f4      	bne.n	800efdc <osThreadNew+0x5c>
 800eff2:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800eff4:	a905      	add	r1, sp, #20
 800eff6:	e9cd c100 	strd	ip, r1, [sp]
 800effa:	b292      	uxth	r2, r2
 800effc:	4621      	mov	r1, r4
 800effe:	f001 fbb7 	bl	8010770 <xTaskCreate>
 800f002:	2801      	cmp	r0, #1
          hTask = NULL;
 800f004:	bf1c      	itt	ne
 800f006:	2300      	movne	r3, #0
 800f008:	9305      	strne	r3, [sp, #20]
 800f00a:	e7e7      	b.n	800efdc <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 800f00c:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800f010:	2280      	movs	r2, #128	; 0x80
 800f012:	e7ef      	b.n	800eff4 <osThreadNew+0x74>
        return (NULL);
 800f014:	2000      	movs	r0, #0
 800f016:	e7e2      	b.n	800efde <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800f018:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800f01c:	9500      	str	r5, [sp, #0]
 800f01e:	f001 fb6f 	bl	8010700 <xTaskCreateStatic>
 800f022:	9005      	str	r0, [sp, #20]
 800f024:	e7da      	b.n	800efdc <osThreadNew+0x5c>
 800f026:	bf00      	nop
 800f028:	2000d668 	.word	0x2000d668

0800f02c <osThreadSuspend>:
  }

  return (stat);
}

osStatus_t osThreadSuspend (osThreadId_t thread_id) {
 800f02c:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f02e:	f3ef 8305 	mrs	r3, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
 800f032:	b113      	cbz	r3, 800f03a <osThreadSuspend+0xe>
    stat = osErrorISR;
 800f034:	f06f 0005 	mvn.w	r0, #5
    stat = osOK;
    vTaskSuspend (hTask);
  }

  return (stat);
}
 800f038:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f03a:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800f03e:	b913      	cbnz	r3, 800f046 <osThreadSuspend+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f040:	f3ef 8311 	mrs	r3, BASEPRI
 800f044:	b11b      	cbz	r3, 800f04e <osThreadSuspend+0x22>
 800f046:	4b06      	ldr	r3, [pc, #24]	; (800f060 <osThreadSuspend+0x34>)
 800f048:	681b      	ldr	r3, [r3, #0]
 800f04a:	2b02      	cmp	r3, #2
 800f04c:	d0f2      	beq.n	800f034 <osThreadSuspend+0x8>
  else if (hTask == NULL) {
 800f04e:	b118      	cbz	r0, 800f058 <osThreadSuspend+0x2c>
    vTaskSuspend (hTask);
 800f050:	f001 fdcc 	bl	8010bec <vTaskSuspend>
    stat = osOK;
 800f054:	2000      	movs	r0, #0
 800f056:	e7ef      	b.n	800f038 <osThreadSuspend+0xc>
    stat = osErrorParameter;
 800f058:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800f05c:	e7ec      	b.n	800f038 <osThreadSuspend+0xc>
 800f05e:	bf00      	nop
 800f060:	2000d668 	.word	0x2000d668

0800f064 <osThreadResume>:

osStatus_t osThreadResume (osThreadId_t thread_id) {
 800f064:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f066:	f3ef 8305 	mrs	r3, IPSR
  TaskHandle_t hTask = (TaskHandle_t)thread_id;
  osStatus_t stat;

  if (IS_IRQ()) {
 800f06a:	b113      	cbz	r3, 800f072 <osThreadResume+0xe>
    stat = osErrorISR;
 800f06c:	f06f 0005 	mvn.w	r0, #5
    stat = osOK;
    vTaskResume (hTask);
  }

  return (stat);
}
 800f070:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f072:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800f076:	b913      	cbnz	r3, 800f07e <osThreadResume+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f078:	f3ef 8311 	mrs	r3, BASEPRI
 800f07c:	b11b      	cbz	r3, 800f086 <osThreadResume+0x22>
 800f07e:	4b06      	ldr	r3, [pc, #24]	; (800f098 <osThreadResume+0x34>)
 800f080:	681b      	ldr	r3, [r3, #0]
 800f082:	2b02      	cmp	r3, #2
 800f084:	d0f2      	beq.n	800f06c <osThreadResume+0x8>
  else if (hTask == NULL) {
 800f086:	b118      	cbz	r0, 800f090 <osThreadResume+0x2c>
    vTaskResume (hTask);
 800f088:	f001 fba0 	bl	80107cc <vTaskResume>
    stat = osOK;
 800f08c:	2000      	movs	r0, #0
 800f08e:	e7ef      	b.n	800f070 <osThreadResume+0xc>
    stat = osErrorParameter;
 800f090:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800f094:	e7ec      	b.n	800f070 <osThreadResume+0xc>
 800f096:	bf00      	nop
 800f098:	2000d668 	.word	0x2000d668

0800f09c <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 800f09c:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f09e:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f0a2:	b113      	cbz	r3, 800f0aa <osDelay+0xe>
    stat = osErrorISR;
 800f0a4:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800f0a8:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f0aa:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800f0ae:	b913      	cbnz	r3, 800f0b6 <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f0b0:	f3ef 8311 	mrs	r3, BASEPRI
 800f0b4:	b11b      	cbz	r3, 800f0be <osDelay+0x22>
 800f0b6:	4b05      	ldr	r3, [pc, #20]	; (800f0cc <osDelay+0x30>)
 800f0b8:	681b      	ldr	r3, [r3, #0]
 800f0ba:	2b02      	cmp	r3, #2
 800f0bc:	d0f2      	beq.n	800f0a4 <osDelay+0x8>
    if (ticks != 0U) {
 800f0be:	2800      	cmp	r0, #0
 800f0c0:	d0f2      	beq.n	800f0a8 <osDelay+0xc>
      vTaskDelay(ticks);
 800f0c2:	f001 fd2f 	bl	8010b24 <vTaskDelay>
    stat = osOK;
 800f0c6:	2000      	movs	r0, #0
 800f0c8:	e7ee      	b.n	800f0a8 <osDelay+0xc>
 800f0ca:	bf00      	nop
 800f0cc:	2000d668 	.word	0x2000d668

0800f0d0 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800f0d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f0d2:	460e      	mov	r6, r1
 800f0d4:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f0d6:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800f0da:	b11b      	cbz	r3, 800f0e4 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800f0dc:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800f0de:	4620      	mov	r0, r4
 800f0e0:	b002      	add	sp, #8
 800f0e2:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f0e4:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800f0e8:	b913      	cbnz	r3, 800f0f0 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f0ea:	f3ef 8311 	mrs	r3, BASEPRI
 800f0ee:	b11b      	cbz	r3, 800f0f8 <osSemaphoreNew+0x28>
 800f0f0:	4b21      	ldr	r3, [pc, #132]	; (800f178 <osSemaphoreNew+0xa8>)
 800f0f2:	681b      	ldr	r3, [r3, #0]
 800f0f4:	2b02      	cmp	r3, #2
 800f0f6:	d0f1      	beq.n	800f0dc <osSemaphoreNew+0xc>
 800f0f8:	2800      	cmp	r0, #0
 800f0fa:	d0ef      	beq.n	800f0dc <osSemaphoreNew+0xc>
 800f0fc:	42b0      	cmp	r0, r6
 800f0fe:	d3ed      	bcc.n	800f0dc <osSemaphoreNew+0xc>
    if (attr != NULL) {
 800f100:	b1ed      	cbz	r5, 800f13e <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800f102:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 800f106:	b1c3      	cbz	r3, 800f13a <osSemaphoreNew+0x6a>
 800f108:	2a4f      	cmp	r2, #79	; 0x4f
 800f10a:	d9e7      	bls.n	800f0dc <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800f10c:	2801      	cmp	r0, #1
 800f10e:	d129      	bne.n	800f164 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800f110:	2203      	movs	r2, #3
 800f112:	9200      	str	r2, [sp, #0]
 800f114:	2200      	movs	r2, #0
 800f116:	4611      	mov	r1, r2
 800f118:	f000 fd2d 	bl	800fb76 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 800f11c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800f11e:	2800      	cmp	r0, #0
 800f120:	d0dc      	beq.n	800f0dc <osSemaphoreNew+0xc>
 800f122:	b1ce      	cbz	r6, 800f158 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800f124:	2300      	movs	r3, #0
 800f126:	461a      	mov	r2, r3
 800f128:	4619      	mov	r1, r3
 800f12a:	f000 fdd9 	bl	800fce0 <xQueueGenericSend>
 800f12e:	2801      	cmp	r0, #1
 800f130:	d012      	beq.n	800f158 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 800f132:	4620      	mov	r0, r4
 800f134:	f001 f914 	bl	8010360 <vQueueDelete>
 800f138:	e7d0      	b.n	800f0dc <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800f13a:	2a00      	cmp	r2, #0
 800f13c:	d1ce      	bne.n	800f0dc <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800f13e:	2801      	cmp	r0, #1
 800f140:	d104      	bne.n	800f14c <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 800f142:	2203      	movs	r2, #3
 800f144:	2100      	movs	r1, #0
 800f146:	f000 fd64 	bl	800fc12 <xQueueGenericCreate>
 800f14a:	e7e7      	b.n	800f11c <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800f14c:	4631      	mov	r1, r6
 800f14e:	f000 fda9 	bl	800fca4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800f152:	4604      	mov	r4, r0
 800f154:	2800      	cmp	r0, #0
 800f156:	d0c1      	beq.n	800f0dc <osSemaphoreNew+0xc>
        if (attr != NULL) {
 800f158:	b95d      	cbnz	r5, 800f172 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 800f15a:	4629      	mov	r1, r5
 800f15c:	4620      	mov	r0, r4
 800f15e:	f001 f8d9 	bl	8010314 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800f162:	e7bc      	b.n	800f0de <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800f164:	461a      	mov	r2, r3
 800f166:	4631      	mov	r1, r6
 800f168:	f000 fd7a 	bl	800fc60 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800f16c:	4604      	mov	r4, r0
 800f16e:	2800      	cmp	r0, #0
 800f170:	d0b4      	beq.n	800f0dc <osSemaphoreNew+0xc>
          name = attr->name;
 800f172:	682d      	ldr	r5, [r5, #0]
 800f174:	e7f1      	b.n	800f15a <osSemaphoreNew+0x8a>
 800f176:	bf00      	nop
 800f178:	2000d668 	.word	0x2000d668

0800f17c <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800f17c:	b513      	push	{r0, r1, r4, lr}
 800f17e:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800f180:	b918      	cbnz	r0, 800f18a <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 800f182:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800f186:	b002      	add	sp, #8
 800f188:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f18a:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 800f18e:	b163      	cbz	r3, 800f1aa <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 800f190:	2c00      	cmp	r4, #0
 800f192:	d1f6      	bne.n	800f182 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800f194:	aa01      	add	r2, sp, #4
 800f196:	4621      	mov	r1, r4
      yield = pdFALSE;
 800f198:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800f19a:	f001 f86b 	bl	8010274 <xQueueReceiveFromISR>
 800f19e:	2801      	cmp	r0, #1
 800f1a0:	d113      	bne.n	800f1ca <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 800f1a2:	9b01      	ldr	r3, [sp, #4]
 800f1a4:	b9a3      	cbnz	r3, 800f1d0 <osSemaphoreAcquire+0x54>
  stat = osOK;
 800f1a6:	2000      	movs	r0, #0
 800f1a8:	e7ed      	b.n	800f186 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f1aa:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800f1ae:	b913      	cbnz	r3, 800f1b6 <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f1b0:	f3ef 8311 	mrs	r3, BASEPRI
 800f1b4:	b11b      	cbz	r3, 800f1be <osSemaphoreAcquire+0x42>
 800f1b6:	4b0d      	ldr	r3, [pc, #52]	; (800f1ec <osSemaphoreAcquire+0x70>)
 800f1b8:	681b      	ldr	r3, [r3, #0]
 800f1ba:	2b02      	cmp	r3, #2
 800f1bc:	d0e8      	beq.n	800f190 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800f1be:	4621      	mov	r1, r4
 800f1c0:	f000 ff95 	bl	80100ee <xQueueSemaphoreTake>
 800f1c4:	2801      	cmp	r0, #1
 800f1c6:	d0ee      	beq.n	800f1a6 <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 800f1c8:	b96c      	cbnz	r4, 800f1e6 <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 800f1ca:	f06f 0002 	mvn.w	r0, #2
 800f1ce:	e7da      	b.n	800f186 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 800f1d0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f1d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f1d8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f1dc:	f3bf 8f4f 	dsb	sy
 800f1e0:	f3bf 8f6f 	isb	sy
 800f1e4:	e7df      	b.n	800f1a6 <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 800f1e6:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800f1ea:	e7cc      	b.n	800f186 <osSemaphoreAcquire+0xa>
 800f1ec:	2000d668 	.word	0x2000d668

0800f1f0 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800f1f0:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800f1f2:	b370      	cbz	r0, 800f252 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f1f4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800f1f8:	b14b      	cbz	r3, 800f20e <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 800f1fa:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800f1fc:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800f1fe:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800f200:	f000 fe82 	bl	800ff08 <xQueueGiveFromISR>
 800f204:	2801      	cmp	r0, #1
 800f206:	d014      	beq.n	800f232 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800f208:	f06f 0002 	mvn.w	r0, #2
 800f20c:	e014      	b.n	800f238 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f20e:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800f212:	b913      	cbnz	r3, 800f21a <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f214:	f3ef 8311 	mrs	r3, BASEPRI
 800f218:	b11b      	cbz	r3, 800f222 <osSemaphoreRelease+0x32>
 800f21a:	4b0f      	ldr	r3, [pc, #60]	; (800f258 <osSemaphoreRelease+0x68>)
 800f21c:	681b      	ldr	r3, [r3, #0]
 800f21e:	2b02      	cmp	r3, #2
 800f220:	d0eb      	beq.n	800f1fa <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800f222:	2300      	movs	r3, #0
 800f224:	461a      	mov	r2, r3
 800f226:	4619      	mov	r1, r3
 800f228:	f000 fd5a 	bl	800fce0 <xQueueGenericSend>
 800f22c:	2801      	cmp	r0, #1
 800f22e:	d002      	beq.n	800f236 <osSemaphoreRelease+0x46>
 800f230:	e7ea      	b.n	800f208 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 800f232:	9b01      	ldr	r3, [sp, #4]
 800f234:	b913      	cbnz	r3, 800f23c <osSemaphoreRelease+0x4c>
  stat = osOK;
 800f236:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800f238:	b002      	add	sp, #8
 800f23a:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800f23c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f240:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f244:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f248:	f3bf 8f4f 	dsb	sy
 800f24c:	f3bf 8f6f 	isb	sy
 800f250:	e7f1      	b.n	800f236 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800f252:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800f256:	e7ef      	b.n	800f238 <osSemaphoreRelease+0x48>
 800f258:	2000d668 	.word	0x2000d668

0800f25c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800f25c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f25e:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f260:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800f264:	b11b      	cbz	r3, 800f26e <osMessageQueueNew+0x12>
  hQueue = NULL;
 800f266:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800f268:	4628      	mov	r0, r5
 800f26a:	b002      	add	sp, #8
 800f26c:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f26e:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800f272:	b913      	cbnz	r3, 800f27a <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f274:	f3ef 8311 	mrs	r3, BASEPRI
 800f278:	b11b      	cbz	r3, 800f282 <osMessageQueueNew+0x26>
 800f27a:	4b1a      	ldr	r3, [pc, #104]	; (800f2e4 <osMessageQueueNew+0x88>)
 800f27c:	681b      	ldr	r3, [r3, #0]
 800f27e:	2b02      	cmp	r3, #2
 800f280:	d0f1      	beq.n	800f266 <osMessageQueueNew+0xa>
 800f282:	2800      	cmp	r0, #0
 800f284:	d0ef      	beq.n	800f266 <osMessageQueueNew+0xa>
 800f286:	2900      	cmp	r1, #0
 800f288:	d0ed      	beq.n	800f266 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800f28a:	b1ec      	cbz	r4, 800f2c8 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800f28c:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 800f290:	b193      	cbz	r3, 800f2b8 <osMessageQueueNew+0x5c>
 800f292:	2a4f      	cmp	r2, #79	; 0x4f
 800f294:	d9e7      	bls.n	800f266 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800f296:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800f298:	2a00      	cmp	r2, #0
 800f29a:	d0e4      	beq.n	800f266 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800f29c:	6966      	ldr	r6, [r4, #20]
 800f29e:	fb01 f500 	mul.w	r5, r1, r0
 800f2a2:	42ae      	cmp	r6, r5
 800f2a4:	d3df      	bcc.n	800f266 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800f2a6:	2500      	movs	r5, #0
 800f2a8:	9500      	str	r5, [sp, #0]
 800f2aa:	f000 fc64 	bl	800fb76 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800f2ae:	4605      	mov	r5, r0
 800f2b0:	2800      	cmp	r0, #0
 800f2b2:	d0d8      	beq.n	800f266 <osMessageQueueNew+0xa>
        name = attr->name;
 800f2b4:	6824      	ldr	r4, [r4, #0]
 800f2b6:	e00f      	b.n	800f2d8 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800f2b8:	2a00      	cmp	r2, #0
 800f2ba:	d1d4      	bne.n	800f266 <osMessageQueueNew+0xa>
 800f2bc:	6923      	ldr	r3, [r4, #16]
 800f2be:	2b00      	cmp	r3, #0
 800f2c0:	d1d1      	bne.n	800f266 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800f2c2:	6963      	ldr	r3, [r4, #20]
 800f2c4:	2b00      	cmp	r3, #0
 800f2c6:	d1ce      	bne.n	800f266 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 800f2c8:	2200      	movs	r2, #0
 800f2ca:	f000 fca2 	bl	800fc12 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800f2ce:	4605      	mov	r5, r0
 800f2d0:	2800      	cmp	r0, #0
 800f2d2:	d0c8      	beq.n	800f266 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 800f2d4:	2c00      	cmp	r4, #0
 800f2d6:	d1ed      	bne.n	800f2b4 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 800f2d8:	4621      	mov	r1, r4
 800f2da:	4628      	mov	r0, r5
 800f2dc:	f001 f81a 	bl	8010314 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800f2e0:	e7c2      	b.n	800f268 <osMessageQueueNew+0xc>
 800f2e2:	bf00      	nop
 800f2e4:	2000d668 	.word	0x2000d668

0800f2e8 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800f2e8:	b513      	push	{r0, r1, r4, lr}
 800f2ea:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f2ec:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800f2f0:	b123      	cbz	r3, 800f2fc <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800f2f2:	b9d8      	cbnz	r0, 800f32c <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 800f2f4:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800f2f8:	b002      	add	sp, #8
 800f2fa:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f2fc:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800f300:	b913      	cbnz	r3, 800f308 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f302:	f3ef 8311 	mrs	r3, BASEPRI
 800f306:	b11b      	cbz	r3, 800f310 <osMessageQueuePut+0x28>
 800f308:	4b17      	ldr	r3, [pc, #92]	; (800f368 <osMessageQueuePut+0x80>)
 800f30a:	681b      	ldr	r3, [r3, #0]
 800f30c:	2b02      	cmp	r3, #2
 800f30e:	d0f0      	beq.n	800f2f2 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800f310:	2800      	cmp	r0, #0
 800f312:	d0ef      	beq.n	800f2f4 <osMessageQueuePut+0xc>
 800f314:	2900      	cmp	r1, #0
 800f316:	d0ed      	beq.n	800f2f4 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800f318:	2300      	movs	r3, #0
 800f31a:	4622      	mov	r2, r4
 800f31c:	f000 fce0 	bl	800fce0 <xQueueGenericSend>
 800f320:	2801      	cmp	r0, #1
 800f322:	d010      	beq.n	800f346 <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 800f324:	b9e4      	cbnz	r4, 800f360 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 800f326:	f06f 0002 	mvn.w	r0, #2
 800f32a:	e7e5      	b.n	800f2f8 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800f32c:	2900      	cmp	r1, #0
 800f32e:	d0e1      	beq.n	800f2f4 <osMessageQueuePut+0xc>
 800f330:	2c00      	cmp	r4, #0
 800f332:	d1df      	bne.n	800f2f4 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800f334:	4623      	mov	r3, r4
 800f336:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800f338:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800f33a:	f000 fd84 	bl	800fe46 <xQueueGenericSendFromISR>
 800f33e:	2801      	cmp	r0, #1
 800f340:	d1f1      	bne.n	800f326 <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 800f342:	9b01      	ldr	r3, [sp, #4]
 800f344:	b90b      	cbnz	r3, 800f34a <osMessageQueuePut+0x62>
  stat = osOK;
 800f346:	2000      	movs	r0, #0
 800f348:	e7d6      	b.n	800f2f8 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800f34a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f34e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f352:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f356:	f3bf 8f4f 	dsb	sy
 800f35a:	f3bf 8f6f 	isb	sy
 800f35e:	e7f2      	b.n	800f346 <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 800f360:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800f364:	e7c8      	b.n	800f2f8 <osMessageQueuePut+0x10>
 800f366:	bf00      	nop
 800f368:	2000d668 	.word	0x2000d668

0800f36c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800f36c:	b513      	push	{r0, r1, r4, lr}
 800f36e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f370:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800f374:	b123      	cbz	r3, 800f380 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800f376:	b9d0      	cbnz	r0, 800f3ae <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 800f378:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800f37c:	b002      	add	sp, #8
 800f37e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800f380:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800f384:	b913      	cbnz	r3, 800f38c <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800f386:	f3ef 8311 	mrs	r3, BASEPRI
 800f38a:	b11b      	cbz	r3, 800f394 <osMessageQueueGet+0x28>
 800f38c:	4b16      	ldr	r3, [pc, #88]	; (800f3e8 <osMessageQueueGet+0x7c>)
 800f38e:	681b      	ldr	r3, [r3, #0]
 800f390:	2b02      	cmp	r3, #2
 800f392:	d0f0      	beq.n	800f376 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800f394:	2800      	cmp	r0, #0
 800f396:	d0ef      	beq.n	800f378 <osMessageQueueGet+0xc>
 800f398:	2900      	cmp	r1, #0
 800f39a:	d0ed      	beq.n	800f378 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800f39c:	4622      	mov	r2, r4
 800f39e:	f000 fe07 	bl	800ffb0 <xQueueReceive>
 800f3a2:	2801      	cmp	r0, #1
 800f3a4:	d00f      	beq.n	800f3c6 <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 800f3a6:	b9dc      	cbnz	r4, 800f3e0 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 800f3a8:	f06f 0002 	mvn.w	r0, #2
 800f3ac:	e7e6      	b.n	800f37c <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800f3ae:	2900      	cmp	r1, #0
 800f3b0:	d0e2      	beq.n	800f378 <osMessageQueueGet+0xc>
 800f3b2:	2c00      	cmp	r4, #0
 800f3b4:	d1e0      	bne.n	800f378 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800f3b6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800f3b8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800f3ba:	f000 ff5b 	bl	8010274 <xQueueReceiveFromISR>
 800f3be:	2801      	cmp	r0, #1
 800f3c0:	d1f2      	bne.n	800f3a8 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 800f3c2:	9b01      	ldr	r3, [sp, #4]
 800f3c4:	b90b      	cbnz	r3, 800f3ca <osMessageQueueGet+0x5e>
  stat = osOK;
 800f3c6:	2000      	movs	r0, #0
 800f3c8:	e7d8      	b.n	800f37c <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800f3ca:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f3ce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f3d2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f3d6:	f3bf 8f4f 	dsb	sy
 800f3da:	f3bf 8f6f 	isb	sy
 800f3de:	e7f2      	b.n	800f3c6 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800f3e0:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800f3e4:	e7ca      	b.n	800f37c <osMessageQueueGet+0x10>
 800f3e6:	bf00      	nop
 800f3e8:	2000d668 	.word	0x2000d668

0800f3ec <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800f3ec:	4b03      	ldr	r3, [pc, #12]	; (800f3fc <vApplicationGetIdleTaskMemory+0x10>)
 800f3ee:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800f3f0:	4b03      	ldr	r3, [pc, #12]	; (800f400 <vApplicationGetIdleTaskMemory+0x14>)
 800f3f2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800f3f4:	2380      	movs	r3, #128	; 0x80
 800f3f6:	6013      	str	r3, [r2, #0]
}
 800f3f8:	4770      	bx	lr
 800f3fa:	bf00      	nop
 800f3fc:	2000d5a8 	.word	0x2000d5a8
 800f400:	2000d3a8 	.word	0x2000d3a8

0800f404 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800f404:	4b03      	ldr	r3, [pc, #12]	; (800f414 <vApplicationGetTimerTaskMemory+0x10>)
 800f406:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800f408:	4b03      	ldr	r3, [pc, #12]	; (800f418 <vApplicationGetTimerTaskMemory+0x14>)
 800f40a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800f40c:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f410:	6013      	str	r3, [r2, #0]
}
 800f412:	4770      	bx	lr
 800f414:	2000da6c 	.word	0x2000da6c
 800f418:	2000d66c 	.word	0x2000d66c

0800f41c <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800f41c:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800f41e:	4b0f      	ldr	r3, [pc, #60]	; (800f45c <prvInsertBlockIntoFreeList+0x40>)
 800f420:	461a      	mov	r2, r3
 800f422:	681b      	ldr	r3, [r3, #0]
 800f424:	4283      	cmp	r3, r0
 800f426:	d3fb      	bcc.n	800f420 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800f428:	6854      	ldr	r4, [r2, #4]
 800f42a:	1911      	adds	r1, r2, r4
 800f42c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800f42e:	bf01      	itttt	eq
 800f430:	6841      	ldreq	r1, [r0, #4]
 800f432:	4610      	moveq	r0, r2
 800f434:	1909      	addeq	r1, r1, r4
 800f436:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800f438:	6844      	ldr	r4, [r0, #4]
 800f43a:	1901      	adds	r1, r0, r4
 800f43c:	428b      	cmp	r3, r1
 800f43e:	d107      	bne.n	800f450 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800f440:	4907      	ldr	r1, [pc, #28]	; (800f460 <prvInsertBlockIntoFreeList+0x44>)
 800f442:	6809      	ldr	r1, [r1, #0]
 800f444:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800f446:	bf1f      	itttt	ne
 800f448:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800f44a:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800f44c:	1909      	addne	r1, r1, r4
 800f44e:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800f450:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800f452:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800f454:	bf18      	it	ne
 800f456:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f458:	bd10      	pop	{r4, pc}
 800f45a:	bf00      	nop
 800f45c:	2001db3c 	.word	0x2001db3c
 800f460:	2000db2c 	.word	0x2000db2c

0800f464 <pvPortMalloc>:
{
 800f464:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f468:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800f46a:	f001 fa43 	bl	80108f4 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800f46e:	4840      	ldr	r0, [pc, #256]	; (800f570 <pvPortMalloc+0x10c>)
 800f470:	4d40      	ldr	r5, [pc, #256]	; (800f574 <pvPortMalloc+0x110>)
 800f472:	6803      	ldr	r3, [r0, #0]
 800f474:	bb0b      	cbnz	r3, 800f4ba <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800f476:	4940      	ldr	r1, [pc, #256]	; (800f578 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800f478:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800f47a:	bf1f      	itttt	ne
 800f47c:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800f47e:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800f482:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 800f486:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800f488:	bf14      	ite	ne
 800f48a:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800f48c:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800f490:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800f492:	4e3a      	ldr	r6, [pc, #232]	; (800f57c <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 800f494:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800f496:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800f49a:	2300      	movs	r3, #0
 800f49c:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800f49e:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800f4a0:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800f4a4:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800f4a6:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800f4aa:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800f4ac:	4a34      	ldr	r2, [pc, #208]	; (800f580 <pvPortMalloc+0x11c>)
 800f4ae:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800f4b0:	4a34      	ldr	r2, [pc, #208]	; (800f584 <pvPortMalloc+0x120>)
 800f4b2:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800f4b4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800f4b8:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800f4ba:	682f      	ldr	r7, [r5, #0]
 800f4bc:	4227      	tst	r7, r4
 800f4be:	d151      	bne.n	800f564 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 800f4c0:	2c00      	cmp	r4, #0
 800f4c2:	d042      	beq.n	800f54a <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 800f4c4:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800f4c8:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800f4ca:	bf1c      	itt	ne
 800f4cc:	f023 0307 	bicne.w	r3, r3, #7
 800f4d0:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800f4d2:	2b00      	cmp	r3, #0
 800f4d4:	d046      	beq.n	800f564 <pvPortMalloc+0x100>
 800f4d6:	4c2b      	ldr	r4, [pc, #172]	; (800f584 <pvPortMalloc+0x120>)
 800f4d8:	6826      	ldr	r6, [r4, #0]
 800f4da:	429e      	cmp	r6, r3
 800f4dc:	d342      	bcc.n	800f564 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 800f4de:	4a27      	ldr	r2, [pc, #156]	; (800f57c <pvPortMalloc+0x118>)
 800f4e0:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800f4e2:	6869      	ldr	r1, [r5, #4]
 800f4e4:	4299      	cmp	r1, r3
 800f4e6:	d204      	bcs.n	800f4f2 <pvPortMalloc+0x8e>
 800f4e8:	f8d5 c000 	ldr.w	ip, [r5]
 800f4ec:	f1bc 0f00 	cmp.w	ip, #0
 800f4f0:	d115      	bne.n	800f51e <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800f4f2:	6800      	ldr	r0, [r0, #0]
 800f4f4:	42a8      	cmp	r0, r5
 800f4f6:	d035      	beq.n	800f564 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800f4f8:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800f4fa:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800f4fc:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800f500:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800f502:	2910      	cmp	r1, #16
 800f504:	d912      	bls.n	800f52c <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800f506:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800f508:	0742      	lsls	r2, r0, #29
 800f50a:	d00b      	beq.n	800f524 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800f50c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f510:	f383 8811 	msr	BASEPRI, r3
 800f514:	f3bf 8f6f 	isb	sy
 800f518:	f3bf 8f4f 	dsb	sy
 800f51c:	e7fe      	b.n	800f51c <pvPortMalloc+0xb8>
 800f51e:	462a      	mov	r2, r5
 800f520:	4665      	mov	r5, ip
 800f522:	e7de      	b.n	800f4e2 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800f524:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800f526:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800f528:	f7ff ff78 	bl	800f41c <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800f52c:	4914      	ldr	r1, [pc, #80]	; (800f580 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800f52e:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800f530:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800f532:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800f534:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800f536:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 800f538:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800f53c:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800f53e:	bf38      	it	cc
 800f540:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800f542:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800f546:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 800f548:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 800f54a:	f001 fa77 	bl	8010a3c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800f54e:	0763      	lsls	r3, r4, #29
 800f550:	d00a      	beq.n	800f568 <pvPortMalloc+0x104>
 800f552:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f556:	f383 8811 	msr	BASEPRI, r3
 800f55a:	f3bf 8f6f 	isb	sy
 800f55e:	f3bf 8f4f 	dsb	sy
 800f562:	e7fe      	b.n	800f562 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 800f564:	2400      	movs	r4, #0
 800f566:	e7f0      	b.n	800f54a <pvPortMalloc+0xe6>
}
 800f568:	4620      	mov	r0, r4
 800f56a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f56e:	bf00      	nop
 800f570:	2000db2c 	.word	0x2000db2c
 800f574:	2001db30 	.word	0x2001db30
 800f578:	2000db30 	.word	0x2000db30
 800f57c:	2001db3c 	.word	0x2001db3c
 800f580:	2001db38 	.word	0x2001db38
 800f584:	2001db34 	.word	0x2001db34

0800f588 <vPortFree>:
{
 800f588:	b510      	push	{r4, lr}
	if( pv != NULL )
 800f58a:	4604      	mov	r4, r0
 800f58c:	b370      	cbz	r0, 800f5ec <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800f58e:	4a18      	ldr	r2, [pc, #96]	; (800f5f0 <vPortFree+0x68>)
 800f590:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800f594:	6812      	ldr	r2, [r2, #0]
 800f596:	4213      	tst	r3, r2
 800f598:	d108      	bne.n	800f5ac <vPortFree+0x24>
 800f59a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f59e:	f383 8811 	msr	BASEPRI, r3
 800f5a2:	f3bf 8f6f 	isb	sy
 800f5a6:	f3bf 8f4f 	dsb	sy
 800f5aa:	e7fe      	b.n	800f5aa <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800f5ac:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800f5b0:	b141      	cbz	r1, 800f5c4 <vPortFree+0x3c>
 800f5b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5b6:	f383 8811 	msr	BASEPRI, r3
 800f5ba:	f3bf 8f6f 	isb	sy
 800f5be:	f3bf 8f4f 	dsb	sy
 800f5c2:	e7fe      	b.n	800f5c2 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800f5c4:	ea23 0302 	bic.w	r3, r3, r2
 800f5c8:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800f5cc:	f001 f992 	bl	80108f4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800f5d0:	4a08      	ldr	r2, [pc, #32]	; (800f5f4 <vPortFree+0x6c>)
 800f5d2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f5d6:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800f5d8:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800f5dc:	440b      	add	r3, r1
 800f5de:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800f5e0:	f7ff ff1c 	bl	800f41c <prvInsertBlockIntoFreeList>
}
 800f5e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800f5e8:	f001 ba28 	b.w	8010a3c <xTaskResumeAll>
}
 800f5ec:	bd10      	pop	{r4, pc}
 800f5ee:	bf00      	nop
 800f5f0:	2001db30 	.word	0x2001db30
 800f5f4:	2001db34 	.word	0x2001db34

0800f5f8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800f5f8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800f5fc:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800f600:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800f604:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800f606:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800f608:	2300      	movs	r3, #0
 800f60a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800f60c:	4770      	bx	lr

0800f60e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800f60e:	2300      	movs	r3, #0
 800f610:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800f612:	4770      	bx	lr

0800f614 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800f614:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800f616:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800f618:	689a      	ldr	r2, [r3, #8]
 800f61a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800f61c:	689a      	ldr	r2, [r3, #8]
 800f61e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800f620:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800f622:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800f624:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800f626:	3301      	adds	r3, #1
 800f628:	6003      	str	r3, [r0, #0]
}
 800f62a:	4770      	bx	lr

0800f62c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800f62c:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800f62e:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800f630:	1c63      	adds	r3, r4, #1
 800f632:	d10a      	bne.n	800f64a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800f634:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800f636:	685a      	ldr	r2, [r3, #4]
 800f638:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800f63a:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800f63c:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800f63e:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800f640:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800f642:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800f644:	3301      	adds	r3, #1
 800f646:	6003      	str	r3, [r0, #0]
}
 800f648:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800f64a:	f100 0208 	add.w	r2, r0, #8
 800f64e:	4613      	mov	r3, r2
 800f650:	6852      	ldr	r2, [r2, #4]
 800f652:	6815      	ldr	r5, [r2, #0]
 800f654:	42a5      	cmp	r5, r4
 800f656:	d9fa      	bls.n	800f64e <vListInsert+0x22>
 800f658:	e7ed      	b.n	800f636 <vListInsert+0xa>

0800f65a <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800f65a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800f65e:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800f660:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800f662:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800f664:	6859      	ldr	r1, [r3, #4]
 800f666:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800f668:	bf08      	it	eq
 800f66a:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800f66c:	2200      	movs	r2, #0
 800f66e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800f670:	681a      	ldr	r2, [r3, #0]
 800f672:	3a01      	subs	r2, #1
 800f674:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800f676:	6818      	ldr	r0, [r3, #0]
}
 800f678:	4770      	bx	lr
	...

0800f67c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800f67c:	4808      	ldr	r0, [pc, #32]	; (800f6a0 <prvPortStartFirstTask+0x24>)
 800f67e:	6800      	ldr	r0, [r0, #0]
 800f680:	6800      	ldr	r0, [r0, #0]
 800f682:	f380 8808 	msr	MSP, r0
 800f686:	f04f 0000 	mov.w	r0, #0
 800f68a:	f380 8814 	msr	CONTROL, r0
 800f68e:	b662      	cpsie	i
 800f690:	b661      	cpsie	f
 800f692:	f3bf 8f4f 	dsb	sy
 800f696:	f3bf 8f6f 	isb	sy
 800f69a:	df00      	svc	0
 800f69c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800f69e:	0000      	.short	0x0000
 800f6a0:	e000ed08 	.word	0xe000ed08

0800f6a4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800f6a4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800f6b4 <vPortEnableVFP+0x10>
 800f6a8:	6801      	ldr	r1, [r0, #0]
 800f6aa:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800f6ae:	6001      	str	r1, [r0, #0]
 800f6b0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800f6b2:	0000      	.short	0x0000
 800f6b4:	e000ed88 	.word	0xe000ed88

0800f6b8 <prvTaskExitError>:
{
 800f6b8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800f6ba:	2300      	movs	r3, #0
 800f6bc:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800f6be:	4b0d      	ldr	r3, [pc, #52]	; (800f6f4 <prvTaskExitError+0x3c>)
 800f6c0:	681b      	ldr	r3, [r3, #0]
 800f6c2:	3301      	adds	r3, #1
 800f6c4:	d008      	beq.n	800f6d8 <prvTaskExitError+0x20>
 800f6c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6ca:	f383 8811 	msr	BASEPRI, r3
 800f6ce:	f3bf 8f6f 	isb	sy
 800f6d2:	f3bf 8f4f 	dsb	sy
 800f6d6:	e7fe      	b.n	800f6d6 <prvTaskExitError+0x1e>
 800f6d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6dc:	f383 8811 	msr	BASEPRI, r3
 800f6e0:	f3bf 8f6f 	isb	sy
 800f6e4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800f6e8:	9b01      	ldr	r3, [sp, #4]
 800f6ea:	2b00      	cmp	r3, #0
 800f6ec:	d0fc      	beq.n	800f6e8 <prvTaskExitError+0x30>
}
 800f6ee:	b002      	add	sp, #8
 800f6f0:	4770      	bx	lr
 800f6f2:	bf00      	nop
 800f6f4:	20000098 	.word	0x20000098

0800f6f8 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800f6f8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800f6fc:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800f700:	4b07      	ldr	r3, [pc, #28]	; (800f720 <pxPortInitialiseStack+0x28>)
 800f702:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800f706:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800f70a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800f70e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800f712:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800f716:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800f71a:	3844      	subs	r0, #68	; 0x44
 800f71c:	4770      	bx	lr
 800f71e:	bf00      	nop
 800f720:	0800f6b9 	.word	0x0800f6b9
	...

0800f730 <SVC_Handler>:
	__asm volatile (
 800f730:	4b07      	ldr	r3, [pc, #28]	; (800f750 <pxCurrentTCBConst2>)
 800f732:	6819      	ldr	r1, [r3, #0]
 800f734:	6808      	ldr	r0, [r1, #0]
 800f736:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f73a:	f380 8809 	msr	PSP, r0
 800f73e:	f3bf 8f6f 	isb	sy
 800f742:	f04f 0000 	mov.w	r0, #0
 800f746:	f380 8811 	msr	BASEPRI, r0
 800f74a:	4770      	bx	lr
 800f74c:	f3af 8000 	nop.w

0800f750 <pxCurrentTCBConst2>:
 800f750:	2001db8c 	.word	0x2001db8c

0800f754 <vPortEnterCritical>:
 800f754:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f758:	f383 8811 	msr	BASEPRI, r3
 800f75c:	f3bf 8f6f 	isb	sy
 800f760:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800f764:	4a0a      	ldr	r2, [pc, #40]	; (800f790 <vPortEnterCritical+0x3c>)
 800f766:	6813      	ldr	r3, [r2, #0]
 800f768:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800f76a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800f76c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800f76e:	d10e      	bne.n	800f78e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800f770:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f774:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800f778:	b2db      	uxtb	r3, r3
 800f77a:	b143      	cbz	r3, 800f78e <vPortEnterCritical+0x3a>
 800f77c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f780:	f383 8811 	msr	BASEPRI, r3
 800f784:	f3bf 8f6f 	isb	sy
 800f788:	f3bf 8f4f 	dsb	sy
 800f78c:	e7fe      	b.n	800f78c <vPortEnterCritical+0x38>
}
 800f78e:	4770      	bx	lr
 800f790:	20000098 	.word	0x20000098

0800f794 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800f794:	4a08      	ldr	r2, [pc, #32]	; (800f7b8 <vPortExitCritical+0x24>)
 800f796:	6813      	ldr	r3, [r2, #0]
 800f798:	b943      	cbnz	r3, 800f7ac <vPortExitCritical+0x18>
 800f79a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f79e:	f383 8811 	msr	BASEPRI, r3
 800f7a2:	f3bf 8f6f 	isb	sy
 800f7a6:	f3bf 8f4f 	dsb	sy
 800f7aa:	e7fe      	b.n	800f7aa <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800f7ac:	3b01      	subs	r3, #1
 800f7ae:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800f7b0:	b90b      	cbnz	r3, 800f7b6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800f7b2:	f383 8811 	msr	BASEPRI, r3
}
 800f7b6:	4770      	bx	lr
 800f7b8:	20000098 	.word	0x20000098
 800f7bc:	00000000 	.word	0x00000000

0800f7c0 <PendSV_Handler>:
	__asm volatile
 800f7c0:	f3ef 8009 	mrs	r0, PSP
 800f7c4:	f3bf 8f6f 	isb	sy
 800f7c8:	4b15      	ldr	r3, [pc, #84]	; (800f820 <pxCurrentTCBConst>)
 800f7ca:	681a      	ldr	r2, [r3, #0]
 800f7cc:	f01e 0f10 	tst.w	lr, #16
 800f7d0:	bf08      	it	eq
 800f7d2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800f7d6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7da:	6010      	str	r0, [r2, #0]
 800f7dc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800f7e0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800f7e4:	f380 8811 	msr	BASEPRI, r0
 800f7e8:	f3bf 8f4f 	dsb	sy
 800f7ec:	f3bf 8f6f 	isb	sy
 800f7f0:	f001 f9bc 	bl	8010b6c <vTaskSwitchContext>
 800f7f4:	f04f 0000 	mov.w	r0, #0
 800f7f8:	f380 8811 	msr	BASEPRI, r0
 800f7fc:	bc09      	pop	{r0, r3}
 800f7fe:	6819      	ldr	r1, [r3, #0]
 800f800:	6808      	ldr	r0, [r1, #0]
 800f802:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f806:	f01e 0f10 	tst.w	lr, #16
 800f80a:	bf08      	it	eq
 800f80c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800f810:	f380 8809 	msr	PSP, r0
 800f814:	f3bf 8f6f 	isb	sy
 800f818:	4770      	bx	lr
 800f81a:	bf00      	nop
 800f81c:	f3af 8000 	nop.w

0800f820 <pxCurrentTCBConst>:
 800f820:	2001db8c 	.word	0x2001db8c

0800f824 <SysTick_Handler>:
{
 800f824:	b508      	push	{r3, lr}
	__asm volatile
 800f826:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f82a:	f383 8811 	msr	BASEPRI, r3
 800f82e:	f3bf 8f6f 	isb	sy
 800f832:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800f836:	f001 f86b 	bl	8010910 <xTaskIncrementTick>
 800f83a:	b128      	cbz	r0, 800f848 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800f83c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f840:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f844:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800f848:	2300      	movs	r3, #0
 800f84a:	f383 8811 	msr	BASEPRI, r3
}
 800f84e:	bd08      	pop	{r3, pc}

0800f850 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800f850:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800f854:	2300      	movs	r3, #0
 800f856:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800f858:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800f85a:	4b05      	ldr	r3, [pc, #20]	; (800f870 <vPortSetupTimerInterrupt+0x20>)
 800f85c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800f860:	681b      	ldr	r3, [r3, #0]
 800f862:	fbb3 f3f1 	udiv	r3, r3, r1
 800f866:	3b01      	subs	r3, #1
 800f868:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800f86a:	2307      	movs	r3, #7
 800f86c:	6113      	str	r3, [r2, #16]
}
 800f86e:	4770      	bx	lr
 800f870:	2000008c 	.word	0x2000008c

0800f874 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800f874:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 800f878:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800f87a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800f87e:	4a3a      	ldr	r2, [pc, #232]	; (800f968 <xPortStartScheduler+0xf4>)
 800f880:	4291      	cmp	r1, r2
 800f882:	d108      	bne.n	800f896 <xPortStartScheduler+0x22>
	__asm volatile
 800f884:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f888:	f383 8811 	msr	BASEPRI, r3
 800f88c:	f3bf 8f6f 	isb	sy
 800f890:	f3bf 8f4f 	dsb	sy
 800f894:	e7fe      	b.n	800f894 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800f896:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800f89a:	4b34      	ldr	r3, [pc, #208]	; (800f96c <xPortStartScheduler+0xf8>)
 800f89c:	429a      	cmp	r2, r3
 800f89e:	d108      	bne.n	800f8b2 <xPortStartScheduler+0x3e>
 800f8a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8a4:	f383 8811 	msr	BASEPRI, r3
 800f8a8:	f3bf 8f6f 	isb	sy
 800f8ac:	f3bf 8f4f 	dsb	sy
 800f8b0:	e7fe      	b.n	800f8b0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800f8b2:	4b2f      	ldr	r3, [pc, #188]	; (800f970 <xPortStartScheduler+0xfc>)
 800f8b4:	781a      	ldrb	r2, [r3, #0]
 800f8b6:	b2d2      	uxtb	r2, r2
 800f8b8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800f8ba:	22ff      	movs	r2, #255	; 0xff
 800f8bc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800f8be:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800f8c0:	4a2c      	ldr	r2, [pc, #176]	; (800f974 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800f8c2:	b2db      	uxtb	r3, r3
 800f8c4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800f8c8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800f8cc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800f8d0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800f8d2:	4a29      	ldr	r2, [pc, #164]	; (800f978 <xPortStartScheduler+0x104>)
 800f8d4:	2307      	movs	r3, #7
 800f8d6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800f8d8:	2100      	movs	r1, #0
 800f8da:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800f8de:	0600      	lsls	r0, r0, #24
 800f8e0:	f103 34ff 	add.w	r4, r3, #4294967295
 800f8e4:	d40c      	bmi.n	800f900 <xPortStartScheduler+0x8c>
 800f8e6:	b111      	cbz	r1, 800f8ee <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800f8e8:	2b03      	cmp	r3, #3
 800f8ea:	6013      	str	r3, [r2, #0]
 800f8ec:	d011      	beq.n	800f912 <xPortStartScheduler+0x9e>
 800f8ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8f2:	f383 8811 	msr	BASEPRI, r3
 800f8f6:	f3bf 8f6f 	isb	sy
 800f8fa:	f3bf 8f4f 	dsb	sy
 800f8fe:	e7fe      	b.n	800f8fe <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800f900:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800f904:	005b      	lsls	r3, r3, #1
 800f906:	b2db      	uxtb	r3, r3
 800f908:	f88d 3003 	strb.w	r3, [sp, #3]
 800f90c:	2101      	movs	r1, #1
 800f90e:	4623      	mov	r3, r4
 800f910:	e7e3      	b.n	800f8da <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800f912:	f44f 7340 	mov.w	r3, #768	; 0x300
 800f916:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800f918:	9b01      	ldr	r3, [sp, #4]
 800f91a:	4a15      	ldr	r2, [pc, #84]	; (800f970 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800f91c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800f920:	b2db      	uxtb	r3, r3
 800f922:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800f924:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800f928:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800f92c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800f930:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800f934:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800f938:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800f93c:	f7ff ff88 	bl	800f850 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800f940:	4b0e      	ldr	r3, [pc, #56]	; (800f97c <xPortStartScheduler+0x108>)
 800f942:	2500      	movs	r5, #0
 800f944:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800f946:	f7ff fead 	bl	800f6a4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800f94a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800f94e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800f952:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800f956:	f7ff fe91 	bl	800f67c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800f95a:	f001 f907 	bl	8010b6c <vTaskSwitchContext>
	prvTaskExitError();
 800f95e:	f7ff feab 	bl	800f6b8 <prvTaskExitError>
}
 800f962:	4628      	mov	r0, r5
 800f964:	b003      	add	sp, #12
 800f966:	bd30      	pop	{r4, r5, pc}
 800f968:	410fc271 	.word	0x410fc271
 800f96c:	410fc270 	.word	0x410fc270
 800f970:	e000e400 	.word	0xe000e400
 800f974:	2001db44 	.word	0x2001db44
 800f978:	2001db48 	.word	0x2001db48
 800f97c:	20000098 	.word	0x20000098

0800f980 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800f980:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800f984:	2b0f      	cmp	r3, #15
 800f986:	d90e      	bls.n	800f9a6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800f988:	4a11      	ldr	r2, [pc, #68]	; (800f9d0 <vPortValidateInterruptPriority+0x50>)
 800f98a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800f98c:	4a11      	ldr	r2, [pc, #68]	; (800f9d4 <vPortValidateInterruptPriority+0x54>)
 800f98e:	7812      	ldrb	r2, [r2, #0]
 800f990:	429a      	cmp	r2, r3
 800f992:	d908      	bls.n	800f9a6 <vPortValidateInterruptPriority+0x26>
 800f994:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f998:	f383 8811 	msr	BASEPRI, r3
 800f99c:	f3bf 8f6f 	isb	sy
 800f9a0:	f3bf 8f4f 	dsb	sy
 800f9a4:	e7fe      	b.n	800f9a4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800f9a6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f9aa:	4a0b      	ldr	r2, [pc, #44]	; (800f9d8 <vPortValidateInterruptPriority+0x58>)
 800f9ac:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800f9b0:	6812      	ldr	r2, [r2, #0]
 800f9b2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800f9b6:	4293      	cmp	r3, r2
 800f9b8:	d908      	bls.n	800f9cc <vPortValidateInterruptPriority+0x4c>
 800f9ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9be:	f383 8811 	msr	BASEPRI, r3
 800f9c2:	f3bf 8f6f 	isb	sy
 800f9c6:	f3bf 8f4f 	dsb	sy
 800f9ca:	e7fe      	b.n	800f9ca <vPortValidateInterruptPriority+0x4a>
	}
 800f9cc:	4770      	bx	lr
 800f9ce:	bf00      	nop
 800f9d0:	e000e3f0 	.word	0xe000e3f0
 800f9d4:	2001db44 	.word	0x2001db44
 800f9d8:	2001db48 	.word	0x2001db48

0800f9dc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800f9dc:	b510      	push	{r4, lr}
 800f9de:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800f9e0:	f7ff feb8 	bl	800f754 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800f9e4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800f9e6:	f7ff fed5 	bl	800f794 <vPortExitCritical>

	return xReturn;
}
 800f9ea:	fab4 f084 	clz	r0, r4
 800f9ee:	0940      	lsrs	r0, r0, #5
 800f9f0:	bd10      	pop	{r4, pc}

0800f9f2 <prvCopyDataToQueue>:
{
 800f9f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f9f4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800f9f6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f9f8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800f9fa:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800f9fc:	b952      	cbnz	r2, 800fa14 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f9fe:	6807      	ldr	r7, [r0, #0]
 800fa00:	bb47      	cbnz	r7, 800fa54 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800fa02:	6880      	ldr	r0, [r0, #8]
 800fa04:	f001 fa68 	bl	8010ed8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800fa08:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800fa0a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800fa0c:	3601      	adds	r6, #1
 800fa0e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800fa10:	4628      	mov	r0, r5
 800fa12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800fa14:	b965      	cbnz	r5, 800fa30 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800fa16:	6840      	ldr	r0, [r0, #4]
 800fa18:	f01c fc64 	bl	802c2e4 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800fa1c:	6863      	ldr	r3, [r4, #4]
 800fa1e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800fa20:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800fa22:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800fa24:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800fa26:	4293      	cmp	r3, r2
 800fa28:	d3f0      	bcc.n	800fa0c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800fa2a:	6823      	ldr	r3, [r4, #0]
 800fa2c:	6063      	str	r3, [r4, #4]
 800fa2e:	e7ed      	b.n	800fa0c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800fa30:	68c0      	ldr	r0, [r0, #12]
 800fa32:	f01c fc57 	bl	802c2e4 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800fa36:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800fa38:	68e3      	ldr	r3, [r4, #12]
 800fa3a:	4251      	negs	r1, r2
 800fa3c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800fa3e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800fa40:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800fa42:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800fa44:	bf3e      	ittt	cc
 800fa46:	68a3      	ldrcc	r3, [r4, #8]
 800fa48:	185b      	addcc	r3, r3, r1
 800fa4a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800fa4c:	2d02      	cmp	r5, #2
 800fa4e:	d101      	bne.n	800fa54 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800fa50:	b116      	cbz	r6, 800fa58 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800fa52:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800fa54:	2500      	movs	r5, #0
 800fa56:	e7d9      	b.n	800fa0c <prvCopyDataToQueue+0x1a>
 800fa58:	4635      	mov	r5, r6
 800fa5a:	e7d7      	b.n	800fa0c <prvCopyDataToQueue+0x1a>

0800fa5c <prvCopyDataFromQueue>:
{
 800fa5c:	4603      	mov	r3, r0
 800fa5e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800fa60:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800fa62:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800fa64:	b16a      	cbz	r2, 800fa82 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800fa66:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800fa68:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800fa6a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800fa6c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800fa6e:	bf28      	it	cs
 800fa70:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800fa72:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800fa74:	bf28      	it	cs
 800fa76:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800fa78:	68d9      	ldr	r1, [r3, #12]
}
 800fa7a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800fa7e:	f01c bc31 	b.w	802c2e4 <memcpy>
}
 800fa82:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fa86:	4770      	bx	lr

0800fa88 <prvUnlockQueue>:
{
 800fa88:	b570      	push	{r4, r5, r6, lr}
 800fa8a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800fa8c:	f7ff fe62 	bl	800f754 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800fa90:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fa94:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800fa98:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800fa9a:	2d00      	cmp	r5, #0
 800fa9c:	dc14      	bgt.n	800fac8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800fa9e:	23ff      	movs	r3, #255	; 0xff
 800faa0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800faa4:	f7ff fe76 	bl	800f794 <vPortExitCritical>
	taskENTER_CRITICAL();
 800faa8:	f7ff fe54 	bl	800f754 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800faac:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fab0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800fab4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800fab6:	2d00      	cmp	r5, #0
 800fab8:	dc12      	bgt.n	800fae0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800faba:	23ff      	movs	r3, #255	; 0xff
 800fabc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800fac0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800fac4:	f7ff be66 	b.w	800f794 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fac8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800faca:	2b00      	cmp	r3, #0
 800facc:	d0e7      	beq.n	800fa9e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800face:	4630      	mov	r0, r6
 800fad0:	f001 f91e 	bl	8010d10 <xTaskRemoveFromEventList>
 800fad4:	b108      	cbz	r0, 800fada <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800fad6:	f001 f9a7 	bl	8010e28 <vTaskMissedYield>
			--cTxLock;
 800fada:	3d01      	subs	r5, #1
 800fadc:	b26d      	sxtb	r5, r5
 800fade:	e7dc      	b.n	800fa9a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800fae0:	6923      	ldr	r3, [r4, #16]
 800fae2:	2b00      	cmp	r3, #0
 800fae4:	d0e9      	beq.n	800faba <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fae6:	4630      	mov	r0, r6
 800fae8:	f001 f912 	bl	8010d10 <xTaskRemoveFromEventList>
 800faec:	b108      	cbz	r0, 800faf2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800faee:	f001 f99b 	bl	8010e28 <vTaskMissedYield>
				--cRxLock;
 800faf2:	3d01      	subs	r5, #1
 800faf4:	b26d      	sxtb	r5, r5
 800faf6:	e7de      	b.n	800fab6 <prvUnlockQueue+0x2e>

0800faf8 <xQueueGenericReset>:
{
 800faf8:	b538      	push	{r3, r4, r5, lr}
 800fafa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800fafc:	4604      	mov	r4, r0
 800fafe:	b940      	cbnz	r0, 800fb12 <xQueueGenericReset+0x1a>
 800fb00:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb04:	f383 8811 	msr	BASEPRI, r3
 800fb08:	f3bf 8f6f 	isb	sy
 800fb0c:	f3bf 8f4f 	dsb	sy
 800fb10:	e7fe      	b.n	800fb10 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800fb12:	f7ff fe1f 	bl	800f754 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800fb16:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800fb1a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800fb1c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800fb1e:	434b      	muls	r3, r1
 800fb20:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800fb22:	1a5b      	subs	r3, r3, r1
 800fb24:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800fb26:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800fb28:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800fb2a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800fb2c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800fb2e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800fb30:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800fb34:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800fb38:	b9a5      	cbnz	r5, 800fb64 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800fb3a:	6923      	ldr	r3, [r4, #16]
 800fb3c:	b173      	cbz	r3, 800fb5c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800fb3e:	f104 0010 	add.w	r0, r4, #16
 800fb42:	f001 f8e5 	bl	8010d10 <xTaskRemoveFromEventList>
 800fb46:	b148      	cbz	r0, 800fb5c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800fb48:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fb4c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fb50:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fb54:	f3bf 8f4f 	dsb	sy
 800fb58:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800fb5c:	f7ff fe1a 	bl	800f794 <vPortExitCritical>
}
 800fb60:	2001      	movs	r0, #1
 800fb62:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800fb64:	f104 0010 	add.w	r0, r4, #16
 800fb68:	f7ff fd46 	bl	800f5f8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800fb6c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800fb70:	f7ff fd42 	bl	800f5f8 <vListInitialise>
 800fb74:	e7f2      	b.n	800fb5c <xQueueGenericReset+0x64>

0800fb76 <xQueueGenericCreateStatic>:
	{
 800fb76:	b513      	push	{r0, r1, r4, lr}
 800fb78:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800fb7a:	b940      	cbnz	r0, 800fb8e <xQueueGenericCreateStatic+0x18>
 800fb7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb80:	f383 8811 	msr	BASEPRI, r3
 800fb84:	f3bf 8f6f 	isb	sy
 800fb88:	f3bf 8f4f 	dsb	sy
 800fb8c:	e7fe      	b.n	800fb8c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800fb8e:	b943      	cbnz	r3, 800fba2 <xQueueGenericCreateStatic+0x2c>
 800fb90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb94:	f383 8811 	msr	BASEPRI, r3
 800fb98:	f3bf 8f6f 	isb	sy
 800fb9c:	f3bf 8f4f 	dsb	sy
 800fba0:	e7fe      	b.n	800fba0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800fba2:	b14a      	cbz	r2, 800fbb8 <xQueueGenericCreateStatic+0x42>
 800fba4:	b991      	cbnz	r1, 800fbcc <xQueueGenericCreateStatic+0x56>
 800fba6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbaa:	f383 8811 	msr	BASEPRI, r3
 800fbae:	f3bf 8f6f 	isb	sy
 800fbb2:	f3bf 8f4f 	dsb	sy
 800fbb6:	e7fe      	b.n	800fbb6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800fbb8:	b141      	cbz	r1, 800fbcc <xQueueGenericCreateStatic+0x56>
 800fbba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbbe:	f383 8811 	msr	BASEPRI, r3
 800fbc2:	f3bf 8f6f 	isb	sy
 800fbc6:	f3bf 8f4f 	dsb	sy
 800fbca:	e7fe      	b.n	800fbca <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800fbcc:	2350      	movs	r3, #80	; 0x50
 800fbce:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800fbd0:	9b01      	ldr	r3, [sp, #4]
 800fbd2:	2b50      	cmp	r3, #80	; 0x50
 800fbd4:	d008      	beq.n	800fbe8 <xQueueGenericCreateStatic+0x72>
 800fbd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbda:	f383 8811 	msr	BASEPRI, r3
 800fbde:	f3bf 8f6f 	isb	sy
 800fbe2:	f3bf 8f4f 	dsb	sy
 800fbe6:	e7fe      	b.n	800fbe6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800fbe8:	2900      	cmp	r1, #0
 800fbea:	bf08      	it	eq
 800fbec:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800fbee:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800fbf0:	6022      	str	r2, [r4, #0]
 800fbf2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800fbf4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800fbf8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800fbfc:	4619      	mov	r1, r3
 800fbfe:	4620      	mov	r0, r4
 800fc00:	f7ff ff7a 	bl	800faf8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800fc04:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800fc08:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800fc0c:	4620      	mov	r0, r4
 800fc0e:	b002      	add	sp, #8
 800fc10:	bd10      	pop	{r4, pc}

0800fc12 <xQueueGenericCreate>:
	{
 800fc12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc14:	460d      	mov	r5, r1
 800fc16:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800fc18:	4606      	mov	r6, r0
 800fc1a:	b940      	cbnz	r0, 800fc2e <xQueueGenericCreate+0x1c>
 800fc1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc20:	f383 8811 	msr	BASEPRI, r3
 800fc24:	f3bf 8f6f 	isb	sy
 800fc28:	f3bf 8f4f 	dsb	sy
 800fc2c:	e7fe      	b.n	800fc2c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fc2e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800fc30:	3050      	adds	r0, #80	; 0x50
 800fc32:	f7ff fc17 	bl	800f464 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800fc36:	4604      	mov	r4, r0
 800fc38:	b170      	cbz	r0, 800fc58 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800fc3a:	2300      	movs	r3, #0
 800fc3c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800fc40:	b165      	cbz	r5, 800fc5c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800fc42:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800fc46:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800fc4a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800fc4c:	2101      	movs	r1, #1
 800fc4e:	4620      	mov	r0, r4
 800fc50:	f7ff ff52 	bl	800faf8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800fc54:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800fc58:	4620      	mov	r0, r4
 800fc5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fc5c:	4603      	mov	r3, r0
 800fc5e:	e7f2      	b.n	800fc46 <xQueueGenericCreate+0x34>

0800fc60 <xQueueCreateCountingSemaphoreStatic>:
	{
 800fc60:	b513      	push	{r0, r1, r4, lr}
 800fc62:	4613      	mov	r3, r2
 800fc64:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800fc66:	b940      	cbnz	r0, 800fc7a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800fc68:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc6c:	f383 8811 	msr	BASEPRI, r3
 800fc70:	f3bf 8f6f 	isb	sy
 800fc74:	f3bf 8f4f 	dsb	sy
 800fc78:	e7fe      	b.n	800fc78 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800fc7a:	4288      	cmp	r0, r1
 800fc7c:	d208      	bcs.n	800fc90 <xQueueCreateCountingSemaphoreStatic+0x30>
 800fc7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc82:	f383 8811 	msr	BASEPRI, r3
 800fc86:	f3bf 8f6f 	isb	sy
 800fc8a:	f3bf 8f4f 	dsb	sy
 800fc8e:	e7fe      	b.n	800fc8e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800fc90:	2202      	movs	r2, #2
 800fc92:	9200      	str	r2, [sp, #0]
 800fc94:	2200      	movs	r2, #0
 800fc96:	4611      	mov	r1, r2
 800fc98:	f7ff ff6d 	bl	800fb76 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800fc9c:	b100      	cbz	r0, 800fca0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800fc9e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800fca0:	b002      	add	sp, #8
 800fca2:	bd10      	pop	{r4, pc}

0800fca4 <xQueueCreateCountingSemaphore>:
	{
 800fca4:	b510      	push	{r4, lr}
 800fca6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800fca8:	b940      	cbnz	r0, 800fcbc <xQueueCreateCountingSemaphore+0x18>
 800fcaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcae:	f383 8811 	msr	BASEPRI, r3
 800fcb2:	f3bf 8f6f 	isb	sy
 800fcb6:	f3bf 8f4f 	dsb	sy
 800fcba:	e7fe      	b.n	800fcba <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800fcbc:	4288      	cmp	r0, r1
 800fcbe:	d208      	bcs.n	800fcd2 <xQueueCreateCountingSemaphore+0x2e>
 800fcc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcc4:	f383 8811 	msr	BASEPRI, r3
 800fcc8:	f3bf 8f6f 	isb	sy
 800fccc:	f3bf 8f4f 	dsb	sy
 800fcd0:	e7fe      	b.n	800fcd0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800fcd2:	2202      	movs	r2, #2
 800fcd4:	2100      	movs	r1, #0
 800fcd6:	f7ff ff9c 	bl	800fc12 <xQueueGenericCreate>
		if( xHandle != NULL )
 800fcda:	b100      	cbz	r0, 800fcde <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800fcdc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800fcde:	bd10      	pop	{r4, pc}

0800fce0 <xQueueGenericSend>:
{
 800fce0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fce4:	b085      	sub	sp, #20
 800fce6:	4688      	mov	r8, r1
 800fce8:	9201      	str	r2, [sp, #4]
 800fcea:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800fcec:	4604      	mov	r4, r0
 800fcee:	b940      	cbnz	r0, 800fd02 <xQueueGenericSend+0x22>
 800fcf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcf4:	f383 8811 	msr	BASEPRI, r3
 800fcf8:	f3bf 8f6f 	isb	sy
 800fcfc:	f3bf 8f4f 	dsb	sy
 800fd00:	e7fe      	b.n	800fd00 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800fd02:	b951      	cbnz	r1, 800fd1a <xQueueGenericSend+0x3a>
 800fd04:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800fd06:	b143      	cbz	r3, 800fd1a <xQueueGenericSend+0x3a>
 800fd08:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd0c:	f383 8811 	msr	BASEPRI, r3
 800fd10:	f3bf 8f6f 	isb	sy
 800fd14:	f3bf 8f4f 	dsb	sy
 800fd18:	e7fe      	b.n	800fd18 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800fd1a:	2f02      	cmp	r7, #2
 800fd1c:	d10b      	bne.n	800fd36 <xQueueGenericSend+0x56>
 800fd1e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fd20:	2b01      	cmp	r3, #1
 800fd22:	d008      	beq.n	800fd36 <xQueueGenericSend+0x56>
 800fd24:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd28:	f383 8811 	msr	BASEPRI, r3
 800fd2c:	f3bf 8f6f 	isb	sy
 800fd30:	f3bf 8f4f 	dsb	sy
 800fd34:	e7fe      	b.n	800fd34 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800fd36:	f001 f87d 	bl	8010e34 <xTaskGetSchedulerState>
 800fd3a:	4606      	mov	r6, r0
 800fd3c:	b950      	cbnz	r0, 800fd54 <xQueueGenericSend+0x74>
 800fd3e:	9b01      	ldr	r3, [sp, #4]
 800fd40:	b14b      	cbz	r3, 800fd56 <xQueueGenericSend+0x76>
 800fd42:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd46:	f383 8811 	msr	BASEPRI, r3
 800fd4a:	f3bf 8f6f 	isb	sy
 800fd4e:	f3bf 8f4f 	dsb	sy
 800fd52:	e7fe      	b.n	800fd52 <xQueueGenericSend+0x72>
 800fd54:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800fd56:	f04f 0900 	mov.w	r9, #0
 800fd5a:	e037      	b.n	800fdcc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800fd5c:	9d01      	ldr	r5, [sp, #4]
 800fd5e:	b91d      	cbnz	r5, 800fd68 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800fd60:	f7ff fd18 	bl	800f794 <vPortExitCritical>
			return errQUEUE_FULL;
 800fd64:	2000      	movs	r0, #0
 800fd66:	e052      	b.n	800fe0e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800fd68:	b916      	cbnz	r6, 800fd70 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800fd6a:	a802      	add	r0, sp, #8
 800fd6c:	f001 f814 	bl	8010d98 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800fd70:	f7ff fd10 	bl	800f794 <vPortExitCritical>
		vTaskSuspendAll();
 800fd74:	f000 fdbe 	bl	80108f4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800fd78:	f7ff fcec 	bl	800f754 <vPortEnterCritical>
 800fd7c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800fd80:	2bff      	cmp	r3, #255	; 0xff
 800fd82:	bf08      	it	eq
 800fd84:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800fd88:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800fd8c:	2bff      	cmp	r3, #255	; 0xff
 800fd8e:	bf08      	it	eq
 800fd90:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800fd94:	f7ff fcfe 	bl	800f794 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800fd98:	a901      	add	r1, sp, #4
 800fd9a:	a802      	add	r0, sp, #8
 800fd9c:	f001 f808 	bl	8010db0 <xTaskCheckForTimeOut>
 800fda0:	2800      	cmp	r0, #0
 800fda2:	d14a      	bne.n	800fe3a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800fda4:	f7ff fcd6 	bl	800f754 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800fda8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800fdaa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fdac:	429a      	cmp	r2, r3
 800fdae:	d131      	bne.n	800fe14 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800fdb0:	f7ff fcf0 	bl	800f794 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800fdb4:	9901      	ldr	r1, [sp, #4]
 800fdb6:	f104 0010 	add.w	r0, r4, #16
 800fdba:	f000 ff71 	bl	8010ca0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800fdbe:	4620      	mov	r0, r4
 800fdc0:	f7ff fe62 	bl	800fa88 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800fdc4:	f000 fe3a 	bl	8010a3c <xTaskResumeAll>
 800fdc8:	b360      	cbz	r0, 800fe24 <xQueueGenericSend+0x144>
 800fdca:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800fdcc:	f7ff fcc2 	bl	800f754 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800fdd0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800fdd2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fdd4:	429a      	cmp	r2, r3
 800fdd6:	d301      	bcc.n	800fddc <xQueueGenericSend+0xfc>
 800fdd8:	2f02      	cmp	r7, #2
 800fdda:	d1bf      	bne.n	800fd5c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800fddc:	463a      	mov	r2, r7
 800fdde:	4641      	mov	r1, r8
 800fde0:	4620      	mov	r0, r4
 800fde2:	f7ff fe06 	bl	800f9f2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fde6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fde8:	b11b      	cbz	r3, 800fdf2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800fdea:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800fdee:	f000 ff8f 	bl	8010d10 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800fdf2:	b148      	cbz	r0, 800fe08 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800fdf4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fdf8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fdfc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fe00:	f3bf 8f4f 	dsb	sy
 800fe04:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800fe08:	f7ff fcc4 	bl	800f794 <vPortExitCritical>
				return pdPASS;
 800fe0c:	2001      	movs	r0, #1
}
 800fe0e:	b005      	add	sp, #20
 800fe10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800fe14:	f7ff fcbe 	bl	800f794 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800fe18:	4620      	mov	r0, r4
 800fe1a:	f7ff fe35 	bl	800fa88 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800fe1e:	f000 fe0d 	bl	8010a3c <xTaskResumeAll>
 800fe22:	e7d2      	b.n	800fdca <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800fe24:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fe28:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fe2c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fe30:	f3bf 8f4f 	dsb	sy
 800fe34:	f3bf 8f6f 	isb	sy
 800fe38:	e7c7      	b.n	800fdca <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800fe3a:	4620      	mov	r0, r4
 800fe3c:	f7ff fe24 	bl	800fa88 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800fe40:	f000 fdfc 	bl	8010a3c <xTaskResumeAll>
 800fe44:	e78e      	b.n	800fd64 <xQueueGenericSend+0x84>

0800fe46 <xQueueGenericSendFromISR>:
{
 800fe46:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fe4a:	4689      	mov	r9, r1
 800fe4c:	4690      	mov	r8, r2
 800fe4e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800fe50:	4604      	mov	r4, r0
 800fe52:	b940      	cbnz	r0, 800fe66 <xQueueGenericSendFromISR+0x20>
 800fe54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe58:	f383 8811 	msr	BASEPRI, r3
 800fe5c:	f3bf 8f6f 	isb	sy
 800fe60:	f3bf 8f4f 	dsb	sy
 800fe64:	e7fe      	b.n	800fe64 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800fe66:	b951      	cbnz	r1, 800fe7e <xQueueGenericSendFromISR+0x38>
 800fe68:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800fe6a:	b143      	cbz	r3, 800fe7e <xQueueGenericSendFromISR+0x38>
 800fe6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe70:	f383 8811 	msr	BASEPRI, r3
 800fe74:	f3bf 8f6f 	isb	sy
 800fe78:	f3bf 8f4f 	dsb	sy
 800fe7c:	e7fe      	b.n	800fe7c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800fe7e:	2f02      	cmp	r7, #2
 800fe80:	d10b      	bne.n	800fe9a <xQueueGenericSendFromISR+0x54>
 800fe82:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fe84:	2b01      	cmp	r3, #1
 800fe86:	d008      	beq.n	800fe9a <xQueueGenericSendFromISR+0x54>
 800fe88:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe8c:	f383 8811 	msr	BASEPRI, r3
 800fe90:	f3bf 8f6f 	isb	sy
 800fe94:	f3bf 8f4f 	dsb	sy
 800fe98:	e7fe      	b.n	800fe98 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800fe9a:	f7ff fd71 	bl	800f980 <vPortValidateInterruptPriority>
	__asm volatile
 800fe9e:	f3ef 8611 	mrs	r6, BASEPRI
 800fea2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fea6:	f383 8811 	msr	BASEPRI, r3
 800feaa:	f3bf 8f6f 	isb	sy
 800feae:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800feb2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800feb4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800feb6:	429a      	cmp	r2, r3
 800feb8:	d301      	bcc.n	800febe <xQueueGenericSendFromISR+0x78>
 800feba:	2f02      	cmp	r7, #2
 800febc:	d122      	bne.n	800ff04 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800febe:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800fec2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 800fec4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800fec6:	4649      	mov	r1, r9
 800fec8:	4620      	mov	r0, r4
 800feca:	f7ff fd92 	bl	800f9f2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800fece:	1c6b      	adds	r3, r5, #1
 800fed0:	d113      	bne.n	800fefa <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800fed2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fed4:	b90b      	cbnz	r3, 800feda <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 800fed6:	2001      	movs	r0, #1
 800fed8:	e00b      	b.n	800fef2 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800feda:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800fede:	f000 ff17 	bl	8010d10 <xTaskRemoveFromEventList>
 800fee2:	2800      	cmp	r0, #0
 800fee4:	d0f7      	beq.n	800fed6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 800fee6:	f1b8 0f00 	cmp.w	r8, #0
 800feea:	d0f4      	beq.n	800fed6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800feec:	2001      	movs	r0, #1
 800feee:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800fef2:	f386 8811 	msr	BASEPRI, r6
}
 800fef6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800fefa:	3501      	adds	r5, #1
 800fefc:	b26d      	sxtb	r5, r5
 800fefe:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800ff02:	e7e8      	b.n	800fed6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 800ff04:	2000      	movs	r0, #0
 800ff06:	e7f4      	b.n	800fef2 <xQueueGenericSendFromISR+0xac>

0800ff08 <xQueueGiveFromISR>:
{
 800ff08:	b570      	push	{r4, r5, r6, lr}
 800ff0a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800ff0c:	4604      	mov	r4, r0
 800ff0e:	b940      	cbnz	r0, 800ff22 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800ff10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff14:	f383 8811 	msr	BASEPRI, r3
 800ff18:	f3bf 8f6f 	isb	sy
 800ff1c:	f3bf 8f4f 	dsb	sy
 800ff20:	e7fe      	b.n	800ff20 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ff22:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ff24:	b143      	cbz	r3, 800ff38 <xQueueGiveFromISR+0x30>
 800ff26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff2a:	f383 8811 	msr	BASEPRI, r3
 800ff2e:	f3bf 8f6f 	isb	sy
 800ff32:	f3bf 8f4f 	dsb	sy
 800ff36:	e7fe      	b.n	800ff36 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ff38:	6803      	ldr	r3, [r0, #0]
 800ff3a:	b953      	cbnz	r3, 800ff52 <xQueueGiveFromISR+0x4a>
 800ff3c:	6883      	ldr	r3, [r0, #8]
 800ff3e:	b143      	cbz	r3, 800ff52 <xQueueGiveFromISR+0x4a>
 800ff40:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff44:	f383 8811 	msr	BASEPRI, r3
 800ff48:	f3bf 8f6f 	isb	sy
 800ff4c:	f3bf 8f4f 	dsb	sy
 800ff50:	e7fe      	b.n	800ff50 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ff52:	f7ff fd15 	bl	800f980 <vPortValidateInterruptPriority>
	__asm volatile
 800ff56:	f3ef 8611 	mrs	r6, BASEPRI
 800ff5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff5e:	f383 8811 	msr	BASEPRI, r3
 800ff62:	f3bf 8f6f 	isb	sy
 800ff66:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ff6a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800ff6c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ff6e:	4293      	cmp	r3, r2
 800ff70:	d91c      	bls.n	800ffac <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ff72:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ff76:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800ff78:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800ff7a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ff7c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800ff7e:	d110      	bne.n	800ffa2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ff80:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ff82:	b90b      	cbnz	r3, 800ff88 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800ff84:	2001      	movs	r0, #1
 800ff86:	e009      	b.n	800ff9c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ff88:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ff8c:	f000 fec0 	bl	8010d10 <xTaskRemoveFromEventList>
 800ff90:	2800      	cmp	r0, #0
 800ff92:	d0f7      	beq.n	800ff84 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800ff94:	2d00      	cmp	r5, #0
 800ff96:	d0f5      	beq.n	800ff84 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ff98:	2001      	movs	r0, #1
 800ff9a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800ff9c:	f386 8811 	msr	BASEPRI, r6
}
 800ffa0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ffa2:	3301      	adds	r3, #1
 800ffa4:	b25b      	sxtb	r3, r3
 800ffa6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800ffaa:	e7eb      	b.n	800ff84 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800ffac:	2000      	movs	r0, #0
 800ffae:	e7f5      	b.n	800ff9c <xQueueGiveFromISR+0x94>

0800ffb0 <xQueueReceive>:
{
 800ffb0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ffb4:	460f      	mov	r7, r1
 800ffb6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ffb8:	4604      	mov	r4, r0
 800ffba:	b940      	cbnz	r0, 800ffce <xQueueReceive+0x1e>
	__asm volatile
 800ffbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffc0:	f383 8811 	msr	BASEPRI, r3
 800ffc4:	f3bf 8f6f 	isb	sy
 800ffc8:	f3bf 8f4f 	dsb	sy
 800ffcc:	e7fe      	b.n	800ffcc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ffce:	b951      	cbnz	r1, 800ffe6 <xQueueReceive+0x36>
 800ffd0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ffd2:	b143      	cbz	r3, 800ffe6 <xQueueReceive+0x36>
 800ffd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffd8:	f383 8811 	msr	BASEPRI, r3
 800ffdc:	f3bf 8f6f 	isb	sy
 800ffe0:	f3bf 8f4f 	dsb	sy
 800ffe4:	e7fe      	b.n	800ffe4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ffe6:	f000 ff25 	bl	8010e34 <xTaskGetSchedulerState>
 800ffea:	4606      	mov	r6, r0
 800ffec:	b950      	cbnz	r0, 8010004 <xQueueReceive+0x54>
 800ffee:	9b01      	ldr	r3, [sp, #4]
 800fff0:	b14b      	cbz	r3, 8010006 <xQueueReceive+0x56>
 800fff2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fff6:	f383 8811 	msr	BASEPRI, r3
 800fffa:	f3bf 8f6f 	isb	sy
 800fffe:	f3bf 8f4f 	dsb	sy
 8010002:	e7fe      	b.n	8010002 <xQueueReceive+0x52>
 8010004:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8010006:	f04f 0800 	mov.w	r8, #0
 801000a:	e03d      	b.n	8010088 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 801000c:	9d01      	ldr	r5, [sp, #4]
 801000e:	b91d      	cbnz	r5, 8010018 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8010010:	f7ff fbc0 	bl	800f794 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8010014:	2000      	movs	r0, #0
 8010016:	e056      	b.n	80100c6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8010018:	b916      	cbnz	r6, 8010020 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 801001a:	a802      	add	r0, sp, #8
 801001c:	f000 febc 	bl	8010d98 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8010020:	f7ff fbb8 	bl	800f794 <vPortExitCritical>
		vTaskSuspendAll();
 8010024:	f000 fc66 	bl	80108f4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010028:	f7ff fb94 	bl	800f754 <vPortEnterCritical>
 801002c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010030:	2bff      	cmp	r3, #255	; 0xff
 8010032:	bf08      	it	eq
 8010034:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8010038:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 801003c:	2bff      	cmp	r3, #255	; 0xff
 801003e:	bf08      	it	eq
 8010040:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8010044:	f7ff fba6 	bl	800f794 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010048:	a901      	add	r1, sp, #4
 801004a:	a802      	add	r0, sp, #8
 801004c:	f000 feb0 	bl	8010db0 <xTaskCheckForTimeOut>
 8010050:	2800      	cmp	r0, #0
 8010052:	d141      	bne.n	80100d8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8010054:	4620      	mov	r0, r4
 8010056:	f7ff fcc1 	bl	800f9dc <prvIsQueueEmpty>
 801005a:	b3b8      	cbz	r0, 80100cc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 801005c:	9901      	ldr	r1, [sp, #4]
 801005e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010062:	f000 fe1d 	bl	8010ca0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8010066:	4620      	mov	r0, r4
 8010068:	f7ff fd0e 	bl	800fa88 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 801006c:	f000 fce6 	bl	8010a3c <xTaskResumeAll>
 8010070:	b948      	cbnz	r0, 8010086 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8010072:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010076:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801007a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801007e:	f3bf 8f4f 	dsb	sy
 8010082:	f3bf 8f6f 	isb	sy
 8010086:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8010088:	f7ff fb64 	bl	800f754 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801008c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 801008e:	2d00      	cmp	r5, #0
 8010090:	d0bc      	beq.n	801000c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8010092:	4639      	mov	r1, r7
 8010094:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8010096:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8010098:	f7ff fce0 	bl	800fa5c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 801009c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801009e:	6923      	ldr	r3, [r4, #16]
 80100a0:	b173      	cbz	r3, 80100c0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80100a2:	f104 0010 	add.w	r0, r4, #16
 80100a6:	f000 fe33 	bl	8010d10 <xTaskRemoveFromEventList>
 80100aa:	b148      	cbz	r0, 80100c0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 80100ac:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80100b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80100b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80100b8:	f3bf 8f4f 	dsb	sy
 80100bc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80100c0:	f7ff fb68 	bl	800f794 <vPortExitCritical>
				return pdPASS;
 80100c4:	2001      	movs	r0, #1
}
 80100c6:	b004      	add	sp, #16
 80100c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80100cc:	4620      	mov	r0, r4
 80100ce:	f7ff fcdb 	bl	800fa88 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80100d2:	f000 fcb3 	bl	8010a3c <xTaskResumeAll>
 80100d6:	e7d6      	b.n	8010086 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 80100d8:	4620      	mov	r0, r4
 80100da:	f7ff fcd5 	bl	800fa88 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80100de:	f000 fcad 	bl	8010a3c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80100e2:	4620      	mov	r0, r4
 80100e4:	f7ff fc7a 	bl	800f9dc <prvIsQueueEmpty>
 80100e8:	2800      	cmp	r0, #0
 80100ea:	d0cc      	beq.n	8010086 <xQueueReceive+0xd6>
 80100ec:	e792      	b.n	8010014 <xQueueReceive+0x64>

080100ee <xQueueSemaphoreTake>:
{
 80100ee:	b5f0      	push	{r4, r5, r6, r7, lr}
 80100f0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80100f2:	4604      	mov	r4, r0
{
 80100f4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80100f6:	b940      	cbnz	r0, 801010a <xQueueSemaphoreTake+0x1c>
 80100f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100fc:	f383 8811 	msr	BASEPRI, r3
 8010100:	f3bf 8f6f 	isb	sy
 8010104:	f3bf 8f4f 	dsb	sy
 8010108:	e7fe      	b.n	8010108 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 801010a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 801010c:	b145      	cbz	r5, 8010120 <xQueueSemaphoreTake+0x32>
 801010e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010112:	f383 8811 	msr	BASEPRI, r3
 8010116:	f3bf 8f6f 	isb	sy
 801011a:	f3bf 8f4f 	dsb	sy
 801011e:	e7fe      	b.n	801011e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010120:	f000 fe88 	bl	8010e34 <xTaskGetSchedulerState>
 8010124:	4606      	mov	r6, r0
 8010126:	b950      	cbnz	r0, 801013e <xQueueSemaphoreTake+0x50>
 8010128:	9b01      	ldr	r3, [sp, #4]
 801012a:	b15b      	cbz	r3, 8010144 <xQueueSemaphoreTake+0x56>
 801012c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010130:	f383 8811 	msr	BASEPRI, r3
 8010134:	f3bf 8f6f 	isb	sy
 8010138:	f3bf 8f4f 	dsb	sy
 801013c:	e7fe      	b.n	801013c <xQueueSemaphoreTake+0x4e>
 801013e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8010140:	2700      	movs	r7, #0
 8010142:	e053      	b.n	80101ec <xQueueSemaphoreTake+0xfe>
 8010144:	4605      	mov	r5, r0
 8010146:	e7fb      	b.n	8010140 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010148:	9b01      	ldr	r3, [sp, #4]
 801014a:	b963      	cbnz	r3, 8010166 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 801014c:	b145      	cbz	r5, 8010160 <xQueueSemaphoreTake+0x72>
 801014e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010152:	f383 8811 	msr	BASEPRI, r3
 8010156:	f3bf 8f6f 	isb	sy
 801015a:	f3bf 8f4f 	dsb	sy
 801015e:	e7fe      	b.n	801015e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8010160:	f7ff fb18 	bl	800f794 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8010164:	e062      	b.n	801022c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8010166:	b916      	cbnz	r6, 801016e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010168:	a802      	add	r0, sp, #8
 801016a:	f000 fe15 	bl	8010d98 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 801016e:	f7ff fb11 	bl	800f794 <vPortExitCritical>
		vTaskSuspendAll();
 8010172:	f000 fbbf 	bl	80108f4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010176:	f7ff faed 	bl	800f754 <vPortEnterCritical>
 801017a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801017e:	2bff      	cmp	r3, #255	; 0xff
 8010180:	bf08      	it	eq
 8010182:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8010186:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 801018a:	2bff      	cmp	r3, #255	; 0xff
 801018c:	bf08      	it	eq
 801018e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8010192:	f7ff faff 	bl	800f794 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010196:	a901      	add	r1, sp, #4
 8010198:	a802      	add	r0, sp, #8
 801019a:	f000 fe09 	bl	8010db0 <xTaskCheckForTimeOut>
 801019e:	2800      	cmp	r0, #0
 80101a0:	d14d      	bne.n	801023e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80101a2:	4620      	mov	r0, r4
 80101a4:	f7ff fc1a 	bl	800f9dc <prvIsQueueEmpty>
 80101a8:	2800      	cmp	r0, #0
 80101aa:	d042      	beq.n	8010232 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80101ac:	6823      	ldr	r3, [r4, #0]
 80101ae:	b93b      	cbnz	r3, 80101c0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 80101b0:	f7ff fad0 	bl	800f754 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80101b4:	68a0      	ldr	r0, [r4, #8]
 80101b6:	f000 fe4d 	bl	8010e54 <xTaskPriorityInherit>
 80101ba:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80101bc:	f7ff faea 	bl	800f794 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80101c0:	9901      	ldr	r1, [sp, #4]
 80101c2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80101c6:	f000 fd6b 	bl	8010ca0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80101ca:	4620      	mov	r0, r4
 80101cc:	f7ff fc5c 	bl	800fa88 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80101d0:	f000 fc34 	bl	8010a3c <xTaskResumeAll>
 80101d4:	b948      	cbnz	r0, 80101ea <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80101d6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80101da:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80101de:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80101e2:	f3bf 8f4f 	dsb	sy
 80101e6:	f3bf 8f6f 	isb	sy
 80101ea:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80101ec:	f7ff fab2 	bl	800f754 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80101f0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80101f2:	2b00      	cmp	r3, #0
 80101f4:	d0a8      	beq.n	8010148 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80101f6:	3b01      	subs	r3, #1
 80101f8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80101fa:	6823      	ldr	r3, [r4, #0]
 80101fc:	b913      	cbnz	r3, 8010204 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80101fe:	f000 ff01 	bl	8011004 <pvTaskIncrementMutexHeldCount>
 8010202:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010204:	6923      	ldr	r3, [r4, #16]
 8010206:	b173      	cbz	r3, 8010226 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010208:	f104 0010 	add.w	r0, r4, #16
 801020c:	f000 fd80 	bl	8010d10 <xTaskRemoveFromEventList>
 8010210:	b148      	cbz	r0, 8010226 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8010212:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010216:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801021a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801021e:	f3bf 8f4f 	dsb	sy
 8010222:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8010226:	f7ff fab5 	bl	800f794 <vPortExitCritical>
				return pdPASS;
 801022a:	2501      	movs	r5, #1
}
 801022c:	4628      	mov	r0, r5
 801022e:	b005      	add	sp, #20
 8010230:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8010232:	4620      	mov	r0, r4
 8010234:	f7ff fc28 	bl	800fa88 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8010238:	f000 fc00 	bl	8010a3c <xTaskResumeAll>
 801023c:	e7d5      	b.n	80101ea <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 801023e:	4620      	mov	r0, r4
 8010240:	f7ff fc22 	bl	800fa88 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8010244:	f000 fbfa 	bl	8010a3c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8010248:	4620      	mov	r0, r4
 801024a:	f7ff fbc7 	bl	800f9dc <prvIsQueueEmpty>
 801024e:	2800      	cmp	r0, #0
 8010250:	d0cb      	beq.n	80101ea <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8010252:	2d00      	cmp	r5, #0
 8010254:	d0ea      	beq.n	801022c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8010256:	f7ff fa7d 	bl	800f754 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 801025a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801025c:	b119      	cbz	r1, 8010266 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 801025e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010260:	6819      	ldr	r1, [r3, #0]
 8010262:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8010266:	68a0      	ldr	r0, [r4, #8]
 8010268:	f000 fe7a 	bl	8010f60 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 801026c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 801026e:	f7ff fa91 	bl	800f794 <vPortExitCritical>
 8010272:	e7db      	b.n	801022c <xQueueSemaphoreTake+0x13e>

08010274 <xQueueReceiveFromISR>:
{
 8010274:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010278:	4689      	mov	r9, r1
 801027a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 801027c:	4605      	mov	r5, r0
 801027e:	b940      	cbnz	r0, 8010292 <xQueueReceiveFromISR+0x1e>
 8010280:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010284:	f383 8811 	msr	BASEPRI, r3
 8010288:	f3bf 8f6f 	isb	sy
 801028c:	f3bf 8f4f 	dsb	sy
 8010290:	e7fe      	b.n	8010290 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010292:	b951      	cbnz	r1, 80102aa <xQueueReceiveFromISR+0x36>
 8010294:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010296:	b143      	cbz	r3, 80102aa <xQueueReceiveFromISR+0x36>
 8010298:	f04f 0350 	mov.w	r3, #80	; 0x50
 801029c:	f383 8811 	msr	BASEPRI, r3
 80102a0:	f3bf 8f6f 	isb	sy
 80102a4:	f3bf 8f4f 	dsb	sy
 80102a8:	e7fe      	b.n	80102a8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80102aa:	f7ff fb69 	bl	800f980 <vPortValidateInterruptPriority>
	__asm volatile
 80102ae:	f3ef 8711 	mrs	r7, BASEPRI
 80102b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102b6:	f383 8811 	msr	BASEPRI, r3
 80102ba:	f3bf 8f6f 	isb	sy
 80102be:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80102c2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80102c4:	b31c      	cbz	r4, 801030e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80102c6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80102ca:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80102cc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80102ce:	4628      	mov	r0, r5
 80102d0:	f7ff fbc4 	bl	800fa5c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80102d4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80102d6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80102d8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80102da:	d113      	bne.n	8010304 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80102dc:	692b      	ldr	r3, [r5, #16]
 80102de:	b90b      	cbnz	r3, 80102e4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80102e0:	2001      	movs	r0, #1
 80102e2:	e00b      	b.n	80102fc <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80102e4:	f105 0010 	add.w	r0, r5, #16
 80102e8:	f000 fd12 	bl	8010d10 <xTaskRemoveFromEventList>
 80102ec:	2800      	cmp	r0, #0
 80102ee:	d0f7      	beq.n	80102e0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80102f0:	f1b8 0f00 	cmp.w	r8, #0
 80102f4:	d0f4      	beq.n	80102e0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80102f6:	2001      	movs	r0, #1
 80102f8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80102fc:	f387 8811 	msr	BASEPRI, r7
}
 8010300:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8010304:	3601      	adds	r6, #1
 8010306:	b276      	sxtb	r6, r6
 8010308:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 801030c:	e7e8      	b.n	80102e0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 801030e:	4620      	mov	r0, r4
 8010310:	e7f4      	b.n	80102fc <xQueueReceiveFromISR+0x88>
	...

08010314 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8010314:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8010316:	4a07      	ldr	r2, [pc, #28]	; (8010334 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8010318:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 801031a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 801031e:	b92c      	cbnz	r4, 801032c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8010320:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8010324:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8010328:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 801032a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801032c:	3301      	adds	r3, #1
 801032e:	2b08      	cmp	r3, #8
 8010330:	d1f3      	bne.n	801031a <vQueueAddToRegistry+0x6>
 8010332:	e7fa      	b.n	801032a <vQueueAddToRegistry+0x16>
 8010334:	2001db4c 	.word	0x2001db4c

08010338 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8010338:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801033a:	4a08      	ldr	r2, [pc, #32]	; (801035c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801033c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801033e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8010342:	684c      	ldr	r4, [r1, #4]
 8010344:	4284      	cmp	r4, r0
 8010346:	d104      	bne.n	8010352 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8010348:	2000      	movs	r0, #0
 801034a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 801034e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8010350:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8010352:	3301      	adds	r3, #1
 8010354:	2b08      	cmp	r3, #8
 8010356:	d1f2      	bne.n	801033e <vQueueUnregisterQueue+0x6>
 8010358:	e7fa      	b.n	8010350 <vQueueUnregisterQueue+0x18>
 801035a:	bf00      	nop
 801035c:	2001db4c 	.word	0x2001db4c

08010360 <vQueueDelete>:
{
 8010360:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8010362:	4604      	mov	r4, r0
 8010364:	b940      	cbnz	r0, 8010378 <vQueueDelete+0x18>
	__asm volatile
 8010366:	f04f 0350 	mov.w	r3, #80	; 0x50
 801036a:	f383 8811 	msr	BASEPRI, r3
 801036e:	f3bf 8f6f 	isb	sy
 8010372:	f3bf 8f4f 	dsb	sy
 8010376:	e7fe      	b.n	8010376 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8010378:	f7ff ffde 	bl	8010338 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 801037c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8010380:	b923      	cbnz	r3, 801038c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8010382:	4620      	mov	r0, r4
}
 8010384:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8010388:	f7ff b8fe 	b.w	800f588 <vPortFree>
}
 801038c:	bd10      	pop	{r4, pc}

0801038e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 801038e:	b570      	push	{r4, r5, r6, lr}
 8010390:	4604      	mov	r4, r0
 8010392:	460d      	mov	r5, r1
 8010394:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8010396:	f7ff f9dd 	bl	800f754 <vPortEnterCritical>
 801039a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801039e:	2bff      	cmp	r3, #255	; 0xff
 80103a0:	bf04      	itt	eq
 80103a2:	2300      	moveq	r3, #0
 80103a4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80103a8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80103ac:	2bff      	cmp	r3, #255	; 0xff
 80103ae:	bf04      	itt	eq
 80103b0:	2300      	moveq	r3, #0
 80103b2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80103b6:	f7ff f9ed 	bl	800f794 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80103ba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80103bc:	b92b      	cbnz	r3, 80103ca <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80103be:	4632      	mov	r2, r6
 80103c0:	4629      	mov	r1, r5
 80103c2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80103c6:	f000 fc85 	bl	8010cd4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80103ca:	4620      	mov	r0, r4
	}
 80103cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80103d0:	f7ff bb5a 	b.w	800fa88 <prvUnlockQueue>

080103d4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80103d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80103d8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80103da:	f7ff f9bb 	bl	800f754 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80103de:	4b30      	ldr	r3, [pc, #192]	; (80104a0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80103e0:	4e30      	ldr	r6, [pc, #192]	; (80104a4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80103e2:	681a      	ldr	r2, [r3, #0]
 80103e4:	4f30      	ldr	r7, [pc, #192]	; (80104a8 <prvAddNewTaskToReadyList+0xd4>)
 80103e6:	3201      	adds	r2, #1
 80103e8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80103ea:	6835      	ldr	r5, [r6, #0]
 80103ec:	2d00      	cmp	r5, #0
 80103ee:	d14b      	bne.n	8010488 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80103f0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80103f2:	681b      	ldr	r3, [r3, #0]
 80103f4:	2b01      	cmp	r3, #1
 80103f6:	d11f      	bne.n	8010438 <prvAddNewTaskToReadyList+0x64>
 80103f8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80103fa:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80103fc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80103fe:	f7ff f8fb 	bl	800f5f8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8010402:	2d38      	cmp	r5, #56	; 0x38
 8010404:	f108 0814 	add.w	r8, r8, #20
 8010408:	d1f7      	bne.n	80103fa <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 801040a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80104d0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 801040e:	4d27      	ldr	r5, [pc, #156]	; (80104ac <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8010410:	4640      	mov	r0, r8
 8010412:	f7ff f8f1 	bl	800f5f8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8010416:	4628      	mov	r0, r5
 8010418:	f7ff f8ee 	bl	800f5f8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 801041c:	4824      	ldr	r0, [pc, #144]	; (80104b0 <prvAddNewTaskToReadyList+0xdc>)
 801041e:	f7ff f8eb 	bl	800f5f8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8010422:	4824      	ldr	r0, [pc, #144]	; (80104b4 <prvAddNewTaskToReadyList+0xe0>)
 8010424:	f7ff f8e8 	bl	800f5f8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8010428:	4823      	ldr	r0, [pc, #140]	; (80104b8 <prvAddNewTaskToReadyList+0xe4>)
 801042a:	f7ff f8e5 	bl	800f5f8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 801042e:	4b23      	ldr	r3, [pc, #140]	; (80104bc <prvAddNewTaskToReadyList+0xe8>)
 8010430:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8010434:	4b22      	ldr	r3, [pc, #136]	; (80104c0 <prvAddNewTaskToReadyList+0xec>)
 8010436:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8010438:	4a22      	ldr	r2, [pc, #136]	; (80104c4 <prvAddNewTaskToReadyList+0xf0>)
 801043a:	6813      	ldr	r3, [r2, #0]
 801043c:	3301      	adds	r3, #1
 801043e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8010440:	4a21      	ldr	r2, [pc, #132]	; (80104c8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8010442:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8010444:	6811      	ldr	r1, [r2, #0]
 8010446:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010448:	2014      	movs	r0, #20
 801044a:	428b      	cmp	r3, r1
 801044c:	fb00 7003 	mla	r0, r0, r3, r7
 8010450:	f104 0104 	add.w	r1, r4, #4
 8010454:	bf88      	it	hi
 8010456:	6013      	strhi	r3, [r2, #0]
 8010458:	f7ff f8dc 	bl	800f614 <vListInsertEnd>
	taskEXIT_CRITICAL();
 801045c:	f7ff f99a 	bl	800f794 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8010460:	4b1a      	ldr	r3, [pc, #104]	; (80104cc <prvAddNewTaskToReadyList+0xf8>)
 8010462:	681b      	ldr	r3, [r3, #0]
 8010464:	b173      	cbz	r3, 8010484 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8010466:	6833      	ldr	r3, [r6, #0]
 8010468:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801046a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801046c:	429a      	cmp	r2, r3
 801046e:	d209      	bcs.n	8010484 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8010470:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010474:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010478:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801047c:	f3bf 8f4f 	dsb	sy
 8010480:	f3bf 8f6f 	isb	sy
}
 8010484:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8010488:	4b10      	ldr	r3, [pc, #64]	; (80104cc <prvAddNewTaskToReadyList+0xf8>)
 801048a:	681b      	ldr	r3, [r3, #0]
 801048c:	2b00      	cmp	r3, #0
 801048e:	d1d3      	bne.n	8010438 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8010490:	6833      	ldr	r3, [r6, #0]
 8010492:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8010494:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010496:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8010498:	bf98      	it	ls
 801049a:	6034      	strls	r4, [r6, #0]
 801049c:	e7cc      	b.n	8010438 <prvAddNewTaskToReadyList+0x64>
 801049e:	bf00      	nop
 80104a0:	2001dff8 	.word	0x2001dff8
 80104a4:	2001db8c 	.word	0x2001db8c
 80104a8:	2001db98 	.word	0x2001db98
 80104ac:	2001e024 	.word	0x2001e024
 80104b0:	2001e040 	.word	0x2001e040
 80104b4:	2001e06c 	.word	0x2001e06c
 80104b8:	2001e058 	.word	0x2001e058
 80104bc:	2001db90 	.word	0x2001db90
 80104c0:	2001db94 	.word	0x2001db94
 80104c4:	2001e008 	.word	0x2001e008
 80104c8:	2001e00c 	.word	0x2001e00c
 80104cc:	2001e054 	.word	0x2001e054
 80104d0:	2001e010 	.word	0x2001e010

080104d4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80104d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80104d6:	4b15      	ldr	r3, [pc, #84]	; (801052c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80104d8:	4e15      	ldr	r6, [pc, #84]	; (8010530 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80104da:	681d      	ldr	r5, [r3, #0]
{
 80104dc:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80104de:	6830      	ldr	r0, [r6, #0]
 80104e0:	3004      	adds	r0, #4
{
 80104e2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80104e4:	f7ff f8b9 	bl	800f65a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80104e8:	1c63      	adds	r3, r4, #1
 80104ea:	d107      	bne.n	80104fc <prvAddCurrentTaskToDelayedList+0x28>
 80104ec:	b137      	cbz	r7, 80104fc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80104ee:	6831      	ldr	r1, [r6, #0]
 80104f0:	4810      	ldr	r0, [pc, #64]	; (8010534 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80104f2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80104f6:	3104      	adds	r1, #4
 80104f8:	f7ff b88c 	b.w	800f614 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80104fc:	6833      	ldr	r3, [r6, #0]
 80104fe:	192c      	adds	r4, r5, r4
 8010500:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8010502:	d307      	bcc.n	8010514 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010504:	4b0c      	ldr	r3, [pc, #48]	; (8010538 <prvAddCurrentTaskToDelayedList+0x64>)
 8010506:	6818      	ldr	r0, [r3, #0]
 8010508:	6831      	ldr	r1, [r6, #0]
}
 801050a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801050e:	3104      	adds	r1, #4
 8010510:	f7ff b88c 	b.w	800f62c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010514:	4b09      	ldr	r3, [pc, #36]	; (801053c <prvAddCurrentTaskToDelayedList+0x68>)
 8010516:	6818      	ldr	r0, [r3, #0]
 8010518:	6831      	ldr	r1, [r6, #0]
 801051a:	3104      	adds	r1, #4
 801051c:	f7ff f886 	bl	800f62c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8010520:	4b07      	ldr	r3, [pc, #28]	; (8010540 <prvAddCurrentTaskToDelayedList+0x6c>)
 8010522:	681a      	ldr	r2, [r3, #0]
 8010524:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8010526:	bf88      	it	hi
 8010528:	601c      	strhi	r4, [r3, #0]
}
 801052a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801052c:	2001e080 	.word	0x2001e080
 8010530:	2001db8c 	.word	0x2001db8c
 8010534:	2001e058 	.word	0x2001e058
 8010538:	2001db94 	.word	0x2001db94
 801053c:	2001db90 	.word	0x2001db90
 8010540:	2001e038 	.word	0x2001e038

08010544 <prvTaskIsTaskSuspended>:
		configASSERT( xTask );
 8010544:	b940      	cbnz	r0, 8010558 <prvTaskIsTaskSuspended+0x14>
 8010546:	f04f 0350 	mov.w	r3, #80	; 0x50
 801054a:	f383 8811 	msr	BASEPRI, r3
 801054e:	f3bf 8f6f 	isb	sy
 8010552:	f3bf 8f4f 	dsb	sy
 8010556:	e7fe      	b.n	8010556 <prvTaskIsTaskSuspended+0x12>
		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010558:	6942      	ldr	r2, [r0, #20]
 801055a:	4b06      	ldr	r3, [pc, #24]	; (8010574 <prvTaskIsTaskSuspended+0x30>)
 801055c:	429a      	cmp	r2, r3
 801055e:	d107      	bne.n	8010570 <prvTaskIsTaskSuspended+0x2c>
			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
 8010560:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010562:	4b05      	ldr	r3, [pc, #20]	; (8010578 <prvTaskIsTaskSuspended+0x34>)
 8010564:	4298      	cmp	r0, r3
 8010566:	d003      	beq.n	8010570 <prvTaskIsTaskSuspended+0x2c>
				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The cast is only redundant when NULL is used. */
 8010568:	fab0 f080 	clz	r0, r0
 801056c:	0940      	lsrs	r0, r0, #5
 801056e:	4770      	bx	lr
	BaseType_t xReturn = pdFALSE;
 8010570:	2000      	movs	r0, #0
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 8010572:	4770      	bx	lr
 8010574:	2001e058 	.word	0x2001e058
 8010578:	2001e040 	.word	0x2001e040

0801057c <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801057c:	4a06      	ldr	r2, [pc, #24]	; (8010598 <prvResetNextTaskUnblockTime+0x1c>)
 801057e:	6813      	ldr	r3, [r2, #0]
 8010580:	6819      	ldr	r1, [r3, #0]
 8010582:	4b06      	ldr	r3, [pc, #24]	; (801059c <prvResetNextTaskUnblockTime+0x20>)
 8010584:	b919      	cbnz	r1, 801058e <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8010586:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 801058a:	601a      	str	r2, [r3, #0]
}
 801058c:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801058e:	6812      	ldr	r2, [r2, #0]
 8010590:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8010592:	68d2      	ldr	r2, [r2, #12]
 8010594:	6852      	ldr	r2, [r2, #4]
 8010596:	e7f8      	b.n	801058a <prvResetNextTaskUnblockTime+0xe>
 8010598:	2001db90 	.word	0x2001db90
 801059c:	2001e038 	.word	0x2001e038

080105a0 <prvDeleteTCB>:
	{
 80105a0:	b510      	push	{r4, lr}
 80105a2:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 80105a4:	3058      	adds	r0, #88	; 0x58
 80105a6:	f01c fd65 	bl	802d074 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80105aa:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 80105ae:	b93b      	cbnz	r3, 80105c0 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 80105b0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80105b2:	f7fe ffe9 	bl	800f588 <vPortFree>
				vPortFree( pxTCB );
 80105b6:	4620      	mov	r0, r4
	}
 80105b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80105bc:	f7fe bfe4 	b.w	800f588 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80105c0:	2b01      	cmp	r3, #1
 80105c2:	d0f8      	beq.n	80105b6 <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80105c4:	2b02      	cmp	r3, #2
 80105c6:	d008      	beq.n	80105da <prvDeleteTCB+0x3a>
 80105c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80105cc:	f383 8811 	msr	BASEPRI, r3
 80105d0:	f3bf 8f6f 	isb	sy
 80105d4:	f3bf 8f4f 	dsb	sy
 80105d8:	e7fe      	b.n	80105d8 <prvDeleteTCB+0x38>
	}
 80105da:	bd10      	pop	{r4, pc}

080105dc <prvIdleTask>:
{
 80105dc:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80105de:	4c13      	ldr	r4, [pc, #76]	; (801062c <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80105e0:	4f13      	ldr	r7, [pc, #76]	; (8010630 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 80105e2:	4d14      	ldr	r5, [pc, #80]	; (8010634 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80105e4:	6823      	ldr	r3, [r4, #0]
 80105e6:	b973      	cbnz	r3, 8010606 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80105e8:	4b13      	ldr	r3, [pc, #76]	; (8010638 <prvIdleTask+0x5c>)
 80105ea:	681b      	ldr	r3, [r3, #0]
 80105ec:	2b01      	cmp	r3, #1
 80105ee:	d9f8      	bls.n	80105e2 <prvIdleTask+0x6>
				taskYIELD();
 80105f0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80105f4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80105f8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80105fc:	f3bf 8f4f 	dsb	sy
 8010600:	f3bf 8f6f 	isb	sy
 8010604:	e7ed      	b.n	80105e2 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8010606:	f7ff f8a5 	bl	800f754 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801060a:	68fb      	ldr	r3, [r7, #12]
 801060c:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801060e:	1d30      	adds	r0, r6, #4
 8010610:	f7ff f823 	bl	800f65a <uxListRemove>
				--uxCurrentNumberOfTasks;
 8010614:	682b      	ldr	r3, [r5, #0]
 8010616:	3b01      	subs	r3, #1
 8010618:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 801061a:	6823      	ldr	r3, [r4, #0]
 801061c:	3b01      	subs	r3, #1
 801061e:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8010620:	f7ff f8b8 	bl	800f794 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8010624:	4630      	mov	r0, r6
 8010626:	f7ff ffbb 	bl	80105a0 <prvDeleteTCB>
 801062a:	e7db      	b.n	80105e4 <prvIdleTask+0x8>
 801062c:	2001dffc 	.word	0x2001dffc
 8010630:	2001e06c 	.word	0x2001e06c
 8010634:	2001dff8 	.word	0x2001dff8
 8010638:	2001db98 	.word	0x2001db98

0801063c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801063c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010640:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8010644:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8010648:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801064a:	4606      	mov	r6, r0
 801064c:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 801064e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8010650:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8010652:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8010654:	f01b fe54 	bl	802c300 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8010658:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801065a:	f1a9 0904 	sub.w	r9, r9, #4
 801065e:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8010660:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8010664:	2d00      	cmp	r5, #0
 8010666:	d042      	beq.n	80106ee <prvInitialiseNewTask.constprop.0+0xb2>
 8010668:	1e6b      	subs	r3, r5, #1
 801066a:	f104 0234 	add.w	r2, r4, #52	; 0x34
 801066e:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8010670:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010674:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8010678:	b108      	cbz	r0, 801067e <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 801067a:	42ab      	cmp	r3, r5
 801067c:	d1f8      	bne.n	8010670 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 801067e:	2300      	movs	r3, #0
 8010680:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8010684:	9d08      	ldr	r5, [sp, #32]
 8010686:	2d37      	cmp	r5, #55	; 0x37
 8010688:	bf28      	it	cs
 801068a:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 801068c:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8010690:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8010692:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8010694:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8010696:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 801069a:	f7fe ffb8 	bl	800f60e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801069e:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80106a2:	f104 0018 	add.w	r0, r4, #24
 80106a6:	f7fe ffb2 	bl	800f60e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 80106aa:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80106ae:	2260      	movs	r2, #96	; 0x60
 80106b0:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80106b2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80106b4:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80106b6:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 80106b8:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80106bc:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80106c0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80106c4:	f01b fe1c 	bl	802c300 <memset>
 80106c8:	4b0a      	ldr	r3, [pc, #40]	; (80106f4 <prvInitialiseNewTask.constprop.0+0xb8>)
 80106ca:	65e3      	str	r3, [r4, #92]	; 0x5c
 80106cc:	4b0a      	ldr	r3, [pc, #40]	; (80106f8 <prvInitialiseNewTask.constprop.0+0xbc>)
 80106ce:	6623      	str	r3, [r4, #96]	; 0x60
 80106d0:	4b0a      	ldr	r3, [pc, #40]	; (80106fc <prvInitialiseNewTask.constprop.0+0xc0>)
 80106d2:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80106d4:	463a      	mov	r2, r7
 80106d6:	4631      	mov	r1, r6
 80106d8:	4648      	mov	r0, r9
 80106da:	f7ff f80d 	bl	800f6f8 <pxPortInitialiseStack>
 80106de:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80106e0:	f1b8 0f00 	cmp.w	r8, #0
 80106e4:	d001      	beq.n	80106ea <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80106e6:	f8c8 4000 	str.w	r4, [r8]
}
 80106ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80106ee:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80106f2:	e7c7      	b.n	8010684 <prvInitialiseNewTask.constprop.0+0x48>
 80106f4:	08049aec 	.word	0x08049aec
 80106f8:	08049b0c 	.word	0x08049b0c
 80106fc:	08049acc 	.word	0x08049acc

08010700 <xTaskCreateStatic>:
	{
 8010700:	b570      	push	{r4, r5, r6, lr}
 8010702:	b086      	sub	sp, #24
 8010704:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8010708:	b945      	cbnz	r5, 801071c <xTaskCreateStatic+0x1c>
 801070a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801070e:	f383 8811 	msr	BASEPRI, r3
 8010712:	f3bf 8f6f 	isb	sy
 8010716:	f3bf 8f4f 	dsb	sy
 801071a:	e7fe      	b.n	801071a <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 801071c:	b944      	cbnz	r4, 8010730 <xTaskCreateStatic+0x30>
 801071e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010722:	f383 8811 	msr	BASEPRI, r3
 8010726:	f3bf 8f6f 	isb	sy
 801072a:	f3bf 8f4f 	dsb	sy
 801072e:	e7fe      	b.n	801072e <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8010730:	26c0      	movs	r6, #192	; 0xc0
 8010732:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8010734:	9e05      	ldr	r6, [sp, #20]
 8010736:	2ec0      	cmp	r6, #192	; 0xc0
 8010738:	d008      	beq.n	801074c <xTaskCreateStatic+0x4c>
 801073a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801073e:	f383 8811 	msr	BASEPRI, r3
 8010742:	f3bf 8f6f 	isb	sy
 8010746:	f3bf 8f4f 	dsb	sy
 801074a:	e7fe      	b.n	801074a <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 801074c:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 801074e:	2502      	movs	r5, #2
 8010750:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8010754:	ad04      	add	r5, sp, #16
 8010756:	9501      	str	r5, [sp, #4]
 8010758:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801075a:	9402      	str	r4, [sp, #8]
 801075c:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 801075e:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8010760:	f7ff ff6c 	bl	801063c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8010764:	4620      	mov	r0, r4
 8010766:	f7ff fe35 	bl	80103d4 <prvAddNewTaskToReadyList>
	}
 801076a:	9804      	ldr	r0, [sp, #16]
 801076c:	b006      	add	sp, #24
 801076e:	bd70      	pop	{r4, r5, r6, pc}

08010770 <xTaskCreate>:
	{
 8010770:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010774:	4607      	mov	r7, r0
 8010776:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8010778:	0090      	lsls	r0, r2, #2
	{
 801077a:	4688      	mov	r8, r1
 801077c:	4616      	mov	r6, r2
 801077e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8010780:	f7fe fe70 	bl	800f464 <pvPortMalloc>
			if( pxStack != NULL )
 8010784:	4605      	mov	r5, r0
 8010786:	b1e8      	cbz	r0, 80107c4 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8010788:	20c0      	movs	r0, #192	; 0xc0
 801078a:	f7fe fe6b 	bl	800f464 <pvPortMalloc>
				if( pxNewTCB != NULL )
 801078e:	4604      	mov	r4, r0
 8010790:	b1a8      	cbz	r0, 80107be <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8010792:	2300      	movs	r3, #0
 8010794:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8010798:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 801079a:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 801079c:	9301      	str	r3, [sp, #4]
 801079e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80107a0:	9002      	str	r0, [sp, #8]
 80107a2:	9300      	str	r3, [sp, #0]
 80107a4:	4632      	mov	r2, r6
 80107a6:	464b      	mov	r3, r9
 80107a8:	4641      	mov	r1, r8
 80107aa:	4638      	mov	r0, r7
 80107ac:	f7ff ff46 	bl	801063c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80107b0:	4620      	mov	r0, r4
 80107b2:	f7ff fe0f 	bl	80103d4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80107b6:	2001      	movs	r0, #1
	}
 80107b8:	b005      	add	sp, #20
 80107ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 80107be:	4628      	mov	r0, r5
 80107c0:	f7fe fee2 	bl	800f588 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80107c4:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 80107c8:	e7f6      	b.n	80107b8 <xTaskCreate+0x48>
	...

080107cc <vTaskResume>:
	{
 80107cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
		configASSERT( xTaskToResume );
 80107ce:	4604      	mov	r4, r0
 80107d0:	b940      	cbnz	r0, 80107e4 <vTaskResume+0x18>
 80107d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80107d6:	f383 8811 	msr	BASEPRI, r3
 80107da:	f3bf 8f6f 	isb	sy
 80107de:	f3bf 8f4f 	dsb	sy
 80107e2:	e7fe      	b.n	80107e2 <vTaskResume+0x16>
		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
 80107e4:	4d18      	ldr	r5, [pc, #96]	; (8010848 <vTaskResume+0x7c>)
 80107e6:	682b      	ldr	r3, [r5, #0]
 80107e8:	4283      	cmp	r3, r0
 80107ea:	d02b      	beq.n	8010844 <vTaskResume+0x78>
			taskENTER_CRITICAL();
 80107ec:	f7fe ffb2 	bl	800f754 <vPortEnterCritical>
				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
 80107f0:	4620      	mov	r0, r4
 80107f2:	f7ff fea7 	bl	8010544 <prvTaskIsTaskSuspended>
 80107f6:	b300      	cbz	r0, 801083a <vTaskResume+0x6e>
					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
 80107f8:	1d21      	adds	r1, r4, #4
 80107fa:	4608      	mov	r0, r1
 80107fc:	9101      	str	r1, [sp, #4]
 80107fe:	f7fe ff2c 	bl	800f65a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8010802:	4a12      	ldr	r2, [pc, #72]	; (801084c <vTaskResume+0x80>)
 8010804:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010806:	6810      	ldr	r0, [r2, #0]
 8010808:	9901      	ldr	r1, [sp, #4]
 801080a:	4283      	cmp	r3, r0
 801080c:	bf88      	it	hi
 801080e:	6013      	strhi	r3, [r2, #0]
 8010810:	4a0f      	ldr	r2, [pc, #60]	; (8010850 <vTaskResume+0x84>)
 8010812:	2014      	movs	r0, #20
 8010814:	fb00 2003 	mla	r0, r0, r3, r2
 8010818:	f7fe fefc 	bl	800f614 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 801081c:	682b      	ldr	r3, [r5, #0]
 801081e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010820:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010822:	429a      	cmp	r2, r3
 8010824:	d309      	bcc.n	801083a <vTaskResume+0x6e>
						taskYIELD_IF_USING_PREEMPTION();
 8010826:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801082a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801082e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010832:	f3bf 8f4f 	dsb	sy
 8010836:	f3bf 8f6f 	isb	sy
	}
 801083a:	b003      	add	sp, #12
 801083c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
			taskEXIT_CRITICAL();
 8010840:	f7fe bfa8 	b.w	800f794 <vPortExitCritical>
	}
 8010844:	b003      	add	sp, #12
 8010846:	bd30      	pop	{r4, r5, pc}
 8010848:	2001db8c 	.word	0x2001db8c
 801084c:	2001e00c 	.word	0x2001e00c
 8010850:	2001db98 	.word	0x2001db98

08010854 <vTaskStartScheduler>:
{
 8010854:	b510      	push	{r4, lr}
 8010856:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8010858:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 801085a:	aa07      	add	r2, sp, #28
 801085c:	a906      	add	r1, sp, #24
 801085e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8010860:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8010864:	f7fe fdc2 	bl	800f3ec <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8010868:	9b05      	ldr	r3, [sp, #20]
 801086a:	9302      	str	r3, [sp, #8]
 801086c:	9b06      	ldr	r3, [sp, #24]
 801086e:	9a07      	ldr	r2, [sp, #28]
 8010870:	4919      	ldr	r1, [pc, #100]	; (80108d8 <vTaskStartScheduler+0x84>)
 8010872:	481a      	ldr	r0, [pc, #104]	; (80108dc <vTaskStartScheduler+0x88>)
 8010874:	e9cd 4300 	strd	r4, r3, [sp]
 8010878:	4623      	mov	r3, r4
 801087a:	f7ff ff41 	bl	8010700 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 801087e:	b340      	cbz	r0, 80108d2 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8010880:	f000 fc1e 	bl	80110c0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8010884:	2801      	cmp	r0, #1
 8010886:	d119      	bne.n	80108bc <vTaskStartScheduler+0x68>
 8010888:	f04f 0350 	mov.w	r3, #80	; 0x50
 801088c:	f383 8811 	msr	BASEPRI, r3
 8010890:	f3bf 8f6f 	isb	sy
 8010894:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8010898:	4b11      	ldr	r3, [pc, #68]	; (80108e0 <vTaskStartScheduler+0x8c>)
 801089a:	4a12      	ldr	r2, [pc, #72]	; (80108e4 <vTaskStartScheduler+0x90>)
 801089c:	681b      	ldr	r3, [r3, #0]
 801089e:	3358      	adds	r3, #88	; 0x58
 80108a0:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 80108a2:	4b11      	ldr	r3, [pc, #68]	; (80108e8 <vTaskStartScheduler+0x94>)
 80108a4:	f04f 32ff 	mov.w	r2, #4294967295
 80108a8:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80108aa:	4b10      	ldr	r3, [pc, #64]	; (80108ec <vTaskStartScheduler+0x98>)
 80108ac:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80108ae:	4b10      	ldr	r3, [pc, #64]	; (80108f0 <vTaskStartScheduler+0x9c>)
 80108b0:	601c      	str	r4, [r3, #0]
}
 80108b2:	b008      	add	sp, #32
 80108b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 80108b8:	f7fe bfdc 	b.w	800f874 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80108bc:	3001      	adds	r0, #1
 80108be:	d108      	bne.n	80108d2 <vTaskStartScheduler+0x7e>
 80108c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80108c4:	f383 8811 	msr	BASEPRI, r3
 80108c8:	f3bf 8f6f 	isb	sy
 80108cc:	f3bf 8f4f 	dsb	sy
 80108d0:	e7fe      	b.n	80108d0 <vTaskStartScheduler+0x7c>
}
 80108d2:	b008      	add	sp, #32
 80108d4:	bd10      	pop	{r4, pc}
 80108d6:	bf00      	nop
 80108d8:	08032a74 	.word	0x08032a74
 80108dc:	080105dd 	.word	0x080105dd
 80108e0:	2001db8c 	.word	0x2001db8c
 80108e4:	20000114 	.word	0x20000114
 80108e8:	2001e038 	.word	0x2001e038
 80108ec:	2001e054 	.word	0x2001e054
 80108f0:	2001e080 	.word	0x2001e080

080108f4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80108f4:	4a02      	ldr	r2, [pc, #8]	; (8010900 <vTaskSuspendAll+0xc>)
 80108f6:	6813      	ldr	r3, [r2, #0]
 80108f8:	3301      	adds	r3, #1
 80108fa:	6013      	str	r3, [r2, #0]
}
 80108fc:	4770      	bx	lr
 80108fe:	bf00      	nop
 8010900:	2001e004 	.word	0x2001e004

08010904 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8010904:	4b01      	ldr	r3, [pc, #4]	; (801090c <xTaskGetTickCount+0x8>)
 8010906:	6818      	ldr	r0, [r3, #0]
}
 8010908:	4770      	bx	lr
 801090a:	bf00      	nop
 801090c:	2001e080 	.word	0x2001e080

08010910 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010910:	4b3f      	ldr	r3, [pc, #252]	; (8010a10 <xTaskIncrementTick+0x100>)
 8010912:	681b      	ldr	r3, [r3, #0]
{
 8010914:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010918:	2b00      	cmp	r3, #0
 801091a:	d173      	bne.n	8010a04 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 801091c:	4b3d      	ldr	r3, [pc, #244]	; (8010a14 <xTaskIncrementTick+0x104>)
 801091e:	681d      	ldr	r5, [r3, #0]
 8010920:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8010922:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8010924:	b9bd      	cbnz	r5, 8010956 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8010926:	4b3c      	ldr	r3, [pc, #240]	; (8010a18 <xTaskIncrementTick+0x108>)
 8010928:	681a      	ldr	r2, [r3, #0]
 801092a:	6812      	ldr	r2, [r2, #0]
 801092c:	b142      	cbz	r2, 8010940 <xTaskIncrementTick+0x30>
 801092e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010932:	f383 8811 	msr	BASEPRI, r3
 8010936:	f3bf 8f6f 	isb	sy
 801093a:	f3bf 8f4f 	dsb	sy
 801093e:	e7fe      	b.n	801093e <xTaskIncrementTick+0x2e>
 8010940:	4a36      	ldr	r2, [pc, #216]	; (8010a1c <xTaskIncrementTick+0x10c>)
 8010942:	6819      	ldr	r1, [r3, #0]
 8010944:	6810      	ldr	r0, [r2, #0]
 8010946:	6018      	str	r0, [r3, #0]
 8010948:	6011      	str	r1, [r2, #0]
 801094a:	4a35      	ldr	r2, [pc, #212]	; (8010a20 <xTaskIncrementTick+0x110>)
 801094c:	6813      	ldr	r3, [r2, #0]
 801094e:	3301      	adds	r3, #1
 8010950:	6013      	str	r3, [r2, #0]
 8010952:	f7ff fe13 	bl	801057c <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8010956:	4e33      	ldr	r6, [pc, #204]	; (8010a24 <xTaskIncrementTick+0x114>)
 8010958:	4f33      	ldr	r7, [pc, #204]	; (8010a28 <xTaskIncrementTick+0x118>)
 801095a:	6833      	ldr	r3, [r6, #0]
 801095c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8010a34 <xTaskIncrementTick+0x124>
 8010960:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8010962:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8010966:	d911      	bls.n	801098c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8010968:	f8d8 3000 	ldr.w	r3, [r8]
 801096c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801096e:	2214      	movs	r2, #20
 8010970:	4353      	muls	r3, r2
 8010972:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8010974:	2b02      	cmp	r3, #2
 8010976:	bf28      	it	cs
 8010978:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 801097a:	4b2c      	ldr	r3, [pc, #176]	; (8010a2c <xTaskIncrementTick+0x11c>)
 801097c:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 801097e:	2b00      	cmp	r3, #0
}
 8010980:	bf0c      	ite	eq
 8010982:	4620      	moveq	r0, r4
 8010984:	2001      	movne	r0, #1
 8010986:	b003      	add	sp, #12
 8010988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801098c:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8010a18 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8010990:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8010a38 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8010994:	f8d9 3000 	ldr.w	r3, [r9]
 8010998:	681b      	ldr	r3, [r3, #0]
 801099a:	b91b      	cbnz	r3, 80109a4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801099c:	f04f 33ff 	mov.w	r3, #4294967295
 80109a0:	6033      	str	r3, [r6, #0]
					break;
 80109a2:	e7e1      	b.n	8010968 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80109a4:	f8d9 3000 	ldr.w	r3, [r9]
 80109a8:	68db      	ldr	r3, [r3, #12]
 80109aa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80109ae:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 80109b2:	4295      	cmp	r5, r2
 80109b4:	d201      	bcs.n	80109ba <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 80109b6:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80109b8:	e7d6      	b.n	8010968 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80109ba:	f10b 0104 	add.w	r1, fp, #4
 80109be:	4608      	mov	r0, r1
 80109c0:	9101      	str	r1, [sp, #4]
 80109c2:	f7fe fe4a 	bl	800f65a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80109c6:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 80109ca:	9901      	ldr	r1, [sp, #4]
 80109cc:	b122      	cbz	r2, 80109d8 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80109ce:	f10b 0018 	add.w	r0, fp, #24
 80109d2:	f7fe fe42 	bl	800f65a <uxListRemove>
 80109d6:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 80109d8:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 80109dc:	f8da 2000 	ldr.w	r2, [sl]
 80109e0:	2314      	movs	r3, #20
 80109e2:	4290      	cmp	r0, r2
 80109e4:	bf88      	it	hi
 80109e6:	f8ca 0000 	strhi.w	r0, [sl]
 80109ea:	fb03 7000 	mla	r0, r3, r0, r7
 80109ee:	f7fe fe11 	bl	800f614 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80109f2:	f8d8 1000 	ldr.w	r1, [r8]
 80109f6:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 80109fa:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 80109fc:	429a      	cmp	r2, r3
 80109fe:	bf28      	it	cs
 8010a00:	2401      	movcs	r4, #1
 8010a02:	e7c7      	b.n	8010994 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8010a04:	4a0a      	ldr	r2, [pc, #40]	; (8010a30 <xTaskIncrementTick+0x120>)
 8010a06:	6813      	ldr	r3, [r2, #0]
 8010a08:	3301      	adds	r3, #1
 8010a0a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8010a0c:	2400      	movs	r4, #0
 8010a0e:	e7b4      	b.n	801097a <xTaskIncrementTick+0x6a>
 8010a10:	2001e004 	.word	0x2001e004
 8010a14:	2001e080 	.word	0x2001e080
 8010a18:	2001db90 	.word	0x2001db90
 8010a1c:	2001db94 	.word	0x2001db94
 8010a20:	2001e03c 	.word	0x2001e03c
 8010a24:	2001e038 	.word	0x2001e038
 8010a28:	2001db98 	.word	0x2001db98
 8010a2c:	2001e084 	.word	0x2001e084
 8010a30:	2001e000 	.word	0x2001e000
 8010a34:	2001db8c 	.word	0x2001db8c
 8010a38:	2001e00c 	.word	0x2001e00c

08010a3c <xTaskResumeAll>:
{
 8010a3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8010a3e:	4c31      	ldr	r4, [pc, #196]	; (8010b04 <xTaskResumeAll+0xc8>)
 8010a40:	6823      	ldr	r3, [r4, #0]
 8010a42:	b943      	cbnz	r3, 8010a56 <xTaskResumeAll+0x1a>
 8010a44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a48:	f383 8811 	msr	BASEPRI, r3
 8010a4c:	f3bf 8f6f 	isb	sy
 8010a50:	f3bf 8f4f 	dsb	sy
 8010a54:	e7fe      	b.n	8010a54 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8010a56:	f7fe fe7d 	bl	800f754 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8010a5a:	6823      	ldr	r3, [r4, #0]
 8010a5c:	3b01      	subs	r3, #1
 8010a5e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010a60:	6824      	ldr	r4, [r4, #0]
 8010a62:	b12c      	cbz	r4, 8010a70 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8010a64:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8010a66:	f7fe fe95 	bl	800f794 <vPortExitCritical>
}
 8010a6a:	4620      	mov	r0, r4
 8010a6c:	b003      	add	sp, #12
 8010a6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8010a70:	4b25      	ldr	r3, [pc, #148]	; (8010b08 <xTaskResumeAll+0xcc>)
 8010a72:	681b      	ldr	r3, [r3, #0]
 8010a74:	2b00      	cmp	r3, #0
 8010a76:	d0f5      	beq.n	8010a64 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8010a78:	4d24      	ldr	r5, [pc, #144]	; (8010b0c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8010a7a:	4e25      	ldr	r6, [pc, #148]	; (8010b10 <xTaskResumeAll+0xd4>)
 8010a7c:	4f25      	ldr	r7, [pc, #148]	; (8010b14 <xTaskResumeAll+0xd8>)
 8010a7e:	e01e      	b.n	8010abe <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010a80:	68eb      	ldr	r3, [r5, #12]
 8010a82:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8010a84:	f104 0018 	add.w	r0, r4, #24
 8010a88:	f7fe fde7 	bl	800f65a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8010a8c:	1d21      	adds	r1, r4, #4
 8010a8e:	4608      	mov	r0, r1
 8010a90:	9101      	str	r1, [sp, #4]
 8010a92:	f7fe fde2 	bl	800f65a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8010a96:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010a98:	6832      	ldr	r2, [r6, #0]
 8010a9a:	9901      	ldr	r1, [sp, #4]
 8010a9c:	2014      	movs	r0, #20
 8010a9e:	4293      	cmp	r3, r2
 8010aa0:	fb00 7003 	mla	r0, r0, r3, r7
 8010aa4:	bf88      	it	hi
 8010aa6:	6033      	strhi	r3, [r6, #0]
 8010aa8:	f7fe fdb4 	bl	800f614 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8010aac:	4b1a      	ldr	r3, [pc, #104]	; (8010b18 <xTaskResumeAll+0xdc>)
 8010aae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010ab0:	681b      	ldr	r3, [r3, #0]
 8010ab2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ab4:	429a      	cmp	r2, r3
 8010ab6:	d302      	bcc.n	8010abe <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8010ab8:	4b18      	ldr	r3, [pc, #96]	; (8010b1c <xTaskResumeAll+0xe0>)
 8010aba:	2201      	movs	r2, #1
 8010abc:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8010abe:	682b      	ldr	r3, [r5, #0]
 8010ac0:	2b00      	cmp	r3, #0
 8010ac2:	d1dd      	bne.n	8010a80 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8010ac4:	b10c      	cbz	r4, 8010aca <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8010ac6:	f7ff fd59 	bl	801057c <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8010aca:	4d15      	ldr	r5, [pc, #84]	; (8010b20 <xTaskResumeAll+0xe4>)
 8010acc:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8010ace:	b144      	cbz	r4, 8010ae2 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8010ad0:	4e12      	ldr	r6, [pc, #72]	; (8010b1c <xTaskResumeAll+0xe0>)
 8010ad2:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8010ad4:	f7ff ff1c 	bl	8010910 <xTaskIncrementTick>
 8010ad8:	b100      	cbz	r0, 8010adc <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8010ada:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8010adc:	3c01      	subs	r4, #1
 8010ade:	d1f9      	bne.n	8010ad4 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8010ae0:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8010ae2:	4b0e      	ldr	r3, [pc, #56]	; (8010b1c <xTaskResumeAll+0xe0>)
 8010ae4:	681b      	ldr	r3, [r3, #0]
 8010ae6:	2b00      	cmp	r3, #0
 8010ae8:	d0bc      	beq.n	8010a64 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8010aea:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010aee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010af2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010af6:	f3bf 8f4f 	dsb	sy
 8010afa:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8010afe:	2401      	movs	r4, #1
 8010b00:	e7b1      	b.n	8010a66 <xTaskResumeAll+0x2a>
 8010b02:	bf00      	nop
 8010b04:	2001e004 	.word	0x2001e004
 8010b08:	2001dff8 	.word	0x2001dff8
 8010b0c:	2001e040 	.word	0x2001e040
 8010b10:	2001e00c 	.word	0x2001e00c
 8010b14:	2001db98 	.word	0x2001db98
 8010b18:	2001db8c 	.word	0x2001db8c
 8010b1c:	2001e084 	.word	0x2001e084
 8010b20:	2001e000 	.word	0x2001e000

08010b24 <vTaskDelay>:
	{
 8010b24:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8010b26:	b950      	cbnz	r0, 8010b3e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8010b28:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010b2c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010b30:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010b34:	f3bf 8f4f 	dsb	sy
 8010b38:	f3bf 8f6f 	isb	sy
	}
 8010b3c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8010b3e:	4b0a      	ldr	r3, [pc, #40]	; (8010b68 <vTaskDelay+0x44>)
 8010b40:	6819      	ldr	r1, [r3, #0]
 8010b42:	b141      	cbz	r1, 8010b56 <vTaskDelay+0x32>
 8010b44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b48:	f383 8811 	msr	BASEPRI, r3
 8010b4c:	f3bf 8f6f 	isb	sy
 8010b50:	f3bf 8f4f 	dsb	sy
 8010b54:	e7fe      	b.n	8010b54 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8010b56:	f7ff fecd 	bl	80108f4 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8010b5a:	f7ff fcbb 	bl	80104d4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8010b5e:	f7ff ff6d 	bl	8010a3c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8010b62:	2800      	cmp	r0, #0
 8010b64:	d0e0      	beq.n	8010b28 <vTaskDelay+0x4>
 8010b66:	e7e9      	b.n	8010b3c <vTaskDelay+0x18>
 8010b68:	2001e004 	.word	0x2001e004

08010b6c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8010b6c:	4b19      	ldr	r3, [pc, #100]	; (8010bd4 <vTaskSwitchContext+0x68>)
 8010b6e:	681a      	ldr	r2, [r3, #0]
 8010b70:	4b19      	ldr	r3, [pc, #100]	; (8010bd8 <vTaskSwitchContext+0x6c>)
{
 8010b72:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8010b74:	b112      	cbz	r2, 8010b7c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8010b76:	2201      	movs	r2, #1
 8010b78:	601a      	str	r2, [r3, #0]
}
 8010b7a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010b7c:	4d17      	ldr	r5, [pc, #92]	; (8010bdc <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 8010b7e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010b80:	682a      	ldr	r2, [r5, #0]
 8010b82:	4917      	ldr	r1, [pc, #92]	; (8010be0 <vTaskSwitchContext+0x74>)
 8010b84:	2614      	movs	r6, #20
 8010b86:	fb06 f302 	mul.w	r3, r6, r2
 8010b8a:	18c8      	adds	r0, r1, r3
 8010b8c:	58cc      	ldr	r4, [r1, r3]
 8010b8e:	b1ac      	cbz	r4, 8010bbc <vTaskSwitchContext+0x50>
 8010b90:	6844      	ldr	r4, [r0, #4]
 8010b92:	3308      	adds	r3, #8
 8010b94:	6864      	ldr	r4, [r4, #4]
 8010b96:	6044      	str	r4, [r0, #4]
 8010b98:	440b      	add	r3, r1
 8010b9a:	429c      	cmp	r4, r3
 8010b9c:	bf04      	itt	eq
 8010b9e:	6863      	ldreq	r3, [r4, #4]
 8010ba0:	6043      	streq	r3, [r0, #4]
 8010ba2:	2314      	movs	r3, #20
 8010ba4:	fb03 1102 	mla	r1, r3, r2, r1
 8010ba8:	684b      	ldr	r3, [r1, #4]
 8010baa:	68d9      	ldr	r1, [r3, #12]
 8010bac:	4b0d      	ldr	r3, [pc, #52]	; (8010be4 <vTaskSwitchContext+0x78>)
 8010bae:	6019      	str	r1, [r3, #0]
 8010bb0:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8010bb2:	681b      	ldr	r3, [r3, #0]
 8010bb4:	4a0c      	ldr	r2, [pc, #48]	; (8010be8 <vTaskSwitchContext+0x7c>)
 8010bb6:	3358      	adds	r3, #88	; 0x58
 8010bb8:	6013      	str	r3, [r2, #0]
}
 8010bba:	e7de      	b.n	8010b7a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010bbc:	b942      	cbnz	r2, 8010bd0 <vTaskSwitchContext+0x64>
 8010bbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010bc2:	f383 8811 	msr	BASEPRI, r3
 8010bc6:	f3bf 8f6f 	isb	sy
 8010bca:	f3bf 8f4f 	dsb	sy
 8010bce:	e7fe      	b.n	8010bce <vTaskSwitchContext+0x62>
 8010bd0:	3a01      	subs	r2, #1
 8010bd2:	e7d8      	b.n	8010b86 <vTaskSwitchContext+0x1a>
 8010bd4:	2001e004 	.word	0x2001e004
 8010bd8:	2001e084 	.word	0x2001e084
 8010bdc:	2001e00c 	.word	0x2001e00c
 8010be0:	2001db98 	.word	0x2001db98
 8010be4:	2001db8c 	.word	0x2001db8c
 8010be8:	20000114 	.word	0x20000114

08010bec <vTaskSuspend>:
	{
 8010bec:	b570      	push	{r4, r5, r6, lr}
 8010bee:	4604      	mov	r4, r0
 8010bf0:	4d26      	ldr	r5, [pc, #152]	; (8010c8c <vTaskSuspend+0xa0>)
		taskENTER_CRITICAL();
 8010bf2:	f7fe fdaf 	bl	800f754 <vPortEnterCritical>
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
 8010bf6:	b904      	cbnz	r4, 8010bfa <vTaskSuspend+0xe>
 8010bf8:	682c      	ldr	r4, [r5, #0]
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010bfa:	1d26      	adds	r6, r4, #4
 8010bfc:	4630      	mov	r0, r6
 8010bfe:	f7fe fd2c 	bl	800f65a <uxListRemove>
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8010c02:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8010c04:	b11b      	cbz	r3, 8010c0e <vTaskSuspend+0x22>
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8010c06:	f104 0018 	add.w	r0, r4, #24
 8010c0a:	f7fe fd26 	bl	800f65a <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
 8010c0e:	4631      	mov	r1, r6
 8010c10:	481f      	ldr	r0, [pc, #124]	; (8010c90 <vTaskSuspend+0xa4>)
		if( xSchedulerRunning != pdFALSE )
 8010c12:	4e20      	ldr	r6, [pc, #128]	; (8010c94 <vTaskSuspend+0xa8>)
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
 8010c14:	f7fe fcfe 	bl	800f614 <vListInsertEnd>
				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 8010c18:	f894 30bc 	ldrb.w	r3, [r4, #188]	; 0xbc
 8010c1c:	2b01      	cmp	r3, #1
					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8010c1e:	bf04      	itt	eq
 8010c20:	2300      	moveq	r3, #0
 8010c22:	f884 30bc 	strbeq.w	r3, [r4, #188]	; 0xbc
		taskEXIT_CRITICAL();
 8010c26:	f7fe fdb5 	bl	800f794 <vPortExitCritical>
		if( xSchedulerRunning != pdFALSE )
 8010c2a:	6833      	ldr	r3, [r6, #0]
 8010c2c:	b12b      	cbz	r3, 8010c3a <vTaskSuspend+0x4e>
			taskENTER_CRITICAL();
 8010c2e:	f7fe fd91 	bl	800f754 <vPortEnterCritical>
				prvResetNextTaskUnblockTime();
 8010c32:	f7ff fca3 	bl	801057c <prvResetNextTaskUnblockTime>
			taskEXIT_CRITICAL();
 8010c36:	f7fe fdad 	bl	800f794 <vPortExitCritical>
		if( pxTCB == pxCurrentTCB )
 8010c3a:	682b      	ldr	r3, [r5, #0]
 8010c3c:	42a3      	cmp	r3, r4
 8010c3e:	d117      	bne.n	8010c70 <vTaskSuspend+0x84>
			if( xSchedulerRunning != pdFALSE )
 8010c40:	6833      	ldr	r3, [r6, #0]
 8010c42:	b1b3      	cbz	r3, 8010c72 <vTaskSuspend+0x86>
				configASSERT( uxSchedulerSuspended == 0 );
 8010c44:	4b14      	ldr	r3, [pc, #80]	; (8010c98 <vTaskSuspend+0xac>)
 8010c46:	681b      	ldr	r3, [r3, #0]
 8010c48:	b143      	cbz	r3, 8010c5c <vTaskSuspend+0x70>
 8010c4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c4e:	f383 8811 	msr	BASEPRI, r3
 8010c52:	f3bf 8f6f 	isb	sy
 8010c56:	f3bf 8f4f 	dsb	sy
 8010c5a:	e7fe      	b.n	8010c5a <vTaskSuspend+0x6e>
				portYIELD_WITHIN_API();
 8010c5c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010c60:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010c64:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010c68:	f3bf 8f4f 	dsb	sy
 8010c6c:	f3bf 8f6f 	isb	sy
	}
 8010c70:	bd70      	pop	{r4, r5, r6, pc}
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Right has no side effect, just volatile. */
 8010c72:	4a07      	ldr	r2, [pc, #28]	; (8010c90 <vTaskSuspend+0xa4>)
 8010c74:	6811      	ldr	r1, [r2, #0]
 8010c76:	4a09      	ldr	r2, [pc, #36]	; (8010c9c <vTaskSuspend+0xb0>)
 8010c78:	6812      	ldr	r2, [r2, #0]
 8010c7a:	4291      	cmp	r1, r2
 8010c7c:	d101      	bne.n	8010c82 <vTaskSuspend+0x96>
					pxCurrentTCB = NULL;
 8010c7e:	602b      	str	r3, [r5, #0]
 8010c80:	e7f6      	b.n	8010c70 <vTaskSuspend+0x84>
	}
 8010c82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					vTaskSwitchContext();
 8010c86:	f7ff bf71 	b.w	8010b6c <vTaskSwitchContext>
 8010c8a:	bf00      	nop
 8010c8c:	2001db8c 	.word	0x2001db8c
 8010c90:	2001e058 	.word	0x2001e058
 8010c94:	2001e054 	.word	0x2001e054
 8010c98:	2001e004 	.word	0x2001e004
 8010c9c:	2001dff8 	.word	0x2001dff8

08010ca0 <vTaskPlaceOnEventList>:
{
 8010ca0:	b510      	push	{r4, lr}
 8010ca2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8010ca4:	b940      	cbnz	r0, 8010cb8 <vTaskPlaceOnEventList+0x18>
 8010ca6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010caa:	f383 8811 	msr	BASEPRI, r3
 8010cae:	f3bf 8f6f 	isb	sy
 8010cb2:	f3bf 8f4f 	dsb	sy
 8010cb6:	e7fe      	b.n	8010cb6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8010cb8:	4b05      	ldr	r3, [pc, #20]	; (8010cd0 <vTaskPlaceOnEventList+0x30>)
 8010cba:	6819      	ldr	r1, [r3, #0]
 8010cbc:	3118      	adds	r1, #24
 8010cbe:	f7fe fcb5 	bl	800f62c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8010cc2:	4620      	mov	r0, r4
 8010cc4:	2101      	movs	r1, #1
}
 8010cc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8010cca:	f7ff bc03 	b.w	80104d4 <prvAddCurrentTaskToDelayedList>
 8010cce:	bf00      	nop
 8010cd0:	2001db8c 	.word	0x2001db8c

08010cd4 <vTaskPlaceOnEventListRestricted>:
	{
 8010cd4:	b538      	push	{r3, r4, r5, lr}
 8010cd6:	460d      	mov	r5, r1
 8010cd8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8010cda:	b940      	cbnz	r0, 8010cee <vTaskPlaceOnEventListRestricted+0x1a>
 8010cdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ce0:	f383 8811 	msr	BASEPRI, r3
 8010ce4:	f3bf 8f6f 	isb	sy
 8010ce8:	f3bf 8f4f 	dsb	sy
 8010cec:	e7fe      	b.n	8010cec <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8010cee:	4b07      	ldr	r3, [pc, #28]	; (8010d0c <vTaskPlaceOnEventListRestricted+0x38>)
 8010cf0:	6819      	ldr	r1, [r3, #0]
 8010cf2:	3118      	adds	r1, #24
 8010cf4:	f7fe fc8e 	bl	800f614 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8010cf8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8010cfa:	4621      	mov	r1, r4
 8010cfc:	bf0c      	ite	eq
 8010cfe:	4628      	moveq	r0, r5
 8010d00:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8010d04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8010d08:	f7ff bbe4 	b.w	80104d4 <prvAddCurrentTaskToDelayedList>
 8010d0c:	2001db8c 	.word	0x2001db8c

08010d10 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010d10:	68c3      	ldr	r3, [r0, #12]
{
 8010d12:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010d14:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8010d16:	b944      	cbnz	r4, 8010d2a <xTaskRemoveFromEventList+0x1a>
 8010d18:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d1c:	f383 8811 	msr	BASEPRI, r3
 8010d20:	f3bf 8f6f 	isb	sy
 8010d24:	f3bf 8f4f 	dsb	sy
 8010d28:	e7fe      	b.n	8010d28 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8010d2a:	f104 0118 	add.w	r1, r4, #24
 8010d2e:	4608      	mov	r0, r1
 8010d30:	9101      	str	r1, [sp, #4]
 8010d32:	f7fe fc92 	bl	800f65a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010d36:	4b12      	ldr	r3, [pc, #72]	; (8010d80 <xTaskRemoveFromEventList+0x70>)
 8010d38:	9901      	ldr	r1, [sp, #4]
 8010d3a:	681b      	ldr	r3, [r3, #0]
 8010d3c:	b9eb      	cbnz	r3, 8010d7a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8010d3e:	1d21      	adds	r1, r4, #4
 8010d40:	4608      	mov	r0, r1
 8010d42:	9101      	str	r1, [sp, #4]
 8010d44:	f7fe fc89 	bl	800f65a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8010d48:	4a0e      	ldr	r2, [pc, #56]	; (8010d84 <xTaskRemoveFromEventList+0x74>)
 8010d4a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010d4c:	6810      	ldr	r0, [r2, #0]
 8010d4e:	9901      	ldr	r1, [sp, #4]
 8010d50:	4283      	cmp	r3, r0
 8010d52:	bf88      	it	hi
 8010d54:	6013      	strhi	r3, [r2, #0]
 8010d56:	4a0c      	ldr	r2, [pc, #48]	; (8010d88 <xTaskRemoveFromEventList+0x78>)
 8010d58:	2014      	movs	r0, #20
 8010d5a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8010d5e:	f7fe fc59 	bl	800f614 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8010d62:	4b0a      	ldr	r3, [pc, #40]	; (8010d8c <xTaskRemoveFromEventList+0x7c>)
 8010d64:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010d66:	681b      	ldr	r3, [r3, #0]
 8010d68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010d6a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8010d6c:	bf85      	ittet	hi
 8010d6e:	4b08      	ldrhi	r3, [pc, #32]	; (8010d90 <xTaskRemoveFromEventList+0x80>)
 8010d70:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8010d72:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8010d74:	6018      	strhi	r0, [r3, #0]
}
 8010d76:	b002      	add	sp, #8
 8010d78:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8010d7a:	4806      	ldr	r0, [pc, #24]	; (8010d94 <xTaskRemoveFromEventList+0x84>)
 8010d7c:	e7ef      	b.n	8010d5e <xTaskRemoveFromEventList+0x4e>
 8010d7e:	bf00      	nop
 8010d80:	2001e004 	.word	0x2001e004
 8010d84:	2001e00c 	.word	0x2001e00c
 8010d88:	2001db98 	.word	0x2001db98
 8010d8c:	2001db8c 	.word	0x2001db8c
 8010d90:	2001e084 	.word	0x2001e084
 8010d94:	2001e040 	.word	0x2001e040

08010d98 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010d98:	4b03      	ldr	r3, [pc, #12]	; (8010da8 <vTaskInternalSetTimeOutState+0x10>)
 8010d9a:	681b      	ldr	r3, [r3, #0]
 8010d9c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010d9e:	4b03      	ldr	r3, [pc, #12]	; (8010dac <vTaskInternalSetTimeOutState+0x14>)
 8010da0:	681b      	ldr	r3, [r3, #0]
 8010da2:	6043      	str	r3, [r0, #4]
}
 8010da4:	4770      	bx	lr
 8010da6:	bf00      	nop
 8010da8:	2001e03c 	.word	0x2001e03c
 8010dac:	2001e080 	.word	0x2001e080

08010db0 <xTaskCheckForTimeOut>:
{
 8010db0:	b570      	push	{r4, r5, r6, lr}
 8010db2:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8010db4:	4605      	mov	r5, r0
 8010db6:	b940      	cbnz	r0, 8010dca <xTaskCheckForTimeOut+0x1a>
 8010db8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010dbc:	f383 8811 	msr	BASEPRI, r3
 8010dc0:	f3bf 8f6f 	isb	sy
 8010dc4:	f3bf 8f4f 	dsb	sy
 8010dc8:	e7fe      	b.n	8010dc8 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8010dca:	b941      	cbnz	r1, 8010dde <xTaskCheckForTimeOut+0x2e>
 8010dcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010dd0:	f383 8811 	msr	BASEPRI, r3
 8010dd4:	f3bf 8f6f 	isb	sy
 8010dd8:	f3bf 8f4f 	dsb	sy
 8010ddc:	e7fe      	b.n	8010ddc <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8010dde:	f7fe fcb9 	bl	800f754 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8010de2:	4b0f      	ldr	r3, [pc, #60]	; (8010e20 <xTaskCheckForTimeOut+0x70>)
 8010de4:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8010de6:	6823      	ldr	r3, [r4, #0]
 8010de8:	1c5a      	adds	r2, r3, #1
 8010dea:	d010      	beq.n	8010e0e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8010dec:	480d      	ldr	r0, [pc, #52]	; (8010e24 <xTaskCheckForTimeOut+0x74>)
 8010dee:	682e      	ldr	r6, [r5, #0]
 8010df0:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8010df2:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8010df4:	4286      	cmp	r6, r0
 8010df6:	d001      	beq.n	8010dfc <xTaskCheckForTimeOut+0x4c>
 8010df8:	428a      	cmp	r2, r1
 8010dfa:	d90f      	bls.n	8010e1c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8010dfc:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8010dfe:	4283      	cmp	r3, r0
 8010e00:	d90a      	bls.n	8010e18 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8010e02:	1a5b      	subs	r3, r3, r1
 8010e04:	4413      	add	r3, r2
 8010e06:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8010e08:	4628      	mov	r0, r5
 8010e0a:	f7ff ffc5 	bl	8010d98 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8010e0e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8010e10:	f7fe fcc0 	bl	800f794 <vPortExitCritical>
}
 8010e14:	4620      	mov	r0, r4
 8010e16:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8010e18:	2300      	movs	r3, #0
 8010e1a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8010e1c:	2401      	movs	r4, #1
 8010e1e:	e7f7      	b.n	8010e10 <xTaskCheckForTimeOut+0x60>
 8010e20:	2001e080 	.word	0x2001e080
 8010e24:	2001e03c 	.word	0x2001e03c

08010e28 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8010e28:	4b01      	ldr	r3, [pc, #4]	; (8010e30 <vTaskMissedYield+0x8>)
 8010e2a:	2201      	movs	r2, #1
 8010e2c:	601a      	str	r2, [r3, #0]
}
 8010e2e:	4770      	bx	lr
 8010e30:	2001e084 	.word	0x2001e084

08010e34 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8010e34:	4b05      	ldr	r3, [pc, #20]	; (8010e4c <xTaskGetSchedulerState+0x18>)
 8010e36:	681b      	ldr	r3, [r3, #0]
 8010e38:	b133      	cbz	r3, 8010e48 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010e3a:	4b05      	ldr	r3, [pc, #20]	; (8010e50 <xTaskGetSchedulerState+0x1c>)
 8010e3c:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 8010e3e:	2b00      	cmp	r3, #0
 8010e40:	bf0c      	ite	eq
 8010e42:	2002      	moveq	r0, #2
 8010e44:	2000      	movne	r0, #0
 8010e46:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8010e48:	2001      	movs	r0, #1
	}
 8010e4a:	4770      	bx	lr
 8010e4c:	2001e054 	.word	0x2001e054
 8010e50:	2001e004 	.word	0x2001e004

08010e54 <xTaskPriorityInherit>:
	{
 8010e54:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8010e56:	4604      	mov	r4, r0
 8010e58:	b348      	cbz	r0, 8010eae <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8010e5a:	4d1c      	ldr	r5, [pc, #112]	; (8010ecc <xTaskPriorityInherit+0x78>)
 8010e5c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010e5e:	682a      	ldr	r2, [r5, #0]
 8010e60:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8010e62:	4293      	cmp	r3, r2
 8010e64:	d229      	bcs.n	8010eba <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010e66:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8010e68:	4e19      	ldr	r6, [pc, #100]	; (8010ed0 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010e6a:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010e6c:	bfa1      	itttt	ge
 8010e6e:	682a      	ldrge	r2, [r5, #0]
 8010e70:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8010e72:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8010e76:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8010e78:	2214      	movs	r2, #20
 8010e7a:	fb02 6303 	mla	r3, r2, r3, r6
 8010e7e:	6942      	ldr	r2, [r0, #20]
 8010e80:	429a      	cmp	r2, r3
 8010e82:	d116      	bne.n	8010eb2 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010e84:	1d01      	adds	r1, r0, #4
 8010e86:	4608      	mov	r0, r1
 8010e88:	9101      	str	r1, [sp, #4]
 8010e8a:	f7fe fbe6 	bl	800f65a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010e8e:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010e90:	4a10      	ldr	r2, [pc, #64]	; (8010ed4 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010e92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010e94:	6810      	ldr	r0, [r2, #0]
 8010e96:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010e98:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010e9a:	4283      	cmp	r3, r0
 8010e9c:	f04f 0014 	mov.w	r0, #20
 8010ea0:	fb00 6003 	mla	r0, r0, r3, r6
 8010ea4:	bf88      	it	hi
 8010ea6:	6013      	strhi	r3, [r2, #0]
 8010ea8:	f7fe fbb4 	bl	800f614 <vListInsertEnd>
				xReturn = pdTRUE;
 8010eac:	2001      	movs	r0, #1
	}
 8010eae:	b002      	add	sp, #8
 8010eb0:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010eb2:	682b      	ldr	r3, [r5, #0]
 8010eb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010eb6:	62c3      	str	r3, [r0, #44]	; 0x2c
 8010eb8:	e7f8      	b.n	8010eac <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8010eba:	682b      	ldr	r3, [r5, #0]
 8010ebc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8010ebe:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8010ec0:	42a0      	cmp	r0, r4
 8010ec2:	bf2c      	ite	cs
 8010ec4:	2000      	movcs	r0, #0
 8010ec6:	2001      	movcc	r0, #1
 8010ec8:	e7f1      	b.n	8010eae <xTaskPriorityInherit+0x5a>
 8010eca:	bf00      	nop
 8010ecc:	2001db8c 	.word	0x2001db8c
 8010ed0:	2001db98 	.word	0x2001db98
 8010ed4:	2001e00c 	.word	0x2001e00c

08010ed8 <xTaskPriorityDisinherit>:
	{
 8010ed8:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8010eda:	b910      	cbnz	r0, 8010ee2 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8010edc:	2000      	movs	r0, #0
	}
 8010ede:	b002      	add	sp, #8
 8010ee0:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8010ee2:	4b1c      	ldr	r3, [pc, #112]	; (8010f54 <xTaskPriorityDisinherit+0x7c>)
 8010ee4:	681c      	ldr	r4, [r3, #0]
 8010ee6:	4284      	cmp	r4, r0
 8010ee8:	d008      	beq.n	8010efc <xTaskPriorityDisinherit+0x24>
 8010eea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010eee:	f383 8811 	msr	BASEPRI, r3
 8010ef2:	f3bf 8f6f 	isb	sy
 8010ef6:	f3bf 8f4f 	dsb	sy
 8010efa:	e7fe      	b.n	8010efa <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8010efc:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8010efe:	b943      	cbnz	r3, 8010f12 <xTaskPriorityDisinherit+0x3a>
 8010f00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f04:	f383 8811 	msr	BASEPRI, r3
 8010f08:	f3bf 8f6f 	isb	sy
 8010f0c:	f3bf 8f4f 	dsb	sy
 8010f10:	e7fe      	b.n	8010f10 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8010f12:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8010f14:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8010f16:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8010f18:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8010f1a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8010f1c:	d0de      	beq.n	8010edc <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8010f1e:	2b00      	cmp	r3, #0
 8010f20:	d1dc      	bne.n	8010edc <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010f22:	1d21      	adds	r1, r4, #4
 8010f24:	4608      	mov	r0, r1
 8010f26:	9101      	str	r1, [sp, #4]
 8010f28:	f7fe fb97 	bl	800f65a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8010f2c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8010f2e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8010f30:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010f32:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8010f36:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8010f38:	4a07      	ldr	r2, [pc, #28]	; (8010f58 <xTaskPriorityDisinherit+0x80>)
 8010f3a:	6810      	ldr	r0, [r2, #0]
 8010f3c:	4283      	cmp	r3, r0
 8010f3e:	bf88      	it	hi
 8010f40:	6013      	strhi	r3, [r2, #0]
 8010f42:	4a06      	ldr	r2, [pc, #24]	; (8010f5c <xTaskPriorityDisinherit+0x84>)
 8010f44:	2014      	movs	r0, #20
 8010f46:	fb00 2003 	mla	r0, r0, r3, r2
 8010f4a:	f7fe fb63 	bl	800f614 <vListInsertEnd>
					xReturn = pdTRUE;
 8010f4e:	2001      	movs	r0, #1
		return xReturn;
 8010f50:	e7c5      	b.n	8010ede <xTaskPriorityDisinherit+0x6>
 8010f52:	bf00      	nop
 8010f54:	2001db8c 	.word	0x2001db8c
 8010f58:	2001e00c 	.word	0x2001e00c
 8010f5c:	2001db98 	.word	0x2001db98

08010f60 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8010f60:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8010f62:	4604      	mov	r4, r0
 8010f64:	2800      	cmp	r0, #0
 8010f66:	d044      	beq.n	8010ff2 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8010f68:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8010f6a:	b942      	cbnz	r2, 8010f7e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8010f6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f70:	f383 8811 	msr	BASEPRI, r3
 8010f74:	f3bf 8f6f 	isb	sy
 8010f78:	f3bf 8f4f 	dsb	sy
 8010f7c:	e7fe      	b.n	8010f7c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8010f7e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8010f80:	4299      	cmp	r1, r3
 8010f82:	bf38      	it	cc
 8010f84:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8010f86:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010f88:	428b      	cmp	r3, r1
 8010f8a:	d032      	beq.n	8010ff2 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8010f8c:	2a01      	cmp	r2, #1
 8010f8e:	d130      	bne.n	8010ff2 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8010f90:	4a19      	ldr	r2, [pc, #100]	; (8010ff8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8010f92:	6812      	ldr	r2, [r2, #0]
 8010f94:	4282      	cmp	r2, r0
 8010f96:	d108      	bne.n	8010faa <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8010f98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f9c:	f383 8811 	msr	BASEPRI, r3
 8010fa0:	f3bf 8f6f 	isb	sy
 8010fa4:	f3bf 8f4f 	dsb	sy
 8010fa8:	e7fe      	b.n	8010fa8 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010faa:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010fac:	4d13      	ldr	r5, [pc, #76]	; (8010ffc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8010fae:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010fb0:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010fb2:	f04f 0214 	mov.w	r2, #20
 8010fb6:	fb02 5303 	mla	r3, r2, r3, r5
 8010fba:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010fbc:	bfa4      	itt	ge
 8010fbe:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8010fc2:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010fc4:	429a      	cmp	r2, r3
 8010fc6:	d114      	bne.n	8010ff2 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010fc8:	1d01      	adds	r1, r0, #4
 8010fca:	4608      	mov	r0, r1
 8010fcc:	9101      	str	r1, [sp, #4]
 8010fce:	f7fe fb44 	bl	800f65a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8010fd2:	4a0b      	ldr	r2, [pc, #44]	; (8011000 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8010fd4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010fd6:	6810      	ldr	r0, [r2, #0]
 8010fd8:	9901      	ldr	r1, [sp, #4]
 8010fda:	4283      	cmp	r3, r0
 8010fdc:	f04f 0014 	mov.w	r0, #20
 8010fe0:	fb00 5003 	mla	r0, r0, r3, r5
 8010fe4:	bf88      	it	hi
 8010fe6:	6013      	strhi	r3, [r2, #0]
	}
 8010fe8:	b003      	add	sp, #12
 8010fea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8010fee:	f7fe bb11 	b.w	800f614 <vListInsertEnd>
	}
 8010ff2:	b003      	add	sp, #12
 8010ff4:	bd30      	pop	{r4, r5, pc}
 8010ff6:	bf00      	nop
 8010ff8:	2001db8c 	.word	0x2001db8c
 8010ffc:	2001db98 	.word	0x2001db98
 8011000:	2001e00c 	.word	0x2001e00c

08011004 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8011004:	4b04      	ldr	r3, [pc, #16]	; (8011018 <pvTaskIncrementMutexHeldCount+0x14>)
 8011006:	681a      	ldr	r2, [r3, #0]
 8011008:	b11a      	cbz	r2, 8011012 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 801100a:	6819      	ldr	r1, [r3, #0]
 801100c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 801100e:	3201      	adds	r2, #1
 8011010:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8011012:	6818      	ldr	r0, [r3, #0]
	}
 8011014:	4770      	bx	lr
 8011016:	bf00      	nop
 8011018:	2001db8c 	.word	0x2001db8c

0801101c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 801101c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801101e:	4c11      	ldr	r4, [pc, #68]	; (8011064 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8011020:	f7fe fb98 	bl	800f754 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8011024:	6825      	ldr	r5, [r4, #0]
 8011026:	b9bd      	cbnz	r5, 8011058 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8011028:	4f0f      	ldr	r7, [pc, #60]	; (8011068 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 801102a:	4e10      	ldr	r6, [pc, #64]	; (801106c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 801102c:	4638      	mov	r0, r7
 801102e:	f7fe fae3 	bl	800f5f8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8011032:	4630      	mov	r0, r6
 8011034:	f7fe fae0 	bl	800f5f8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8011038:	4b0d      	ldr	r3, [pc, #52]	; (8011070 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801103a:	4a0e      	ldr	r2, [pc, #56]	; (8011074 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 801103c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801103e:	4b0e      	ldr	r3, [pc, #56]	; (8011078 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8011040:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8011042:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8011044:	200a      	movs	r0, #10
 8011046:	4b0d      	ldr	r3, [pc, #52]	; (801107c <prvCheckForValidListAndQueue+0x60>)
 8011048:	9500      	str	r5, [sp, #0]
 801104a:	f7fe fd94 	bl	800fb76 <xQueueGenericCreateStatic>
 801104e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8011050:	b110      	cbz	r0, 8011058 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8011052:	490b      	ldr	r1, [pc, #44]	; (8011080 <prvCheckForValidListAndQueue+0x64>)
 8011054:	f7ff f95e 	bl	8010314 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8011058:	b003      	add	sp, #12
 801105a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 801105e:	f7fe bb99 	b.w	800f794 <vPortExitCritical>
 8011062:	bf00      	nop
 8011064:	2001e1ac 	.word	0x2001e1ac
 8011068:	2001e130 	.word	0x2001e130
 801106c:	2001e144 	.word	0x2001e144
 8011070:	2001e088 	.word	0x2001e088
 8011074:	2001e090 	.word	0x2001e090
 8011078:	2001e08c 	.word	0x2001e08c
 801107c:	2001e15c 	.word	0x2001e15c
 8011080:	08032a79 	.word	0x08032a79

08011084 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8011084:	4291      	cmp	r1, r2
{
 8011086:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8011088:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801108a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 801108c:	d80a      	bhi.n	80110a4 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801108e:	1ad2      	subs	r2, r2, r3
 8011090:	6983      	ldr	r3, [r0, #24]
 8011092:	429a      	cmp	r2, r3
 8011094:	d20d      	bcs.n	80110b2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8011096:	4b08      	ldr	r3, [pc, #32]	; (80110b8 <prvInsertTimerInActiveList+0x34>)
 8011098:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801109a:	6818      	ldr	r0, [r3, #0]
 801109c:	f7fe fac6 	bl	800f62c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 80110a0:	2000      	movs	r0, #0
}
 80110a2:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80110a4:	429a      	cmp	r2, r3
 80110a6:	d201      	bcs.n	80110ac <prvInsertTimerInActiveList+0x28>
 80110a8:	4299      	cmp	r1, r3
 80110aa:	d202      	bcs.n	80110b2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80110ac:	4b03      	ldr	r3, [pc, #12]	; (80110bc <prvInsertTimerInActiveList+0x38>)
 80110ae:	1d01      	adds	r1, r0, #4
 80110b0:	e7f3      	b.n	801109a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 80110b2:	2001      	movs	r0, #1
	return xProcessTimerNow;
 80110b4:	e7f5      	b.n	80110a2 <prvInsertTimerInActiveList+0x1e>
 80110b6:	bf00      	nop
 80110b8:	2001e08c 	.word	0x2001e08c
 80110bc:	2001e088 	.word	0x2001e088

080110c0 <xTimerCreateTimerTask>:
{
 80110c0:	b510      	push	{r4, lr}
 80110c2:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80110c4:	f7ff ffaa 	bl	801101c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80110c8:	4b12      	ldr	r3, [pc, #72]	; (8011114 <xTimerCreateTimerTask+0x54>)
 80110ca:	681b      	ldr	r3, [r3, #0]
 80110cc:	b1b3      	cbz	r3, 80110fc <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80110ce:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80110d0:	aa07      	add	r2, sp, #28
 80110d2:	a906      	add	r1, sp, #24
 80110d4:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80110d6:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80110da:	f7fe f993 	bl	800f404 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80110de:	9b05      	ldr	r3, [sp, #20]
 80110e0:	9302      	str	r3, [sp, #8]
 80110e2:	9b06      	ldr	r3, [sp, #24]
 80110e4:	9301      	str	r3, [sp, #4]
 80110e6:	2302      	movs	r3, #2
 80110e8:	9300      	str	r3, [sp, #0]
 80110ea:	9a07      	ldr	r2, [sp, #28]
 80110ec:	490a      	ldr	r1, [pc, #40]	; (8011118 <xTimerCreateTimerTask+0x58>)
 80110ee:	480b      	ldr	r0, [pc, #44]	; (801111c <xTimerCreateTimerTask+0x5c>)
 80110f0:	4623      	mov	r3, r4
 80110f2:	f7ff fb05 	bl	8010700 <xTaskCreateStatic>
 80110f6:	4b0a      	ldr	r3, [pc, #40]	; (8011120 <xTimerCreateTimerTask+0x60>)
 80110f8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80110fa:	b940      	cbnz	r0, 801110e <xTimerCreateTimerTask+0x4e>
 80110fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011100:	f383 8811 	msr	BASEPRI, r3
 8011104:	f3bf 8f6f 	isb	sy
 8011108:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 801110c:	e7fe      	b.n	801110c <xTimerCreateTimerTask+0x4c>
}
 801110e:	2001      	movs	r0, #1
 8011110:	b008      	add	sp, #32
 8011112:	bd10      	pop	{r4, pc}
 8011114:	2001e1ac 	.word	0x2001e1ac
 8011118:	08032a7e 	.word	0x08032a7e
 801111c:	08011229 	.word	0x08011229
 8011120:	2001e1b0 	.word	0x2001e1b0

08011124 <xTimerGenericCommand>:
{
 8011124:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011126:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8011128:	4604      	mov	r4, r0
{
 801112a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 801112c:	b940      	cbnz	r0, 8011140 <xTimerGenericCommand+0x1c>
 801112e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011132:	f383 8811 	msr	BASEPRI, r3
 8011136:	f3bf 8f6f 	isb	sy
 801113a:	f3bf 8f4f 	dsb	sy
 801113e:	e7fe      	b.n	801113e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8011140:	4d0d      	ldr	r5, [pc, #52]	; (8011178 <xTimerGenericCommand+0x54>)
 8011142:	6828      	ldr	r0, [r5, #0]
 8011144:	b180      	cbz	r0, 8011168 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8011146:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8011148:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801114c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 801114e:	dc0d      	bgt.n	801116c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8011150:	f7ff fe70 	bl	8010e34 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8011154:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8011156:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8011158:	bf08      	it	eq
 801115a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 801115c:	6828      	ldr	r0, [r5, #0]
 801115e:	bf18      	it	ne
 8011160:	461a      	movne	r2, r3
 8011162:	4669      	mov	r1, sp
 8011164:	f7fe fdbc 	bl	800fce0 <xQueueGenericSend>
}
 8011168:	b004      	add	sp, #16
 801116a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 801116c:	2300      	movs	r3, #0
 801116e:	4669      	mov	r1, sp
 8011170:	f7fe fe69 	bl	800fe46 <xQueueGenericSendFromISR>
 8011174:	e7f8      	b.n	8011168 <xTimerGenericCommand+0x44>
 8011176:	bf00      	nop
 8011178:	2001e1ac 	.word	0x2001e1ac

0801117c <prvSampleTimeNow>:
{
 801117c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8011180:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8011224 <prvSampleTimeNow+0xa8>
{
 8011184:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8011186:	f7ff fbbd 	bl	8010904 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801118a:	f8d8 3000 	ldr.w	r3, [r8]
 801118e:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8011190:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8011192:	d940      	bls.n	8011216 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8011194:	4f21      	ldr	r7, [pc, #132]	; (801121c <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8011196:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801119a:	683b      	ldr	r3, [r7, #0]
 801119c:	681a      	ldr	r2, [r3, #0]
 801119e:	b95a      	cbnz	r2, 80111b8 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 80111a0:	4a1f      	ldr	r2, [pc, #124]	; (8011220 <prvSampleTimeNow+0xa4>)
 80111a2:	6811      	ldr	r1, [r2, #0]
 80111a4:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 80111a6:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 80111a8:	2301      	movs	r3, #1
}
 80111aa:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 80111ac:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 80111ae:	f8c8 5000 	str.w	r5, [r8]
}
 80111b2:	b004      	add	sp, #16
 80111b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80111b8:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80111ba:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80111bc:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80111c0:	1d21      	adds	r1, r4, #4
 80111c2:	4608      	mov	r0, r1
 80111c4:	9103      	str	r1, [sp, #12]
 80111c6:	f7fe fa48 	bl	800f65a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80111ca:	6a23      	ldr	r3, [r4, #32]
 80111cc:	4620      	mov	r0, r4
 80111ce:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80111d0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80111d4:	9903      	ldr	r1, [sp, #12]
 80111d6:	f013 0f04 	tst.w	r3, #4
 80111da:	d0de      	beq.n	801119a <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80111dc:	69a3      	ldr	r3, [r4, #24]
 80111de:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 80111e0:	459a      	cmp	sl, r3
 80111e2:	d205      	bcs.n	80111f0 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80111e4:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80111e6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80111e8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80111ea:	f7fe fa1f 	bl	800f62c <vListInsert>
 80111ee:	e7d4      	b.n	801119a <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80111f0:	2300      	movs	r3, #0
 80111f2:	f8cd 9000 	str.w	r9, [sp]
 80111f6:	4652      	mov	r2, sl
 80111f8:	4619      	mov	r1, r3
 80111fa:	4620      	mov	r0, r4
 80111fc:	f7ff ff92 	bl	8011124 <xTimerGenericCommand>
				configASSERT( xResult );
 8011200:	2800      	cmp	r0, #0
 8011202:	d1ca      	bne.n	801119a <prvSampleTimeNow+0x1e>
 8011204:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011208:	f383 8811 	msr	BASEPRI, r3
 801120c:	f3bf 8f6f 	isb	sy
 8011210:	f3bf 8f4f 	dsb	sy
 8011214:	e7fe      	b.n	8011214 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 8011216:	2300      	movs	r3, #0
 8011218:	e7c7      	b.n	80111aa <prvSampleTimeNow+0x2e>
 801121a:	bf00      	nop
 801121c:	2001e088 	.word	0x2001e088
 8011220:	2001e08c 	.word	0x2001e08c
 8011224:	2001e158 	.word	0x2001e158

08011228 <prvTimerTask>:
{
 8011228:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 801122c:	4d6e      	ldr	r5, [pc, #440]	; (80113e8 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 801122e:	4e6f      	ldr	r6, [pc, #444]	; (80113ec <prvTimerTask+0x1c4>)
{
 8011230:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8011232:	682b      	ldr	r3, [r5, #0]
 8011234:	f8d3 8000 	ldr.w	r8, [r3]
 8011238:	f1b8 0f00 	cmp.w	r8, #0
 801123c:	d035      	beq.n	80112aa <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801123e:	68db      	ldr	r3, [r3, #12]
 8011240:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8011244:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8011246:	f7ff fb55 	bl	80108f4 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 801124a:	a804      	add	r0, sp, #16
 801124c:	f7ff ff96 	bl	801117c <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8011250:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8011252:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8011254:	2b00      	cmp	r3, #0
 8011256:	d169      	bne.n	801132c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8011258:	2c00      	cmp	r4, #0
 801125a:	d14c      	bne.n	80112f6 <prvTimerTask+0xce>
 801125c:	4540      	cmp	r0, r8
 801125e:	d350      	bcc.n	8011302 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8011260:	f7ff fbec 	bl	8010a3c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011264:	682b      	ldr	r3, [r5, #0]
 8011266:	68db      	ldr	r3, [r3, #12]
 8011268:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801126a:	1d38      	adds	r0, r7, #4
 801126c:	f7fe f9f5 	bl	800f65a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8011270:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8011274:	0758      	lsls	r0, r3, #29
 8011276:	d51a      	bpl.n	80112ae <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8011278:	69b9      	ldr	r1, [r7, #24]
 801127a:	4643      	mov	r3, r8
 801127c:	464a      	mov	r2, r9
 801127e:	4441      	add	r1, r8
 8011280:	4638      	mov	r0, r7
 8011282:	f7ff feff 	bl	8011084 <prvInsertTimerInActiveList>
 8011286:	b1b0      	cbz	r0, 80112b6 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8011288:	9400      	str	r4, [sp, #0]
 801128a:	4623      	mov	r3, r4
 801128c:	4642      	mov	r2, r8
 801128e:	4621      	mov	r1, r4
 8011290:	4638      	mov	r0, r7
 8011292:	f7ff ff47 	bl	8011124 <xTimerGenericCommand>
			configASSERT( xResult );
 8011296:	b970      	cbnz	r0, 80112b6 <prvTimerTask+0x8e>
 8011298:	f04f 0350 	mov.w	r3, #80	; 0x50
 801129c:	f383 8811 	msr	BASEPRI, r3
 80112a0:	f3bf 8f6f 	isb	sy
 80112a4:	f3bf 8f4f 	dsb	sy
 80112a8:	e7fe      	b.n	80112a8 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80112aa:	2401      	movs	r4, #1
 80112ac:	e7cb      	b.n	8011246 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80112ae:	f023 0301 	bic.w	r3, r3, #1
 80112b2:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80112b6:	6a3b      	ldr	r3, [r7, #32]
 80112b8:	4638      	mov	r0, r7
 80112ba:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80112bc:	6830      	ldr	r0, [r6, #0]
 80112be:	2200      	movs	r2, #0
 80112c0:	a904      	add	r1, sp, #16
 80112c2:	f7fe fe75 	bl	800ffb0 <xQueueReceive>
 80112c6:	2800      	cmp	r0, #0
 80112c8:	d0b3      	beq.n	8011232 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80112ca:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80112cc:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80112ce:	2b00      	cmp	r3, #0
 80112d0:	db2f      	blt.n	8011332 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80112d2:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80112d4:	6963      	ldr	r3, [r4, #20]
 80112d6:	2b00      	cmp	r3, #0
 80112d8:	d132      	bne.n	8011340 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80112da:	a803      	add	r0, sp, #12
 80112dc:	f7ff ff4e 	bl	801117c <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 80112e0:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80112e2:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 80112e4:	2b09      	cmp	r3, #9
 80112e6:	d8e9      	bhi.n	80112bc <prvTimerTask+0x94>
 80112e8:	e8df f003 	tbb	[pc, r3]
 80112ec:	572e2e2e 	.word	0x572e2e2e
 80112f0:	2e2e765e 	.word	0x2e2e765e
 80112f4:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80112f6:	4b3e      	ldr	r3, [pc, #248]	; (80113f0 <prvTimerTask+0x1c8>)
 80112f8:	681b      	ldr	r3, [r3, #0]
 80112fa:	681c      	ldr	r4, [r3, #0]
 80112fc:	fab4 f484 	clz	r4, r4
 8011300:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8011302:	6830      	ldr	r0, [r6, #0]
 8011304:	4622      	mov	r2, r4
 8011306:	eba8 0109 	sub.w	r1, r8, r9
 801130a:	f7ff f840 	bl	801038e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 801130e:	f7ff fb95 	bl	8010a3c <xTaskResumeAll>
 8011312:	2800      	cmp	r0, #0
 8011314:	d1d2      	bne.n	80112bc <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8011316:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801131a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801131e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011322:	f3bf 8f4f 	dsb	sy
 8011326:	f3bf 8f6f 	isb	sy
 801132a:	e7c7      	b.n	80112bc <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 801132c:	f7ff fb86 	bl	8010a3c <xTaskResumeAll>
}
 8011330:	e7c4      	b.n	80112bc <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8011332:	9b05      	ldr	r3, [sp, #20]
 8011334:	9907      	ldr	r1, [sp, #28]
 8011336:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8011338:	9b04      	ldr	r3, [sp, #16]
 801133a:	2b00      	cmp	r3, #0
 801133c:	dbbe      	blt.n	80112bc <prvTimerTask+0x94>
 801133e:	e7c8      	b.n	80112d2 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8011340:	1d20      	adds	r0, r4, #4
 8011342:	f7fe f98a 	bl	800f65a <uxListRemove>
 8011346:	e7c8      	b.n	80112da <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8011348:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801134c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 801134e:	f043 0301 	orr.w	r3, r3, #1
 8011352:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8011356:	9b05      	ldr	r3, [sp, #20]
 8011358:	4620      	mov	r0, r4
 801135a:	4419      	add	r1, r3
 801135c:	f7ff fe92 	bl	8011084 <prvInsertTimerInActiveList>
 8011360:	2800      	cmp	r0, #0
 8011362:	d0ab      	beq.n	80112bc <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8011364:	6a23      	ldr	r3, [r4, #32]
 8011366:	4620      	mov	r0, r4
 8011368:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 801136a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801136e:	0759      	lsls	r1, r3, #29
 8011370:	d5a4      	bpl.n	80112bc <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8011372:	69a2      	ldr	r2, [r4, #24]
 8011374:	9905      	ldr	r1, [sp, #20]
 8011376:	2300      	movs	r3, #0
 8011378:	440a      	add	r2, r1
 801137a:	9300      	str	r3, [sp, #0]
 801137c:	4619      	mov	r1, r3
 801137e:	4620      	mov	r0, r4
 8011380:	f7ff fed0 	bl	8011124 <xTimerGenericCommand>
							configASSERT( xResult );
 8011384:	2800      	cmp	r0, #0
 8011386:	d199      	bne.n	80112bc <prvTimerTask+0x94>
 8011388:	f04f 0350 	mov.w	r3, #80	; 0x50
 801138c:	f383 8811 	msr	BASEPRI, r3
 8011390:	f3bf 8f6f 	isb	sy
 8011394:	f3bf 8f4f 	dsb	sy
 8011398:	e7fe      	b.n	8011398 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801139a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801139e:	f023 0301 	bic.w	r3, r3, #1
 80113a2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80113a6:	e789      	b.n	80112bc <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80113a8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80113ac:	f043 0301 	orr.w	r3, r3, #1
 80113b0:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80113b4:	9905      	ldr	r1, [sp, #20]
 80113b6:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80113b8:	b941      	cbnz	r1, 80113cc <prvTimerTask+0x1a4>
 80113ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80113be:	f383 8811 	msr	BASEPRI, r3
 80113c2:	f3bf 8f6f 	isb	sy
 80113c6:	f3bf 8f4f 	dsb	sy
 80113ca:	e7fe      	b.n	80113ca <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80113cc:	4603      	mov	r3, r0
 80113ce:	4401      	add	r1, r0
 80113d0:	4620      	mov	r0, r4
 80113d2:	f7ff fe57 	bl	8011084 <prvInsertTimerInActiveList>
					break;
 80113d6:	e771      	b.n	80112bc <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80113d8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80113dc:	079a      	lsls	r2, r3, #30
 80113de:	d4de      	bmi.n	801139e <prvTimerTask+0x176>
							vPortFree( pxTimer );
 80113e0:	4620      	mov	r0, r4
 80113e2:	f7fe f8d1 	bl	800f588 <vPortFree>
 80113e6:	e769      	b.n	80112bc <prvTimerTask+0x94>
 80113e8:	2001e088 	.word	0x2001e088
 80113ec:	2001e1ac 	.word	0x2001e1ac
 80113f0:	2001e08c 	.word	0x2001e08c

080113f4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80113f4:	8880      	ldrh	r0, [r0, #4]
 80113f6:	4770      	bx	lr

080113f8 <_ZN8touchgfx17AbstractPartition5clearEv>:
 80113f8:	2300      	movs	r3, #0
 80113fa:	8083      	strh	r3, [r0, #4]
 80113fc:	4770      	bx	lr
	...

08011400 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8011400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011402:	6803      	ldr	r3, [r0, #0]
 8011404:	4605      	mov	r5, r0
 8011406:	460e      	mov	r6, r1
 8011408:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801140a:	2100      	movs	r1, #0
 801140c:	4798      	blx	r3
 801140e:	682b      	ldr	r3, [r5, #0]
 8011410:	4604      	mov	r4, r0
 8011412:	6a1b      	ldr	r3, [r3, #32]
 8011414:	4628      	mov	r0, r5
 8011416:	4798      	blx	r3
 8011418:	88ab      	ldrh	r3, [r5, #4]
 801141a:	1b34      	subs	r4, r6, r4
 801141c:	b2a4      	uxth	r4, r4
 801141e:	fbb4 f4f0 	udiv	r4, r4, r0
 8011422:	42a3      	cmp	r3, r4
 8011424:	d805      	bhi.n	8011432 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8011426:	4b0e      	ldr	r3, [pc, #56]	; (8011460 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8011428:	4a0e      	ldr	r2, [pc, #56]	; (8011464 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 801142a:	211d      	movs	r1, #29
 801142c:	480e      	ldr	r0, [pc, #56]	; (8011468 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 801142e:	f01a fde1 	bl	802bff4 <__assert_func>
 8011432:	682b      	ldr	r3, [r5, #0]
 8011434:	2100      	movs	r1, #0
 8011436:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011438:	4628      	mov	r0, r5
 801143a:	4798      	blx	r3
 801143c:	682b      	ldr	r3, [r5, #0]
 801143e:	4607      	mov	r7, r0
 8011440:	6a1b      	ldr	r3, [r3, #32]
 8011442:	4628      	mov	r0, r5
 8011444:	4798      	blx	r3
 8011446:	1bf3      	subs	r3, r6, r7
 8011448:	b29b      	uxth	r3, r3
 801144a:	fbb3 f2f0 	udiv	r2, r3, r0
 801144e:	fb02 3010 	mls	r0, r2, r0, r3
 8011452:	b118      	cbz	r0, 801145c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8011454:	4b05      	ldr	r3, [pc, #20]	; (801146c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8011456:	4a03      	ldr	r2, [pc, #12]	; (8011464 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8011458:	211e      	movs	r1, #30
 801145a:	e7e7      	b.n	801142c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 801145c:	4620      	mov	r0, r4
 801145e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011460:	08032a86 	.word	0x08032a86
 8011464:	08032bf2 	.word	0x08032bf2
 8011468:	08032a9b 	.word	0x08032a9b
 801146c:	08032ac9 	.word	0x08032ac9

08011470 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8011470:	b538      	push	{r3, r4, r5, lr}
 8011472:	6803      	ldr	r3, [r0, #0]
 8011474:	6a1b      	ldr	r3, [r3, #32]
 8011476:	460d      	mov	r5, r1
 8011478:	4604      	mov	r4, r0
 801147a:	4798      	blx	r3
 801147c:	4285      	cmp	r5, r0
 801147e:	d905      	bls.n	801148c <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8011480:	4b0c      	ldr	r3, [pc, #48]	; (80114b4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8011482:	4a0d      	ldr	r2, [pc, #52]	; (80114b8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8011484:	212f      	movs	r1, #47	; 0x2f
 8011486:	480d      	ldr	r0, [pc, #52]	; (80114bc <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8011488:	f01a fdb4 	bl	802bff4 <__assert_func>
 801148c:	6823      	ldr	r3, [r4, #0]
 801148e:	88a5      	ldrh	r5, [r4, #4]
 8011490:	69db      	ldr	r3, [r3, #28]
 8011492:	4620      	mov	r0, r4
 8011494:	4798      	blx	r3
 8011496:	4285      	cmp	r5, r0
 8011498:	d303      	bcc.n	80114a2 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 801149a:	4b09      	ldr	r3, [pc, #36]	; (80114c0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 801149c:	4a06      	ldr	r2, [pc, #24]	; (80114b8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 801149e:	2130      	movs	r1, #48	; 0x30
 80114a0:	e7f1      	b.n	8011486 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 80114a2:	6823      	ldr	r3, [r4, #0]
 80114a4:	88a1      	ldrh	r1, [r4, #4]
 80114a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80114a8:	4620      	mov	r0, r4
 80114aa:	4798      	blx	r3
 80114ac:	88a3      	ldrh	r3, [r4, #4]
 80114ae:	3301      	adds	r3, #1
 80114b0:	80a3      	strh	r3, [r4, #4]
 80114b2:	bd38      	pop	{r3, r4, r5, pc}
 80114b4:	08032b43 	.word	0x08032b43
 80114b8:	08032c35 	.word	0x08032c35
 80114bc:	08032a9b 	.word	0x08032a9b
 80114c0:	08032b5a 	.word	0x08032b5a

080114c4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80114c4:	b570      	push	{r4, r5, r6, lr}
 80114c6:	6803      	ldr	r3, [r0, #0]
 80114c8:	6a1b      	ldr	r3, [r3, #32]
 80114ca:	4616      	mov	r6, r2
 80114cc:	4604      	mov	r4, r0
 80114ce:	460d      	mov	r5, r1
 80114d0:	4798      	blx	r3
 80114d2:	4286      	cmp	r6, r0
 80114d4:	d905      	bls.n	80114e2 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 80114d6:	4b06      	ldr	r3, [pc, #24]	; (80114f0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 80114d8:	4a06      	ldr	r2, [pc, #24]	; (80114f4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 80114da:	4807      	ldr	r0, [pc, #28]	; (80114f8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 80114dc:	2139      	movs	r1, #57	; 0x39
 80114de:	f01a fd89 	bl	802bff4 <__assert_func>
 80114e2:	6823      	ldr	r3, [r4, #0]
 80114e4:	4629      	mov	r1, r5
 80114e6:	4620      	mov	r0, r4
 80114e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80114ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114ee:	4718      	bx	r3
 80114f0:	08032b43 	.word	0x08032b43
 80114f4:	08032ba8 	.word	0x08032ba8
 80114f8:	08032a9b 	.word	0x08032a9b

080114fc <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80114fc:	4770      	bx	lr
	...

08011500 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8011500:	4a02      	ldr	r2, [pc, #8]	; (801150c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8011502:	6002      	str	r2, [r0, #0]
 8011504:	2200      	movs	r2, #0
 8011506:	8082      	strh	r2, [r0, #4]
 8011508:	4770      	bx	lr
 801150a:	bf00      	nop
 801150c:	08032b7c 	.word	0x08032b7c

08011510 <_ZN8touchgfx8TextArea8setWidthEs>:
 8011510:	b530      	push	{r4, r5, lr}
 8011512:	b085      	sub	sp, #20
 8011514:	6803      	ldr	r3, [r0, #0]
 8011516:	8101      	strh	r1, [r0, #8]
 8011518:	466d      	mov	r5, sp
 801151a:	4601      	mov	r1, r0
 801151c:	4604      	mov	r4, r0
 801151e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8011522:	4628      	mov	r0, r5
 8011524:	4798      	blx	r3
 8011526:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801152a:	343c      	adds	r4, #60	; 0x3c
 801152c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011530:	b005      	add	sp, #20
 8011532:	bd30      	pop	{r4, r5, pc}

08011534 <_ZN8touchgfx8TextArea9setHeightEs>:
 8011534:	b530      	push	{r4, r5, lr}
 8011536:	b085      	sub	sp, #20
 8011538:	6803      	ldr	r3, [r0, #0]
 801153a:	8141      	strh	r1, [r0, #10]
 801153c:	466d      	mov	r5, sp
 801153e:	4601      	mov	r1, r0
 8011540:	4604      	mov	r4, r0
 8011542:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8011546:	4628      	mov	r0, r5
 8011548:	4798      	blx	r3
 801154a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801154e:	343c      	adds	r4, #60	; 0x3c
 8011550:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011554:	b005      	add	sp, #20
 8011556:	bd30      	pop	{r4, r5, pc}

08011558 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8011558:	2200      	movs	r2, #0
 801155a:	8002      	strh	r2, [r0, #0]
 801155c:	8042      	strh	r2, [r0, #2]
 801155e:	8082      	strh	r2, [r0, #4]
 8011560:	80c2      	strh	r2, [r0, #6]
 8011562:	4770      	bx	lr

08011564 <_ZN8touchgfx8TextArea8setAlphaEh>:
 8011564:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 8011568:	4770      	bx	lr

0801156a <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 801156a:	b570      	push	{r4, r5, r6, lr}
 801156c:	6803      	ldr	r3, [r0, #0]
 801156e:	4604      	mov	r4, r0
 8011570:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011572:	4615      	mov	r5, r2
 8011574:	4798      	blx	r3
 8011576:	6823      	ldr	r3, [r4, #0]
 8011578:	4629      	mov	r1, r5
 801157a:	4620      	mov	r0, r4
 801157c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801157e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011582:	4718      	bx	r3

08011584 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 8011584:	2000      	movs	r0, #0
 8011586:	4770      	bx	lr

08011588 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
 8011588:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801158a:	4770      	bx	lr

0801158c <_ZNK8touchgfx12TextProgress12getTypedTextEv>:
 801158c:	4a02      	ldr	r2, [pc, #8]	; (8011598 <_ZNK8touchgfx12TextProgress12getTypedTextEv+0xc>)
 801158e:	6002      	str	r2, [r0, #0]
 8011590:	f8b1 20e0 	ldrh.w	r2, [r1, #224]	; 0xe0
 8011594:	8082      	strh	r2, [r0, #4]
 8011596:	4770      	bx	lr
 8011598:	0802f874 	.word	0x0802f874

0801159c <_ZN8touchgfx12TextProgress8setColorENS_9colortypeE>:
 801159c:	f8c0 10e4 	str.w	r1, [r0, #228]	; 0xe4
 80115a0:	4770      	bx	lr

080115a2 <_ZNK8touchgfx12TextProgress8getColorEv>:
 80115a2:	f8d0 00e4 	ldr.w	r0, [r0, #228]	; 0xe4
 80115a6:	4770      	bx	lr

080115a8 <_ZN8touchgfx12TextProgress19setNumberOfDecimalsEt>:
 80115a8:	b570      	push	{r4, r5, r6, lr}
 80115aa:	2902      	cmp	r1, #2
 80115ac:	bf28      	it	cs
 80115ae:	2102      	movcs	r1, #2
 80115b0:	6803      	ldr	r3, [r0, #0]
 80115b2:	f8a0 1112 	strh.w	r1, [r0, #274]	; 0x112
 80115b6:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 80115ba:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80115be:	4604      	mov	r4, r0
 80115c0:	4798      	blx	r3
 80115c2:	462b      	mov	r3, r5
 80115c4:	4601      	mov	r1, r0
 80115c6:	4620      	mov	r0, r4
 80115c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80115cc:	4718      	bx	r3

080115ce <_ZNK8touchgfx12TextProgress19getNumberOfDecimalsEv>:
 80115ce:	f8b0 0112 	ldrh.w	r0, [r0, #274]	; 0x112
 80115d2:	4770      	bx	lr

080115d4 <_ZN8touchgfx12TextProgressD1Ev>:
 80115d4:	4770      	bx	lr

080115d6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 80115d6:	4770      	bx	lr

080115d8 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80115d8:	b510      	push	{r4, lr}
 80115da:	214c      	movs	r1, #76	; 0x4c
 80115dc:	4604      	mov	r4, r0
 80115de:	f019 fdbc 	bl	802b15a <_ZdlPvj>
 80115e2:	4620      	mov	r0, r4
 80115e4:	bd10      	pop	{r4, pc}

080115e6 <_ZN8touchgfx12TextProgressD0Ev>:
 80115e6:	b510      	push	{r4, lr}
 80115e8:	f44f 718a 	mov.w	r1, #276	; 0x114
 80115ec:	4604      	mov	r4, r0
 80115ee:	f019 fdb4 	bl	802b15a <_ZdlPvj>
 80115f2:	4620      	mov	r0, r4
 80115f4:	bd10      	pop	{r4, pc}
	...

080115f8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 80115f8:	b570      	push	{r4, r5, r6, lr}
 80115fa:	6803      	ldr	r3, [r0, #0]
 80115fc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80115fe:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 8011600:	4b11      	ldr	r3, [pc, #68]	; (8011648 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8011602:	681b      	ldr	r3, [r3, #0]
 8011604:	4604      	mov	r4, r0
 8011606:	b28d      	uxth	r5, r1
 8011608:	b92b      	cbnz	r3, 8011616 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 801160a:	4b10      	ldr	r3, [pc, #64]	; (801164c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 801160c:	4a10      	ldr	r2, [pc, #64]	; (8011650 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 801160e:	21ae      	movs	r1, #174	; 0xae
 8011610:	4810      	ldr	r0, [pc, #64]	; (8011654 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8011612:	f01a fcef 	bl	802bff4 <__assert_func>
 8011616:	4910      	ldr	r1, [pc, #64]	; (8011658 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8011618:	8809      	ldrh	r1, [r1, #0]
 801161a:	4291      	cmp	r1, r2
 801161c:	d803      	bhi.n	8011626 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 801161e:	4b0f      	ldr	r3, [pc, #60]	; (801165c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8011620:	4a0b      	ldr	r2, [pc, #44]	; (8011650 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8011622:	21af      	movs	r1, #175	; 0xaf
 8011624:	e7f4      	b.n	8011610 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 8011626:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801162a:	4b0d      	ldr	r3, [pc, #52]	; (8011660 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 801162c:	681b      	ldr	r3, [r3, #0]
 801162e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8011632:	6803      	ldr	r3, [r0, #0]
 8011634:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011636:	4798      	blx	r3
 8011638:	1a29      	subs	r1, r5, r0
 801163a:	4633      	mov	r3, r6
 801163c:	4620      	mov	r0, r4
 801163e:	b209      	sxth	r1, r1
 8011640:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011644:	4718      	bx	r3
 8011646:	bf00      	nop
 8011648:	2001e230 	.word	0x2001e230
 801164c:	0802f700 	.word	0x0802f700
 8011650:	08032e3c 	.word	0x08032e3c
 8011654:	0802f78e 	.word	0x0802f78e
 8011658:	2001e234 	.word	0x2001e234
 801165c:	08032d0f 	.word	0x08032d0f
 8011660:	2001e238 	.word	0x2001e238

08011664 <_ZN8touchgfx12TextProgress12setTypedTextERKNS_9TypedTextE>:
 8011664:	30b4      	adds	r0, #180	; 0xb4
 8011666:	f005 bc51 	b.w	8016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>

0801166a <_ZN8touchgfx12TextProgress8setAlphaEh>:
 801166a:	b538      	push	{r3, r4, r5, lr}
 801166c:	4604      	mov	r4, r0
 801166e:	460d      	mov	r5, r1
 8011670:	f000 f9f7 	bl	8011a62 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8011674:	f884 50ea 	strb.w	r5, [r4, #234]	; 0xea
 8011678:	bd38      	pop	{r3, r4, r5, pc}
	...

0801167c <_ZN8touchgfx12TextProgress8setValueEi>:
 801167c:	b570      	push	{r4, r5, r6, lr}
 801167e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8011682:	4604      	mov	r4, r0
 8011684:	b086      	sub	sp, #24
 8011686:	460e      	mov	r6, r1
 8011688:	4628      	mov	r0, r5
 801168a:	f005 fddf 	bl	801724c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 801168e:	4631      	mov	r1, r6
 8011690:	4620      	mov	r0, r4
 8011692:	f000 fa37 	bl	8011b04 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8011696:	4b1d      	ldr	r3, [pc, #116]	; (801170c <_ZN8touchgfx12TextProgress8setValueEi+0x90>)
 8011698:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 801169c:	ab06      	add	r3, sp, #24
 801169e:	e903 0007 	stmdb	r3, {r0, r1, r2}
 80116a2:	f8b4 3112 	ldrh.w	r3, [r4, #274]	; 0x112
 80116a6:	aa06      	add	r2, sp, #24
 80116a8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80116ac:	4620      	mov	r0, r4
 80116ae:	f853 1c0c 	ldr.w	r1, [r3, #-12]
 80116b2:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80116b6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80116ba:	0089      	lsls	r1, r1, #2
 80116bc:	b289      	uxth	r1, r1
 80116be:	f000 fab4 	bl	8011c2a <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 80116c2:	f8b4 1112 	ldrh.w	r1, [r4, #274]	; 0x112
 80116c6:	f504 7680 	add.w	r6, r4, #256	; 0x100
 80116ca:	b1b9      	cbz	r1, 80116fc <_ZN8touchgfx12TextProgress8setValueEi+0x80>
 80116cc:	ab06      	add	r3, sp, #24
 80116ce:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 80116d2:	f853 2c0c 	ldr.w	r2, [r3, #-12]
 80116d6:	fb90 f3f2 	sdiv	r3, r0, r2
 80116da:	fb02 0213 	mls	r2, r2, r3, r0
 80116de:	e9cd 1200 	strd	r1, r2, [sp]
 80116e2:	4630      	mov	r0, r6
 80116e4:	4a0a      	ldr	r2, [pc, #40]	; (8011710 <_ZN8touchgfx12TextProgress8setValueEi+0x94>)
 80116e6:	2108      	movs	r1, #8
 80116e8:	f00a ff2a 	bl	801c540 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80116ec:	4628      	mov	r0, r5
 80116ee:	f8c4 60fc 	str.w	r6, [r4, #252]	; 0xfc
 80116f2:	b006      	add	sp, #24
 80116f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116f8:	f005 bda8 	b.w	801724c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 80116fc:	4603      	mov	r3, r0
 80116fe:	4a05      	ldr	r2, [pc, #20]	; (8011714 <_ZN8touchgfx12TextProgress8setValueEi+0x98>)
 8011700:	2108      	movs	r1, #8
 8011702:	4630      	mov	r0, r6
 8011704:	f00a ff1c 	bl	801c540 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8011708:	e7f0      	b.n	80116ec <_ZN8touchgfx12TextProgress8setValueEi+0x70>
 801170a:	bf00      	nop
 801170c:	0802ed28 	.word	0x0802ed28
 8011710:	08032d04 	.word	0x08032d04
 8011714:	08032d0c 	.word	0x08032d0c

08011718 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8011718:	b510      	push	{r4, lr}
 801171a:	6803      	ldr	r3, [r0, #0]
 801171c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011720:	4604      	mov	r4, r0
 8011722:	4798      	blx	r3
 8011724:	b120      	cbz	r0, 8011730 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x18>
 8011726:	4620      	mov	r0, r4
 8011728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801172c:	f000 bb6a 	b.w	8011e04 <_ZNK8touchgfx9Container17invalidateContentEv>
 8011730:	bd10      	pop	{r4, pc}

08011732 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
 8011732:	2200      	movs	r2, #0
 8011734:	f04f 31ff 	mov.w	r1, #4294967295
 8011738:	e9c0 2100 	strd	r2, r1, [r0]
 801173c:	6082      	str	r2, [r0, #8]
 801173e:	4770      	bx	lr

08011740 <_ZN8touchgfx12TextProgress28setProgressIndicatorPositionEssss>:
 8011740:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011744:	461d      	mov	r5, r3
 8011746:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 801174a:	2300      	movs	r3, #0
 801174c:	f100 07b4 	add.w	r7, r0, #180	; 0xb4
 8011750:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 8011754:	4604      	mov	r4, r0
 8011756:	4688      	mov	r8, r1
 8011758:	4638      	mov	r0, r7
 801175a:	4629      	mov	r1, r5
 801175c:	4691      	mov	r9, r2
 801175e:	f7ff fed7 	bl	8011510 <_ZN8touchgfx8TextArea8setWidthEs>
 8011762:	4631      	mov	r1, r6
 8011764:	4638      	mov	r0, r7
 8011766:	f7ff fee5 	bl	8011534 <_ZN8touchgfx8TextArea9setHeightEs>
 801176a:	9608      	str	r6, [sp, #32]
 801176c:	462b      	mov	r3, r5
 801176e:	464a      	mov	r2, r9
 8011770:	4641      	mov	r1, r8
 8011772:	4620      	mov	r0, r4
 8011774:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011778:	f000 ba8c 	b.w	8011c94 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

0801177c <_ZN8touchgfx12TextProgressC1Ev>:
 801177c:	b510      	push	{r4, lr}
 801177e:	4604      	mov	r4, r0
 8011780:	f000 fab4 	bl	8011cec <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8011784:	2201      	movs	r2, #1
 8011786:	f884 20d9 	strb.w	r2, [r4, #217]	; 0xd9
 801178a:	4a24      	ldr	r2, [pc, #144]	; (801181c <_ZN8touchgfx12TextProgressC1Ev+0xa0>)
 801178c:	f8c4 20dc 	str.w	r2, [r4, #220]	; 0xdc
 8011790:	4b23      	ldr	r3, [pc, #140]	; (8011820 <_ZN8touchgfx12TextProgressC1Ev+0xa4>)
 8011792:	6023      	str	r3, [r4, #0]
 8011794:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011798:	2300      	movs	r3, #0
 801179a:	f8a4 20e0 	strh.w	r2, [r4, #224]	; 0xe0
 801179e:	f8a4 20f4 	strh.w	r2, [r4, #244]	; 0xf4
 80117a2:	f8a4 20f6 	strh.w	r2, [r4, #246]	; 0xf6
 80117a6:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 80117aa:	4a1e      	ldr	r2, [pc, #120]	; (8011824 <_ZN8touchgfx12TextProgressC1Ev+0xa8>)
 80117ac:	f8c4 10e8 	str.w	r1, [r4, #232]	; 0xe8
 80117b0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80117b4:	f8a4 30b8 	strh.w	r3, [r4, #184]	; 0xb8
 80117b8:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 80117bc:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 80117c0:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 80117c4:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 80117c8:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 80117cc:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 80117d0:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 80117d4:	e9c4 3332 	strd	r3, r3, [r4, #200]	; 0xc8
 80117d8:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
 80117dc:	f8a4 30d4 	strh.w	r3, [r4, #212]	; 0xd4
 80117e0:	f8a4 30d6 	strh.w	r3, [r4, #214]	; 0xd6
 80117e4:	f884 30d8 	strb.w	r3, [r4, #216]	; 0xd8
 80117e8:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
 80117ec:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 80117f0:	f884 30ed 	strb.w	r3, [r4, #237]	; 0xed
 80117f4:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 80117f8:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 80117fc:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
 8011800:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 8011804:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 8011808:	f8a4 3112 	strh.w	r3, [r4, #274]	; 0x112
 801180c:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8011810:	f104 01b4 	add.w	r1, r4, #180	; 0xb4
 8011814:	f000 fb3a 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011818:	4620      	mov	r0, r4
 801181a:	bd10      	pop	{r4, pc}
 801181c:	0802f874 	.word	0x0802f874
 8011820:	08032d58 	.word	0x08032d58
 8011824:	08032c7c 	.word	0x08032c7c

08011828 <_ZN8touchgfx14CircleProgress9setCenterEii>:
 8011828:	0149      	lsls	r1, r1, #5
 801182a:	0152      	lsls	r2, r2, #5
 801182c:	f8c0 10e4 	str.w	r1, [r0, #228]	; 0xe4
 8011830:	f8c0 20e8 	str.w	r2, [r0, #232]	; 0xe8
 8011834:	4770      	bx	lr

08011836 <_ZNK8touchgfx14CircleProgress9getCenterERiS1_>:
 8011836:	b530      	push	{r4, r5, lr}
 8011838:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 801183c:	2520      	movs	r5, #32
 801183e:	fb94 f4f5 	sdiv	r4, r4, r5
 8011842:	600c      	str	r4, [r1, #0]
 8011844:	f8d0 30e8 	ldr.w	r3, [r0, #232]	; 0xe8
 8011848:	fb93 f3f5 	sdiv	r3, r3, r5
 801184c:	6013      	str	r3, [r2, #0]
 801184e:	bd30      	pop	{r4, r5, pc}

08011850 <_ZN8touchgfx14CircleProgress9setRadiusEi>:
 8011850:	0149      	lsls	r1, r1, #5
 8011852:	f8c0 10ec 	str.w	r1, [r0, #236]	; 0xec
 8011856:	4770      	bx	lr

08011858 <_ZNK8touchgfx14CircleProgress9getRadiusEv>:
 8011858:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
 801185c:	2320      	movs	r3, #32
 801185e:	fb90 f0f3 	sdiv	r0, r0, r3
 8011862:	4770      	bx	lr

08011864 <_ZN8touchgfx14CircleProgress12setLineWidthEi>:
 8011864:	0149      	lsls	r1, r1, #5
 8011866:	f8c0 10f8 	str.w	r1, [r0, #248]	; 0xf8
 801186a:	4770      	bx	lr

0801186c <_ZNK8touchgfx14CircleProgress12getLineWidthEv>:
 801186c:	f8d0 00f8 	ldr.w	r0, [r0, #248]	; 0xf8
 8011870:	2320      	movs	r3, #32
 8011872:	fb90 f0f3 	sdiv	r0, r0, r3
 8011876:	4770      	bx	lr

08011878 <_ZNK8touchgfx14CircleProgress13getStartAngleEv>:
 8011878:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 801187c:	2320      	movs	r3, #32
 801187e:	fb90 f0f3 	sdiv	r0, r0, r3
 8011882:	b200      	sxth	r0, r0
 8011884:	4770      	bx	lr

08011886 <_ZNK8touchgfx14CircleProgress11getEndAngleEv>:
 8011886:	f8d0 0100 	ldr.w	r0, [r0, #256]	; 0x100
 801188a:	4770      	bx	lr

0801188c <_ZN8touchgfx14CircleProgressD1Ev>:
 801188c:	4770      	bx	lr

0801188e <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>:
 801188e:	30b4      	adds	r0, #180	; 0xb4
 8011890:	f002 be56 	b.w	8014540 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>

08011894 <_ZN8touchgfx14CircleProgress15setCapPrecisionEi>:
 8011894:	30b4      	adds	r0, #180	; 0xb4
 8011896:	f002 ba49 	b.w	8013d2c <_ZN8touchgfx6Circle15setCapPrecisionEi>

0801189a <_ZN8touchgfx14CircleProgress8setAlphaEh>:
 801189a:	b538      	push	{r3, r4, r5, lr}
 801189c:	4604      	mov	r4, r0
 801189e:	460d      	mov	r5, r1
 80118a0:	f000 f8df 	bl	8011a62 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80118a4:	f884 50da 	strb.w	r5, [r4, #218]	; 0xda
 80118a8:	bd38      	pop	{r3, r4, r5, pc}

080118aa <_ZNK8touchgfx14CircleProgress15getCapPrecisionEv>:
 80118aa:	30b4      	adds	r0, #180	; 0xb4
 80118ac:	f002 ba47 	b.w	8013d3e <_ZNK8touchgfx6Circle15getCapPrecisionEv>

080118b0 <_ZN8touchgfx14CircleProgressD0Ev>:
 80118b0:	b510      	push	{r4, lr}
 80118b2:	f44f 7182 	mov.w	r1, #260	; 0x104
 80118b6:	4604      	mov	r4, r0
 80118b8:	f019 fc4f 	bl	802b15a <_ZdlPvj>
 80118bc:	4620      	mov	r0, r4
 80118be:	bd10      	pop	{r4, pc}

080118c0 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80118c0:	b570      	push	{r4, r5, r6, lr}
 80118c2:	6803      	ldr	r3, [r0, #0]
 80118c4:	4604      	mov	r4, r0
 80118c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80118c8:	4615      	mov	r5, r2
 80118ca:	4798      	blx	r3
 80118cc:	6823      	ldr	r3, [r4, #0]
 80118ce:	4629      	mov	r1, r5
 80118d0:	4620      	mov	r0, r4
 80118d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80118d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118d8:	4718      	bx	r3

080118da <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>:
 80118da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80118de:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 80118e2:	461d      	mov	r5, r3
 80118e4:	2300      	movs	r3, #0
 80118e6:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 80118ea:	4604      	mov	r4, r0
 80118ec:	460f      	mov	r7, r1
 80118ee:	4690      	mov	r8, r2
 80118f0:	4629      	mov	r1, r5
 80118f2:	4632      	mov	r2, r6
 80118f4:	30b4      	adds	r0, #180	; 0xb4
 80118f6:	f7ff ffe3 	bl	80118c0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80118fa:	9606      	str	r6, [sp, #24]
 80118fc:	462b      	mov	r3, r5
 80118fe:	4642      	mov	r2, r8
 8011900:	4639      	mov	r1, r7
 8011902:	4620      	mov	r0, r4
 8011904:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011908:	f000 b9c4 	b.w	8011c94 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

0801190c <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_>:
 801190c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801190e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8011910:	9101      	str	r1, [sp, #4]
 8011912:	4299      	cmp	r1, r3
 8011914:	4604      	mov	r4, r0
 8011916:	d00b      	beq.n	8011930 <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_+0x24>
 8011918:	4601      	mov	r1, r0
 801191a:	aa01      	add	r2, sp, #4
 801191c:	a802      	add	r0, sp, #8
 801191e:	f002 fc12 	bl	8014146 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8011922:	9b01      	ldr	r3, [sp, #4]
 8011924:	6423      	str	r3, [r4, #64]	; 0x40
 8011926:	6823      	ldr	r3, [r4, #0]
 8011928:	a902      	add	r1, sp, #8
 801192a:	691b      	ldr	r3, [r3, #16]
 801192c:	4620      	mov	r0, r4
 801192e:	4798      	blx	r3
 8011930:	b004      	add	sp, #16
 8011932:	bd10      	pop	{r4, pc}

08011934 <_ZN8touchgfx14CircleProgress8setValueEi>:
 8011934:	b570      	push	{r4, r5, r6, lr}
 8011936:	4604      	mov	r4, r0
 8011938:	f000 f8e4 	bl	8011b04 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 801193c:	f8d4 6100 	ldr.w	r6, [r4, #256]	; 0x100
 8011940:	f8d4 50f0 	ldr.w	r5, [r4, #240]	; 0xf0
 8011944:	0176      	lsls	r6, r6, #5
 8011946:	42b5      	cmp	r5, r6
 8011948:	bfcc      	ite	gt
 801194a:	1ba9      	subgt	r1, r5, r6
 801194c:	1b71      	suble	r1, r6, r5
 801194e:	b289      	uxth	r1, r1
 8011950:	4620      	mov	r0, r4
 8011952:	f000 f96a 	bl	8011c2a <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8011956:	42b5      	cmp	r5, r6
 8011958:	4601      	mov	r1, r0
 801195a:	bfc8      	it	gt
 801195c:	1a69      	subgt	r1, r5, r1
 801195e:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011962:	bfd8      	it	le
 8011964:	1949      	addle	r1, r1, r5
 8011966:	f7ff ffd1 	bl	801190c <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_>
 801196a:	bd70      	pop	{r4, r5, r6, pc}

0801196c <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>:
 801196c:	4291      	cmp	r1, r2
 801196e:	b510      	push	{r4, lr}
 8011970:	4604      	mov	r4, r0
 8011972:	d105      	bne.n	8011980 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii+0x14>
 8011974:	4b0a      	ldr	r3, [pc, #40]	; (80119a0 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii+0x34>)
 8011976:	4a0b      	ldr	r2, [pc, #44]	; (80119a4 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii+0x38>)
 8011978:	480b      	ldr	r0, [pc, #44]	; (80119a8 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii+0x3c>)
 801197a:	214f      	movs	r1, #79	; 0x4f
 801197c:	f01a fb3a 	bl	802bff4 <__assert_func>
 8011980:	0149      	lsls	r1, r1, #5
 8011982:	0153      	lsls	r3, r2, #5
 8011984:	f8c0 10f0 	str.w	r1, [r0, #240]	; 0xf0
 8011988:	f8c0 30f4 	str.w	r3, [r0, #244]	; 0xf4
 801198c:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 8011990:	f000 f864 	bl	8011a5c <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8011994:	4601      	mov	r1, r0
 8011996:	4620      	mov	r0, r4
 8011998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801199c:	f7ff bfca 	b.w	8011934 <_ZN8touchgfx14CircleProgress8setValueEi>
 80119a0:	08032e6a 	.word	0x08032e6a
 80119a4:	08032fd4 	.word	0x08032fd4
 80119a8:	08032e81 	.word	0x08032e81

080119ac <_ZN8touchgfx14CircleProgressC1Ev>:
 80119ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80119ae:	4604      	mov	r4, r0
 80119b0:	4625      	mov	r5, r4
 80119b2:	f000 f99b 	bl	8011cec <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 80119b6:	4b10      	ldr	r3, [pc, #64]	; (80119f8 <_ZN8touchgfx14CircleProgressC1Ev+0x4c>)
 80119b8:	f845 3bb4 	str.w	r3, [r5], #180
 80119bc:	f44f 77b4 	mov.w	r7, #360	; 0x168
 80119c0:	4628      	mov	r0, r5
 80119c2:	f002 f99b 	bl	8013cfc <_ZN8touchgfx6CircleC1Ev>
 80119c6:	2600      	movs	r6, #0
 80119c8:	4629      	mov	r1, r5
 80119ca:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80119ce:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 80119d2:	f000 fa5b 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80119d6:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80119da:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80119de:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 80119e2:	4628      	mov	r0, r5
 80119e4:	f7ff ff6c 	bl	80118c0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80119e8:	4620      	mov	r0, r4
 80119ea:	463a      	mov	r2, r7
 80119ec:	4631      	mov	r1, r6
 80119ee:	f7ff ffbd 	bl	801196c <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
 80119f2:	4620      	mov	r0, r4
 80119f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80119f6:	bf00      	nop
 80119f8:	08032ed8 	.word	0x08032ed8

080119fc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 80119fc:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 8011a00:	4770      	bx	lr

08011a02 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 8011a02:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8011a06:	4770      	bx	lr

08011a08 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8011a08:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8011a0c:	4770      	bx	lr

08011a0e <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8011a0e:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 8011a12:	4770      	bx	lr

08011a14 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8011a14:	b510      	push	{r4, lr}
 8011a16:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8011a1a:	600c      	str	r4, [r1, #0]
 8011a1c:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8011a20:	6011      	str	r1, [r2, #0]
 8011a22:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8011a26:	801a      	strh	r2, [r3, #0]
 8011a28:	9b02      	ldr	r3, [sp, #8]
 8011a2a:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 8011a2e:	801a      	strh	r2, [r3, #0]
 8011a30:	bd10      	pop	{r4, pc}

08011a32 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 8011a32:	b510      	push	{r4, lr}
 8011a34:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8011a38:	600c      	str	r4, [r1, #0]
 8011a3a:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8011a3e:	6011      	str	r1, [r2, #0]
 8011a40:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8011a44:	801a      	strh	r2, [r3, #0]
 8011a46:	bd10      	pop	{r4, pc}

08011a48 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8011a48:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8011a4c:	600b      	str	r3, [r1, #0]
 8011a4e:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8011a52:	6013      	str	r3, [r2, #0]
 8011a54:	4770      	bx	lr

08011a56 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8011a56:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8011a5a:	4770      	bx	lr

08011a5c <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8011a5c:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 8011a60:	4770      	bx	lr

08011a62 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 8011a62:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8011a66:	4770      	bx	lr

08011a68 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8011a68:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8011a6c:	4770      	bx	lr

08011a6e <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 8011a6e:	4770      	bx	lr

08011a70 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 8011a70:	b510      	push	{r4, lr}
 8011a72:	21b4      	movs	r1, #180	; 0xb4
 8011a74:	4604      	mov	r4, r0
 8011a76:	f019 fb70 	bl	802b15a <_ZdlPvj>
 8011a7a:	4620      	mov	r0, r4
 8011a7c:	bd10      	pop	{r4, pc}

08011a7e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 8011a7e:	b570      	push	{r4, r5, r6, lr}
 8011a80:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8011a84:	428d      	cmp	r5, r1
 8011a86:	bfb8      	it	lt
 8011a88:	460d      	movlt	r5, r1
 8011a8a:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8011a8e:	428d      	cmp	r5, r1
 8011a90:	4604      	mov	r4, r0
 8011a92:	bfa8      	it	ge
 8011a94:	460d      	movge	r5, r1
 8011a96:	4616      	mov	r6, r2
 8011a98:	b99a      	cbnz	r2, 8011ac2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8011a9a:	6803      	ldr	r3, [r0, #0]
 8011a9c:	4629      	mov	r1, r5
 8011a9e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011aa2:	4798      	blx	r3
 8011aa4:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8011aa8:	b358      	cbz	r0, 8011b02 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x84>
 8011aaa:	6803      	ldr	r3, [r0, #0]
 8011aac:	68db      	ldr	r3, [r3, #12]
 8011aae:	4798      	blx	r3
 8011ab0:	b338      	cbz	r0, 8011b02 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x84>
 8011ab2:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8011ab6:	6803      	ldr	r3, [r0, #0]
 8011ab8:	4621      	mov	r1, r4
 8011aba:	689b      	ldr	r3, [r3, #8]
 8011abc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011ac0:	4718      	bx	r3
 8011ac2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8011ac6:	2b00      	cmp	r3, #0
 8011ac8:	dd07      	ble.n	8011ada <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5c>
 8011aca:	f007 fc5d 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8011ace:	4621      	mov	r1, r4
 8011ad0:	f007 fc92 	bl	80193f8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8011ad4:	2300      	movs	r3, #0
 8011ad6:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8011ada:	6823      	ldr	r3, [r4, #0]
 8011adc:	4620      	mov	r0, r4
 8011ade:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011ae2:	4798      	blx	r3
 8011ae4:	2300      	movs	r3, #0
 8011ae6:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8011aea:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 8011aee:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8011af2:	f007 fc49 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8011af6:	4621      	mov	r1, r4
 8011af8:	f007 fc4c 	bl	8019394 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 8011afc:	2301      	movs	r3, #1
 8011afe:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8011b02:	bd70      	pop	{r4, r5, r6, pc}

08011b04 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8011b04:	b510      	push	{r4, lr}
 8011b06:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8011b0a:	4299      	cmp	r1, r3
 8011b0c:	bfb8      	it	lt
 8011b0e:	4619      	movlt	r1, r3
 8011b10:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8011b14:	4299      	cmp	r1, r3
 8011b16:	bfa8      	it	ge
 8011b18:	4619      	movge	r1, r3
 8011b1a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8011b1e:	428b      	cmp	r3, r1
 8011b20:	4604      	mov	r4, r0
 8011b22:	d010      	beq.n	8011b46 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8011b24:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8011b28:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 8011b2c:	b158      	cbz	r0, 8011b46 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8011b2e:	6803      	ldr	r3, [r0, #0]
 8011b30:	68db      	ldr	r3, [r3, #12]
 8011b32:	4798      	blx	r3
 8011b34:	b138      	cbz	r0, 8011b46 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8011b36:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 8011b3a:	6803      	ldr	r3, [r0, #0]
 8011b3c:	4621      	mov	r1, r4
 8011b3e:	689b      	ldr	r3, [r3, #8]
 8011b40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011b44:	4718      	bx	r3
 8011b46:	bd10      	pop	{r4, pc}

08011b48 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 8011b48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b4c:	4291      	cmp	r1, r2
 8011b4e:	4604      	mov	r4, r0
 8011b50:	460e      	mov	r6, r1
 8011b52:	4615      	mov	r5, r2
 8011b54:	4698      	mov	r8, r3
 8011b56:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 8011b5a:	db05      	blt.n	8011b68 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x20>
 8011b5c:	4b11      	ldr	r3, [pc, #68]	; (8011ba4 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x5c>)
 8011b5e:	4a12      	ldr	r2, [pc, #72]	; (8011ba8 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x60>)
 8011b60:	2148      	movs	r1, #72	; 0x48
 8011b62:	4812      	ldr	r0, [pc, #72]	; (8011bac <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x64>)
 8011b64:	f01a fa46 	bl	802bff4 <__assert_func>
 8011b68:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8011b6c:	6803      	ldr	r3, [r0, #0]
 8011b6e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8011b72:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011b76:	4798      	blx	r3
 8011b78:	f1b8 0f00 	cmp.w	r8, #0
 8011b7c:	d10c      	bne.n	8011b98 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x50>
 8011b7e:	1bad      	subs	r5, r5, r6
 8011b80:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8011b84:	f8b4 3090 	ldrh.w	r3, [r4, #144]	; 0x90
 8011b88:	f8a4 7092 	strh.w	r7, [r4, #146]	; 0x92
 8011b8c:	42bb      	cmp	r3, r7
 8011b8e:	d806      	bhi.n	8011b9e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x56>
 8011b90:	4b07      	ldr	r3, [pc, #28]	; (8011bb0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x68>)
 8011b92:	4a05      	ldr	r2, [pc, #20]	; (8011ba8 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x60>)
 8011b94:	2155      	movs	r1, #85	; 0x55
 8011b96:	e7e4      	b.n	8011b62 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x1a>
 8011b98:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
 8011b9c:	e7f2      	b.n	8011b84 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x3c>
 8011b9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ba2:	bf00      	nop
 8011ba4:	08033016 	.word	0x08033016
 8011ba8:	08033168 	.word	0x08033168
 8011bac:	08033020 	.word	0x08033020
 8011bb0:	08033077 	.word	0x08033077

08011bb4 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8011bb4:	b570      	push	{r4, r5, r6, lr}
 8011bb6:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8011bba:	4604      	mov	r4, r0
 8011bbc:	b3a3      	cbz	r3, 8011c28 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 8011bbe:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8011bc2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8011bc6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 8011bca:	3001      	adds	r0, #1
 8011bcc:	1ad2      	subs	r2, r2, r3
 8011bce:	b212      	sxth	r2, r2
 8011bd0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8011bd4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8011bd8:	2100      	movs	r1, #0
 8011bda:	b280      	uxth	r0, r0
 8011bdc:	47a8      	blx	r5
 8011bde:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8011be2:	6823      	ldr	r3, [r4, #0]
 8011be4:	4401      	add	r1, r0
 8011be6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011bea:	4620      	mov	r0, r4
 8011bec:	4798      	blx	r3
 8011bee:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8011bf2:	429a      	cmp	r2, r3
 8011bf4:	db18      	blt.n	8011c28 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 8011bf6:	2500      	movs	r5, #0
 8011bf8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8011bfc:	f007 fbc4 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8011c00:	4621      	mov	r1, r4
 8011c02:	f007 fbf9 	bl	80193f8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8011c06:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8011c0a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8011c0e:	b158      	cbz	r0, 8011c28 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 8011c10:	6803      	ldr	r3, [r0, #0]
 8011c12:	68db      	ldr	r3, [r3, #12]
 8011c14:	4798      	blx	r3
 8011c16:	b138      	cbz	r0, 8011c28 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 8011c18:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8011c1c:	6803      	ldr	r3, [r0, #0]
 8011c1e:	4621      	mov	r1, r4
 8011c20:	689b      	ldr	r3, [r3, #8]
 8011c22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011c26:	4718      	bx	r3
 8011c28:	bd70      	pop	{r4, r5, r6, pc}

08011c2a <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8011c2a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011c2c:	4604      	mov	r4, r0
 8011c2e:	460d      	mov	r5, r1
 8011c30:	b1a9      	cbz	r1, 8011c5e <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8011c32:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8011c36:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8011c3a:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 8011c3e:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8011c42:	ab01      	add	r3, sp, #4
 8011c44:	1a12      	subs	r2, r2, r0
 8011c46:	1b89      	subs	r1, r1, r6
 8011c48:	1a38      	subs	r0, r7, r0
 8011c4a:	f008 fd43 	bl	801a6d4 <_ZN8touchgfx6muldivElllRl>
 8011c4e:	4629      	mov	r1, r5
 8011c50:	ab01      	add	r3, sp, #4
 8011c52:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8011c56:	4430      	add	r0, r6
 8011c58:	f008 fd3c 	bl	801a6d4 <_ZN8touchgfx6muldivElllRl>
 8011c5c:	b285      	uxth	r5, r0
 8011c5e:	4628      	mov	r0, r5
 8011c60:	b003      	add	sp, #12
 8011c62:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011c64 <_ZN8touchgfx8DrawableC1Ev>:
 8011c64:	4a0a      	ldr	r2, [pc, #40]	; (8011c90 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 8011c66:	6002      	str	r2, [r0, #0]
 8011c68:	2200      	movs	r2, #0
 8011c6a:	8082      	strh	r2, [r0, #4]
 8011c6c:	80c2      	strh	r2, [r0, #6]
 8011c6e:	8102      	strh	r2, [r0, #8]
 8011c70:	8142      	strh	r2, [r0, #10]
 8011c72:	8182      	strh	r2, [r0, #12]
 8011c74:	81c2      	strh	r2, [r0, #14]
 8011c76:	8202      	strh	r2, [r0, #16]
 8011c78:	8242      	strh	r2, [r0, #18]
 8011c7a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011c7e:	61c2      	str	r2, [r0, #28]
 8011c80:	8402      	strh	r2, [r0, #32]
 8011c82:	8442      	strh	r2, [r0, #34]	; 0x22
 8011c84:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011c88:	2201      	movs	r2, #1
 8011c8a:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8011c8e:	4770      	bx	lr
 8011c90:	08034f80 	.word	0x08034f80

08011c94 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8011c94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c98:	4604      	mov	r4, r0
 8011c9a:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8011c9e:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8011ca2:	460e      	mov	r6, r1
 8011ca4:	4615      	mov	r5, r2
 8011ca6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8011caa:	4619      	mov	r1, r3
 8011cac:	463a      	mov	r2, r7
 8011cae:	3058      	adds	r0, #88	; 0x58
 8011cb0:	4698      	mov	r8, r3
 8011cb2:	f7ff fe05 	bl	80118c0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011cb6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8011cba:	4446      	add	r6, r8
 8011cbc:	42b3      	cmp	r3, r6
 8011cbe:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011cc2:	bfb8      	it	lt
 8011cc4:	8126      	strhlt	r6, [r4, #8]
 8011cc6:	443d      	add	r5, r7
 8011cc8:	42ab      	cmp	r3, r5
 8011cca:	bfb8      	it	lt
 8011ccc:	8165      	strhlt	r5, [r4, #10]
 8011cce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011cd2 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8011cd2:	b510      	push	{r4, lr}
 8011cd4:	4604      	mov	r4, r0
 8011cd6:	302c      	adds	r0, #44	; 0x2c
 8011cd8:	f005 fc9b 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011cdc:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8011ce0:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8011ce4:	4620      	mov	r0, r4
 8011ce6:	f7ff fdeb 	bl	80118c0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011cea:	bd10      	pop	{r4, pc}

08011cec <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8011cec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011cee:	4604      	mov	r4, r0
 8011cf0:	4626      	mov	r6, r4
 8011cf2:	2500      	movs	r5, #0
 8011cf4:	f7ff ffb6 	bl	8011c64 <_ZN8touchgfx8DrawableC1Ev>
 8011cf8:	4b23      	ldr	r3, [pc, #140]	; (8011d88 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 8011cfa:	62a5      	str	r5, [r4, #40]	; 0x28
 8011cfc:	f846 3b2c 	str.w	r3, [r6], #44
 8011d00:	2226      	movs	r2, #38	; 0x26
 8011d02:	4629      	mov	r1, r5
 8011d04:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8011d08:	4630      	mov	r0, r6
 8011d0a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8011d0e:	f01a faf7 	bl	802c300 <memset>
 8011d12:	4630      	mov	r0, r6
 8011d14:	f7ff ffa6 	bl	8011c64 <_ZN8touchgfx8DrawableC1Ev>
 8011d18:	a902      	add	r1, sp, #8
 8011d1a:	4b1c      	ldr	r3, [pc, #112]	; (8011d8c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8011d1c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8011d1e:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8011d22:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8011d26:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 8011d2a:	4630      	mov	r0, r6
 8011d2c:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8011d30:	f005 fc6f 	bl	8017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011d34:	4638      	mov	r0, r7
 8011d36:	f7ff ff95 	bl	8011c64 <_ZN8touchgfx8DrawableC1Ev>
 8011d3a:	4b15      	ldr	r3, [pc, #84]	; (8011d90 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8011d3c:	65a3      	str	r3, [r4, #88]	; 0x58
 8011d3e:	2364      	movs	r3, #100	; 0x64
 8011d40:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8011d44:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8011d48:	4b12      	ldr	r3, [pc, #72]	; (8011d94 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 8011d4a:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8011d4e:	4629      	mov	r1, r5
 8011d50:	4630      	mov	r0, r6
 8011d52:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8011d56:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8011d5a:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8011d5e:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8011d62:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 8011d66:	f7f1 fcfb 	bl	8003760 <_ZN8touchgfx8Drawable4setXEs>
 8011d6a:	4629      	mov	r1, r5
 8011d6c:	4630      	mov	r0, r6
 8011d6e:	f7f1 fcf9 	bl	8003764 <_ZN8touchgfx8Drawable4setYEs>
 8011d72:	4631      	mov	r1, r6
 8011d74:	4620      	mov	r0, r4
 8011d76:	f000 f889 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011d7a:	4620      	mov	r0, r4
 8011d7c:	4639      	mov	r1, r7
 8011d7e:	f000 f885 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011d82:	4620      	mov	r0, r4
 8011d84:	b003      	add	sp, #12
 8011d86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011d88:	0803309c 	.word	0x0803309c
 8011d8c:	08034a34 	.word	0x08034a34
 8011d90:	08033294 	.word	0x08033294
 8011d94:	0801ae33 	.word	0x0801ae33

08011d98 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8011d98:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011d9a:	2000      	movs	r0, #0
 8011d9c:	b12b      	cbz	r3, 8011daa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8011d9e:	b920      	cbnz	r0, 8011daa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8011da0:	1a5a      	subs	r2, r3, r1
 8011da2:	4250      	negs	r0, r2
 8011da4:	4150      	adcs	r0, r2
 8011da6:	699b      	ldr	r3, [r3, #24]
 8011da8:	e7f8      	b.n	8011d9c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8011daa:	4770      	bx	lr

08011dac <_ZN8touchgfx9Container9removeAllEv>:
 8011dac:	2200      	movs	r2, #0
 8011dae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011db0:	b123      	cbz	r3, 8011dbc <_ZN8touchgfx9Container9removeAllEv+0x10>
 8011db2:	6999      	ldr	r1, [r3, #24]
 8011db4:	6281      	str	r1, [r0, #40]	; 0x28
 8011db6:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8011dba:	e7f8      	b.n	8011dae <_ZN8touchgfx9Container9removeAllEv+0x2>
 8011dbc:	4770      	bx	lr

08011dbe <_ZN8touchgfx9Container6unlinkEv>:
 8011dbe:	2300      	movs	r3, #0
 8011dc0:	6283      	str	r3, [r0, #40]	; 0x28
 8011dc2:	4770      	bx	lr

08011dc4 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8011dc4:	2200      	movs	r2, #0
 8011dc6:	8002      	strh	r2, [r0, #0]
 8011dc8:	8042      	strh	r2, [r0, #2]
 8011dca:	8082      	strh	r2, [r0, #4]
 8011dcc:	80c2      	strh	r2, [r0, #6]
 8011dce:	4770      	bx	lr

08011dd0 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8011dd0:	b570      	push	{r4, r5, r6, lr}
 8011dd2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011dd4:	460d      	mov	r5, r1
 8011dd6:	4616      	mov	r6, r2
 8011dd8:	b13c      	cbz	r4, 8011dea <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8011dda:	6823      	ldr	r3, [r4, #0]
 8011ddc:	4620      	mov	r0, r4
 8011dde:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8011de0:	4632      	mov	r2, r6
 8011de2:	4629      	mov	r1, r5
 8011de4:	4798      	blx	r3
 8011de6:	69a4      	ldr	r4, [r4, #24]
 8011de8:	e7f6      	b.n	8011dd8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8011dea:	bd70      	pop	{r4, r5, r6, pc}

08011dec <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8011dec:	b538      	push	{r3, r4, r5, lr}
 8011dee:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011df0:	460d      	mov	r5, r1
 8011df2:	b134      	cbz	r4, 8011e02 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8011df4:	682b      	ldr	r3, [r5, #0]
 8011df6:	4621      	mov	r1, r4
 8011df8:	689b      	ldr	r3, [r3, #8]
 8011dfa:	4628      	mov	r0, r5
 8011dfc:	4798      	blx	r3
 8011dfe:	69a4      	ldr	r4, [r4, #24]
 8011e00:	e7f7      	b.n	8011df2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8011e02:	bd38      	pop	{r3, r4, r5, pc}

08011e04 <_ZNK8touchgfx9Container17invalidateContentEv>:
 8011e04:	b510      	push	{r4, lr}
 8011e06:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011e08:	b12c      	cbz	r4, 8011e16 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 8011e0a:	6823      	ldr	r3, [r4, #0]
 8011e0c:	4620      	mov	r0, r4
 8011e0e:	699b      	ldr	r3, [r3, #24]
 8011e10:	4798      	blx	r3
 8011e12:	69a4      	ldr	r4, [r4, #24]
 8011e14:	e7f8      	b.n	8011e08 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 8011e16:	bd10      	pop	{r4, pc}

08011e18 <_ZN8touchgfx9ContainerD1Ev>:
 8011e18:	4770      	bx	lr

08011e1a <_ZN8touchgfx9ContainerD0Ev>:
 8011e1a:	b510      	push	{r4, lr}
 8011e1c:	212c      	movs	r1, #44	; 0x2c
 8011e1e:	4604      	mov	r4, r0
 8011e20:	f019 f99b 	bl	802b15a <_ZdlPvj>
 8011e24:	4620      	mov	r0, r4
 8011e26:	bd10      	pop	{r4, pc}

08011e28 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8011e28:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011e2a:	b19b      	cbz	r3, 8011e54 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8011e2c:	428b      	cmp	r3, r1
 8011e2e:	d109      	bne.n	8011e44 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8011e30:	699a      	ldr	r2, [r3, #24]
 8011e32:	2100      	movs	r1, #0
 8011e34:	6159      	str	r1, [r3, #20]
 8011e36:	6282      	str	r2, [r0, #40]	; 0x28
 8011e38:	b902      	cbnz	r2, 8011e3c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8011e3a:	4770      	bx	lr
 8011e3c:	6199      	str	r1, [r3, #24]
 8011e3e:	4770      	bx	lr
 8011e40:	4613      	mov	r3, r2
 8011e42:	b13a      	cbz	r2, 8011e54 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8011e44:	699a      	ldr	r2, [r3, #24]
 8011e46:	428a      	cmp	r2, r1
 8011e48:	d1fa      	bne.n	8011e40 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8011e4a:	698a      	ldr	r2, [r1, #24]
 8011e4c:	619a      	str	r2, [r3, #24]
 8011e4e:	2300      	movs	r3, #0
 8011e50:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8011e54:	4770      	bx	lr

08011e56 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8011e56:	b410      	push	{r4}
 8011e58:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011e5a:	4604      	mov	r4, r0
 8011e5c:	b92b      	cbnz	r3, 8011e6a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8011e5e:	6803      	ldr	r3, [r0, #0]
 8011e60:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011e64:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8011e66:	4611      	mov	r1, r2
 8011e68:	4718      	bx	r3
 8011e6a:	b941      	cbnz	r1, 8011e7e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8011e6c:	6193      	str	r3, [r2, #24]
 8011e6e:	6282      	str	r2, [r0, #40]	; 0x28
 8011e70:	6154      	str	r4, [r2, #20]
 8011e72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011e76:	4770      	bx	lr
 8011e78:	4603      	mov	r3, r0
 8011e7a:	2800      	cmp	r0, #0
 8011e7c:	d0f9      	beq.n	8011e72 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8011e7e:	4299      	cmp	r1, r3
 8011e80:	6998      	ldr	r0, [r3, #24]
 8011e82:	d1f9      	bne.n	8011e78 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8011e84:	6190      	str	r0, [r2, #24]
 8011e86:	618a      	str	r2, [r1, #24]
 8011e88:	e7f2      	b.n	8011e70 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8011e8c:	4288      	cmp	r0, r1
 8011e8e:	b508      	push	{r3, lr}
 8011e90:	d105      	bne.n	8011e9e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8011e92:	4b11      	ldr	r3, [pc, #68]	; (8011ed8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8011e94:	4a11      	ldr	r2, [pc, #68]	; (8011edc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8011e96:	2120      	movs	r1, #32
 8011e98:	4811      	ldr	r0, [pc, #68]	; (8011ee0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8011e9a:	f01a f8ab 	bl	802bff4 <__assert_func>
 8011e9e:	694b      	ldr	r3, [r1, #20]
 8011ea0:	b11b      	cbz	r3, 8011eaa <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8011ea2:	4b10      	ldr	r3, [pc, #64]	; (8011ee4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8011ea4:	4a0d      	ldr	r2, [pc, #52]	; (8011edc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8011ea6:	2121      	movs	r1, #33	; 0x21
 8011ea8:	e7f6      	b.n	8011e98 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8011eaa:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8011eae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011eb0:	b913      	cbnz	r3, 8011eb8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8011eb2:	6281      	str	r1, [r0, #40]	; 0x28
 8011eb4:	bd08      	pop	{r3, pc}
 8011eb6:	4613      	mov	r3, r2
 8011eb8:	699a      	ldr	r2, [r3, #24]
 8011eba:	b12a      	cbz	r2, 8011ec8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8011ebc:	428b      	cmp	r3, r1
 8011ebe:	d1fa      	bne.n	8011eb6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8011ec0:	4b09      	ldr	r3, [pc, #36]	; (8011ee8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8011ec2:	4a06      	ldr	r2, [pc, #24]	; (8011edc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8011ec4:	2132      	movs	r1, #50	; 0x32
 8011ec6:	e7e7      	b.n	8011e98 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8011ec8:	428b      	cmp	r3, r1
 8011eca:	d103      	bne.n	8011ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8011ecc:	4b06      	ldr	r3, [pc, #24]	; (8011ee8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8011ece:	4a03      	ldr	r2, [pc, #12]	; (8011edc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8011ed0:	2135      	movs	r1, #53	; 0x35
 8011ed2:	e7e1      	b.n	8011e98 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8011ed4:	6199      	str	r1, [r3, #24]
 8011ed6:	e7ed      	b.n	8011eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8011ed8:	080331c1 	.word	0x080331c1
 8011edc:	0803331c 	.word	0x0803331c
 8011ee0:	080331ed 	.word	0x080331ed
 8011ee4:	08033220 	.word	0x08033220
 8011ee8:	08033256 	.word	0x08033256

08011eec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8011eec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ef0:	461f      	mov	r7, r3
 8011ef2:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8011ef6:	460d      	mov	r5, r1
 8011ef8:	4616      	mov	r6, r2
 8011efa:	b103      	cbz	r3, 8011efe <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8011efc:	6038      	str	r0, [r7, #0]
 8011efe:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8011f00:	b314      	cbz	r4, 8011f48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8011f02:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011f06:	b1eb      	cbz	r3, 8011f44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011f08:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011f0c:	428d      	cmp	r5, r1
 8011f0e:	db19      	blt.n	8011f44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011f10:	8923      	ldrh	r3, [r4, #8]
 8011f12:	b289      	uxth	r1, r1
 8011f14:	440b      	add	r3, r1
 8011f16:	b21b      	sxth	r3, r3
 8011f18:	429d      	cmp	r5, r3
 8011f1a:	da13      	bge.n	8011f44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011f1c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011f20:	4296      	cmp	r6, r2
 8011f22:	db0f      	blt.n	8011f44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011f24:	8963      	ldrh	r3, [r4, #10]
 8011f26:	b292      	uxth	r2, r2
 8011f28:	4413      	add	r3, r2
 8011f2a:	b21b      	sxth	r3, r3
 8011f2c:	429e      	cmp	r6, r3
 8011f2e:	da09      	bge.n	8011f44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8011f30:	6823      	ldr	r3, [r4, #0]
 8011f32:	1ab2      	subs	r2, r6, r2
 8011f34:	1a69      	subs	r1, r5, r1
 8011f36:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8011f3a:	b212      	sxth	r2, r2
 8011f3c:	463b      	mov	r3, r7
 8011f3e:	b209      	sxth	r1, r1
 8011f40:	4620      	mov	r0, r4
 8011f42:	47c0      	blx	r8
 8011f44:	69a4      	ldr	r4, [r4, #24]
 8011f46:	e7db      	b.n	8011f00 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8011f48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011f4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8011f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f50:	4c6e      	ldr	r4, [pc, #440]	; (801210c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8011f52:	b0a1      	sub	sp, #132	; 0x84
 8011f54:	6824      	ldr	r4, [r4, #0]
 8011f56:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8011f58:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8011f5c:	9303      	str	r3, [sp, #12]
 8011f5e:	2400      	movs	r4, #0
 8011f60:	802c      	strh	r4, [r5, #0]
 8011f62:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8011f64:	802c      	strh	r4, [r5, #0]
 8011f66:	601c      	str	r4, [r3, #0]
 8011f68:	4606      	mov	r6, r0
 8011f6a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8011f6e:	f7ff ffbd 	bl	8011eec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011f72:	f1b9 0f03 	cmp.w	r9, #3
 8011f76:	f340 80c2 	ble.w	80120fe <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8011f7a:	4631      	mov	r1, r6
 8011f7c:	a80c      	add	r0, sp, #48	; 0x30
 8011f7e:	f008 fa9b 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011f82:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8011f86:	9306      	str	r3, [sp, #24]
 8011f88:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8011f8c:	9307      	str	r3, [sp, #28]
 8011f8e:	9b03      	ldr	r3, [sp, #12]
 8011f90:	f8d3 a000 	ldr.w	sl, [r3]
 8011f94:	f1ba 0f00 	cmp.w	sl, #0
 8011f98:	f000 80b4 	beq.w	8012104 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8011f9c:	4651      	mov	r1, sl
 8011f9e:	a810      	add	r0, sp, #64	; 0x40
 8011fa0:	f008 fa8a 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011fa4:	9b01      	ldr	r3, [sp, #4]
 8011fa6:	9a06      	ldr	r2, [sp, #24]
 8011fa8:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8011fac:	189d      	adds	r5, r3, r2
 8011fae:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8011fb2:	9a07      	ldr	r2, [sp, #28]
 8011fb4:	2002      	movs	r0, #2
 8011fb6:	fb91 f1f0 	sdiv	r1, r1, r0
 8011fba:	4419      	add	r1, r3
 8011fbc:	1a6d      	subs	r5, r5, r1
 8011fbe:	9b02      	ldr	r3, [sp, #8]
 8011fc0:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011fc4:	4413      	add	r3, r2
 8011fc6:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8011fca:	fb92 f2f0 	sdiv	r2, r2, r0
 8011fce:	440a      	add	r2, r1
 8011fd0:	1a9b      	subs	r3, r3, r2
 8011fd2:	435b      	muls	r3, r3
 8011fd4:	fb05 3505 	mla	r5, r5, r5, r3
 8011fd8:	4f4d      	ldr	r7, [pc, #308]	; (8012110 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8011fda:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8011fdc:	ac10      	add	r4, sp, #64	; 0x40
 8011fde:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011fe0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8011fe2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011fe4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8011fe6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011fe8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8011fec:	f1b9 0f0c 	cmp.w	r9, #12
 8011ff0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8011ff4:	f04f 0303 	mov.w	r3, #3
 8011ff8:	bfc8      	it	gt
 8011ffa:	4698      	movgt	r8, r3
 8011ffc:	f8cd 9000 	str.w	r9, [sp]
 8012000:	f04f 0400 	mov.w	r4, #0
 8012004:	bfdc      	itt	le
 8012006:	f109 32ff 	addle.w	r2, r9, #4294967295
 801200a:	fb92 f8f3 	sdivle	r8, r2, r3
 801200e:	1c63      	adds	r3, r4, #1
 8012010:	aa10      	add	r2, sp, #64	; 0x40
 8012012:	f004 0401 	and.w	r4, r4, #1
 8012016:	9308      	str	r3, [sp, #32]
 8012018:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 801201c:	9b00      	ldr	r3, [sp, #0]
 801201e:	fb93 f3f8 	sdiv	r3, r3, r8
 8012022:	b29b      	uxth	r3, r3
 8012024:	3404      	adds	r4, #4
 8012026:	f04f 0b00 	mov.w	fp, #0
 801202a:	9304      	str	r3, [sp, #16]
 801202c:	9a04      	ldr	r2, [sp, #16]
 801202e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8012032:	fb13 f302 	smulbb	r3, r3, r2
 8012036:	9a01      	ldr	r2, [sp, #4]
 8012038:	b29b      	uxth	r3, r3
 801203a:	1899      	adds	r1, r3, r2
 801203c:	9305      	str	r3, [sp, #20]
 801203e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012042:	b209      	sxth	r1, r1
 8012044:	4299      	cmp	r1, r3
 8012046:	db4d      	blt.n	80120e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012048:	8932      	ldrh	r2, [r6, #8]
 801204a:	4413      	add	r3, r2
 801204c:	b21b      	sxth	r3, r3
 801204e:	4299      	cmp	r1, r3
 8012050:	da48      	bge.n	80120e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012052:	9b04      	ldr	r3, [sp, #16]
 8012054:	6827      	ldr	r7, [r4, #0]
 8012056:	fb17 f703 	smulbb	r7, r7, r3
 801205a:	9b02      	ldr	r3, [sp, #8]
 801205c:	b2bf      	uxth	r7, r7
 801205e:	18fa      	adds	r2, r7, r3
 8012060:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012064:	b212      	sxth	r2, r2
 8012066:	429a      	cmp	r2, r3
 8012068:	db3c      	blt.n	80120e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801206a:	8970      	ldrh	r0, [r6, #10]
 801206c:	4403      	add	r3, r0
 801206e:	b21b      	sxth	r3, r3
 8012070:	429a      	cmp	r2, r3
 8012072:	da37      	bge.n	80120e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012074:	2300      	movs	r3, #0
 8012076:	930b      	str	r3, [sp, #44]	; 0x2c
 8012078:	4630      	mov	r0, r6
 801207a:	ab0b      	add	r3, sp, #44	; 0x2c
 801207c:	f7ff ff36 	bl	8011eec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012080:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012082:	b37a      	cbz	r2, 80120e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012084:	4552      	cmp	r2, sl
 8012086:	d02d      	beq.n	80120e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012088:	4611      	mov	r1, r2
 801208a:	a80e      	add	r0, sp, #56	; 0x38
 801208c:	9209      	str	r2, [sp, #36]	; 0x24
 801208e:	f008 fa13 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012092:	9a06      	ldr	r2, [sp, #24]
 8012094:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012098:	9b01      	ldr	r3, [sp, #4]
 801209a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 801209e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 80120a2:	4413      	add	r3, r2
 80120a4:	f04f 0e02 	mov.w	lr, #2
 80120a8:	fb91 f1fe 	sdiv	r1, r1, lr
 80120ac:	4401      	add	r1, r0
 80120ae:	1a58      	subs	r0, r3, r1
 80120b0:	9a07      	ldr	r2, [sp, #28]
 80120b2:	9b02      	ldr	r3, [sp, #8]
 80120b4:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 80120b8:	fb9c fcfe 	sdiv	ip, ip, lr
 80120bc:	4413      	add	r3, r2
 80120be:	448c      	add	ip, r1
 80120c0:	eba3 030c 	sub.w	r3, r3, ip
 80120c4:	435b      	muls	r3, r3
 80120c6:	fb00 3300 	mla	r3, r0, r0, r3
 80120ca:	42ab      	cmp	r3, r5
 80120cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80120ce:	d208      	bcs.n	80120e2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80120d0:	9803      	ldr	r0, [sp, #12]
 80120d2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80120d4:	6001      	str	r1, [r0, #0]
 80120d6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80120d8:	9805      	ldr	r0, [sp, #20]
 80120da:	8008      	strh	r0, [r1, #0]
 80120dc:	992b      	ldr	r1, [sp, #172]	; 0xac
 80120de:	461d      	mov	r5, r3
 80120e0:	800f      	strh	r7, [r1, #0]
 80120e2:	4692      	mov	sl, r2
 80120e4:	f10b 0b01 	add.w	fp, fp, #1
 80120e8:	f1bb 0f04 	cmp.w	fp, #4
 80120ec:	f104 0408 	add.w	r4, r4, #8
 80120f0:	d19c      	bne.n	801202c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80120f2:	9b00      	ldr	r3, [sp, #0]
 80120f4:	9c08      	ldr	r4, [sp, #32]
 80120f6:	444b      	add	r3, r9
 80120f8:	4544      	cmp	r4, r8
 80120fa:	9300      	str	r3, [sp, #0]
 80120fc:	d187      	bne.n	801200e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80120fe:	b021      	add	sp, #132	; 0x84
 8012100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012104:	f04f 35ff 	mov.w	r5, #4294967295
 8012108:	e766      	b.n	8011fd8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 801210a:	bf00      	nop
 801210c:	2001e1c0 	.word	0x2001e1c0
 8012110:	0802ed34 	.word	0x0802ed34

08012114 <_ZN8touchgfx4RectaNERKS0_>:
 8012114:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012118:	f9b1 7000 	ldrsh.w	r7, [r1]
 801211c:	888c      	ldrh	r4, [r1, #4]
 801211e:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012122:	443c      	add	r4, r7
 8012124:	b2a4      	uxth	r4, r4
 8012126:	fa0f f884 	sxth.w	r8, r4
 801212a:	45c1      	cmp	r9, r8
 801212c:	da2f      	bge.n	801218e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801212e:	8882      	ldrh	r2, [r0, #4]
 8012130:	444a      	add	r2, r9
 8012132:	b292      	uxth	r2, r2
 8012134:	fa0f fe82 	sxth.w	lr, r2
 8012138:	4577      	cmp	r7, lr
 801213a:	da28      	bge.n	801218e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801213c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012140:	88cb      	ldrh	r3, [r1, #6]
 8012142:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012146:	442b      	add	r3, r5
 8012148:	b21b      	sxth	r3, r3
 801214a:	429e      	cmp	r6, r3
 801214c:	da1f      	bge.n	801218e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801214e:	88c3      	ldrh	r3, [r0, #6]
 8012150:	4433      	add	r3, r6
 8012152:	b29b      	uxth	r3, r3
 8012154:	fa0f fc83 	sxth.w	ip, r3
 8012158:	4565      	cmp	r5, ip
 801215a:	da18      	bge.n	801218e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801215c:	454f      	cmp	r7, r9
 801215e:	bfb8      	it	lt
 8012160:	464f      	movlt	r7, r9
 8012162:	42b5      	cmp	r5, r6
 8012164:	bfb8      	it	lt
 8012166:	4635      	movlt	r5, r6
 8012168:	45f0      	cmp	r8, lr
 801216a:	bfd8      	it	le
 801216c:	4622      	movle	r2, r4
 801216e:	1bd2      	subs	r2, r2, r7
 8012170:	8082      	strh	r2, [r0, #4]
 8012172:	884a      	ldrh	r2, [r1, #2]
 8012174:	88c9      	ldrh	r1, [r1, #6]
 8012176:	8007      	strh	r7, [r0, #0]
 8012178:	440a      	add	r2, r1
 801217a:	b292      	uxth	r2, r2
 801217c:	b211      	sxth	r1, r2
 801217e:	458c      	cmp	ip, r1
 8012180:	bfa8      	it	ge
 8012182:	4613      	movge	r3, r2
 8012184:	1b5b      	subs	r3, r3, r5
 8012186:	80c3      	strh	r3, [r0, #6]
 8012188:	8045      	strh	r5, [r0, #2]
 801218a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801218e:	2300      	movs	r3, #0
 8012190:	8003      	strh	r3, [r0, #0]
 8012192:	8043      	strh	r3, [r0, #2]
 8012194:	8083      	strh	r3, [r0, #4]
 8012196:	80c3      	strh	r3, [r0, #6]
 8012198:	e7f7      	b.n	801218a <_ZN8touchgfx4RectaNERKS0_+0x76>

0801219a <_ZNK8touchgfx4Rect7isEmptyEv>:
 801219a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801219e:	2b00      	cmp	r3, #0
 80121a0:	dd06      	ble.n	80121b0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80121a2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80121a6:	2800      	cmp	r0, #0
 80121a8:	bfcc      	ite	gt
 80121aa:	2000      	movgt	r0, #0
 80121ac:	2001      	movle	r0, #1
 80121ae:	4770      	bx	lr
 80121b0:	2001      	movs	r0, #1
 80121b2:	4770      	bx	lr

080121b4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80121b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121b8:	2300      	movs	r3, #0
 80121ba:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80121bc:	8003      	strh	r3, [r0, #0]
 80121be:	4604      	mov	r4, r0
 80121c0:	8043      	strh	r3, [r0, #2]
 80121c2:	8083      	strh	r3, [r0, #4]
 80121c4:	80c3      	strh	r3, [r0, #6]
 80121c6:	2d00      	cmp	r5, #0
 80121c8:	d040      	beq.n	801224c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80121ca:	1d28      	adds	r0, r5, #4
 80121cc:	f7ff ffe5 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 80121d0:	b988      	cbnz	r0, 80121f6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80121d2:	4620      	mov	r0, r4
 80121d4:	f7ff ffe1 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 80121d8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80121dc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80121e0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80121e4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80121e8:	b138      	cbz	r0, 80121fa <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80121ea:	8022      	strh	r2, [r4, #0]
 80121ec:	8063      	strh	r3, [r4, #2]
 80121ee:	f8a4 e004 	strh.w	lr, [r4, #4]
 80121f2:	f8a4 c006 	strh.w	ip, [r4, #6]
 80121f6:	69ad      	ldr	r5, [r5, #24]
 80121f8:	e7e5      	b.n	80121c6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80121fa:	f9b4 0000 	ldrsh.w	r0, [r4]
 80121fe:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012202:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012206:	4290      	cmp	r0, r2
 8012208:	4607      	mov	r7, r0
 801220a:	bfa8      	it	ge
 801220c:	4617      	movge	r7, r2
 801220e:	4472      	add	r2, lr
 8012210:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012214:	8027      	strh	r7, [r4, #0]
 8012216:	4299      	cmp	r1, r3
 8012218:	460e      	mov	r6, r1
 801221a:	4440      	add	r0, r8
 801221c:	bfa8      	it	ge
 801221e:	461e      	movge	r6, r3
 8012220:	4471      	add	r1, lr
 8012222:	4463      	add	r3, ip
 8012224:	b200      	sxth	r0, r0
 8012226:	b212      	sxth	r2, r2
 8012228:	b209      	sxth	r1, r1
 801222a:	b21b      	sxth	r3, r3
 801222c:	4290      	cmp	r0, r2
 801222e:	bfac      	ite	ge
 8012230:	ebc7 0200 	rsbge	r2, r7, r0
 8012234:	ebc7 0202 	rsblt	r2, r7, r2
 8012238:	4299      	cmp	r1, r3
 801223a:	bfac      	ite	ge
 801223c:	ebc6 0301 	rsbge	r3, r6, r1
 8012240:	ebc6 0303 	rsblt	r3, r6, r3
 8012244:	8066      	strh	r6, [r4, #2]
 8012246:	80a2      	strh	r2, [r4, #4]
 8012248:	80e3      	strh	r3, [r4, #6]
 801224a:	e7d4      	b.n	80121f6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801224c:	4620      	mov	r0, r4
 801224e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012252 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8012252:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012256:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 801225a:	b383      	cbz	r3, 80122be <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 801225c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801225e:	b374      	cbz	r4, 80122be <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012260:	f9b1 5000 	ldrsh.w	r5, [r1]
 8012264:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012268:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 801226c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012270:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012274:	b303      	cbz	r3, 80122b8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012276:	4668      	mov	r0, sp
 8012278:	1d21      	adds	r1, r4, #4
 801227a:	f8ad 5000 	strh.w	r5, [sp]
 801227e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012282:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012286:	f8ad 8006 	strh.w	r8, [sp, #6]
 801228a:	f7ff ff43 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801228e:	4668      	mov	r0, sp
 8012290:	f7ff ff83 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 8012294:	b980      	cbnz	r0, 80122b8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012296:	f8bd 3000 	ldrh.w	r3, [sp]
 801229a:	88a2      	ldrh	r2, [r4, #4]
 801229c:	1a9b      	subs	r3, r3, r2
 801229e:	f8ad 3000 	strh.w	r3, [sp]
 80122a2:	88e2      	ldrh	r2, [r4, #6]
 80122a4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80122a8:	1a9b      	subs	r3, r3, r2
 80122aa:	f8ad 3002 	strh.w	r3, [sp, #2]
 80122ae:	6823      	ldr	r3, [r4, #0]
 80122b0:	4669      	mov	r1, sp
 80122b2:	689b      	ldr	r3, [r3, #8]
 80122b4:	4620      	mov	r0, r4
 80122b6:	4798      	blx	r3
 80122b8:	69a4      	ldr	r4, [r4, #24]
 80122ba:	2c00      	cmp	r4, #0
 80122bc:	d1d8      	bne.n	8012270 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80122be:	b002      	add	sp, #8
 80122c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080122c4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80122c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80122c6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80122ca:	460d      	mov	r5, r1
 80122cc:	4616      	mov	r6, r2
 80122ce:	b323      	cbz	r3, 801231a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80122d0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80122d2:	b314      	cbz	r4, 801231a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80122d4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80122d8:	b1eb      	cbz	r3, 8012316 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80122da:	6828      	ldr	r0, [r5, #0]
 80122dc:	6869      	ldr	r1, [r5, #4]
 80122de:	466b      	mov	r3, sp
 80122e0:	c303      	stmia	r3!, {r0, r1}
 80122e2:	4668      	mov	r0, sp
 80122e4:	1d21      	adds	r1, r4, #4
 80122e6:	f7ff ff15 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 80122ea:	4668      	mov	r0, sp
 80122ec:	f7ff ff55 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 80122f0:	b988      	cbnz	r0, 8012316 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80122f2:	f8bd 3000 	ldrh.w	r3, [sp]
 80122f6:	88a2      	ldrh	r2, [r4, #4]
 80122f8:	1a9b      	subs	r3, r3, r2
 80122fa:	f8ad 3000 	strh.w	r3, [sp]
 80122fe:	88e2      	ldrh	r2, [r4, #6]
 8012300:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012304:	1a9b      	subs	r3, r3, r2
 8012306:	f8ad 3002 	strh.w	r3, [sp, #2]
 801230a:	6823      	ldr	r3, [r4, #0]
 801230c:	4632      	mov	r2, r6
 801230e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012310:	4669      	mov	r1, sp
 8012312:	4620      	mov	r0, r4
 8012314:	4798      	blx	r3
 8012316:	69a4      	ldr	r4, [r4, #24]
 8012318:	e7db      	b.n	80122d2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 801231a:	b002      	add	sp, #8
 801231c:	bd70      	pop	{r4, r5, r6, pc}

0801231e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801231e:	b513      	push	{r0, r1, r4, lr}
 8012320:	6803      	ldr	r3, [r0, #0]
 8012322:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8012326:	2300      	movs	r3, #0
 8012328:	e9cd 3300 	strd	r3, r3, [sp]
 801232c:	466b      	mov	r3, sp
 801232e:	47a0      	blx	r4
 8012330:	b002      	add	sp, #8
 8012332:	bd10      	pop	{r4, pc}

08012334 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8012334:	2301      	movs	r3, #1
 8012336:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 801233a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 801233e:	4770      	bx	lr

08012340 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8012340:	2301      	movs	r3, #1
 8012342:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8012346:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 801234a:	4770      	bx	lr

0801234c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801234c:	6843      	ldr	r3, [r0, #4]
 801234e:	2201      	movs	r2, #1
 8012350:	725a      	strb	r2, [r3, #9]
 8012352:	6840      	ldr	r0, [r0, #4]
 8012354:	6803      	ldr	r3, [r0, #0]
 8012356:	691b      	ldr	r3, [r3, #16]
 8012358:	4718      	bx	r3

0801235a <_ZN8touchgfx3HAL8flushDMAEv>:
 801235a:	6840      	ldr	r0, [r0, #4]
 801235c:	6803      	ldr	r3, [r0, #0]
 801235e:	689b      	ldr	r3, [r3, #8]
 8012360:	4718      	bx	r3

08012362 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8012362:	b530      	push	{r4, r5, lr}
 8012364:	b08b      	sub	sp, #44	; 0x2c
 8012366:	6804      	ldr	r4, [r0, #0]
 8012368:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801236c:	9509      	str	r5, [sp, #36]	; 0x24
 801236e:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8012372:	9508      	str	r5, [sp, #32]
 8012374:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8012378:	9507      	str	r5, [sp, #28]
 801237a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801237e:	9506      	str	r5, [sp, #24]
 8012380:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8012384:	9505      	str	r5, [sp, #20]
 8012386:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 801238a:	9504      	str	r5, [sp, #16]
 801238c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8012390:	9503      	str	r5, [sp, #12]
 8012392:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8012396:	9502      	str	r5, [sp, #8]
 8012398:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801239c:	e9cd 3500 	strd	r3, r5, [sp]
 80123a0:	4613      	mov	r3, r2
 80123a2:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80123a4:	2200      	movs	r2, #0
 80123a6:	47a0      	blx	r4
 80123a8:	b00b      	add	sp, #44	; 0x2c
 80123aa:	bd30      	pop	{r4, r5, pc}

080123ac <_ZN8touchgfx3HAL10beginFrameEv>:
 80123ac:	4b04      	ldr	r3, [pc, #16]	; (80123c0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80123ae:	781b      	ldrb	r3, [r3, #0]
 80123b0:	b123      	cbz	r3, 80123bc <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80123b2:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 80123b6:	f080 0001 	eor.w	r0, r0, #1
 80123ba:	4770      	bx	lr
 80123bc:	2001      	movs	r0, #1
 80123be:	4770      	bx	lr
 80123c0:	2001e1be 	.word	0x2001e1be

080123c4 <_ZN8touchgfx3HAL8endFrameEv>:
 80123c4:	b510      	push	{r4, lr}
 80123c6:	4604      	mov	r4, r0
 80123c8:	6840      	ldr	r0, [r0, #4]
 80123ca:	6803      	ldr	r3, [r0, #0]
 80123cc:	689b      	ldr	r3, [r3, #8]
 80123ce:	4798      	blx	r3
 80123d0:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 80123d4:	b113      	cbz	r3, 80123dc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80123d6:	2301      	movs	r3, #1
 80123d8:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80123dc:	bd10      	pop	{r4, pc}

080123de <_ZN8touchgfx3HAL10initializeEv>:
 80123de:	b510      	push	{r4, lr}
 80123e0:	4604      	mov	r4, r0
 80123e2:	f7ee ffed 	bl	80013c0 <_ZN8touchgfx10OSWrappers10initializeEv>
 80123e6:	6860      	ldr	r0, [r4, #4]
 80123e8:	6803      	ldr	r3, [r0, #0]
 80123ea:	68db      	ldr	r3, [r3, #12]
 80123ec:	4798      	blx	r3
 80123ee:	68e0      	ldr	r0, [r4, #12]
 80123f0:	6803      	ldr	r3, [r0, #0]
 80123f2:	689b      	ldr	r3, [r3, #8]
 80123f4:	4798      	blx	r3
 80123f6:	6823      	ldr	r3, [r4, #0]
 80123f8:	4620      	mov	r0, r4
 80123fa:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80123fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012400:	4718      	bx	r3
	...

08012404 <_ZN8touchgfx3HAL4tickEv>:
 8012404:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012406:	6803      	ldr	r3, [r0, #0]
 8012408:	4d5b      	ldr	r5, [pc, #364]	; (8012578 <_ZN8touchgfx3HAL4tickEv+0x174>)
 801240a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801240e:	4604      	mov	r4, r0
 8012410:	4798      	blx	r3
 8012412:	2800      	cmp	r0, #0
 8012414:	f000 8095 	beq.w	8012542 <_ZN8touchgfx3HAL4tickEv+0x13e>
 8012418:	2001      	movs	r0, #1
 801241a:	f7ee fefd 	bl	8001218 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801241e:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8012422:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8012426:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 801242a:	2600      	movs	r6, #0
 801242c:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8012430:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8012434:	b133      	cbz	r3, 8012444 <_ZN8touchgfx3HAL4tickEv+0x40>
 8012436:	6823      	ldr	r3, [r4, #0]
 8012438:	4620      	mov	r0, r4
 801243a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801243e:	4798      	blx	r3
 8012440:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8012444:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8012448:	6862      	ldr	r2, [r4, #4]
 801244a:	f083 0301 	eor.w	r3, r3, #1
 801244e:	7253      	strb	r3, [r2, #9]
 8012450:	2601      	movs	r6, #1
 8012452:	702e      	strb	r6, [r5, #0]
 8012454:	f006 ff98 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 8012458:	6803      	ldr	r3, [r0, #0]
 801245a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801245c:	4798      	blx	r3
 801245e:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8012462:	b90b      	cbnz	r3, 8012468 <_ZN8touchgfx3HAL4tickEv+0x64>
 8012464:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8012468:	f006 ff8e 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 801246c:	6803      	ldr	r3, [r0, #0]
 801246e:	695b      	ldr	r3, [r3, #20]
 8012470:	4798      	blx	r3
 8012472:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8012474:	6803      	ldr	r3, [r0, #0]
 8012476:	691b      	ldr	r3, [r3, #16]
 8012478:	4798      	blx	r3
 801247a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 801247e:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8012482:	3b01      	subs	r3, #1
 8012484:	b2db      	uxtb	r3, r3
 8012486:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 801248a:	b10a      	cbz	r2, 8012490 <_ZN8touchgfx3HAL4tickEv+0x8c>
 801248c:	2b00      	cmp	r3, #0
 801248e:	d1eb      	bne.n	8012468 <_ZN8touchgfx3HAL4tickEv+0x64>
 8012490:	4a3a      	ldr	r2, [pc, #232]	; (801257c <_ZN8touchgfx3HAL4tickEv+0x178>)
 8012492:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8012496:	7813      	ldrb	r3, [r2, #0]
 8012498:	3301      	adds	r3, #1
 801249a:	b25b      	sxtb	r3, r3
 801249c:	4299      	cmp	r1, r3
 801249e:	7013      	strb	r3, [r2, #0]
 80124a0:	dc10      	bgt.n	80124c4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80124a2:	68e0      	ldr	r0, [r4, #12]
 80124a4:	2300      	movs	r3, #0
 80124a6:	7013      	strb	r3, [r2, #0]
 80124a8:	6803      	ldr	r3, [r0, #0]
 80124aa:	aa03      	add	r2, sp, #12
 80124ac:	68db      	ldr	r3, [r3, #12]
 80124ae:	a902      	add	r1, sp, #8
 80124b0:	4798      	blx	r3
 80124b2:	6823      	ldr	r3, [r4, #0]
 80124b4:	2800      	cmp	r0, #0
 80124b6:	d050      	beq.n	801255a <_ZN8touchgfx3HAL4tickEv+0x156>
 80124b8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80124bc:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80124c0:	4620      	mov	r0, r4
 80124c2:	4798      	blx	r3
 80124c4:	6960      	ldr	r0, [r4, #20]
 80124c6:	2300      	movs	r3, #0
 80124c8:	f88d 3007 	strb.w	r3, [sp, #7]
 80124cc:	b158      	cbz	r0, 80124e6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80124ce:	6803      	ldr	r3, [r0, #0]
 80124d0:	f10d 0107 	add.w	r1, sp, #7
 80124d4:	68db      	ldr	r3, [r3, #12]
 80124d6:	4798      	blx	r3
 80124d8:	b128      	cbz	r0, 80124e6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80124da:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80124dc:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80124e0:	6803      	ldr	r3, [r0, #0]
 80124e2:	68db      	ldr	r3, [r3, #12]
 80124e4:	4798      	blx	r3
 80124e6:	f104 001c 	add.w	r0, r4, #28
 80124ea:	f016 f95f 	bl	80287ac <_ZN8touchgfx8Gestures4tickEv>
 80124ee:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 80124f2:	b30b      	cbz	r3, 8012538 <_ZN8touchgfx3HAL4tickEv+0x134>
 80124f4:	6920      	ldr	r0, [r4, #16]
 80124f6:	6803      	ldr	r3, [r0, #0]
 80124f8:	691b      	ldr	r3, [r3, #16]
 80124fa:	4798      	blx	r3
 80124fc:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80124fe:	4606      	mov	r6, r0
 8012500:	b903      	cbnz	r3, 8012504 <_ZN8touchgfx3HAL4tickEv+0x100>
 8012502:	6720      	str	r0, [r4, #112]	; 0x70
 8012504:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8012506:	4a1e      	ldr	r2, [pc, #120]	; (8012580 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8012508:	1af3      	subs	r3, r6, r3
 801250a:	4293      	cmp	r3, r2
 801250c:	d914      	bls.n	8012538 <_ZN8touchgfx3HAL4tickEv+0x134>
 801250e:	6920      	ldr	r0, [r4, #16]
 8012510:	6803      	ldr	r3, [r0, #0]
 8012512:	699b      	ldr	r3, [r3, #24]
 8012514:	4798      	blx	r3
 8012516:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8012518:	2264      	movs	r2, #100	; 0x64
 801251a:	1af3      	subs	r3, r6, r3
 801251c:	fbb3 f3f2 	udiv	r3, r3, r2
 8012520:	fbb0 f0f3 	udiv	r0, r0, r3
 8012524:	2800      	cmp	r0, #0
 8012526:	dc1d      	bgt.n	8012564 <_ZN8touchgfx3HAL4tickEv+0x160>
 8012528:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 801252c:	6920      	ldr	r0, [r4, #16]
 801252e:	6803      	ldr	r3, [r0, #0]
 8012530:	2100      	movs	r1, #0
 8012532:	69db      	ldr	r3, [r3, #28]
 8012534:	4798      	blx	r3
 8012536:	6726      	str	r6, [r4, #112]	; 0x70
 8012538:	f006 ff26 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 801253c:	6803      	ldr	r3, [r0, #0]
 801253e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012540:	4798      	blx	r3
 8012542:	6823      	ldr	r3, [r4, #0]
 8012544:	4620      	mov	r0, r4
 8012546:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801254a:	4798      	blx	r3
 801254c:	2001      	movs	r0, #1
 801254e:	f7ee fe64 	bl	800121a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8012552:	2300      	movs	r3, #0
 8012554:	702b      	strb	r3, [r5, #0]
 8012556:	b004      	add	sp, #16
 8012558:	bd70      	pop	{r4, r5, r6, pc}
 801255a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 801255e:	4620      	mov	r0, r4
 8012560:	4798      	blx	r3
 8012562:	e7af      	b.n	80124c4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8012564:	2863      	cmp	r0, #99	; 0x63
 8012566:	bfcb      	itete	gt
 8012568:	2300      	movgt	r3, #0
 801256a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 801256e:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8012572:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8012576:	e7d9      	b.n	801252c <_ZN8touchgfx3HAL4tickEv+0x128>
 8012578:	2001e1c4 	.word	0x2001e1c4
 801257c:	2001e1c5 	.word	0x2001e1c5
 8012580:	05f5e100 	.word	0x05f5e100

08012584 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8012584:	f7ee bf4c 	b.w	8001420 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08012588 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8012588:	6581      	str	r1, [r0, #88]	; 0x58
 801258a:	301c      	adds	r0, #28
 801258c:	f016 b90c 	b.w	80287a8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08012590 <_ZN8touchgfx3HAL5touchEll>:
 8012590:	b530      	push	{r4, r5, lr}
 8012592:	b087      	sub	sp, #28
 8012594:	4604      	mov	r4, r0
 8012596:	a804      	add	r0, sp, #16
 8012598:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801259c:	f006 fcba 	bl	8018f14 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80125a0:	9b04      	ldr	r3, [sp, #16]
 80125a2:	f8ad 300c 	strh.w	r3, [sp, #12]
 80125a6:	a906      	add	r1, sp, #24
 80125a8:	9b05      	ldr	r3, [sp, #20]
 80125aa:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80125ae:	a803      	add	r0, sp, #12
 80125b0:	f006 fd02 	bl	8018fb8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80125b4:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 80125b8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80125bc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80125c0:	f104 001c 	add.w	r0, r4, #28
 80125c4:	b189      	cbz	r1, 80125ea <_ZN8touchgfx3HAL5touchEll+0x5a>
 80125c6:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 80125ca:	9300      	str	r3, [sp, #0]
 80125cc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80125d0:	4613      	mov	r3, r2
 80125d2:	462a      	mov	r2, r5
 80125d4:	f016 f8f8 	bl	80287c8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80125d8:	b128      	cbz	r0, 80125e6 <_ZN8touchgfx3HAL5touchEll+0x56>
 80125da:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80125de:	65e3      	str	r3, [r4, #92]	; 0x5c
 80125e0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80125e4:	6623      	str	r3, [r4, #96]	; 0x60
 80125e6:	b007      	add	sp, #28
 80125e8:	bd30      	pop	{r4, r5, pc}
 80125ea:	f016 f92d 	bl	8028848 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80125ee:	2301      	movs	r3, #1
 80125f0:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80125f4:	e7f1      	b.n	80125da <_ZN8touchgfx3HAL5touchEll+0x4a>

080125f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80125f6:	b510      	push	{r4, lr}
 80125f8:	2b00      	cmp	r3, #0
 80125fa:	d046      	beq.n	801268a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80125fc:	ea81 0002 	eor.w	r0, r1, r2
 8012600:	07c4      	lsls	r4, r0, #31
 8012602:	d508      	bpl.n	8012616 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8012604:	440b      	add	r3, r1
 8012606:	3a01      	subs	r2, #1
 8012608:	428b      	cmp	r3, r1
 801260a:	d93e      	bls.n	801268a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801260c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8012610:	f801 0b01 	strb.w	r0, [r1], #1
 8012614:	e7f8      	b.n	8012608 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8012616:	07d0      	lsls	r0, r2, #31
 8012618:	bf42      	ittt	mi
 801261a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801261e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8012622:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8012626:	2b01      	cmp	r3, #1
 8012628:	d911      	bls.n	801264e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801262a:	ea81 0402 	eor.w	r4, r1, r2
 801262e:	07a4      	lsls	r4, r4, #30
 8012630:	4610      	mov	r0, r2
 8012632:	d022      	beq.n	801267a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8012634:	f023 0401 	bic.w	r4, r3, #1
 8012638:	440c      	add	r4, r1
 801263a:	428c      	cmp	r4, r1
 801263c:	4602      	mov	r2, r0
 801263e:	d904      	bls.n	801264a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8012640:	8812      	ldrh	r2, [r2, #0]
 8012642:	f821 2b02 	strh.w	r2, [r1], #2
 8012646:	3002      	adds	r0, #2
 8012648:	e7f7      	b.n	801263a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801264a:	f003 0301 	and.w	r3, r3, #1
 801264e:	f023 0003 	bic.w	r0, r3, #3
 8012652:	4408      	add	r0, r1
 8012654:	4288      	cmp	r0, r1
 8012656:	4614      	mov	r4, r2
 8012658:	d904      	bls.n	8012664 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801265a:	6824      	ldr	r4, [r4, #0]
 801265c:	f841 4b04 	str.w	r4, [r1], #4
 8012660:	3204      	adds	r2, #4
 8012662:	e7f7      	b.n	8012654 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8012664:	f003 0303 	and.w	r3, r3, #3
 8012668:	440b      	add	r3, r1
 801266a:	3a01      	subs	r2, #1
 801266c:	428b      	cmp	r3, r1
 801266e:	d90c      	bls.n	801268a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012670:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8012674:	f801 0b01 	strb.w	r0, [r1], #1
 8012678:	e7f8      	b.n	801266c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801267a:	0790      	lsls	r0, r2, #30
 801267c:	d0e7      	beq.n	801264e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801267e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8012682:	f821 0b02 	strh.w	r0, [r1], #2
 8012686:	3b02      	subs	r3, #2
 8012688:	e7e1      	b.n	801264e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801268a:	2001      	movs	r0, #1
 801268c:	bd10      	pop	{r4, pc}

0801268e <_ZN8touchgfx3HAL7noTouchEv>:
 801268e:	b510      	push	{r4, lr}
 8012690:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8012694:	4604      	mov	r4, r0
 8012696:	b153      	cbz	r3, 80126ae <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8012698:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 801269c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 80126a0:	2101      	movs	r1, #1
 80126a2:	301c      	adds	r0, #28
 80126a4:	f016 f8d0 	bl	8028848 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80126a8:	2300      	movs	r3, #0
 80126aa:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80126ae:	bd10      	pop	{r4, pc}

080126b0 <_ZN8touchgfx3HAL3lcdEv>:
 80126b0:	4b04      	ldr	r3, [pc, #16]	; (80126c4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80126b2:	681b      	ldr	r3, [r3, #0]
 80126b4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80126b8:	b10a      	cbz	r2, 80126be <_ZN8touchgfx3HAL3lcdEv+0xe>
 80126ba:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80126bc:	b900      	cbnz	r0, 80126c0 <_ZN8touchgfx3HAL3lcdEv+0x10>
 80126be:	6898      	ldr	r0, [r3, #8]
 80126c0:	4770      	bx	lr
 80126c2:	bf00      	nop
 80126c4:	2001e1c0 	.word	0x2001e1c0

080126c8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80126c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80126cc:	4604      	mov	r4, r0
 80126ce:	6980      	ldr	r0, [r0, #24]
 80126d0:	b085      	sub	sp, #20
 80126d2:	460f      	mov	r7, r1
 80126d4:	4690      	mov	r8, r2
 80126d6:	4699      	mov	r9, r3
 80126d8:	b930      	cbnz	r0, 80126e8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 80126da:	4b1c      	ldr	r3, [pc, #112]	; (801274c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 80126dc:	4a1c      	ldr	r2, [pc, #112]	; (8012750 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80126de:	f44f 719f 	mov.w	r1, #318	; 0x13e
 80126e2:	481c      	ldr	r0, [pc, #112]	; (8012754 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 80126e4:	f019 fc86 	bl	802bff4 <__assert_func>
 80126e8:	ad04      	add	r5, sp, #16
 80126ea:	2600      	movs	r6, #0
 80126ec:	f845 6d04 	str.w	r6, [r5, #-4]!
 80126f0:	6806      	ldr	r6, [r0, #0]
 80126f2:	9501      	str	r5, [sp, #4]
 80126f4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80126f8:	9500      	str	r5, [sp, #0]
 80126fa:	6835      	ldr	r5, [r6, #0]
 80126fc:	47a8      	blx	r5
 80126fe:	4d16      	ldr	r5, [pc, #88]	; (8012758 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 8012700:	4606      	mov	r6, r0
 8012702:	f8a5 9000 	strh.w	r9, [r5]
 8012706:	f7ff ffd3 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 801270a:	6803      	ldr	r3, [r0, #0]
 801270c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801270e:	4798      	blx	r3
 8012710:	2801      	cmp	r0, #1
 8012712:	d012      	beq.n	801273a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 8012714:	d306      	bcc.n	8012724 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 8012716:	280d      	cmp	r0, #13
 8012718:	d80b      	bhi.n	8012732 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 801271a:	4b10      	ldr	r3, [pc, #64]	; (801275c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 801271c:	4a0c      	ldr	r2, [pc, #48]	; (8012750 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 801271e:	f240 115b 	movw	r1, #347	; 0x15b
 8012722:	e7de      	b.n	80126e2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8012724:	882b      	ldrh	r3, [r5, #0]
 8012726:	fb08 7203 	mla	r2, r8, r3, r7
 801272a:	9b03      	ldr	r3, [sp, #12]
 801272c:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8012730:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012732:	4630      	mov	r0, r6
 8012734:	b005      	add	sp, #20
 8012736:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801273a:	882a      	ldrh	r2, [r5, #0]
 801273c:	9b03      	ldr	r3, [sp, #12]
 801273e:	fb08 7202 	mla	r2, r8, r2, r7
 8012742:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012746:	1a9a      	subs	r2, r3, r2
 8012748:	63e2      	str	r2, [r4, #60]	; 0x3c
 801274a:	e7f2      	b.n	8012732 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 801274c:	080334bd 	.word	0x080334bd
 8012750:	0803377b 	.word	0x0803377b
 8012754:	08033502 	.word	0x08033502
 8012758:	2001e1ba 	.word	0x2001e1ba
 801275c:	08033528 	.word	0x08033528

08012760 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8012760:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012762:	b08b      	sub	sp, #44	; 0x2c
 8012764:	4617      	mov	r7, r2
 8012766:	4604      	mov	r4, r0
 8012768:	460e      	mov	r6, r1
 801276a:	461d      	mov	r5, r3
 801276c:	f7ff ffa0 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 8012770:	6803      	ldr	r3, [r0, #0]
 8012772:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012774:	4798      	blx	r3
 8012776:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801277a:	9007      	str	r0, [sp, #28]
 801277c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8012780:	4b0d      	ldr	r3, [pc, #52]	; (80127b8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8012782:	6822      	ldr	r2, [r4, #0]
 8012784:	881b      	ldrh	r3, [r3, #0]
 8012786:	9306      	str	r3, [sp, #24]
 8012788:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801278c:	9305      	str	r3, [sp, #20]
 801278e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8012792:	9304      	str	r3, [sp, #16]
 8012794:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012798:	9303      	str	r3, [sp, #12]
 801279a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801279e:	9302      	str	r3, [sp, #8]
 80127a0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80127a4:	e9cd 5300 	strd	r5, r3, [sp]
 80127a8:	4631      	mov	r1, r6
 80127aa:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80127ac:	463b      	mov	r3, r7
 80127ae:	2200      	movs	r2, #0
 80127b0:	4620      	mov	r0, r4
 80127b2:	47a8      	blx	r5
 80127b4:	b00b      	add	sp, #44	; 0x2c
 80127b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80127b8:	2001e1ba 	.word	0x2001e1ba

080127bc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80127bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80127c0:	4698      	mov	r8, r3
 80127c2:	6803      	ldr	r3, [r0, #0]
 80127c4:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80127c6:	4b15      	ldr	r3, [pc, #84]	; (801281c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80127c8:	b08b      	sub	sp, #44	; 0x2c
 80127ca:	4617      	mov	r7, r2
 80127cc:	f8b3 9000 	ldrh.w	r9, [r3]
 80127d0:	460e      	mov	r6, r1
 80127d2:	4604      	mov	r4, r0
 80127d4:	f7ff ff6c 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 80127d8:	6803      	ldr	r3, [r0, #0]
 80127da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80127dc:	4798      	blx	r3
 80127de:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80127e2:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80127e6:	2302      	movs	r3, #2
 80127e8:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80127ec:	2301      	movs	r3, #1
 80127ee:	9305      	str	r3, [sp, #20]
 80127f0:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80127f4:	9304      	str	r3, [sp, #16]
 80127f6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80127fa:	9303      	str	r3, [sp, #12]
 80127fc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012800:	9302      	str	r3, [sp, #8]
 8012802:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012806:	2200      	movs	r2, #0
 8012808:	e9cd 8300 	strd	r8, r3, [sp]
 801280c:	4631      	mov	r1, r6
 801280e:	463b      	mov	r3, r7
 8012810:	4620      	mov	r0, r4
 8012812:	47a8      	blx	r5
 8012814:	b00b      	add	sp, #44	; 0x2c
 8012816:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801281a:	bf00      	nop
 801281c:	2001e1ba 	.word	0x2001e1ba

08012820 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8012820:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012824:	4698      	mov	r8, r3
 8012826:	6803      	ldr	r3, [r0, #0]
 8012828:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801282a:	4b11      	ldr	r3, [pc, #68]	; (8012870 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 801282c:	b087      	sub	sp, #28
 801282e:	f8b3 9000 	ldrh.w	r9, [r3]
 8012832:	460e      	mov	r6, r1
 8012834:	4617      	mov	r7, r2
 8012836:	4604      	mov	r4, r0
 8012838:	f7ff ff3a 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 801283c:	6803      	ldr	r3, [r0, #0]
 801283e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012840:	4798      	blx	r3
 8012842:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8012846:	f8cd 900c 	str.w	r9, [sp, #12]
 801284a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801284e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8012852:	9302      	str	r3, [sp, #8]
 8012854:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8012858:	9301      	str	r3, [sp, #4]
 801285a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801285e:	9300      	str	r3, [sp, #0]
 8012860:	463a      	mov	r2, r7
 8012862:	4643      	mov	r3, r8
 8012864:	4631      	mov	r1, r6
 8012866:	4620      	mov	r0, r4
 8012868:	47a8      	blx	r5
 801286a:	b007      	add	sp, #28
 801286c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012870:	2001e1ba 	.word	0x2001e1ba

08012874 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8012874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012878:	4604      	mov	r4, r0
 801287a:	b08f      	sub	sp, #60	; 0x3c
 801287c:	4610      	mov	r0, r2
 801287e:	460d      	mov	r5, r1
 8012880:	4691      	mov	r9, r2
 8012882:	461e      	mov	r6, r3
 8012884:	f009 fe82 	bl	801c58c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8012888:	2800      	cmp	r0, #0
 801288a:	f000 809c 	beq.w	80129c6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 801288e:	6823      	ldr	r3, [r4, #0]
 8012890:	f8df b194 	ldr.w	fp, [pc, #404]	; 8012a28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8012894:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012896:	f8df a194 	ldr.w	sl, [pc, #404]	; 8012a2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 801289a:	4f60      	ldr	r7, [pc, #384]	; (8012a1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 801289c:	4620      	mov	r0, r4
 801289e:	4798      	blx	r3
 80128a0:	6823      	ldr	r3, [r4, #0]
 80128a2:	4620      	mov	r0, r4
 80128a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80128a6:	4798      	blx	r3
 80128a8:	f8bb 3000 	ldrh.w	r3, [fp]
 80128ac:	9301      	str	r3, [sp, #4]
 80128ae:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80128b2:	f8ba 3000 	ldrh.w	r3, [sl]
 80128b6:	9302      	str	r3, [sp, #8]
 80128b8:	883b      	ldrh	r3, [r7, #0]
 80128ba:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80128be:	9303      	str	r3, [sp, #12]
 80128c0:	4b57      	ldr	r3, [pc, #348]	; (8012a20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80128c2:	9305      	str	r3, [sp, #20]
 80128c4:	881a      	ldrh	r2, [r3, #0]
 80128c6:	9204      	str	r2, [sp, #16]
 80128c8:	4640      	mov	r0, r8
 80128ca:	f009 ff0f 	bl	801c6ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 80128ce:	8038      	strh	r0, [r7, #0]
 80128d0:	4640      	mov	r0, r8
 80128d2:	f009 ff4f 	bl	801c774 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80128d6:	9b05      	ldr	r3, [sp, #20]
 80128d8:	8018      	strh	r0, [r3, #0]
 80128da:	4b52      	ldr	r3, [pc, #328]	; (8012a24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80128dc:	781b      	ldrb	r3, [r3, #0]
 80128de:	2b00      	cmp	r3, #0
 80128e0:	d174      	bne.n	80129cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 80128e2:	883b      	ldrh	r3, [r7, #0]
 80128e4:	f8ab 3000 	strh.w	r3, [fp]
 80128e8:	f8aa 0000 	strh.w	r0, [sl]
 80128ec:	4648      	mov	r0, r9
 80128ee:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80128f2:	f009 fe4b 	bl	801c58c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80128f6:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80128fa:	2200      	movs	r2, #0
 80128fc:	4611      	mov	r1, r2
 80128fe:	4628      	mov	r0, r5
 8012900:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8012904:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8012908:	f7f0 ffae 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 801290c:	2301      	movs	r3, #1
 801290e:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8012912:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8012916:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801291a:	2b00      	cmp	r3, #0
 801291c:	dd5c      	ble.n	80129d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 801291e:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012922:	2b00      	cmp	r3, #0
 8012924:	dd58      	ble.n	80129d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8012926:	462a      	mov	r2, r5
 8012928:	ab0a      	add	r3, sp, #40	; 0x28
 801292a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801292e:	6851      	ldr	r1, [r2, #4]
 8012930:	c303      	stmia	r3!, {r0, r1}
 8012932:	4631      	mov	r1, r6
 8012934:	a80a      	add	r0, sp, #40	; 0x28
 8012936:	f7ff fbed 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801293a:	4b38      	ldr	r3, [pc, #224]	; (8012a1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 801293c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012940:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8012944:	2100      	movs	r1, #0
 8012946:	aa0a      	add	r2, sp, #40	; 0x28
 8012948:	4b35      	ldr	r3, [pc, #212]	; (8012a20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801294a:	910c      	str	r1, [sp, #48]	; 0x30
 801294c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012950:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012954:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012958:	ab08      	add	r3, sp, #32
 801295a:	e883 0003 	stmia.w	r3, {r0, r1}
 801295e:	4618      	mov	r0, r3
 8012960:	a90c      	add	r1, sp, #48	; 0x30
 8012962:	f7ff fbd7 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 8012966:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8012968:	2b00      	cmp	r3, #0
 801296a:	d13c      	bne.n	80129e6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 801296c:	2000      	movs	r0, #0
 801296e:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8012972:	2600      	movs	r6, #0
 8012974:	682a      	ldr	r2, [r5, #0]
 8012976:	696b      	ldr	r3, [r5, #20]
 8012978:	616e      	str	r6, [r5, #20]
 801297a:	9305      	str	r3, [sp, #20]
 801297c:	6892      	ldr	r2, [r2, #8]
 801297e:	a908      	add	r1, sp, #32
 8012980:	4628      	mov	r0, r5
 8012982:	4790      	blx	r2
 8012984:	9b05      	ldr	r3, [sp, #20]
 8012986:	616b      	str	r3, [r5, #20]
 8012988:	4652      	mov	r2, sl
 801298a:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 801298e:	4649      	mov	r1, r9
 8012990:	4628      	mov	r0, r5
 8012992:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8012996:	f7f0 ff67 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 801299a:	4b23      	ldr	r3, [pc, #140]	; (8012a28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 801299c:	9a01      	ldr	r2, [sp, #4]
 801299e:	801a      	strh	r2, [r3, #0]
 80129a0:	4b22      	ldr	r3, [pc, #136]	; (8012a2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80129a2:	9a02      	ldr	r2, [sp, #8]
 80129a4:	801a      	strh	r2, [r3, #0]
 80129a6:	4b1d      	ldr	r3, [pc, #116]	; (8012a1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 80129a8:	9a03      	ldr	r2, [sp, #12]
 80129aa:	801a      	strh	r2, [r3, #0]
 80129ac:	4b1c      	ldr	r3, [pc, #112]	; (8012a20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80129ae:	9a04      	ldr	r2, [sp, #16]
 80129b0:	801a      	strh	r2, [r3, #0]
 80129b2:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80129b6:	6823      	ldr	r3, [r4, #0]
 80129b8:	4620      	mov	r0, r4
 80129ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80129bc:	4798      	blx	r3
 80129be:	6823      	ldr	r3, [r4, #0]
 80129c0:	4620      	mov	r0, r4
 80129c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80129c4:	4798      	blx	r3
 80129c6:	b00f      	add	sp, #60	; 0x3c
 80129c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80129cc:	883b      	ldrh	r3, [r7, #0]
 80129ce:	f8ab 0000 	strh.w	r0, [fp]
 80129d2:	f8aa 3000 	strh.w	r3, [sl]
 80129d6:	e789      	b.n	80128ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 80129d8:	462a      	mov	r2, r5
 80129da:	ab0a      	add	r3, sp, #40	; 0x28
 80129dc:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80129e0:	6851      	ldr	r1, [r2, #4]
 80129e2:	c303      	stmia	r3!, {r0, r1}
 80129e4:	e7a9      	b.n	801293a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 80129e6:	a807      	add	r0, sp, #28
 80129e8:	f00a f826 	bl	801ca38 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80129ec:	4606      	mov	r6, r0
 80129ee:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80129f0:	6803      	ldr	r3, [r0, #0]
 80129f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80129f4:	4798      	blx	r3
 80129f6:	4286      	cmp	r6, r0
 80129f8:	d1b8      	bne.n	801296c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 80129fa:	f7ff fe59 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 80129fe:	6803      	ldr	r3, [r0, #0]
 8012a00:	4606      	mov	r6, r0
 8012a02:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012a04:	9305      	str	r3, [sp, #20]
 8012a06:	a807      	add	r0, sp, #28
 8012a08:	f00a f816 	bl	801ca38 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012a0c:	9b05      	ldr	r3, [sp, #20]
 8012a0e:	4601      	mov	r1, r0
 8012a10:	4630      	mov	r0, r6
 8012a12:	4798      	blx	r3
 8012a14:	f080 0001 	eor.w	r0, r0, #1
 8012a18:	b2c0      	uxtb	r0, r0
 8012a1a:	e7a8      	b.n	801296e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8012a1c:	2001e1b4 	.word	0x2001e1b4
 8012a20:	2001e1b6 	.word	0x2001e1b6
 8012a24:	2001e1b8 	.word	0x2001e1b8
 8012a28:	2001e1ba 	.word	0x2001e1ba
 8012a2c:	2001e1bc 	.word	0x2001e1bc

08012a30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8012a30:	b510      	push	{r4, lr}
 8012a32:	4b07      	ldr	r3, [pc, #28]	; (8012a50 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8012a34:	781b      	ldrb	r3, [r3, #0]
 8012a36:	4604      	mov	r4, r0
 8012a38:	b13b      	cbz	r3, 8012a4a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012a3a:	6803      	ldr	r3, [r0, #0]
 8012a3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012a3e:	4798      	blx	r3
 8012a40:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012a42:	4283      	cmp	r3, r0
 8012a44:	d101      	bne.n	8012a4a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012a46:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8012a48:	bd10      	pop	{r4, pc}
 8012a4a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012a4c:	e7fc      	b.n	8012a48 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8012a4e:	bf00      	nop
 8012a50:	2001e1be 	.word	0x2001e1be

08012a54 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8012a54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012a58:	b08a      	sub	sp, #40	; 0x28
 8012a5a:	461d      	mov	r5, r3
 8012a5c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012a60:	2400      	movs	r4, #0
 8012a62:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 8012a66:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8012a6a:	f8bd 9054 	ldrh.w	r9, [sp, #84]	; 0x54
 8012a6e:	9404      	str	r4, [sp, #16]
 8012a70:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012a74:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012a78:	f8ad 8018 	strh.w	r8, [sp, #24]
 8012a7c:	4692      	mov	sl, r2
 8012a7e:	4606      	mov	r6, r0
 8012a80:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012a84:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012a88:	f88d 4020 	strb.w	r4, [sp, #32]
 8012a8c:	f7ff ffd0 	bl	8012a30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012a90:	fb09 a505 	mla	r5, r9, r5, sl
 8012a94:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012a98:	9505      	str	r5, [sp, #20]
 8012a9a:	f8ad 901e 	strh.w	r9, [sp, #30]
 8012a9e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012aa2:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8012aa6:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8012aaa:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012aae:	f1b8 0f00 	cmp.w	r8, #0
 8012ab2:	d000      	beq.n	8012ab6 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 8012ab4:	b937      	cbnz	r7, 8012ac4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x70>
 8012ab6:	4b0d      	ldr	r3, [pc, #52]	; (8012aec <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8012ab8:	4a0d      	ldr	r2, [pc, #52]	; (8012af0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8012aba:	f240 2102 	movw	r1, #514	; 0x202
 8012abe:	480d      	ldr	r0, [pc, #52]	; (8012af4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 8012ac0:	f019 fa98 	bl	802bff4 <__assert_func>
 8012ac4:	6833      	ldr	r3, [r6, #0]
 8012ac6:	9c01      	ldr	r4, [sp, #4]
 8012ac8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012aca:	4630      	mov	r0, r6
 8012acc:	4798      	blx	r3
 8012ace:	4220      	tst	r0, r4
 8012ad0:	d104      	bne.n	8012adc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x88>
 8012ad2:	4b09      	ldr	r3, [pc, #36]	; (8012af8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa4>)
 8012ad4:	4a06      	ldr	r2, [pc, #24]	; (8012af0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8012ad6:	f240 2103 	movw	r1, #515	; 0x203
 8012ada:	e7f0      	b.n	8012abe <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6a>
 8012adc:	6870      	ldr	r0, [r6, #4]
 8012ade:	6803      	ldr	r3, [r0, #0]
 8012ae0:	a901      	add	r1, sp, #4
 8012ae2:	685b      	ldr	r3, [r3, #4]
 8012ae4:	4798      	blx	r3
 8012ae6:	b00a      	add	sp, #40	; 0x28
 8012ae8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012aec:	08033357 	.word	0x08033357
 8012af0:	080335b0 	.word	0x080335b0
 8012af4:	08033502 	.word	0x08033502
 8012af8:	0803338f 	.word	0x0803338f

08012afc <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8012afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b00:	b08b      	sub	sp, #44	; 0x2c
 8012b02:	2400      	movs	r4, #0
 8012b04:	461d      	mov	r5, r3
 8012b06:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8012b0a:	f8bd 9058 	ldrh.w	r9, [sp, #88]	; 0x58
 8012b0e:	f8bd 8050 	ldrh.w	r8, [sp, #80]	; 0x50
 8012b12:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8012b16:	9404      	str	r4, [sp, #16]
 8012b18:	468a      	mov	sl, r1
 8012b1a:	4693      	mov	fp, r2
 8012b1c:	4606      	mov	r6, r0
 8012b1e:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012b22:	f7ff ff85 	bl	8012a30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012b26:	fb09 b505 	mla	r5, r9, r5, fp
 8012b2a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012b2e:	9505      	str	r5, [sp, #20]
 8012b30:	f8ad 8018 	strh.w	r8, [sp, #24]
 8012b34:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012b38:	f8ad 401c 	strh.w	r4, [sp, #28]
 8012b3c:	f8ad 901e 	strh.w	r9, [sp, #30]
 8012b40:	f8cd a010 	str.w	sl, [sp, #16]
 8012b44:	f8ad 4020 	strh.w	r4, [sp, #32]
 8012b48:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012b4c:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8012b50:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012b54:	f1b8 0f00 	cmp.w	r8, #0
 8012b58:	d000      	beq.n	8012b5c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 8012b5a:	b937      	cbnz	r7, 8012b6a <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6e>
 8012b5c:	4b0d      	ldr	r3, [pc, #52]	; (8012b94 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8012b5e:	4a0e      	ldr	r2, [pc, #56]	; (8012b98 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8012b60:	f240 2119 	movw	r1, #537	; 0x219
 8012b64:	480d      	ldr	r0, [pc, #52]	; (8012b9c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 8012b66:	f019 fa45 	bl	802bff4 <__assert_func>
 8012b6a:	6833      	ldr	r3, [r6, #0]
 8012b6c:	9c01      	ldr	r4, [sp, #4]
 8012b6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012b70:	4630      	mov	r0, r6
 8012b72:	4798      	blx	r3
 8012b74:	4220      	tst	r0, r4
 8012b76:	d104      	bne.n	8012b82 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x86>
 8012b78:	4b09      	ldr	r3, [pc, #36]	; (8012ba0 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa4>)
 8012b7a:	4a07      	ldr	r2, [pc, #28]	; (8012b98 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8012b7c:	f240 211a 	movw	r1, #538	; 0x21a
 8012b80:	e7f0      	b.n	8012b64 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x68>
 8012b82:	6870      	ldr	r0, [r6, #4]
 8012b84:	6803      	ldr	r3, [r0, #0]
 8012b86:	a901      	add	r1, sp, #4
 8012b88:	685b      	ldr	r3, [r3, #4]
 8012b8a:	4798      	blx	r3
 8012b8c:	b00b      	add	sp, #44	; 0x2c
 8012b8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b92:	bf00      	nop
 8012b94:	080333d4 	.word	0x080333d4
 8012b98:	08033626 	.word	0x08033626
 8012b9c:	08033502 	.word	0x08033502
 8012ba0:	0803340c 	.word	0x0803340c

08012ba4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8012ba4:	b508      	push	{r3, lr}
 8012ba6:	290d      	cmp	r1, #13
 8012ba8:	d817      	bhi.n	8012bda <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8012baa:	e8df f001 	tbb	[pc, r1]
 8012bae:	090b      	.short	0x090b
 8012bb0:	0d0d0d07 	.word	0x0d0d0d07
 8012bb4:	1414140d 	.word	0x1414140d
 8012bb8:	0d0d1414 	.word	0x0d0d1414
 8012bbc:	2020      	movs	r0, #32
 8012bbe:	bd08      	pop	{r3, pc}
 8012bc0:	2018      	movs	r0, #24
 8012bc2:	e7fc      	b.n	8012bbe <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8012bc4:	2010      	movs	r0, #16
 8012bc6:	e7fa      	b.n	8012bbe <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8012bc8:	4b05      	ldr	r3, [pc, #20]	; (8012be0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8012bca:	4a06      	ldr	r2, [pc, #24]	; (8012be4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8012bcc:	4806      	ldr	r0, [pc, #24]	; (8012be8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8012bce:	f240 2183 	movw	r1, #643	; 0x283
 8012bd2:	f019 fa0f 	bl	802bff4 <__assert_func>
 8012bd6:	2008      	movs	r0, #8
 8012bd8:	e7f1      	b.n	8012bbe <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8012bda:	2000      	movs	r0, #0
 8012bdc:	e7ef      	b.n	8012bbe <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8012bde:	bf00      	nop
 8012be0:	0803357e 	.word	0x0803357e
 8012be4:	08033951 	.word	0x08033951
 8012be8:	08033502 	.word	0x08033502

08012bec <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8012bec:	b570      	push	{r4, r5, r6, lr}
 8012bee:	460d      	mov	r5, r1
 8012bf0:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8012bf4:	4616      	mov	r6, r2
 8012bf6:	461c      	mov	r4, r3
 8012bf8:	f7ff ffd4 	bl	8012ba4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8012bfc:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8012c00:	10c0      	asrs	r0, r0, #3
 8012c02:	fb06 5101 	mla	r1, r6, r1, r5
 8012c06:	fb00 4001 	mla	r0, r0, r1, r4
 8012c0a:	bd70      	pop	{r4, r5, r6, pc}

08012c0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8012c0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012c10:	b08c      	sub	sp, #48	; 0x30
 8012c12:	f04f 0c00 	mov.w	ip, #0
 8012c16:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 8012c1a:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8012c1e:	f8bd 6058 	ldrh.w	r6, [sp, #88]	; 0x58
 8012c22:	f8bd 9068 	ldrh.w	r9, [sp, #104]	; 0x68
 8012c26:	f89d 8070 	ldrb.w	r8, [sp, #112]	; 0x70
 8012c2a:	f8cd c018 	str.w	ip, [sp, #24]
 8012c2e:	2d0b      	cmp	r5, #11
 8012c30:	4604      	mov	r4, r0
 8012c32:	469a      	mov	sl, r3
 8012c34:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
 8012c38:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8012c3c:	d130      	bne.n	8012ca0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x94>
 8012c3e:	2080      	movs	r0, #128	; 0x80
 8012c40:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8012c44:	9205      	str	r2, [sp, #20]
 8012c46:	4620      	mov	r0, r4
 8012c48:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8012c4c:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8012c50:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012c54:	f8ad 7020 	strh.w	r7, [sp, #32]
 8012c58:	f8ad 6022 	strh.w	r6, [sp, #34]	; 0x22
 8012c5c:	f7ff fee8 	bl	8012a30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012c60:	e9cd 9800 	strd	r9, r8, [sp]
 8012c64:	4603      	mov	r3, r0
 8012c66:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8012c6a:	4651      	mov	r1, sl
 8012c6c:	4620      	mov	r0, r4
 8012c6e:	f7ff ffbd 	bl	8012bec <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8012c72:	f89d 3074 	ldrb.w	r3, [sp, #116]	; 0x74
 8012c76:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012c7a:	2300      	movs	r3, #0
 8012c7c:	9007      	str	r0, [sp, #28]
 8012c7e:	f8ad 9026 	strh.w	r9, [sp, #38]	; 0x26
 8012c82:	f88d 5029 	strb.w	r5, [sp, #41]	; 0x29
 8012c86:	f88d 802a 	strb.w	r8, [sp, #42]	; 0x2a
 8012c8a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012c8e:	b107      	cbz	r7, 8012c92 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 8012c90:	b9d6      	cbnz	r6, 8012cc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbc>
 8012c92:	4b17      	ldr	r3, [pc, #92]	; (8012cf0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 8012c94:	4a17      	ldr	r2, [pc, #92]	; (8012cf4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8012c96:	f240 11c9 	movw	r1, #457	; 0x1c9
 8012c9a:	4817      	ldr	r0, [pc, #92]	; (8012cf8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 8012c9c:	f019 f9aa 	bl	802bff4 <__assert_func>
 8012ca0:	2d02      	cmp	r5, #2
 8012ca2:	d108      	bne.n	8012cb6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 8012ca4:	2bff      	cmp	r3, #255	; 0xff
 8012ca6:	d104      	bne.n	8012cb2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa6>
 8012ca8:	2800      	cmp	r0, #0
 8012caa:	bf14      	ite	ne
 8012cac:	2040      	movne	r0, #64	; 0x40
 8012cae:	2020      	moveq	r0, #32
 8012cb0:	e7c6      	b.n	8012c40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8012cb2:	2040      	movs	r0, #64	; 0x40
 8012cb4:	e7c4      	b.n	8012c40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8012cb6:	2bff      	cmp	r3, #255	; 0xff
 8012cb8:	d104      	bne.n	8012cc4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb8>
 8012cba:	2800      	cmp	r0, #0
 8012cbc:	bf14      	ite	ne
 8012cbe:	2004      	movne	r0, #4
 8012cc0:	2001      	moveq	r0, #1
 8012cc2:	e7bd      	b.n	8012c40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8012cc4:	2004      	movs	r0, #4
 8012cc6:	e7bb      	b.n	8012c40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8012cc8:	6823      	ldr	r3, [r4, #0]
 8012cca:	9d03      	ldr	r5, [sp, #12]
 8012ccc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012cce:	4620      	mov	r0, r4
 8012cd0:	4798      	blx	r3
 8012cd2:	4228      	tst	r0, r5
 8012cd4:	d104      	bne.n	8012ce0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xd4>
 8012cd6:	4b09      	ldr	r3, [pc, #36]	; (8012cfc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xf0>)
 8012cd8:	4a06      	ldr	r2, [pc, #24]	; (8012cf4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8012cda:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 8012cde:	e7dc      	b.n	8012c9a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 8012ce0:	6860      	ldr	r0, [r4, #4]
 8012ce2:	6803      	ldr	r3, [r0, #0]
 8012ce4:	a903      	add	r1, sp, #12
 8012ce6:	685b      	ldr	r3, [r3, #4]
 8012ce8:	4798      	blx	r3
 8012cea:	b00c      	add	sp, #48	; 0x30
 8012cec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012cf0:	08033357 	.word	0x08033357
 8012cf4:	080337df 	.word	0x080337df
 8012cf8:	08033502 	.word	0x08033502
 8012cfc:	0803338f 	.word	0x0803338f

08012d00 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8012d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d04:	b08d      	sub	sp, #52	; 0x34
 8012d06:	469b      	mov	fp, r3
 8012d08:	f89d 7060 	ldrb.w	r7, [sp, #96]	; 0x60
 8012d0c:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 8012d10:	f8bd 8064 	ldrh.w	r8, [sp, #100]	; 0x64
 8012d14:	2fff      	cmp	r7, #255	; 0xff
 8012d16:	bf14      	ite	ne
 8012d18:	2308      	movne	r3, #8
 8012d1a:	2302      	moveq	r3, #2
 8012d1c:	2500      	movs	r5, #0
 8012d1e:	4604      	mov	r4, r0
 8012d20:	4689      	mov	r9, r1
 8012d22:	4692      	mov	sl, r2
 8012d24:	e9cd 3503 	strd	r3, r5, [sp, #12]
 8012d28:	9506      	str	r5, [sp, #24]
 8012d2a:	f7ff fe81 	bl	8012a30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012d2e:	465a      	mov	r2, fp
 8012d30:	4603      	mov	r3, r0
 8012d32:	4651      	mov	r1, sl
 8012d34:	e9cd 8600 	strd	r8, r6, [sp]
 8012d38:	4620      	mov	r0, r4
 8012d3a:	f7ff ff57 	bl	8012bec <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8012d3e:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 8012d42:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012d46:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8012d4a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012d4e:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 8012d52:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012d56:	6823      	ldr	r3, [r4, #0]
 8012d58:	9007      	str	r0, [sp, #28]
 8012d5a:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8012d5e:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8012d62:	f8ad 8026 	strh.w	r8, [sp, #38]	; 0x26
 8012d66:	f8cd 9018 	str.w	r9, [sp, #24]
 8012d6a:	f88d 7028 	strb.w	r7, [sp, #40]	; 0x28
 8012d6e:	f88d 6029 	strb.w	r6, [sp, #41]	; 0x29
 8012d72:	f88d 602a 	strb.w	r6, [sp, #42]	; 0x2a
 8012d76:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012d78:	9d03      	ldr	r5, [sp, #12]
 8012d7a:	4620      	mov	r0, r4
 8012d7c:	4798      	blx	r3
 8012d7e:	4228      	tst	r0, r5
 8012d80:	d106      	bne.n	8012d90 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x90>
 8012d82:	4b07      	ldr	r3, [pc, #28]	; (8012da0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 8012d84:	4a07      	ldr	r2, [pc, #28]	; (8012da4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 8012d86:	4808      	ldr	r0, [pc, #32]	; (8012da8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa8>)
 8012d88:	f44f 710c 	mov.w	r1, #560	; 0x230
 8012d8c:	f019 f932 	bl	802bff4 <__assert_func>
 8012d90:	6860      	ldr	r0, [r4, #4]
 8012d92:	6803      	ldr	r3, [r0, #0]
 8012d94:	a903      	add	r1, sp, #12
 8012d96:	685b      	ldr	r3, [r3, #4]
 8012d98:	4798      	blx	r3
 8012d9a:	b00d      	add	sp, #52	; 0x34
 8012d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012da0:	0803338f 	.word	0x0803338f
 8012da4:	080338b6 	.word	0x080338b6
 8012da8:	08033502 	.word	0x08033502

08012dac <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8012dac:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012db0:	461f      	mov	r7, r3
 8012db2:	4b0b      	ldr	r3, [pc, #44]	; (8012de0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8012db4:	460d      	mov	r5, r1
 8012db6:	f8b3 8000 	ldrh.w	r8, [r3]
 8012dba:	4616      	mov	r6, r2
 8012dbc:	4604      	mov	r4, r0
 8012dbe:	f7ff fc77 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 8012dc2:	6803      	ldr	r3, [r0, #0]
 8012dc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012dc6:	4798      	blx	r3
 8012dc8:	463b      	mov	r3, r7
 8012dca:	e9cd 8000 	strd	r8, r0, [sp]
 8012dce:	4632      	mov	r2, r6
 8012dd0:	4629      	mov	r1, r5
 8012dd2:	4620      	mov	r0, r4
 8012dd4:	f7ff ff0a 	bl	8012bec <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8012dd8:	b002      	add	sp, #8
 8012dda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012dde:	bf00      	nop
 8012de0:	2001e1ba 	.word	0x2001e1ba

08012de4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8012de4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012de8:	b08b      	sub	sp, #44	; 0x2c
 8012dea:	4699      	mov	r9, r3
 8012dec:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8012df0:	f8bd 7048 	ldrh.w	r7, [sp, #72]	; 0x48
 8012df4:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8012df8:	f8ad 7018 	strh.w	r7, [sp, #24]
 8012dfc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012e00:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012e04:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012e08:	2500      	movs	r5, #0
 8012e0a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8012e0e:	f88d 3020 	strb.w	r3, [sp, #32]
 8012e12:	4690      	mov	r8, r2
 8012e14:	4604      	mov	r4, r0
 8012e16:	9504      	str	r5, [sp, #16]
 8012e18:	f8ad 601a 	strh.w	r6, [sp, #26]
 8012e1c:	f7ff fe08 	bl	8012a30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012e20:	464a      	mov	r2, r9
 8012e22:	4603      	mov	r3, r0
 8012e24:	4641      	mov	r1, r8
 8012e26:	4620      	mov	r0, r4
 8012e28:	f7ff ffc0 	bl	8012dac <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012e2c:	4b19      	ldr	r3, [pc, #100]	; (8012e94 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 8012e2e:	9005      	str	r0, [sp, #20]
 8012e30:	881b      	ldrh	r3, [r3, #0]
 8012e32:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012e36:	f7ff fc3b 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 8012e3a:	6803      	ldr	r3, [r0, #0]
 8012e3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012e3e:	4798      	blx	r3
 8012e40:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8012e44:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8012e48:	b107      	cbz	r7, 8012e4c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 8012e4a:	b936      	cbnz	r6, 8012e5a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 8012e4c:	4b12      	ldr	r3, [pc, #72]	; (8012e98 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 8012e4e:	4a13      	ldr	r2, [pc, #76]	; (8012e9c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 8012e50:	f44f 71f3 	mov.w	r1, #486	; 0x1e6
 8012e54:	4812      	ldr	r0, [pc, #72]	; (8012ea0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 8012e56:	f019 f8cd 	bl	802bff4 <__assert_func>
 8012e5a:	6823      	ldr	r3, [r4, #0]
 8012e5c:	9e01      	ldr	r6, [sp, #4]
 8012e5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012e60:	4620      	mov	r0, r4
 8012e62:	4798      	blx	r3
 8012e64:	4230      	tst	r0, r6
 8012e66:	d104      	bne.n	8012e72 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 8012e68:	4b0e      	ldr	r3, [pc, #56]	; (8012ea4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xc0>)
 8012e6a:	4a0c      	ldr	r2, [pc, #48]	; (8012e9c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 8012e6c:	f240 11e7 	movw	r1, #487	; 0x1e7
 8012e70:	e7f0      	b.n	8012e54 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 8012e72:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012e74:	9304      	str	r3, [sp, #16]
 8012e76:	6860      	ldr	r0, [r4, #4]
 8012e78:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8012e7c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8012e80:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8012e84:	6803      	ldr	r3, [r0, #0]
 8012e86:	a901      	add	r1, sp, #4
 8012e88:	685b      	ldr	r3, [r3, #4]
 8012e8a:	4798      	blx	r3
 8012e8c:	b00b      	add	sp, #44	; 0x2c
 8012e8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012e92:	bf00      	nop
 8012e94:	2001e1ba 	.word	0x2001e1ba
 8012e98:	08033357 	.word	0x08033357
 8012e9c:	0803368b 	.word	0x0803368b
 8012ea0:	08033502 	.word	0x08033502
 8012ea4:	0803338f 	.word	0x0803338f

08012ea8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8012ea8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012eaa:	b08d      	sub	sp, #52	; 0x34
 8012eac:	466b      	mov	r3, sp
 8012eae:	e883 0006 	stmia.w	r3, {r1, r2}
 8012eb2:	4b22      	ldr	r3, [pc, #136]	; (8012f3c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8012eb4:	781b      	ldrb	r3, [r3, #0]
 8012eb6:	4604      	mov	r4, r0
 8012eb8:	b933      	cbnz	r3, 8012ec8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 8012eba:	4b21      	ldr	r3, [pc, #132]	; (8012f40 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8012ebc:	4a21      	ldr	r2, [pc, #132]	; (8012f44 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8012ebe:	4822      	ldr	r0, [pc, #136]	; (8012f48 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 8012ec0:	f240 2141 	movw	r1, #577	; 0x241
 8012ec4:	f019 f896 	bl	802bff4 <__assert_func>
 8012ec8:	2300      	movs	r3, #0
 8012eca:	9306      	str	r3, [sp, #24]
 8012ecc:	6803      	ldr	r3, [r0, #0]
 8012ece:	f8bd 6000 	ldrh.w	r6, [sp]
 8012ed2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012ed4:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8012ed8:	2501      	movs	r5, #1
 8012eda:	9503      	str	r5, [sp, #12]
 8012edc:	4798      	blx	r3
 8012ede:	463a      	mov	r2, r7
 8012ee0:	4631      	mov	r1, r6
 8012ee2:	4603      	mov	r3, r0
 8012ee4:	4620      	mov	r0, r4
 8012ee6:	f7ff ff61 	bl	8012dac <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012eea:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012eec:	9307      	str	r3, [sp, #28]
 8012eee:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012ef2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012ef6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012efa:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012efe:	4b13      	ldr	r3, [pc, #76]	; (8012f4c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa4>)
 8012f00:	9004      	str	r0, [sp, #16]
 8012f02:	881b      	ldrh	r3, [r3, #0]
 8012f04:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012f08:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012f0c:	f7ff fbd0 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 8012f10:	6803      	ldr	r3, [r0, #0]
 8012f12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012f14:	4798      	blx	r3
 8012f16:	23ff      	movs	r3, #255	; 0xff
 8012f18:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8012f1c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012f20:	6860      	ldr	r0, [r4, #4]
 8012f22:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012f26:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8012f2a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8012f2e:	6803      	ldr	r3, [r0, #0]
 8012f30:	a903      	add	r1, sp, #12
 8012f32:	685b      	ldr	r3, [r3, #4]
 8012f34:	4798      	blx	r3
 8012f36:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012f38:	b00d      	add	sp, #52	; 0x34
 8012f3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012f3c:	2001e1bf 	.word	0x2001e1bf
 8012f40:	08033456 	.word	0x08033456
 8012f44:	08033735 	.word	0x08033735
 8012f48:	08033502 	.word	0x08033502
 8012f4c:	2001e1ba 	.word	0x2001e1ba

08012f50 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8012f50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f54:	b08c      	sub	sp, #48	; 0x30
 8012f56:	461e      	mov	r6, r3
 8012f58:	466d      	mov	r5, sp
 8012f5a:	2300      	movs	r3, #0
 8012f5c:	e885 0006 	stmia.w	r5, {r1, r2}
 8012f60:	9306      	str	r3, [sp, #24]
 8012f62:	6803      	ldr	r3, [r0, #0]
 8012f64:	f8bd 7000 	ldrh.w	r7, [sp]
 8012f68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012f6a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8012f6e:	2501      	movs	r5, #1
 8012f70:	9503      	str	r5, [sp, #12]
 8012f72:	4604      	mov	r4, r0
 8012f74:	4798      	blx	r3
 8012f76:	4642      	mov	r2, r8
 8012f78:	4639      	mov	r1, r7
 8012f7a:	4603      	mov	r3, r0
 8012f7c:	4620      	mov	r0, r4
 8012f7e:	f7ff ff15 	bl	8012dac <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012f82:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012f86:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012f8a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012f8e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012f92:	4b11      	ldr	r3, [pc, #68]	; (8012fd8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8012f94:	9004      	str	r0, [sp, #16]
 8012f96:	881b      	ldrh	r3, [r3, #0]
 8012f98:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012f9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012f9e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012fa2:	9607      	str	r6, [sp, #28]
 8012fa4:	f7ff fb84 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 8012fa8:	6803      	ldr	r3, [r0, #0]
 8012faa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012fac:	4798      	blx	r3
 8012fae:	23ff      	movs	r3, #255	; 0xff
 8012fb0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8012fb4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012fb8:	6860      	ldr	r0, [r4, #4]
 8012fba:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012fbe:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8012fc2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8012fc6:	6803      	ldr	r3, [r0, #0]
 8012fc8:	a903      	add	r1, sp, #12
 8012fca:	685b      	ldr	r3, [r3, #4]
 8012fcc:	4798      	blx	r3
 8012fce:	4630      	mov	r0, r6
 8012fd0:	b00c      	add	sp, #48	; 0x30
 8012fd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012fd6:	bf00      	nop
 8012fd8:	2001e1ba 	.word	0x2001e1ba

08012fdc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8012fdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012fde:	b085      	sub	sp, #20
 8012fe0:	ac02      	add	r4, sp, #8
 8012fe2:	e884 0006 	stmia.w	r4, {r1, r2}
 8012fe6:	4605      	mov	r5, r0
 8012fe8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8012fec:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8012ff0:	f7ff fd1e 	bl	8012a30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012ff4:	463a      	mov	r2, r7
 8012ff6:	4603      	mov	r3, r0
 8012ff8:	4631      	mov	r1, r6
 8012ffa:	4628      	mov	r0, r5
 8012ffc:	f7ff fed6 	bl	8012dac <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013000:	4a05      	ldr	r2, [pc, #20]	; (8013018 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8013002:	682b      	ldr	r3, [r5, #0]
 8013004:	8812      	ldrh	r2, [r2, #0]
 8013006:	9200      	str	r2, [sp, #0]
 8013008:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801300a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801300e:	4603      	mov	r3, r0
 8013010:	4628      	mov	r0, r5
 8013012:	47b0      	blx	r6
 8013014:	b005      	add	sp, #20
 8013016:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013018:	2001e1ba 	.word	0x2001e1ba

0801301c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801301c:	b570      	push	{r4, r5, r6, lr}
 801301e:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8013022:	4604      	mov	r4, r0
 8013024:	b19b      	cbz	r3, 801304e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8013026:	2002      	movs	r0, #2
 8013028:	f7ee f8f8 	bl	800121c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801302c:	2300      	movs	r3, #0
 801302e:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8013032:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8013036:	6823      	ldr	r3, [r4, #0]
 8013038:	4620      	mov	r0, r4
 801303a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801303e:	f7ff fcf7 	bl	8012a30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013042:	462b      	mov	r3, r5
 8013044:	4601      	mov	r1, r0
 8013046:	4620      	mov	r0, r4
 8013048:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801304c:	4718      	bx	r3
 801304e:	bd70      	pop	{r4, r5, r6, pc}

08013050 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8013050:	b538      	push	{r3, r4, r5, lr}
 8013052:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 8013056:	428b      	cmp	r3, r1
 8013058:	4604      	mov	r4, r0
 801305a:	460d      	mov	r5, r1
 801305c:	d006      	beq.n	801306c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801305e:	6803      	ldr	r3, [r0, #0]
 8013060:	b929      	cbnz	r1, 801306e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8013062:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013066:	4798      	blx	r3
 8013068:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 801306c:	bd38      	pop	{r3, r4, r5, pc}
 801306e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8013072:	e7f8      	b.n	8013066 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08013074 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8013074:	b510      	push	{r4, lr}
 8013076:	4b0d      	ldr	r3, [pc, #52]	; (80130ac <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8013078:	781b      	ldrb	r3, [r3, #0]
 801307a:	4604      	mov	r4, r0
 801307c:	b95b      	cbnz	r3, 8013096 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801307e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8013082:	2b02      	cmp	r3, #2
 8013084:	d007      	beq.n	8013096 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8013086:	6840      	ldr	r0, [r0, #4]
 8013088:	f000 f93c 	bl	8013304 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801308c:	b118      	cbz	r0, 8013096 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801308e:	6862      	ldr	r2, [r4, #4]
 8013090:	7a53      	ldrb	r3, [r2, #9]
 8013092:	2b00      	cmp	r3, #0
 8013094:	d0fc      	beq.n	8013090 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8013096:	f7ee f9bb 	bl	8001410 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801309a:	4620      	mov	r0, r4
 801309c:	2100      	movs	r1, #0
 801309e:	f7ff ffd7 	bl	8013050 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80130a2:	4620      	mov	r0, r4
 80130a4:	f7ff fcc4 	bl	8012a30 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80130a8:	bd10      	pop	{r4, pc}
 80130aa:	bf00      	nop
 80130ac:	2001e1be 	.word	0x2001e1be

080130b0 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80130b0:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80130b4:	1a13      	subs	r3, r2, r0
 80130b6:	4258      	negs	r0, r3
 80130b8:	4158      	adcs	r0, r3
 80130ba:	4770      	bx	lr

080130bc <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80130bc:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80130c0:	1a9b      	subs	r3, r3, r2
 80130c2:	2b00      	cmp	r3, #0
 80130c4:	bfdc      	itt	le
 80130c6:	6882      	ldrle	r2, [r0, #8]
 80130c8:	189b      	addle	r3, r3, r2
 80130ca:	2b01      	cmp	r3, #1
 80130cc:	bfcc      	ite	gt
 80130ce:	2000      	movgt	r0, #0
 80130d0:	2001      	movle	r0, #1
 80130d2:	4770      	bx	lr

080130d4 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80130d4:	6902      	ldr	r2, [r0, #16]
 80130d6:	6843      	ldr	r3, [r0, #4]
 80130d8:	2024      	movs	r0, #36	; 0x24
 80130da:	fb00 3002 	mla	r0, r0, r2, r3
 80130de:	4770      	bx	lr

080130e0 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80130e0:	6803      	ldr	r3, [r0, #0]
 80130e2:	691b      	ldr	r3, [r3, #16]
 80130e4:	4718      	bx	r3

080130e6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80130e6:	4770      	bx	lr

080130e8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80130e8:	4770      	bx	lr

080130ea <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80130ea:	4770      	bx	lr

080130ec <_ZN8touchgfx13DMA_Interface7executeEv>:
 80130ec:	b570      	push	{r4, r5, r6, lr}
 80130ee:	2301      	movs	r3, #1
 80130f0:	7203      	strb	r3, [r0, #8]
 80130f2:	4604      	mov	r4, r0
 80130f4:	6840      	ldr	r0, [r0, #4]
 80130f6:	6803      	ldr	r3, [r0, #0]
 80130f8:	699b      	ldr	r3, [r3, #24]
 80130fa:	4798      	blx	r3
 80130fc:	6803      	ldr	r3, [r0, #0]
 80130fe:	2b40      	cmp	r3, #64	; 0x40
 8013100:	4605      	mov	r5, r0
 8013102:	d039      	beq.n	8013178 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8013104:	d815      	bhi.n	8013132 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 8013106:	2b04      	cmp	r3, #4
 8013108:	d022      	beq.n	8013150 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801310a:	d808      	bhi.n	801311e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801310c:	2b01      	cmp	r3, #1
 801310e:	d033      	beq.n	8013178 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8013110:	2b02      	cmp	r3, #2
 8013112:	d108      	bne.n	8013126 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 8013114:	6823      	ldr	r3, [r4, #0]
 8013116:	4620      	mov	r0, r4
 8013118:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801311a:	4798      	blx	r3
 801311c:	e025      	b.n	801316a <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 801311e:	2b08      	cmp	r3, #8
 8013120:	d01e      	beq.n	8013160 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 8013122:	2b20      	cmp	r3, #32
 8013124:	d028      	beq.n	8013178 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8013126:	4b17      	ldr	r3, [pc, #92]	; (8013184 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 8013128:	4a17      	ldr	r2, [pc, #92]	; (8013188 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 801312a:	4818      	ldr	r0, [pc, #96]	; (801318c <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 801312c:	2188      	movs	r1, #136	; 0x88
 801312e:	f018 ff61 	bl	802bff4 <__assert_func>
 8013132:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8013136:	d01f      	beq.n	8013178 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8013138:	d804      	bhi.n	8013144 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 801313a:	2b80      	cmp	r3, #128	; 0x80
 801313c:	d01c      	beq.n	8013178 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 801313e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8013142:	e7ef      	b.n	8013124 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 8013144:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8013148:	d016      	beq.n	8013178 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 801314a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801314e:	e7e0      	b.n	8013112 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8013150:	6823      	ldr	r3, [r4, #0]
 8013152:	7f01      	ldrb	r1, [r0, #28]
 8013154:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013156:	4620      	mov	r0, r4
 8013158:	4798      	blx	r3
 801315a:	6823      	ldr	r3, [r4, #0]
 801315c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801315e:	e006      	b.n	801316e <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8013160:	6823      	ldr	r3, [r4, #0]
 8013162:	7f01      	ldrb	r1, [r0, #28]
 8013164:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013166:	4620      	mov	r0, r4
 8013168:	4798      	blx	r3
 801316a:	6823      	ldr	r3, [r4, #0]
 801316c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801316e:	4629      	mov	r1, r5
 8013170:	4620      	mov	r0, r4
 8013172:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013176:	4718      	bx	r3
 8013178:	6823      	ldr	r3, [r4, #0]
 801317a:	4620      	mov	r0, r4
 801317c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801317e:	4798      	blx	r3
 8013180:	e7eb      	b.n	801315a <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8013182:	bf00      	nop
 8013184:	0803399a 	.word	0x0803399a
 8013188:	08033a5c 	.word	0x08033a5c
 801318c:	080339bf 	.word	0x080339bf

08013190 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8013190:	b570      	push	{r4, r5, r6, lr}
 8013192:	4604      	mov	r4, r0
 8013194:	460e      	mov	r6, r1
 8013196:	6860      	ldr	r0, [r4, #4]
 8013198:	6803      	ldr	r3, [r0, #0]
 801319a:	685b      	ldr	r3, [r3, #4]
 801319c:	4798      	blx	r3
 801319e:	2800      	cmp	r0, #0
 80131a0:	d1f9      	bne.n	8013196 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80131a2:	4d0d      	ldr	r5, [pc, #52]	; (80131d8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80131a4:	6828      	ldr	r0, [r5, #0]
 80131a6:	6803      	ldr	r3, [r0, #0]
 80131a8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80131aa:	4798      	blx	r3
 80131ac:	f7ee f93e 	bl	800142c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80131b0:	6828      	ldr	r0, [r5, #0]
 80131b2:	2101      	movs	r1, #1
 80131b4:	f7ff ff4c 	bl	8013050 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80131b8:	6860      	ldr	r0, [r4, #4]
 80131ba:	6803      	ldr	r3, [r0, #0]
 80131bc:	4631      	mov	r1, r6
 80131be:	689b      	ldr	r3, [r3, #8]
 80131c0:	4798      	blx	r3
 80131c2:	6823      	ldr	r3, [r4, #0]
 80131c4:	4620      	mov	r0, r4
 80131c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80131c8:	4798      	blx	r3
 80131ca:	6828      	ldr	r0, [r5, #0]
 80131cc:	6803      	ldr	r3, [r0, #0]
 80131ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80131d2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80131d4:	4718      	bx	r3
 80131d6:	bf00      	nop
 80131d8:	2001e1c0 	.word	0x2001e1c0

080131dc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80131dc:	b508      	push	{r3, lr}
 80131de:	f7ee f917 	bl	8001410 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80131e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80131e6:	f7ee b91b 	b.w	8001420 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080131ea <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80131ea:	b510      	push	{r4, lr}
 80131ec:	2114      	movs	r1, #20
 80131ee:	4604      	mov	r4, r0
 80131f0:	f017 ffb3 	bl	802b15a <_ZdlPvj>
 80131f4:	4620      	mov	r0, r4
 80131f6:	bd10      	pop	{r4, pc}

080131f8 <_ZN8touchgfx13DMA_Interface5startEv>:
 80131f8:	b510      	push	{r4, lr}
 80131fa:	4604      	mov	r4, r0
 80131fc:	6840      	ldr	r0, [r0, #4]
 80131fe:	6803      	ldr	r3, [r0, #0]
 8013200:	681b      	ldr	r3, [r3, #0]
 8013202:	4798      	blx	r3
 8013204:	b948      	cbnz	r0, 801321a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013206:	7a63      	ldrb	r3, [r4, #9]
 8013208:	b13b      	cbz	r3, 801321a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801320a:	7a23      	ldrb	r3, [r4, #8]
 801320c:	b92b      	cbnz	r3, 801321a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801320e:	6823      	ldr	r3, [r4, #0]
 8013210:	4620      	mov	r0, r4
 8013212:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013214:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013218:	4718      	bx	r3
 801321a:	bd10      	pop	{r4, pc}

0801321c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 801321c:	b510      	push	{r4, lr}
 801321e:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8013222:	1ad2      	subs	r2, r2, r3
 8013224:	2a00      	cmp	r2, #0
 8013226:	bfdc      	itt	le
 8013228:	6884      	ldrle	r4, [r0, #8]
 801322a:	1912      	addle	r2, r2, r4
 801322c:	2a01      	cmp	r2, #1
 801322e:	dd17      	ble.n	8013260 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x44>
 8013230:	6842      	ldr	r2, [r0, #4]
 8013232:	2424      	movs	r4, #36	; 0x24
 8013234:	fb04 2303 	mla	r3, r4, r3, r2
 8013238:	f101 0220 	add.w	r2, r1, #32
 801323c:	f851 4b04 	ldr.w	r4, [r1], #4
 8013240:	f843 4b04 	str.w	r4, [r3], #4
 8013244:	4291      	cmp	r1, r2
 8013246:	d1f9      	bne.n	801323c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8013248:	780a      	ldrb	r2, [r1, #0]
 801324a:	701a      	strb	r2, [r3, #0]
 801324c:	68c3      	ldr	r3, [r0, #12]
 801324e:	6882      	ldr	r2, [r0, #8]
 8013250:	f3bf 8f5b 	dmb	ish
 8013254:	3301      	adds	r3, #1
 8013256:	429a      	cmp	r2, r3
 8013258:	bfd8      	it	le
 801325a:	1a9b      	suble	r3, r3, r2
 801325c:	60c3      	str	r3, [r0, #12]
 801325e:	bd10      	pop	{r4, pc}
 8013260:	4b02      	ldr	r3, [pc, #8]	; (801326c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 8013262:	4a03      	ldr	r2, [pc, #12]	; (8013270 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 8013264:	4803      	ldr	r0, [pc, #12]	; (8013274 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 8013266:	2136      	movs	r1, #54	; 0x36
 8013268:	f018 fec4 	bl	802bff4 <__assert_func>
 801326c:	080339e5 	.word	0x080339e5
 8013270:	08033a8c 	.word	0x08033a8c
 8013274:	080339bf 	.word	0x080339bf

08013278 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8013278:	b510      	push	{r4, lr}
 801327a:	6803      	ldr	r3, [r0, #0]
 801327c:	681b      	ldr	r3, [r3, #0]
 801327e:	4604      	mov	r4, r0
 8013280:	4798      	blx	r3
 8013282:	b128      	cbz	r0, 8013290 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 8013284:	4b07      	ldr	r3, [pc, #28]	; (80132a4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 8013286:	4a08      	ldr	r2, [pc, #32]	; (80132a8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 8013288:	4808      	ldr	r0, [pc, #32]	; (80132ac <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 801328a:	213c      	movs	r1, #60	; 0x3c
 801328c:	f018 feb2 	bl	802bff4 <__assert_func>
 8013290:	6923      	ldr	r3, [r4, #16]
 8013292:	68a2      	ldr	r2, [r4, #8]
 8013294:	f3bf 8f5b 	dmb	ish
 8013298:	3301      	adds	r3, #1
 801329a:	429a      	cmp	r2, r3
 801329c:	bfd8      	it	le
 801329e:	1a9b      	suble	r3, r3, r2
 80132a0:	6123      	str	r3, [r4, #16]
 80132a2:	bd10      	pop	{r4, pc}
 80132a4:	08033a08 	.word	0x08033a08
 80132a8:	08033ada 	.word	0x08033ada
 80132ac:	080339bf 	.word	0x080339bf

080132b0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80132b0:	b570      	push	{r4, r5, r6, lr}
 80132b2:	4604      	mov	r4, r0
 80132b4:	6840      	ldr	r0, [r0, #4]
 80132b6:	6803      	ldr	r3, [r0, #0]
 80132b8:	681b      	ldr	r3, [r3, #0]
 80132ba:	4798      	blx	r3
 80132bc:	4605      	mov	r5, r0
 80132be:	b930      	cbnz	r0, 80132ce <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80132c0:	7a23      	ldrb	r3, [r4, #8]
 80132c2:	b123      	cbz	r3, 80132ce <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80132c4:	6860      	ldr	r0, [r4, #4]
 80132c6:	6803      	ldr	r3, [r0, #0]
 80132c8:	695b      	ldr	r3, [r3, #20]
 80132ca:	4798      	blx	r3
 80132cc:	7225      	strb	r5, [r4, #8]
 80132ce:	6860      	ldr	r0, [r4, #4]
 80132d0:	6803      	ldr	r3, [r0, #0]
 80132d2:	681b      	ldr	r3, [r3, #0]
 80132d4:	4798      	blx	r3
 80132d6:	b928      	cbnz	r0, 80132e4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80132d8:	6823      	ldr	r3, [r4, #0]
 80132da:	4620      	mov	r0, r4
 80132dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80132de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80132e2:	4718      	bx	r3
 80132e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80132e8:	f7ee b8a8 	b.w	800143c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080132ec <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80132ec:	b510      	push	{r4, lr}
 80132ee:	4c04      	ldr	r4, [pc, #16]	; (8013300 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80132f0:	6082      	str	r2, [r0, #8]
 80132f2:	2200      	movs	r2, #0
 80132f4:	e9c0 4100 	strd	r4, r1, [r0]
 80132f8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80132fc:	bd10      	pop	{r4, pc}
 80132fe:	bf00      	nop
 8013300:	08033a40 	.word	0x08033a40

08013304 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8013304:	6840      	ldr	r0, [r0, #4]
 8013306:	6803      	ldr	r3, [r0, #0]
 8013308:	681b      	ldr	r3, [r3, #0]
 801330a:	4718      	bx	r3

0801330c <_ZN8touchgfx21AbstractPainterRGB56510renderNextERhS1_S1_S1_>:
 801330c:	2000      	movs	r0, #0
 801330e:	4770      	bx	lr

08013310 <_ZN8touchgfx19PainterRGB565Bitmap9setOffsetEss>:
 8013310:	8541      	strh	r1, [r0, #42]	; 0x2a
 8013312:	8582      	strh	r2, [r0, #44]	; 0x2c
 8013314:	4770      	bx	lr

08013316 <_ZN8touchgfx19PainterRGB565Bitmap8setTiledEb>:
 8013316:	f880 102e 	strb.w	r1, [r0, #46]	; 0x2e
 801331a:	4770      	bx	lr

0801331c <_ZN8touchgfx19PainterRGB565BitmapD1Ev>:
 801331c:	4770      	bx	lr
	...

08013320 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh>:
 8013320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013324:	4413      	add	r3, r2
 8013326:	eb01 0543 	add.w	r5, r1, r3, lsl #1
 801332a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801332e:	b085      	sub	sp, #20
 8013330:	441a      	add	r2, r3
 8013332:	f9b0 302a 	ldrsh.w	r3, [r0, #42]	; 0x2a
 8013336:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013338:	441a      	add	r2, r3
 801333a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801333e:	60c2      	str	r2, [r0, #12]
 8013340:	440b      	add	r3, r1
 8013342:	f9b0 102c 	ldrsh.w	r1, [r0, #44]	; 0x2c
 8013346:	440b      	add	r3, r1
 8013348:	6103      	str	r3, [r0, #16]
 801334a:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 801334e:	4604      	mov	r4, r0
 8013350:	e9dd 670f 	ldrd	r6, r7, [sp, #60]	; 0x3c
 8013354:	b953      	cbnz	r3, 801336c <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x4c>
 8013356:	2a00      	cmp	r2, #0
 8013358:	da08      	bge.n	801336c <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x4c>
 801335a:	4251      	negs	r1, r2
 801335c:	42b1      	cmp	r1, r6
 801335e:	f200 80c3 	bhi.w	80134e8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 8013362:	4416      	add	r6, r2
 8013364:	1abf      	subs	r7, r7, r2
 8013366:	eba5 0542 	sub.w	r5, r5, r2, lsl #1
 801336a:	60c3      	str	r3, [r0, #12]
 801336c:	6823      	ldr	r3, [r4, #0]
 801336e:	4620      	mov	r0, r4
 8013370:	68db      	ldr	r3, [r3, #12]
 8013372:	4798      	blx	r3
 8013374:	2800      	cmp	r0, #0
 8013376:	f000 80b7 	beq.w	80134e8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 801337a:	68e3      	ldr	r3, [r4, #12]
 801337c:	f9b4 2026 	ldrsh.w	r2, [r4, #38]	; 0x26
 8013380:	f894 102e 	ldrb.w	r1, [r4, #46]	; 0x2e
 8013384:	eba2 0a03 	sub.w	sl, r2, r3
 8013388:	b919      	cbnz	r1, 8013392 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x72>
 801338a:	4433      	add	r3, r6
 801338c:	4293      	cmp	r3, r2
 801338e:	bfc8      	it	gt
 8013390:	4656      	movgt	r6, sl
 8013392:	eb05 0346 	add.w	r3, r5, r6, lsl #1
 8013396:	9301      	str	r3, [sp, #4]
 8013398:	69a3      	ldr	r3, [r4, #24]
 801339a:	2b00      	cmp	r3, #0
 801339c:	f000 8179 	beq.w	8013692 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x372>
 80133a0:	f104 0820 	add.w	r8, r4, #32
 80133a4:	4640      	mov	r0, r8
 80133a6:	f009 fabd 	bl	801c924 <_ZNK8touchgfx6Bitmap7getDataEv>
 80133aa:	f9b4 2026 	ldrsh.w	r2, [r4, #38]	; 0x26
 80133ae:	6923      	ldr	r3, [r4, #16]
 80133b0:	4353      	muls	r3, r2
 80133b2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80133b6:	9302      	str	r3, [sp, #8]
 80133b8:	69e3      	ldr	r3, [r4, #28]
 80133ba:	2b00      	cmp	r3, #0
 80133bc:	f000 80c9 	beq.w	8013552 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x232>
 80133c0:	4640      	mov	r0, r8
 80133c2:	f009 fae1 	bl	801c988 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80133c6:	f9b4 2026 	ldrsh.w	r2, [r4, #38]	; 0x26
 80133ca:	6923      	ldr	r3, [r4, #16]
 80133cc:	f894 e008 	ldrb.w	lr, [r4, #8]
 80133d0:	fb03 0302 	mla	r3, r3, r2, r0
 80133d4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80133d8:	9303      	str	r3, [sp, #12]
 80133da:	d05d      	beq.n	8013498 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x178>
 80133dc:	f8df 8454 	ldr.w	r8, [pc, #1108]	; 8013834 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x514>
 80133e0:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80133e4:	45b2      	cmp	sl, r6
 80133e6:	bf28      	it	cs
 80133e8:	46b2      	movcs	sl, r6
 80133ea:	eb05 0b4a 	add.w	fp, r5, sl, lsl #1
 80133ee:	eba6 060a 	sub.w	r6, r6, sl
 80133f2:	69e3      	ldr	r3, [r4, #28]
 80133f4:	f817 1b01 	ldrb.w	r1, [r7], #1
 80133f8:	1c5a      	adds	r2, r3, #1
 80133fa:	61e2      	str	r2, [r4, #28]
 80133fc:	781b      	ldrb	r3, [r3, #0]
 80133fe:	7a22      	ldrb	r2, [r4, #8]
 8013400:	435a      	muls	r2, r3
 8013402:	1c53      	adds	r3, r2, #1
 8013404:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8013408:	121b      	asrs	r3, r3, #8
 801340a:	fb13 f301 	smulbb	r3, r3, r1
 801340e:	b29b      	uxth	r3, r3
 8013410:	1c59      	adds	r1, r3, #1
 8013412:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8013416:	1209      	asrs	r1, r1, #8
 8013418:	d02e      	beq.n	8013478 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x158>
 801341a:	69a3      	ldr	r3, [r4, #24]
 801341c:	f8b5 e000 	ldrh.w	lr, [r5]
 8013420:	881a      	ldrh	r2, [r3, #0]
 8013422:	43c8      	mvns	r0, r1
 8013424:	b2c0      	uxtb	r0, r0
 8013426:	ea0e 0308 	and.w	r3, lr, r8
 801342a:	ea02 0c08 	and.w	ip, r2, r8
 801342e:	4343      	muls	r3, r0
 8013430:	f40e 6afc 	and.w	sl, lr, #2016	; 0x7e0
 8013434:	fb01 3c0c 	mla	ip, r1, ip, r3
 8013438:	fb00 fa0a 	mul.w	sl, r0, sl
 801343c:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 8013440:	f00e 0e1f 	and.w	lr, lr, #31
 8013444:	fb9c fcf9 	sdiv	ip, ip, r9
 8013448:	fb01 a303 	mla	r3, r1, r3, sl
 801344c:	ea0c 0c08 	and.w	ip, ip, r8
 8013450:	fb93 f3f9 	sdiv	r3, r3, r9
 8013454:	f002 021f 	and.w	r2, r2, #31
 8013458:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801345c:	fb00 fe0e 	mul.w	lr, r0, lr
 8013460:	ea4c 0c03 	orr.w	ip, ip, r3
 8013464:	fb01 e202 	mla	r2, r1, r2, lr
 8013468:	fb92 f3f9 	sdiv	r3, r2, r9
 801346c:	f003 031f 	and.w	r3, r3, #31
 8013470:	ea4c 0c03 	orr.w	ip, ip, r3
 8013474:	f8a5 c000 	strh.w	ip, [r5]
 8013478:	69a3      	ldr	r3, [r4, #24]
 801347a:	3502      	adds	r5, #2
 801347c:	3302      	adds	r3, #2
 801347e:	45ab      	cmp	fp, r5
 8013480:	61a3      	str	r3, [r4, #24]
 8013482:	d8b6      	bhi.n	80133f2 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0xd2>
 8013484:	9b02      	ldr	r3, [sp, #8]
 8013486:	61a3      	str	r3, [r4, #24]
 8013488:	9b03      	ldr	r3, [sp, #12]
 801348a:	61e3      	str	r3, [r4, #28]
 801348c:	9b01      	ldr	r3, [sp, #4]
 801348e:	f9b4 a026 	ldrsh.w	sl, [r4, #38]	; 0x26
 8013492:	42ab      	cmp	r3, r5
 8013494:	d8a6      	bhi.n	80133e4 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0xc4>
 8013496:	e027      	b.n	80134e8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 8013498:	f8df 9398 	ldr.w	r9, [pc, #920]	; 8013834 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x514>
 801349c:	45b2      	cmp	sl, r6
 801349e:	bf28      	it	cs
 80134a0:	46b2      	movcs	sl, r6
 80134a2:	eb05 0b4a 	add.w	fp, r5, sl, lsl #1
 80134a6:	eba6 060a 	sub.w	r6, r6, sl
 80134aa:	69e2      	ldr	r2, [r4, #28]
 80134ac:	f817 1b01 	ldrb.w	r1, [r7], #1
 80134b0:	1c53      	adds	r3, r2, #1
 80134b2:	61e3      	str	r3, [r4, #28]
 80134b4:	7813      	ldrb	r3, [r2, #0]
 80134b6:	434b      	muls	r3, r1
 80134b8:	1c59      	adds	r1, r3, #1
 80134ba:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80134be:	1209      	asrs	r1, r1, #8
 80134c0:	29ff      	cmp	r1, #255	; 0xff
 80134c2:	69a3      	ldr	r3, [r4, #24]
 80134c4:	d113      	bne.n	80134ee <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1ce>
 80134c6:	881b      	ldrh	r3, [r3, #0]
 80134c8:	802b      	strh	r3, [r5, #0]
 80134ca:	69a3      	ldr	r3, [r4, #24]
 80134cc:	3502      	adds	r5, #2
 80134ce:	3302      	adds	r3, #2
 80134d0:	45ab      	cmp	fp, r5
 80134d2:	61a3      	str	r3, [r4, #24]
 80134d4:	d8e9      	bhi.n	80134aa <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x18a>
 80134d6:	9b02      	ldr	r3, [sp, #8]
 80134d8:	61a3      	str	r3, [r4, #24]
 80134da:	9b03      	ldr	r3, [sp, #12]
 80134dc:	61e3      	str	r3, [r4, #28]
 80134de:	9b01      	ldr	r3, [sp, #4]
 80134e0:	f9b4 a026 	ldrsh.w	sl, [r4, #38]	; 0x26
 80134e4:	42ab      	cmp	r3, r5
 80134e6:	d8d9      	bhi.n	801349c <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x17c>
 80134e8:	b005      	add	sp, #20
 80134ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134ee:	b2c8      	uxtb	r0, r1
 80134f0:	2900      	cmp	r1, #0
 80134f2:	d0ea      	beq.n	80134ca <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1aa>
 80134f4:	f8b5 8000 	ldrh.w	r8, [r5]
 80134f8:	881a      	ldrh	r2, [r3, #0]
 80134fa:	43c0      	mvns	r0, r0
 80134fc:	b2c0      	uxtb	r0, r0
 80134fe:	ea08 0309 	and.w	r3, r8, r9
 8013502:	ea02 0c09 	and.w	ip, r2, r9
 8013506:	4343      	muls	r3, r0
 8013508:	f408 6afc 	and.w	sl, r8, #2016	; 0x7e0
 801350c:	fb01 3c0c 	mla	ip, r1, ip, r3
 8013510:	fb00 fa0a 	mul.w	sl, r0, sl
 8013514:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 8013518:	f008 081f 	and.w	r8, r8, #31
 801351c:	fb9c fcfe 	sdiv	ip, ip, lr
 8013520:	fb01 a303 	mla	r3, r1, r3, sl
 8013524:	ea0c 0c09 	and.w	ip, ip, r9
 8013528:	fb93 f3fe 	sdiv	r3, r3, lr
 801352c:	f002 021f 	and.w	r2, r2, #31
 8013530:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013534:	fb00 f808 	mul.w	r8, r0, r8
 8013538:	ea4c 0c03 	orr.w	ip, ip, r3
 801353c:	fb01 8202 	mla	r2, r1, r2, r8
 8013540:	fb92 f3fe 	sdiv	r3, r2, lr
 8013544:	f003 031f 	and.w	r3, r3, #31
 8013548:	ea4c 0c03 	orr.w	ip, ip, r3
 801354c:	f8a5 c000 	strh.w	ip, [r5]
 8013550:	e7bb      	b.n	80134ca <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1aa>
 8013552:	f894 c008 	ldrb.w	ip, [r4, #8]
 8013556:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801355a:	d04f      	beq.n	80135fc <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2dc>
 801355c:	f8df 82d4 	ldr.w	r8, [pc, #724]	; 8013834 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x514>
 8013560:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8013564:	45b2      	cmp	sl, r6
 8013566:	bf28      	it	cs
 8013568:	46b2      	movcs	sl, r6
 801356a:	eb05 0b4a 	add.w	fp, r5, sl, lsl #1
 801356e:	eba6 060a 	sub.w	r6, r6, sl
 8013572:	f817 3b01 	ldrb.w	r3, [r7], #1
 8013576:	7a21      	ldrb	r1, [r4, #8]
 8013578:	f8b5 e000 	ldrh.w	lr, [r5]
 801357c:	434b      	muls	r3, r1
 801357e:	1c59      	adds	r1, r3, #1
 8013580:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8013584:	69a3      	ldr	r3, [r4, #24]
 8013586:	1209      	asrs	r1, r1, #8
 8013588:	881a      	ldrh	r2, [r3, #0]
 801358a:	43c8      	mvns	r0, r1
 801358c:	b2c0      	uxtb	r0, r0
 801358e:	ea0e 0308 	and.w	r3, lr, r8
 8013592:	4343      	muls	r3, r0
 8013594:	f40e 6afc 	and.w	sl, lr, #2016	; 0x7e0
 8013598:	ea02 0c08 	and.w	ip, r2, r8
 801359c:	fb01 3c0c 	mla	ip, r1, ip, r3
 80135a0:	fb00 fa0a 	mul.w	sl, r0, sl
 80135a4:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 80135a8:	fb9c fcf9 	sdiv	ip, ip, r9
 80135ac:	fb01 a303 	mla	r3, r1, r3, sl
 80135b0:	ea0c 0c08 	and.w	ip, ip, r8
 80135b4:	fb93 f3f9 	sdiv	r3, r3, r9
 80135b8:	f00e 0e1f 	and.w	lr, lr, #31
 80135bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80135c0:	ea4c 0c03 	orr.w	ip, ip, r3
 80135c4:	fb00 f00e 	mul.w	r0, r0, lr
 80135c8:	f002 031f 	and.w	r3, r2, #31
 80135cc:	fb01 0303 	mla	r3, r1, r3, r0
 80135d0:	fb93 f3f9 	sdiv	r3, r3, r9
 80135d4:	f003 031f 	and.w	r3, r3, #31
 80135d8:	ea4c 0c03 	orr.w	ip, ip, r3
 80135dc:	f825 cb02 	strh.w	ip, [r5], #2
 80135e0:	69a3      	ldr	r3, [r4, #24]
 80135e2:	45ab      	cmp	fp, r5
 80135e4:	f103 0302 	add.w	r3, r3, #2
 80135e8:	61a3      	str	r3, [r4, #24]
 80135ea:	d8c2      	bhi.n	8013572 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x252>
 80135ec:	9b02      	ldr	r3, [sp, #8]
 80135ee:	61a3      	str	r3, [r4, #24]
 80135f0:	9b01      	ldr	r3, [sp, #4]
 80135f2:	f9b4 a026 	ldrsh.w	sl, [r4, #38]	; 0x26
 80135f6:	42ab      	cmp	r3, r5
 80135f8:	d8b4      	bhi.n	8013564 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x244>
 80135fa:	e775      	b.n	80134e8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 80135fc:	f8df 9234 	ldr.w	r9, [pc, #564]	; 8013834 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x514>
 8013600:	45b2      	cmp	sl, r6
 8013602:	bf28      	it	cs
 8013604:	46b2      	movcs	sl, r6
 8013606:	eb05 0b4a 	add.w	fp, r5, sl, lsl #1
 801360a:	eba6 060a 	sub.w	r6, r6, sl
 801360e:	f817 eb01 	ldrb.w	lr, [r7], #1
 8013612:	69a3      	ldr	r3, [r4, #24]
 8013614:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8013618:	881b      	ldrh	r3, [r3, #0]
 801361a:	d10e      	bne.n	801363a <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x31a>
 801361c:	802b      	strh	r3, [r5, #0]
 801361e:	69a3      	ldr	r3, [r4, #24]
 8013620:	3502      	adds	r5, #2
 8013622:	3302      	adds	r3, #2
 8013624:	45ab      	cmp	fp, r5
 8013626:	61a3      	str	r3, [r4, #24]
 8013628:	d8f1      	bhi.n	801360e <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2ee>
 801362a:	9b02      	ldr	r3, [sp, #8]
 801362c:	61a3      	str	r3, [r4, #24]
 801362e:	9b01      	ldr	r3, [sp, #4]
 8013630:	f9b4 a026 	ldrsh.w	sl, [r4, #38]	; 0x26
 8013634:	42ab      	cmp	r3, r5
 8013636:	d8e3      	bhi.n	8013600 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2e0>
 8013638:	e756      	b.n	80134e8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 801363a:	f8b5 8000 	ldrh.w	r8, [r5]
 801363e:	ea6f 010e 	mvn.w	r1, lr
 8013642:	b2c9      	uxtb	r1, r1
 8013644:	ea08 0209 	and.w	r2, r8, r9
 8013648:	434a      	muls	r2, r1
 801364a:	f408 6afc 	and.w	sl, r8, #2016	; 0x7e0
 801364e:	ea03 0009 	and.w	r0, r3, r9
 8013652:	fb0e 2000 	mla	r0, lr, r0, r2
 8013656:	fb01 fa0a 	mul.w	sl, r1, sl
 801365a:	f403 62fc 	and.w	r2, r3, #2016	; 0x7e0
 801365e:	fb90 f0fc 	sdiv	r0, r0, ip
 8013662:	fb0e a202 	mla	r2, lr, r2, sl
 8013666:	ea00 0009 	and.w	r0, r0, r9
 801366a:	fb92 f2fc 	sdiv	r2, r2, ip
 801366e:	f008 081f 	and.w	r8, r8, #31
 8013672:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013676:	4310      	orrs	r0, r2
 8013678:	fb01 f108 	mul.w	r1, r1, r8
 801367c:	f003 021f 	and.w	r2, r3, #31
 8013680:	fb0e 1202 	mla	r2, lr, r2, r1
 8013684:	fb92 f2fc 	sdiv	r2, r2, ip
 8013688:	f002 021f 	and.w	r2, r2, #31
 801368c:	4310      	orrs	r0, r2
 801368e:	8028      	strh	r0, [r5, #0]
 8013690:	e7c5      	b.n	801361e <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2fe>
 8013692:	6963      	ldr	r3, [r4, #20]
 8013694:	2b00      	cmp	r3, #0
 8013696:	f43f af27 	beq.w	80134e8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 801369a:	f104 0020 	add.w	r0, r4, #32
 801369e:	f009 f941 	bl	801c924 <_ZNK8touchgfx6Bitmap7getDataEv>
 80136a2:	f9b4 2026 	ldrsh.w	r2, [r4, #38]	; 0x26
 80136a6:	6923      	ldr	r3, [r4, #16]
 80136a8:	f894 e008 	ldrb.w	lr, [r4, #8]
 80136ac:	4353      	muls	r3, r2
 80136ae:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80136b2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80136b6:	9302      	str	r3, [sp, #8]
 80136b8:	d05a      	beq.n	8013770 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x450>
 80136ba:	f8df 8178 	ldr.w	r8, [pc, #376]	; 8013834 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x514>
 80136be:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80136c2:	45b2      	cmp	sl, r6
 80136c4:	4653      	mov	r3, sl
 80136c6:	bf28      	it	cs
 80136c8:	4633      	movcs	r3, r6
 80136ca:	eb05 0a43 	add.w	sl, r5, r3, lsl #1
 80136ce:	1af6      	subs	r6, r6, r3
 80136d0:	6963      	ldr	r3, [r4, #20]
 80136d2:	7a21      	ldrb	r1, [r4, #8]
 80136d4:	681a      	ldr	r2, [r3, #0]
 80136d6:	0e13      	lsrs	r3, r2, #24
 80136d8:	4359      	muls	r1, r3
 80136da:	1c4b      	adds	r3, r1, #1
 80136dc:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80136e0:	1219      	asrs	r1, r3, #8
 80136e2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80136e6:	fb13 f301 	smulbb	r3, r3, r1
 80136ea:	b29b      	uxth	r3, r3
 80136ec:	1c59      	adds	r1, r3, #1
 80136ee:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80136f2:	1209      	asrs	r1, r1, #8
 80136f4:	d02e      	beq.n	8013754 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x434>
 80136f6:	f8b5 e000 	ldrh.w	lr, [r5]
 80136fa:	ea6f 0c01 	mvn.w	ip, r1
 80136fe:	fa5f fc8c 	uxtb.w	ip, ip
 8013702:	ea0e 0308 	and.w	r3, lr, r8
 8013706:	ea08 2012 	and.w	r0, r8, r2, lsr #8
 801370a:	fb0c f303 	mul.w	r3, ip, r3
 801370e:	b280      	uxth	r0, r0
 8013710:	fb01 3000 	mla	r0, r1, r0, r3
 8013714:	f40e 6bfc 	and.w	fp, lr, #2016	; 0x7e0
 8013718:	0953      	lsrs	r3, r2, #5
 801371a:	fb0c fb0b 	mul.w	fp, ip, fp
 801371e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013722:	fb90 f0f9 	sdiv	r0, r0, r9
 8013726:	fb01 b303 	mla	r3, r1, r3, fp
 801372a:	ea00 0008 	and.w	r0, r0, r8
 801372e:	fb93 f3f9 	sdiv	r3, r3, r9
 8013732:	f00e 0e1f 	and.w	lr, lr, #31
 8013736:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801373a:	4318      	orrs	r0, r3
 801373c:	fb0c fc0e 	mul.w	ip, ip, lr
 8013740:	f3c2 03c4 	ubfx	r3, r2, #3, #5
 8013744:	fb01 c303 	mla	r3, r1, r3, ip
 8013748:	fb93 f3f9 	sdiv	r3, r3, r9
 801374c:	f003 031f 	and.w	r3, r3, #31
 8013750:	4318      	orrs	r0, r3
 8013752:	8028      	strh	r0, [r5, #0]
 8013754:	6963      	ldr	r3, [r4, #20]
 8013756:	3502      	adds	r5, #2
 8013758:	3304      	adds	r3, #4
 801375a:	45aa      	cmp	sl, r5
 801375c:	6163      	str	r3, [r4, #20]
 801375e:	d8b7      	bhi.n	80136d0 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x3b0>
 8013760:	9b02      	ldr	r3, [sp, #8]
 8013762:	6163      	str	r3, [r4, #20]
 8013764:	9b01      	ldr	r3, [sp, #4]
 8013766:	f9b4 a026 	ldrsh.w	sl, [r4, #38]	; 0x26
 801376a:	42ab      	cmp	r3, r5
 801376c:	d8a9      	bhi.n	80136c2 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x3a2>
 801376e:	e6bb      	b.n	80134e8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 8013770:	f8df 90c0 	ldr.w	r9, [pc, #192]	; 8013834 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x514>
 8013774:	45b2      	cmp	sl, r6
 8013776:	4653      	mov	r3, sl
 8013778:	bf28      	it	cs
 801377a:	4633      	movcs	r3, r6
 801377c:	eb05 0a43 	add.w	sl, r5, r3, lsl #1
 8013780:	1af6      	subs	r6, r6, r3
 8013782:	6963      	ldr	r3, [r4, #20]
 8013784:	f817 2b01 	ldrb.w	r2, [r7], #1
 8013788:	681b      	ldr	r3, [r3, #0]
 801378a:	0e19      	lsrs	r1, r3, #24
 801378c:	434a      	muls	r2, r1
 801378e:	1c51      	adds	r1, r2, #1
 8013790:	eb01 2122 	add.w	r1, r1, r2, asr #8
 8013794:	1209      	asrs	r1, r1, #8
 8013796:	29ff      	cmp	r1, #255	; 0xff
 8013798:	d117      	bne.n	80137ca <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x4aa>
 801379a:	0959      	lsrs	r1, r3, #5
 801379c:	ea09 2213 	and.w	r2, r9, r3, lsr #8
 80137a0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80137a4:	430a      	orrs	r2, r1
 80137a6:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80137aa:	4313      	orrs	r3, r2
 80137ac:	802b      	strh	r3, [r5, #0]
 80137ae:	6963      	ldr	r3, [r4, #20]
 80137b0:	3502      	adds	r5, #2
 80137b2:	3304      	adds	r3, #4
 80137b4:	45aa      	cmp	sl, r5
 80137b6:	6163      	str	r3, [r4, #20]
 80137b8:	d8e3      	bhi.n	8013782 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x462>
 80137ba:	9b02      	ldr	r3, [sp, #8]
 80137bc:	6163      	str	r3, [r4, #20]
 80137be:	9b01      	ldr	r3, [sp, #4]
 80137c0:	f9b4 a026 	ldrsh.w	sl, [r4, #38]	; 0x26
 80137c4:	42ab      	cmp	r3, r5
 80137c6:	d8d5      	bhi.n	8013774 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x454>
 80137c8:	e68e      	b.n	80134e8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c8>
 80137ca:	b2c8      	uxtb	r0, r1
 80137cc:	2900      	cmp	r1, #0
 80137ce:	d0ee      	beq.n	80137ae <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x48e>
 80137d0:	f8b5 8000 	ldrh.w	r8, [r5]
 80137d4:	43c0      	mvns	r0, r0
 80137d6:	b2c0      	uxtb	r0, r0
 80137d8:	ea08 0209 	and.w	r2, r8, r9
 80137dc:	ea09 2c13 	and.w	ip, r9, r3, lsr #8
 80137e0:	4342      	muls	r2, r0
 80137e2:	fa1f fc8c 	uxth.w	ip, ip
 80137e6:	fb01 2c0c 	mla	ip, r1, ip, r2
 80137ea:	f408 6bfc 	and.w	fp, r8, #2016	; 0x7e0
 80137ee:	095a      	lsrs	r2, r3, #5
 80137f0:	fb00 fb0b 	mul.w	fp, r0, fp
 80137f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80137f8:	fb9c fcfe 	sdiv	ip, ip, lr
 80137fc:	fb01 b202 	mla	r2, r1, r2, fp
 8013800:	ea0c 0c09 	and.w	ip, ip, r9
 8013804:	fb92 f2fe 	sdiv	r2, r2, lr
 8013808:	f008 081f 	and.w	r8, r8, #31
 801380c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013810:	ea4c 0c02 	orr.w	ip, ip, r2
 8013814:	fb00 f008 	mul.w	r0, r0, r8
 8013818:	f3c3 02c4 	ubfx	r2, r3, #3, #5
 801381c:	fb01 0202 	mla	r2, r1, r2, r0
 8013820:	fb92 f2fe 	sdiv	r2, r2, lr
 8013824:	f002 021f 	and.w	r2, r2, #31
 8013828:	ea4c 0c02 	orr.w	ip, ip, r2
 801382c:	f8a5 c000 	strh.w	ip, [r5]
 8013830:	e7bd      	b.n	80137ae <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x48e>
 8013832:	bf00      	nop
 8013834:	fffff800 	.word	0xfffff800

08013838 <_ZN8touchgfx19PainterRGB565BitmapD0Ev>:
 8013838:	b510      	push	{r4, lr}
 801383a:	2130      	movs	r1, #48	; 0x30
 801383c:	4604      	mov	r4, r0
 801383e:	f017 fc8c 	bl	802b15a <_ZdlPvj>
 8013842:	4620      	mov	r0, r4
 8013844:	bd10      	pop	{r4, pc}
	...

08013848 <_ZNK8touchgfx6Bitmap5getIdEv>:
 8013848:	b508      	push	{r3, lr}
 801384a:	4b05      	ldr	r3, [pc, #20]	; (8013860 <_ZNK8touchgfx6Bitmap5getIdEv+0x18>)
 801384c:	681b      	ldr	r3, [r3, #0]
 801384e:	b92b      	cbnz	r3, 801385c <_ZNK8touchgfx6Bitmap5getIdEv+0x14>
 8013850:	4b04      	ldr	r3, [pc, #16]	; (8013864 <_ZNK8touchgfx6Bitmap5getIdEv+0x1c>)
 8013852:	4a05      	ldr	r2, [pc, #20]	; (8013868 <_ZNK8touchgfx6Bitmap5getIdEv+0x20>)
 8013854:	4805      	ldr	r0, [pc, #20]	; (801386c <_ZNK8touchgfx6Bitmap5getIdEv+0x24>)
 8013856:	2187      	movs	r1, #135	; 0x87
 8013858:	f018 fbcc 	bl	802bff4 <__assert_func>
 801385c:	8800      	ldrh	r0, [r0, #0]
 801385e:	bd08      	pop	{r3, pc}
 8013860:	2001e268 	.word	0x2001e268
 8013864:	08033c04 	.word	0x08033c04
 8013868:	08033cd7 	.word	0x08033cd7
 801386c:	08033c40 	.word	0x08033c40

08013870 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv>:
 8013870:	b538      	push	{r3, r4, r5, lr}
 8013872:	2300      	movs	r3, #0
 8013874:	f100 0520 	add.w	r5, r0, #32
 8013878:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801387c:	61c3      	str	r3, [r0, #28]
 801387e:	4604      	mov	r4, r0
 8013880:	4628      	mov	r0, r5
 8013882:	f7ff ffe1 	bl	8013848 <_ZNK8touchgfx6Bitmap5getIdEv>
 8013886:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801388a:	4298      	cmp	r0, r3
 801388c:	d101      	bne.n	8013892 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x22>
 801388e:	2000      	movs	r0, #0
 8013890:	bd38      	pop	{r3, r4, r5, pc}
 8013892:	f894 202e 	ldrb.w	r2, [r4, #46]	; 0x2e
 8013896:	68e1      	ldr	r1, [r4, #12]
 8013898:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
 801389c:	b362      	cbz	r2, 80138f8 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x88>
 801389e:	fb91 f2f3 	sdiv	r2, r1, r3
 80138a2:	fb03 1212 	mls	r2, r3, r2, r1
 80138a6:	441a      	add	r2, r3
 80138a8:	fb92 f1f3 	sdiv	r1, r2, r3
 80138ac:	fb03 2311 	mls	r3, r3, r1, r2
 80138b0:	f9b4 2028 	ldrsh.w	r2, [r4, #40]	; 0x28
 80138b4:	6921      	ldr	r1, [r4, #16]
 80138b6:	60e3      	str	r3, [r4, #12]
 80138b8:	fb91 f3f2 	sdiv	r3, r1, r2
 80138bc:	fb02 1313 	mls	r3, r2, r3, r1
 80138c0:	4413      	add	r3, r2
 80138c2:	fb93 f1f2 	sdiv	r1, r3, r2
 80138c6:	fb02 3311 	mls	r3, r2, r1, r3
 80138ca:	6123      	str	r3, [r4, #16]
 80138cc:	4628      	mov	r0, r5
 80138ce:	f009 f8b3 	bl	801ca38 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80138d2:	2802      	cmp	r0, #2
 80138d4:	4628      	mov	r0, r5
 80138d6:	d119      	bne.n	801390c <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x9c>
 80138d8:	f009 f824 	bl	801c924 <_ZNK8touchgfx6Bitmap7getDataEv>
 80138dc:	6160      	str	r0, [r4, #20]
 80138de:	2800      	cmp	r0, #0
 80138e0:	d0d5      	beq.n	801388e <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 80138e2:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 80138e6:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
 80138ea:	fb01 2303 	mla	r3, r1, r3, r2
 80138ee:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80138f2:	6160      	str	r0, [r4, #20]
 80138f4:	2001      	movs	r0, #1
 80138f6:	e7cb      	b.n	8013890 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x20>
 80138f8:	4299      	cmp	r1, r3
 80138fa:	dac8      	bge.n	801388e <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 80138fc:	6923      	ldr	r3, [r4, #16]
 80138fe:	2b00      	cmp	r3, #0
 8013900:	dbc5      	blt.n	801388e <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 8013902:	f9b4 2028 	ldrsh.w	r2, [r4, #40]	; 0x28
 8013906:	4293      	cmp	r3, r2
 8013908:	dbe0      	blt.n	80138cc <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x5c>
 801390a:	e7c0      	b.n	801388e <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 801390c:	f009 f894 	bl	801ca38 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013910:	2800      	cmp	r0, #0
 8013912:	d1bc      	bne.n	801388e <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 8013914:	4628      	mov	r0, r5
 8013916:	f009 f805 	bl	801c924 <_ZNK8touchgfx6Bitmap7getDataEv>
 801391a:	61a0      	str	r0, [r4, #24]
 801391c:	2800      	cmp	r0, #0
 801391e:	d0b6      	beq.n	801388e <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 8013920:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 8013924:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
 8013928:	fb01 2303 	mla	r3, r1, r3, r2
 801392c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013930:	61a0      	str	r0, [r4, #24]
 8013932:	4628      	mov	r0, r5
 8013934:	f009 f828 	bl	801c988 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013938:	61e0      	str	r0, [r4, #28]
 801393a:	2800      	cmp	r0, #0
 801393c:	d0da      	beq.n	80138f4 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x84>
 801393e:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 8013942:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
 8013946:	fb01 2303 	mla	r3, r1, r3, r2
 801394a:	4418      	add	r0, r3
 801394c:	61e0      	str	r0, [r4, #28]
 801394e:	e7d1      	b.n	80138f4 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x84>

08013950 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>:
 8013950:	b570      	push	{r4, r5, r6, lr}
 8013952:	4604      	mov	r4, r0
 8013954:	880b      	ldrh	r3, [r1, #0]
 8013956:	f824 3f20 	strh.w	r3, [r4, #32]!
 801395a:	4605      	mov	r5, r0
 801395c:	4620      	mov	r0, r4
 801395e:	f7ff ff73 	bl	8013848 <_ZNK8touchgfx6Bitmap5getIdEv>
 8013962:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013966:	4298      	cmp	r0, r3
 8013968:	d00e      	beq.n	8013988 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x38>
 801396a:	4620      	mov	r0, r4
 801396c:	f009 f864 	bl	801ca38 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013970:	b150      	cbz	r0, 8013988 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x38>
 8013972:	4620      	mov	r0, r4
 8013974:	f009 f860 	bl	801ca38 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013978:	2802      	cmp	r0, #2
 801397a:	d005      	beq.n	8013988 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x38>
 801397c:	4b0b      	ldr	r3, [pc, #44]	; (80139ac <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x5c>)
 801397e:	4a0c      	ldr	r2, [pc, #48]	; (80139b0 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x60>)
 8013980:	480c      	ldr	r0, [pc, #48]	; (80139b4 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x64>)
 8013982:	2119      	movs	r1, #25
 8013984:	f018 fb36 	bl	802bff4 <__assert_func>
 8013988:	4620      	mov	r0, r4
 801398a:	f008 feaf 	bl	801c6ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 801398e:	4606      	mov	r6, r0
 8013990:	4620      	mov	r0, r4
 8013992:	f008 feef 	bl	801c774 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013996:	2300      	movs	r3, #0
 8013998:	8528      	strh	r0, [r5, #40]	; 0x28
 801399a:	846b      	strh	r3, [r5, #34]	; 0x22
 801399c:	84ab      	strh	r3, [r5, #36]	; 0x24
 801399e:	84ee      	strh	r6, [r5, #38]	; 0x26
 80139a0:	f105 0022 	add.w	r0, r5, #34	; 0x22
 80139a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80139a8:	f005 bb34 	b.w	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80139ac:	08033b0a 	.word	0x08033b0a
 80139b0:	08033c90 	.word	0x08033c90
 80139b4:	08033bc3 	.word	0x08033bc3

080139b8 <_ZN8touchgfx21AbstractPainterRGB56510renderInitEv>:
 80139b8:	2001      	movs	r0, #1
 80139ba:	4770      	bx	lr

080139bc <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh>:
 80139bc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139c0:	4413      	add	r3, r2
 80139c2:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 80139c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80139c8:	4d43      	ldr	r5, [pc, #268]	; (8013ad8 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x11c>)
 80139ca:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
 80139ce:	eb01 0e43 	add.w	lr, r1, r3, lsl #1
 80139d2:	6943      	ldr	r3, [r0, #20]
 80139d4:	095c      	lsrs	r4, r3, #5
 80139d6:	ea05 2213 	and.w	r2, r5, r3, lsr #8
 80139da:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80139de:	4322      	orrs	r2, r4
 80139e0:	7a04      	ldrb	r4, [r0, #8]
 80139e2:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80139e6:	431a      	orrs	r2, r3
 80139e8:	2cff      	cmp	r4, #255	; 0xff
 80139ea:	b292      	uxth	r2, r2
 80139ec:	d017      	beq.n	8013a1e <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x62>
 80139ee:	ea02 0305 	and.w	r3, r2, r5
 80139f2:	9301      	str	r3, [sp, #4]
 80139f4:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80139f8:	f402 6afc 	and.w	sl, r2, #2016	; 0x7e0
 80139fc:	f002 0b1f 	and.w	fp, r2, #31
 8013a00:	7a04      	ldrb	r4, [r0, #8]
 8013a02:	f818 3b01 	ldrb.w	r3, [r8], #1
 8013a06:	4363      	muls	r3, r4
 8013a08:	1c5c      	adds	r4, r3, #1
 8013a0a:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 8013a0e:	121b      	asrs	r3, r3, #8
 8013a10:	2bff      	cmp	r3, #255	; 0xff
 8013a12:	d13e      	bne.n	8013a92 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0xd6>
 8013a14:	800a      	strh	r2, [r1, #0]
 8013a16:	3102      	adds	r1, #2
 8013a18:	458e      	cmp	lr, r1
 8013a1a:	d8f1      	bhi.n	8013a00 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x44>
 8013a1c:	e00d      	b.n	8013a3a <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x7e>
 8013a1e:	ea02 0605 	and.w	r6, r2, r5
 8013a22:	f402 67fc 	and.w	r7, r2, #2016	; 0x7e0
 8013a26:	f002 0c1f 	and.w	ip, r2, #31
 8013a2a:	f818 0b01 	ldrb.w	r0, [r8], #1
 8013a2e:	28ff      	cmp	r0, #255	; 0xff
 8013a30:	d106      	bne.n	8013a40 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x84>
 8013a32:	800a      	strh	r2, [r1, #0]
 8013a34:	3102      	adds	r1, #2
 8013a36:	458e      	cmp	lr, r1
 8013a38:	d8f7      	bhi.n	8013a2a <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x6e>
 8013a3a:	b003      	add	sp, #12
 8013a3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a40:	f8b1 a000 	ldrh.w	sl, [r1]
 8013a44:	ea6f 0900 	mvn.w	r9, r0
 8013a48:	fa5f f989 	uxtb.w	r9, r9
 8013a4c:	ea0a 0305 	and.w	r3, sl, r5
 8013a50:	fb09 f303 	mul.w	r3, r9, r3
 8013a54:	fb00 3306 	mla	r3, r0, r6, r3
 8013a58:	fb93 f3f4 	sdiv	r3, r3, r4
 8013a5c:	ea03 0b05 	and.w	fp, r3, r5
 8013a60:	f40a 63fc 	and.w	r3, sl, #2016	; 0x7e0
 8013a64:	fb09 f303 	mul.w	r3, r9, r3
 8013a68:	f00a 0a1f 	and.w	sl, sl, #31
 8013a6c:	fb00 3307 	mla	r3, r0, r7, r3
 8013a70:	fb09 f90a 	mul.w	r9, r9, sl
 8013a74:	fb93 f3f4 	sdiv	r3, r3, r4
 8013a78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013a7c:	ea4b 0303 	orr.w	r3, fp, r3
 8013a80:	fb00 900c 	mla	r0, r0, ip, r9
 8013a84:	fb90 f0f4 	sdiv	r0, r0, r4
 8013a88:	f000 001f 	and.w	r0, r0, #31
 8013a8c:	4303      	orrs	r3, r0
 8013a8e:	800b      	strh	r3, [r1, #0]
 8013a90:	e7d0      	b.n	8013a34 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x78>
 8013a92:	f8b1 c000 	ldrh.w	ip, [r1]
 8013a96:	9c01      	ldr	r4, [sp, #4]
 8013a98:	43df      	mvns	r7, r3
 8013a9a:	b2ff      	uxtb	r7, r7
 8013a9c:	ea0c 0605 	and.w	r6, ip, r5
 8013aa0:	437e      	muls	r6, r7
 8013aa2:	fb03 6604 	mla	r6, r3, r4, r6
 8013aa6:	f40c 64fc 	and.w	r4, ip, #2016	; 0x7e0
 8013aaa:	437c      	muls	r4, r7
 8013aac:	fb96 f6f9 	sdiv	r6, r6, r9
 8013ab0:	fb03 440a 	mla	r4, r3, sl, r4
 8013ab4:	402e      	ands	r6, r5
 8013ab6:	fb94 f4f9 	sdiv	r4, r4, r9
 8013aba:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8013abe:	4334      	orrs	r4, r6
 8013ac0:	f00c 061f 	and.w	r6, ip, #31
 8013ac4:	437e      	muls	r6, r7
 8013ac6:	fb03 660b 	mla	r6, r3, fp, r6
 8013aca:	fb96 f6f9 	sdiv	r6, r6, r9
 8013ace:	f006 061f 	and.w	r6, r6, #31
 8013ad2:	4334      	orrs	r4, r6
 8013ad4:	800c      	strh	r4, [r1, #0]
 8013ad6:	e79e      	b.n	8013a16 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x5a>
 8013ad8:	fffff800 	.word	0xfffff800

08013adc <_ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_>:
 8013adc:	b510      	push	{r4, lr}
 8013ade:	8ac4      	ldrh	r4, [r0, #22]
 8013ae0:	700c      	strb	r4, [r1, #0]
 8013ae2:	6941      	ldr	r1, [r0, #20]
 8013ae4:	0a09      	lsrs	r1, r1, #8
 8013ae6:	7011      	strb	r1, [r2, #0]
 8013ae8:	6942      	ldr	r2, [r0, #20]
 8013aea:	701a      	strb	r2, [r3, #0]
 8013aec:	9b02      	ldr	r3, [sp, #8]
 8013aee:	22ff      	movs	r2, #255	; 0xff
 8013af0:	701a      	strb	r2, [r3, #0]
 8013af2:	2001      	movs	r0, #1
 8013af4:	bd10      	pop	{r4, pc}

08013af6 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8013af6:	4770      	bx	lr

08013af8 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8013af8:	b510      	push	{r4, lr}
 8013afa:	2118      	movs	r1, #24
 8013afc:	4604      	mov	r4, r0
 8013afe:	f017 fb2c 	bl	802b15a <_ZdlPvj>
 8013b02:	4620      	mov	r0, r4
 8013b04:	bd10      	pop	{r4, pc}

08013b06 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh>:
 8013b06:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013b0a:	4616      	mov	r6, r2
 8013b0c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8013b10:	b085      	sub	sp, #20
 8013b12:	4432      	add	r2, r6
 8013b14:	60c2      	str	r2, [r0, #12]
 8013b16:	4698      	mov	r8, r3
 8013b18:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8013b1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013b1e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8013b20:	441a      	add	r2, r3
 8013b22:	6803      	ldr	r3, [r0, #0]
 8013b24:	6102      	str	r2, [r0, #16]
 8013b26:	68db      	ldr	r3, [r3, #12]
 8013b28:	4604      	mov	r4, r0
 8013b2a:	460d      	mov	r5, r1
 8013b2c:	4798      	blx	r3
 8013b2e:	2800      	cmp	r0, #0
 8013b30:	d03b      	beq.n	8013baa <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xa4>
 8013b32:	4446      	add	r6, r8
 8013b34:	eb05 0546 	add.w	r5, r5, r6, lsl #1
 8013b38:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8013b3a:	eb05 0646 	add.w	r6, r5, r6, lsl #1
 8013b3e:	6823      	ldr	r3, [r4, #0]
 8013b40:	f10d 020f 	add.w	r2, sp, #15
 8013b44:	9200      	str	r2, [sp, #0]
 8013b46:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8013b4a:	f10d 020d 	add.w	r2, sp, #13
 8013b4e:	f10d 030e 	add.w	r3, sp, #14
 8013b52:	a903      	add	r1, sp, #12
 8013b54:	4620      	mov	r0, r4
 8013b56:	47c0      	blx	r8
 8013b58:	b1f8      	cbz	r0, 8013b9a <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x94>
 8013b5a:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8013b5e:	7a20      	ldrb	r0, [r4, #8]
 8013b60:	f89d 200c 	ldrb.w	r2, [sp, #12]
 8013b64:	f89d c00e 	ldrb.w	ip, [sp, #14]
 8013b68:	4358      	muls	r0, r3
 8013b6a:	1c43      	adds	r3, r0, #1
 8013b6c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8013b70:	7838      	ldrb	r0, [r7, #0]
 8013b72:	121b      	asrs	r3, r3, #8
 8013b74:	fb10 f003 	smulbb	r0, r0, r3
 8013b78:	b283      	uxth	r3, r0
 8013b7a:	1c58      	adds	r0, r3, #1
 8013b7c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8013b80:	1200      	asrs	r0, r0, #8
 8013b82:	6823      	ldr	r3, [r4, #0]
 8013b84:	28ff      	cmp	r0, #255	; 0xff
 8013b86:	f8d3 8014 	ldr.w	r8, [r3, #20]
 8013b8a:	f89d 300d 	ldrb.w	r3, [sp, #13]
 8013b8e:	d10f      	bne.n	8013bb0 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xaa>
 8013b90:	f8cd c000 	str.w	ip, [sp]
 8013b94:	4629      	mov	r1, r5
 8013b96:	4620      	mov	r0, r4
 8013b98:	47c0      	blx	r8
 8013b9a:	68e3      	ldr	r3, [r4, #12]
 8013b9c:	3502      	adds	r5, #2
 8013b9e:	3301      	adds	r3, #1
 8013ba0:	42ae      	cmp	r6, r5
 8013ba2:	f107 0701 	add.w	r7, r7, #1
 8013ba6:	60e3      	str	r3, [r4, #12]
 8013ba8:	d8c9      	bhi.n	8013b3e <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x38>
 8013baa:	b005      	add	sp, #20
 8013bac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013bb0:	8829      	ldrh	r1, [r5, #0]
 8013bb2:	fa1f fe80 	uxth.w	lr, r0
 8013bb6:	ea4f 2921 	mov.w	r9, r1, asr #8
 8013bba:	43c0      	mvns	r0, r0
 8013bbc:	b2c0      	uxtb	r0, r0
 8013bbe:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8013bc2:	fb12 f20e 	smulbb	r2, r2, lr
 8013bc6:	fb09 2200 	mla	r2, r9, r0, r2
 8013bca:	ea4f 09e1 	mov.w	r9, r1, asr #3
 8013bce:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013bd2:	fb13 f30e 	smulbb	r3, r3, lr
 8013bd6:	fb09 3300 	mla	r3, r9, r0, r3
 8013bda:	00c9      	lsls	r1, r1, #3
 8013bdc:	b29b      	uxth	r3, r3
 8013bde:	b2c9      	uxtb	r1, r1
 8013be0:	fb1c fc0e 	smulbb	ip, ip, lr
 8013be4:	b292      	uxth	r2, r2
 8013be6:	fb01 c000 	mla	r0, r1, r0, ip
 8013bea:	1c59      	adds	r1, r3, #1
 8013bec:	b280      	uxth	r0, r0
 8013bee:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8013bf2:	1c51      	adds	r1, r2, #1
 8013bf4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8013bf8:	1c41      	adds	r1, r0, #1
 8013bfa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8013bfe:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8013c02:	9000      	str	r0, [sp, #0]
 8013c04:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013c08:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8013c0c:	e7c2      	b.n	8013b94 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x8e>
	...

08013c10 <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh>:
 8013c10:	f89d 0000 	ldrb.w	r0, [sp]
 8013c14:	00db      	lsls	r3, r3, #3
 8013c16:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013c1a:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 8013c1e:	4803      	ldr	r0, [pc, #12]	; (8013c2c <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh+0x1c>)
 8013c20:	ea00 2202 	and.w	r2, r0, r2, lsl #8
 8013c24:	4313      	orrs	r3, r2
 8013c26:	800b      	strh	r3, [r1, #0]
 8013c28:	4770      	bx	lr
 8013c2a:	bf00      	nop
 8013c2c:	fffff800 	.word	0xfffff800

08013c30 <_ZN8touchgfx21AbstractPainterRGB565D1Ev>:
 8013c30:	4770      	bx	lr

08013c32 <_ZN8touchgfx21AbstractPainterRGB565D0Ev>:
 8013c32:	b510      	push	{r4, lr}
 8013c34:	2114      	movs	r1, #20
 8013c36:	4604      	mov	r4, r0
 8013c38:	f017 fa8f 	bl	802b15a <_ZdlPvj>
 8013c3c:	4620      	mov	r0, r4
 8013c3e:	bd10      	pop	{r4, pc}

08013c40 <_ZN8touchgfx6CircleD1Ev>:
 8013c40:	4770      	bx	lr

08013c42 <_ZN8touchgfx6CircleD0Ev>:
 8013c42:	b510      	push	{r4, lr}
 8013c44:	214c      	movs	r1, #76	; 0x4c
 8013c46:	4604      	mov	r4, r0
 8013c48:	f017 fa87 	bl	802b15a <_ZdlPvj>
 8013c4c:	4620      	mov	r0, r4
 8013c4e:	bd10      	pop	{r4, pc}

08013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8013c50:	b507      	push	{r0, r1, r2, lr}
 8013c52:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8013c56:	ab01      	add	r3, sp, #4
 8013c58:	6809      	ldr	r1, [r1, #0]
 8013c5a:	6800      	ldr	r0, [r0, #0]
 8013c5c:	f006 fd3a 	bl	801a6d4 <_ZN8touchgfx6muldivElllRl>
 8013c60:	b003      	add	sp, #12
 8013c62:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08013c68 <_ZN8touchgfx7CWRUtil4sineEi>:
 8013c68:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8013c6c:	fb90 f3f2 	sdiv	r3, r0, r2
 8013c70:	fb03 0312 	mls	r3, r3, r2, r0
 8013c74:	4413      	add	r3, r2
 8013c76:	fb93 f0f2 	sdiv	r0, r3, r2
 8013c7a:	fb02 3010 	mls	r0, r2, r0, r3
 8013c7e:	285a      	cmp	r0, #90	; 0x5a
 8013c80:	4b09      	ldr	r3, [pc, #36]	; (8013ca8 <_ZN8touchgfx7CWRUtil4sineEi+0x40>)
 8013c82:	dc02      	bgt.n	8013c8a <_ZN8touchgfx7CWRUtil4sineEi+0x22>
 8013c84:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013c88:	4770      	bx	lr
 8013c8a:	28b4      	cmp	r0, #180	; 0xb4
 8013c8c:	dc02      	bgt.n	8013c94 <_ZN8touchgfx7CWRUtil4sineEi+0x2c>
 8013c8e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8013c92:	e7f7      	b.n	8013c84 <_ZN8touchgfx7CWRUtil4sineEi+0x1c>
 8013c94:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8013c98:	bfd4      	ite	le
 8013c9a:	38b4      	suble	r0, #180	; 0xb4
 8013c9c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8013ca0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013ca4:	4240      	negs	r0, r0
 8013ca6:	4770      	bx	lr
 8013ca8:	08033d4c 	.word	0x08033d4c

08013cac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8013cac:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8013cb0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013cb2:	fb90 f3f2 	sdiv	r3, r0, r2
 8013cb6:	fb03 0012 	mls	r0, r3, r2, r0
 8013cba:	4410      	add	r0, r2
 8013cbc:	fb90 f4f2 	sdiv	r4, r0, r2
 8013cc0:	fb02 0414 	mls	r4, r2, r4, r0
 8013cc4:	f004 061f 	and.w	r6, r4, #31
 8013cc8:	1164      	asrs	r4, r4, #5
 8013cca:	4620      	mov	r0, r4
 8013ccc:	f7ff ffcc 	bl	8013c68 <_ZN8touchgfx7CWRUtil4sineEi>
 8013cd0:	4605      	mov	r5, r0
 8013cd2:	b90e      	cbnz	r6, 8013cd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x2c>
 8013cd4:	b002      	add	sp, #8
 8013cd6:	bd70      	pop	{r4, r5, r6, pc}
 8013cd8:	1c60      	adds	r0, r4, #1
 8013cda:	f7ff ffc5 	bl	8013c68 <_ZN8touchgfx7CWRUtil4sineEi>
 8013cde:	ab01      	add	r3, sp, #4
 8013ce0:	2220      	movs	r2, #32
 8013ce2:	4631      	mov	r1, r6
 8013ce4:	1b40      	subs	r0, r0, r5
 8013ce6:	f006 fcf5 	bl	801a6d4 <_ZN8touchgfx6muldivElllRl>
 8013cea:	4428      	add	r0, r5
 8013cec:	e7f2      	b.n	8013cd4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>

08013cee <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8013cee:	b508      	push	{r3, lr}
 8013cf0:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8013cf4:	f7ff ffda 	bl	8013cac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013cf8:	bd08      	pop	{r3, pc}
	...

08013cfc <_ZN8touchgfx6CircleC1Ev>:
 8013cfc:	b510      	push	{r4, lr}
 8013cfe:	4604      	mov	r4, r0
 8013d00:	f000 fd22 	bl	8014748 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8013d04:	4b08      	ldr	r3, [pc, #32]	; (8013d28 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8013d06:	6023      	str	r3, [r4, #0]
 8013d08:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8013d0c:	2300      	movs	r3, #0
 8013d0e:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
 8013d12:	f24b 4205 	movw	r2, #46085	; 0xb405
 8013d16:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
 8013d1a:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 8013d1e:	f8a4 2048 	strh.w	r2, [r4, #72]	; 0x48
 8013d22:	60a3      	str	r3, [r4, #8]
 8013d24:	4620      	mov	r0, r4
 8013d26:	bd10      	pop	{r4, pc}
 8013d28:	08033e0c 	.word	0x08033e0c

08013d2c <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 8013d2c:	29b4      	cmp	r1, #180	; 0xb4
 8013d2e:	bfa8      	it	ge
 8013d30:	21b4      	movge	r1, #180	; 0xb4
 8013d32:	2901      	cmp	r1, #1
 8013d34:	bfb8      	it	lt
 8013d36:	2101      	movlt	r1, #1
 8013d38:	f880 1049 	strb.w	r1, [r0, #73]	; 0x49
 8013d3c:	4770      	bx	lr

08013d3e <_ZNK8touchgfx6Circle15getCapPrecisionEv>:
 8013d3e:	f890 0049 	ldrb.w	r0, [r0, #73]	; 0x49
 8013d42:	4770      	bx	lr

08013d44 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 8013d44:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8013d48:	4606      	mov	r6, r0
 8013d4a:	6810      	ldr	r0, [r2, #0]
 8013d4c:	4698      	mov	r8, r3
 8013d4e:	4691      	mov	r9, r2
 8013d50:	460f      	mov	r7, r1
 8013d52:	f7ff ffab 	bl	8013cac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013d56:	a902      	add	r1, sp, #8
 8013d58:	2402      	movs	r4, #2
 8013d5a:	f841 0d08 	str.w	r0, [r1, #-8]!
 8013d5e:	4640      	mov	r0, r8
 8013d60:	f7ff ff76 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d64:	6b35      	ldr	r5, [r6, #48]	; 0x30
 8013d66:	fb90 f0f4 	sdiv	r0, r0, r4
 8013d6a:	4405      	add	r5, r0
 8013d6c:	f8d9 0000 	ldr.w	r0, [r9]
 8013d70:	f7ff ffbd 	bl	8013cee <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013d74:	a902      	add	r1, sp, #8
 8013d76:	f841 0d04 	str.w	r0, [r1, #-4]!
 8013d7a:	4640      	mov	r0, r8
 8013d7c:	f7ff ff68 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d80:	6b72      	ldr	r2, [r6, #52]	; 0x34
 8013d82:	fb90 f0f4 	sdiv	r0, r0, r4
 8013d86:	4629      	mov	r1, r5
 8013d88:	1a12      	subs	r2, r2, r0
 8013d8a:	4638      	mov	r0, r7
 8013d8c:	f014 ffd9 	bl	8028d42 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8013d90:	b003      	add	sp, #12
 8013d92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08013d96 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>:
 8013d96:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8013d9a:	9e08      	ldr	r6, [sp, #32]
 8013d9c:	6830      	ldr	r0, [r6, #0]
 8013d9e:	4698      	mov	r8, r3
 8013da0:	4615      	mov	r5, r2
 8013da2:	460f      	mov	r7, r1
 8013da4:	f7ff ff82 	bl	8013cac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013da8:	a902      	add	r1, sp, #8
 8013daa:	2402      	movs	r4, #2
 8013dac:	f841 0d08 	str.w	r0, [r1, #-8]!
 8013db0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013db2:	f7ff ff4d 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013db6:	682d      	ldr	r5, [r5, #0]
 8013db8:	fb90 f0f4 	sdiv	r0, r0, r4
 8013dbc:	4405      	add	r5, r0
 8013dbe:	6830      	ldr	r0, [r6, #0]
 8013dc0:	f7ff ff95 	bl	8013cee <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013dc4:	a902      	add	r1, sp, #8
 8013dc6:	f841 0d04 	str.w	r0, [r1, #-4]!
 8013dca:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013dcc:	f7ff ff40 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013dd0:	f8d8 2000 	ldr.w	r2, [r8]
 8013dd4:	fb90 f0f4 	sdiv	r0, r0, r4
 8013dd8:	4629      	mov	r1, r5
 8013dda:	1a12      	subs	r2, r2, r0
 8013ddc:	4638      	mov	r0, r7
 8013dde:	f014 ff3f 	bl	8028c60 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013de2:	b002      	add	sp, #8
 8013de4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013de8 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 8013de8:	b513      	push	{r0, r1, r4, lr}
 8013dea:	e9cd 2300 	strd	r2, r3, [sp]
 8013dee:	f100 0334 	add.w	r3, r0, #52	; 0x34
 8013df2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8013df6:	f7ff ffce 	bl	8013d96 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 8013dfa:	b002      	add	sp, #8
 8013dfc:	bd10      	pop	{r4, pc}

08013dfe <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 8013dfe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013e00:	680e      	ldr	r6, [r1, #0]
 8013e02:	681f      	ldr	r7, [r3, #0]
 8013e04:	9807      	ldr	r0, [sp, #28]
 8013e06:	e9dd 5405 	ldrd	r5, r4, [sp, #20]
 8013e0a:	42be      	cmp	r6, r7
 8013e0c:	bfb8      	it	lt
 8013e0e:	601e      	strlt	r6, [r3, #0]
 8013e10:	680b      	ldr	r3, [r1, #0]
 8013e12:	6829      	ldr	r1, [r5, #0]
 8013e14:	428b      	cmp	r3, r1
 8013e16:	bfc8      	it	gt
 8013e18:	602b      	strgt	r3, [r5, #0]
 8013e1a:	6813      	ldr	r3, [r2, #0]
 8013e1c:	6821      	ldr	r1, [r4, #0]
 8013e1e:	428b      	cmp	r3, r1
 8013e20:	bfb8      	it	lt
 8013e22:	6023      	strlt	r3, [r4, #0]
 8013e24:	6813      	ldr	r3, [r2, #0]
 8013e26:	6802      	ldr	r2, [r0, #0]
 8013e28:	4293      	cmp	r3, r2
 8013e2a:	bfc8      	it	gt
 8013e2c:	6003      	strgt	r3, [r0, #0]
 8013e2e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013e30 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 8013e30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013e34:	4606      	mov	r6, r0
 8013e36:	b089      	sub	sp, #36	; 0x24
 8013e38:	6808      	ldr	r0, [r1, #0]
 8013e3a:	4690      	mov	r8, r2
 8013e3c:	461f      	mov	r7, r3
 8013e3e:	4689      	mov	r9, r1
 8013e40:	f7ff ff34 	bl	8013cac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013e44:	ad08      	add	r5, sp, #32
 8013e46:	2402      	movs	r4, #2
 8013e48:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013e4c:	4640      	mov	r0, r8
 8013e4e:	4629      	mov	r1, r5
 8013e50:	f7ff fefe 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013e54:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8013e56:	fb90 f0f4 	sdiv	r0, r0, r4
 8013e5a:	4418      	add	r0, r3
 8013e5c:	9005      	str	r0, [sp, #20]
 8013e5e:	f8d9 0000 	ldr.w	r0, [r9]
 8013e62:	f7ff ff44 	bl	8013cee <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013e66:	4629      	mov	r1, r5
 8013e68:	9007      	str	r0, [sp, #28]
 8013e6a:	4640      	mov	r0, r8
 8013e6c:	f7ff fef0 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013e70:	fb90 f0f4 	sdiv	r0, r0, r4
 8013e74:	6b74      	ldr	r4, [r6, #52]	; 0x34
 8013e76:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013e78:	aa08      	add	r2, sp, #32
 8013e7a:	1a24      	subs	r4, r4, r0
 8013e7c:	f842 4d08 	str.w	r4, [r2, #-8]!
 8013e80:	9302      	str	r3, [sp, #8]
 8013e82:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013e84:	9301      	str	r3, [sp, #4]
 8013e86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013e88:	9300      	str	r3, [sp, #0]
 8013e8a:	a905      	add	r1, sp, #20
 8013e8c:	463b      	mov	r3, r7
 8013e8e:	4630      	mov	r0, r6
 8013e90:	f7ff ffb5 	bl	8013dfe <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013e94:	b009      	add	sp, #36	; 0x24
 8013e96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08013e9a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8013e9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e9e:	4291      	cmp	r1, r2
 8013ea0:	b08d      	sub	sp, #52	; 0x34
 8013ea2:	e9cd 2106 	strd	r2, r1, [sp, #24]
 8013ea6:	bfc8      	it	gt
 8013ea8:	e9cd 1206 	strdgt	r1, r2, [sp, #24]
 8013eac:	461e      	mov	r6, r3
 8013eae:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8013eb2:	1a9b      	subs	r3, r3, r2
 8013eb4:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8013eb8:	bfa2      	ittt	ge
 8013eba:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8013ebe:	2200      	movge	r2, #0
 8013ec0:	e9cd 3206 	strdge	r3, r2, [sp, #24]
 8013ec4:	6b82      	ldr	r2, [r0, #56]	; 0x38
 8013ec6:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8013ec8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8013ecc:	ad0c      	add	r5, sp, #48	; 0x30
 8013ece:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 8013ed2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013ed6:	f845 3d04 	str.w	r3, [r5, #-4]!
 8013eda:	a907      	add	r1, sp, #28
 8013edc:	4633      	mov	r3, r6
 8013ede:	462a      	mov	r2, r5
 8013ee0:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8013ee4:	9700      	str	r7, [sp, #0]
 8013ee6:	4604      	mov	r4, r0
 8013ee8:	f7ff ffa2 	bl	8013e30 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013eec:	9b07      	ldr	r3, [sp, #28]
 8013eee:	f44f 6034 	mov.w	r0, #2880	; 0xb40
 8013ef2:	f103 0120 	add.w	r1, r3, #32
 8013ef6:	fb91 f3f0 	sdiv	r3, r1, r0
 8013efa:	fb00 1313 	mls	r3, r0, r3, r1
 8013efe:	1ac3      	subs	r3, r0, r3
 8013f00:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 8013f04:	fb93 f2f0 	sdiv	r2, r3, r0
 8013f08:	fb00 3312 	mls	r3, r0, r2, r3
 8013f0c:	440b      	add	r3, r1
 8013f0e:	f84a 3d0c 	str.w	r3, [sl, #-12]!
 8013f12:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013f14:	9906      	ldr	r1, [sp, #24]
 8013f16:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013f18:	4291      	cmp	r1, r2
 8013f1a:	db11      	blt.n	8013f40 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xa6>
 8013f1c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8013f1e:	9700      	str	r7, [sp, #0]
 8013f20:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013f24:	930b      	str	r3, [sp, #44]	; 0x2c
 8013f26:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8013f2a:	4633      	mov	r3, r6
 8013f2c:	462a      	mov	r2, r5
 8013f2e:	4651      	mov	r1, sl
 8013f30:	4620      	mov	r0, r4
 8013f32:	f7ff ff7d 	bl	8013e30 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013f36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f38:	f503 6334 	add.w	r3, r3, #2880	; 0xb40
 8013f3c:	9309      	str	r3, [sp, #36]	; 0x24
 8013f3e:	e7e8      	b.n	8013f12 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x78>
 8013f40:	f5a2 6234 	sub.w	r2, r2, #2880	; 0xb40
 8013f44:	4291      	cmp	r1, r2
 8013f46:	dd0c      	ble.n	8013f62 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xc8>
 8013f48:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8013f4a:	9700      	str	r7, [sp, #0]
 8013f4c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013f50:	930b      	str	r3, [sp, #44]	; 0x2c
 8013f52:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8013f56:	4633      	mov	r3, r6
 8013f58:	462a      	mov	r2, r5
 8013f5a:	a906      	add	r1, sp, #24
 8013f5c:	4620      	mov	r0, r4
 8013f5e:	f7ff ff67 	bl	8013e30 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013f62:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013f64:	2b00      	cmp	r3, #0
 8013f66:	f040 8097 	bne.w	8014098 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1fe>
 8013f6a:	e9dd 2106 	ldrd	r2, r1, [sp, #24]
 8013f6e:	1a52      	subs	r2, r2, r1
 8013f70:	f5b2 5f34 	cmp.w	r2, #11520	; 0x2d00
 8013f74:	da0a      	bge.n	8013f8c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xf2>
 8013f76:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8013f7a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8013f7e:	9700      	str	r7, [sp, #0]
 8013f80:	4633      	mov	r3, r6
 8013f82:	462a      	mov	r2, r5
 8013f84:	a90a      	add	r1, sp, #40	; 0x28
 8013f86:	4620      	mov	r0, r4
 8013f88:	f7ff ff52 	bl	8013e30 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013f8c:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 8013f90:	2bb3      	cmp	r3, #179	; 0xb3
 8013f92:	d87e      	bhi.n	8014092 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 8013f94:	e9dd 3006 	ldrd	r3, r0, [sp, #24]
 8013f98:	1a1b      	subs	r3, r3, r0
 8013f9a:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8013f9e:	da78      	bge.n	8014092 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 8013fa0:	f7ff fe84 	bl	8013cac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013fa4:	ad0c      	add	r5, sp, #48	; 0x30
 8013fa6:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 8013faa:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013fae:	4658      	mov	r0, fp
 8013fb0:	4629      	mov	r1, r5
 8013fb2:	f7ff fe4d 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013fb6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8013fb8:	18c3      	adds	r3, r0, r3
 8013fba:	9807      	ldr	r0, [sp, #28]
 8013fbc:	9305      	str	r3, [sp, #20]
 8013fbe:	f7ff fe96 	bl	8013cee <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013fc2:	4629      	mov	r1, r5
 8013fc4:	900b      	str	r0, [sp, #44]	; 0x2c
 8013fc6:	4658      	mov	r0, fp
 8013fc8:	f7ff fe42 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013fcc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8013fce:	9a05      	ldr	r2, [sp, #20]
 8013fd0:	9700      	str	r7, [sp, #0]
 8013fd2:	1a1b      	subs	r3, r3, r0
 8013fd4:	f04f 0a02 	mov.w	sl, #2
 8013fd8:	9304      	str	r3, [sp, #16]
 8013fda:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013fdc:	fb93 f3fa 	sdiv	r3, r3, sl
 8013fe0:	1ad2      	subs	r2, r2, r3
 8013fe2:	920a      	str	r2, [sp, #40]	; 0x28
 8013fe4:	9a04      	ldr	r2, [sp, #16]
 8013fe6:	1ad3      	subs	r3, r2, r3
 8013fe8:	930b      	str	r3, [sp, #44]	; 0x2c
 8013fea:	462a      	mov	r2, r5
 8013fec:	4633      	mov	r3, r6
 8013fee:	a90a      	add	r1, sp, #40	; 0x28
 8013ff0:	4620      	mov	r0, r4
 8013ff2:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8013ff6:	f7ff ff02 	bl	8013dfe <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8013ffa:	9a05      	ldr	r2, [sp, #20]
 8013ffc:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013ffe:	fb93 f3fa 	sdiv	r3, r3, sl
 8014002:	189a      	adds	r2, r3, r2
 8014004:	920a      	str	r2, [sp, #40]	; 0x28
 8014006:	9a04      	ldr	r2, [sp, #16]
 8014008:	9700      	str	r7, [sp, #0]
 801400a:	4413      	add	r3, r2
 801400c:	a90a      	add	r1, sp, #40	; 0x28
 801400e:	462a      	mov	r2, r5
 8014010:	930b      	str	r3, [sp, #44]	; 0x2c
 8014012:	4620      	mov	r0, r4
 8014014:	4633      	mov	r3, r6
 8014016:	e9cd 8901 	strd	r8, r9, [sp, #4]
 801401a:	f7ff fef0 	bl	8013dfe <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 801401e:	9806      	ldr	r0, [sp, #24]
 8014020:	f7ff fe44 	bl	8013cac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014024:	4629      	mov	r1, r5
 8014026:	900b      	str	r0, [sp, #44]	; 0x2c
 8014028:	4658      	mov	r0, fp
 801402a:	f7ff fe11 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801402e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014030:	18c3      	adds	r3, r0, r3
 8014032:	9806      	ldr	r0, [sp, #24]
 8014034:	9304      	str	r3, [sp, #16]
 8014036:	f7ff fe5a 	bl	8013cee <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801403a:	4629      	mov	r1, r5
 801403c:	900b      	str	r0, [sp, #44]	; 0x2c
 801403e:	4658      	mov	r0, fp
 8014040:	f7ff fe06 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014044:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8014046:	9a04      	ldr	r2, [sp, #16]
 8014048:	9700      	str	r7, [sp, #0]
 801404a:	eba3 0b00 	sub.w	fp, r3, r0
 801404e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8014050:	fb93 f3fa 	sdiv	r3, r3, sl
 8014054:	1ad2      	subs	r2, r2, r3
 8014056:	ebab 0303 	sub.w	r3, fp, r3
 801405a:	920a      	str	r2, [sp, #40]	; 0x28
 801405c:	930b      	str	r3, [sp, #44]	; 0x2c
 801405e:	462a      	mov	r2, r5
 8014060:	4633      	mov	r3, r6
 8014062:	a90a      	add	r1, sp, #40	; 0x28
 8014064:	4620      	mov	r0, r4
 8014066:	e9cd 8901 	strd	r8, r9, [sp, #4]
 801406a:	f7ff fec8 	bl	8013dfe <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 801406e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8014070:	fb93 fafa 	sdiv	sl, r3, sl
 8014074:	9b04      	ldr	r3, [sp, #16]
 8014076:	9700      	str	r7, [sp, #0]
 8014078:	4453      	add	r3, sl
 801407a:	930a      	str	r3, [sp, #40]	; 0x28
 801407c:	eb0a 030b 	add.w	r3, sl, fp
 8014080:	930b      	str	r3, [sp, #44]	; 0x2c
 8014082:	e9cd 8901 	strd	r8, r9, [sp, #4]
 8014086:	4633      	mov	r3, r6
 8014088:	462a      	mov	r2, r5
 801408a:	a90a      	add	r1, sp, #40	; 0x28
 801408c:	4620      	mov	r0, r4
 801408e:	f7ff feb6 	bl	8013dfe <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 8014092:	b00d      	add	sp, #52	; 0x34
 8014094:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014098:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801409a:	9700      	str	r7, [sp, #0]
 801409c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80140a0:	930b      	str	r3, [sp, #44]	; 0x2c
 80140a2:	462a      	mov	r2, r5
 80140a4:	4633      	mov	r3, r6
 80140a6:	a907      	add	r1, sp, #28
 80140a8:	e9cd 8901 	strd	r8, r9, [sp, #4]
 80140ac:	4620      	mov	r0, r4
 80140ae:	f7ff febf 	bl	8013e30 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 80140b2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80140b4:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80140b6:	9700      	str	r7, [sp, #0]
 80140b8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80140bc:	930b      	str	r3, [sp, #44]	; 0x2c
 80140be:	e9cd 8901 	strd	r8, r9, [sp, #4]
 80140c2:	4633      	mov	r3, r6
 80140c4:	462a      	mov	r2, r5
 80140c6:	a906      	add	r1, sp, #24
 80140c8:	e75d      	b.n	8013f86 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xec>

080140ca <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80140ca:	b530      	push	{r4, r5, lr}
 80140cc:	4604      	mov	r4, r0
 80140ce:	4608      	mov	r0, r1
 80140d0:	4611      	mov	r1, r2
 80140d2:	461a      	mov	r2, r3
 80140d4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80140d8:	b089      	sub	sp, #36	; 0x24
 80140da:	015b      	lsls	r3, r3, #5
 80140dc:	9304      	str	r3, [sp, #16]
 80140de:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80140e2:	2500      	movs	r5, #0
 80140e4:	015b      	lsls	r3, r3, #5
 80140e6:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80140ea:	ab07      	add	r3, sp, #28
 80140ec:	9302      	str	r3, [sp, #8]
 80140ee:	ab06      	add	r3, sp, #24
 80140f0:	9301      	str	r3, [sp, #4]
 80140f2:	ab05      	add	r3, sp, #20
 80140f4:	9300      	str	r3, [sp, #0]
 80140f6:	ab04      	add	r3, sp, #16
 80140f8:	9505      	str	r5, [sp, #20]
 80140fa:	f7ff fece 	bl	8013e9a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80140fe:	2520      	movs	r5, #32
 8014100:	9a04      	ldr	r2, [sp, #16]
 8014102:	9805      	ldr	r0, [sp, #20]
 8014104:	fb92 f2f5 	sdiv	r2, r2, r5
 8014108:	fb90 f0f5 	sdiv	r0, r0, r5
 801410c:	b292      	uxth	r2, r2
 801410e:	3002      	adds	r0, #2
 8014110:	1a80      	subs	r0, r0, r2
 8014112:	9b06      	ldr	r3, [sp, #24]
 8014114:	9907      	ldr	r1, [sp, #28]
 8014116:	fb93 f3f5 	sdiv	r3, r3, r5
 801411a:	fb91 f1f5 	sdiv	r1, r1, r5
 801411e:	b29b      	uxth	r3, r3
 8014120:	3102      	adds	r1, #2
 8014122:	1ac9      	subs	r1, r1, r3
 8014124:	3a01      	subs	r2, #1
 8014126:	3b01      	subs	r3, #1
 8014128:	80a0      	strh	r0, [r4, #4]
 801412a:	4620      	mov	r0, r4
 801412c:	8022      	strh	r2, [r4, #0]
 801412e:	8063      	strh	r3, [r4, #2]
 8014130:	80e1      	strh	r1, [r4, #6]
 8014132:	b009      	add	sp, #36	; 0x24
 8014134:	bd30      	pop	{r4, r5, pc}

08014136 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8014136:	b510      	push	{r4, lr}
 8014138:	e9d1 230f 	ldrd	r2, r3, [r1, #60]	; 0x3c
 801413c:	4604      	mov	r4, r0
 801413e:	f7ff ffc4 	bl	80140ca <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8014142:	4620      	mov	r0, r4
 8014144:	bd10      	pop	{r4, pc}

08014146 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8014146:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014148:	e9d1 540f 	ldrd	r5, r4, [r1, #60]	; 0x3c
 801414c:	4606      	mov	r6, r0
 801414e:	f891 0048 	ldrb.w	r0, [r1, #72]	; 0x48
 8014152:	6813      	ldr	r3, [r2, #0]
 8014154:	42a5      	cmp	r5, r4
 8014156:	ea4f 1040 	mov.w	r0, r0, lsl #5
 801415a:	da2b      	bge.n	80141b4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 801415c:	42a3      	cmp	r3, r4
 801415e:	dd14      	ble.n	801418a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8014160:	b168      	cbz	r0, 801417e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8014162:	4267      	negs	r7, r4
 8014164:	fb97 f2f0 	sdiv	r2, r7, r0
 8014168:	fb00 7212 	mls	r2, r0, r2, r7
 801416c:	1a82      	subs	r2, r0, r2
 801416e:	fb92 f7f0 	sdiv	r7, r2, r0
 8014172:	fb00 2017 	mls	r0, r0, r7, r2
 8014176:	1a24      	subs	r4, r4, r0
 8014178:	42ac      	cmp	r4, r5
 801417a:	bfb8      	it	lt
 801417c:	462c      	movlt	r4, r5
 801417e:	4630      	mov	r0, r6
 8014180:	4622      	mov	r2, r4
 8014182:	f7ff ffa2 	bl	80140ca <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8014186:	4630      	mov	r0, r6
 8014188:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801418a:	42ab      	cmp	r3, r5
 801418c:	dd0e      	ble.n	80141ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 801418e:	b168      	cbz	r0, 80141ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8014190:	425f      	negs	r7, r3
 8014192:	fb97 f2f0 	sdiv	r2, r7, r0
 8014196:	fb00 7212 	mls	r2, r0, r2, r7
 801419a:	1a82      	subs	r2, r0, r2
 801419c:	fb92 f7f0 	sdiv	r7, r2, r0
 80141a0:	fb00 2017 	mls	r0, r0, r7, r2
 80141a4:	1a1b      	subs	r3, r3, r0
 80141a6:	42ab      	cmp	r3, r5
 80141a8:	bfb8      	it	lt
 80141aa:	462b      	movlt	r3, r5
 80141ac:	4622      	mov	r2, r4
 80141ae:	461c      	mov	r4, r3
 80141b0:	4613      	mov	r3, r2
 80141b2:	e7e4      	b.n	801417e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80141b4:	42a3      	cmp	r3, r4
 80141b6:	da10      	bge.n	80141da <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80141b8:	b148      	cbz	r0, 80141ce <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 80141ba:	fb94 f2f0 	sdiv	r2, r4, r0
 80141be:	fb00 4212 	mls	r2, r0, r2, r4
 80141c2:	1a82      	subs	r2, r0, r2
 80141c4:	fb92 f7f0 	sdiv	r7, r2, r0
 80141c8:	fb00 2017 	mls	r0, r0, r7, r2
 80141cc:	4404      	add	r4, r0
 80141ce:	42a5      	cmp	r5, r4
 80141d0:	bfa8      	it	ge
 80141d2:	4625      	movge	r5, r4
 80141d4:	461c      	mov	r4, r3
 80141d6:	462b      	mov	r3, r5
 80141d8:	e7d1      	b.n	801417e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80141da:	42ab      	cmp	r3, r5
 80141dc:	dacf      	bge.n	801417e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80141de:	2800      	cmp	r0, #0
 80141e0:	d0cd      	beq.n	801417e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80141e2:	fb93 f2f0 	sdiv	r2, r3, r0
 80141e6:	fb00 3212 	mls	r2, r0, r2, r3
 80141ea:	1a82      	subs	r2, r0, r2
 80141ec:	fb92 f7f0 	sdiv	r7, r2, r0
 80141f0:	fb00 2017 	mls	r0, r0, r7, r2
 80141f4:	4403      	add	r3, r0
 80141f6:	42ab      	cmp	r3, r5
 80141f8:	bfa8      	it	ge
 80141fa:	462b      	movge	r3, r5
 80141fc:	e7bf      	b.n	801417e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080141fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80141fe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014202:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8014204:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8014206:	f9b0 7030 	ldrsh.w	r7, [r0, #48]	; 0x30
 801420a:	f9b0 8034 	ldrsh.w	r8, [r0, #52]	; 0x34
 801420e:	b0ba      	sub	sp, #232	; 0xe8
 8014210:	4293      	cmp	r3, r2
 8014212:	9303      	str	r3, [sp, #12]
 8014214:	9204      	str	r2, [sp, #16]
 8014216:	bfc8      	it	gt
 8014218:	e9cd 2303 	strdgt	r2, r3, [sp, #12]
 801421c:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 8014220:	1a9b      	subs	r3, r3, r2
 8014222:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8014226:	bfa2      	ittt	ge
 8014228:	2200      	movge	r2, #0
 801422a:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 801422e:	e9cd 2303 	strdge	r2, r3, [sp, #12]
 8014232:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8014234:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014236:	4689      	mov	r9, r1
 8014238:	4604      	mov	r4, r0
 801423a:	2120      	movs	r1, #32
 801423c:	fb97 f7f1 	sdiv	r7, r7, r1
 8014240:	fb98 f8f1 	sdiv	r8, r8, r1
 8014244:	2a00      	cmp	r2, #0
 8014246:	d053      	beq.n	80142f0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf2>
 8014248:	f9b9 0000 	ldrsh.w	r0, [r9]
 801424c:	f9b9 1002 	ldrsh.w	r1, [r9, #2]
 8014250:	1a3d      	subs	r5, r7, r0
 8014252:	ea85 7ce5 	eor.w	ip, r5, r5, asr #31
 8014256:	ebac 7ce5 	sub.w	ip, ip, r5, asr #31
 801425a:	f8b9 5004 	ldrh.w	r5, [r9, #4]
 801425e:	eba8 0601 	sub.w	r6, r8, r1
 8014262:	4405      	add	r5, r0
 8014264:	ea86 70e6 	eor.w	r0, r6, r6, asr #31
 8014268:	eba0 70e6 	sub.w	r0, r0, r6, asr #31
 801426c:	f8b9 6006 	ldrh.w	r6, [r9, #6]
 8014270:	b22d      	sxth	r5, r5
 8014272:	440e      	add	r6, r1
 8014274:	1b7d      	subs	r5, r7, r5
 8014276:	b236      	sxth	r6, r6
 8014278:	eba8 0606 	sub.w	r6, r8, r6
 801427c:	2d00      	cmp	r5, #0
 801427e:	bfb8      	it	lt
 8014280:	426d      	neglt	r5, r5
 8014282:	2e00      	cmp	r6, #0
 8014284:	bfb8      	it	lt
 8014286:	4276      	neglt	r6, r6
 8014288:	4565      	cmp	r5, ip
 801428a:	bfb4      	ite	lt
 801428c:	f10c 0501 	addlt.w	r5, ip, #1
 8014290:	3501      	addge	r5, #1
 8014292:	4286      	cmp	r6, r0
 8014294:	bfb8      	it	lt
 8014296:	1c46      	addlt	r6, r0, #1
 8014298:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 801429c:	f100 0001 	add.w	r0, r0, #1
 80142a0:	ea4f 0060 	mov.w	r0, r0, asr #1
 80142a4:	f04f 0a02 	mov.w	sl, #2
 80142a8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80142ac:	fb92 f2fa 	sdiv	r2, r2, sl
 80142b0:	eba3 0302 	sub.w	r3, r3, r2
 80142b4:	bfa8      	it	ge
 80142b6:	3601      	addge	r6, #1
 80142b8:	930a      	str	r3, [sp, #40]	; 0x28
 80142ba:	f7ff fcd5 	bl	8013c68 <_ZN8touchgfx7CWRUtil4sineEi>
 80142be:	a93a      	add	r1, sp, #232	; 0xe8
 80142c0:	4376      	muls	r6, r6
 80142c2:	f841 0dbc 	str.w	r0, [r1, #-188]!
 80142c6:	a80a      	add	r0, sp, #40	; 0x28
 80142c8:	f7ff fcc2 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80142cc:	fb05 6505 	mla	r5, r5, r5, r6
 80142d0:	2120      	movs	r1, #32
 80142d2:	fb90 f0f1 	sdiv	r0, r0, r1
 80142d6:	4340      	muls	r0, r0
 80142d8:	4285      	cmp	r5, r0
 80142da:	da04      	bge.n	80142e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
 80142dc:	2401      	movs	r4, #1
 80142de:	4620      	mov	r0, r4
 80142e0:	b03a      	add	sp, #232	; 0xe8
 80142e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80142e6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80142e8:	fb92 f3fa 	sdiv	r3, r2, sl
 80142ec:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80142ee:	4413      	add	r3, r2
 80142f0:	fb93 f3f1 	sdiv	r3, r3, r1
 80142f4:	f8b9 2004 	ldrh.w	r2, [r9, #4]
 80142f8:	f9b9 1000 	ldrsh.w	r1, [r9]
 80142fc:	440a      	add	r2, r1
 80142fe:	b212      	sxth	r2, r2
 8014300:	42ba      	cmp	r2, r7
 8014302:	bfa8      	it	ge
 8014304:	463a      	movge	r2, r7
 8014306:	428a      	cmp	r2, r1
 8014308:	bfac      	ite	ge
 801430a:	1abf      	subge	r7, r7, r2
 801430c:	1a7f      	sublt	r7, r7, r1
 801430e:	f8b9 2006 	ldrh.w	r2, [r9, #6]
 8014312:	f9b9 1002 	ldrsh.w	r1, [r9, #2]
 8014316:	440a      	add	r2, r1
 8014318:	b212      	sxth	r2, r2
 801431a:	4542      	cmp	r2, r8
 801431c:	bfa8      	it	ge
 801431e:	4642      	movge	r2, r8
 8014320:	428a      	cmp	r2, r1
 8014322:	bfac      	ite	ge
 8014324:	eba8 0802 	subge.w	r8, r8, r2
 8014328:	eba8 0801 	sublt.w	r8, r8, r1
 801432c:	3301      	adds	r3, #1
 801432e:	fb08 f808 	mul.w	r8, r8, r8
 8014332:	fb07 8707 	mla	r7, r7, r7, r8
 8014336:	435b      	muls	r3, r3
 8014338:	429f      	cmp	r7, r3
 801433a:	dccf      	bgt.n	80142dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xde>
 801433c:	464a      	mov	r2, r9
 801433e:	4621      	mov	r1, r4
 8014340:	a80b      	add	r0, sp, #44	; 0x2c
 8014342:	f014 fb33 	bl	80289ac <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8014346:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014348:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801434a:	9205      	str	r2, [sp, #20]
 801434c:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8014350:	9306      	str	r3, [sp, #24]
 8014352:	dd07      	ble.n	8014364 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x166>
 8014354:	2102      	movs	r1, #2
 8014356:	fb93 f3f1 	sdiv	r3, r3, r1
 801435a:	4413      	add	r3, r2
 801435c:	9306      	str	r3, [sp, #24]
 801435e:	fb93 f3f1 	sdiv	r3, r3, r1
 8014362:	9305      	str	r3, [sp, #20]
 8014364:	9b03      	ldr	r3, [sp, #12]
 8014366:	9307      	str	r3, [sp, #28]
 8014368:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 801436c:	ad3a      	add	r5, sp, #232	; 0xe8
 801436e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014372:	f894 6048 	ldrb.w	r6, [r4, #72]	; 0x48
 8014376:	f845 3dc0 	str.w	r3, [r5, #-192]!
 801437a:	aa07      	add	r2, sp, #28
 801437c:	462b      	mov	r3, r5
 801437e:	a90b      	add	r1, sp, #44	; 0x2c
 8014380:	4620      	mov	r0, r4
 8014382:	0176      	lsls	r6, r6, #5
 8014384:	f7ff fcde 	bl	8013d44 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 8014388:	9f07      	ldr	r7, [sp, #28]
 801438a:	b996      	cbnz	r6, 80143b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1b4>
 801438c:	3720      	adds	r7, #32
 801438e:	9a04      	ldr	r2, [sp, #16]
 8014390:	9b06      	ldr	r3, [sp, #24]
 8014392:	4639      	mov	r1, r7
 8014394:	4291      	cmp	r1, r2
 8014396:	4437      	add	r7, r6
 8014398:	dc18      	bgt.n	80143cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ce>
 801439a:	9a05      	ldr	r2, [sp, #20]
 801439c:	9107      	str	r1, [sp, #28]
 801439e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80143a2:	930a      	str	r3, [sp, #40]	; 0x28
 80143a4:	aa07      	add	r2, sp, #28
 80143a6:	462b      	mov	r3, r5
 80143a8:	a90b      	add	r1, sp, #44	; 0x2c
 80143aa:	4620      	mov	r0, r4
 80143ac:	f7ff fd1c 	bl	8013de8 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 80143b0:	e7ed      	b.n	801438e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x190>
 80143b2:	f107 0320 	add.w	r3, r7, #32
 80143b6:	fb93 f7f6 	sdiv	r7, r3, r6
 80143ba:	fb06 3717 	mls	r7, r6, r7, r3
 80143be:	1bf2      	subs	r2, r6, r7
 80143c0:	fb92 f7f6 	sdiv	r7, r2, r6
 80143c4:	fb06 2717 	mls	r7, r6, r7, r2
 80143c8:	441f      	add	r7, r3
 80143ca:	e7e0      	b.n	801438e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x190>
 80143cc:	9907      	ldr	r1, [sp, #28]
 80143ce:	428a      	cmp	r2, r1
 80143d0:	dd09      	ble.n	80143e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e8>
 80143d2:	9a05      	ldr	r2, [sp, #20]
 80143d4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80143d8:	930a      	str	r3, [sp, #40]	; 0x28
 80143da:	aa04      	add	r2, sp, #16
 80143dc:	462b      	mov	r3, r5
 80143de:	a90b      	add	r1, sp, #44	; 0x2c
 80143e0:	4620      	mov	r0, r4
 80143e2:	f7ff fd01 	bl	8013de8 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 80143e6:	e9dd 3003 	ldrd	r3, r0, [sp, #12]
 80143ea:	9a06      	ldr	r2, [sp, #24]
 80143ec:	1ac3      	subs	r3, r0, r3
 80143ee:	b982      	cbnz	r2, 8014412 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x214>
 80143f0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80143f4:	da04      	bge.n	8014400 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x202>
 80143f6:	e9d4 120c 	ldrd	r1, r2, [r4, #48]	; 0x30
 80143fa:	a80b      	add	r0, sp, #44	; 0x2c
 80143fc:	f014 fc30 	bl	8028c60 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014400:	21ff      	movs	r1, #255	; 0xff
 8014402:	a80b      	add	r0, sp, #44	; 0x2c
 8014404:	f014 fda1 	bl	8028f4a <_ZN8touchgfx6Canvas6renderEh>
 8014408:	4604      	mov	r4, r0
 801440a:	a80b      	add	r0, sp, #44	; 0x2c
 801440c:	f014 fddc 	bl	8028fc8 <_ZN8touchgfx6CanvasD1Ev>
 8014410:	e765      	b.n	80142de <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe0>
 8014412:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
 8014416:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 801441a:	ea4f 1747 	mov.w	r7, r7, lsl #5
 801441e:	da2b      	bge.n	8014478 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x27a>
 8014420:	f7ff fc44 	bl	8013cac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8014424:	4629      	mov	r1, r5
 8014426:	900a      	str	r0, [sp, #40]	; 0x28
 8014428:	a805      	add	r0, sp, #20
 801442a:	f7ff fc11 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801442e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014430:	4418      	add	r0, r3
 8014432:	9008      	str	r0, [sp, #32]
 8014434:	9804      	ldr	r0, [sp, #16]
 8014436:	f7ff fc5a 	bl	8013cee <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801443a:	4629      	mov	r1, r5
 801443c:	900a      	str	r0, [sp, #40]	; 0x28
 801443e:	a805      	add	r0, sp, #20
 8014440:	f7ff fc06 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014444:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8014446:	1a18      	subs	r0, r3, r0
 8014448:	9b04      	ldr	r3, [sp, #16]
 801444a:	9009      	str	r0, [sp, #36]	; 0x24
 801444c:	443b      	add	r3, r7
 801444e:	930a      	str	r3, [sp, #40]	; 0x28
 8014450:	f10d 0818 	add.w	r8, sp, #24
 8014454:	9b04      	ldr	r3, [sp, #16]
 8014456:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014458:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 801445c:	4293      	cmp	r3, r2
 801445e:	dd0b      	ble.n	8014478 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x27a>
 8014460:	ab09      	add	r3, sp, #36	; 0x24
 8014462:	e9cd 5800 	strd	r5, r8, [sp]
 8014466:	aa08      	add	r2, sp, #32
 8014468:	a90b      	add	r1, sp, #44	; 0x2c
 801446a:	4620      	mov	r0, r4
 801446c:	f7ff fc93 	bl	8013d96 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 8014470:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014472:	443b      	add	r3, r7
 8014474:	930a      	str	r3, [sp, #40]	; 0x28
 8014476:	e7ed      	b.n	8014454 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x256>
 8014478:	9a04      	ldr	r2, [sp, #16]
 801447a:	9b07      	ldr	r3, [sp, #28]
 801447c:	429a      	cmp	r2, r3
 801447e:	dd0a      	ble.n	8014496 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x298>
 8014480:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 8014484:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8014488:	930a      	str	r3, [sp, #40]	; 0x28
 801448a:	aa04      	add	r2, sp, #16
 801448c:	462b      	mov	r3, r5
 801448e:	a90b      	add	r1, sp, #44	; 0x2c
 8014490:	4620      	mov	r0, r4
 8014492:	f7ff fca9 	bl	8013de8 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 8014496:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801449a:	9b03      	ldr	r3, [sp, #12]
 801449c:	4642      	mov	r2, r8
 801449e:	429a      	cmp	r2, r3
 80144a0:	eba8 0806 	sub.w	r8, r8, r6
 80144a4:	db0c      	blt.n	80144c0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 80144a6:	9207      	str	r2, [sp, #28]
 80144a8:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 80144ac:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80144b0:	930a      	str	r3, [sp, #40]	; 0x28
 80144b2:	aa07      	add	r2, sp, #28
 80144b4:	462b      	mov	r3, r5
 80144b6:	a90b      	add	r1, sp, #44	; 0x2c
 80144b8:	4620      	mov	r0, r4
 80144ba:	f7ff fc95 	bl	8013de8 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 80144be:	e7ec      	b.n	801449a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x29c>
 80144c0:	9a07      	ldr	r2, [sp, #28]
 80144c2:	4293      	cmp	r3, r2
 80144c4:	da0a      	bge.n	80144dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2de>
 80144c6:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 80144ca:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80144ce:	930a      	str	r3, [sp, #40]	; 0x28
 80144d0:	aa03      	add	r2, sp, #12
 80144d2:	462b      	mov	r3, r5
 80144d4:	a90b      	add	r1, sp, #44	; 0x2c
 80144d6:	4620      	mov	r0, r4
 80144d8:	f7ff fc86 	bl	8013de8 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 80144dc:	e9dd 0303 	ldrd	r0, r3, [sp, #12]
 80144e0:	1a1b      	subs	r3, r3, r0
 80144e2:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80144e6:	da8b      	bge.n	8014400 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x202>
 80144e8:	f7ff fbe0 	bl	8013cac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80144ec:	4629      	mov	r1, r5
 80144ee:	900a      	str	r0, [sp, #40]	; 0x28
 80144f0:	a805      	add	r0, sp, #20
 80144f2:	f7ff fbad 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80144f6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80144f8:	4418      	add	r0, r3
 80144fa:	9008      	str	r0, [sp, #32]
 80144fc:	9803      	ldr	r0, [sp, #12]
 80144fe:	f7ff fbf6 	bl	8013cee <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8014502:	4629      	mov	r1, r5
 8014504:	900a      	str	r0, [sp, #40]	; 0x28
 8014506:	a805      	add	r0, sp, #20
 8014508:	f7ff fba2 	bl	8013c50 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801450c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801450e:	1a18      	subs	r0, r3, r0
 8014510:	9b03      	ldr	r3, [sp, #12]
 8014512:	9009      	str	r0, [sp, #36]	; 0x24
 8014514:	f5a3 53b4 	sub.w	r3, r3, #5760	; 0x1680
 8014518:	443b      	add	r3, r7
 801451a:	930a      	str	r3, [sp, #40]	; 0x28
 801451c:	ae06      	add	r6, sp, #24
 801451e:	9a03      	ldr	r2, [sp, #12]
 8014520:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014522:	429a      	cmp	r2, r3
 8014524:	f77f af6c 	ble.w	8014400 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x202>
 8014528:	ab09      	add	r3, sp, #36	; 0x24
 801452a:	e9cd 5600 	strd	r5, r6, [sp]
 801452e:	aa08      	add	r2, sp, #32
 8014530:	a90b      	add	r1, sp, #44	; 0x2c
 8014532:	4620      	mov	r0, r4
 8014534:	f7ff fc2f 	bl	8013d96 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 8014538:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801453a:	443b      	add	r3, r7
 801453c:	930a      	str	r3, [sp, #40]	; 0x28
 801453e:	e7ee      	b.n	801451e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x320>

08014540 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>:
 8014540:	6281      	str	r1, [r0, #40]	; 0x28
 8014542:	4770      	bx	lr

08014544 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 8014544:	b510      	push	{r4, lr}
 8014546:	2200      	movs	r2, #0
 8014548:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 801454c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8014550:	8002      	strh	r2, [r0, #0]
 8014552:	8042      	strh	r2, [r0, #2]
 8014554:	8084      	strh	r4, [r0, #4]
 8014556:	80c1      	strh	r1, [r0, #6]
 8014558:	bd10      	pop	{r4, pc}

0801455a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 801455a:	2200      	movs	r2, #0
 801455c:	8002      	strh	r2, [r0, #0]
 801455e:	8042      	strh	r2, [r0, #2]
 8014560:	8082      	strh	r2, [r0, #4]
 8014562:	80c2      	strh	r2, [r0, #6]
 8014564:	4770      	bx	lr
	...

08014568 <_ZNK8touchgfx12CanvasWidget10getPainterEv>:
 8014568:	b508      	push	{r3, lr}
 801456a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801456c:	b928      	cbnz	r0, 801457a <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x12>
 801456e:	4b03      	ldr	r3, [pc, #12]	; (801457c <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x14>)
 8014570:	4a03      	ldr	r2, [pc, #12]	; (8014580 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x18>)
 8014572:	4804      	ldr	r0, [pc, #16]	; (8014584 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x1c>)
 8014574:	2123      	movs	r1, #35	; 0x23
 8014576:	f017 fd3d 	bl	802bff4 <__assert_func>
 801457a:	bd08      	pop	{r3, pc}
 801457c:	08033e84 	.word	0x08033e84
 8014580:	08033f68 	.word	0x08033f68
 8014584:	08033eab 	.word	0x08033eab

08014588 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014588:	b510      	push	{r4, lr}
 801458a:	f9b1 4000 	ldrsh.w	r4, [r1]
 801458e:	888a      	ldrh	r2, [r1, #4]
 8014590:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014594:	4422      	add	r2, r4
 8014596:	b212      	sxth	r2, r2
 8014598:	4293      	cmp	r3, r2
 801459a:	da15      	bge.n	80145c8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801459c:	8882      	ldrh	r2, [r0, #4]
 801459e:	4413      	add	r3, r2
 80145a0:	b21b      	sxth	r3, r3
 80145a2:	429c      	cmp	r4, r3
 80145a4:	da10      	bge.n	80145c8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80145a6:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80145aa:	88c9      	ldrh	r1, [r1, #6]
 80145ac:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80145b0:	4419      	add	r1, r3
 80145b2:	b209      	sxth	r1, r1
 80145b4:	428a      	cmp	r2, r1
 80145b6:	da07      	bge.n	80145c8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80145b8:	88c0      	ldrh	r0, [r0, #6]
 80145ba:	4410      	add	r0, r2
 80145bc:	b200      	sxth	r0, r0
 80145be:	4283      	cmp	r3, r0
 80145c0:	bfac      	ite	ge
 80145c2:	2000      	movge	r0, #0
 80145c4:	2001      	movlt	r0, #1
 80145c6:	bd10      	pop	{r4, pc}
 80145c8:	2000      	movs	r0, #0
 80145ca:	e7fc      	b.n	80145c6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080145cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80145cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145d0:	4604      	mov	r4, r0
 80145d2:	b08b      	sub	sp, #44	; 0x2c
 80145d4:	6808      	ldr	r0, [r1, #0]
 80145d6:	6849      	ldr	r1, [r1, #4]
 80145d8:	ab04      	add	r3, sp, #16
 80145da:	c303      	stmia	r3!, {r0, r1}
 80145dc:	4b37      	ldr	r3, [pc, #220]	; (80146bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf0>)
 80145de:	781b      	ldrb	r3, [r3, #0]
 80145e0:	2b01      	cmp	r3, #1
 80145e2:	6823      	ldr	r3, [r4, #0]
 80145e4:	4621      	mov	r1, r4
 80145e6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80145e8:	a806      	add	r0, sp, #24
 80145ea:	bf1f      	itttt	ne
 80145ec:	f10d 090e 	addne.w	r9, sp, #14
 80145f0:	ae05      	addne	r6, sp, #20
 80145f2:	f10d 0516 	addne.w	r5, sp, #22
 80145f6:	f10d 0812 	addne.w	r8, sp, #18
 80145fa:	bf01      	itttt	eq
 80145fc:	f10d 0916 	addeq.w	r9, sp, #22
 8014600:	f10d 060e 	addeq.w	r6, sp, #14
 8014604:	ad05      	addeq	r5, sp, #20
 8014606:	f10d 0810 	addeq.w	r8, sp, #16
 801460a:	4798      	blx	r3
 801460c:	f04f 0a00 	mov.w	sl, #0
 8014610:	f647 7bff 	movw	fp, #32767	; 0x7fff
 8014614:	f9b5 3000 	ldrsh.w	r3, [r5]
 8014618:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 801461c:	2b00      	cmp	r3, #0
 801461e:	d042      	beq.n	80146a6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xda>
 8014620:	4293      	cmp	r3, r2
 8014622:	bfa8      	it	ge
 8014624:	4613      	movge	r3, r2
 8014626:	f8ad 300e 	strh.w	r3, [sp, #14]
 801462a:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 801462e:	2f00      	cmp	r7, #0
 8014630:	dd21      	ble.n	8014676 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xaa>
 8014632:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8014636:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801463a:	f9b6 2000 	ldrsh.w	r2, [r6]
 801463e:	f9b9 3000 	ldrsh.w	r3, [r9]
 8014642:	f8ad 0020 	strh.w	r0, [sp, #32]
 8014646:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 801464a:	a808      	add	r0, sp, #32
 801464c:	a906      	add	r1, sp, #24
 801464e:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8014652:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8014656:	f7ff ff97 	bl	8014588 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801465a:	9001      	str	r0, [sp, #4]
 801465c:	b1d0      	cbz	r0, 8014694 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 801465e:	6822      	ldr	r2, [r4, #0]
 8014660:	a908      	add	r1, sp, #32
 8014662:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8014664:	4620      	mov	r0, r4
 8014666:	4790      	blx	r2
 8014668:	b9a0      	cbnz	r0, 8014694 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 801466a:	9b01      	ldr	r3, [sp, #4]
 801466c:	107f      	asrs	r7, r7, #1
 801466e:	f8ad 700e 	strh.w	r7, [sp, #14]
 8014672:	469a      	mov	sl, r3
 8014674:	e7d9      	b.n	801462a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8014676:	d10d      	bne.n	8014694 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 8014678:	2301      	movs	r3, #1
 801467a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801467e:	f8b8 2000 	ldrh.w	r2, [r8]
 8014682:	f8bd 100e 	ldrh.w	r1, [sp, #14]
 8014686:	440a      	add	r2, r1
 8014688:	f8a8 2000 	strh.w	r2, [r8]
 801468c:	882b      	ldrh	r3, [r5, #0]
 801468e:	1a5b      	subs	r3, r3, r1
 8014690:	802b      	strh	r3, [r5, #0]
 8014692:	e7bf      	b.n	8014614 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014694:	f1ba 0f00 	cmp.w	sl, #0
 8014698:	d0f1      	beq.n	801467e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb2>
 801469a:	f9b4 302c 	ldrsh.w	r3, [r4, #44]	; 0x2c
 801469e:	455b      	cmp	r3, fp
 80146a0:	bf08      	it	eq
 80146a2:	85a7      	strheq	r7, [r4, #44]	; 0x2c
 80146a4:	e7eb      	b.n	801467e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb2>
 80146a6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80146aa:	429a      	cmp	r2, r3
 80146ac:	bf04      	itt	eq
 80146ae:	f647 73fe 	movweq	r3, #32766	; 0x7ffe
 80146b2:	85a3      	strheq	r3, [r4, #44]	; 0x2c
 80146b4:	b00b      	add	sp, #44	; 0x2c
 80146b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80146ba:	bf00      	nop
 80146bc:	2001e1b8 	.word	0x2001e1b8

080146c0 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 80146c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80146c2:	6803      	ldr	r3, [r0, #0]
 80146c4:	b085      	sub	sp, #20
 80146c6:	4604      	mov	r4, r0
 80146c8:	4601      	mov	r1, r0
 80146ca:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80146cc:	4668      	mov	r0, sp
 80146ce:	4798      	blx	r3
 80146d0:	f9b4 6008 	ldrsh.w	r6, [r4, #8]
 80146d4:	f9b4 500a 	ldrsh.w	r5, [r4, #10]
 80146d8:	f8ad 600c 	strh.w	r6, [sp, #12]
 80146dc:	2300      	movs	r3, #0
 80146de:	a902      	add	r1, sp, #8
 80146e0:	4668      	mov	r0, sp
 80146e2:	9302      	str	r3, [sp, #8]
 80146e4:	f8ad 500e 	strh.w	r5, [sp, #14]
 80146e8:	f7ff ff4e 	bl	8014588 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80146ec:	b340      	cbz	r0, 8014740 <_ZNK8touchgfx12CanvasWidget10invalidateEv+0x80>
 80146ee:	f9bd 2000 	ldrsh.w	r2, [sp]
 80146f2:	f8bd 7004 	ldrh.w	r7, [sp, #4]
 80146f6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80146fa:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 80146fe:	443a      	add	r2, r7
 8014700:	b292      	uxth	r2, r2
 8014702:	b217      	sxth	r7, r2
 8014704:	42be      	cmp	r6, r7
 8014706:	bfd8      	it	le
 8014708:	b2b2      	uxthle	r2, r6
 801470a:	1a12      	subs	r2, r2, r0
 801470c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014710:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014714:	f8ad 0000 	strh.w	r0, [sp]
 8014718:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 801471c:	4413      	add	r3, r2
 801471e:	b29b      	uxth	r3, r3
 8014720:	b21a      	sxth	r2, r3
 8014722:	4295      	cmp	r5, r2
 8014724:	bfd8      	it	le
 8014726:	b2ab      	uxthle	r3, r5
 8014728:	1a5b      	subs	r3, r3, r1
 801472a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801472e:	f8ad 1002 	strh.w	r1, [sp, #2]
 8014732:	6823      	ldr	r3, [r4, #0]
 8014734:	4669      	mov	r1, sp
 8014736:	691b      	ldr	r3, [r3, #16]
 8014738:	4620      	mov	r0, r4
 801473a:	4798      	blx	r3
 801473c:	b005      	add	sp, #20
 801473e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014740:	e9cd 0000 	strd	r0, r0, [sp]
 8014744:	e7f5      	b.n	8014732 <_ZNK8touchgfx12CanvasWidget10invalidateEv+0x72>
	...

08014748 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8014748:	2101      	movs	r1, #1
 801474a:	2200      	movs	r2, #0
 801474c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8014750:	490c      	ldr	r1, [pc, #48]	; (8014784 <_ZN8touchgfx12CanvasWidgetC1Ev+0x3c>)
 8014752:	8082      	strh	r2, [r0, #4]
 8014754:	80c2      	strh	r2, [r0, #6]
 8014756:	8102      	strh	r2, [r0, #8]
 8014758:	8142      	strh	r2, [r0, #10]
 801475a:	8182      	strh	r2, [r0, #12]
 801475c:	81c2      	strh	r2, [r0, #14]
 801475e:	8202      	strh	r2, [r0, #16]
 8014760:	8242      	strh	r2, [r0, #18]
 8014762:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8014766:	61c2      	str	r2, [r0, #28]
 8014768:	8402      	strh	r2, [r0, #32]
 801476a:	8442      	strh	r2, [r0, #34]	; 0x22
 801476c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8014770:	6001      	str	r1, [r0, #0]
 8014772:	6282      	str	r2, [r0, #40]	; 0x28
 8014774:	21ff      	movs	r1, #255	; 0xff
 8014776:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801477a:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 801477e:	8582      	strh	r2, [r0, #44]	; 0x2c
 8014780:	4770      	bx	lr
 8014782:	bf00      	nop
 8014784:	08033ef0 	.word	0x08033ef0

08014788 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 8014788:	b530      	push	{r4, r5, lr}
 801478a:	460d      	mov	r5, r1
 801478c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 801478e:	8949      	ldrh	r1, [r1, #10]
 8014790:	1ac9      	subs	r1, r1, r3
 8014792:	6803      	ldr	r3, [r0, #0]
 8014794:	b085      	sub	sp, #20
 8014796:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 801479a:	f10d 0206 	add.w	r2, sp, #6
 801479e:	b209      	sxth	r1, r1
 80147a0:	4604      	mov	r4, r0
 80147a2:	4798      	blx	r3
 80147a4:	b1a0      	cbz	r0, 80147d0 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80147a6:	792b      	ldrb	r3, [r5, #4]
 80147a8:	b993      	cbnz	r3, 80147d0 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80147aa:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 80147ae:	b178      	cbz	r0, 80147d0 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80147b0:	6803      	ldr	r3, [r0, #0]
 80147b2:	68db      	ldr	r3, [r3, #12]
 80147b4:	4798      	blx	r3
 80147b6:	b158      	cbz	r0, 80147d0 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80147b8:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80147bc:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 80147c0:	f8ad 3008 	strh.w	r3, [sp, #8]
 80147c4:	9503      	str	r5, [sp, #12]
 80147c6:	6803      	ldr	r3, [r0, #0]
 80147c8:	aa02      	add	r2, sp, #8
 80147ca:	689b      	ldr	r3, [r3, #8]
 80147cc:	4621      	mov	r1, r4
 80147ce:	4798      	blx	r3
 80147d0:	b005      	add	sp, #20
 80147d2:	bd30      	pop	{r4, r5, pc}

080147d4 <_ZN8touchgfx15StaticDataGraph24setGraphRangeXAutoScaledEbi>:
 80147d4:	b430      	push	{r4, r5}
 80147d6:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 80147da:	b1cd      	cbz	r5, 8014810 <_ZN8touchgfx15StaticDataGraph24setGraphRangeXAutoScaledEbi+0x3c>
 80147dc:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80147e0:	f8d0 413c 	ldr.w	r4, [r0, #316]	; 0x13c
 80147e4:	3d01      	subs	r5, #1
 80147e6:	6823      	ldr	r3, [r4, #0]
 80147e8:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
 80147ec:	b139      	cbz	r1, 80147fe <_ZN8touchgfx15StaticDataGraph24setGraphRangeXAutoScaledEbi+0x2a>
 80147ee:	4293      	cmp	r3, r2
 80147f0:	f1c2 0100 	rsb	r1, r2, #0
 80147f4:	bfa8      	it	ge
 80147f6:	4613      	movge	r3, r2
 80147f8:	428c      	cmp	r4, r1
 80147fa:	bfb8      	it	lt
 80147fc:	460c      	movlt	r4, r1
 80147fe:	1a99      	subs	r1, r3, r2
 8014800:	4422      	add	r2, r4
 8014802:	4291      	cmp	r1, r2
 8014804:	d004      	beq.n	8014810 <_ZN8touchgfx15StaticDataGraph24setGraphRangeXAutoScaledEbi+0x3c>
 8014806:	6803      	ldr	r3, [r0, #0]
 8014808:	bc30      	pop	{r4, r5}
 801480a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 801480e:	4718      	bx	r3
 8014810:	bc30      	pop	{r4, r5}
 8014812:	4770      	bx	lr

08014814 <_ZN8touchgfx15StaticDataGraph11deleteValueEi>:
 8014814:	b410      	push	{r4}
 8014816:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 801481a:	2300      	movs	r3, #0
 801481c:	429a      	cmp	r2, r3
 801481e:	dd0e      	ble.n	801483e <_ZN8touchgfx15StaticDataGraph11deleteValueEi+0x2a>
 8014820:	f8d0 413c 	ldr.w	r4, [r0, #316]	; 0x13c
 8014824:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 8014828:	428c      	cmp	r4, r1
 801482a:	d106      	bne.n	801483a <_ZN8touchgfx15StaticDataGraph11deleteValueEi+0x26>
 801482c:	6802      	ldr	r2, [r0, #0]
 801482e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014832:	f8d2 2130 	ldr.w	r2, [r2, #304]	; 0x130
 8014836:	4619      	mov	r1, r3
 8014838:	4710      	bx	r2
 801483a:	3301      	adds	r3, #1
 801483c:	e7ee      	b.n	801481c <_ZN8touchgfx15StaticDataGraph11deleteValueEi+0x8>
 801483e:	f04f 30ff 	mov.w	r0, #4294967295
 8014842:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014846:	4770      	bx	lr

08014848 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 8014848:	b508      	push	{r3, lr}
 801484a:	b929      	cbnz	r1, 8014858 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib+0x10>
 801484c:	4b03      	ldr	r3, [pc, #12]	; (801485c <_ZN8touchgfx17AbstractDataGraph9setScaleXEib+0x14>)
 801484e:	4a04      	ldr	r2, [pc, #16]	; (8014860 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib+0x18>)
 8014850:	4804      	ldr	r0, [pc, #16]	; (8014864 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib+0x1c>)
 8014852:	2171      	movs	r1, #113	; 0x71
 8014854:	f017 fbce 	bl	802bff4 <__assert_func>
 8014858:	6301      	str	r1, [r0, #48]	; 0x30
 801485a:	bd08      	pop	{r3, pc}
 801485c:	08033fff 	.word	0x08033fff
 8014860:	08034352 	.word	0x08034352
 8014864:	0803123f 	.word	0x0803123f

08014868 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 8014868:	b508      	push	{r3, lr}
 801486a:	b929      	cbnz	r1, 8014878 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib+0x10>
 801486c:	4b03      	ldr	r3, [pc, #12]	; (801487c <_ZN8touchgfx17AbstractDataGraph9setScaleYEib+0x14>)
 801486e:	4a04      	ldr	r2, [pc, #16]	; (8014880 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib+0x18>)
 8014870:	4804      	ldr	r0, [pc, #16]	; (8014884 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib+0x1c>)
 8014872:	2193      	movs	r1, #147	; 0x93
 8014874:	f017 fbbe 	bl	802bff4 <__assert_func>
 8014878:	6341      	str	r1, [r0, #52]	; 0x34
 801487a:	bd08      	pop	{r3, pc}
 801487c:	08033fff 	.word	0x08033fff
 8014880:	08034391 	.word	0x08034391
 8014884:	0803123f 	.word	0x0803123f

08014888 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 8014888:	2300      	movs	r3, #0
 801488a:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 801488e:	3038      	adds	r0, #56	; 0x38
 8014890:	f005 bd77 	b.w	801a382 <_ZNK8touchgfx8Drawable10invalidateEv>

08014894 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi>:
 8014894:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014898:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 801489c:	4604      	mov	r4, r0
 801489e:	4688      	mov	r8, r1
 80148a0:	4616      	mov	r6, r2
 80148a2:	2b00      	cmp	r3, #0
 80148a4:	d04e      	beq.n	8014944 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0xb0>
 80148a6:	6803      	ldr	r3, [r0, #0]
 80148a8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80148ac:	4798      	blx	r3
 80148ae:	6823      	ldr	r3, [r4, #0]
 80148b0:	4605      	mov	r5, r0
 80148b2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80148b6:	4620      	mov	r0, r4
 80148b8:	4798      	blx	r3
 80148ba:	4285      	cmp	r5, r0
 80148bc:	bfc8      	it	gt
 80148be:	b22b      	sxthgt	r3, r5
 80148c0:	f8d4 e13c 	ldr.w	lr, [r4, #316]	; 0x13c
 80148c4:	bfc4      	itt	gt
 80148c6:	4605      	movgt	r5, r0
 80148c8:	4618      	movgt	r0, r3
 80148ca:	2300      	movs	r3, #0
 80148cc:	f85e 2023 	ldr.w	r2, [lr, r3, lsl #2]
 80148d0:	42aa      	cmp	r2, r5
 80148d2:	ea4f 0183 	mov.w	r1, r3, lsl #2
 80148d6:	da05      	bge.n	80148e4 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x50>
 80148d8:	f9b4 711e 	ldrsh.w	r7, [r4, #286]	; 0x11e
 80148dc:	42bb      	cmp	r3, r7
 80148de:	da01      	bge.n	80148e4 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x50>
 80148e0:	3301      	adds	r3, #1
 80148e2:	e7f3      	b.n	80148cc <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x38>
 80148e4:	4282      	cmp	r2, r0
 80148e6:	dc2d      	bgt.n	8014944 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0xb0>
 80148e8:	f8d4 c140 	ldr.w	ip, [r4, #320]	; 0x140
 80148ec:	f85c 5001 	ldr.w	r5, [ip, r1]
 80148f0:	3301      	adds	r3, #1
 80148f2:	462a      	mov	r2, r5
 80148f4:	f85e 1023 	ldr.w	r1, [lr, r3, lsl #2]
 80148f8:	4288      	cmp	r0, r1
 80148fa:	dd0d      	ble.n	8014918 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x84>
 80148fc:	f9b4 111e 	ldrsh.w	r1, [r4, #286]	; 0x11e
 8014900:	428b      	cmp	r3, r1
 8014902:	da09      	bge.n	8014918 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x84>
 8014904:	f85c 7023 	ldr.w	r7, [ip, r3, lsl #2]
 8014908:	42bd      	cmp	r5, r7
 801490a:	bfa8      	it	ge
 801490c:	463d      	movge	r5, r7
 801490e:	42ba      	cmp	r2, r7
 8014910:	bfb8      	it	lt
 8014912:	463a      	movlt	r2, r7
 8014914:	3301      	adds	r3, #1
 8014916:	e7ed      	b.n	80148f4 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x60>
 8014918:	f1b8 0f00 	cmp.w	r8, #0
 801491c:	d007      	beq.n	801492e <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x9a>
 801491e:	42b5      	cmp	r5, r6
 8014920:	f1c6 0300 	rsb	r3, r6, #0
 8014924:	bfa8      	it	ge
 8014926:	4635      	movge	r5, r6
 8014928:	429a      	cmp	r2, r3
 801492a:	bfb8      	it	lt
 801492c:	461a      	movlt	r2, r3
 801492e:	1ba9      	subs	r1, r5, r6
 8014930:	4432      	add	r2, r6
 8014932:	4291      	cmp	r1, r2
 8014934:	d006      	beq.n	8014944 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0xb0>
 8014936:	6823      	ldr	r3, [r4, #0]
 8014938:	4620      	mov	r0, r4
 801493a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801493e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8014942:	4718      	bx	r3
 8014944:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014948 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 8014948:	4291      	cmp	r1, r2
 801494a:	b510      	push	{r4, lr}
 801494c:	4604      	mov	r4, r0
 801494e:	d106      	bne.n	801495e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x16>
 8014950:	4b12      	ldr	r3, [pc, #72]	; (801499c <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x54>)
 8014952:	4a13      	ldr	r2, [pc, #76]	; (80149a0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x58>)
 8014954:	4813      	ldr	r0, [pc, #76]	; (80149a4 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x5c>)
 8014956:	f240 1111 	movw	r1, #273	; 0x111
 801495a:	f017 fb4b 	bl	802bff4 <__assert_func>
 801495e:	bfc2      	ittt	gt
 8014960:	460b      	movgt	r3, r1
 8014962:	4611      	movgt	r1, r2
 8014964:	461a      	movgt	r2, r3
 8014966:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 801496a:	428b      	cmp	r3, r1
 801496c:	d103      	bne.n	8014976 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x2e>
 801496e:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 8014972:	4293      	cmp	r3, r2
 8014974:	d011      	beq.n	801499a <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x52>
 8014976:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 801497a:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 801497e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8014982:	f005 fcfe 	bl	801a382 <_ZNK8touchgfx8Drawable10invalidateEv>
 8014986:	f104 0038 	add.w	r0, r4, #56	; 0x38
 801498a:	f005 fcfa 	bl	801a382 <_ZNK8touchgfx8Drawable10invalidateEv>
 801498e:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 8014992:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014996:	f005 bcf4 	b.w	801a382 <_ZNK8touchgfx8Drawable10invalidateEv>
 801499a:	bd10      	pop	{r4, pc}
 801499c:	08033fb6 	.word	0x08033fb6
 80149a0:	080342c0 	.word	0x080342c0
 80149a4:	08033fc1 	.word	0x08033fc1

080149a8 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 80149a8:	4291      	cmp	r1, r2
 80149aa:	b510      	push	{r4, lr}
 80149ac:	4604      	mov	r4, r0
 80149ae:	d106      	bne.n	80149be <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x16>
 80149b0:	4b12      	ldr	r3, [pc, #72]	; (80149fc <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x54>)
 80149b2:	4a13      	ldr	r2, [pc, #76]	; (8014a00 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x58>)
 80149b4:	4813      	ldr	r0, [pc, #76]	; (8014a04 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x5c>)
 80149b6:	f44f 7192 	mov.w	r1, #292	; 0x124
 80149ba:	f017 fb1b 	bl	802bff4 <__assert_func>
 80149be:	bfc2      	ittt	gt
 80149c0:	460b      	movgt	r3, r1
 80149c2:	4611      	movgt	r1, r2
 80149c4:	461a      	movgt	r2, r3
 80149c6:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 80149ca:	428b      	cmp	r3, r1
 80149cc:	d103      	bne.n	80149d6 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x2e>
 80149ce:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 80149d2:	4293      	cmp	r3, r2
 80149d4:	d011      	beq.n	80149fa <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x52>
 80149d6:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 80149da:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 80149de:	f104 0064 	add.w	r0, r4, #100	; 0x64
 80149e2:	f005 fcce 	bl	801a382 <_ZNK8touchgfx8Drawable10invalidateEv>
 80149e6:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80149ea:	f005 fcca 	bl	801a382 <_ZNK8touchgfx8Drawable10invalidateEv>
 80149ee:	f104 0090 	add.w	r0, r4, #144	; 0x90
 80149f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80149f6:	f005 bcc4 	b.w	801a382 <_ZNK8touchgfx8Drawable10invalidateEv>
 80149fa:	bd10      	pop	{r4, pc}
 80149fc:	08033fb6 	.word	0x08033fb6
 8014a00:	08034309 	.word	0x08034309
 8014a04:	08033fc1 	.word	0x08033fc1

08014a08 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 8014a08:	b530      	push	{r4, r5, lr}
 8014a0a:	790b      	ldrb	r3, [r1, #4]
 8014a0c:	2b02      	cmp	r3, #2
 8014a0e:	b085      	sub	sp, #20
 8014a10:	4604      	mov	r4, r0
 8014a12:	460d      	mov	r5, r1
 8014a14:	d020      	beq.n	8014a58 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8014a16:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8014a18:	88c9      	ldrh	r1, [r1, #6]
 8014a1a:	1ac9      	subs	r1, r1, r3
 8014a1c:	6803      	ldr	r3, [r0, #0]
 8014a1e:	f10d 0206 	add.w	r2, sp, #6
 8014a22:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 8014a26:	b209      	sxth	r1, r1
 8014a28:	4798      	blx	r3
 8014a2a:	b1a8      	cbz	r0, 8014a58 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8014a2c:	792b      	ldrb	r3, [r5, #4]
 8014a2e:	2b01      	cmp	r3, #1
 8014a30:	d812      	bhi.n	8014a58 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8014a32:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 8014a36:	b178      	cbz	r0, 8014a58 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8014a38:	6803      	ldr	r3, [r0, #0]
 8014a3a:	68db      	ldr	r3, [r3, #12]
 8014a3c:	4798      	blx	r3
 8014a3e:	b158      	cbz	r0, 8014a58 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8014a40:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8014a44:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 8014a48:	f8ad 3008 	strh.w	r3, [sp, #8]
 8014a4c:	9503      	str	r5, [sp, #12]
 8014a4e:	6803      	ldr	r3, [r0, #0]
 8014a50:	aa02      	add	r2, sp, #8
 8014a52:	689b      	ldr	r3, [r3, #8]
 8014a54:	4621      	mov	r1, r4
 8014a56:	4798      	blx	r3
 8014a58:	b005      	add	sp, #20
 8014a5a:	bd30      	pop	{r4, r5, pc}

08014a5c <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 8014a5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014a60:	4604      	mov	r4, r0
 8014a62:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 8014a66:	9f06      	ldr	r7, [sp, #24]
 8014a68:	4690      	mov	r8, r2
 8014a6a:	461e      	mov	r6, r3
 8014a6c:	b928      	cbnz	r0, 8014a7a <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 8014a6e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014a72:	803b      	strh	r3, [r7, #0]
 8014a74:	8033      	strh	r3, [r6, #0]
 8014a76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014a7a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 8014a7e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 8014a82:	1883      	adds	r3, r0, r2
 8014a84:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 8014a88:	1ad2      	subs	r2, r2, r3
 8014a8a:	b212      	sxth	r2, r2
 8014a8c:	2a01      	cmp	r2, #1
 8014a8e:	dc07      	bgt.n	8014aa0 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 8014a90:	2300      	movs	r3, #0
 8014a92:	8033      	strh	r3, [r6, #0]
 8014a94:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 8014a98:	3b01      	subs	r3, #1
 8014a9a:	803b      	strh	r3, [r7, #0]
 8014a9c:	2001      	movs	r0, #1
 8014a9e:	e7ea      	b.n	8014a76 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 8014aa0:	f8d4 5130 	ldr.w	r5, [r4, #304]	; 0x130
 8014aa4:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 8014aa8:	1a08      	subs	r0, r1, r0
 8014aaa:	3a01      	subs	r2, #1
 8014aac:	1ae9      	subs	r1, r5, r3
 8014aae:	0140      	lsls	r0, r0, #5
 8014ab0:	f005 fe2f 	bl	801a712 <_ZN8touchgfx6muldivElll>
 8014ab4:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 8014ab8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 8014abc:	eb00 1541 	add.w	r5, r0, r1, lsl #5
 8014ac0:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 8014ac4:	1883      	adds	r3, r0, r2
 8014ac6:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 8014aca:	1ad2      	subs	r2, r2, r3
 8014acc:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 8014ad0:	b212      	sxth	r2, r2
 8014ad2:	eba8 0000 	sub.w	r0, r8, r0
 8014ad6:	1a59      	subs	r1, r3, r1
 8014ad8:	3a01      	subs	r2, #1
 8014ada:	0140      	lsls	r0, r0, #5
 8014adc:	f005 fe19 	bl	801a712 <_ZN8touchgfx6muldivElll>
 8014ae0:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 8014ae4:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8014ae8:	4285      	cmp	r5, r0
 8014aea:	bfde      	ittt	le
 8014aec:	4603      	movle	r3, r0
 8014aee:	4628      	movle	r0, r5
 8014af0:	461d      	movle	r5, r3
 8014af2:	2d00      	cmp	r5, #0
 8014af4:	bfa8      	it	ge
 8014af6:	351f      	addge	r5, #31
 8014af8:	f04f 0320 	mov.w	r3, #32
 8014afc:	bfa8      	it	ge
 8014afe:	116d      	asrge	r5, r5, #5
 8014b00:	fb90 f0f3 	sdiv	r0, r0, r3
 8014b04:	bfb8      	it	lt
 8014b06:	fb95 f5f3 	sdivlt	r5, r5, r3
 8014b0a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014b0e:	8033      	strh	r3, [r6, #0]
 8014b10:	f9b4 211e 	ldrsh.w	r2, [r4, #286]	; 0x11e
 8014b14:	f9b6 3000 	ldrsh.w	r3, [r6]
 8014b18:	1e51      	subs	r1, r2, #1
 8014b1a:	428b      	cmp	r3, r1
 8014b1c:	da06      	bge.n	8014b2c <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd0>
 8014b1e:	3301      	adds	r3, #1
 8014b20:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
 8014b24:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8014b28:	4288      	cmp	r0, r1
 8014b2a:	daf0      	bge.n	8014b0e <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xb2>
 8014b2c:	803a      	strh	r2, [r7, #0]
 8014b2e:	f06f 4040 	mvn.w	r0, #3221225472	; 0xc0000000
 8014b32:	f9b7 3000 	ldrsh.w	r3, [r7]
 8014b36:	2b00      	cmp	r3, #0
 8014b38:	dd23      	ble.n	8014b82 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x126>
 8014b3a:	181a      	adds	r2, r3, r0
 8014b3c:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
 8014b40:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8014b44:	42aa      	cmp	r2, r5
 8014b46:	db10      	blt.n	8014b6a <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x10e>
 8014b48:	3b01      	subs	r3, #1
 8014b4a:	803b      	strh	r3, [r7, #0]
 8014b4c:	e7f1      	b.n	8014b32 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd6>
 8014b4e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8014b52:	8032      	strh	r2, [r6, #0]
 8014b54:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8014b58:	f9b7 2000 	ldrsh.w	r2, [r7]
 8014b5c:	4293      	cmp	r3, r2
 8014b5e:	bfdc      	itt	le
 8014b60:	f103 33ff 	addle.w	r3, r3, #4294967295
 8014b64:	b21a      	sxthle	r2, r3
 8014b66:	803a      	strh	r2, [r7, #0]
 8014b68:	e798      	b.n	8014a9c <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>
 8014b6a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8014b6e:	f9b6 2000 	ldrsh.w	r2, [r6]
 8014b72:	3b01      	subs	r3, #1
 8014b74:	429a      	cmp	r2, r3
 8014b76:	dbea      	blt.n	8014b4e <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xf2>
 8014b78:	b21b      	sxth	r3, r3
 8014b7a:	803b      	strh	r3, [r7, #0]
 8014b7c:	2000      	movs	r0, #0
 8014b7e:	8033      	strh	r3, [r6, #0]
 8014b80:	e779      	b.n	8014a76 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 8014b82:	2000      	movs	r0, #0
 8014b84:	8038      	strh	r0, [r7, #0]
 8014b86:	8030      	strh	r0, [r6, #0]
 8014b88:	e775      	b.n	8014a76 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
	...

08014b8c <_ZN8touchgfx9ContainerC1Ev>:
 8014b8c:	2101      	movs	r1, #1
 8014b8e:	2200      	movs	r2, #0
 8014b90:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8014b94:	4909      	ldr	r1, [pc, #36]	; (8014bbc <_ZN8touchgfx9ContainerC1Ev+0x30>)
 8014b96:	8082      	strh	r2, [r0, #4]
 8014b98:	80c2      	strh	r2, [r0, #6]
 8014b9a:	8102      	strh	r2, [r0, #8]
 8014b9c:	8142      	strh	r2, [r0, #10]
 8014b9e:	8182      	strh	r2, [r0, #12]
 8014ba0:	81c2      	strh	r2, [r0, #14]
 8014ba2:	8202      	strh	r2, [r0, #16]
 8014ba4:	8242      	strh	r2, [r0, #18]
 8014ba6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8014baa:	61c2      	str	r2, [r0, #28]
 8014bac:	8402      	strh	r2, [r0, #32]
 8014bae:	8442      	strh	r2, [r0, #34]	; 0x22
 8014bb0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8014bb4:	6001      	str	r1, [r0, #0]
 8014bb6:	6282      	str	r2, [r0, #40]	; 0x28
 8014bb8:	4770      	bx	lr
 8014bba:	bf00      	nop
 8014bbc:	08033294 	.word	0x08033294

08014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 8014bc0:	6800      	ldr	r0, [r0, #0]
 8014bc2:	2800      	cmp	r0, #0
 8014bc4:	bfbd      	ittte	lt
 8014bc6:	380f      	sublt	r0, #15
 8014bc8:	2320      	movlt	r3, #32
 8014bca:	fb90 f0f3 	sdivlt	r0, r0, r3
 8014bce:	3010      	addge	r0, #16
 8014bd0:	bfa8      	it	ge
 8014bd2:	1140      	asrge	r0, r0, #5
 8014bd4:	4770      	bx	lr

08014bd6 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 8014bd6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bda:	4605      	mov	r5, r0
 8014bdc:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 8014be0:	4688      	mov	r8, r1
 8014be2:	4691      	mov	r9, r2
 8014be4:	469a      	mov	sl, r3
 8014be6:	b360      	cbz	r0, 8014c42 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 8014be8:	2700      	movs	r7, #0
 8014bea:	f04f 3bff 	mov.w	fp, #4294967295
 8014bee:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 8014bf2:	b23e      	sxth	r6, r7
 8014bf4:	42b3      	cmp	r3, r6
 8014bf6:	dd23      	ble.n	8014c40 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 8014bf8:	682b      	ldr	r3, [r5, #0]
 8014bfa:	4631      	mov	r1, r6
 8014bfc:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8014c00:	4628      	mov	r0, r5
 8014c02:	4798      	blx	r3
 8014c04:	9001      	str	r0, [sp, #4]
 8014c06:	a801      	add	r0, sp, #4
 8014c08:	f7ff ffda 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8014c0c:	682b      	ldr	r3, [r5, #0]
 8014c0e:	eba0 0008 	sub.w	r0, r0, r8
 8014c12:	b204      	sxth	r4, r0
 8014c14:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8014c18:	4631      	mov	r1, r6
 8014c1a:	4628      	mov	r0, r5
 8014c1c:	4798      	blx	r3
 8014c1e:	9001      	str	r0, [sp, #4]
 8014c20:	a801      	add	r0, sp, #4
 8014c22:	f7ff ffcd 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8014c26:	eba0 0009 	sub.w	r0, r0, r9
 8014c2a:	fb10 f000 	smulbb	r0, r0, r0
 8014c2e:	fb04 0404 	mla	r4, r4, r4, r0
 8014c32:	455c      	cmp	r4, fp
 8014c34:	bf3c      	itt	cc
 8014c36:	f8aa 6000 	strhcc.w	r6, [sl]
 8014c3a:	46a3      	movcc	fp, r4
 8014c3c:	3701      	adds	r7, #1
 8014c3e:	e7d6      	b.n	8014bee <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 8014c40:	2001      	movs	r0, #1
 8014c42:	b003      	add	sp, #12
 8014c44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014c48 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 8014c48:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014c4c:	4604      	mov	r4, r0
 8014c4e:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 8014c52:	4688      	mov	r8, r1
 8014c54:	4691      	mov	r9, r2
 8014c56:	b1f8      	cbz	r0, 8014c98 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 8014c58:	2500      	movs	r5, #0
 8014c5a:	f04f 37ff 	mov.w	r7, #4294967295
 8014c5e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8014c62:	b22e      	sxth	r6, r5
 8014c64:	42b3      	cmp	r3, r6
 8014c66:	dd16      	ble.n	8014c96 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 8014c68:	6823      	ldr	r3, [r4, #0]
 8014c6a:	4631      	mov	r1, r6
 8014c6c:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8014c70:	4620      	mov	r0, r4
 8014c72:	4798      	blx	r3
 8014c74:	9001      	str	r0, [sp, #4]
 8014c76:	a801      	add	r0, sp, #4
 8014c78:	f7ff ffa2 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8014c7c:	b200      	sxth	r0, r0
 8014c7e:	eba0 0008 	sub.w	r0, r0, r8
 8014c82:	2800      	cmp	r0, #0
 8014c84:	bfb8      	it	lt
 8014c86:	4240      	neglt	r0, r0
 8014c88:	42b8      	cmp	r0, r7
 8014c8a:	bf3c      	itt	cc
 8014c8c:	f8a9 6000 	strhcc.w	r6, [r9]
 8014c90:	4607      	movcc	r7, r0
 8014c92:	3501      	adds	r5, #1
 8014c94:	e7e3      	b.n	8014c5e <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 8014c96:	2001      	movs	r0, #1
 8014c98:	b003      	add	sp, #12
 8014c9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08014c9e <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 8014c9e:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 8014ca2:	f9bd 3000 	ldrsh.w	r3, [sp]
 8014ca6:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 8014caa:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 8014cae:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 8014cb2:	4770      	bx	lr

08014cb4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 8014cb4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014cb6:	4604      	mov	r4, r0
 8014cb8:	3038      	adds	r0, #56	; 0x38
 8014cba:	460d      	mov	r5, r1
 8014cbc:	f7fd f8e6 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014cc0:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 8014cc4:	9200      	str	r2, [sp, #0]
 8014cc6:	2200      	movs	r2, #0
 8014cc8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8014ccc:	4611      	mov	r1, r2
 8014cce:	4628      	mov	r0, r5
 8014cd0:	f7ef fe86 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014cd4:	b003      	add	sp, #12
 8014cd6:	bd30      	pop	{r4, r5, pc}

08014cd8 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 8014cd8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014cda:	4604      	mov	r4, r0
 8014cdc:	3064      	adds	r0, #100	; 0x64
 8014cde:	460d      	mov	r5, r1
 8014ce0:	f7fd f8d4 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014ce4:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 8014ce8:	9200      	str	r2, [sp, #0]
 8014cea:	2200      	movs	r2, #0
 8014cec:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 8014cf0:	4611      	mov	r1, r2
 8014cf2:	4628      	mov	r0, r5
 8014cf4:	f7ef fe74 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014cf8:	b003      	add	sp, #12
 8014cfa:	bd30      	pop	{r4, r5, pc}

08014cfc <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 8014cfc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014cfe:	4604      	mov	r4, r0
 8014d00:	30e8      	adds	r0, #232	; 0xe8
 8014d02:	460d      	mov	r5, r1
 8014d04:	f7fd f8c2 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014d08:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 8014d0c:	9200      	str	r2, [sp, #0]
 8014d0e:	2200      	movs	r2, #0
 8014d10:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 8014d14:	4611      	mov	r1, r2
 8014d16:	4628      	mov	r0, r5
 8014d18:	f7ef fe62 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014d1c:	b003      	add	sp, #12
 8014d1e:	bd30      	pop	{r4, r5, pc}

08014d20 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 8014d20:	b538      	push	{r3, r4, r5, lr}
 8014d22:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8014d26:	428b      	cmp	r3, r1
 8014d28:	460d      	mov	r5, r1
 8014d2a:	dd08      	ble.n	8014d3e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8014d2c:	6e04      	ldr	r4, [r0, #96]	; 0x60
 8014d2e:	b134      	cbz	r4, 8014d3e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8014d30:	6823      	ldr	r3, [r4, #0]
 8014d32:	4620      	mov	r0, r4
 8014d34:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8014d36:	4629      	mov	r1, r5
 8014d38:	4798      	blx	r3
 8014d3a:	69a4      	ldr	r4, [r4, #24]
 8014d3c:	e7f7      	b.n	8014d2e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 8014d3e:	bd38      	pop	{r3, r4, r5, pc}

08014d40 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi>:
 8014d40:	b570      	push	{r4, r5, r6, lr}
 8014d42:	1e0c      	subs	r4, r1, #0
 8014d44:	4605      	mov	r5, r0
 8014d46:	db03      	blt.n	8014d50 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x10>
 8014d48:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8014d4c:	42a3      	cmp	r3, r4
 8014d4e:	dc06      	bgt.n	8014d5e <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x1e>
 8014d50:	4b11      	ldr	r3, [pc, #68]	; (8014d98 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x58>)
 8014d52:	4a12      	ldr	r2, [pc, #72]	; (8014d9c <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x5c>)
 8014d54:	4812      	ldr	r0, [pc, #72]	; (8014da0 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x60>)
 8014d56:	f44f 7107 	mov.w	r1, #540	; 0x21c
 8014d5a:	f017 f94b 	bl	802bff4 <__assert_func>
 8014d5e:	b226      	sxth	r6, r4
 8014d60:	4631      	mov	r1, r6
 8014d62:	f7ff ffdd 	bl	8014d20 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 8014d66:	f8b5 311e 	ldrh.w	r3, [r5, #286]	; 0x11e
 8014d6a:	3b01      	subs	r3, #1
 8014d6c:	f8a5 311e 	strh.w	r3, [r5, #286]	; 0x11e
 8014d70:	00a3      	lsls	r3, r4, #2
 8014d72:	f9b5 111e 	ldrsh.w	r1, [r5, #286]	; 0x11e
 8014d76:	42a1      	cmp	r1, r4
 8014d78:	f103 0204 	add.w	r2, r3, #4
 8014d7c:	dd0a      	ble.n	8014d94 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x54>
 8014d7e:	f8d5 113c 	ldr.w	r1, [r5, #316]	; 0x13c
 8014d82:	5888      	ldr	r0, [r1, r2]
 8014d84:	50c8      	str	r0, [r1, r3]
 8014d86:	f8d5 1140 	ldr.w	r1, [r5, #320]	; 0x140
 8014d8a:	5888      	ldr	r0, [r1, r2]
 8014d8c:	50c8      	str	r0, [r1, r3]
 8014d8e:	3401      	adds	r4, #1
 8014d90:	4613      	mov	r3, r2
 8014d92:	e7ee      	b.n	8014d72 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x32>
 8014d94:	4630      	mov	r0, r6
 8014d96:	bd70      	pop	{r4, r5, r6, pc}
 8014d98:	080311b0 	.word	0x080311b0
 8014d9c:	08034284 	.word	0x08034284
 8014da0:	08033fc1 	.word	0x08033fc1

08014da4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 8014da4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014da6:	6e05      	ldr	r5, [r0, #96]	; 0x60
 8014da8:	4604      	mov	r4, r0
 8014daa:	b15d      	cbz	r5, 8014dc4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 8014dac:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 8014db0:	9200      	str	r2, [sp, #0]
 8014db2:	2200      	movs	r2, #0
 8014db4:	4628      	mov	r0, r5
 8014db6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8014dba:	4611      	mov	r1, r2
 8014dbc:	f7ef fe10 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014dc0:	69ad      	ldr	r5, [r5, #24]
 8014dc2:	e7f2      	b.n	8014daa <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 8014dc4:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 8014dc8:	b15d      	cbz	r5, 8014de2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 8014dca:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 8014dce:	9200      	str	r2, [sp, #0]
 8014dd0:	2200      	movs	r2, #0
 8014dd2:	4628      	mov	r0, r5
 8014dd4:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 8014dd8:	4611      	mov	r1, r2
 8014dda:	f7ef fe01 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014dde:	69ad      	ldr	r5, [r5, #24]
 8014de0:	e7f2      	b.n	8014dc8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 8014de2:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 8014de6:	b15d      	cbz	r5, 8014e00 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 8014de8:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 8014dec:	9200      	str	r2, [sp, #0]
 8014dee:	2200      	movs	r2, #0
 8014df0:	4628      	mov	r0, r5
 8014df2:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 8014df6:	4611      	mov	r1, r2
 8014df8:	f7ef fdf2 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014dfc:	69ad      	ldr	r5, [r5, #24]
 8014dfe:	e7f2      	b.n	8014de6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 8014e00:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 8014e04:	b15d      	cbz	r5, 8014e1e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 8014e06:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 8014e0a:	9200      	str	r2, [sp, #0]
 8014e0c:	2200      	movs	r2, #0
 8014e0e:	4628      	mov	r0, r5
 8014e10:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 8014e14:	4611      	mov	r1, r2
 8014e16:	f7ef fde3 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014e1a:	69ad      	ldr	r5, [r5, #24]
 8014e1c:	e7f2      	b.n	8014e04 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 8014e1e:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 8014e22:	b15d      	cbz	r5, 8014e3c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 8014e24:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 8014e28:	9200      	str	r2, [sp, #0]
 8014e2a:	2200      	movs	r2, #0
 8014e2c:	4628      	mov	r0, r5
 8014e2e:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 8014e32:	4611      	mov	r1, r2
 8014e34:	f7ef fdd4 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014e38:	69ad      	ldr	r5, [r5, #24]
 8014e3a:	e7f2      	b.n	8014e22 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 8014e3c:	6823      	ldr	r3, [r4, #0]
 8014e3e:	695b      	ldr	r3, [r3, #20]
 8014e40:	4620      	mov	r0, r4
 8014e42:	b003      	add	sp, #12
 8014e44:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8014e48:	4718      	bx	r3

08014e4a <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 8014e4a:	b430      	push	{r4, r5}
 8014e4c:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 8014e50:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 8014e54:	b28a      	uxth	r2, r1
 8014e56:	1b15      	subs	r5, r2, r4
 8014e58:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 8014e5c:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 8014e60:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 8014e64:	442c      	add	r4, r5
 8014e66:	1b12      	subs	r2, r2, r4
 8014e68:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8014e6c:	8101      	strh	r1, [r0, #8]
 8014e6e:	bc30      	pop	{r4, r5}
 8014e70:	f7ff bf98 	b.w	8014da4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08014e74 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 8014e74:	b430      	push	{r4, r5}
 8014e76:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 8014e7a:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 8014e7e:	b28a      	uxth	r2, r1
 8014e80:	1b15      	subs	r5, r2, r4
 8014e82:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 8014e86:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 8014e8a:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 8014e8e:	442c      	add	r4, r5
 8014e90:	1b12      	subs	r2, r2, r4
 8014e92:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 8014e96:	8141      	strh	r1, [r0, #10]
 8014e98:	bc30      	pop	{r4, r5}
 8014e9a:	f7ff bf83 	b.w	8014da4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08014e9e <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 8014e9e:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8014ea2:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 8014ea6:	fa1f fa83 	uxth.w	sl, r3
 8014eaa:	4699      	mov	r9, r3
 8014eac:	8903      	ldrh	r3, [r0, #8]
 8014eae:	4604      	mov	r4, r0
 8014eb0:	4615      	mov	r5, r2
 8014eb2:	fa1f f887 	uxth.w	r8, r7
 8014eb6:	4452      	add	r2, sl
 8014eb8:	8940      	ldrh	r0, [r0, #10]
 8014eba:	1a9b      	subs	r3, r3, r2
 8014ebc:	eb08 0201 	add.w	r2, r8, r1
 8014ec0:	1a80      	subs	r0, r0, r2
 8014ec2:	b200      	sxth	r0, r0
 8014ec4:	460e      	mov	r6, r1
 8014ec6:	9000      	str	r0, [sp, #0]
 8014ec8:	460a      	mov	r2, r1
 8014eca:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8014ece:	4629      	mov	r1, r5
 8014ed0:	b21b      	sxth	r3, r3
 8014ed2:	f7ef fd85 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014ed6:	2200      	movs	r2, #0
 8014ed8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8014edc:	9600      	str	r6, [sp, #0]
 8014ede:	4611      	mov	r1, r2
 8014ee0:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8014ee4:	f7ef fd7c 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014ee8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014eec:	9300      	str	r3, [sp, #0]
 8014eee:	2200      	movs	r2, #0
 8014ef0:	462b      	mov	r3, r5
 8014ef2:	4611      	mov	r1, r2
 8014ef4:	f104 0064 	add.w	r0, r4, #100	; 0x64
 8014ef8:	f7ef fd72 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014efc:	8921      	ldrh	r1, [r4, #8]
 8014efe:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014f02:	9300      	str	r3, [sp, #0]
 8014f04:	eba1 010a 	sub.w	r1, r1, sl
 8014f08:	464b      	mov	r3, r9
 8014f0a:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8014f0e:	2200      	movs	r2, #0
 8014f10:	b209      	sxth	r1, r1
 8014f12:	f7ef fd65 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014f16:	8962      	ldrh	r2, [r4, #10]
 8014f18:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8014f1c:	9700      	str	r7, [sp, #0]
 8014f1e:	eba2 0208 	sub.w	r2, r2, r8
 8014f22:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 8014f26:	b212      	sxth	r2, r2
 8014f28:	2100      	movs	r1, #0
 8014f2a:	f7ef fd59 	bl	80049e0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8014f2e:	4620      	mov	r0, r4
 8014f30:	b002      	add	sp, #8
 8014f32:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014f36:	f7ff bf35 	b.w	8014da4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>
	...

08014f3c <_ZN8touchgfx17AbstractDataGraphC1Es>:
 8014f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f40:	b085      	sub	sp, #20
 8014f42:	4604      	mov	r4, r0
 8014f44:	9103      	str	r1, [sp, #12]
 8014f46:	f7ff fe21 	bl	8014b8c <_ZN8touchgfx9ContainerC1Ev>
 8014f4a:	4b31      	ldr	r3, [pc, #196]	; (8015010 <_ZN8touchgfx17AbstractDataGraphC1Es+0xd4>)
 8014f4c:	6023      	str	r3, [r4, #0]
 8014f4e:	2601      	movs	r6, #1
 8014f50:	23ff      	movs	r3, #255	; 0xff
 8014f52:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 8014f56:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8014f5a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8014f5e:	4658      	mov	r0, fp
 8014f60:	f104 0964 	add.w	r9, r4, #100	; 0x64
 8014f64:	f7ff fe12 	bl	8014b8c <_ZN8touchgfx9ContainerC1Ev>
 8014f68:	f104 0890 	add.w	r8, r4, #144	; 0x90
 8014f6c:	4648      	mov	r0, r9
 8014f6e:	f7ff fe0d 	bl	8014b8c <_ZN8touchgfx9ContainerC1Ev>
 8014f72:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 8014f76:	4640      	mov	r0, r8
 8014f78:	f7ff fe08 	bl	8014b8c <_ZN8touchgfx9ContainerC1Ev>
 8014f7c:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 8014f80:	4650      	mov	r0, sl
 8014f82:	f7ff fe03 	bl	8014b8c <_ZN8touchgfx9ContainerC1Ev>
 8014f86:	4638      	mov	r0, r7
 8014f88:	f7ff fe00 	bl	8014b8c <_ZN8touchgfx9ContainerC1Ev>
 8014f8c:	9903      	ldr	r1, [sp, #12]
 8014f8e:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 8014f92:	2500      	movs	r5, #0
 8014f94:	42a9      	cmp	r1, r5
 8014f96:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8014f9a:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 8014f9e:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 8014fa2:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 8014fa6:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 8014faa:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 8014fae:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8014fb2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8014fb6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8014fba:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8014fbe:	dc05      	bgt.n	8014fcc <_ZN8touchgfx17AbstractDataGraphC1Es+0x90>
 8014fc0:	4b14      	ldr	r3, [pc, #80]	; (8015014 <_ZN8touchgfx17AbstractDataGraphC1Es+0xd8>)
 8014fc2:	4a15      	ldr	r2, [pc, #84]	; (8015018 <_ZN8touchgfx17AbstractDataGraphC1Es+0xdc>)
 8014fc4:	4815      	ldr	r0, [pc, #84]	; (801501c <_ZN8touchgfx17AbstractDataGraphC1Es+0xe0>)
 8014fc6:	211d      	movs	r1, #29
 8014fc8:	f017 f814 	bl	802bff4 <__assert_func>
 8014fcc:	4659      	mov	r1, fp
 8014fce:	4620      	mov	r0, r4
 8014fd0:	f7fc ff5c 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014fd4:	4651      	mov	r1, sl
 8014fd6:	4620      	mov	r0, r4
 8014fd8:	f7fc ff58 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014fdc:	4649      	mov	r1, r9
 8014fde:	4620      	mov	r0, r4
 8014fe0:	f7fc ff54 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014fe4:	4641      	mov	r1, r8
 8014fe6:	4620      	mov	r0, r4
 8014fe8:	f7fc ff50 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014fec:	4639      	mov	r1, r7
 8014fee:	4620      	mov	r0, r4
 8014ff0:	f7fc ff4c 	bl	8011e8c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8014ff4:	4620      	mov	r0, r4
 8014ff6:	9500      	str	r5, [sp, #0]
 8014ff8:	462b      	mov	r3, r5
 8014ffa:	462a      	mov	r2, r5
 8014ffc:	4629      	mov	r1, r5
 8014ffe:	f7ff ff4e 	bl	8014e9e <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 8015002:	4620      	mov	r0, r4
 8015004:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 8015008:	b005      	add	sp, #20
 801500a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801500e:	bf00      	nop
 8015010:	0803415c 	.word	0x0803415c
 8015014:	0803400a 	.word	0x0803400a
 8015018:	080343d0 	.word	0x080343d0
 801501c:	08033fc1 	.word	0x08033fc1

08015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 8015020:	4291      	cmp	r1, r2
 8015022:	4613      	mov	r3, r2
 8015024:	d003      	beq.n	801502e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 8015026:	460a      	mov	r2, r1
 8015028:	4619      	mov	r1, r3
 801502a:	f005 bb72 	b.w	801a712 <_ZN8touchgfx6muldivElll>
 801502e:	4770      	bx	lr

08015030 <_ZN8touchgfx15StaticDataGraph9setScaleXEib>:
 8015030:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015034:	4604      	mov	r4, r0
 8015036:	460f      	mov	r7, r1
 8015038:	b1ba      	cbz	r2, 801506a <_ZN8touchgfx15StaticDataGraph9setScaleXEib+0x3a>
 801503a:	6803      	ldr	r3, [r0, #0]
 801503c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8015040:	4798      	blx	r3
 8015042:	2600      	movs	r6, #0
 8015044:	4681      	mov	r9, r0
 8015046:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 801504a:	b235      	sxth	r5, r6
 801504c:	42ab      	cmp	r3, r5
 801504e:	f106 0601 	add.w	r6, r6, #1
 8015052:	dd0a      	ble.n	801506a <_ZN8touchgfx15StaticDataGraph9setScaleXEib+0x3a>
 8015054:	f8d4 813c 	ldr.w	r8, [r4, #316]	; 0x13c
 8015058:	463a      	mov	r2, r7
 801505a:	4649      	mov	r1, r9
 801505c:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 8015060:	f7ff ffde 	bl	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8015064:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 8015068:	e7ed      	b.n	8015046 <_ZN8touchgfx15StaticDataGraph9setScaleXEib+0x16>
 801506a:	2200      	movs	r2, #0
 801506c:	4639      	mov	r1, r7
 801506e:	4620      	mov	r0, r4
 8015070:	f7ff fbea 	bl	8014848 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>
 8015074:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08015078 <_ZN8touchgfx15StaticDataGraph9setScaleYEib>:
 8015078:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801507c:	4604      	mov	r4, r0
 801507e:	460f      	mov	r7, r1
 8015080:	b1ba      	cbz	r2, 80150b2 <_ZN8touchgfx15StaticDataGraph9setScaleYEib+0x3a>
 8015082:	6803      	ldr	r3, [r0, #0]
 8015084:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8015088:	4798      	blx	r3
 801508a:	2600      	movs	r6, #0
 801508c:	4681      	mov	r9, r0
 801508e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8015092:	b235      	sxth	r5, r6
 8015094:	42ab      	cmp	r3, r5
 8015096:	f106 0601 	add.w	r6, r6, #1
 801509a:	dd0a      	ble.n	80150b2 <_ZN8touchgfx15StaticDataGraph9setScaleYEib+0x3a>
 801509c:	f8d4 8140 	ldr.w	r8, [r4, #320]	; 0x140
 80150a0:	463a      	mov	r2, r7
 80150a2:	4649      	mov	r1, r9
 80150a4:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 80150a8:	f7ff ffba 	bl	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 80150ac:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 80150b0:	e7ed      	b.n	801508e <_ZN8touchgfx15StaticDataGraph9setScaleYEib+0x16>
 80150b2:	2200      	movs	r2, #0
 80150b4:	4639      	mov	r1, r7
 80150b6:	4620      	mov	r0, r4
 80150b8:	f7ff fbd6 	bl	8014868 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>
 80150bc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080150c0 <_ZN8touchgfx9GraphData8addValueEii>:
 80150c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80150c4:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 80150c8:	4605      	mov	r5, r0
 80150ca:	4617      	mov	r7, r2
 80150cc:	2b00      	cmp	r3, #0
 80150ce:	d03e      	beq.n	801514e <_ZN8touchgfx9GraphData8addValueEii+0x8e>
 80150d0:	f8d0 213c 	ldr.w	r2, [r0, #316]	; 0x13c
 80150d4:	f103 4080 	add.w	r0, r3, #1073741824	; 0x40000000
 80150d8:	3801      	subs	r0, #1
 80150da:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 80150de:	4288      	cmp	r0, r1
 80150e0:	db35      	blt.n	801514e <_ZN8touchgfx9GraphData8addValueEii+0x8e>
 80150e2:	2000      	movs	r0, #0
 80150e4:	b204      	sxth	r4, r0
 80150e6:	42a3      	cmp	r3, r4
 80150e8:	dd16      	ble.n	8015118 <_ZN8touchgfx9GraphData8addValueEii+0x58>
 80150ea:	ea4f 0880 	mov.w	r8, r0, lsl #2
 80150ee:	3001      	adds	r0, #1
 80150f0:	f852 6008 	ldr.w	r6, [r2, r8]
 80150f4:	428e      	cmp	r6, r1
 80150f6:	dbf5      	blt.n	80150e4 <_ZN8touchgfx9GraphData8addValueEii+0x24>
 80150f8:	d10f      	bne.n	801511a <_ZN8touchgfx9GraphData8addValueEii+0x5a>
 80150fa:	4621      	mov	r1, r4
 80150fc:	4628      	mov	r0, r5
 80150fe:	f7ff fe0f 	bl	8014d20 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 8015102:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
 8015106:	f843 7008 	str.w	r7, [r3, r8]
 801510a:	4621      	mov	r1, r4
 801510c:	4628      	mov	r0, r5
 801510e:	f7ff fe07 	bl	8014d20 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 8015112:	4620      	mov	r0, r4
 8015114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015118:	d01a      	beq.n	8015150 <_ZN8touchgfx9GraphData8addValueEii+0x90>
 801511a:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 801511e:	428a      	cmp	r2, r1
 8015120:	dc16      	bgt.n	8015150 <_ZN8touchgfx9GraphData8addValueEii+0x90>
 8015122:	f103 4080 	add.w	r0, r3, #1073741824	; 0x40000000
 8015126:	3801      	subs	r0, #1
 8015128:	0080      	lsls	r0, r0, #2
 801512a:	42a3      	cmp	r3, r4
 801512c:	f8d5 613c 	ldr.w	r6, [r5, #316]	; 0x13c
 8015130:	dd15      	ble.n	801515e <_ZN8touchgfx9GraphData8addValueEii+0x9e>
 8015132:	f100 0c04 	add.w	ip, r0, #4
 8015136:	5832      	ldr	r2, [r6, r0]
 8015138:	f846 200c 	str.w	r2, [r6, ip]
 801513c:	f8d5 6140 	ldr.w	r6, [r5, #320]	; 0x140
 8015140:	3b01      	subs	r3, #1
 8015142:	5832      	ldr	r2, [r6, r0]
 8015144:	f846 200c 	str.w	r2, [r6, ip]
 8015148:	b21b      	sxth	r3, r3
 801514a:	3804      	subs	r0, #4
 801514c:	e7ed      	b.n	801512a <_ZN8touchgfx9GraphData8addValueEii+0x6a>
 801514e:	461c      	mov	r4, r3
 8015150:	f9b5 211c 	ldrsh.w	r2, [r5, #284]	; 0x11c
 8015154:	429a      	cmp	r2, r3
 8015156:	d1e4      	bne.n	8015122 <_ZN8touchgfx9GraphData8addValueEii+0x62>
 8015158:	f04f 34ff 	mov.w	r4, #4294967295
 801515c:	e7d9      	b.n	8015112 <_ZN8touchgfx9GraphData8addValueEii+0x52>
 801515e:	f8b5 311e 	ldrh.w	r3, [r5, #286]	; 0x11e
 8015162:	3301      	adds	r3, #1
 8015164:	f8a5 311e 	strh.w	r3, [r5, #286]	; 0x11e
 8015168:	f846 1024 	str.w	r1, [r6, r4, lsl #2]
 801516c:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
 8015170:	f843 7024 	str.w	r7, [r3, r4, lsl #2]
 8015174:	e7c9      	b.n	801510a <_ZN8touchgfx9GraphData8addValueEii+0x4a>

08015176 <_ZN8touchgfx16GraphElementLineD1Ev>:
 8015176:	4770      	bx	lr

08015178 <_ZN8touchgfx16GraphElementLineD0Ev>:
 8015178:	b510      	push	{r4, lr}
 801517a:	2130      	movs	r1, #48	; 0x30
 801517c:	4604      	mov	r4, r0
 801517e:	f015 ffec 	bl	802b15a <_ZdlPvj>
 8015182:	4620      	mov	r0, r4
 8015184:	bd10      	pop	{r4, pc}

08015186 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015186:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015188:	4604      	mov	r4, r0
 801518a:	4608      	mov	r0, r1
 801518c:	460d      	mov	r5, r1
 801518e:	f7fd f804 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 8015192:	b978      	cbnz	r0, 80151b4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015194:	4620      	mov	r0, r4
 8015196:	f7fd f800 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 801519a:	f9b5 6000 	ldrsh.w	r6, [r5]
 801519e:	b150      	cbz	r0, 80151b6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80151a0:	8026      	strh	r6, [r4, #0]
 80151a2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80151a6:	8063      	strh	r3, [r4, #2]
 80151a8:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80151ac:	80a3      	strh	r3, [r4, #4]
 80151ae:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80151b2:	80e3      	strh	r3, [r4, #6]
 80151b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80151b6:	f9b4 1000 	ldrsh.w	r1, [r4]
 80151ba:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80151be:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80151c2:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80151c6:	88ed      	ldrh	r5, [r5, #6]
 80151c8:	42b1      	cmp	r1, r6
 80151ca:	460f      	mov	r7, r1
 80151cc:	bfa8      	it	ge
 80151ce:	4637      	movge	r7, r6
 80151d0:	4293      	cmp	r3, r2
 80151d2:	4618      	mov	r0, r3
 80151d4:	4466      	add	r6, ip
 80151d6:	bfa8      	it	ge
 80151d8:	4610      	movge	r0, r2
 80151da:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80151de:	8027      	strh	r7, [r4, #0]
 80151e0:	442a      	add	r2, r5
 80151e2:	88e5      	ldrh	r5, [r4, #6]
 80151e4:	8060      	strh	r0, [r4, #2]
 80151e6:	4461      	add	r1, ip
 80151e8:	442b      	add	r3, r5
 80151ea:	b236      	sxth	r6, r6
 80151ec:	b209      	sxth	r1, r1
 80151ee:	b212      	sxth	r2, r2
 80151f0:	b21b      	sxth	r3, r3
 80151f2:	428e      	cmp	r6, r1
 80151f4:	bfac      	ite	ge
 80151f6:	ebc7 0106 	rsbge	r1, r7, r6
 80151fa:	ebc7 0101 	rsblt	r1, r7, r1
 80151fe:	429a      	cmp	r2, r3
 8015200:	bfac      	ite	ge
 8015202:	ebc0 0202 	rsbge	r2, r0, r2
 8015206:	ebc0 0203 	rsblt	r2, r0, r3
 801520a:	80a1      	strh	r1, [r4, #4]
 801520c:	80e2      	strh	r2, [r4, #6]
 801520e:	e7d1      	b.n	80151b4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

08015210 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8015210:	6800      	ldr	r0, [r0, #0]
 8015212:	2800      	cmp	r0, #0
 8015214:	bfb9      	ittee	lt
 8015216:	2320      	movlt	r3, #32
 8015218:	fb90 f0f3 	sdivlt	r0, r0, r3
 801521c:	301f      	addge	r0, #31
 801521e:	1140      	asrge	r0, r0, #5
 8015220:	4770      	bx	lr

08015222 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 8015222:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015226:	6803      	ldr	r3, [r0, #0]
 8015228:	6945      	ldr	r5, [r0, #20]
 801522a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801522c:	b093      	sub	sp, #76	; 0x4c
 801522e:	4604      	mov	r4, r0
 8015230:	460f      	mov	r7, r1
 8015232:	2d00      	cmp	r5, #0
 8015234:	f000 81ad 	beq.w	8015592 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 8015238:	696d      	ldr	r5, [r5, #20]
 801523a:	4798      	blx	r3
 801523c:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8015240:	2b00      	cmp	r3, #0
 8015242:	d077      	beq.n	8015334 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8015244:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8015248:	fb13 f000 	smulbb	r0, r3, r0
 801524c:	b283      	uxth	r3, r0
 801524e:	1c58      	adds	r0, r3, #1
 8015250:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8015254:	1200      	asrs	r0, r0, #8
 8015256:	d06d      	beq.n	8015334 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8015258:	b2c3      	uxtb	r3, r0
 801525a:	9308      	str	r3, [sp, #32]
 801525c:	6823      	ldr	r3, [r4, #0]
 801525e:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8015262:	462a      	mov	r2, r5
 8015264:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8015268:	4621      	mov	r1, r4
 801526a:	4640      	mov	r0, r8
 801526c:	4798      	blx	r3
 801526e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015272:	ae0e      	add	r6, sp, #56	; 0x38
 8015274:	e886 0003 	stmia.w	r6, {r0, r1}
 8015278:	4639      	mov	r1, r7
 801527a:	4630      	mov	r0, r6
 801527c:	f7fc ff4a 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 8015280:	6823      	ldr	r3, [r4, #0]
 8015282:	4629      	mov	r1, r5
 8015284:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015288:	4620      	mov	r0, r4
 801528a:	4798      	blx	r3
 801528c:	6823      	ldr	r3, [r4, #0]
 801528e:	4607      	mov	r7, r0
 8015290:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8015294:	4629      	mov	r1, r5
 8015296:	4620      	mov	r0, r4
 8015298:	4798      	blx	r3
 801529a:	4681      	mov	r9, r0
 801529c:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
 80152a0:	0103      	lsls	r3, r0, #4
 80152a2:	9309      	str	r3, [sp, #36]	; 0x24
 80152a4:	6823      	ldr	r3, [r4, #0]
 80152a6:	4629      	mov	r1, r5
 80152a8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80152ac:	4620      	mov	r0, r4
 80152ae:	4798      	blx	r3
 80152b0:	b203      	sxth	r3, r0
 80152b2:	9306      	str	r3, [sp, #24]
 80152b4:	6823      	ldr	r3, [r4, #0]
 80152b6:	4629      	mov	r1, r5
 80152b8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80152bc:	4620      	mov	r0, r4
 80152be:	4798      	blx	r3
 80152c0:	2f00      	cmp	r7, #0
 80152c2:	b203      	sxth	r3, r0
 80152c4:	9307      	str	r3, [sp, #28]
 80152c6:	d138      	bne.n	801533a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 80152c8:	f1b9 0f00 	cmp.w	r9, #0
 80152cc:	d132      	bne.n	8015334 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 80152ce:	6823      	ldr	r3, [r4, #0]
 80152d0:	464a      	mov	r2, r9
 80152d2:	4629      	mov	r1, r5
 80152d4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80152d8:	4620      	mov	r0, r4
 80152da:	4798      	blx	r3
 80152dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80152de:	1ac0      	subs	r0, r0, r3
 80152e0:	9010      	str	r0, [sp, #64]	; 0x40
 80152e2:	4640      	mov	r0, r8
 80152e4:	f7ff fc6c 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80152e8:	6823      	ldr	r3, [r4, #0]
 80152ea:	4607      	mov	r7, r0
 80152ec:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80152f0:	4629      	mov	r1, r5
 80152f2:	4620      	mov	r0, r4
 80152f4:	4798      	blx	r3
 80152f6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80152fa:	1a38      	subs	r0, r7, r0
 80152fc:	fa0f f880 	sxth.w	r8, r0
 8015300:	eb13 0f08 	cmn.w	r3, r8
 8015304:	d416      	bmi.n	8015334 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8015306:	6823      	ldr	r3, [r4, #0]
 8015308:	4629      	mov	r1, r5
 801530a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 801530e:	4620      	mov	r0, r4
 8015310:	4798      	blx	r3
 8015312:	4580      	cmp	r8, r0
 8015314:	da0e      	bge.n	8015334 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8015316:	9a08      	ldr	r2, [sp, #32]
 8015318:	6823      	ldr	r3, [r4, #0]
 801531a:	9202      	str	r2, [sp, #8]
 801531c:	b23f      	sxth	r7, r7
 801531e:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 8015322:	9201      	str	r2, [sp, #4]
 8015324:	9700      	str	r7, [sp, #0]
 8015326:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 801532a:	4631      	mov	r1, r6
 801532c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8015330:	4620      	mov	r0, r4
 8015332:	47a8      	blx	r5
 8015334:	b013      	add	sp, #76	; 0x4c
 8015336:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801533a:	ddfb      	ble.n	8015334 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801533c:	6823      	ldr	r3, [r4, #0]
 801533e:	4629      	mov	r1, r5
 8015340:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015344:	4620      	mov	r0, r4
 8015346:	4798      	blx	r3
 8015348:	6823      	ldr	r3, [r4, #0]
 801534a:	4683      	mov	fp, r0
 801534c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015350:	4629      	mov	r1, r5
 8015352:	4620      	mov	r0, r4
 8015354:	4798      	blx	r3
 8015356:	eba0 030b 	sub.w	r3, r0, fp
 801535a:	2b00      	cmp	r3, #0
 801535c:	bfb8      	it	lt
 801535e:	425b      	neglt	r3, r3
 8015360:	fb93 f3f7 	sdiv	r3, r3, r7
 8015364:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8015368:	4680      	mov	r8, r0
 801536a:	dce3      	bgt.n	8015334 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801536c:	6823      	ldr	r3, [r4, #0]
 801536e:	465a      	mov	r2, fp
 8015370:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8015374:	4629      	mov	r1, r5
 8015376:	4620      	mov	r0, r4
 8015378:	4798      	blx	r3
 801537a:	6823      	ldr	r3, [r4, #0]
 801537c:	4606      	mov	r6, r0
 801537e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8015382:	4642      	mov	r2, r8
 8015384:	4629      	mov	r1, r5
 8015386:	4620      	mov	r0, r4
 8015388:	4798      	blx	r3
 801538a:	42b0      	cmp	r0, r6
 801538c:	bfa2      	ittt	ge
 801538e:	4643      	movge	r3, r8
 8015390:	46d8      	movge	r8, fp
 8015392:	469b      	movge	fp, r3
 8015394:	45d8      	cmp	r8, fp
 8015396:	bfac      	ite	ge
 8015398:	f04f 33ff 	movge.w	r3, #4294967295
 801539c:	2301      	movlt	r3, #1
 801539e:	fb98 f6f7 	sdiv	r6, r8, r7
 80153a2:	fb9b f2f7 	sdiv	r2, fp, r7
 80153a6:	1af6      	subs	r6, r6, r3
 80153a8:	441a      	add	r2, r3
 80153aa:	4296      	cmp	r6, r2
 80153ac:	bfac      	ite	ge
 80153ae:	f04f 3aff 	movge.w	sl, #4294967295
 80153b2:	f04f 0a01 	movlt.w	sl, #1
 80153b6:	f1b9 0f00 	cmp.w	r9, #0
 80153ba:	d13e      	bne.n	801543a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 80153bc:	fb07 fb0a 	mul.w	fp, r7, sl
 80153c0:	eb0a 0802 	add.w	r8, sl, r2
 80153c4:	4377      	muls	r7, r6
 80153c6:	45b0      	cmp	r8, r6
 80153c8:	d0b4      	beq.n	8015334 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 80153ca:	6823      	ldr	r3, [r4, #0]
 80153cc:	463a      	mov	r2, r7
 80153ce:	4629      	mov	r1, r5
 80153d0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80153d4:	4620      	mov	r0, r4
 80153d6:	4798      	blx	r3
 80153d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80153da:	1ac0      	subs	r0, r0, r3
 80153dc:	9010      	str	r0, [sp, #64]	; 0x40
 80153de:	a810      	add	r0, sp, #64	; 0x40
 80153e0:	f7ff fbee 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80153e4:	6823      	ldr	r3, [r4, #0]
 80153e6:	4681      	mov	r9, r0
 80153e8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80153ec:	4629      	mov	r1, r5
 80153ee:	4620      	mov	r0, r4
 80153f0:	4798      	blx	r3
 80153f2:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 80153f6:	eba9 0000 	sub.w	r0, r9, r0
 80153fa:	b203      	sxth	r3, r0
 80153fc:	42da      	cmn	r2, r3
 80153fe:	9304      	str	r3, [sp, #16]
 8015400:	d418      	bmi.n	8015434 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 8015402:	6822      	ldr	r2, [r4, #0]
 8015404:	4629      	mov	r1, r5
 8015406:	f8d2 20ac 	ldr.w	r2, [r2, #172]	; 0xac
 801540a:	4620      	mov	r0, r4
 801540c:	4790      	blx	r2
 801540e:	9b04      	ldr	r3, [sp, #16]
 8015410:	4283      	cmp	r3, r0
 8015412:	da0f      	bge.n	8015434 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 8015414:	9b08      	ldr	r3, [sp, #32]
 8015416:	9302      	str	r3, [sp, #8]
 8015418:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 801541c:	6822      	ldr	r2, [r4, #0]
 801541e:	9301      	str	r3, [sp, #4]
 8015420:	fa0f f389 	sxth.w	r3, r9
 8015424:	9300      	str	r3, [sp, #0]
 8015426:	f8d2 908c 	ldr.w	r9, [r2, #140]	; 0x8c
 801542a:	a90e      	add	r1, sp, #56	; 0x38
 801542c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8015430:	4620      	mov	r0, r4
 8015432:	47c8      	blx	r9
 8015434:	4456      	add	r6, sl
 8015436:	445f      	add	r7, fp
 8015438:	e7c5      	b.n	80153c6 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 801543a:	fb98 f8f9 	sdiv	r8, r8, r9
 801543e:	eba8 0203 	sub.w	r2, r8, r3
 8015442:	fb9b f8f9 	sdiv	r8, fp, r9
 8015446:	4498      	add	r8, r3
 8015448:	4542      	cmp	r2, r8
 801544a:	bfac      	ite	ge
 801544c:	f04f 33ff 	movge.w	r3, #4294967295
 8015450:	2301      	movlt	r3, #1
 8015452:	930a      	str	r3, [sp, #40]	; 0x28
 8015454:	6823      	ldr	r3, [r4, #0]
 8015456:	9204      	str	r2, [sp, #16]
 8015458:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801545c:	fb02 f209 	mul.w	r2, r2, r9
 8015460:	4629      	mov	r1, r5
 8015462:	4620      	mov	r0, r4
 8015464:	4798      	blx	r3
 8015466:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 801546a:	f84b 0d08 	str.w	r0, [fp, #-8]!
 801546e:	4658      	mov	r0, fp
 8015470:	f7ff fba6 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015474:	b203      	sxth	r3, r0
 8015476:	9305      	str	r3, [sp, #20]
 8015478:	6823      	ldr	r3, [r4, #0]
 801547a:	fb06 f207 	mul.w	r2, r6, r7
 801547e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8015482:	4629      	mov	r1, r5
 8015484:	4620      	mov	r0, r4
 8015486:	4798      	blx	r3
 8015488:	9010      	str	r0, [sp, #64]	; 0x40
 801548a:	4658      	mov	r0, fp
 801548c:	f7ff fb98 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015490:	fb07 f20a 	mul.w	r2, r7, sl
 8015494:	920b      	str	r2, [sp, #44]	; 0x2c
 8015496:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015498:	4442      	add	r2, r8
 801549a:	b203      	sxth	r3, r0
 801549c:	920c      	str	r2, [sp, #48]	; 0x30
 801549e:	9a05      	ldr	r2, [sp, #20]
 80154a0:	429a      	cmp	r2, r3
 80154a2:	dc16      	bgt.n	80154d2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 80154a4:	eb06 080a 	add.w	r8, r6, sl
 80154a8:	fb07 f808 	mul.w	r8, r7, r8
 80154ac:	9a05      	ldr	r2, [sp, #20]
 80154ae:	429a      	cmp	r2, r3
 80154b0:	db54      	blt.n	801555c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 80154b2:	6823      	ldr	r3, [r4, #0]
 80154b4:	4642      	mov	r2, r8
 80154b6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80154ba:	4629      	mov	r1, r5
 80154bc:	4620      	mov	r0, r4
 80154be:	4798      	blx	r3
 80154c0:	9010      	str	r0, [sp, #64]	; 0x40
 80154c2:	4658      	mov	r0, fp
 80154c4:	f7ff fb7c 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80154c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80154ca:	4456      	add	r6, sl
 80154cc:	b203      	sxth	r3, r0
 80154ce:	4490      	add	r8, r2
 80154d0:	e7ec      	b.n	80154ac <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 80154d2:	6823      	ldr	r3, [r4, #0]
 80154d4:	fb07 f206 	mul.w	r2, r7, r6
 80154d8:	4629      	mov	r1, r5
 80154da:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80154de:	4620      	mov	r0, r4
 80154e0:	4798      	blx	r3
 80154e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80154e4:	1ac0      	subs	r0, r0, r3
 80154e6:	9010      	str	r0, [sp, #64]	; 0x40
 80154e8:	4658      	mov	r0, fp
 80154ea:	f7ff fb69 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80154ee:	6823      	ldr	r3, [r4, #0]
 80154f0:	4680      	mov	r8, r0
 80154f2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80154f6:	4629      	mov	r1, r5
 80154f8:	4620      	mov	r0, r4
 80154fa:	4798      	blx	r3
 80154fc:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 8015500:	eba8 0000 	sub.w	r0, r8, r0
 8015504:	b203      	sxth	r3, r0
 8015506:	42da      	cmn	r2, r3
 8015508:	930d      	str	r3, [sp, #52]	; 0x34
 801550a:	d418      	bmi.n	801553e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 801550c:	6822      	ldr	r2, [r4, #0]
 801550e:	4629      	mov	r1, r5
 8015510:	f8d2 20ac 	ldr.w	r2, [r2, #172]	; 0xac
 8015514:	4620      	mov	r0, r4
 8015516:	4790      	blx	r2
 8015518:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801551a:	4283      	cmp	r3, r0
 801551c:	da0f      	bge.n	801553e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 801551e:	9b08      	ldr	r3, [sp, #32]
 8015520:	9302      	str	r3, [sp, #8]
 8015522:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8015526:	6822      	ldr	r2, [r4, #0]
 8015528:	9301      	str	r3, [sp, #4]
 801552a:	fa0f f388 	sxth.w	r3, r8
 801552e:	9300      	str	r3, [sp, #0]
 8015530:	f8d2 808c 	ldr.w	r8, [r2, #140]	; 0x8c
 8015534:	a90e      	add	r1, sp, #56	; 0x38
 8015536:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801553a:	4620      	mov	r0, r4
 801553c:	47c0      	blx	r8
 801553e:	6823      	ldr	r3, [r4, #0]
 8015540:	4456      	add	r6, sl
 8015542:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8015546:	fb06 f207 	mul.w	r2, r6, r7
 801554a:	4629      	mov	r1, r5
 801554c:	4620      	mov	r0, r4
 801554e:	4798      	blx	r3
 8015550:	9010      	str	r0, [sp, #64]	; 0x40
 8015552:	4658      	mov	r0, fp
 8015554:	f7ff fb34 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015558:	b203      	sxth	r3, r0
 801555a:	e7a0      	b.n	801549e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 801555c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801555e:	930d      	str	r3, [sp, #52]	; 0x34
 8015560:	9b04      	ldr	r3, [sp, #16]
 8015562:	4413      	add	r3, r2
 8015564:	9304      	str	r3, [sp, #16]
 8015566:	9a04      	ldr	r2, [sp, #16]
 8015568:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801556a:	4293      	cmp	r3, r2
 801556c:	f43f aee2 	beq.w	8015334 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8015570:	9b04      	ldr	r3, [sp, #16]
 8015572:	6822      	ldr	r2, [r4, #0]
 8015574:	4629      	mov	r1, r5
 8015576:	f8d2 80b0 	ldr.w	r8, [r2, #176]	; 0xb0
 801557a:	4620      	mov	r0, r4
 801557c:	fb03 f209 	mul.w	r2, r3, r9
 8015580:	47c0      	blx	r8
 8015582:	9010      	str	r0, [sp, #64]	; 0x40
 8015584:	4658      	mov	r0, fp
 8015586:	f7ff fb1b 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801558a:	b203      	sxth	r3, r0
 801558c:	9305      	str	r3, [sp, #20]
 801558e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015590:	e785      	b.n	801549e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 8015592:	4798      	blx	r3
 8015594:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8015598:	deff      	udf	#255	; 0xff

0801559a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 801559a:	b510      	push	{r4, lr}
 801559c:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80155a0:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80155a4:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80155a8:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80155ac:	13a4      	asrs	r4, r4, #14
 80155ae:	139b      	asrs	r3, r3, #14
 80155b0:	429c      	cmp	r4, r3
 80155b2:	bfb8      	it	lt
 80155b4:	461c      	movlt	r4, r3
 80155b6:	2c01      	cmp	r4, #1
 80155b8:	dd07      	ble.n	80155ca <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 80155ba:	fb91 f1f4 	sdiv	r1, r1, r4
 80155be:	fb90 f0f4 	sdiv	r0, r0, r4
 80155c2:	f7ff ffea 	bl	801559a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80155c6:	4360      	muls	r0, r4
 80155c8:	bd10      	pop	{r4, pc}
 80155ca:	4340      	muls	r0, r0
 80155cc:	fb01 0101 	mla	r1, r1, r1, r0
 80155d0:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 80155d4:	bfb4      	ite	lt
 80155d6:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 80155da:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 80155de:	2000      	movs	r0, #0
 80155e0:	18c2      	adds	r2, r0, r3
 80155e2:	428a      	cmp	r2, r1
 80155e4:	bf9c      	itt	ls
 80155e6:	1898      	addls	r0, r3, r2
 80155e8:	1a89      	subls	r1, r1, r2
 80155ea:	089b      	lsrs	r3, r3, #2
 80155ec:	ea4f 0050 	mov.w	r0, r0, lsr #1
 80155f0:	d1f6      	bne.n	80155e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 80155f2:	e7e9      	b.n	80155c8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

080155f4 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 80155f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80155f6:	9906      	ldr	r1, [sp, #24]
 80155f8:	4291      	cmp	r1, r2
 80155fa:	bfbc      	itt	lt
 80155fc:	9206      	strlt	r2, [sp, #24]
 80155fe:	460a      	movlt	r2, r1
 8015600:	9907      	ldr	r1, [sp, #28]
 8015602:	428b      	cmp	r3, r1
 8015604:	4606      	mov	r6, r0
 8015606:	461c      	mov	r4, r3
 8015608:	f04f 0020 	mov.w	r0, #32
 801560c:	bfc8      	it	gt
 801560e:	460c      	movgt	r4, r1
 8015610:	fb92 f5f0 	sdiv	r5, r2, r0
 8015614:	fb94 f4f0 	sdiv	r4, r4, r0
 8015618:	a806      	add	r0, sp, #24
 801561a:	bfc8      	it	gt
 801561c:	9307      	strgt	r3, [sp, #28]
 801561e:	f7ff fdf7 	bl	8015210 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8015622:	4607      	mov	r7, r0
 8015624:	a807      	add	r0, sp, #28
 8015626:	f7ff fdf3 	bl	8015210 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801562a:	1b7a      	subs	r2, r7, r5
 801562c:	1b00      	subs	r0, r0, r4
 801562e:	80f0      	strh	r0, [r6, #6]
 8015630:	8035      	strh	r5, [r6, #0]
 8015632:	8074      	strh	r4, [r6, #2]
 8015634:	80b2      	strh	r2, [r6, #4]
 8015636:	4630      	mov	r0, r6
 8015638:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801563a <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 801563a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801563c:	9c08      	ldr	r4, [sp, #32]
 801563e:	2602      	movs	r6, #2
 8015640:	3401      	adds	r4, #1
 8015642:	fb94 f4f6 	sdiv	r4, r4, r6
 8015646:	18a6      	adds	r6, r4, r2
 8015648:	191f      	adds	r7, r3, r4
 801564a:	e9cd 6700 	strd	r6, r7, [sp]
 801564e:	1b1b      	subs	r3, r3, r4
 8015650:	1b12      	subs	r2, r2, r4
 8015652:	4605      	mov	r5, r0
 8015654:	f7ff ffce 	bl	80155f4 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 8015658:	4628      	mov	r0, r5
 801565a:	b003      	add	sp, #12
 801565c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801565e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 801565e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015662:	6943      	ldr	r3, [r0, #20]
 8015664:	b089      	sub	sp, #36	; 0x24
 8015666:	4680      	mov	r8, r0
 8015668:	460d      	mov	r5, r1
 801566a:	2b00      	cmp	r3, #0
 801566c:	f000 8082 	beq.w	8015774 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x116>
 8015670:	695c      	ldr	r4, [r3, #20]
 8015672:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 8015676:	6823      	ldr	r3, [r4, #0]
 8015678:	4620      	mov	r0, r4
 801567a:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 801567e:	4798      	blx	r3
 8015680:	6823      	ldr	r3, [r4, #0]
 8015682:	4606      	mov	r6, r0
 8015684:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8015688:	4629      	mov	r1, r5
 801568a:	4620      	mov	r0, r4
 801568c:	4798      	blx	r3
 801568e:	ea4f 1949 	mov.w	r9, r9, lsl #5
 8015692:	af02      	add	r7, sp, #8
 8015694:	4603      	mov	r3, r0
 8015696:	4632      	mov	r2, r6
 8015698:	f8cd 9000 	str.w	r9, [sp]
 801569c:	4641      	mov	r1, r8
 801569e:	4638      	mov	r0, r7
 80156a0:	f7ff ffcb 	bl	801563a <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 80156a4:	2d00      	cmp	r5, #0
 80156a6:	ae06      	add	r6, sp, #24
 80156a8:	dd1c      	ble.n	80156e4 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x86>
 80156aa:	6823      	ldr	r3, [r4, #0]
 80156ac:	f105 3aff 	add.w	sl, r5, #4294967295
 80156b0:	fa0f fa8a 	sxth.w	sl, sl
 80156b4:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 80156b8:	4651      	mov	r1, sl
 80156ba:	4620      	mov	r0, r4
 80156bc:	4798      	blx	r3
 80156be:	6823      	ldr	r3, [r4, #0]
 80156c0:	4683      	mov	fp, r0
 80156c2:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 80156c6:	4651      	mov	r1, sl
 80156c8:	4620      	mov	r0, r4
 80156ca:	4798      	blx	r3
 80156cc:	4641      	mov	r1, r8
 80156ce:	4603      	mov	r3, r0
 80156d0:	f8cd 9000 	str.w	r9, [sp]
 80156d4:	4630      	mov	r0, r6
 80156d6:	465a      	mov	r2, fp
 80156d8:	f7ff ffaf 	bl	801563a <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 80156dc:	4631      	mov	r1, r6
 80156de:	4638      	mov	r0, r7
 80156e0:	f7ff fd51 	bl	8015186 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80156e4:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 80156e8:	3b01      	subs	r3, #1
 80156ea:	429d      	cmp	r5, r3
 80156ec:	da1a      	bge.n	8015724 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xc6>
 80156ee:	6823      	ldr	r3, [r4, #0]
 80156f0:	3501      	adds	r5, #1
 80156f2:	b22d      	sxth	r5, r5
 80156f4:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 80156f8:	4629      	mov	r1, r5
 80156fa:	4620      	mov	r0, r4
 80156fc:	4798      	blx	r3
 80156fe:	6823      	ldr	r3, [r4, #0]
 8015700:	4682      	mov	sl, r0
 8015702:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8015706:	4629      	mov	r1, r5
 8015708:	4620      	mov	r0, r4
 801570a:	4798      	blx	r3
 801570c:	4641      	mov	r1, r8
 801570e:	4603      	mov	r3, r0
 8015710:	f8cd 9000 	str.w	r9, [sp]
 8015714:	4630      	mov	r0, r6
 8015716:	4652      	mov	r2, sl
 8015718:	f7ff ff8f 	bl	801563a <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 801571c:	4631      	mov	r1, r6
 801571e:	4638      	mov	r0, r7
 8015720:	f7ff fd31 	bl	8015186 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015724:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 8015728:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 801572c:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 8015730:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015734:	18ca      	adds	r2, r1, r3
 8015736:	f8ad 0014 	strh.w	r0, [sp, #20]
 801573a:	e897 0003 	ldmia.w	r7, {r0, r1}
 801573e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 8015742:	e886 0003 	stmia.w	r6, {r0, r1}
 8015746:	1a9b      	subs	r3, r3, r2
 8015748:	a904      	add	r1, sp, #16
 801574a:	2200      	movs	r2, #0
 801574c:	4630      	mov	r0, r6
 801574e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015752:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015756:	f7fc fcdd 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801575a:	e896 0003 	ldmia.w	r6, {r0, r1}
 801575e:	f8d8 3000 	ldr.w	r3, [r8]
 8015762:	e887 0003 	stmia.w	r7, {r0, r1}
 8015766:	691b      	ldr	r3, [r3, #16]
 8015768:	4639      	mov	r1, r7
 801576a:	4640      	mov	r0, r8
 801576c:	4798      	blx	r3
 801576e:	b009      	add	sp, #36	; 0x24
 8015770:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015774:	681b      	ldr	r3, [r3, #0]
 8015776:	deff      	udf	#255	; 0xff

08015778 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 8015778:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801577c:	2b00      	cmp	r3, #0
 801577e:	da05      	bge.n	801578c <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 8015780:	880a      	ldrh	r2, [r1, #0]
 8015782:	b29b      	uxth	r3, r3
 8015784:	441a      	add	r2, r3
 8015786:	425b      	negs	r3, r3
 8015788:	800a      	strh	r2, [r1, #0]
 801578a:	808b      	strh	r3, [r1, #4]
 801578c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8015790:	2b00      	cmp	r3, #0
 8015792:	da05      	bge.n	80157a0 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 8015794:	884a      	ldrh	r2, [r1, #2]
 8015796:	b29b      	uxth	r3, r3
 8015798:	441a      	add	r2, r3
 801579a:	425b      	negs	r3, r3
 801579c:	804a      	strh	r2, [r1, #2]
 801579e:	80cb      	strh	r3, [r1, #6]
 80157a0:	4770      	bx	lr

080157a2 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 80157a2:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80157a4:	4604      	mov	r4, r0
 80157a6:	460d      	mov	r5, r1
 80157a8:	6801      	ldr	r1, [r0, #0]
 80157aa:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 80157ae:	9001      	str	r0, [sp, #4]
 80157b0:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 80157b4:	9000      	str	r0, [sp, #0]
 80157b6:	f8d1 6094 	ldr.w	r6, [r1, #148]	; 0x94
 80157ba:	a802      	add	r0, sp, #8
 80157bc:	4621      	mov	r1, r4
 80157be:	47b0      	blx	r6
 80157c0:	a902      	add	r1, sp, #8
 80157c2:	4620      	mov	r0, r4
 80157c4:	f7ff ffd8 	bl	8015778 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 80157c8:	a802      	add	r0, sp, #8
 80157ca:	4629      	mov	r1, r5
 80157cc:	f7fc fca2 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 80157d0:	a802      	add	r0, sp, #8
 80157d2:	f7fc fce2 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 80157d6:	b968      	cbnz	r0, 80157f4 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 80157d8:	6823      	ldr	r3, [r4, #0]
 80157da:	a902      	add	r1, sp, #8
 80157dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80157de:	4620      	mov	r0, r4
 80157e0:	4798      	blx	r3
 80157e2:	f7fc ff65 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 80157e6:	6803      	ldr	r3, [r0, #0]
 80157e8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80157ea:	6a1d      	ldr	r5, [r3, #32]
 80157ec:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 80157f0:	a902      	add	r1, sp, #8
 80157f2:	47a8      	blx	r5
 80157f4:	b004      	add	sp, #16
 80157f6:	bd70      	pop	{r4, r5, r6, pc}

080157f8 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 80157f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157fc:	b08b      	sub	sp, #44	; 0x2c
 80157fe:	461e      	mov	r6, r3
 8015800:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 8015804:	9304      	str	r3, [sp, #16]
 8015806:	429e      	cmp	r6, r3
 8015808:	4689      	mov	r9, r1
 801580a:	4615      	mov	r5, r2
 801580c:	d072      	beq.n	80158f4 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 801580e:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 8015812:	015b      	lsls	r3, r3, #5
 8015814:	9303      	str	r3, [sp, #12]
 8015816:	6813      	ldr	r3, [r2, #0]
 8015818:	4610      	mov	r0, r2
 801581a:	4631      	mov	r1, r6
 801581c:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8015820:	4798      	blx	r3
 8015822:	ab0a      	add	r3, sp, #40	; 0x28
 8015824:	4634      	mov	r4, r6
 8015826:	f843 0d10 	str.w	r0, [r3, #-16]!
 801582a:	4618      	mov	r0, r3
 801582c:	f7ff f9c8 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015830:	682b      	ldr	r3, [r5, #0]
 8015832:	4631      	mov	r1, r6
 8015834:	0147      	lsls	r7, r0, #5
 8015836:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 801583a:	4628      	mov	r0, r5
 801583c:	4798      	blx	r3
 801583e:	ab0a      	add	r3, sp, #40	; 0x28
 8015840:	f843 0d0c 	str.w	r0, [r3, #-12]!
 8015844:	4618      	mov	r0, r3
 8015846:	f7ff f9bb 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801584a:	ea4f 1840 	mov.w	r8, r0, lsl #5
 801584e:	4642      	mov	r2, r8
 8015850:	4639      	mov	r1, r7
 8015852:	4648      	mov	r0, r9
 8015854:	f013 fa75 	bl	8028d42 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8015858:	2301      	movs	r3, #1
 801585a:	9300      	str	r3, [sp, #0]
 801585c:	9b00      	ldr	r3, [sp, #0]
 801585e:	441c      	add	r4, r3
 8015860:	682b      	ldr	r3, [r5, #0]
 8015862:	b224      	sxth	r4, r4
 8015864:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8015868:	4621      	mov	r1, r4
 801586a:	4628      	mov	r0, r5
 801586c:	4798      	blx	r3
 801586e:	9008      	str	r0, [sp, #32]
 8015870:	a808      	add	r0, sp, #32
 8015872:	f7ff f9a5 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015876:	0143      	lsls	r3, r0, #5
 8015878:	9301      	str	r3, [sp, #4]
 801587a:	682b      	ldr	r3, [r5, #0]
 801587c:	4621      	mov	r1, r4
 801587e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 8015882:	4628      	mov	r0, r5
 8015884:	4798      	blx	r3
 8015886:	9009      	str	r0, [sp, #36]	; 0x24
 8015888:	a809      	add	r0, sp, #36	; 0x24
 801588a:	f7ff f999 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801588e:	0143      	lsls	r3, r0, #5
 8015890:	9302      	str	r3, [sp, #8]
 8015892:	9b01      	ldr	r3, [sp, #4]
 8015894:	eba3 0b07 	sub.w	fp, r3, r7
 8015898:	9b02      	ldr	r3, [sp, #8]
 801589a:	eba3 0a08 	sub.w	sl, r3, r8
 801589e:	4651      	mov	r1, sl
 80158a0:	4658      	mov	r0, fp
 80158a2:	f7ff fe7a 	bl	801559a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80158a6:	b318      	cbz	r0, 80158f0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 80158a8:	4602      	mov	r2, r0
 80158aa:	4651      	mov	r1, sl
 80158ac:	9005      	str	r0, [sp, #20]
 80158ae:	9803      	ldr	r0, [sp, #12]
 80158b0:	f004 ff2f 	bl	801a712 <_ZN8touchgfx6muldivElll>
 80158b4:	2302      	movs	r3, #2
 80158b6:	fb90 faf3 	sdiv	sl, r0, r3
 80158ba:	9b05      	ldr	r3, [sp, #20]
 80158bc:	9803      	ldr	r0, [sp, #12]
 80158be:	461a      	mov	r2, r3
 80158c0:	4659      	mov	r1, fp
 80158c2:	f004 ff26 	bl	801a712 <_ZN8touchgfx6muldivElll>
 80158c6:	2302      	movs	r3, #2
 80158c8:	eba7 010a 	sub.w	r1, r7, sl
 80158cc:	fb90 fbf3 	sdiv	fp, r0, r3
 80158d0:	4648      	mov	r0, r9
 80158d2:	eb0b 0208 	add.w	r2, fp, r8
 80158d6:	f013 f9c3 	bl	8028c60 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80158da:	9b02      	ldr	r3, [sp, #8]
 80158dc:	eb03 020b 	add.w	r2, r3, fp
 80158e0:	9b01      	ldr	r3, [sp, #4]
 80158e2:	4648      	mov	r0, r9
 80158e4:	eba3 010a 	sub.w	r1, r3, sl
 80158e8:	f013 f9ba 	bl	8028c60 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80158ec:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 80158f0:	42a6      	cmp	r6, r4
 80158f2:	db02      	blt.n	80158fa <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 80158f4:	b00b      	add	sp, #44	; 0x2c
 80158f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158fa:	9b00      	ldr	r3, [sp, #0]
 80158fc:	9a04      	ldr	r2, [sp, #16]
 80158fe:	42a2      	cmp	r2, r4
 8015900:	bf08      	it	eq
 8015902:	f04f 33ff 	moveq.w	r3, #4294967295
 8015906:	e7a8      	b.n	801585a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>

08015908 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 8015908:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801590c:	6943      	ldr	r3, [r0, #20]
 801590e:	b0b4      	sub	sp, #208	; 0xd0
 8015910:	4606      	mov	r6, r0
 8015912:	460f      	mov	r7, r1
 8015914:	2b00      	cmp	r3, #0
 8015916:	d06a      	beq.n	80159ee <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 8015918:	695c      	ldr	r4, [r3, #20]
 801591a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 801591e:	2b01      	cmp	r3, #1
 8015920:	dc04      	bgt.n	801592c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 8015922:	2401      	movs	r4, #1
 8015924:	4620      	mov	r0, r4
 8015926:	b034      	add	sp, #208	; 0xd0
 8015928:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801592c:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 8015930:	ad34      	add	r5, sp, #208	; 0xd0
 8015932:	011b      	lsls	r3, r3, #4
 8015934:	f845 3dbc 	str.w	r3, [r5, #-188]!
 8015938:	4628      	mov	r0, r5
 801593a:	f7ff fc69 	bl	8015210 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801593e:	8839      	ldrh	r1, [r7, #0]
 8015940:	88ba      	ldrh	r2, [r7, #4]
 8015942:	6823      	ldr	r3, [r4, #0]
 8015944:	b280      	uxth	r0, r0
 8015946:	440a      	add	r2, r1
 8015948:	4402      	add	r2, r0
 801594a:	1a09      	subs	r1, r1, r0
 801594c:	f10d 000a 	add.w	r0, sp, #10
 8015950:	9000      	str	r0, [sp, #0]
 8015952:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 8015956:	b212      	sxth	r2, r2
 8015958:	ab02      	add	r3, sp, #8
 801595a:	b209      	sxth	r1, r1
 801595c:	4620      	mov	r0, r4
 801595e:	47c0      	blx	r8
 8015960:	2800      	cmp	r0, #0
 8015962:	d0de      	beq.n	8015922 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 8015964:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 8015968:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 801596c:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 8015970:	f8ad 100e 	strh.w	r1, [sp, #14]
 8015974:	18ca      	adds	r2, r1, r3
 8015976:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 801597a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801597e:	1a9b      	subs	r3, r3, r2
 8015980:	4639      	mov	r1, r7
 8015982:	2200      	movs	r2, #0
 8015984:	a803      	add	r0, sp, #12
 8015986:	f8ad 3012 	strh.w	r3, [sp, #18]
 801598a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801598e:	f7fc fbc1 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 8015992:	aa03      	add	r2, sp, #12
 8015994:	4631      	mov	r1, r6
 8015996:	4628      	mov	r0, r5
 8015998:	f013 f808 	bl	80289ac <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 801599c:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 80159a0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80159a4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80159a8:	2f00      	cmp	r7, #0
 80159aa:	dd03      	ble.n	80159b4 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 80159ac:	42bb      	cmp	r3, r7
 80159ae:	da01      	bge.n	80159b4 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 80159b0:	42ba      	cmp	r2, r7
 80159b2:	da0f      	bge.n	80159d4 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 80159b4:	9200      	str	r2, [sp, #0]
 80159b6:	4622      	mov	r2, r4
 80159b8:	4629      	mov	r1, r5
 80159ba:	4630      	mov	r0, r6
 80159bc:	f7ff ff1c 	bl	80157f8 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 80159c0:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 80159c4:	4628      	mov	r0, r5
 80159c6:	f013 fac0 	bl	8028f4a <_ZN8touchgfx6Canvas6renderEh>
 80159ca:	4604      	mov	r4, r0
 80159cc:	4628      	mov	r0, r5
 80159ce:	f013 fafb 	bl	8028fc8 <_ZN8touchgfx6CanvasD1Ev>
 80159d2:	e7a7      	b.n	8015924 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 80159d4:	1e7a      	subs	r2, r7, #1
 80159d6:	b212      	sxth	r2, r2
 80159d8:	9200      	str	r2, [sp, #0]
 80159da:	4629      	mov	r1, r5
 80159dc:	4622      	mov	r2, r4
 80159de:	4630      	mov	r0, r6
 80159e0:	f7ff ff0a 	bl	80157f8 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 80159e4:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80159e8:	9300      	str	r3, [sp, #0]
 80159ea:	463b      	mov	r3, r7
 80159ec:	e7e3      	b.n	80159b6 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 80159ee:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 80159f2:	deff      	udf	#255	; 0xff

080159f4 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 80159f4:	4770      	bx	lr

080159f6 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 80159f6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80159f8:	b118      	cbz	r0, 8015a02 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 80159fa:	6803      	ldr	r3, [r0, #0]
 80159fc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015a00:	4718      	bx	r3
 8015a02:	4770      	bx	lr

08015a04 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 8015a04:	680b      	ldr	r3, [r1, #0]
 8015a06:	4608      	mov	r0, r1
 8015a08:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8015a0c:	4718      	bx	r3

08015a0e <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 8015a0e:	680b      	ldr	r3, [r1, #0]
 8015a10:	4608      	mov	r0, r1
 8015a12:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8015a16:	4718      	bx	r3

08015a18 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 8015a18:	680b      	ldr	r3, [r1, #0]
 8015a1a:	4608      	mov	r0, r1
 8015a1c:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8015a20:	4718      	bx	r3

08015a22 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 8015a22:	680b      	ldr	r3, [r1, #0]
 8015a24:	4608      	mov	r0, r1
 8015a26:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8015a2a:	4718      	bx	r3

08015a2c <_ZN8touchgfx12GraphLabelsYD1Ev>:
 8015a2c:	4770      	bx	lr

08015a2e <_ZN8touchgfx12GraphLabelsXD1Ev>:
 8015a2e:	4770      	bx	lr

08015a30 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 8015a30:	b538      	push	{r3, r4, r5, lr}
 8015a32:	680a      	ldr	r2, [r1, #0]
 8015a34:	e9d0 540d 	ldrd	r5, r4, [r0, #52]	; 0x34
 8015a38:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 8015a3c:	4608      	mov	r0, r1
 8015a3e:	4790      	blx	r2
 8015a40:	4629      	mov	r1, r5
 8015a42:	4602      	mov	r2, r0
 8015a44:	4620      	mov	r0, r4
 8015a46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8015a4a:	f7ff bae9 	b.w	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08015a4e <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 8015a4e:	b538      	push	{r3, r4, r5, lr}
 8015a50:	680a      	ldr	r2, [r1, #0]
 8015a52:	e9d0 540d 	ldrd	r5, r4, [r0, #52]	; 0x34
 8015a56:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 8015a5a:	4608      	mov	r0, r1
 8015a5c:	4790      	blx	r2
 8015a5e:	4629      	mov	r1, r5
 8015a60:	4602      	mov	r2, r0
 8015a62:	4620      	mov	r0, r4
 8015a64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8015a68:	f7ff bada 	b.w	8015020 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08015a6c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 8015a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a70:	4b3b      	ldr	r3, [pc, #236]	; (8015b60 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xf4>)
 8015a72:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 8015a76:	881b      	ldrh	r3, [r3, #0]
 8015a78:	4293      	cmp	r3, r2
 8015a7a:	b087      	sub	sp, #28
 8015a7c:	4604      	mov	r4, r0
 8015a7e:	4689      	mov	r9, r1
 8015a80:	d93e      	bls.n	8015b00 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8015a82:	4b38      	ldr	r3, [pc, #224]	; (8015b64 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xf8>)
 8015a84:	681b      	ldr	r3, [r3, #0]
 8015a86:	b92b      	cbnz	r3, 8015a94 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x28>
 8015a88:	4b37      	ldr	r3, [pc, #220]	; (8015b68 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xfc>)
 8015a8a:	4a38      	ldr	r2, [pc, #224]	; (8015b6c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x100>)
 8015a8c:	4838      	ldr	r0, [pc, #224]	; (8015b70 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x104>)
 8015a8e:	21ae      	movs	r1, #174	; 0xae
 8015a90:	f016 fab0 	bl	802bff4 <__assert_func>
 8015a94:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8015a98:	4b36      	ldr	r3, [pc, #216]	; (8015b74 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x108>)
 8015a9a:	681b      	ldr	r3, [r3, #0]
 8015a9c:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 8015aa0:	f1b8 0f00 	cmp.w	r8, #0
 8015aa4:	d02c      	beq.n	8015b00 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8015aa6:	6803      	ldr	r3, [r0, #0]
 8015aa8:	6945      	ldr	r5, [r0, #20]
 8015aaa:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015aac:	2d00      	cmp	r5, #0
 8015aae:	d052      	beq.n	8015b56 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xea>
 8015ab0:	696f      	ldr	r7, [r5, #20]
 8015ab2:	4798      	blx	r3
 8015ab4:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 8015ab8:	fb15 f000 	smulbb	r0, r5, r0
 8015abc:	b280      	uxth	r0, r0
 8015abe:	1c45      	adds	r5, r0, #1
 8015ac0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015ac4:	122d      	asrs	r5, r5, #8
 8015ac6:	d01b      	beq.n	8015b00 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8015ac8:	6823      	ldr	r3, [r4, #0]
 8015aca:	4639      	mov	r1, r7
 8015acc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015ad0:	4620      	mov	r0, r4
 8015ad2:	4798      	blx	r3
 8015ad4:	6823      	ldr	r3, [r4, #0]
 8015ad6:	4606      	mov	r6, r0
 8015ad8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8015adc:	4639      	mov	r1, r7
 8015ade:	4620      	mov	r0, r4
 8015ae0:	4798      	blx	r3
 8015ae2:	b2ed      	uxtb	r5, r5
 8015ae4:	4683      	mov	fp, r0
 8015ae6:	b970      	cbnz	r0, 8015b06 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x9a>
 8015ae8:	b96e      	cbnz	r6, 8015b06 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x9a>
 8015aea:	e9cd 6501 	strd	r6, r5, [sp, #4]
 8015aee:	6823      	ldr	r3, [r4, #0]
 8015af0:	9600      	str	r6, [sp, #0]
 8015af2:	f8d3 5090 	ldr.w	r5, [r3, #144]	; 0x90
 8015af6:	4642      	mov	r2, r8
 8015af8:	463b      	mov	r3, r7
 8015afa:	4649      	mov	r1, r9
 8015afc:	4620      	mov	r0, r4
 8015afe:	47a8      	blx	r5
 8015b00:	b007      	add	sp, #28
 8015b02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b06:	2e00      	cmp	r6, #0
 8015b08:	ddfa      	ble.n	8015b00 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8015b0a:	6823      	ldr	r3, [r4, #0]
 8015b0c:	4639      	mov	r1, r7
 8015b0e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8015b12:	4620      	mov	r0, r4
 8015b14:	4798      	blx	r3
 8015b16:	6823      	ldr	r3, [r4, #0]
 8015b18:	4682      	mov	sl, r0
 8015b1a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015b1e:	4639      	mov	r1, r7
 8015b20:	4620      	mov	r0, r4
 8015b22:	4798      	blx	r3
 8015b24:	4582      	cmp	sl, r0
 8015b26:	bfde      	ittt	le
 8015b28:	4603      	movle	r3, r0
 8015b2a:	4650      	movle	r0, sl
 8015b2c:	469a      	movle	sl, r3
 8015b2e:	ebaa 0300 	sub.w	r3, sl, r0
 8015b32:	fb93 f3f6 	sdiv	r3, r3, r6
 8015b36:	2b64      	cmp	r3, #100	; 0x64
 8015b38:	dce2      	bgt.n	8015b00 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8015b3a:	e9cd b503 	strd	fp, r5, [sp, #12]
 8015b3e:	e9cd a601 	strd	sl, r6, [sp, #4]
 8015b42:	6823      	ldr	r3, [r4, #0]
 8015b44:	9000      	str	r0, [sp, #0]
 8015b46:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 8015b4a:	4642      	mov	r2, r8
 8015b4c:	463b      	mov	r3, r7
 8015b4e:	4649      	mov	r1, r9
 8015b50:	4620      	mov	r0, r4
 8015b52:	47a8      	blx	r5
 8015b54:	e7d4      	b.n	8015b00 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x94>
 8015b56:	4798      	blx	r3
 8015b58:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8015b5c:	deff      	udf	#255	; 0xff
 8015b5e:	bf00      	nop
 8015b60:	2001e234 	.word	0x2001e234
 8015b64:	2001e230 	.word	0x2001e230
 8015b68:	0802f700 	.word	0x0802f700
 8015b6c:	08034678 	.word	0x08034678
 8015b70:	0802f78e 	.word	0x0802f78e
 8015b74:	2001e238 	.word	0x2001e238

08015b78 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 8015b78:	b510      	push	{r4, lr}
 8015b7a:	2150      	movs	r1, #80	; 0x50
 8015b7c:	4604      	mov	r4, r0
 8015b7e:	f015 faec 	bl	802b15a <_ZdlPvj>
 8015b82:	4620      	mov	r0, r4
 8015b84:	bd10      	pop	{r4, pc}

08015b86 <_ZN8touchgfx12GraphLabelsXD0Ev>:
 8015b86:	b510      	push	{r4, lr}
 8015b88:	2150      	movs	r1, #80	; 0x50
 8015b8a:	4604      	mov	r4, r0
 8015b8c:	f015 fae5 	bl	802b15a <_ZdlPvj>
 8015b90:	4620      	mov	r0, r4
 8015b92:	bd10      	pop	{r4, pc}

08015b94 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 8015b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b98:	b08d      	sub	sp, #52	; 0x34
 8015b9a:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 8015b9e:	9309      	str	r3, [sp, #36]	; 0x24
 8015ba0:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 8015ba4:	930a      	str	r3, [sp, #40]	; 0x28
 8015ba6:	4606      	mov	r6, r0
 8015ba8:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8015bac:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 8015bb0:	f1b9 0f00 	cmp.w	r9, #0
 8015bb4:	d117      	bne.n	8015be6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 8015bb6:	2f00      	cmp	r7, #0
 8015bb8:	dc7c      	bgt.n	8015cb4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 8015bba:	f1b8 0f00 	cmp.w	r8, #0
 8015bbe:	da01      	bge.n	8015bc4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 8015bc0:	2f00      	cmp	r7, #0
 8015bc2:	d17a      	bne.n	8015cba <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 8015bc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015bc6:	9318      	str	r3, [sp, #96]	; 0x60
 8015bc8:	2300      	movs	r3, #0
 8015bca:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 8015bce:	6832      	ldr	r2, [r6, #0]
 8015bd0:	9907      	ldr	r1, [sp, #28]
 8015bd2:	f8d2 4090 	ldr.w	r4, [r2, #144]	; 0x90
 8015bd6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8015bda:	4630      	mov	r0, r6
 8015bdc:	46a4      	mov	ip, r4
 8015bde:	b00d      	add	sp, #52	; 0x34
 8015be0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015be4:	4760      	bx	ip
 8015be6:	fb97 f4f9 	sdiv	r4, r7, r9
 8015bea:	1e63      	subs	r3, r4, #1
 8015bec:	9305      	str	r3, [sp, #20]
 8015bee:	f1ba 0f00 	cmp.w	sl, #0
 8015bf2:	d122      	bne.n	8015c3a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 8015bf4:	fb98 faf9 	sdiv	sl, r8, r9
 8015bf8:	fb03 f509 	mul.w	r5, r3, r9
 8015bfc:	f10a 0a02 	add.w	sl, sl, #2
 8015c00:	9b05      	ldr	r3, [sp, #20]
 8015c02:	459a      	cmp	sl, r3
 8015c04:	d059      	beq.n	8015cba <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 8015c06:	42af      	cmp	r7, r5
 8015c08:	dc5a      	bgt.n	8015cc0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 8015c0a:	45a8      	cmp	r8, r5
 8015c0c:	da01      	bge.n	8015c12 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 8015c0e:	42af      	cmp	r7, r5
 8015c10:	db0e      	blt.n	8015c30 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 8015c12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015c14:	9302      	str	r3, [sp, #8]
 8015c16:	9905      	ldr	r1, [sp, #20]
 8015c18:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8015c1a:	6832      	ldr	r2, [r6, #0]
 8015c1c:	434b      	muls	r3, r1
 8015c1e:	e9cd 5300 	strd	r5, r3, [sp]
 8015c22:	9907      	ldr	r1, [sp, #28]
 8015c24:	f8d2 b090 	ldr.w	fp, [r2, #144]	; 0x90
 8015c28:	4630      	mov	r0, r6
 8015c2a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8015c2e:	47d8      	blx	fp
 8015c30:	9b05      	ldr	r3, [sp, #20]
 8015c32:	3301      	adds	r3, #1
 8015c34:	9305      	str	r3, [sp, #20]
 8015c36:	444d      	add	r5, r9
 8015c38:	e7e2      	b.n	8015c00 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 8015c3a:	fb97 f3fa 	sdiv	r3, r7, sl
 8015c3e:	3b01      	subs	r3, #1
 8015c40:	9306      	str	r3, [sp, #24]
 8015c42:	9a06      	ldr	r2, [sp, #24]
 8015c44:	fb98 f3fa 	sdiv	r3, r8, sl
 8015c48:	fb02 fb0a 	mul.w	fp, r2, sl
 8015c4c:	9a05      	ldr	r2, [sp, #20]
 8015c4e:	3302      	adds	r3, #2
 8015c50:	fb02 f509 	mul.w	r5, r2, r9
 8015c54:	930b      	str	r3, [sp, #44]	; 0x2c
 8015c56:	45ab      	cmp	fp, r5
 8015c58:	dd1d      	ble.n	8015c96 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 8015c5a:	42af      	cmp	r7, r5
 8015c5c:	dc08      	bgt.n	8015c70 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 8015c5e:	45a8      	cmp	r8, r5
 8015c60:	da08      	bge.n	8015c74 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 8015c62:	42af      	cmp	r7, r5
 8015c64:	da06      	bge.n	8015c74 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 8015c66:	9b05      	ldr	r3, [sp, #20]
 8015c68:	3301      	adds	r3, #1
 8015c6a:	9305      	str	r3, [sp, #20]
 8015c6c:	444d      	add	r5, r9
 8015c6e:	e7f2      	b.n	8015c56 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 8015c70:	45a8      	cmp	r8, r5
 8015c72:	dcf8      	bgt.n	8015c66 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 8015c74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015c76:	9302      	str	r3, [sp, #8]
 8015c78:	9905      	ldr	r1, [sp, #20]
 8015c7a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8015c7c:	6832      	ldr	r2, [r6, #0]
 8015c7e:	434b      	muls	r3, r1
 8015c80:	e9cd 5300 	strd	r5, r3, [sp]
 8015c84:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8015c88:	9907      	ldr	r1, [sp, #28]
 8015c8a:	461c      	mov	r4, r3
 8015c8c:	4630      	mov	r0, r6
 8015c8e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8015c92:	47a0      	blx	r4
 8015c94:	e7e7      	b.n	8015c66 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 8015c96:	45ab      	cmp	fp, r5
 8015c98:	db04      	blt.n	8015ca4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 8015c9a:	9b05      	ldr	r3, [sp, #20]
 8015c9c:	3301      	adds	r3, #1
 8015c9e:	9305      	str	r3, [sp, #20]
 8015ca0:	444d      	add	r5, r9
 8015ca2:	e7f8      	b.n	8015c96 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 8015ca4:	9b06      	ldr	r3, [sp, #24]
 8015ca6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015ca8:	3301      	adds	r3, #1
 8015caa:	4293      	cmp	r3, r2
 8015cac:	9306      	str	r3, [sp, #24]
 8015cae:	d004      	beq.n	8015cba <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 8015cb0:	44d3      	add	fp, sl
 8015cb2:	e7d0      	b.n	8015c56 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 8015cb4:	f1b8 0f00 	cmp.w	r8, #0
 8015cb8:	dd84      	ble.n	8015bc4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 8015cba:	b00d      	add	sp, #52	; 0x34
 8015cbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cc0:	45a8      	cmp	r8, r5
 8015cc2:	dcb5      	bgt.n	8015c30 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 8015cc4:	e7a5      	b.n	8015c12 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

08015cc6 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 8015cc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cca:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 8015cce:	b089      	sub	sp, #36	; 0x24
 8015cd0:	2c00      	cmp	r4, #0
 8015cd2:	9007      	str	r0, [sp, #28]
 8015cd4:	468a      	mov	sl, r1
 8015cd6:	4693      	mov	fp, r2
 8015cd8:	461d      	mov	r5, r3
 8015cda:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 8015cde:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 8015ce2:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8015ce6:	dd03      	ble.n	8015cf0 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 8015ce8:	4564      	cmp	r4, ip
 8015cea:	dd01      	ble.n	8015cf0 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 8015cec:	42b4      	cmp	r4, r6
 8015cee:	dd0e      	ble.n	8015d0e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 8015cf0:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 8015cf4:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 8015cf8:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 8015cfc:	9807      	ldr	r0, [sp, #28]
 8015cfe:	462b      	mov	r3, r5
 8015d00:	465a      	mov	r2, fp
 8015d02:	4651      	mov	r1, sl
 8015d04:	b009      	add	sp, #36	; 0x24
 8015d06:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d0a:	f7ff bf43 	b.w	8015b94 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 8015d0e:	f104 3eff 	add.w	lr, r4, #4294967295
 8015d12:	e9cd 8903 	strd	r8, r9, [sp, #12]
 8015d16:	9702      	str	r7, [sp, #8]
 8015d18:	e9cd ce00 	strd	ip, lr, [sp]
 8015d1c:	f7ff ff3a 	bl	8015b94 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 8015d20:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 8015d24:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 8015d28:	9412      	str	r4, [sp, #72]	; 0x48
 8015d2a:	e7e7      	b.n	8015cfc <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

08015d2c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 8015d2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015d30:	f1b3 0900 	subs.w	r9, r3, #0
 8015d34:	460d      	mov	r5, r1
 8015d36:	4690      	mov	r8, r2
 8015d38:	9f08      	ldr	r7, [sp, #32]
 8015d3a:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 8015d3e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015d40:	da18      	bge.n	8015d74 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 8015d42:	2a01      	cmp	r2, #1
 8015d44:	dd16      	ble.n	8015d74 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 8015d46:	232d      	movs	r3, #45	; 0x2d
 8015d48:	800b      	strh	r3, [r1, #0]
 8015d4a:	f1c9 0900 	rsb	r9, r9, #0
 8015d4e:	2001      	movs	r0, #1
 8015d50:	2f00      	cmp	r7, #0
 8015d52:	d111      	bne.n	8015d78 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 8015d54:	eba8 0100 	sub.w	r1, r8, r0
 8015d58:	2302      	movs	r3, #2
 8015d5a:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8015d5e:	fb96 f3f3 	sdiv	r3, r6, r3
 8015d62:	4a24      	ldr	r2, [pc, #144]	; (8015df4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 8015d64:	444b      	add	r3, r9
 8015d66:	b289      	uxth	r1, r1
 8015d68:	fb93 f3f6 	sdiv	r3, r3, r6
 8015d6c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015d70:	f006 bbe6 	b.w	801c540 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8015d74:	2000      	movs	r0, #0
 8015d76:	e7eb      	b.n	8015d50 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 8015d78:	dd39      	ble.n	8015dee <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 8015d7a:	fb99 f4f6 	sdiv	r4, r9, r6
 8015d7e:	eba8 0100 	sub.w	r1, r8, r0
 8015d82:	4623      	mov	r3, r4
 8015d84:	4a1b      	ldr	r2, [pc, #108]	; (8015df4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 8015d86:	b289      	uxth	r1, r1
 8015d88:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8015d8c:	f006 fbd8 	bl	801c540 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8015d90:	4628      	mov	r0, r5
 8015d92:	f006 f861 	bl	801be58 <_ZN8touchgfx7Unicode6strlenEPKt>
 8015d96:	f108 38ff 	add.w	r8, r8, #4294967295
 8015d9a:	4580      	cmp	r8, r0
 8015d9c:	dd27      	ble.n	8015dee <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 8015d9e:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 8015da2:	fb06 9314 	mls	r3, r6, r4, r9
 8015da6:	3001      	adds	r0, #1
 8015da8:	2200      	movs	r2, #0
 8015daa:	f04f 090a 	mov.w	r9, #10
 8015dae:	f107 3aff 	add.w	sl, r7, #4294967295
 8015db2:	f04f 0e02 	mov.w	lr, #2
 8015db6:	fb96 fefe 	sdiv	lr, r6, lr
 8015dba:	4580      	cmp	r8, r0
 8015dbc:	4684      	mov	ip, r0
 8015dbe:	dd13      	ble.n	8015de8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 8015dc0:	fb09 f303 	mul.w	r3, r9, r3
 8015dc4:	4592      	cmp	sl, r2
 8015dc6:	f102 0201 	add.w	r2, r2, #1
 8015dca:	bf08      	it	eq
 8015dcc:	4473      	addeq	r3, lr
 8015dce:	f100 0c01 	add.w	ip, r0, #1
 8015dd2:	fb93 f4f6 	sdiv	r4, r3, r6
 8015dd6:	4297      	cmp	r7, r2
 8015dd8:	f104 0130 	add.w	r1, r4, #48	; 0x30
 8015ddc:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 8015de0:	fb06 3314 	mls	r3, r6, r4, r3
 8015de4:	4660      	mov	r0, ip
 8015de6:	d1e8      	bne.n	8015dba <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 8015de8:	2300      	movs	r3, #0
 8015dea:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 8015dee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015df2:	bf00      	nop
 8015df4:	08032d0c 	.word	0x08032d0c

08015df8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 8015df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dfc:	4b87      	ldr	r3, [pc, #540]	; (801601c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x224>)
 8015dfe:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 8015e02:	460e      	mov	r6, r1
 8015e04:	8819      	ldrh	r1, [r3, #0]
 8015e06:	4291      	cmp	r1, r2
 8015e08:	b095      	sub	sp, #84	; 0x54
 8015e0a:	4604      	mov	r4, r0
 8015e0c:	4699      	mov	r9, r3
 8015e0e:	d942      	bls.n	8015e96 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015e10:	4983      	ldr	r1, [pc, #524]	; (8016020 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x228>)
 8015e12:	680b      	ldr	r3, [r1, #0]
 8015e14:	468a      	mov	sl, r1
 8015e16:	b92b      	cbnz	r3, 8015e24 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x2c>
 8015e18:	4b82      	ldr	r3, [pc, #520]	; (8016024 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x22c>)
 8015e1a:	4a83      	ldr	r2, [pc, #524]	; (8016028 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x230>)
 8015e1c:	21ae      	movs	r1, #174	; 0xae
 8015e1e:	4883      	ldr	r0, [pc, #524]	; (801602c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x234>)
 8015e20:	f016 f8e8 	bl	802bff4 <__assert_func>
 8015e24:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8015e28:	4b81      	ldr	r3, [pc, #516]	; (8016030 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x238>)
 8015e2a:	681b      	ldr	r3, [r3, #0]
 8015e2c:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 8015e30:	f1b8 0f00 	cmp.w	r8, #0
 8015e34:	d02f      	beq.n	8015e96 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015e36:	6803      	ldr	r3, [r0, #0]
 8015e38:	6945      	ldr	r5, [r0, #20]
 8015e3a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015e3c:	2d00      	cmp	r5, #0
 8015e3e:	f000 80e9 	beq.w	8016014 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x21c>
 8015e42:	696f      	ldr	r7, [r5, #20]
 8015e44:	4798      	blx	r3
 8015e46:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8015e4a:	fb13 f000 	smulbb	r0, r3, r0
 8015e4e:	b280      	uxth	r0, r0
 8015e50:	1c43      	adds	r3, r0, #1
 8015e52:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015e56:	0a03      	lsrs	r3, r0, #8
 8015e58:	d01d      	beq.n	8015e96 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015e5a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8015e5c:	6823      	ldr	r3, [r4, #0]
 8015e5e:	434e      	muls	r6, r1
 8015e60:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015e64:	4639      	mov	r1, r7
 8015e66:	4620      	mov	r0, r4
 8015e68:	4798      	blx	r3
 8015e6a:	6823      	ldr	r3, [r4, #0]
 8015e6c:	4605      	mov	r5, r0
 8015e6e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8015e72:	4639      	mov	r1, r7
 8015e74:	4620      	mov	r0, r4
 8015e76:	4798      	blx	r3
 8015e78:	2d00      	cmp	r5, #0
 8015e7a:	dd0f      	ble.n	8015e9c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 8015e7c:	fb96 f3f5 	sdiv	r3, r6, r5
 8015e80:	436b      	muls	r3, r5
 8015e82:	1b9a      	subs	r2, r3, r6
 8015e84:	4253      	negs	r3, r2
 8015e86:	4153      	adcs	r3, r2
 8015e88:	2800      	cmp	r0, #0
 8015e8a:	dd09      	ble.n	8015ea0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 8015e8c:	fb96 f2f0 	sdiv	r2, r6, r0
 8015e90:	4350      	muls	r0, r2
 8015e92:	42b0      	cmp	r0, r6
 8015e94:	d10e      	bne.n	8015eb4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xbc>
 8015e96:	b015      	add	sp, #84	; 0x54
 8015e98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e9c:	2300      	movs	r3, #0
 8015e9e:	e7f3      	b.n	8015e88 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 8015ea0:	d108      	bne.n	8015eb4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xbc>
 8015ea2:	2d00      	cmp	r5, #0
 8015ea4:	f040 80b2 	bne.w	801600c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x214>
 8015ea8:	2e00      	cmp	r6, #0
 8015eaa:	d037      	beq.n	8015f1c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x124>
 8015eac:	2b00      	cmp	r3, #0
 8015eae:	d0f2      	beq.n	8015e96 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015eb0:	462a      	mov	r2, r5
 8015eb2:	e007      	b.n	8015ec4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xcc>
 8015eb4:	2b00      	cmp	r3, #0
 8015eb6:	d0ee      	beq.n	8015e96 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015eb8:	2d00      	cmp	r5, #0
 8015eba:	d0f9      	beq.n	8015eb0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 8015ebc:	fb96 f2f5 	sdiv	r2, r6, r5
 8015ec0:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8015ec2:	436a      	muls	r2, r5
 8015ec4:	683b      	ldr	r3, [r7, #0]
 8015ec6:	f8df b170 	ldr.w	fp, [pc, #368]	; 8016038 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x240>
 8015eca:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 8015ece:	4631      	mov	r1, r6
 8015ed0:	4638      	mov	r0, r7
 8015ed2:	4798      	blx	r3
 8015ed4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8015ed6:	9302      	str	r3, [sp, #8]
 8015ed8:	f8b4 3048 	ldrh.w	r3, [r4, #72]	; 0x48
 8015edc:	9301      	str	r3, [sp, #4]
 8015ede:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8015ee2:	9300      	str	r3, [sp, #0]
 8015ee4:	2214      	movs	r2, #20
 8015ee6:	4603      	mov	r3, r0
 8015ee8:	a90a      	add	r1, sp, #40	; 0x28
 8015eea:	4620      	mov	r0, r4
 8015eec:	f7ff ff1e 	bl	8015d2c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 8015ef0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8015ef4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015ef8:	f8d8 3000 	ldr.w	r3, [r8]
 8015efc:	d13b      	bne.n	8015f76 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x17e>
 8015efe:	699d      	ldr	r5, [r3, #24]
 8015f00:	f8da 3000 	ldr.w	r3, [sl]
 8015f04:	2b00      	cmp	r3, #0
 8015f06:	d087      	beq.n	8015e18 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x20>
 8015f08:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8015f0c:	f8b9 3000 	ldrh.w	r3, [r9]
 8015f10:	428b      	cmp	r3, r1
 8015f12:	d805      	bhi.n	8015f20 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x128>
 8015f14:	4b47      	ldr	r3, [pc, #284]	; (8016034 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x23c>)
 8015f16:	4a44      	ldr	r2, [pc, #272]	; (8016028 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x230>)
 8015f18:	21af      	movs	r1, #175	; 0xaf
 8015f1a:	e780      	b.n	8015e1e <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x26>
 8015f1c:	4632      	mov	r2, r6
 8015f1e:	e7d1      	b.n	8015ec4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xcc>
 8015f20:	f8db 0000 	ldr.w	r0, [fp]
 8015f24:	f7f4 fee4 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8015f28:	aa0a      	add	r2, sp, #40	; 0x28
 8015f2a:	4601      	mov	r1, r0
 8015f2c:	4640      	mov	r0, r8
 8015f2e:	47a8      	blx	r5
 8015f30:	4605      	mov	r5, r0
 8015f32:	683b      	ldr	r3, [r7, #0]
 8015f34:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 8015f38:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8015f3c:	4631      	mov	r1, r6
 8015f3e:	4638      	mov	r0, r7
 8015f40:	4798      	blx	r3
 8015f42:	ab14      	add	r3, sp, #80	; 0x50
 8015f44:	f843 0d34 	str.w	r0, [r3, #-52]!
 8015f48:	4618      	mov	r0, r3
 8015f4a:	f7fe fe39 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8015f4e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015f52:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8015f56:	4440      	add	r0, r8
 8015f58:	6823      	ldr	r3, [r4, #0]
 8015f5a:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8015f5e:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 8015f62:	2200      	movs	r2, #0
 8015f64:	f8ad 0020 	strh.w	r0, [sp, #32]
 8015f68:	f8ad 2022 	strh.w	r2, [sp, #34]	; 0x22
 8015f6c:	691b      	ldr	r3, [r3, #16]
 8015f6e:	a908      	add	r1, sp, #32
 8015f70:	4620      	mov	r0, r4
 8015f72:	4798      	blx	r3
 8015f74:	e78f      	b.n	8015e96 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8015f76:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8015f78:	f8da 3000 	ldr.w	r3, [sl]
 8015f7c:	2b00      	cmp	r3, #0
 8015f7e:	f43f af4b 	beq.w	8015e18 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x20>
 8015f82:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8015f86:	f8b9 3000 	ldrh.w	r3, [r9]
 8015f8a:	428b      	cmp	r3, r1
 8015f8c:	d9c2      	bls.n	8015f14 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x11c>
 8015f8e:	f8db 0000 	ldr.w	r0, [fp]
 8015f92:	f7f4 fead 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8015f96:	aa0a      	add	r2, sp, #40	; 0x28
 8015f98:	4601      	mov	r1, r0
 8015f9a:	4640      	mov	r0, r8
 8015f9c:	47a8      	blx	r5
 8015f9e:	f8d8 3000 	ldr.w	r3, [r8]
 8015fa2:	f8da 2000 	ldr.w	r2, [sl]
 8015fa6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015fa8:	9305      	str	r3, [sp, #20]
 8015faa:	4605      	mov	r5, r0
 8015fac:	2a00      	cmp	r2, #0
 8015fae:	f43f af33 	beq.w	8015e18 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x20>
 8015fb2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8015fb6:	f8b9 2000 	ldrh.w	r2, [r9]
 8015fba:	428a      	cmp	r2, r1
 8015fbc:	d9aa      	bls.n	8015f14 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x11c>
 8015fbe:	f8db 0000 	ldr.w	r0, [fp]
 8015fc2:	f7f4 fe95 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8015fc6:	aa0a      	add	r2, sp, #40	; 0x28
 8015fc8:	4601      	mov	r1, r0
 8015fca:	9b05      	ldr	r3, [sp, #20]
 8015fcc:	4640      	mov	r0, r8
 8015fce:	4798      	blx	r3
 8015fd0:	f8d8 3000 	ldr.w	r3, [r8]
 8015fd4:	f8da 2000 	ldr.w	r2, [sl]
 8015fd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015fda:	9305      	str	r3, [sp, #20]
 8015fdc:	fb15 f500 	smulbb	r5, r5, r0
 8015fe0:	b2ad      	uxth	r5, r5
 8015fe2:	2a00      	cmp	r2, #0
 8015fe4:	f43f af18 	beq.w	8015e18 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x20>
 8015fe8:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8015fec:	f8b9 2000 	ldrh.w	r2, [r9]
 8015ff0:	428a      	cmp	r2, r1
 8015ff2:	d98f      	bls.n	8015f14 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x11c>
 8015ff4:	f8db 0000 	ldr.w	r0, [fp]
 8015ff8:	f7f4 fe7a 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8015ffc:	aa0a      	add	r2, sp, #40	; 0x28
 8015ffe:	4601      	mov	r1, r0
 8016000:	9b05      	ldr	r3, [sp, #20]
 8016002:	4640      	mov	r0, r8
 8016004:	4798      	blx	r3
 8016006:	4405      	add	r5, r0
 8016008:	b2ad      	uxth	r5, r5
 801600a:	e792      	b.n	8015f32 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x13a>
 801600c:	2b00      	cmp	r3, #0
 801600e:	f47f af55 	bne.w	8015ebc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xc4>
 8016012:	e740      	b.n	8015e96 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x9e>
 8016014:	4798      	blx	r3
 8016016:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 801601a:	deff      	udf	#255	; 0xff
 801601c:	2001e234 	.word	0x2001e234
 8016020:	2001e230 	.word	0x2001e230
 8016024:	0802f700 	.word	0x0802f700
 8016028:	08034678 	.word	0x08034678
 801602c:	0802f78e 	.word	0x0802f78e
 8016030:	2001e238 	.word	0x2001e238
 8016034:	08032d0f 	.word	0x08032d0f
 8016038:	2001e23c 	.word	0x2001e23c

0801603c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 801603c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016040:	461d      	mov	r5, r3
 8016042:	b09b      	sub	sp, #108	; 0x6c
 8016044:	681b      	ldr	r3, [r3, #0]
 8016046:	9104      	str	r1, [sp, #16]
 8016048:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 801604c:	9924      	ldr	r1, [sp, #144]	; 0x90
 801604e:	4604      	mov	r4, r0
 8016050:	4628      	mov	r0, r5
 8016052:	4617      	mov	r7, r2
 8016054:	4798      	blx	r3
 8016056:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 801605a:	f848 0d28 	str.w	r0, [r8, #-40]!
 801605e:	4640      	mov	r0, r8
 8016060:	f7fe fdae 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8016064:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 8016068:	1ac0      	subs	r0, r0, r3
 801606a:	b200      	sxth	r0, r0
 801606c:	2800      	cmp	r0, #0
 801606e:	f2c0 80cd 	blt.w	801620c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>
 8016072:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 8016076:	441a      	add	r2, r3
 8016078:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 801607c:	1a9b      	subs	r3, r3, r2
 801607e:	b21b      	sxth	r3, r3
 8016080:	4298      	cmp	r0, r3
 8016082:	f280 80c3 	bge.w	801620c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>
 8016086:	682b      	ldr	r3, [r5, #0]
 8016088:	f8df b22c 	ldr.w	fp, [pc, #556]	; 80162b8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x27c>
 801608c:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 8016090:	e9dd 1224 	ldrd	r1, r2, [sp, #144]	; 0x90
 8016094:	4628      	mov	r0, r5
 8016096:	4798      	blx	r3
 8016098:	682b      	ldr	r3, [r5, #0]
 801609a:	f8b4 9046 	ldrh.w	r9, [r4, #70]	; 0x46
 801609e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80160a2:	f8b4 a048 	ldrh.w	sl, [r4, #72]	; 0x48
 80160a6:	4606      	mov	r6, r0
 80160a8:	4628      	mov	r0, r5
 80160aa:	4798      	blx	r3
 80160ac:	f8cd 9000 	str.w	r9, [sp]
 80160b0:	e9cd a001 	strd	sl, r0, [sp, #4]
 80160b4:	4633      	mov	r3, r6
 80160b6:	2214      	movs	r2, #20
 80160b8:	4641      	mov	r1, r8
 80160ba:	4620      	mov	r0, r4
 80160bc:	f7ff fe36 	bl	8015d2c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 80160c0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80160c4:	f8df a1f4 	ldr.w	sl, [pc, #500]	; 80162bc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x280>
 80160c8:	f8df 91f4 	ldr.w	r9, [pc, #500]	; 80162c0 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x284>
 80160cc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80160d0:	683b      	ldr	r3, [r7, #0]
 80160d2:	f040 809e 	bne.w	8016212 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d6>
 80160d6:	699e      	ldr	r6, [r3, #24]
 80160d8:	f8db 3000 	ldr.w	r3, [fp]
 80160dc:	b92b      	cbnz	r3, 80160ea <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xae>
 80160de:	4b72      	ldr	r3, [pc, #456]	; (80162a8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x26c>)
 80160e0:	4a72      	ldr	r2, [pc, #456]	; (80162ac <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x270>)
 80160e2:	21ae      	movs	r1, #174	; 0xae
 80160e4:	4872      	ldr	r0, [pc, #456]	; (80162b0 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x274>)
 80160e6:	f015 ff85 	bl	802bff4 <__assert_func>
 80160ea:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80160ee:	f8ba 3000 	ldrh.w	r3, [sl]
 80160f2:	428b      	cmp	r3, r1
 80160f4:	d803      	bhi.n	80160fe <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc2>
 80160f6:	4b6f      	ldr	r3, [pc, #444]	; (80162b4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x278>)
 80160f8:	4a6c      	ldr	r2, [pc, #432]	; (80162ac <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x270>)
 80160fa:	21af      	movs	r1, #175	; 0xaf
 80160fc:	e7f2      	b.n	80160e4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 80160fe:	f8d9 0000 	ldr.w	r0, [r9]
 8016102:	f7f4 fdf5 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8016106:	4642      	mov	r2, r8
 8016108:	4601      	mov	r1, r0
 801610a:	4638      	mov	r0, r7
 801610c:	47b0      	blx	r6
 801610e:	4606      	mov	r6, r0
 8016110:	682b      	ldr	r3, [r5, #0]
 8016112:	9924      	ldr	r1, [sp, #144]	; 0x90
 8016114:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8016118:	f8b5 806c 	ldrh.w	r8, [r5, #108]	; 0x6c
 801611c:	4628      	mov	r0, r5
 801611e:	4798      	blx	r3
 8016120:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
 8016124:	ad07      	add	r5, sp, #28
 8016126:	f84a 0d3c 	str.w	r0, [sl, #-60]!
 801612a:	4650      	mov	r0, sl
 801612c:	f7fe fd48 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8016130:	4440      	add	r0, r8
 8016132:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8016136:	f8ad 6020 	strh.w	r6, [sp, #32]
 801613a:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 801613e:	f04f 0800 	mov.w	r8, #0
 8016142:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016146:	f8ad 001c 	strh.w	r0, [sp, #28]
 801614a:	f8ad 801e 	strh.w	r8, [sp, #30]
 801614e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016152:	ae09      	add	r6, sp, #36	; 0x24
 8016154:	e886 0003 	stmia.w	r6, {r0, r1}
 8016158:	9904      	ldr	r1, [sp, #16]
 801615a:	4630      	mov	r0, r6
 801615c:	f7fb ffda 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 8016160:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8016164:	4543      	cmp	r3, r8
 8016166:	dd51      	ble.n	801620c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>
 8016168:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801616c:	4543      	cmp	r3, r8
 801616e:	dd4d      	ble.n	801620c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>
 8016170:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8016174:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8016178:	1a9b      	subs	r3, r3, r2
 801617a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801617e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016182:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8016186:	1a9b      	subs	r3, r3, r2
 8016188:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801618c:	6823      	ldr	r3, [r4, #0]
 801618e:	4629      	mov	r1, r5
 8016190:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016192:	4620      	mov	r0, r4
 8016194:	4798      	blx	r3
 8016196:	4b48      	ldr	r3, [pc, #288]	; (80162b8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x27c>)
 8016198:	681b      	ldr	r3, [r3, #0]
 801619a:	2b00      	cmp	r3, #0
 801619c:	d09f      	beq.n	80160de <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa2>
 801619e:	4a47      	ldr	r2, [pc, #284]	; (80162bc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x280>)
 80161a0:	f8b4 b040 	ldrh.w	fp, [r4, #64]	; 0x40
 80161a4:	8812      	ldrh	r2, [r2, #0]
 80161a6:	455a      	cmp	r2, fp
 80161a8:	d9a5      	bls.n	80160f6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xba>
 80161aa:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 80161ae:	f894 1044 	ldrb.w	r1, [r4, #68]	; 0x44
 80161b2:	785b      	ldrb	r3, [r3, #1]
 80161b4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80161b6:	920d      	str	r2, [sp, #52]	; 0x34
 80161b8:	f3c3 0001 	ubfx	r0, r3, #0, #2
 80161bc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80161c0:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80161c4:	f89d 3098 	ldrb.w	r3, [sp, #152]	; 0x98
 80161c8:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 80161cc:	f88d 1032 	strb.w	r1, [sp, #50]	; 0x32
 80161d0:	970b      	str	r7, [sp, #44]	; 0x2c
 80161d2:	f88d 0030 	strb.w	r0, [sp, #48]	; 0x30
 80161d6:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 80161da:	f88d 803b 	strb.w	r8, [sp, #59]	; 0x3b
 80161de:	f88d 803c 	strb.w	r8, [sp, #60]	; 0x3c
 80161e2:	f7fc fa65 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 80161e6:	4659      	mov	r1, fp
 80161e8:	4604      	mov	r4, r0
 80161ea:	f8d9 0000 	ldr.w	r0, [r9]
 80161ee:	f7f4 fd7f 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 80161f2:	ab10      	add	r3, sp, #64	; 0x40
 80161f4:	e9cd 0301 	strd	r0, r3, [sp, #4]
 80161f8:	f8cd 800c 	str.w	r8, [sp, #12]
 80161fc:	f8cd a000 	str.w	sl, [sp]
 8016200:	4633      	mov	r3, r6
 8016202:	e895 0006 	ldmia.w	r5, {r1, r2}
 8016206:	4620      	mov	r0, r4
 8016208:	f7f4 fd24 	bl	800ac54 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801620c:	b01b      	add	sp, #108	; 0x6c
 801620e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016212:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 8016214:	f8db 3000 	ldr.w	r3, [fp]
 8016218:	2b00      	cmp	r3, #0
 801621a:	f43f af60 	beq.w	80160de <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa2>
 801621e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8016222:	f8ba 3000 	ldrh.w	r3, [sl]
 8016226:	428b      	cmp	r3, r1
 8016228:	f67f af65 	bls.w	80160f6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xba>
 801622c:	f8d9 0000 	ldr.w	r0, [r9]
 8016230:	f7f4 fd5e 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8016234:	4642      	mov	r2, r8
 8016236:	4601      	mov	r1, r0
 8016238:	4638      	mov	r0, r7
 801623a:	47b0      	blx	r6
 801623c:	683a      	ldr	r2, [r7, #0]
 801623e:	9005      	str	r0, [sp, #20]
 8016240:	6c16      	ldr	r6, [r2, #64]	; 0x40
 8016242:	f8db 2000 	ldr.w	r2, [fp]
 8016246:	2a00      	cmp	r2, #0
 8016248:	f43f af49 	beq.w	80160de <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa2>
 801624c:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8016250:	f8ba 2000 	ldrh.w	r2, [sl]
 8016254:	428a      	cmp	r2, r1
 8016256:	f67f af4e 	bls.w	80160f6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xba>
 801625a:	f8d9 0000 	ldr.w	r0, [r9]
 801625e:	f7f4 fd47 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8016262:	4642      	mov	r2, r8
 8016264:	4601      	mov	r1, r0
 8016266:	4638      	mov	r0, r7
 8016268:	47b0      	blx	r6
 801626a:	9b05      	ldr	r3, [sp, #20]
 801626c:	f8db 2000 	ldr.w	r2, [fp]
 8016270:	fb13 f000 	smulbb	r0, r3, r0
 8016274:	683b      	ldr	r3, [r7, #0]
 8016276:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016278:	9305      	str	r3, [sp, #20]
 801627a:	b286      	uxth	r6, r0
 801627c:	2a00      	cmp	r2, #0
 801627e:	f43f af2e 	beq.w	80160de <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa2>
 8016282:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8016286:	f8ba 2000 	ldrh.w	r2, [sl]
 801628a:	428a      	cmp	r2, r1
 801628c:	f67f af33 	bls.w	80160f6 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xba>
 8016290:	f8d9 0000 	ldr.w	r0, [r9]
 8016294:	f7f4 fd2c 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8016298:	4642      	mov	r2, r8
 801629a:	4601      	mov	r1, r0
 801629c:	9b05      	ldr	r3, [sp, #20]
 801629e:	4638      	mov	r0, r7
 80162a0:	4798      	blx	r3
 80162a2:	4406      	add	r6, r0
 80162a4:	b2b6      	uxth	r6, r6
 80162a6:	e733      	b.n	8016110 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xd4>
 80162a8:	0802f700 	.word	0x0802f700
 80162ac:	08034678 	.word	0x08034678
 80162b0:	0802f78e 	.word	0x0802f78e
 80162b4:	08032d0f 	.word	0x08032d0f
 80162b8:	2001e230 	.word	0x2001e230
 80162bc:	2001e234 	.word	0x2001e234
 80162c0:	2001e23c 	.word	0x2001e23c

080162c4 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 80162c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162c8:	461f      	mov	r7, r3
 80162ca:	b09b      	sub	sp, #108	; 0x6c
 80162cc:	681b      	ldr	r3, [r3, #0]
 80162ce:	9104      	str	r1, [sp, #16]
 80162d0:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 80162d4:	9924      	ldr	r1, [sp, #144]	; 0x90
 80162d6:	4604      	mov	r4, r0
 80162d8:	4638      	mov	r0, r7
 80162da:	4616      	mov	r6, r2
 80162dc:	4798      	blx	r3
 80162de:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 80162e2:	f848 0d28 	str.w	r0, [r8, #-40]!
 80162e6:	4640      	mov	r0, r8
 80162e8:	f7fe fc6a 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80162ec:	f8b7 3114 	ldrh.w	r3, [r7, #276]	; 0x114
 80162f0:	1ac0      	subs	r0, r0, r3
 80162f2:	b200      	sxth	r0, r0
 80162f4:	2800      	cmp	r0, #0
 80162f6:	f2c0 80f1 	blt.w	80164dc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x218>
 80162fa:	f8b7 211a 	ldrh.w	r2, [r7, #282]	; 0x11a
 80162fe:	441a      	add	r2, r3
 8016300:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 8016304:	1a9b      	subs	r3, r3, r2
 8016306:	b21b      	sxth	r3, r3
 8016308:	4298      	cmp	r0, r3
 801630a:	f280 80e7 	bge.w	80164dc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x218>
 801630e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8016310:	9302      	str	r3, [sp, #8]
 8016312:	f8b4 3048 	ldrh.w	r3, [r4, #72]	; 0x48
 8016316:	9301      	str	r3, [sp, #4]
 8016318:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 801631c:	9300      	str	r3, [sp, #0]
 801631e:	2214      	movs	r2, #20
 8016320:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016322:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 8016520 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x25c>
 8016326:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 8016524 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x260>
 801632a:	f8df 91fc 	ldr.w	r9, [pc, #508]	; 8016528 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x264>
 801632e:	4641      	mov	r1, r8
 8016330:	4620      	mov	r0, r4
 8016332:	f7ff fcfb 	bl	8015d2c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 8016336:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801633a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801633e:	6833      	ldr	r3, [r6, #0]
 8016340:	f040 80cf 	bne.w	80164e2 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x21e>
 8016344:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8016346:	f8db 3000 	ldr.w	r3, [fp]
 801634a:	b92b      	cbnz	r3, 8016358 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x94>
 801634c:	4b70      	ldr	r3, [pc, #448]	; (8016510 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x24c>)
 801634e:	4a71      	ldr	r2, [pc, #452]	; (8016514 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x250>)
 8016350:	21ae      	movs	r1, #174	; 0xae
 8016352:	4871      	ldr	r0, [pc, #452]	; (8016518 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x254>)
 8016354:	f015 fe4e 	bl	802bff4 <__assert_func>
 8016358:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801635c:	f8ba 3000 	ldrh.w	r3, [sl]
 8016360:	428b      	cmp	r3, r1
 8016362:	d803      	bhi.n	801636c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 8016364:	4b6d      	ldr	r3, [pc, #436]	; (801651c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x258>)
 8016366:	4a6b      	ldr	r2, [pc, #428]	; (8016514 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x250>)
 8016368:	21af      	movs	r1, #175	; 0xaf
 801636a:	e7f2      	b.n	8016352 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x8e>
 801636c:	f8d9 0000 	ldr.w	r0, [r9]
 8016370:	f7f4 fcbe 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8016374:	4642      	mov	r2, r8
 8016376:	4601      	mov	r1, r0
 8016378:	4630      	mov	r0, r6
 801637a:	47a8      	blx	r5
 801637c:	6832      	ldr	r2, [r6, #0]
 801637e:	9005      	str	r0, [sp, #20]
 8016380:	6c15      	ldr	r5, [r2, #64]	; 0x40
 8016382:	f8db 2000 	ldr.w	r2, [fp]
 8016386:	2a00      	cmp	r2, #0
 8016388:	d0e0      	beq.n	801634c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x88>
 801638a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801638e:	f8ba 2000 	ldrh.w	r2, [sl]
 8016392:	428a      	cmp	r2, r1
 8016394:	d9e6      	bls.n	8016364 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa0>
 8016396:	f8d9 0000 	ldr.w	r0, [r9]
 801639a:	f7f4 fca9 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 801639e:	4642      	mov	r2, r8
 80163a0:	4601      	mov	r1, r0
 80163a2:	4630      	mov	r0, r6
 80163a4:	47a8      	blx	r5
 80163a6:	9b05      	ldr	r3, [sp, #20]
 80163a8:	f8db 2000 	ldr.w	r2, [fp]
 80163ac:	fb13 f000 	smulbb	r0, r3, r0
 80163b0:	6833      	ldr	r3, [r6, #0]
 80163b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80163b4:	9305      	str	r3, [sp, #20]
 80163b6:	b285      	uxth	r5, r0
 80163b8:	2a00      	cmp	r2, #0
 80163ba:	d0c7      	beq.n	801634c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x88>
 80163bc:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80163c0:	f8ba 2000 	ldrh.w	r2, [sl]
 80163c4:	428a      	cmp	r2, r1
 80163c6:	d9cd      	bls.n	8016364 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa0>
 80163c8:	f8d9 0000 	ldr.w	r0, [r9]
 80163cc:	f7f4 fc90 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 80163d0:	4642      	mov	r2, r8
 80163d2:	4601      	mov	r1, r0
 80163d4:	9b05      	ldr	r3, [sp, #20]
 80163d6:	4630      	mov	r0, r6
 80163d8:	4798      	blx	r3
 80163da:	4405      	add	r5, r0
 80163dc:	b2ad      	uxth	r5, r5
 80163de:	683b      	ldr	r3, [r7, #0]
 80163e0:	9924      	ldr	r1, [sp, #144]	; 0x90
 80163e2:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 80163e6:	f8b7 a0c6 	ldrh.w	sl, [r7, #198]	; 0xc6
 80163ea:	4638      	mov	r0, r7
 80163ec:	4798      	blx	r3
 80163ee:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 80163f2:	2700      	movs	r7, #0
 80163f4:	f848 0d3c 	str.w	r0, [r8, #-60]!
 80163f8:	4640      	mov	r0, r8
 80163fa:	f7fe fbe1 	bl	8014bc0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80163fe:	4450      	add	r0, sl
 8016400:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8016404:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016408:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 801640c:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 8016410:	f8ad 701c 	strh.w	r7, [sp, #28]
 8016414:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016418:	ad07      	add	r5, sp, #28
 801641a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801641e:	f10d 0a24 	add.w	sl, sp, #36	; 0x24
 8016422:	e88a 0003 	stmia.w	sl, {r0, r1}
 8016426:	9904      	ldr	r1, [sp, #16]
 8016428:	4650      	mov	r0, sl
 801642a:	f7fb fe73 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801642e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8016432:	42bb      	cmp	r3, r7
 8016434:	dd52      	ble.n	80164dc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x218>
 8016436:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801643a:	42bb      	cmp	r3, r7
 801643c:	dd4e      	ble.n	80164dc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x218>
 801643e:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8016442:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8016446:	1a9b      	subs	r3, r3, r2
 8016448:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801644c:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016450:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8016454:	1a9b      	subs	r3, r3, r2
 8016456:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801645a:	6823      	ldr	r3, [r4, #0]
 801645c:	4629      	mov	r1, r5
 801645e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016460:	4620      	mov	r0, r4
 8016462:	4798      	blx	r3
 8016464:	4b2e      	ldr	r3, [pc, #184]	; (8016520 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x25c>)
 8016466:	681b      	ldr	r3, [r3, #0]
 8016468:	2b00      	cmp	r3, #0
 801646a:	f43f af6f 	beq.w	801634c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x88>
 801646e:	4a2d      	ldr	r2, [pc, #180]	; (8016524 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x260>)
 8016470:	f8b4 b040 	ldrh.w	fp, [r4, #64]	; 0x40
 8016474:	8812      	ldrh	r2, [r2, #0]
 8016476:	455a      	cmp	r2, fp
 8016478:	f67f af74 	bls.w	8016364 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa0>
 801647c:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 8016480:	f894 1044 	ldrb.w	r1, [r4, #68]	; 0x44
 8016484:	785b      	ldrb	r3, [r3, #1]
 8016486:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8016488:	920d      	str	r2, [sp, #52]	; 0x34
 801648a:	f3c3 0001 	ubfx	r0, r3, #0, #2
 801648e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016492:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8016496:	f89d 3098 	ldrb.w	r3, [sp, #152]	; 0x98
 801649a:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801649e:	f88d 1032 	strb.w	r1, [sp, #50]	; 0x32
 80164a2:	960b      	str	r6, [sp, #44]	; 0x2c
 80164a4:	f88d 0030 	strb.w	r0, [sp, #48]	; 0x30
 80164a8:	f8ad 7038 	strh.w	r7, [sp, #56]	; 0x38
 80164ac:	f88d 703b 	strb.w	r7, [sp, #59]	; 0x3b
 80164b0:	f88d 703c 	strb.w	r7, [sp, #60]	; 0x3c
 80164b4:	f7fc f8fc 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 80164b8:	4659      	mov	r1, fp
 80164ba:	4604      	mov	r4, r0
 80164bc:	f8d9 0000 	ldr.w	r0, [r9]
 80164c0:	f7f4 fc16 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 80164c4:	ab10      	add	r3, sp, #64	; 0x40
 80164c6:	e9cd 0301 	strd	r0, r3, [sp, #4]
 80164ca:	9703      	str	r7, [sp, #12]
 80164cc:	f8cd 8000 	str.w	r8, [sp]
 80164d0:	4653      	mov	r3, sl
 80164d2:	e895 0006 	ldmia.w	r5, {r1, r2}
 80164d6:	4620      	mov	r0, r4
 80164d8:	f7f4 fbbc 	bl	800ac54 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80164dc:	b01b      	add	sp, #108	; 0x6c
 80164de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164e2:	699d      	ldr	r5, [r3, #24]
 80164e4:	f8db 3000 	ldr.w	r3, [fp]
 80164e8:	2b00      	cmp	r3, #0
 80164ea:	f43f af2f 	beq.w	801634c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x88>
 80164ee:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80164f2:	f8ba 3000 	ldrh.w	r3, [sl]
 80164f6:	428b      	cmp	r3, r1
 80164f8:	f67f af34 	bls.w	8016364 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa0>
 80164fc:	f8d9 0000 	ldr.w	r0, [r9]
 8016500:	f7f4 fbf6 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8016504:	4642      	mov	r2, r8
 8016506:	4601      	mov	r1, r0
 8016508:	4630      	mov	r0, r6
 801650a:	47a8      	blx	r5
 801650c:	4605      	mov	r5, r0
 801650e:	e766      	b.n	80163de <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x11a>
 8016510:	0802f700 	.word	0x0802f700
 8016514:	08034678 	.word	0x08034678
 8016518:	0802f78e 	.word	0x0802f78e
 801651c:	08032d0f 	.word	0x08032d0f
 8016520:	2001e230 	.word	0x2001e230
 8016524:	2001e234 	.word	0x2001e234
 8016528:	2001e23c 	.word	0x2001e23c

0801652c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801652c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8016530:	4770      	bx	lr

08016532 <_ZN8touchgfx12ToggleButtonD1Ev>:
 8016532:	4770      	bx	lr

08016534 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 8016534:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8016538:	b133      	cbz	r3, 8016548 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 801653a:	790b      	ldrb	r3, [r1, #4]
 801653c:	2b01      	cmp	r3, #1
 801653e:	bf01      	itttt	eq
 8016540:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 8016542:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 8016544:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 8016546:	8603      	strheq	r3, [r0, #48]	; 0x30
 8016548:	f012 bd60 	b.w	802900c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0801654c <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 801654c:	8813      	ldrh	r3, [r2, #0]
 801654e:	8683      	strh	r3, [r0, #52]	; 0x34
 8016550:	f000 bd36 	b.w	8016fc0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

08016554 <_ZN8touchgfx12ToggleButtonD0Ev>:
 8016554:	b510      	push	{r4, lr}
 8016556:	2138      	movs	r1, #56	; 0x38
 8016558:	4604      	mov	r4, r0
 801655a:	f014 fdfe 	bl	802b15a <_ZdlPvj>
 801655e:	4620      	mov	r0, r4
 8016560:	bd10      	pop	{r4, pc}

08016562 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8016562:	b510      	push	{r4, lr}
 8016564:	4604      	mov	r4, r0
 8016566:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8016568:	b150      	cbz	r0, 8016580 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801656a:	6803      	ldr	r3, [r0, #0]
 801656c:	68db      	ldr	r3, [r3, #12]
 801656e:	4798      	blx	r3
 8016570:	b130      	cbz	r0, 8016580 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8016572:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8016574:	6803      	ldr	r3, [r0, #0]
 8016576:	4621      	mov	r1, r4
 8016578:	689b      	ldr	r3, [r3, #8]
 801657a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801657e:	4718      	bx	r3
 8016580:	bd10      	pop	{r4, pc}

08016582 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8016582:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8016586:	b12a      	cbz	r2, 8016594 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8016588:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801658c:	b112      	cbz	r2, 8016594 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801658e:	6803      	ldr	r3, [r0, #0]
 8016590:	695b      	ldr	r3, [r3, #20]
 8016592:	4718      	bx	r3
 8016594:	4770      	bx	lr

08016596 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 8016596:	b508      	push	{r3, lr}
 8016598:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801659c:	b10b      	cbz	r3, 80165a2 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 801659e:	f7ed f93c 	bl	800381a <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80165a2:	bd08      	pop	{r3, pc}

080165a4 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 80165a4:	6803      	ldr	r3, [r0, #0]
 80165a6:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 80165aa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80165ac:	4718      	bx	r3

080165ae <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 80165ae:	4770      	bx	lr

080165b0 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 80165b0:	b510      	push	{r4, lr}
 80165b2:	212c      	movs	r1, #44	; 0x2c
 80165b4:	4604      	mov	r4, r0
 80165b6:	f014 fdd0 	bl	802b15a <_ZdlPvj>
 80165ba:	4620      	mov	r0, r4
 80165bc:	bd10      	pop	{r4, pc}

080165be <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 80165be:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80165c2:	2bff      	cmp	r3, #255	; 0xff
 80165c4:	b510      	push	{r4, lr}
 80165c6:	d104      	bne.n	80165d2 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 80165c8:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 80165ca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80165ce:	429a      	cmp	r2, r3
 80165d0:	d105      	bne.n	80165de <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 80165d2:	2300      	movs	r3, #0
 80165d4:	8003      	strh	r3, [r0, #0]
 80165d6:	8043      	strh	r3, [r0, #2]
 80165d8:	8083      	strh	r3, [r0, #4]
 80165da:	80c3      	strh	r3, [r0, #6]
 80165dc:	bd10      	pop	{r4, pc}
 80165de:	2300      	movs	r3, #0
 80165e0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80165e4:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 80165e8:	8003      	strh	r3, [r0, #0]
 80165ea:	8043      	strh	r3, [r0, #2]
 80165ec:	8084      	strh	r4, [r0, #4]
 80165ee:	80c2      	strh	r2, [r0, #6]
 80165f0:	e7f4      	b.n	80165dc <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

080165f2 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 80165f2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80165f6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80165fa:	b087      	sub	sp, #28
 80165fc:	4604      	mov	r4, r0
 80165fe:	4689      	mov	r9, r1
 8016600:	b363      	cbz	r3, 801665c <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 8016602:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 8016604:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8016608:	429a      	cmp	r2, r3
 801660a:	d027      	beq.n	801665c <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 801660c:	ad06      	add	r5, sp, #24
 801660e:	2700      	movs	r7, #0
 8016610:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 8016614:	4628      	mov	r0, r5
 8016616:	f006 f869 	bl	801c6ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 801661a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801661e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016622:	6823      	ldr	r3, [r4, #0]
 8016624:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016628:	a904      	add	r1, sp, #16
 801662a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801662c:	9704      	str	r7, [sp, #16]
 801662e:	4620      	mov	r0, r4
 8016630:	4798      	blx	r3
 8016632:	f7fc f83d 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 8016636:	6803      	ldr	r3, [r0, #0]
 8016638:	4606      	mov	r6, r0
 801663a:	f8d3 800c 	ldr.w	r8, [r3, #12]
 801663e:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8016640:	f8ad 300c 	strh.w	r3, [sp, #12]
 8016644:	4628      	mov	r0, r5
 8016646:	f006 f96d 	bl	801c924 <_ZNK8touchgfx6Bitmap7getDataEv>
 801664a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801664e:	9300      	str	r3, [sp, #0]
 8016650:	4601      	mov	r1, r0
 8016652:	9701      	str	r7, [sp, #4]
 8016654:	464b      	mov	r3, r9
 8016656:	aa04      	add	r2, sp, #16
 8016658:	4630      	mov	r0, r6
 801665a:	47c0      	blx	r8
 801665c:	b007      	add	sp, #28
 801665e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08016662 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 8016662:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8016664:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8016668:	f8ad 3006 	strh.w	r3, [sp, #6]
 801666c:	6803      	ldr	r3, [r0, #0]
 801666e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8016672:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016676:	460d      	mov	r5, r1
 8016678:	2100      	movs	r1, #0
 801667a:	4604      	mov	r4, r0
 801667c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801667e:	9100      	str	r1, [sp, #0]
 8016680:	4669      	mov	r1, sp
 8016682:	4798      	blx	r3
 8016684:	4621      	mov	r1, r4
 8016686:	a802      	add	r0, sp, #8
 8016688:	f003 ff16 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801668c:	f7fc f810 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 8016690:	6803      	ldr	r3, [r0, #0]
 8016692:	aa02      	add	r2, sp, #8
 8016694:	695e      	ldr	r6, [r3, #20]
 8016696:	4669      	mov	r1, sp
 8016698:	462b      	mov	r3, r5
 801669a:	47b0      	blx	r6
 801669c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80166a0:	2800      	cmp	r0, #0
 80166a2:	bf08      	it	eq
 80166a4:	461d      	moveq	r5, r3
 80166a6:	84e5      	strh	r5, [r4, #38]	; 0x26
 80166a8:	b004      	add	sp, #16
 80166aa:	bd70      	pop	{r4, r5, r6, pc}

080166ac <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 80166ac:	2200      	movs	r2, #0
 80166ae:	8082      	strh	r2, [r0, #4]
 80166b0:	80c2      	strh	r2, [r0, #6]
 80166b2:	8102      	strh	r2, [r0, #8]
 80166b4:	8142      	strh	r2, [r0, #10]
 80166b6:	8182      	strh	r2, [r0, #12]
 80166b8:	81c2      	strh	r2, [r0, #14]
 80166ba:	8202      	strh	r2, [r0, #16]
 80166bc:	8242      	strh	r2, [r0, #18]
 80166be:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80166c2:	61c2      	str	r2, [r0, #28]
 80166c4:	8402      	strh	r2, [r0, #32]
 80166c6:	8442      	strh	r2, [r0, #34]	; 0x22
 80166c8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80166cc:	2201      	movs	r2, #1
 80166ce:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80166d2:	4a04      	ldr	r2, [pc, #16]	; (80166e4 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 80166d4:	6002      	str	r2, [r0, #0]
 80166d6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80166da:	84c2      	strh	r2, [r0, #38]	; 0x26
 80166dc:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 80166e0:	4770      	bx	lr
 80166e2:	bf00      	nop
 80166e4:	08034724 	.word	0x08034724

080166e8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80166e8:	2000      	movs	r0, #0
 80166ea:	4770      	bx	lr

080166ec <_ZN8touchgfx8TextAreaD1Ev>:
 80166ec:	4770      	bx	lr
	...

080166f0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80166f0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80166f4:	4b1a      	ldr	r3, [pc, #104]	; (8016760 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80166f6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80166f8:	881b      	ldrh	r3, [r3, #0]
 80166fa:	428b      	cmp	r3, r1
 80166fc:	4604      	mov	r4, r0
 80166fe:	d92d      	bls.n	801675c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>
 8016700:	4b18      	ldr	r3, [pc, #96]	; (8016764 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 8016702:	681b      	ldr	r3, [r3, #0]
 8016704:	b92b      	cbnz	r3, 8016712 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x22>
 8016706:	4b18      	ldr	r3, [pc, #96]	; (8016768 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 8016708:	4a18      	ldr	r2, [pc, #96]	; (801676c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 801670a:	4819      	ldr	r0, [pc, #100]	; (8016770 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 801670c:	21ae      	movs	r1, #174	; 0xae
 801670e:	f015 fc71 	bl	802bff4 <__assert_func>
 8016712:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8016716:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801671a:	4b16      	ldr	r3, [pc, #88]	; (8016774 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x84>)
 801671c:	7855      	ldrb	r5, [r2, #1]
 801671e:	681b      	ldr	r3, [r3, #0]
 8016720:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8016724:	6833      	ldr	r3, [r6, #0]
 8016726:	69df      	ldr	r7, [r3, #28]
 8016728:	4b13      	ldr	r3, [pc, #76]	; (8016778 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x88>)
 801672a:	6818      	ldr	r0, [r3, #0]
 801672c:	f7f4 fae0 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8016730:	6823      	ldr	r3, [r4, #0]
 8016732:	4680      	mov	r8, r0
 8016734:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8016736:	4620      	mov	r0, r4
 8016738:	4798      	blx	r3
 801673a:	6823      	ldr	r3, [r4, #0]
 801673c:	4681      	mov	r9, r0
 801673e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8016742:	4620      	mov	r0, r4
 8016744:	4798      	blx	r3
 8016746:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801674a:	9000      	str	r0, [sp, #0]
 801674c:	464b      	mov	r3, r9
 801674e:	4642      	mov	r2, r8
 8016750:	4629      	mov	r1, r5
 8016752:	4630      	mov	r0, r6
 8016754:	47b8      	blx	r7
 8016756:	b003      	add	sp, #12
 8016758:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801675c:	2000      	movs	r0, #0
 801675e:	e7fa      	b.n	8016756 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x66>
 8016760:	2001e234 	.word	0x2001e234
 8016764:	2001e230 	.word	0x2001e230
 8016768:	0802f700 	.word	0x0802f700
 801676c:	0803481c 	.word	0x0803481c
 8016770:	0802f78e 	.word	0x0802f78e
 8016774:	2001e238 	.word	0x2001e238
 8016778:	2001e23c 	.word	0x2001e23c

0801677c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 801677c:	b40e      	push	{r1, r2, r3}
 801677e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016782:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 8016874 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 8016786:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8016788:	f8b9 3000 	ldrh.w	r3, [r9]
 801678c:	4293      	cmp	r3, r2
 801678e:	b09c      	sub	sp, #112	; 0x70
 8016790:	4604      	mov	r4, r0
 8016792:	d965      	bls.n	8016860 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 8016794:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 8016878 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 8016798:	ab26      	add	r3, sp, #152	; 0x98
 801679a:	9302      	str	r3, [sp, #8]
 801679c:	f8da 3000 	ldr.w	r3, [sl]
 80167a0:	b92b      	cbnz	r3, 80167ae <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x32>
 80167a2:	4b30      	ldr	r3, [pc, #192]	; (8016864 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 80167a4:	4a30      	ldr	r2, [pc, #192]	; (8016868 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 80167a6:	21ae      	movs	r1, #174	; 0xae
 80167a8:	4830      	ldr	r0, [pc, #192]	; (801686c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 80167aa:	f015 fc23 	bl	802bff4 <__assert_func>
 80167ae:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 801687c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 80167b2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80167b6:	f8d8 3000 	ldr.w	r3, [r8]
 80167ba:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80167be:	682b      	ldr	r3, [r5, #0]
 80167c0:	4628      	mov	r0, r5
 80167c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80167c4:	4798      	blx	r3
 80167c6:	4606      	mov	r6, r0
 80167c8:	b207      	sxth	r7, r0
 80167ca:	a803      	add	r0, sp, #12
 80167cc:	f004 fb5e 	bl	801ae8c <_ZN8touchgfx12TextProviderC1Ev>
 80167d0:	682b      	ldr	r3, [r5, #0]
 80167d2:	4628      	mov	r0, r5
 80167d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80167d6:	4798      	blx	r3
 80167d8:	682b      	ldr	r3, [r5, #0]
 80167da:	4683      	mov	fp, r0
 80167dc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80167de:	4628      	mov	r0, r5
 80167e0:	4798      	blx	r3
 80167e2:	465b      	mov	r3, fp
 80167e4:	9000      	str	r0, [sp, #0]
 80167e6:	9925      	ldr	r1, [sp, #148]	; 0x94
 80167e8:	9a02      	ldr	r2, [sp, #8]
 80167ea:	a803      	add	r0, sp, #12
 80167ec:	f004 fbba 	bl	801af64 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80167f0:	f8da 3000 	ldr.w	r3, [sl]
 80167f4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80167f8:	2b00      	cmp	r3, #0
 80167fa:	d0d2      	beq.n	80167a2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x26>
 80167fc:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80167fe:	f8b9 0000 	ldrh.w	r0, [r9]
 8016802:	4290      	cmp	r0, r2
 8016804:	d926      	bls.n	8016854 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 8016806:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 801680a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801680e:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8016812:	786a      	ldrb	r2, [r5, #1]
 8016814:	8925      	ldrh	r5, [r4, #8]
 8016816:	f8d8 3000 	ldr.w	r3, [r8]
 801681a:	eba5 050c 	sub.w	r5, r5, ip
 801681e:	b22d      	sxth	r5, r5
 8016820:	9500      	str	r5, [sp, #0]
 8016822:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8016826:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801682a:	a803      	add	r0, sp, #12
 801682c:	f002 f911 	bl	8018a52 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8016830:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8016834:	18b9      	adds	r1, r7, r2
 8016836:	2900      	cmp	r1, #0
 8016838:	b203      	sxth	r3, r0
 801683a:	dd0f      	ble.n	801685c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 801683c:	3b01      	subs	r3, #1
 801683e:	fb13 f302 	smulbb	r3, r3, r2
 8016842:	fb16 3300 	smlabb	r3, r6, r0, r3
 8016846:	b21f      	sxth	r7, r3
 8016848:	4638      	mov	r0, r7
 801684a:	b01c      	add	sp, #112	; 0x70
 801684c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016850:	b003      	add	sp, #12
 8016852:	4770      	bx	lr
 8016854:	4b06      	ldr	r3, [pc, #24]	; (8016870 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 8016856:	4a04      	ldr	r2, [pc, #16]	; (8016868 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 8016858:	21af      	movs	r1, #175	; 0xaf
 801685a:	e7a5      	b.n	80167a8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2c>
 801685c:	2b00      	cmp	r3, #0
 801685e:	dcf3      	bgt.n	8016848 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8016860:	2700      	movs	r7, #0
 8016862:	e7f1      	b.n	8016848 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8016864:	0802f700 	.word	0x0802f700
 8016868:	0803481c 	.word	0x0803481c
 801686c:	0802f78e 	.word	0x0802f78e
 8016870:	08032d0f 	.word	0x08032d0f
 8016874:	2001e234 	.word	0x2001e234
 8016878:	2001e230 	.word	0x2001e230
 801687c:	2001e238 	.word	0x2001e238

08016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8016880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016884:	4b6d      	ldr	r3, [pc, #436]	; (8016a3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1bc>)
 8016886:	460c      	mov	r4, r1
 8016888:	881a      	ldrh	r2, [r3, #0]
 801688a:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 801688c:	b0b9      	sub	sp, #228	; 0xe4
 801688e:	428a      	cmp	r2, r1
 8016890:	4681      	mov	r9, r0
 8016892:	9302      	str	r3, [sp, #8]
 8016894:	d809      	bhi.n	80168aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a>
 8016896:	2300      	movs	r3, #0
 8016898:	f04f 32ff 	mov.w	r2, #4294967295
 801689c:	e9c0 3200 	strd	r3, r2, [r0]
 80168a0:	6083      	str	r3, [r0, #8]
 80168a2:	4648      	mov	r0, r9
 80168a4:	b039      	add	sp, #228	; 0xe4
 80168a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80168aa:	4a65      	ldr	r2, [pc, #404]	; (8016a40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c0>)
 80168ac:	6813      	ldr	r3, [r2, #0]
 80168ae:	4692      	mov	sl, r2
 80168b0:	b92b      	cbnz	r3, 80168be <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x3e>
 80168b2:	4b64      	ldr	r3, [pc, #400]	; (8016a44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c4>)
 80168b4:	4a64      	ldr	r2, [pc, #400]	; (8016a48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 80168b6:	21ae      	movs	r1, #174	; 0xae
 80168b8:	4864      	ldr	r0, [pc, #400]	; (8016a4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1cc>)
 80168ba:	f015 fb9b 	bl	802bff4 <__assert_func>
 80168be:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80168c2:	4b63      	ldr	r3, [pc, #396]	; (8016a50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d0>)
 80168c4:	f8df b190 	ldr.w	fp, [pc, #400]	; 8016a58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d8>
 80168c8:	681b      	ldr	r3, [r3, #0]
 80168ca:	f8db 0000 	ldr.w	r0, [fp]
 80168ce:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80168d2:	f7f4 fa0d 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 80168d6:	682b      	ldr	r3, [r5, #0]
 80168d8:	4680      	mov	r8, r0
 80168da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80168dc:	4628      	mov	r0, r5
 80168de:	4798      	blx	r3
 80168e0:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 80168e2:	f894 7039 	ldrb.w	r7, [r4, #57]	; 0x39
 80168e6:	f8cd b00c 	str.w	fp, [sp, #12]
 80168ea:	4406      	add	r6, r0
 80168ec:	b2b6      	uxth	r6, r6
 80168ee:	2f00      	cmp	r7, #0
 80168f0:	f040 80b4 	bne.w	8016a5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1dc>
 80168f4:	a806      	add	r0, sp, #24
 80168f6:	f004 fac9 	bl	801ae8c <_ZN8touchgfx12TextProviderC1Ev>
 80168fa:	682b      	ldr	r3, [r5, #0]
 80168fc:	4628      	mov	r0, r5
 80168fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016900:	4798      	blx	r3
 8016902:	682b      	ldr	r3, [r5, #0]
 8016904:	4683      	mov	fp, r0
 8016906:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016908:	4628      	mov	r0, r5
 801690a:	4798      	blx	r3
 801690c:	6822      	ldr	r2, [r4, #0]
 801690e:	9005      	str	r0, [sp, #20]
 8016910:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8016912:	4620      	mov	r0, r4
 8016914:	4790      	blx	r2
 8016916:	6821      	ldr	r1, [r4, #0]
 8016918:	9004      	str	r0, [sp, #16]
 801691a:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 801691e:	4620      	mov	r0, r4
 8016920:	4788      	blx	r1
 8016922:	9a04      	ldr	r2, [sp, #16]
 8016924:	9001      	str	r0, [sp, #4]
 8016926:	9200      	str	r2, [sp, #0]
 8016928:	4641      	mov	r1, r8
 801692a:	9b05      	ldr	r3, [sp, #20]
 801692c:	465a      	mov	r2, fp
 801692e:	a806      	add	r0, sp, #24
 8016930:	f004 fb2d 	bl	801af8e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8016934:	46b8      	mov	r8, r7
 8016936:	f8da 3000 	ldr.w	r3, [sl]
 801693a:	2b00      	cmp	r3, #0
 801693c:	d0b9      	beq.n	80168b2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 801693e:	9902      	ldr	r1, [sp, #8]
 8016940:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8016942:	8809      	ldrh	r1, [r1, #0]
 8016944:	4291      	cmp	r1, r2
 8016946:	d803      	bhi.n	8016950 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xd0>
 8016948:	4b42      	ldr	r3, [pc, #264]	; (8016a54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d4>)
 801694a:	4a3f      	ldr	r2, [pc, #252]	; (8016a48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 801694c:	21af      	movs	r1, #175	; 0xaf
 801694e:	e7b3      	b.n	80168b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x38>
 8016950:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8016954:	4629      	mov	r1, r5
 8016956:	785b      	ldrb	r3, [r3, #1]
 8016958:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801695c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016960:	a806      	add	r0, sp, #24
 8016962:	f001 fdcb 	bl	80184fc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8016966:	4580      	cmp	r8, r0
 8016968:	bfb8      	it	lt
 801696a:	fa0f f880 	sxthlt.w	r8, r0
 801696e:	3701      	adds	r7, #1
 8016970:	a806      	add	r0, sp, #24
 8016972:	b2bf      	uxth	r7, r7
 8016974:	f004 fab2 	bl	801aedc <_ZN8touchgfx12TextProvider11endOfStringEv>
 8016978:	2800      	cmp	r0, #0
 801697a:	d0dc      	beq.n	8016936 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb6>
 801697c:	fb16 f607 	smulbb	r6, r6, r7
 8016980:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8016982:	1bf6      	subs	r6, r6, r7
 8016984:	b2b6      	uxth	r6, r6
 8016986:	fa0f fb86 	sxth.w	fp, r6
 801698a:	f1bb 0f00 	cmp.w	fp, #0
 801698e:	dd06      	ble.n	801699e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x11e>
 8016990:	682b      	ldr	r3, [r5, #0]
 8016992:	4628      	mov	r0, r5
 8016994:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016996:	4798      	blx	r3
 8016998:	4430      	add	r0, r6
 801699a:	fa0f fb80 	sxth.w	fp, r0
 801699e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80169a2:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80169a6:	6823      	ldr	r3, [r4, #0]
 80169a8:	bf08      	it	eq
 80169aa:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 80169ae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80169b0:	bf18      	it	ne
 80169b2:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 80169b6:	4620      	mov	r0, r4
 80169b8:	4798      	blx	r3
 80169ba:	2801      	cmp	r0, #1
 80169bc:	fa1f f288 	uxth.w	r2, r8
 80169c0:	f000 80f7 	beq.w	8016bb2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80169c4:	2802      	cmp	r0, #2
 80169c6:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80169ca:	f000 80f9 	beq.w	8016bc0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x340>
 80169ce:	7a29      	ldrb	r1, [r5, #8]
 80169d0:	7a68      	ldrb	r0, [r5, #9]
 80169d2:	b21b      	sxth	r3, r3
 80169d4:	1a5b      	subs	r3, r3, r1
 80169d6:	4401      	add	r1, r0
 80169d8:	440a      	add	r2, r1
 80169da:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 80169de:	b29b      	uxth	r3, r3
 80169e0:	b292      	uxth	r2, r2
 80169e2:	2902      	cmp	r1, #2
 80169e4:	b21e      	sxth	r6, r3
 80169e6:	b217      	sxth	r7, r2
 80169e8:	f000 80ed 	beq.w	8016bc6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x346>
 80169ec:	2903      	cmp	r1, #3
 80169ee:	f000 80f3 	beq.w	8016bd8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x358>
 80169f2:	2901      	cmp	r1, #1
 80169f4:	f040 80f9 	bne.w	8016bea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x36a>
 80169f8:	8923      	ldrh	r3, [r4, #8]
 80169fa:	463a      	mov	r2, r7
 80169fc:	eba3 030b 	sub.w	r3, r3, fp
 8016a00:	465f      	mov	r7, fp
 8016a02:	4635      	mov	r5, r6
 8016a04:	4693      	mov	fp, r2
 8016a06:	b21e      	sxth	r6, r3
 8016a08:	f8da 3000 	ldr.w	r3, [sl]
 8016a0c:	2b00      	cmp	r3, #0
 8016a0e:	f43f af50 	beq.w	80168b2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 8016a12:	9b02      	ldr	r3, [sp, #8]
 8016a14:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8016a16:	881b      	ldrh	r3, [r3, #0]
 8016a18:	428b      	cmp	r3, r1
 8016a1a:	d995      	bls.n	8016948 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 8016a1c:	9b03      	ldr	r3, [sp, #12]
 8016a1e:	6818      	ldr	r0, [r3, #0]
 8016a20:	f7f4 f966 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8016a24:	f8a9 6000 	strh.w	r6, [r9]
 8016a28:	f8a9 5002 	strh.w	r5, [r9, #2]
 8016a2c:	f8a9 7004 	strh.w	r7, [r9, #4]
 8016a30:	f8a9 b006 	strh.w	fp, [r9, #6]
 8016a34:	f8c9 0008 	str.w	r0, [r9, #8]
 8016a38:	e733      	b.n	80168a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x22>
 8016a3a:	bf00      	nop
 8016a3c:	2001e234 	.word	0x2001e234
 8016a40:	2001e230 	.word	0x2001e230
 8016a44:	0802f700 	.word	0x0802f700
 8016a48:	0803481c 	.word	0x0803481c
 8016a4c:	0802f78e 	.word	0x0802f78e
 8016a50:	2001e238 	.word	0x2001e238
 8016a54:	08032d0f 	.word	0x08032d0f
 8016a58:	2001e23c 	.word	0x2001e23c
 8016a5c:	af1f      	add	r7, sp, #124	; 0x7c
 8016a5e:	4638      	mov	r0, r7
 8016a60:	f004 fa14 	bl	801ae8c <_ZN8touchgfx12TextProviderC1Ev>
 8016a64:	682b      	ldr	r3, [r5, #0]
 8016a66:	4628      	mov	r0, r5
 8016a68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016a6a:	4798      	blx	r3
 8016a6c:	682b      	ldr	r3, [r5, #0]
 8016a6e:	4683      	mov	fp, r0
 8016a70:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a72:	4628      	mov	r0, r5
 8016a74:	4798      	blx	r3
 8016a76:	6822      	ldr	r2, [r4, #0]
 8016a78:	9005      	str	r0, [sp, #20]
 8016a7a:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8016a7c:	4620      	mov	r0, r4
 8016a7e:	4790      	blx	r2
 8016a80:	6821      	ldr	r1, [r4, #0]
 8016a82:	9004      	str	r0, [sp, #16]
 8016a84:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 8016a88:	4620      	mov	r0, r4
 8016a8a:	4788      	blx	r1
 8016a8c:	9a04      	ldr	r2, [sp, #16]
 8016a8e:	9001      	str	r0, [sp, #4]
 8016a90:	9200      	str	r2, [sp, #0]
 8016a92:	9b05      	ldr	r3, [sp, #20]
 8016a94:	465a      	mov	r2, fp
 8016a96:	4641      	mov	r1, r8
 8016a98:	4638      	mov	r0, r7
 8016a9a:	f004 fa78 	bl	801af8e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8016a9e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016aa2:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8016aa6:	f9b4 b008 	ldrsh.w	fp, [r4, #8]
 8016aaa:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8016aae:	bf0a      	itet	eq
 8016ab0:	465b      	moveq	r3, fp
 8016ab2:	4613      	movne	r3, r2
 8016ab4:	4693      	moveq	fp, r2
 8016ab6:	f894 2037 	ldrb.w	r2, [r4, #55]	; 0x37
 8016aba:	1a9b      	subs	r3, r3, r2
 8016abc:	b29a      	uxth	r2, r3
 8016abe:	f8da 3000 	ldr.w	r3, [sl]
 8016ac2:	2b00      	cmp	r3, #0
 8016ac4:	f43f aef5 	beq.w	80168b2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 8016ac8:	9802      	ldr	r0, [sp, #8]
 8016aca:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8016acc:	8800      	ldrh	r0, [r0, #0]
 8016ace:	4288      	cmp	r0, r1
 8016ad0:	f67f af3a 	bls.w	8016948 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 8016ad4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8016ad8:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8016adc:	7859      	ldrb	r1, [r3, #1]
 8016ade:	9707      	str	r7, [sp, #28]
 8016ae0:	2300      	movs	r3, #0
 8016ae2:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8016ae6:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016aea:	f88d 1020 	strb.w	r1, [sp, #32]
 8016aee:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8016af2:	9509      	str	r5, [sp, #36]	; 0x24
 8016af4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016af8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016afc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8016b00:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016b04:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8016b08:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016b0c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8016b10:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
 8016b14:	b350      	cbz	r0, 8016b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 8016b16:	682b      	ldr	r3, [r5, #0]
 8016b18:	4628      	mov	r0, r5
 8016b1a:	695b      	ldr	r3, [r3, #20]
 8016b1c:	4798      	blx	r3
 8016b1e:	4680      	mov	r8, r0
 8016b20:	b320      	cbz	r0, 8016b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 8016b22:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016b24:	6803      	ldr	r3, [r0, #0]
 8016b26:	4641      	mov	r1, r8
 8016b28:	68db      	ldr	r3, [r3, #12]
 8016b2a:	4798      	blx	r3
 8016b2c:	4607      	mov	r7, r0
 8016b2e:	b1e8      	cbz	r0, 8016b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 8016b30:	7b43      	ldrb	r3, [r0, #13]
 8016b32:	7a82      	ldrb	r2, [r0, #10]
 8016b34:	005b      	lsls	r3, r3, #1
 8016b36:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016b3a:	4313      	orrs	r3, r2
 8016b3c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8016b40:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8016b44:	2b04      	cmp	r3, #4
 8016b46:	d111      	bne.n	8016b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 8016b48:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016b4a:	6803      	ldr	r3, [r0, #0]
 8016b4c:	463a      	mov	r2, r7
 8016b4e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016b50:	4641      	mov	r1, r8
 8016b52:	4798      	blx	r3
 8016b54:	7b7b      	ldrb	r3, [r7, #13]
 8016b56:	005b      	lsls	r3, r3, #1
 8016b58:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016b5c:	7abb      	ldrb	r3, [r7, #10]
 8016b5e:	4313      	orrs	r3, r2
 8016b60:	4418      	add	r0, r3
 8016b62:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8016b66:	4418      	add	r0, r3
 8016b68:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
 8016b6c:	b233      	sxth	r3, r6
 8016b6e:	2700      	movs	r7, #0
 8016b70:	005a      	lsls	r2, r3, #1
 8016b72:	46b8      	mov	r8, r7
 8016b74:	455a      	cmp	r2, fp
 8016b76:	bfd4      	ite	le
 8016b78:	2100      	movle	r1, #0
 8016b7a:	2101      	movgt	r1, #1
 8016b7c:	a806      	add	r0, sp, #24
 8016b7e:	9305      	str	r3, [sp, #20]
 8016b80:	9204      	str	r2, [sp, #16]
 8016b82:	f001 fe97 	bl	80188b4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8016b86:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8016b8a:	4588      	cmp	r8, r1
 8016b8c:	bfb8      	it	lt
 8016b8e:	fa0f f881 	sxthlt.w	r8, r1
 8016b92:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016b96:	3701      	adds	r7, #1
 8016b98:	ebab 0b06 	sub.w	fp, fp, r6
 8016b9c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8016ba0:	b2bf      	uxth	r7, r7
 8016ba2:	fa0f fb8b 	sxth.w	fp, fp
 8016ba6:	2900      	cmp	r1, #0
 8016ba8:	f43f aee8 	beq.w	801697c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8016bac:	455b      	cmp	r3, fp
 8016bae:	dbe1      	blt.n	8016b74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>
 8016bb0:	e6e4      	b.n	801697c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8016bb2:	eba6 0308 	sub.w	r3, r6, r8
 8016bb6:	f04f 0802 	mov.w	r8, #2
 8016bba:	fb93 f3f8 	sdiv	r3, r3, r8
 8016bbe:	e706      	b.n	80169ce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8016bc0:	4413      	add	r3, r2
 8016bc2:	1af3      	subs	r3, r6, r3
 8016bc4:	e703      	b.n	80169ce <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8016bc6:	8926      	ldrh	r6, [r4, #8]
 8016bc8:	8965      	ldrh	r5, [r4, #10]
 8016bca:	1ab2      	subs	r2, r6, r2
 8016bcc:	1ad3      	subs	r3, r2, r3
 8016bce:	eba5 050b 	sub.w	r5, r5, fp
 8016bd2:	b21e      	sxth	r6, r3
 8016bd4:	b22d      	sxth	r5, r5
 8016bd6:	e717      	b.n	8016a08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 8016bd8:	8965      	ldrh	r5, [r4, #10]
 8016bda:	1aaa      	subs	r2, r5, r2
 8016bdc:	1ad3      	subs	r3, r2, r3
 8016bde:	b21d      	sxth	r5, r3
 8016be0:	463b      	mov	r3, r7
 8016be2:	2600      	movs	r6, #0
 8016be4:	465f      	mov	r7, fp
 8016be6:	469b      	mov	fp, r3
 8016be8:	e70e      	b.n	8016a08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 8016bea:	2500      	movs	r5, #0
 8016bec:	e70c      	b.n	8016a08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 8016bee:	bf00      	nop

08016bf0 <_ZN8touchgfx8TextAreaD0Ev>:
 8016bf0:	b510      	push	{r4, lr}
 8016bf2:	2148      	movs	r1, #72	; 0x48
 8016bf4:	4604      	mov	r4, r0
 8016bf6:	f014 fab0 	bl	802b15a <_ZdlPvj>
 8016bfa:	4620      	mov	r0, r4
 8016bfc:	bd10      	pop	{r4, pc}
	...

08016c00 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8016c00:	b508      	push	{r3, lr}
 8016c02:	4b0b      	ldr	r3, [pc, #44]	; (8016c30 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x30>)
 8016c04:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8016c06:	881b      	ldrh	r3, [r3, #0]
 8016c08:	4293      	cmp	r3, r2
 8016c0a:	d90e      	bls.n	8016c2a <_ZNK8touchgfx8TextArea12getAlignmentEv+0x2a>
 8016c0c:	4b09      	ldr	r3, [pc, #36]	; (8016c34 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x34>)
 8016c0e:	681b      	ldr	r3, [r3, #0]
 8016c10:	b92b      	cbnz	r3, 8016c1e <_ZNK8touchgfx8TextArea12getAlignmentEv+0x1e>
 8016c12:	4b09      	ldr	r3, [pc, #36]	; (8016c38 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x38>)
 8016c14:	4a09      	ldr	r2, [pc, #36]	; (8016c3c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x3c>)
 8016c16:	480a      	ldr	r0, [pc, #40]	; (8016c40 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x40>)
 8016c18:	21ae      	movs	r1, #174	; 0xae
 8016c1a:	f015 f9eb 	bl	802bff4 <__assert_func>
 8016c1e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8016c22:	7858      	ldrb	r0, [r3, #1]
 8016c24:	f000 0003 	and.w	r0, r0, #3
 8016c28:	bd08      	pop	{r3, pc}
 8016c2a:	2000      	movs	r0, #0
 8016c2c:	e7fc      	b.n	8016c28 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x28>
 8016c2e:	bf00      	nop
 8016c30:	2001e234 	.word	0x2001e234
 8016c34:	2001e230 	.word	0x2001e230
 8016c38:	0802f700 	.word	0x0802f700
 8016c3c:	0803481c 	.word	0x0803481c
 8016c40:	0802f78e 	.word	0x0802f78e

08016c44 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8016c44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016c48:	4b15      	ldr	r3, [pc, #84]	; (8016ca0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x5c>)
 8016c4a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8016c4c:	881b      	ldrh	r3, [r3, #0]
 8016c4e:	428b      	cmp	r3, r1
 8016c50:	4604      	mov	r4, r0
 8016c52:	d921      	bls.n	8016c98 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x54>
 8016c54:	6803      	ldr	r3, [r0, #0]
 8016c56:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8016c58:	4b12      	ldr	r3, [pc, #72]	; (8016ca4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x60>)
 8016c5a:	681b      	ldr	r3, [r3, #0]
 8016c5c:	b92b      	cbnz	r3, 8016c6a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x26>
 8016c5e:	4b12      	ldr	r3, [pc, #72]	; (8016ca8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x64>)
 8016c60:	4a12      	ldr	r2, [pc, #72]	; (8016cac <_ZNK8touchgfx8TextArea13getTextHeightEv+0x68>)
 8016c62:	4813      	ldr	r0, [pc, #76]	; (8016cb0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x6c>)
 8016c64:	21ae      	movs	r1, #174	; 0xae
 8016c66:	f015 f9c5 	bl	802bff4 <__assert_func>
 8016c6a:	4b12      	ldr	r3, [pc, #72]	; (8016cb4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x70>)
 8016c6c:	6818      	ldr	r0, [r3, #0]
 8016c6e:	f7f4 f83f 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8016c72:	6823      	ldr	r3, [r4, #0]
 8016c74:	4606      	mov	r6, r0
 8016c76:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8016c78:	4620      	mov	r0, r4
 8016c7a:	4798      	blx	r3
 8016c7c:	6823      	ldr	r3, [r4, #0]
 8016c7e:	4607      	mov	r7, r0
 8016c80:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8016c84:	4620      	mov	r0, r4
 8016c86:	4798      	blx	r3
 8016c88:	463a      	mov	r2, r7
 8016c8a:	4603      	mov	r3, r0
 8016c8c:	4631      	mov	r1, r6
 8016c8e:	4620      	mov	r0, r4
 8016c90:	46ac      	mov	ip, r5
 8016c92:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8016c96:	4760      	bx	ip
 8016c98:	2000      	movs	r0, #0
 8016c9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016c9e:	bf00      	nop
 8016ca0:	2001e234 	.word	0x2001e234
 8016ca4:	2001e230 	.word	0x2001e230
 8016ca8:	0802f700 	.word	0x0802f700
 8016cac:	0803481c 	.word	0x0803481c
 8016cb0:	0802f78e 	.word	0x0802f78e
 8016cb4:	2001e23c 	.word	0x2001e23c

08016cb8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8016cb8:	b513      	push	{r0, r1, r4, lr}
 8016cba:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8016cbe:	4604      	mov	r4, r0
 8016cc0:	b343      	cbz	r3, 8016d14 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 8016cc2:	4b1b      	ldr	r3, [pc, #108]	; (8016d30 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x78>)
 8016cc4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8016cc6:	881b      	ldrh	r3, [r3, #0]
 8016cc8:	428b      	cmp	r3, r1
 8016cca:	d923      	bls.n	8016d14 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 8016ccc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8016cd0:	2b00      	cmp	r3, #0
 8016cd2:	dd1f      	ble.n	8016d14 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 8016cd4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8016cd8:	2b00      	cmp	r3, #0
 8016cda:	dd1b      	ble.n	8016d14 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 8016cdc:	4b15      	ldr	r3, [pc, #84]	; (8016d34 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x7c>)
 8016cde:	681b      	ldr	r3, [r3, #0]
 8016ce0:	b92b      	cbnz	r3, 8016cee <_ZNK8touchgfx8TextArea17invalidateContentEv+0x36>
 8016ce2:	4b15      	ldr	r3, [pc, #84]	; (8016d38 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x80>)
 8016ce4:	4a15      	ldr	r2, [pc, #84]	; (8016d3c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x84>)
 8016ce6:	4816      	ldr	r0, [pc, #88]	; (8016d40 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x88>)
 8016ce8:	21ae      	movs	r1, #174	; 0xae
 8016cea:	f015 f983 	bl	802bff4 <__assert_func>
 8016cee:	4b15      	ldr	r3, [pc, #84]	; (8016d44 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x8c>)
 8016cf0:	6818      	ldr	r0, [r3, #0]
 8016cf2:	f7f3 fffd 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8016cf6:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8016cfa:	6822      	ldr	r2, [r4, #0]
 8016cfc:	2b00      	cmp	r3, #0
 8016cfe:	db06      	blt.n	8016d0e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 8016d00:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8016d04:	2b00      	cmp	r3, #0
 8016d06:	db02      	blt.n	8016d0e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 8016d08:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8016d0a:	4298      	cmp	r0, r3
 8016d0c:	d004      	beq.n	8016d18 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x60>
 8016d0e:	6953      	ldr	r3, [r2, #20]
 8016d10:	4620      	mov	r0, r4
 8016d12:	4798      	blx	r3
 8016d14:	b002      	add	sp, #8
 8016d16:	bd10      	pop	{r4, pc}
 8016d18:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8016d1c:	c903      	ldmia	r1, {r0, r1}
 8016d1e:	466b      	mov	r3, sp
 8016d20:	e883 0003 	stmia.w	r3, {r0, r1}
 8016d24:	6912      	ldr	r2, [r2, #16]
 8016d26:	4619      	mov	r1, r3
 8016d28:	4620      	mov	r0, r4
 8016d2a:	4790      	blx	r2
 8016d2c:	e7f2      	b.n	8016d14 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 8016d2e:	bf00      	nop
 8016d30:	2001e234 	.word	0x2001e234
 8016d34:	2001e230 	.word	0x2001e230
 8016d38:	0802f700 	.word	0x0802f700
 8016d3c:	0803481c 	.word	0x0803481c
 8016d40:	0802f78e 	.word	0x0802f78e
 8016d44:	2001e23c 	.word	0x2001e23c

08016d48 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8016d48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016d4c:	4d56      	ldr	r5, [pc, #344]	; (8016ea8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x160>)
 8016d4e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8016d50:	882b      	ldrh	r3, [r5, #0]
 8016d52:	4293      	cmp	r3, r2
 8016d54:	b08e      	sub	sp, #56	; 0x38
 8016d56:	4604      	mov	r4, r0
 8016d58:	f240 80a3 	bls.w	8016ea2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 8016d5c:	6808      	ldr	r0, [r1, #0]
 8016d5e:	4e53      	ldr	r6, [pc, #332]	; (8016eac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x164>)
 8016d60:	6849      	ldr	r1, [r1, #4]
 8016d62:	ab05      	add	r3, sp, #20
 8016d64:	c303      	stmia	r3!, {r0, r1}
 8016d66:	6833      	ldr	r3, [r6, #0]
 8016d68:	b92b      	cbnz	r3, 8016d76 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 8016d6a:	4b51      	ldr	r3, [pc, #324]	; (8016eb0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x168>)
 8016d6c:	4a51      	ldr	r2, [pc, #324]	; (8016eb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 8016d6e:	21ae      	movs	r1, #174	; 0xae
 8016d70:	4851      	ldr	r0, [pc, #324]	; (8016eb8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x170>)
 8016d72:	f015 f93f 	bl	802bff4 <__assert_func>
 8016d76:	4f51      	ldr	r7, [pc, #324]	; (8016ebc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x174>)
 8016d78:	4611      	mov	r1, r2
 8016d7a:	6838      	ldr	r0, [r7, #0]
 8016d7c:	f7f3 ffb8 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8016d80:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8016d84:	2b00      	cmp	r3, #0
 8016d86:	db11      	blt.n	8016dac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 8016d88:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8016d8c:	2b00      	cmp	r3, #0
 8016d8e:	db0d      	blt.n	8016dac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 8016d90:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8016d92:	4298      	cmp	r0, r3
 8016d94:	d10a      	bne.n	8016dac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 8016d96:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8016d9a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8016d9e:	ab09      	add	r3, sp, #36	; 0x24
 8016da0:	e883 0003 	stmia.w	r3, {r0, r1}
 8016da4:	4619      	mov	r1, r3
 8016da6:	a805      	add	r0, sp, #20
 8016da8:	f7fb f9b4 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 8016dac:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016db0:	2b00      	cmp	r3, #0
 8016db2:	dd76      	ble.n	8016ea2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 8016db4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8016db8:	2b00      	cmp	r3, #0
 8016dba:	dd72      	ble.n	8016ea2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 8016dbc:	6833      	ldr	r3, [r6, #0]
 8016dbe:	2b00      	cmp	r3, #0
 8016dc0:	d0d3      	beq.n	8016d6a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 8016dc2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8016dc4:	8829      	ldrh	r1, [r5, #0]
 8016dc6:	4291      	cmp	r1, r2
 8016dc8:	d803      	bhi.n	8016dd2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x8a>
 8016dca:	4b3d      	ldr	r3, [pc, #244]	; (8016ec0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x178>)
 8016dcc:	4a39      	ldr	r2, [pc, #228]	; (8016eb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 8016dce:	21af      	movs	r1, #175	; 0xaf
 8016dd0:	e7ce      	b.n	8016d70 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x28>
 8016dd2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8016dd6:	4b3b      	ldr	r3, [pc, #236]	; (8016ec4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x17c>)
 8016dd8:	681b      	ldr	r3, [r3, #0]
 8016dda:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 8016dde:	f1b8 0f00 	cmp.w	r8, #0
 8016de2:	d05e      	beq.n	8016ea2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 8016de4:	6823      	ldr	r3, [r4, #0]
 8016de6:	f894 9036 	ldrb.w	r9, [r4, #54]	; 0x36
 8016dea:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8016dec:	4620      	mov	r0, r4
 8016dee:	4798      	blx	r3
 8016df0:	6833      	ldr	r3, [r6, #0]
 8016df2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8016df6:	f894 c038 	ldrb.w	ip, [r4, #56]	; 0x38
 8016dfa:	2b00      	cmp	r3, #0
 8016dfc:	d0b5      	beq.n	8016d6a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 8016dfe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8016e00:	f8b5 e000 	ldrh.w	lr, [r5]
 8016e04:	4596      	cmp	lr, r2
 8016e06:	d9e0      	bls.n	8016dca <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 8016e08:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8016e0c:	f894 a037 	ldrb.w	sl, [r4, #55]	; 0x37
 8016e10:	785b      	ldrb	r3, [r3, #1]
 8016e12:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8016e14:	f894 e039 	ldrb.w	lr, [r4, #57]	; 0x39
 8016e18:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8016e1c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8016e20:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8016e24:	4b28      	ldr	r3, [pc, #160]	; (8016ec8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x180>)
 8016e26:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8016e2a:	681b      	ldr	r3, [r3, #0]
 8016e2c:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8016e30:	920b      	str	r2, [sp, #44]	; 0x2c
 8016e32:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 8016e36:	f88d 9032 	strb.w	r9, [sp, #50]	; 0x32
 8016e3a:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 8016e3e:	f88d e034 	strb.w	lr, [sp, #52]	; 0x34
 8016e42:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8016e46:	b122      	cbz	r2, 8016e52 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10a>
 8016e48:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 8016e4c:	f1b8 0f00 	cmp.w	r8, #0
 8016e50:	d101      	bne.n	8016e56 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10e>
 8016e52:	f8d3 8008 	ldr.w	r8, [r3, #8]
 8016e56:	f10d 091c 	add.w	r9, sp, #28
 8016e5a:	4621      	mov	r1, r4
 8016e5c:	4648      	mov	r0, r9
 8016e5e:	f003 fb2b 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016e62:	6833      	ldr	r3, [r6, #0]
 8016e64:	2b00      	cmp	r3, #0
 8016e66:	d080      	beq.n	8016d6a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 8016e68:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8016e6a:	882b      	ldrh	r3, [r5, #0]
 8016e6c:	428b      	cmp	r3, r1
 8016e6e:	d9ac      	bls.n	8016dca <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 8016e70:	6838      	ldr	r0, [r7, #0]
 8016e72:	f7f3 ff3d 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8016e76:	6823      	ldr	r3, [r4, #0]
 8016e78:	4605      	mov	r5, r0
 8016e7a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8016e7c:	4620      	mov	r0, r4
 8016e7e:	4798      	blx	r3
 8016e80:	6823      	ldr	r3, [r4, #0]
 8016e82:	4606      	mov	r6, r0
 8016e84:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8016e88:	4620      	mov	r0, r4
 8016e8a:	4798      	blx	r3
 8016e8c:	e9cd 6002 	strd	r6, r0, [sp, #8]
 8016e90:	ab09      	add	r3, sp, #36	; 0x24
 8016e92:	9300      	str	r3, [sp, #0]
 8016e94:	9501      	str	r5, [sp, #4]
 8016e96:	ab05      	add	r3, sp, #20
 8016e98:	e899 0006 	ldmia.w	r9, {r1, r2}
 8016e9c:	4640      	mov	r0, r8
 8016e9e:	f7f3 fed9 	bl	800ac54 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8016ea2:	b00e      	add	sp, #56	; 0x38
 8016ea4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016ea8:	2001e234 	.word	0x2001e234
 8016eac:	2001e230 	.word	0x2001e230
 8016eb0:	0802f700 	.word	0x0802f700
 8016eb4:	0803481c 	.word	0x0803481c
 8016eb8:	0802f78e 	.word	0x0802f78e
 8016ebc:	2001e23c 	.word	0x2001e23c
 8016ec0:	08032d0f 	.word	0x08032d0f
 8016ec4:	2001e238 	.word	0x2001e238
 8016ec8:	2001e1c0 	.word	0x2001e1c0

08016ecc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8016ecc:	b538      	push	{r3, r4, r5, lr}
 8016ece:	4b0e      	ldr	r3, [pc, #56]	; (8016f08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8016ed0:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8016ed2:	881b      	ldrh	r3, [r3, #0]
 8016ed4:	429a      	cmp	r2, r3
 8016ed6:	4604      	mov	r4, r0
 8016ed8:	d214      	bcs.n	8016f04 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8016eda:	6803      	ldr	r3, [r0, #0]
 8016edc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8016ede:	4798      	blx	r3
 8016ee0:	6823      	ldr	r3, [r4, #0]
 8016ee2:	4605      	mov	r5, r0
 8016ee4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8016ee6:	4620      	mov	r0, r4
 8016ee8:	4798      	blx	r3
 8016eea:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016eee:	b22d      	sxth	r5, r5
 8016ef0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8016ef4:	4601      	mov	r1, r0
 8016ef6:	bf06      	itte	eq
 8016ef8:	4602      	moveq	r2, r0
 8016efa:	4629      	moveq	r1, r5
 8016efc:	462a      	movne	r2, r5
 8016efe:	4620      	mov	r0, r4
 8016f00:	f7fa fcde 	bl	80118c0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8016f04:	bd38      	pop	{r3, r4, r5, pc}
 8016f06:	bf00      	nop
 8016f08:	2001e234 	.word	0x2001e234

08016f0c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8016f0c:	b530      	push	{r4, r5, lr}
 8016f0e:	888b      	ldrh	r3, [r1, #4]
 8016f10:	8583      	strh	r3, [r0, #44]	; 0x2c
 8016f12:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8016f16:	b085      	sub	sp, #20
 8016f18:	4604      	mov	r4, r0
 8016f1a:	b923      	cbnz	r3, 8016f26 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8016f1c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8016f20:	b90b      	cbnz	r3, 8016f26 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8016f22:	f7ff ffd3 	bl	8016ecc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8016f26:	6823      	ldr	r3, [r4, #0]
 8016f28:	466d      	mov	r5, sp
 8016f2a:	4621      	mov	r1, r4
 8016f2c:	4628      	mov	r0, r5
 8016f2e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8016f32:	4798      	blx	r3
 8016f34:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8016f38:	343c      	adds	r4, #60	; 0x3c
 8016f3a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8016f3e:	b005      	add	sp, #20
 8016f40:	bd30      	pop	{r4, r5, pc}

08016f42 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8016f42:	2300      	movs	r3, #0
 8016f44:	8083      	strh	r3, [r0, #4]
 8016f46:	80c3      	strh	r3, [r0, #6]
 8016f48:	8003      	strh	r3, [r0, #0]
 8016f4a:	8043      	strh	r3, [r0, #2]
 8016f4c:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8016f50:	2bff      	cmp	r3, #255	; 0xff
 8016f52:	bf01      	itttt	eq
 8016f54:	890b      	ldrheq	r3, [r1, #8]
 8016f56:	8083      	strheq	r3, [r0, #4]
 8016f58:	894b      	ldrheq	r3, [r1, #10]
 8016f5a:	80c3      	strheq	r3, [r0, #6]
 8016f5c:	4770      	bx	lr
	...

08016f60 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8016f60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016f62:	4604      	mov	r4, r0
 8016f64:	6808      	ldr	r0, [r1, #0]
 8016f66:	6849      	ldr	r1, [r1, #4]
 8016f68:	466b      	mov	r3, sp
 8016f6a:	c303      	stmia	r3!, {r0, r1}
 8016f6c:	6823      	ldr	r3, [r4, #0]
 8016f6e:	4669      	mov	r1, sp
 8016f70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016f72:	4620      	mov	r0, r4
 8016f74:	4798      	blx	r3
 8016f76:	4b08      	ldr	r3, [pc, #32]	; (8016f98 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8016f78:	681b      	ldr	r3, [r3, #0]
 8016f7a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8016f7e:	b10a      	cbz	r2, 8016f84 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8016f80:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016f82:	b900      	cbnz	r0, 8016f86 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8016f84:	6898      	ldr	r0, [r3, #8]
 8016f86:	6803      	ldr	r3, [r0, #0]
 8016f88:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8016f8a:	6a1d      	ldr	r5, [r3, #32]
 8016f8c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8016f90:	4669      	mov	r1, sp
 8016f92:	47a8      	blx	r5
 8016f94:	b003      	add	sp, #12
 8016f96:	bd30      	pop	{r4, r5, pc}
 8016f98:	2001e1c0 	.word	0x2001e1c0

08016f9c <_ZN8touchgfx3BoxD1Ev>:
 8016f9c:	4770      	bx	lr

08016f9e <_ZN8touchgfx3BoxD0Ev>:
 8016f9e:	b510      	push	{r4, lr}
 8016fa0:	212c      	movs	r1, #44	; 0x2c
 8016fa2:	4604      	mov	r4, r0
 8016fa4:	f014 f8d9 	bl	802b15a <_ZdlPvj>
 8016fa8:	4620      	mov	r0, r4
 8016faa:	bd10      	pop	{r4, pc}

08016fac <_ZNK8touchgfx3Box17invalidateContentEv>:
 8016fac:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8016fb0:	b12a      	cbz	r2, 8016fbe <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8016fb2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8016fb6:	b112      	cbz	r2, 8016fbe <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8016fb8:	6803      	ldr	r3, [r0, #0]
 8016fba:	695b      	ldr	r3, [r3, #20]
 8016fbc:	4718      	bx	r3
 8016fbe:	4770      	bx	lr

08016fc0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8016fc0:	b570      	push	{r4, r5, r6, lr}
 8016fc2:	880b      	ldrh	r3, [r1, #0]
 8016fc4:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8016fc6:	4605      	mov	r5, r0
 8016fc8:	8813      	ldrh	r3, [r2, #0]
 8016fca:	f825 3f30 	strh.w	r3, [r5, #48]!
 8016fce:	4604      	mov	r4, r0
 8016fd0:	4628      	mov	r0, r5
 8016fd2:	f005 fb8b 	bl	801c6ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016fd6:	4606      	mov	r6, r0
 8016fd8:	4628      	mov	r0, r5
 8016fda:	f005 fbcb 	bl	801c774 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016fde:	6823      	ldr	r3, [r4, #0]
 8016fe0:	4605      	mov	r5, r0
 8016fe2:	b231      	sxth	r1, r6
 8016fe4:	4620      	mov	r0, r4
 8016fe6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016fe8:	4798      	blx	r3
 8016fea:	6823      	ldr	r3, [r4, #0]
 8016fec:	b229      	sxth	r1, r5
 8016fee:	4620      	mov	r0, r4
 8016ff0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016ff2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016ff6:	4718      	bx	r3

08016ff8 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8016ff8:	b510      	push	{r4, lr}
 8016ffa:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8016ffe:	2bff      	cmp	r3, #255	; 0xff
 8017000:	4604      	mov	r4, r0
 8017002:	d006      	beq.n	8017012 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8017004:	2300      	movs	r3, #0
 8017006:	8003      	strh	r3, [r0, #0]
 8017008:	8043      	strh	r3, [r0, #2]
 801700a:	8083      	strh	r3, [r0, #4]
 801700c:	80c3      	strh	r3, [r0, #6]
 801700e:	4620      	mov	r0, r4
 8017010:	bd10      	pop	{r4, pc}
 8017012:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8017016:	b11b      	cbz	r3, 8017020 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8017018:	3130      	adds	r1, #48	; 0x30
 801701a:	f005 fbef 	bl	801c7fc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801701e:	e7f6      	b.n	801700e <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8017020:	312e      	adds	r1, #46	; 0x2e
 8017022:	e7fa      	b.n	801701a <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

08017024 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8017024:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017028:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801702c:	b08a      	sub	sp, #40	; 0x28
 801702e:	4604      	mov	r4, r0
 8017030:	4688      	mov	r8, r1
 8017032:	2b00      	cmp	r3, #0
 8017034:	d044      	beq.n	80170c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 8017036:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8017038:	f8ad 3014 	strh.w	r3, [sp, #20]
 801703c:	a805      	add	r0, sp, #20
 801703e:	f005 fb55 	bl	801c6ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017042:	4605      	mov	r5, r0
 8017044:	b206      	sxth	r6, r0
 8017046:	a805      	add	r0, sp, #20
 8017048:	f005 fb94 	bl	801c774 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801704c:	f9b8 2000 	ldrsh.w	r2, [r8]
 8017050:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 8017054:	4417      	add	r7, r2
 8017056:	b2bf      	uxth	r7, r7
 8017058:	2300      	movs	r3, #0
 801705a:	fa0f fe87 	sxth.w	lr, r7
 801705e:	459e      	cmp	lr, r3
 8017060:	fa0f fc80 	sxth.w	ip, r0
 8017064:	9306      	str	r3, [sp, #24]
 8017066:	dd2d      	ble.n	80170c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8017068:	4296      	cmp	r6, r2
 801706a:	dd2b      	ble.n	80170c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 801706c:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 8017070:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 8017074:	4419      	add	r1, r3
 8017076:	b289      	uxth	r1, r1
 8017078:	fa0f f881 	sxth.w	r8, r1
 801707c:	f1b8 0f00 	cmp.w	r8, #0
 8017080:	dd20      	ble.n	80170c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8017082:	459c      	cmp	ip, r3
 8017084:	dd1e      	ble.n	80170c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8017086:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801708a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801708e:	4576      	cmp	r6, lr
 8017090:	bfa8      	it	ge
 8017092:	463d      	movge	r5, r7
 8017094:	45c4      	cmp	ip, r8
 8017096:	bfa8      	it	ge
 8017098:	4608      	movge	r0, r1
 801709a:	1aad      	subs	r5, r5, r2
 801709c:	1ac0      	subs	r0, r0, r3
 801709e:	f8ad 501c 	strh.w	r5, [sp, #28]
 80170a2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80170a6:	f8ad 2018 	strh.w	r2, [sp, #24]
 80170aa:	f8ad 301a 	strh.w	r3, [sp, #26]
 80170ae:	4b1f      	ldr	r3, [pc, #124]	; (801712c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 80170b0:	681b      	ldr	r3, [r3, #0]
 80170b2:	b953      	cbnz	r3, 80170ca <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 80170b4:	4b1e      	ldr	r3, [pc, #120]	; (8017130 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 80170b6:	4a1f      	ldr	r2, [pc, #124]	; (8017134 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 80170b8:	481f      	ldr	r0, [pc, #124]	; (8017138 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 80170ba:	2187      	movs	r1, #135	; 0x87
 80170bc:	f014 ff9a 	bl	802bff4 <__assert_func>
 80170c0:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80170c2:	e7b9      	b.n	8017038 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80170c4:	2300      	movs	r3, #0
 80170c6:	9307      	str	r3, [sp, #28]
 80170c8:	e7f1      	b.n	80170ae <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 80170ca:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80170ce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80170d2:	429a      	cmp	r2, r3
 80170d4:	d026      	beq.n	8017124 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 80170d6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80170da:	2b00      	cmp	r3, #0
 80170dc:	dd22      	ble.n	8017124 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 80170de:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80170e2:	2b00      	cmp	r3, #0
 80170e4:	dd1e      	ble.n	8017124 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 80170e6:	2300      	movs	r3, #0
 80170e8:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80170ec:	6823      	ldr	r3, [r4, #0]
 80170ee:	a908      	add	r1, sp, #32
 80170f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80170f2:	4620      	mov	r0, r4
 80170f4:	4798      	blx	r3
 80170f6:	4b11      	ldr	r3, [pc, #68]	; (801713c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 80170f8:	681b      	ldr	r3, [r3, #0]
 80170fa:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80170fe:	b10a      	cbz	r2, 8017104 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8017100:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8017102:	b900      	cbnz	r0, 8017106 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 8017104:	6898      	ldr	r0, [r3, #8]
 8017106:	6801      	ldr	r1, [r0, #0]
 8017108:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801710c:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017110:	2501      	movs	r5, #1
 8017112:	9502      	str	r5, [sp, #8]
 8017114:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8017118:	9401      	str	r4, [sp, #4]
 801711a:	ac06      	add	r4, sp, #24
 801711c:	9400      	str	r4, [sp, #0]
 801711e:	688c      	ldr	r4, [r1, #8]
 8017120:	a905      	add	r1, sp, #20
 8017122:	47a0      	blx	r4
 8017124:	b00a      	add	sp, #40	; 0x28
 8017126:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801712a:	bf00      	nop
 801712c:	2001e268 	.word	0x2001e268
 8017130:	08033c04 	.word	0x08033c04
 8017134:	080348b4 	.word	0x080348b4
 8017138:	08033c40 	.word	0x08033c40
 801713c:	2001e1c0 	.word	0x2001e1c0

08017140 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8017140:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017144:	4d38      	ldr	r5, [pc, #224]	; (8017228 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe8>)
 8017146:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8017148:	882b      	ldrh	r3, [r5, #0]
 801714a:	4293      	cmp	r3, r2
 801714c:	b08c      	sub	sp, #48	; 0x30
 801714e:	4604      	mov	r4, r0
 8017150:	4689      	mov	r9, r1
 8017152:	d965      	bls.n	8017220 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 8017154:	4e35      	ldr	r6, [pc, #212]	; (801722c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xec>)
 8017156:	6833      	ldr	r3, [r6, #0]
 8017158:	b92b      	cbnz	r3, 8017166 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x26>
 801715a:	4b35      	ldr	r3, [pc, #212]	; (8017230 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf0>)
 801715c:	4a35      	ldr	r2, [pc, #212]	; (8017234 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 801715e:	21ae      	movs	r1, #174	; 0xae
 8017160:	4835      	ldr	r0, [pc, #212]	; (8017238 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf8>)
 8017162:	f014 ff47 	bl	802bff4 <__assert_func>
 8017166:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801716a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801716e:	4b33      	ldr	r3, [pc, #204]	; (801723c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xfc>)
 8017170:	681b      	ldr	r3, [r3, #0]
 8017172:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017176:	2a00      	cmp	r2, #0
 8017178:	d052      	beq.n	8017220 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 801717a:	784b      	ldrb	r3, [r1, #1]
 801717c:	9207      	str	r2, [sp, #28]
 801717e:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 8017182:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8017186:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 801718a:	4b2d      	ldr	r3, [pc, #180]	; (8017240 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x100>)
 801718c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 8017190:	681b      	ldr	r3, [r3, #0]
 8017192:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 8017196:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801719a:	f890 8038 	ldrb.w	r8, [r0, #56]	; 0x38
 801719e:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 80171a2:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 80171a6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80171a8:	f88d a020 	strb.w	sl, [sp, #32]
 80171ac:	f88d 8022 	strb.w	r8, [sp, #34]	; 0x22
 80171b0:	9009      	str	r0, [sp, #36]	; 0x24
 80171b2:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 80171b6:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 80171ba:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 80171be:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 80171c2:	b10a      	cbz	r2, 80171c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x88>
 80171c4:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 80171c6:	b907      	cbnz	r7, 80171ca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x8a>
 80171c8:	689f      	ldr	r7, [r3, #8]
 80171ca:	f10d 0814 	add.w	r8, sp, #20
 80171ce:	4621      	mov	r1, r4
 80171d0:	4640      	mov	r0, r8
 80171d2:	f003 f971 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80171d6:	6833      	ldr	r3, [r6, #0]
 80171d8:	2b00      	cmp	r3, #0
 80171da:	d0be      	beq.n	801715a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x1a>
 80171dc:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80171de:	882b      	ldrh	r3, [r5, #0]
 80171e0:	428b      	cmp	r3, r1
 80171e2:	d803      	bhi.n	80171ec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xac>
 80171e4:	4b17      	ldr	r3, [pc, #92]	; (8017244 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x104>)
 80171e6:	4a13      	ldr	r2, [pc, #76]	; (8017234 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 80171e8:	21af      	movs	r1, #175	; 0xaf
 80171ea:	e7b9      	b.n	8017160 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x20>
 80171ec:	4b16      	ldr	r3, [pc, #88]	; (8017248 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x108>)
 80171ee:	6818      	ldr	r0, [r3, #0]
 80171f0:	f7f3 fd7e 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 80171f4:	6823      	ldr	r3, [r4, #0]
 80171f6:	4605      	mov	r5, r0
 80171f8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80171fa:	4620      	mov	r0, r4
 80171fc:	4798      	blx	r3
 80171fe:	6823      	ldr	r3, [r4, #0]
 8017200:	4606      	mov	r6, r0
 8017202:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8017206:	4620      	mov	r0, r4
 8017208:	4798      	blx	r3
 801720a:	e9cd 6002 	strd	r6, r0, [sp, #8]
 801720e:	ab07      	add	r3, sp, #28
 8017210:	9300      	str	r3, [sp, #0]
 8017212:	9501      	str	r5, [sp, #4]
 8017214:	464b      	mov	r3, r9
 8017216:	e898 0006 	ldmia.w	r8, {r1, r2}
 801721a:	4638      	mov	r0, r7
 801721c:	f7f3 fd1a 	bl	800ac54 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8017220:	b00c      	add	sp, #48	; 0x30
 8017222:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017226:	bf00      	nop
 8017228:	2001e234 	.word	0x2001e234
 801722c:	2001e230 	.word	0x2001e230
 8017230:	0802f700 	.word	0x0802f700
 8017234:	080348e7 	.word	0x080348e7
 8017238:	0802f78e 	.word	0x0802f78e
 801723c:	2001e238 	.word	0x2001e238
 8017240:	2001e1c0 	.word	0x2001e1c0
 8017244:	08032d0f 	.word	0x08032d0f
 8017248:	2001e23c 	.word	0x2001e23c

0801724c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 801724c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017250:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8017254:	b0a0      	sub	sp, #128	; 0x80
 8017256:	4604      	mov	r4, r0
 8017258:	b193      	cbz	r3, 8017280 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 801725a:	4b33      	ldr	r3, [pc, #204]	; (8017328 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 801725c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801725e:	881b      	ldrh	r3, [r3, #0]
 8017260:	428b      	cmp	r3, r1
 8017262:	d90d      	bls.n	8017280 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8017264:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8017268:	2b00      	cmp	r3, #0
 801726a:	dd09      	ble.n	8017280 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 801726c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8017270:	2b00      	cmp	r3, #0
 8017272:	dd05      	ble.n	8017280 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8017274:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8017278:	b12b      	cbz	r3, 8017286 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 801727a:	6803      	ldr	r3, [r0, #0]
 801727c:	695b      	ldr	r3, [r3, #20]
 801727e:	4798      	blx	r3
 8017280:	b020      	add	sp, #128	; 0x80
 8017282:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017286:	4b29      	ldr	r3, [pc, #164]	; (801732c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe0>)
 8017288:	681b      	ldr	r3, [r3, #0]
 801728a:	b92b      	cbnz	r3, 8017298 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x4c>
 801728c:	4b28      	ldr	r3, [pc, #160]	; (8017330 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe4>)
 801728e:	4a29      	ldr	r2, [pc, #164]	; (8017334 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe8>)
 8017290:	4829      	ldr	r0, [pc, #164]	; (8017338 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xec>)
 8017292:	21ae      	movs	r1, #174	; 0xae
 8017294:	f014 feae 	bl	802bff4 <__assert_func>
 8017298:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801729c:	4b27      	ldr	r3, [pc, #156]	; (801733c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf0>)
 801729e:	681b      	ldr	r3, [r3, #0]
 80172a0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80172a4:	4b26      	ldr	r3, [pc, #152]	; (8017340 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf4>)
 80172a6:	6818      	ldr	r0, [r3, #0]
 80172a8:	f7f3 fd22 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 80172ac:	4606      	mov	r6, r0
 80172ae:	a807      	add	r0, sp, #28
 80172b0:	f003 fdec 	bl	801ae8c <_ZN8touchgfx12TextProviderC1Ev>
 80172b4:	682b      	ldr	r3, [r5, #0]
 80172b6:	4628      	mov	r0, r5
 80172b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80172ba:	4798      	blx	r3
 80172bc:	682b      	ldr	r3, [r5, #0]
 80172be:	4607      	mov	r7, r0
 80172c0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80172c2:	4628      	mov	r0, r5
 80172c4:	4798      	blx	r3
 80172c6:	6823      	ldr	r3, [r4, #0]
 80172c8:	4605      	mov	r5, r0
 80172ca:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80172cc:	4620      	mov	r0, r4
 80172ce:	4798      	blx	r3
 80172d0:	6823      	ldr	r3, [r4, #0]
 80172d2:	4680      	mov	r8, r0
 80172d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80172d8:	4620      	mov	r0, r4
 80172da:	4798      	blx	r3
 80172dc:	462b      	mov	r3, r5
 80172de:	e9cd 8000 	strd	r8, r0, [sp]
 80172e2:	463a      	mov	r2, r7
 80172e4:	a807      	add	r0, sp, #28
 80172e6:	4631      	mov	r1, r6
 80172e8:	f003 fe51 	bl	801af8e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80172ec:	a807      	add	r0, sp, #28
 80172ee:	f004 fa43 	bl	801b778 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80172f2:	280a      	cmp	r0, #10
 80172f4:	d103      	bne.n	80172fe <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xb2>
 80172f6:	6823      	ldr	r3, [r4, #0]
 80172f8:	4620      	mov	r0, r4
 80172fa:	695b      	ldr	r3, [r3, #20]
 80172fc:	e7bf      	b.n	801727e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 80172fe:	a807      	add	r0, sp, #28
 8017300:	f004 fa3a 	bl	801b778 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017304:	2800      	cmp	r0, #0
 8017306:	d1f4      	bne.n	80172f2 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa6>
 8017308:	ad04      	add	r5, sp, #16
 801730a:	4621      	mov	r1, r4
 801730c:	4628      	mov	r0, r5
 801730e:	f7ff fab7 	bl	8016880 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8017312:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017316:	6822      	ldr	r2, [r4, #0]
 8017318:	ab02      	add	r3, sp, #8
 801731a:	e883 0003 	stmia.w	r3, {r0, r1}
 801731e:	6912      	ldr	r2, [r2, #16]
 8017320:	4619      	mov	r1, r3
 8017322:	4620      	mov	r0, r4
 8017324:	4790      	blx	r2
 8017326:	e7ab      	b.n	8017280 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 8017328:	2001e234 	.word	0x2001e234
 801732c:	2001e230 	.word	0x2001e230
 8017330:	0802f700 	.word	0x0802f700
 8017334:	080348e7 	.word	0x080348e7
 8017338:	0802f78e 	.word	0x0802f78e
 801733c:	2001e238 	.word	0x2001e238
 8017340:	2001e23c 	.word	0x2001e23c

08017344 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 8017344:	4770      	bx	lr

08017346 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 8017346:	b510      	push	{r4, lr}
 8017348:	2134      	movs	r1, #52	; 0x34
 801734a:	4604      	mov	r4, r0
 801734c:	f013 ff05 	bl	802b15a <_ZdlPvj>
 8017350:	4620      	mov	r0, r4
 8017352:	bd10      	pop	{r4, pc}

08017354 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8017354:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017358:	4604      	mov	r4, r0
 801735a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801735c:	8962      	ldrh	r2, [r4, #10]
 801735e:	b218      	sxth	r0, r3
 8017360:	460e      	mov	r6, r1
 8017362:	005b      	lsls	r3, r3, #1
 8017364:	8921      	ldrh	r1, [r4, #8]
 8017366:	b29b      	uxth	r3, r3
 8017368:	1ac9      	subs	r1, r1, r3
 801736a:	b08e      	sub	sp, #56	; 0x38
 801736c:	b209      	sxth	r1, r1
 801736e:	1ad3      	subs	r3, r2, r3
 8017370:	b21b      	sxth	r3, r3
 8017372:	2900      	cmp	r1, #0
 8017374:	f8ad 0000 	strh.w	r0, [sp]
 8017378:	f8ad 0002 	strh.w	r0, [sp, #2]
 801737c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017380:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017384:	dd5e      	ble.n	8017444 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8017386:	2b00      	cmp	r3, #0
 8017388:	dd5c      	ble.n	8017444 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801738a:	6830      	ldr	r0, [r6, #0]
 801738c:	6871      	ldr	r1, [r6, #4]
 801738e:	ab02      	add	r3, sp, #8
 8017390:	c303      	stmia	r3!, {r0, r1}
 8017392:	4669      	mov	r1, sp
 8017394:	a802      	add	r0, sp, #8
 8017396:	f7fa febd 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801739a:	4620      	mov	r0, r4
 801739c:	a902      	add	r1, sp, #8
 801739e:	f7ff fddf 	bl	8016f60 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 80173a2:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 80173a4:	2800      	cmp	r0, #0
 80173a6:	d05f      	beq.n	8017468 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80173a8:	8963      	ldrh	r3, [r4, #10]
 80173aa:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80173ae:	f8ad 101c 	strh.w	r1, [sp, #28]
 80173b2:	1a1f      	subs	r7, r3, r0
 80173b4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 80173b8:	b202      	sxth	r2, r0
 80173ba:	2500      	movs	r5, #0
 80173bc:	b21b      	sxth	r3, r3
 80173be:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 80173c2:	1a09      	subs	r1, r1, r0
 80173c4:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80173c8:	9506      	str	r5, [sp, #24]
 80173ca:	f8ad 201e 	strh.w	r2, [sp, #30]
 80173ce:	f8ad 5020 	strh.w	r5, [sp, #32]
 80173d2:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 80173d6:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 80173da:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80173de:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80173e2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80173e6:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 80173ea:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80173ee:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80173f2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80173f6:	af04      	add	r7, sp, #16
 80173f8:	ab06      	add	r3, sp, #24
 80173fa:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80173fe:	e893 0003 	ldmia.w	r3, {r0, r1}
 8017402:	e887 0003 	stmia.w	r7, {r0, r1}
 8017406:	4631      	mov	r1, r6
 8017408:	4638      	mov	r0, r7
 801740a:	f7fa fe83 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801740e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8017412:	2b00      	cmp	r3, #0
 8017414:	dd12      	ble.n	801743c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8017416:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801741a:	2b00      	cmp	r3, #0
 801741c:	dd0e      	ble.n	801743c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801741e:	6823      	ldr	r3, [r4, #0]
 8017420:	4639      	mov	r1, r7
 8017422:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017424:	4620      	mov	r0, r4
 8017426:	4798      	blx	r3
 8017428:	f7fb f942 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 801742c:	6803      	ldr	r3, [r0, #0]
 801742e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8017430:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8017434:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8017438:	4639      	mov	r1, r7
 801743a:	47c0      	blx	r8
 801743c:	3501      	adds	r5, #1
 801743e:	2d04      	cmp	r5, #4
 8017440:	d1da      	bne.n	80173f8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8017442:	e011      	b.n	8017468 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8017444:	6830      	ldr	r0, [r6, #0]
 8017446:	6871      	ldr	r1, [r6, #4]
 8017448:	ab06      	add	r3, sp, #24
 801744a:	c303      	stmia	r3!, {r0, r1}
 801744c:	6823      	ldr	r3, [r4, #0]
 801744e:	a906      	add	r1, sp, #24
 8017450:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017452:	4620      	mov	r0, r4
 8017454:	4798      	blx	r3
 8017456:	f7fb f92b 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 801745a:	6803      	ldr	r3, [r0, #0]
 801745c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801745e:	6a1d      	ldr	r5, [r3, #32]
 8017460:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8017464:	a906      	add	r1, sp, #24
 8017466:	47a8      	blx	r5
 8017468:	b00e      	add	sp, #56	; 0x38
 801746a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801746e <_ZN8touchgfx14ButtonWithIconD1Ev>:
 801746e:	4770      	bx	lr

08017470 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8017470:	b510      	push	{r4, lr}
 8017472:	213c      	movs	r1, #60	; 0x3c
 8017474:	4604      	mov	r4, r0
 8017476:	f013 fe70 	bl	802b15a <_ZdlPvj>
 801747a:	4620      	mov	r0, r4
 801747c:	bd10      	pop	{r4, pc}

0801747e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 801747e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017482:	461c      	mov	r4, r3
 8017484:	4606      	mov	r6, r0
 8017486:	9f06      	ldr	r7, [sp, #24]
 8017488:	f7ff fd9a 	bl	8016fc0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 801748c:	8823      	ldrh	r3, [r4, #0]
 801748e:	86b3      	strh	r3, [r6, #52]	; 0x34
 8017490:	883b      	ldrh	r3, [r7, #0]
 8017492:	86f3      	strh	r3, [r6, #54]	; 0x36
 8017494:	4638      	mov	r0, r7
 8017496:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 801749a:	f005 f927 	bl	801c6ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 801749e:	f04f 0802 	mov.w	r8, #2
 80174a2:	fb95 f5f8 	sdiv	r5, r5, r8
 80174a6:	b2ad      	uxth	r5, r5
 80174a8:	eba5 0050 	sub.w	r0, r5, r0, lsr #1
 80174ac:	8730      	strh	r0, [r6, #56]	; 0x38
 80174ae:	4638      	mov	r0, r7
 80174b0:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 80174b4:	fb94 f4f8 	sdiv	r4, r4, r8
 80174b8:	f005 f95c 	bl	801c774 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80174bc:	b2a4      	uxth	r4, r4
 80174be:	eba4 0050 	sub.w	r0, r4, r0, lsr #1
 80174c2:	8770      	strh	r0, [r6, #58]	; 0x3a
 80174c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080174c8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 80174c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80174cc:	4604      	mov	r4, r0
 80174ce:	b08c      	sub	sp, #48	; 0x30
 80174d0:	460d      	mov	r5, r1
 80174d2:	f7ff fda7 	bl	8017024 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80174d6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80174da:	b33b      	cbz	r3, 801752c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x64>
 80174dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80174de:	f8ad 3014 	strh.w	r3, [sp, #20]
 80174e2:	a805      	add	r0, sp, #20
 80174e4:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 80174e8:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 80174ec:	f005 f8fe 	bl	801c6ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 80174f0:	4606      	mov	r6, r0
 80174f2:	a805      	add	r0, sp, #20
 80174f4:	f005 f93e 	bl	801c774 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80174f8:	6869      	ldr	r1, [r5, #4]
 80174fa:	f8ad 001e 	strh.w	r0, [sp, #30]
 80174fe:	6828      	ldr	r0, [r5, #0]
 8017500:	f8ad 8018 	strh.w	r8, [sp, #24]
 8017504:	ab08      	add	r3, sp, #32
 8017506:	ad08      	add	r5, sp, #32
 8017508:	c303      	stmia	r3!, {r0, r1}
 801750a:	a906      	add	r1, sp, #24
 801750c:	4628      	mov	r0, r5
 801750e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8017512:	f8ad 601c 	strh.w	r6, [sp, #28]
 8017516:	f7fa fdfd 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801751a:	4b25      	ldr	r3, [pc, #148]	; (80175b0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe8>)
 801751c:	681b      	ldr	r3, [r3, #0]
 801751e:	b93b      	cbnz	r3, 8017530 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x68>
 8017520:	4b24      	ldr	r3, [pc, #144]	; (80175b4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xec>)
 8017522:	4a25      	ldr	r2, [pc, #148]	; (80175b8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf0>)
 8017524:	4825      	ldr	r0, [pc, #148]	; (80175bc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf4>)
 8017526:	2187      	movs	r1, #135	; 0x87
 8017528:	f014 fd64 	bl	802bff4 <__assert_func>
 801752c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801752e:	e7d6      	b.n	80174de <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x16>
 8017530:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017534:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8017538:	429a      	cmp	r2, r3
 801753a:	d035      	beq.n	80175a8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 801753c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8017540:	2b00      	cmp	r3, #0
 8017542:	dd31      	ble.n	80175a8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 8017544:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8017548:	2b00      	cmp	r3, #0
 801754a:	dd2d      	ble.n	80175a8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 801754c:	2300      	movs	r3, #0
 801754e:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8017552:	6823      	ldr	r3, [r4, #0]
 8017554:	a90a      	add	r1, sp, #40	; 0x28
 8017556:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017558:	4620      	mov	r0, r4
 801755a:	4798      	blx	r3
 801755c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017560:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8017562:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8017566:	1a9b      	subs	r3, r3, r2
 8017568:	f8ad 3020 	strh.w	r3, [sp, #32]
 801756c:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 801756e:	1ac9      	subs	r1, r1, r3
 8017570:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8017574:	4912      	ldr	r1, [pc, #72]	; (80175c0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf8>)
 8017576:	6809      	ldr	r1, [r1, #0]
 8017578:	f891 0076 	ldrb.w	r0, [r1, #118]	; 0x76
 801757c:	b108      	cbz	r0, 8017582 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xba>
 801757e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8017580:	b900      	cbnz	r0, 8017584 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xbc>
 8017582:	6888      	ldr	r0, [r1, #8]
 8017584:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8017588:	440b      	add	r3, r1
 801758a:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801758e:	2601      	movs	r6, #1
 8017590:	440a      	add	r2, r1
 8017592:	6801      	ldr	r1, [r0, #0]
 8017594:	9602      	str	r6, [sp, #8]
 8017596:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801759a:	e9cd 5400 	strd	r5, r4, [sp]
 801759e:	b21b      	sxth	r3, r3
 80175a0:	688c      	ldr	r4, [r1, #8]
 80175a2:	b212      	sxth	r2, r2
 80175a4:	a905      	add	r1, sp, #20
 80175a6:	47a0      	blx	r4
 80175a8:	b00c      	add	sp, #48	; 0x30
 80175aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80175ae:	bf00      	nop
 80175b0:	2001e268 	.word	0x2001e268
 80175b4:	08033c04 	.word	0x08033c04
 80175b8:	080349f8 	.word	0x080349f8
 80175bc:	08033c40 	.word	0x08033c40
 80175c0:	2001e1c0 	.word	0x2001e1c0

080175c4 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80175c4:	b510      	push	{r4, lr}
 80175c6:	2101      	movs	r1, #1
 80175c8:	2200      	movs	r2, #0
 80175ca:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80175ce:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80175d2:	4c0e      	ldr	r4, [pc, #56]	; (801760c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80175d4:	8082      	strh	r2, [r0, #4]
 80175d6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80175da:	80c2      	strh	r2, [r0, #6]
 80175dc:	8102      	strh	r2, [r0, #8]
 80175de:	8142      	strh	r2, [r0, #10]
 80175e0:	8182      	strh	r2, [r0, #12]
 80175e2:	81c2      	strh	r2, [r0, #14]
 80175e4:	8202      	strh	r2, [r0, #16]
 80175e6:	8242      	strh	r2, [r0, #18]
 80175e8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80175ec:	61c2      	str	r2, [r0, #28]
 80175ee:	8402      	strh	r2, [r0, #32]
 80175f0:	8442      	strh	r2, [r0, #34]	; 0x22
 80175f2:	6282      	str	r2, [r0, #40]	; 0x28
 80175f4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80175f8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80175fa:	8601      	strh	r1, [r0, #48]	; 0x30
 80175fc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8017600:	6004      	str	r4, [r0, #0]
 8017602:	8681      	strh	r1, [r0, #52]	; 0x34
 8017604:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017606:	8702      	strh	r2, [r0, #56]	; 0x38
 8017608:	8742      	strh	r2, [r0, #58]	; 0x3a
 801760a:	bd10      	pop	{r4, pc}
 801760c:	08034988 	.word	0x08034988

08017610 <_ZN8touchgfx5ImageD1Ev>:
 8017610:	4770      	bx	lr

08017612 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8017612:	b570      	push	{r4, r5, r6, lr}
 8017614:	880b      	ldrh	r3, [r1, #0]
 8017616:	84c3      	strh	r3, [r0, #38]	; 0x26
 8017618:	4604      	mov	r4, r0
 801761a:	4608      	mov	r0, r1
 801761c:	460d      	mov	r5, r1
 801761e:	f005 f865 	bl	801c6ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017622:	4606      	mov	r6, r0
 8017624:	4628      	mov	r0, r5
 8017626:	f005 f8a5 	bl	801c774 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801762a:	6823      	ldr	r3, [r4, #0]
 801762c:	4605      	mov	r5, r0
 801762e:	b231      	sxth	r1, r6
 8017630:	4620      	mov	r0, r4
 8017632:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017634:	4798      	blx	r3
 8017636:	6823      	ldr	r3, [r4, #0]
 8017638:	b229      	sxth	r1, r5
 801763a:	4620      	mov	r0, r4
 801763c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801763e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017642:	4718      	bx	r3

08017644 <_ZN8touchgfx5ImageD0Ev>:
 8017644:	b510      	push	{r4, lr}
 8017646:	212c      	movs	r1, #44	; 0x2c
 8017648:	4604      	mov	r4, r0
 801764a:	f013 fd86 	bl	802b15a <_ZdlPvj>
 801764e:	4620      	mov	r0, r4
 8017650:	bd10      	pop	{r4, pc}

08017652 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8017652:	b510      	push	{r4, lr}
 8017654:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8017658:	2bff      	cmp	r3, #255	; 0xff
 801765a:	4604      	mov	r4, r0
 801765c:	d006      	beq.n	801766c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801765e:	2300      	movs	r3, #0
 8017660:	8003      	strh	r3, [r0, #0]
 8017662:	8043      	strh	r3, [r0, #2]
 8017664:	8083      	strh	r3, [r0, #4]
 8017666:	80c3      	strh	r3, [r0, #6]
 8017668:	4620      	mov	r0, r4
 801766a:	bd10      	pop	{r4, pc}
 801766c:	3126      	adds	r1, #38	; 0x26
 801766e:	f005 f8c5 	bl	801c7fc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017672:	e7f9      	b.n	8017668 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08017674 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8017674:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8017678:	b12a      	cbz	r2, 8017686 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801767a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801767e:	b112      	cbz	r2, 8017686 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8017680:	6803      	ldr	r3, [r0, #0]
 8017682:	695b      	ldr	r3, [r3, #20]
 8017684:	4718      	bx	r3
 8017686:	4770      	bx	lr

08017688 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8017688:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801768c:	4604      	mov	r4, r0
 801768e:	b088      	sub	sp, #32
 8017690:	f854 3b26 	ldr.w	r3, [r4], #38
 8017694:	2500      	movs	r5, #0
 8017696:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017698:	460f      	mov	r7, r1
 801769a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801769e:	a904      	add	r1, sp, #16
 80176a0:	4606      	mov	r6, r0
 80176a2:	4798      	blx	r3
 80176a4:	4620      	mov	r0, r4
 80176a6:	f005 f821 	bl	801c6ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 80176aa:	4680      	mov	r8, r0
 80176ac:	4620      	mov	r0, r4
 80176ae:	f005 f861 	bl	801c774 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80176b2:	9506      	str	r5, [sp, #24]
 80176b4:	ad06      	add	r5, sp, #24
 80176b6:	f8ad 001e 	strh.w	r0, [sp, #30]
 80176ba:	4639      	mov	r1, r7
 80176bc:	4628      	mov	r0, r5
 80176be:	f8ad 801c 	strh.w	r8, [sp, #28]
 80176c2:	f7fa fd27 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 80176c6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80176ca:	2b00      	cmp	r3, #0
 80176cc:	dd19      	ble.n	8017702 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80176ce:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80176d2:	2b00      	cmp	r3, #0
 80176d4:	dd15      	ble.n	8017702 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80176d6:	4b0c      	ldr	r3, [pc, #48]	; (8017708 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80176d8:	681b      	ldr	r3, [r3, #0]
 80176da:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80176de:	b10a      	cbz	r2, 80176e4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80176e0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80176e2:	b900      	cbnz	r0, 80176e6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80176e4:	6898      	ldr	r0, [r3, #8]
 80176e6:	6801      	ldr	r1, [r0, #0]
 80176e8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80176ec:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80176f0:	2701      	movs	r7, #1
 80176f2:	9702      	str	r7, [sp, #8]
 80176f4:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80176f8:	e9cd 5600 	strd	r5, r6, [sp]
 80176fc:	688d      	ldr	r5, [r1, #8]
 80176fe:	4621      	mov	r1, r4
 8017700:	47a8      	blx	r5
 8017702:	b008      	add	sp, #32
 8017704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017708:	2001e1c0 	.word	0x2001e1c0

0801770c <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 801770c:	4770      	bx	lr

0801770e <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801770e:	b510      	push	{r4, lr}
 8017710:	2148      	movs	r1, #72	; 0x48
 8017712:	4604      	mov	r4, r0
 8017714:	f013 fd21 	bl	802b15a <_ZdlPvj>
 8017718:	4620      	mov	r0, r4
 801771a:	bd10      	pop	{r4, pc}

0801771c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 801771c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017720:	4604      	mov	r4, r0
 8017722:	4d57      	ldr	r5, [pc, #348]	; (8017880 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8017724:	b08c      	sub	sp, #48	; 0x30
 8017726:	4688      	mov	r8, r1
 8017728:	f7ff fc7c 	bl	8017024 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 801772c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801772e:	882b      	ldrh	r3, [r5, #0]
 8017730:	4293      	cmp	r3, r2
 8017732:	f240 80a1 	bls.w	8017878 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 8017736:	4e53      	ldr	r6, [pc, #332]	; (8017884 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8017738:	6833      	ldr	r3, [r6, #0]
 801773a:	b92b      	cbnz	r3, 8017748 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x2c>
 801773c:	4b52      	ldr	r3, [pc, #328]	; (8017888 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801773e:	4a53      	ldr	r2, [pc, #332]	; (801788c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8017740:	21ae      	movs	r1, #174	; 0xae
 8017742:	4853      	ldr	r0, [pc, #332]	; (8017890 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8017744:	f014 fc56 	bl	802bff4 <__assert_func>
 8017748:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801774c:	4b51      	ldr	r3, [pc, #324]	; (8017894 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x178>)
 801774e:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
 8017752:	681b      	ldr	r3, [r3, #0]
 8017754:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8017758:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801775c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8017760:	2300      	movs	r3, #0
 8017762:	f1be 0f01 	cmp.w	lr, #1
 8017766:	9303      	str	r3, [sp, #12]
 8017768:	b208      	sxth	r0, r1
 801776a:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801776e:	f04f 0c02 	mov.w	ip, #2
 8017772:	d044      	beq.n	80177fe <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xe2>
 8017774:	f1be 0f03 	cmp.w	lr, #3
 8017778:	d041      	beq.n	80177fe <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xe2>
 801777a:	1a52      	subs	r2, r2, r1
 801777c:	f8ad 3010 	strh.w	r3, [sp, #16]
 8017780:	fb92 f2fc 	sdiv	r2, r2, ip
 8017784:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017788:	f8ad 200e 	strh.w	r2, [sp, #14]
 801778c:	f10d 090c 	add.w	r9, sp, #12
 8017790:	e899 0003 	ldmia.w	r9, {r0, r1}
 8017794:	f10d 0a14 	add.w	sl, sp, #20
 8017798:	e88a 0003 	stmia.w	sl, {r0, r1}
 801779c:	4641      	mov	r1, r8
 801779e:	4650      	mov	r0, sl
 80177a0:	f7fa fcb8 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 80177a4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80177a8:	2b00      	cmp	r3, #0
 80177aa:	dd65      	ble.n	8017878 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 80177ac:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80177b0:	2b00      	cmp	r3, #0
 80177b2:	dd61      	ble.n	8017878 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 80177b4:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80177b8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80177bc:	1a9b      	subs	r3, r3, r2
 80177be:	f8ad 3014 	strh.w	r3, [sp, #20]
 80177c2:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80177c6:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80177ca:	1a9b      	subs	r3, r3, r2
 80177cc:	f8ad 3016 	strh.w	r3, [sp, #22]
 80177d0:	6823      	ldr	r3, [r4, #0]
 80177d2:	4649      	mov	r1, r9
 80177d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80177d6:	4620      	mov	r0, r4
 80177d8:	4798      	blx	r3
 80177da:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80177de:	b1c3      	cbz	r3, 8017812 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xf6>
 80177e0:	f104 0240 	add.w	r2, r4, #64	; 0x40
 80177e4:	6833      	ldr	r3, [r6, #0]
 80177e6:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80177ea:	2b00      	cmp	r3, #0
 80177ec:	d0a6      	beq.n	801773c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x20>
 80177ee:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80177f0:	882d      	ldrh	r5, [r5, #0]
 80177f2:	428d      	cmp	r5, r1
 80177f4:	d810      	bhi.n	8017818 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xfc>
 80177f6:	4b28      	ldr	r3, [pc, #160]	; (8017898 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x17c>)
 80177f8:	4a24      	ldr	r2, [pc, #144]	; (801788c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80177fa:	21af      	movs	r1, #175	; 0xaf
 80177fc:	e7a1      	b.n	8017742 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x26>
 80177fe:	1a5b      	subs	r3, r3, r1
 8017800:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017804:	fb93 f3fc 	sdiv	r3, r3, ip
 8017808:	f8ad 2012 	strh.w	r2, [sp, #18]
 801780c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8017810:	e7bc      	b.n	801778c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x70>
 8017812:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8017816:	e7e5      	b.n	80177e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xc8>
 8017818:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 801781c:	6812      	ldr	r2, [r2, #0]
 801781e:	785b      	ldrb	r3, [r3, #1]
 8017820:	9209      	str	r2, [sp, #36]	; 0x24
 8017822:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8017826:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801782a:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 801782e:	2300      	movs	r3, #0
 8017830:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8017834:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8017838:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801783c:	4b17      	ldr	r3, [pc, #92]	; (801789c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x180>)
 801783e:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8017842:	681b      	ldr	r3, [r3, #0]
 8017844:	9707      	str	r7, [sp, #28]
 8017846:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801784a:	f88d 5020 	strb.w	r5, [sp, #32]
 801784e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8017852:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8017856:	b10a      	cbz	r2, 801785c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 8017858:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 801785a:	b904      	cbnz	r4, 801785e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x142>
 801785c:	689c      	ldr	r4, [r3, #8]
 801785e:	4b10      	ldr	r3, [pc, #64]	; (80178a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x184>)
 8017860:	6818      	ldr	r0, [r3, #0]
 8017862:	f7f3 fa45 	bl	800acf0 <_ZNK8touchgfx5Texts7getTextEt>
 8017866:	ab07      	add	r3, sp, #28
 8017868:	9001      	str	r0, [sp, #4]
 801786a:	9300      	str	r3, [sp, #0]
 801786c:	e899 0006 	ldmia.w	r9, {r1, r2}
 8017870:	4653      	mov	r3, sl
 8017872:	4620      	mov	r0, r4
 8017874:	f7f3 f9ee 	bl	800ac54 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8017878:	b00c      	add	sp, #48	; 0x30
 801787a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801787e:	bf00      	nop
 8017880:	2001e234 	.word	0x2001e234
 8017884:	2001e230 	.word	0x2001e230
 8017888:	0802f700 	.word	0x0802f700
 801788c:	08034b0c 	.word	0x08034b0c
 8017890:	0802f78e 	.word	0x0802f78e
 8017894:	2001e238 	.word	0x2001e238
 8017898:	08032d0f 	.word	0x08032d0f
 801789c:	2001e1c0 	.word	0x2001e1c0
 80178a0:	2001e23c 	.word	0x2001e23c

080178a4 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80178a4:	b510      	push	{r4, lr}
 80178a6:	2101      	movs	r1, #1
 80178a8:	4c13      	ldr	r4, [pc, #76]	; (80178f8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80178aa:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80178ae:	2200      	movs	r2, #0
 80178b0:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80178b4:	6004      	str	r4, [r0, #0]
 80178b6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80178ba:	4c10      	ldr	r4, [pc, #64]	; (80178fc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80178bc:	8082      	strh	r2, [r0, #4]
 80178be:	80c2      	strh	r2, [r0, #6]
 80178c0:	8102      	strh	r2, [r0, #8]
 80178c2:	8142      	strh	r2, [r0, #10]
 80178c4:	8182      	strh	r2, [r0, #12]
 80178c6:	81c2      	strh	r2, [r0, #14]
 80178c8:	8202      	strh	r2, [r0, #16]
 80178ca:	8242      	strh	r2, [r0, #18]
 80178cc:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80178d0:	61c2      	str	r2, [r0, #28]
 80178d2:	8402      	strh	r2, [r0, #32]
 80178d4:	8442      	strh	r2, [r0, #34]	; 0x22
 80178d6:	6282      	str	r2, [r0, #40]	; 0x28
 80178d8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80178dc:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80178de:	8601      	strh	r1, [r0, #48]	; 0x30
 80178e0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80178e4:	6344      	str	r4, [r0, #52]	; 0x34
 80178e6:	8701      	strh	r1, [r0, #56]	; 0x38
 80178e8:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80178ec:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80178f0:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 80178f4:	bd10      	pop	{r4, pc}
 80178f6:	bf00      	nop
 80178f8:	08034aa0 	.word	0x08034aa0
 80178fc:	0802f874 	.word	0x0802f874

08017900 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8017900:	4b02      	ldr	r3, [pc, #8]	; (801790c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8017902:	6018      	str	r0, [r3, #0]
 8017904:	4b02      	ldr	r3, [pc, #8]	; (8017910 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8017906:	6019      	str	r1, [r3, #0]
 8017908:	4770      	bx	lr
 801790a:	bf00      	nop
 801790c:	2001e1c8 	.word	0x2001e1c8
 8017910:	2001e1dc 	.word	0x2001e1dc

08017914 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>:
 8017914:	b538      	push	{r3, r4, r5, lr}
 8017916:	4c2b      	ldr	r4, [pc, #172]	; (80179c4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb0>)
 8017918:	4b2b      	ldr	r3, [pc, #172]	; (80179c8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb4>)
 801791a:	6821      	ldr	r1, [r4, #0]
 801791c:	681a      	ldr	r2, [r3, #0]
 801791e:	4d2b      	ldr	r5, [pc, #172]	; (80179cc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb8>)
 8017920:	4281      	cmp	r1, r0
 8017922:	492b      	ldr	r1, [pc, #172]	; (80179d0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xbc>)
 8017924:	d108      	bne.n	8017938 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 8017926:	682b      	ldr	r3, [r5, #0]
 8017928:	4293      	cmp	r3, r2
 801792a:	d105      	bne.n	8017938 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 801792c:	6808      	ldr	r0, [r1, #0]
 801792e:	280f      	cmp	r0, #15
 8017930:	bf94      	ite	ls
 8017932:	2000      	movls	r0, #0
 8017934:	2001      	movhi	r0, #1
 8017936:	bd38      	pop	{r3, r4, r5, pc}
 8017938:	4b26      	ldr	r3, [pc, #152]	; (80179d4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc0>)
 801793a:	6020      	str	r0, [r4, #0]
 801793c:	681b      	ldr	r3, [r3, #0]
 801793e:	602a      	str	r2, [r5, #0]
 8017940:	4298      	cmp	r0, r3
 8017942:	d905      	bls.n	8017950 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x3c>
 8017944:	4b24      	ldr	r3, [pc, #144]	; (80179d8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 8017946:	4a25      	ldr	r2, [pc, #148]	; (80179dc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 8017948:	2135      	movs	r1, #53	; 0x35
 801794a:	4825      	ldr	r0, [pc, #148]	; (80179e0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xcc>)
 801794c:	f014 fb52 	bl	802bff4 <__assert_func>
 8017950:	f010 0403 	ands.w	r4, r0, #3
 8017954:	bf1f      	itttt	ne
 8017956:	f1c4 0504 	rsbne	r5, r4, #4
 801795a:	3b04      	subne	r3, #4
 801795c:	1952      	addne	r2, r2, r5
 801795e:	191b      	addne	r3, r3, r4
 8017960:	4402      	add	r2, r0
 8017962:	1a1b      	subs	r3, r3, r0
 8017964:	3001      	adds	r0, #1
 8017966:	f020 0401 	bic.w	r4, r0, #1
 801796a:	4d1e      	ldr	r5, [pc, #120]	; (80179e4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd0>)
 801796c:	42a3      	cmp	r3, r4
 801796e:	602a      	str	r2, [r5, #0]
 8017970:	d203      	bcs.n	801797a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x66>
 8017972:	4b19      	ldr	r3, [pc, #100]	; (80179d8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 8017974:	4a19      	ldr	r2, [pc, #100]	; (80179dc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 8017976:	2148      	movs	r1, #72	; 0x48
 8017978:	e7e7      	b.n	801794a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 801797a:	f010 0002 	ands.w	r0, r0, #2
 801797e:	bf1f      	itttt	ne
 8017980:	f1c0 0504 	rsbne	r5, r0, #4
 8017984:	1952      	addne	r2, r2, r5
 8017986:	1f05      	subne	r5, r0, #4
 8017988:	195b      	addne	r3, r3, r5
 801798a:	1b1b      	subs	r3, r3, r4
 801798c:	4d16      	ldr	r5, [pc, #88]	; (80179e8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd4>)
 801798e:	4422      	add	r2, r4
 8017990:	429c      	cmp	r4, r3
 8017992:	602a      	str	r2, [r5, #0]
 8017994:	d903      	bls.n	801799e <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x8a>
 8017996:	4b10      	ldr	r3, [pc, #64]	; (80179d8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 8017998:	4a10      	ldr	r2, [pc, #64]	; (80179dc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 801799a:	215b      	movs	r1, #91	; 0x5b
 801799c:	e7d5      	b.n	801794a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 801799e:	b120      	cbz	r0, 80179aa <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x96>
 80179a0:	f1c0 0504 	rsb	r5, r0, #4
 80179a4:	3804      	subs	r0, #4
 80179a6:	442a      	add	r2, r5
 80179a8:	4403      	add	r3, r0
 80179aa:	1b1b      	subs	r3, r3, r4
 80179ac:	480f      	ldr	r0, [pc, #60]	; (80179ec <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd8>)
 80179ae:	600b      	str	r3, [r1, #0]
 80179b0:	4422      	add	r2, r4
 80179b2:	2b0f      	cmp	r3, #15
 80179b4:	6002      	str	r2, [r0, #0]
 80179b6:	d803      	bhi.n	80179c0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xac>
 80179b8:	4b0d      	ldr	r3, [pc, #52]	; (80179f0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xdc>)
 80179ba:	4a08      	ldr	r2, [pc, #32]	; (80179dc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 80179bc:	216e      	movs	r1, #110	; 0x6e
 80179be:	e7c4      	b.n	801794a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 80179c0:	2001      	movs	r0, #1
 80179c2:	e7b8      	b.n	8017936 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x22>
 80179c4:	2001e1d0 	.word	0x2001e1d0
 80179c8:	2001e1c8 	.word	0x2001e1c8
 80179cc:	2001e1d8 	.word	0x2001e1d8
 80179d0:	2001e1e0 	.word	0x2001e1e0
 80179d4:	2001e1dc 	.word	0x2001e1dc
 80179d8:	08034b3a 	.word	0x08034b3a
 80179dc:	08034c02 	.word	0x08034c02
 80179e0:	08034b73 	.word	0x08034b73
 80179e4:	2001e1e4 	.word	0x2001e1e4
 80179e8:	2001e1d4 	.word	0x2001e1d4
 80179ec:	2001e1cc 	.word	0x2001e1cc
 80179f0:	08034bbd 	.word	0x08034bbd

080179f4 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>:
 80179f4:	4b04      	ldr	r3, [pc, #16]	; (8017a08 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x14>)
 80179f6:	6818      	ldr	r0, [r3, #0]
 80179f8:	b120      	cbz	r0, 8017a04 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x10>
 80179fa:	4b04      	ldr	r3, [pc, #16]	; (8017a0c <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x18>)
 80179fc:	6818      	ldr	r0, [r3, #0]
 80179fe:	3000      	adds	r0, #0
 8017a00:	bf18      	it	ne
 8017a02:	2001      	movne	r0, #1
 8017a04:	4770      	bx	lr
 8017a06:	bf00      	nop
 8017a08:	2001e1c8 	.word	0x2001e1c8
 8017a0c:	2001e1dc 	.word	0x2001e1dc

08017a10 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>:
 8017a10:	4b01      	ldr	r3, [pc, #4]	; (8017a18 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv+0x8>)
 8017a12:	6818      	ldr	r0, [r3, #0]
 8017a14:	4770      	bx	lr
 8017a16:	bf00      	nop
 8017a18:	2001e1d0 	.word	0x2001e1d0

08017a1c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>:
 8017a1c:	4b01      	ldr	r3, [pc, #4]	; (8017a24 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv+0x8>)
 8017a1e:	6818      	ldr	r0, [r3, #0]
 8017a20:	4770      	bx	lr
 8017a22:	bf00      	nop
 8017a24:	2001e1d8 	.word	0x2001e1d8

08017a28 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>:
 8017a28:	4b01      	ldr	r3, [pc, #4]	; (8017a30 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv+0x8>)
 8017a2a:	6818      	ldr	r0, [r3, #0]
 8017a2c:	4770      	bx	lr
 8017a2e:	bf00      	nop
 8017a30:	2001e1e4 	.word	0x2001e1e4

08017a34 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>:
 8017a34:	4b01      	ldr	r3, [pc, #4]	; (8017a3c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv+0x8>)
 8017a36:	6818      	ldr	r0, [r3, #0]
 8017a38:	4770      	bx	lr
 8017a3a:	bf00      	nop
 8017a3c:	2001e1d4 	.word	0x2001e1d4

08017a40 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8017a40:	4b01      	ldr	r3, [pc, #4]	; (8017a48 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8017a42:	6818      	ldr	r0, [r3, #0]
 8017a44:	4770      	bx	lr
 8017a46:	bf00      	nop
 8017a48:	2001e1cc 	.word	0x2001e1cc

08017a4c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8017a4c:	4b01      	ldr	r3, [pc, #4]	; (8017a54 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8017a4e:	6818      	ldr	r0, [r3, #0]
 8017a50:	4770      	bx	lr
 8017a52:	bf00      	nop
 8017a54:	2001e1e0 	.word	0x2001e1e0

08017a58 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8017a58:	b510      	push	{r4, lr}
 8017a5a:	6803      	ldr	r3, [r0, #0]
 8017a5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017a5e:	460c      	mov	r4, r1
 8017a60:	4798      	blx	r3
 8017a62:	1b03      	subs	r3, r0, r4
 8017a64:	4258      	negs	r0, r3
 8017a66:	4158      	adcs	r0, r3
 8017a68:	bd10      	pop	{r4, pc}
	...

08017a6c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8017a6c:	4b01      	ldr	r3, [pc, #4]	; (8017a74 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8017a6e:	6019      	str	r1, [r3, #0]
 8017a70:	4770      	bx	lr
 8017a72:	bf00      	nop
 8017a74:	2001e1e8 	.word	0x2001e1e8

08017a78 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8017a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a7c:	4696      	mov	lr, r2
 8017a7e:	4605      	mov	r5, r0
 8017a80:	4614      	mov	r4, r2
 8017a82:	460e      	mov	r6, r1
 8017a84:	461f      	mov	r7, r3
 8017a86:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017a8a:	b097      	sub	sp, #92	; 0x5c
 8017a8c:	f10d 0c1c 	add.w	ip, sp, #28
 8017a90:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017a94:	f8de 3000 	ldr.w	r3, [lr]
 8017a98:	f8cc 3000 	str.w	r3, [ip]
 8017a9c:	f104 0e14 	add.w	lr, r4, #20
 8017aa0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017aa4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017aa8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017aac:	f8de 3000 	ldr.w	r3, [lr]
 8017ab0:	f8cc 3000 	str.w	r3, [ip]
 8017ab4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017ab8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017abc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017ac0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017ac4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8017ac8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8017acc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8017ad0:	f8de 3000 	ldr.w	r3, [lr]
 8017ad4:	f8cc 3000 	str.w	r3, [ip]
 8017ad8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8017ada:	682b      	ldr	r3, [r5, #0]
 8017adc:	9201      	str	r2, [sp, #4]
 8017ade:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8017ae2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017ae4:	9200      	str	r2, [sp, #0]
 8017ae6:	f8cd 8008 	str.w	r8, [sp, #8]
 8017aea:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8017aee:	aa07      	add	r2, sp, #28
 8017af0:	463b      	mov	r3, r7
 8017af2:	4631      	mov	r1, r6
 8017af4:	4628      	mov	r0, r5
 8017af6:	47d8      	blx	fp
 8017af8:	46a6      	mov	lr, r4
 8017afa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017afe:	f10d 0c1c 	add.w	ip, sp, #28
 8017b02:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017b06:	f8de 3000 	ldr.w	r3, [lr]
 8017b0a:	f8cc 3000 	str.w	r3, [ip]
 8017b0e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017b12:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017b16:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017b1a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017b1e:	343c      	adds	r4, #60	; 0x3c
 8017b20:	f8de 3000 	ldr.w	r3, [lr]
 8017b24:	f8cc 3000 	str.w	r3, [ip]
 8017b28:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017b2a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017b2e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017b32:	6823      	ldr	r3, [r4, #0]
 8017b34:	f8cc 3000 	str.w	r3, [ip]
 8017b38:	682b      	ldr	r3, [r5, #0]
 8017b3a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8017b3e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8017b40:	9201      	str	r2, [sp, #4]
 8017b42:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017b44:	9200      	str	r2, [sp, #0]
 8017b46:	f8cd 8008 	str.w	r8, [sp, #8]
 8017b4a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8017b4c:	aa07      	add	r2, sp, #28
 8017b4e:	463b      	mov	r3, r7
 8017b50:	4631      	mov	r1, r6
 8017b52:	4628      	mov	r0, r5
 8017b54:	47a0      	blx	r4
 8017b56:	b017      	add	sp, #92	; 0x5c
 8017b58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017b5c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8017b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b60:	b08d      	sub	sp, #52	; 0x34
 8017b62:	4688      	mov	r8, r1
 8017b64:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017b66:	f8d3 c000 	ldr.w	ip, [r3]
 8017b6a:	680f      	ldr	r7, [r1, #0]
 8017b6c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8017b70:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8017b74:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8017b78:	edd3 6a07 	vldr	s13, [r3, #28]
 8017b7c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8017b7e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8017b82:	f9b1 9000 	ldrsh.w	r9, [r1]
 8017b86:	f9ba 1000 	ldrsh.w	r1, [sl]
 8017b8a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8017b8e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8017b92:	eba7 070c 	sub.w	r7, r7, ip
 8017b96:	42bc      	cmp	r4, r7
 8017b98:	bfa8      	it	ge
 8017b9a:	463c      	movge	r4, r7
 8017b9c:	ee07 4a90 	vmov	s15, r4
 8017ba0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8017ba4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8017ba8:	ee25 4a04 	vmul.f32	s8, s10, s8
 8017bac:	ee65 4a24 	vmul.f32	s9, s10, s9
 8017bb0:	ee25 5a27 	vmul.f32	s10, s10, s15
 8017bb4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8017bb8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017bbc:	eb09 0e0c 	add.w	lr, r9, ip
 8017bc0:	4571      	cmp	r1, lr
 8017bc2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8017bc6:	ee32 1a05 	vadd.f32	s2, s4, s10
 8017bca:	ee36 0a84 	vadd.f32	s0, s13, s8
 8017bce:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017bd2:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017bd6:	f340 808d 	ble.w	8017cf4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8017bda:	eba1 060e 	sub.w	r6, r1, lr
 8017bde:	fb96 f5f4 	sdiv	r5, r6, r4
 8017be2:	ee07 5a10 	vmov	s14, r5
 8017be6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017bea:	2d00      	cmp	r5, #0
 8017bec:	fb04 6615 	mls	r6, r4, r5, r6
 8017bf0:	eea7 0a04 	vfma.f32	s0, s14, s8
 8017bf4:	eee7 0a24 	vfma.f32	s1, s14, s9
 8017bf8:	eea7 1a05 	vfma.f32	s2, s14, s10
 8017bfc:	dd13      	ble.n	8017c26 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8017bfe:	ee70 6a44 	vsub.f32	s13, s0, s8
 8017c02:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8017c06:	eef5 6a40 	vcmp.f32	s13, #0.0
 8017c0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c0e:	bf18      	it	ne
 8017c10:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8017c14:	ee31 2a45 	vsub.f32	s4, s2, s10
 8017c18:	bf08      	it	eq
 8017c1a:	eeb0 7a67 	vmoveq.f32	s14, s15
 8017c1e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017c22:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017c26:	fb05 f204 	mul.w	r2, r5, r4
 8017c2a:	1abf      	subs	r7, r7, r2
 8017c2c:	4494      	add	ip, r2
 8017c2e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8017c32:	4411      	add	r1, r2
 8017c34:	eb09 020c 	add.w	r2, r9, ip
 8017c38:	443a      	add	r2, r7
 8017c3a:	b209      	sxth	r1, r1
 8017c3c:	428a      	cmp	r2, r1
 8017c3e:	bfc4      	itt	gt
 8017c40:	eba1 0209 	subgt.w	r2, r1, r9
 8017c44:	eba2 070c 	subgt.w	r7, r2, ip
 8017c48:	2f00      	cmp	r7, #0
 8017c4a:	dd50      	ble.n	8017cee <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8017c4c:	fb97 f1f4 	sdiv	r1, r7, r4
 8017c50:	fb04 7211 	mls	r2, r4, r1, r7
 8017c54:	b90a      	cbnz	r2, 8017c5a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8017c56:	3901      	subs	r1, #1
 8017c58:	4622      	mov	r2, r4
 8017c5a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8017c5e:	6840      	ldr	r0, [r0, #4]
 8017c60:	900b      	str	r0, [sp, #44]	; 0x2c
 8017c62:	f8d0 a000 	ldr.w	sl, [r0]
 8017c66:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8017c68:	9008      	str	r0, [sp, #32]
 8017c6a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8017c6e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8017c70:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8017c74:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8017c78:	695b      	ldr	r3, [r3, #20]
 8017c7a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017c7c:	445b      	add	r3, fp
 8017c7e:	eef0 6a42 	vmov.f32	s13, s4
 8017c82:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8017c86:	ee21 3a23 	vmul.f32	s6, s2, s7
 8017c8a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8017c8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017c92:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017c96:	9307      	str	r3, [sp, #28]
 8017c98:	ee17 7a90 	vmov	r7, s15
 8017c9c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8017ca0:	eeb0 7a61 	vmov.f32	s14, s3
 8017ca4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017ca8:	ee16 3a90 	vmov	r3, s13
 8017cac:	fb97 f7f4 	sdiv	r7, r7, r4
 8017cb0:	ee17 ca90 	vmov	ip, s15
 8017cb4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8017cb8:	fb9c fcf4 	sdiv	ip, ip, r4
 8017cbc:	fb0c 3306 	mla	r3, ip, r6, r3
 8017cc0:	9302      	str	r3, [sp, #8]
 8017cc2:	ee17 3a10 	vmov	r3, s14
 8017cc6:	44b6      	add	lr, r6
 8017cc8:	fb04 e505 	mla	r5, r4, r5, lr
 8017ccc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8017cd0:	fb07 3706 	mla	r7, r7, r6, r3
 8017cd4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8017cd8:	e9cd 4700 	strd	r4, r7, [sp]
 8017cdc:	2900      	cmp	r1, #0
 8017cde:	bfcc      	ite	gt
 8017ce0:	46a1      	movgt	r9, r4
 8017ce2:	4691      	movle	r9, r2
 8017ce4:	eba9 0306 	sub.w	r3, r9, r6
 8017ce8:	f8da 4008 	ldr.w	r4, [sl, #8]
 8017cec:	47a0      	blx	r4
 8017cee:	b00d      	add	sp, #52	; 0x34
 8017cf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cf4:	2500      	movs	r5, #0
 8017cf6:	462e      	mov	r6, r5
 8017cf8:	e799      	b.n	8017c2e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08017cfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8017cfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d00:	b0db      	sub	sp, #364	; 0x16c
 8017d02:	461d      	mov	r5, r3
 8017d04:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8017d08:	930a      	str	r3, [sp, #40]	; 0x28
 8017d0a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8017d0e:	930b      	str	r3, [sp, #44]	; 0x2c
 8017d10:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8017d14:	9310      	str	r3, [sp, #64]	; 0x40
 8017d16:	6803      	ldr	r3, [r0, #0]
 8017d18:	910f      	str	r1, [sp, #60]	; 0x3c
 8017d1a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8017d1c:	9009      	str	r0, [sp, #36]	; 0x24
 8017d1e:	4614      	mov	r4, r2
 8017d20:	4629      	mov	r1, r5
 8017d22:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8017d26:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8017d2a:	47b8      	blx	r7
 8017d2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d2e:	6058      	str	r0, [r3, #4]
 8017d30:	2800      	cmp	r0, #0
 8017d32:	f000 83a1 	beq.w	8018478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d36:	682b      	ldr	r3, [r5, #0]
 8017d38:	9314      	str	r3, [sp, #80]	; 0x50
 8017d3a:	686b      	ldr	r3, [r5, #4]
 8017d3c:	9315      	str	r3, [sp, #84]	; 0x54
 8017d3e:	4bc4      	ldr	r3, [pc, #784]	; (8018050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8017d40:	ed94 7a02 	vldr	s14, [r4, #8]
 8017d44:	7819      	ldrb	r1, [r3, #0]
 8017d46:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8017d4a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8017d4e:	2900      	cmp	r1, #0
 8017d50:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017d54:	bf16      	itet	ne
 8017d56:	4619      	movne	r1, r3
 8017d58:	4611      	moveq	r1, r2
 8017d5a:	4613      	movne	r3, r2
 8017d5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d60:	9116      	str	r1, [sp, #88]	; 0x58
 8017d62:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8017d66:	f240 8387 	bls.w	8018478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d6a:	ed94 7a07 	vldr	s14, [r4, #28]
 8017d6e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017d72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d76:	f240 837f 	bls.w	8018478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d7a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8017d7e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017d82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017d86:	f240 8377 	bls.w	8018478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d8a:	6822      	ldr	r2, [r4, #0]
 8017d8c:	4bb1      	ldr	r3, [pc, #708]	; (8018054 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8017d8e:	429a      	cmp	r2, r3
 8017d90:	f2c0 8372 	blt.w	8018478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d94:	49b0      	ldr	r1, [pc, #704]	; (8018058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8017d96:	6963      	ldr	r3, [r4, #20]
 8017d98:	428a      	cmp	r2, r1
 8017d9a:	f300 836d 	bgt.w	8018478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017d9e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017da2:	48ae      	ldr	r0, [pc, #696]	; (801805c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8017da4:	33ff      	adds	r3, #255	; 0xff
 8017da6:	4283      	cmp	r3, r0
 8017da8:	f200 8366 	bhi.w	8018478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017dac:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8017dae:	4dac      	ldr	r5, [pc, #688]	; (8018060 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8017db0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017db4:	33ff      	adds	r3, #255	; 0xff
 8017db6:	42ab      	cmp	r3, r5
 8017db8:	f200 835e 	bhi.w	8018478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017dbc:	6862      	ldr	r2, [r4, #4]
 8017dbe:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8017dc2:	33ff      	adds	r3, #255	; 0xff
 8017dc4:	4283      	cmp	r3, r0
 8017dc6:	f200 8357 	bhi.w	8018478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017dca:	69a1      	ldr	r1, [r4, #24]
 8017dcc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8017dd0:	33ff      	adds	r3, #255	; 0xff
 8017dd2:	4283      	cmp	r3, r0
 8017dd4:	f200 8350 	bhi.w	8018478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017dd8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8017dda:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8017dde:	30ff      	adds	r0, #255	; 0xff
 8017de0:	42a8      	cmp	r0, r5
 8017de2:	f200 8349 	bhi.w	8018478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017de6:	428a      	cmp	r2, r1
 8017de8:	f280 8110 	bge.w	801800c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8017dec:	429a      	cmp	r2, r3
 8017dee:	f300 8119 	bgt.w	8018024 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8017df2:	4299      	cmp	r1, r3
 8017df4:	f280 811d 	bge.w	8018032 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8017df8:	2502      	movs	r5, #2
 8017dfa:	2701      	movs	r7, #1
 8017dfc:	46a9      	mov	r9, r5
 8017dfe:	46b8      	mov	r8, r7
 8017e00:	f04f 0a00 	mov.w	sl, #0
 8017e04:	4621      	mov	r1, r4
 8017e06:	a849      	add	r0, sp, #292	; 0x124
 8017e08:	f003 fe00 	bl	801ba0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8017e0c:	4622      	mov	r2, r4
 8017e0e:	4653      	mov	r3, sl
 8017e10:	a949      	add	r1, sp, #292	; 0x124
 8017e12:	f8cd 9000 	str.w	r9, [sp]
 8017e16:	a819      	add	r0, sp, #100	; 0x64
 8017e18:	f003 ff28 	bl	801bc6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017e1c:	4622      	mov	r2, r4
 8017e1e:	4653      	mov	r3, sl
 8017e20:	a949      	add	r1, sp, #292	; 0x124
 8017e22:	f8cd 8000 	str.w	r8, [sp]
 8017e26:	a829      	add	r0, sp, #164	; 0xa4
 8017e28:	f003 ff20 	bl	801bc6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017e2c:	4643      	mov	r3, r8
 8017e2e:	4622      	mov	r2, r4
 8017e30:	a949      	add	r1, sp, #292	; 0x124
 8017e32:	f8cd 9000 	str.w	r9, [sp]
 8017e36:	a839      	add	r0, sp, #228	; 0xe4
 8017e38:	f003 ff18 	bl	801bc6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8017e3c:	42af      	cmp	r7, r5
 8017e3e:	bfb5      	itete	lt
 8017e40:	2300      	movlt	r3, #0
 8017e42:	2301      	movge	r3, #1
 8017e44:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017e46:	930e      	strge	r3, [sp, #56]	; 0x38
 8017e48:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017e4a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8017e4e:	af12      	add	r7, sp, #72	; 0x48
 8017e50:	bfb9      	ittee	lt
 8017e52:	ad29      	addlt	r5, sp, #164	; 0xa4
 8017e54:	ac19      	addlt	r4, sp, #100	; 0x64
 8017e56:	ad19      	addge	r5, sp, #100	; 0x64
 8017e58:	ac29      	addge	r4, sp, #164	; 0xa4
 8017e5a:	e887 0003 	stmia.w	r7, {r0, r1}
 8017e5e:	b928      	cbnz	r0, 8017e6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8017e60:	4b80      	ldr	r3, [pc, #512]	; (8018064 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8017e62:	6818      	ldr	r0, [r3, #0]
 8017e64:	6803      	ldr	r3, [r0, #0]
 8017e66:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017e68:	4798      	blx	r3
 8017e6a:	6038      	str	r0, [r7, #0]
 8017e6c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017e6e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017e72:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017e76:	930c      	str	r3, [sp, #48]	; 0x30
 8017e78:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017e7a:	6963      	ldr	r3, [r4, #20]
 8017e7c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8017e7e:	440b      	add	r3, r1
 8017e80:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017e84:	4408      	add	r0, r1
 8017e86:	b200      	sxth	r0, r0
 8017e88:	4283      	cmp	r3, r0
 8017e8a:	900d      	str	r0, [sp, #52]	; 0x34
 8017e8c:	f280 80dd 	bge.w	801804a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8017e90:	428b      	cmp	r3, r1
 8017e92:	da08      	bge.n	8017ea6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017e94:	2a00      	cmp	r2, #0
 8017e96:	dd06      	ble.n	8017ea6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017e98:	1acb      	subs	r3, r1, r3
 8017e9a:	429a      	cmp	r2, r3
 8017e9c:	f2c0 80e4 	blt.w	8018068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8017ea0:	2b00      	cmp	r3, #0
 8017ea2:	f300 80e2 	bgt.w	801806a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8017ea6:	6967      	ldr	r7, [r4, #20]
 8017ea8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017eaa:	443b      	add	r3, r7
 8017eac:	461f      	mov	r7, r3
 8017eae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017eb0:	1bdf      	subs	r7, r3, r7
 8017eb2:	4297      	cmp	r7, r2
 8017eb4:	bfa8      	it	ge
 8017eb6:	4617      	movge	r7, r2
 8017eb8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8017ebc:	2f00      	cmp	r7, #0
 8017ebe:	f340 8166 	ble.w	801818e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8017ec2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017ec4:	6829      	ldr	r1, [r5, #0]
 8017ec6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017eca:	f9bb 3000 	ldrsh.w	r3, [fp]
 8017ece:	6820      	ldr	r0, [r4, #0]
 8017ed0:	4411      	add	r1, r2
 8017ed2:	4299      	cmp	r1, r3
 8017ed4:	dd1a      	ble.n	8017f0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017ed6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8017eda:	440b      	add	r3, r1
 8017edc:	4402      	add	r2, r0
 8017ede:	b21b      	sxth	r3, r3
 8017ee0:	429a      	cmp	r2, r3
 8017ee2:	dc13      	bgt.n	8017f0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017ee4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017ee6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017ee8:	681b      	ldr	r3, [r3, #0]
 8017eea:	9206      	str	r2, [sp, #24]
 8017eec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017eee:	9205      	str	r2, [sp, #20]
 8017ef0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017ef2:	9500      	str	r5, [sp, #0]
 8017ef4:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017ef8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8017efa:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017efc:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8017f00:	a912      	add	r1, sp, #72	; 0x48
 8017f02:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017f06:	aa49      	add	r2, sp, #292	; 0x124
 8017f08:	4623      	mov	r3, r4
 8017f0a:	47c8      	blx	r9
 8017f0c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8017f10:	441a      	add	r2, r3
 8017f12:	6963      	ldr	r3, [r4, #20]
 8017f14:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017f18:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8017f1c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8017f20:	68a1      	ldr	r1, [r4, #8]
 8017f22:	ed94 6a08 	vldr	s12, [r4, #32]
 8017f26:	6022      	str	r2, [r4, #0]
 8017f28:	3301      	adds	r3, #1
 8017f2a:	6163      	str	r3, [r4, #20]
 8017f2c:	69a3      	ldr	r3, [r4, #24]
 8017f2e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017f32:	3b01      	subs	r3, #1
 8017f34:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8017f38:	61a3      	str	r3, [r4, #24]
 8017f3a:	6923      	ldr	r3, [r4, #16]
 8017f3c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017f40:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017f44:	edd4 6a07 	vldr	s13, [r4, #28]
 8017f48:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017f4c:	440b      	add	r3, r1
 8017f4e:	68e1      	ldr	r1, [r4, #12]
 8017f50:	6123      	str	r3, [r4, #16]
 8017f52:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017f56:	428b      	cmp	r3, r1
 8017f58:	edc4 6a07 	vstr	s13, [r4, #28]
 8017f5c:	db15      	blt.n	8017f8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8017f5e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8017f62:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017f66:	3201      	adds	r2, #1
 8017f68:	edc4 6a07 	vstr	s13, [r4, #28]
 8017f6c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8017f70:	6022      	str	r2, [r4, #0]
 8017f72:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017f76:	1a5b      	subs	r3, r3, r1
 8017f78:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017f7c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8017f80:	6123      	str	r3, [r4, #16]
 8017f82:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017f86:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017f8a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8017f8e:	441a      	add	r2, r3
 8017f90:	696b      	ldr	r3, [r5, #20]
 8017f92:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017f96:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8017f9a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8017f9e:	68a9      	ldr	r1, [r5, #8]
 8017fa0:	ed95 6a08 	vldr	s12, [r5, #32]
 8017fa4:	602a      	str	r2, [r5, #0]
 8017fa6:	3301      	adds	r3, #1
 8017fa8:	616b      	str	r3, [r5, #20]
 8017faa:	69ab      	ldr	r3, [r5, #24]
 8017fac:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017fb0:	3b01      	subs	r3, #1
 8017fb2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017fb6:	61ab      	str	r3, [r5, #24]
 8017fb8:	692b      	ldr	r3, [r5, #16]
 8017fba:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017fbe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017fc2:	edd5 6a07 	vldr	s13, [r5, #28]
 8017fc6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017fca:	440b      	add	r3, r1
 8017fcc:	68e9      	ldr	r1, [r5, #12]
 8017fce:	612b      	str	r3, [r5, #16]
 8017fd0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017fd4:	428b      	cmp	r3, r1
 8017fd6:	edc5 6a07 	vstr	s13, [r5, #28]
 8017fda:	db15      	blt.n	8018008 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8017fdc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8017fe0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017fe4:	3201      	adds	r2, #1
 8017fe6:	edc5 6a07 	vstr	s13, [r5, #28]
 8017fea:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8017fee:	602a      	str	r2, [r5, #0]
 8017ff0:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017ff4:	1a5b      	subs	r3, r3, r1
 8017ff6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017ffa:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8017ffe:	612b      	str	r3, [r5, #16]
 8018000:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018004:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8018008:	3f01      	subs	r7, #1
 801800a:	e757      	b.n	8017ebc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801800c:	4299      	cmp	r1, r3
 801800e:	dc13      	bgt.n	8018038 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8018010:	429a      	cmp	r2, r3
 8018012:	da14      	bge.n	801803e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8018014:	2502      	movs	r5, #2
 8018016:	2703      	movs	r7, #3
 8018018:	46a9      	mov	r9, r5
 801801a:	f04f 0800 	mov.w	r8, #0
 801801e:	f04f 0a01 	mov.w	sl, #1
 8018022:	e6ef      	b.n	8017e04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8018024:	2501      	movs	r5, #1
 8018026:	2700      	movs	r7, #0
 8018028:	46a9      	mov	r9, r5
 801802a:	46b8      	mov	r8, r7
 801802c:	f04f 0a02 	mov.w	sl, #2
 8018030:	e6e8      	b.n	8017e04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8018032:	2501      	movs	r5, #1
 8018034:	2702      	movs	r7, #2
 8018036:	e6e1      	b.n	8017dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8018038:	2500      	movs	r5, #0
 801803a:	2701      	movs	r7, #1
 801803c:	e7f4      	b.n	8018028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801803e:	2702      	movs	r7, #2
 8018040:	2503      	movs	r5, #3
 8018042:	f04f 0900 	mov.w	r9, #0
 8018046:	46b8      	mov	r8, r7
 8018048:	e7e9      	b.n	801801e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801804a:	4613      	mov	r3, r2
 801804c:	e728      	b.n	8017ea0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801804e:	bf00      	nop
 8018050:	2001e1b8 	.word	0x2001e1b8
 8018054:	fffd8f01 	.word	0xfffd8f01
 8018058:	00027100 	.word	0x00027100
 801805c:	0004e1ff 	.word	0x0004e1ff
 8018060:	0004e1fe 	.word	0x0004e1fe
 8018064:	2001e1c0 	.word	0x2001e1c0
 8018068:	4613      	mov	r3, r2
 801806a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801806c:	9111      	str	r1, [sp, #68]	; 0x44
 801806e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8018072:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8018076:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8018078:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801807c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8018080:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8018084:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8018088:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801808c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8018090:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8018094:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8018098:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801809c:	469e      	mov	lr, r3
 801809e:	469c      	mov	ip, r3
 80180a0:	f04f 0900 	mov.w	r9, #0
 80180a4:	f1bc 0f00 	cmp.w	ip, #0
 80180a8:	d147      	bne.n	801813a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80180aa:	eb03 0c07 	add.w	ip, r3, r7
 80180ae:	1ad7      	subs	r7, r2, r3
 80180b0:	f1b9 0f00 	cmp.w	r9, #0
 80180b4:	d009      	beq.n	80180ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80180b6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80180ba:	9029      	str	r0, [sp, #164]	; 0xa4
 80180bc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80180c0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80180c4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80180c8:	912d      	str	r1, [sp, #180]	; 0xb4
 80180ca:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80180cc:	9111      	str	r1, [sp, #68]	; 0x44
 80180ce:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80180d2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80180d6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80180da:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80180de:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80180e2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80180e6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80180ea:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80180ee:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80180f2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80180f6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80180fa:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80180fe:	f04f 0800 	mov.w	r8, #0
 8018102:	f1be 0f00 	cmp.w	lr, #0
 8018106:	d031      	beq.n	801816c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8018108:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801810a:	4431      	add	r1, r6
 801810c:	4549      	cmp	r1, r9
 801810e:	4450      	add	r0, sl
 8018110:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8018114:	ee37 7a04 	vadd.f32	s14, s14, s8
 8018118:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801811c:	db08      	blt.n	8018130 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801811e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8018122:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8018126:	ee37 7a06 	vadd.f32	s14, s14, s12
 801812a:	3001      	adds	r0, #1
 801812c:	eba1 0109 	sub.w	r1, r1, r9
 8018130:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018134:	f04f 0801 	mov.w	r8, #1
 8018138:	e7e3      	b.n	8018102 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801813a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801813c:	4431      	add	r1, r6
 801813e:	4541      	cmp	r1, r8
 8018140:	4450      	add	r0, sl
 8018142:	ee37 7a24 	vadd.f32	s14, s14, s9
 8018146:	ee77 7a84 	vadd.f32	s15, s15, s8
 801814a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801814e:	db08      	blt.n	8018162 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8018150:	ee76 6a85 	vadd.f32	s13, s13, s10
 8018154:	ee37 7a25 	vadd.f32	s14, s14, s11
 8018158:	ee77 7a86 	vadd.f32	s15, s15, s12
 801815c:	3001      	adds	r0, #1
 801815e:	eba1 0108 	sub.w	r1, r1, r8
 8018162:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018166:	f04f 0901 	mov.w	r9, #1
 801816a:	e79b      	b.n	80180a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801816c:	449c      	add	ip, r3
 801816e:	1aff      	subs	r7, r7, r3
 8018170:	f1b8 0f00 	cmp.w	r8, #0
 8018174:	d009      	beq.n	801818a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8018176:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801817a:	9019      	str	r0, [sp, #100]	; 0x64
 801817c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8018180:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8018184:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8018188:	911d      	str	r1, [sp, #116]	; 0x74
 801818a:	1ad2      	subs	r2, r2, r3
 801818c:	e68b      	b.n	8017ea6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801818e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018190:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8018192:	2b00      	cmp	r3, #0
 8018194:	f000 80d1 	beq.w	801833a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8018198:	ad19      	add	r5, sp, #100	; 0x64
 801819a:	ac39      	add	r4, sp, #228	; 0xe4
 801819c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801819e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80181a2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80181a6:	930c      	str	r3, [sp, #48]	; 0x30
 80181a8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80181aa:	6963      	ldr	r3, [r4, #20]
 80181ac:	440b      	add	r3, r1
 80181ae:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80181b2:	4408      	add	r0, r1
 80181b4:	b200      	sxth	r0, r0
 80181b6:	4283      	cmp	r3, r0
 80181b8:	900d      	str	r0, [sp, #52]	; 0x34
 80181ba:	f280 80c1 	bge.w	8018340 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80181be:	428b      	cmp	r3, r1
 80181c0:	da08      	bge.n	80181d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80181c2:	2a00      	cmp	r2, #0
 80181c4:	dd06      	ble.n	80181d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80181c6:	1acb      	subs	r3, r1, r3
 80181c8:	429a      	cmp	r2, r3
 80181ca:	f2c0 80bb 	blt.w	8018344 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80181ce:	2b00      	cmp	r3, #0
 80181d0:	f300 80b9 	bgt.w	8018346 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80181d4:	6967      	ldr	r7, [r4, #20]
 80181d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80181d8:	443b      	add	r3, r7
 80181da:	461f      	mov	r7, r3
 80181dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80181de:	1bdf      	subs	r7, r3, r7
 80181e0:	4297      	cmp	r7, r2
 80181e2:	bfa8      	it	ge
 80181e4:	4617      	movge	r7, r2
 80181e6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80181ea:	2f00      	cmp	r7, #0
 80181ec:	f340 813c 	ble.w	8018468 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80181f0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80181f2:	6829      	ldr	r1, [r5, #0]
 80181f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80181f8:	f9bb 3000 	ldrsh.w	r3, [fp]
 80181fc:	6820      	ldr	r0, [r4, #0]
 80181fe:	4411      	add	r1, r2
 8018200:	4299      	cmp	r1, r3
 8018202:	dd1a      	ble.n	801823a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8018204:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8018208:	440b      	add	r3, r1
 801820a:	4402      	add	r2, r0
 801820c:	b21b      	sxth	r3, r3
 801820e:	429a      	cmp	r2, r3
 8018210:	dc13      	bgt.n	801823a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8018212:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018214:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018216:	681b      	ldr	r3, [r3, #0]
 8018218:	9206      	str	r2, [sp, #24]
 801821a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801821c:	9205      	str	r2, [sp, #20]
 801821e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018220:	9500      	str	r5, [sp, #0]
 8018222:	e9cd b203 	strd	fp, r2, [sp, #12]
 8018226:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8018228:	9809      	ldr	r0, [sp, #36]	; 0x24
 801822a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801822e:	a912      	add	r1, sp, #72	; 0x48
 8018230:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8018234:	aa49      	add	r2, sp, #292	; 0x124
 8018236:	4623      	mov	r3, r4
 8018238:	47c8      	blx	r9
 801823a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801823e:	441a      	add	r2, r3
 8018240:	6963      	ldr	r3, [r4, #20]
 8018242:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8018246:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801824a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801824e:	68a1      	ldr	r1, [r4, #8]
 8018250:	ed94 6a08 	vldr	s12, [r4, #32]
 8018254:	6022      	str	r2, [r4, #0]
 8018256:	3301      	adds	r3, #1
 8018258:	6163      	str	r3, [r4, #20]
 801825a:	69a3      	ldr	r3, [r4, #24]
 801825c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8018260:	3b01      	subs	r3, #1
 8018262:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8018266:	61a3      	str	r3, [r4, #24]
 8018268:	6923      	ldr	r3, [r4, #16]
 801826a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801826e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8018272:	edd4 6a07 	vldr	s13, [r4, #28]
 8018276:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801827a:	440b      	add	r3, r1
 801827c:	68e1      	ldr	r1, [r4, #12]
 801827e:	6123      	str	r3, [r4, #16]
 8018280:	ee76 6a86 	vadd.f32	s13, s13, s12
 8018284:	428b      	cmp	r3, r1
 8018286:	edc4 6a07 	vstr	s13, [r4, #28]
 801828a:	db15      	blt.n	80182b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801828c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8018290:	ee76 6a26 	vadd.f32	s13, s12, s13
 8018294:	3201      	adds	r2, #1
 8018296:	edc4 6a07 	vstr	s13, [r4, #28]
 801829a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801829e:	6022      	str	r2, [r4, #0]
 80182a0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80182a4:	1a5b      	subs	r3, r3, r1
 80182a6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80182aa:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80182ae:	6123      	str	r3, [r4, #16]
 80182b0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80182b4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80182b8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80182bc:	441a      	add	r2, r3
 80182be:	696b      	ldr	r3, [r5, #20]
 80182c0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80182c4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80182c8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80182cc:	68a9      	ldr	r1, [r5, #8]
 80182ce:	ed95 6a08 	vldr	s12, [r5, #32]
 80182d2:	602a      	str	r2, [r5, #0]
 80182d4:	3301      	adds	r3, #1
 80182d6:	616b      	str	r3, [r5, #20]
 80182d8:	69ab      	ldr	r3, [r5, #24]
 80182da:	ee37 7a27 	vadd.f32	s14, s14, s15
 80182de:	3b01      	subs	r3, #1
 80182e0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80182e4:	61ab      	str	r3, [r5, #24]
 80182e6:	692b      	ldr	r3, [r5, #16]
 80182e8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80182ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80182f0:	edd5 6a07 	vldr	s13, [r5, #28]
 80182f4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80182f8:	440b      	add	r3, r1
 80182fa:	68e9      	ldr	r1, [r5, #12]
 80182fc:	612b      	str	r3, [r5, #16]
 80182fe:	ee76 6a86 	vadd.f32	s13, s13, s12
 8018302:	428b      	cmp	r3, r1
 8018304:	edc5 6a07 	vstr	s13, [r5, #28]
 8018308:	db15      	blt.n	8018336 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801830a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801830e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8018312:	3201      	adds	r2, #1
 8018314:	edc5 6a07 	vstr	s13, [r5, #28]
 8018318:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801831c:	602a      	str	r2, [r5, #0]
 801831e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8018322:	1a5b      	subs	r3, r3, r1
 8018324:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8018328:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801832c:	612b      	str	r3, [r5, #16]
 801832e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018332:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8018336:	3f01      	subs	r7, #1
 8018338:	e757      	b.n	80181ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801833a:	ad39      	add	r5, sp, #228	; 0xe4
 801833c:	ac19      	add	r4, sp, #100	; 0x64
 801833e:	e72d      	b.n	801819c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8018340:	4613      	mov	r3, r2
 8018342:	e744      	b.n	80181ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8018344:	4613      	mov	r3, r2
 8018346:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801834a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801834c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8018350:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8018354:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8018358:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801835c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8018360:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8018364:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8018368:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801836a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801836e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8018372:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8018376:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801837a:	960e      	str	r6, [sp, #56]	; 0x38
 801837c:	469e      	mov	lr, r3
 801837e:	461f      	mov	r7, r3
 8018380:	f04f 0900 	mov.w	r9, #0
 8018384:	2f00      	cmp	r7, #0
 8018386:	d146      	bne.n	8018416 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8018388:	449c      	add	ip, r3
 801838a:	1ad7      	subs	r7, r2, r3
 801838c:	f1b9 0f00 	cmp.w	r9, #0
 8018390:	d009      	beq.n	80183a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8018392:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8018396:	9039      	str	r0, [sp, #228]	; 0xe4
 8018398:	913d      	str	r1, [sp, #244]	; 0xf4
 801839a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801839e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80183a2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80183a6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80183a8:	910e      	str	r1, [sp, #56]	; 0x38
 80183aa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80183ae:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80183b2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80183b6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80183ba:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80183be:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80183c2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80183c6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80183ca:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80183ce:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80183d2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80183d6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80183da:	f04f 0800 	mov.w	r8, #0
 80183de:	f1be 0f00 	cmp.w	lr, #0
 80183e2:	d030      	beq.n	8018446 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80183e4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80183e6:	4431      	add	r1, r6
 80183e8:	4549      	cmp	r1, r9
 80183ea:	4450      	add	r0, sl
 80183ec:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80183f0:	ee37 7a04 	vadd.f32	s14, s14, s8
 80183f4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80183f8:	db08      	blt.n	801840c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80183fa:	ee77 7a85 	vadd.f32	s15, s15, s10
 80183fe:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8018402:	ee37 7a06 	vadd.f32	s14, s14, s12
 8018406:	3001      	adds	r0, #1
 8018408:	eba1 0109 	sub.w	r1, r1, r9
 801840c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018410:	f04f 0801 	mov.w	r8, #1
 8018414:	e7e3      	b.n	80183de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8018416:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8018418:	4431      	add	r1, r6
 801841a:	4541      	cmp	r1, r8
 801841c:	4450      	add	r0, sl
 801841e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8018422:	ee77 7a84 	vadd.f32	s15, s15, s8
 8018426:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801842a:	db08      	blt.n	801843e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801842c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8018430:	ee37 7a25 	vadd.f32	s14, s14, s11
 8018434:	ee77 7a86 	vadd.f32	s15, s15, s12
 8018438:	3001      	adds	r0, #1
 801843a:	eba1 0108 	sub.w	r1, r1, r8
 801843e:	3f01      	subs	r7, #1
 8018440:	f04f 0901 	mov.w	r9, #1
 8018444:	e79e      	b.n	8018384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8018446:	449c      	add	ip, r3
 8018448:	1aff      	subs	r7, r7, r3
 801844a:	f1b8 0f00 	cmp.w	r8, #0
 801844e:	d009      	beq.n	8018464 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8018450:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8018454:	9019      	str	r0, [sp, #100]	; 0x64
 8018456:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801845a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801845e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8018462:	911d      	str	r1, [sp, #116]	; 0x74
 8018464:	1ad2      	subs	r2, r2, r3
 8018466:	e6b5      	b.n	80181d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8018468:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801846a:	681b      	ldr	r3, [r3, #0]
 801846c:	b923      	cbnz	r3, 8018478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801846e:	4b04      	ldr	r3, [pc, #16]	; (8018480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8018470:	6818      	ldr	r0, [r3, #0]
 8018472:	6803      	ldr	r3, [r0, #0]
 8018474:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018476:	4798      	blx	r3
 8018478:	b05b      	add	sp, #364	; 0x16c
 801847a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801847e:	bf00      	nop
 8018480:	2001e1c0 	.word	0x2001e1c0

08018484 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8018484:	b570      	push	{r4, r5, r6, lr}
 8018486:	4604      	mov	r4, r0
 8018488:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801848c:	9804      	ldr	r0, [sp, #16]
 801848e:	6061      	str	r1, [r4, #4]
 8018490:	2500      	movs	r5, #0
 8018492:	8025      	strh	r5, [r4, #0]
 8018494:	7223      	strb	r3, [r4, #8]
 8018496:	7266      	strb	r6, [r4, #9]
 8018498:	60e0      	str	r0, [r4, #12]
 801849a:	8222      	strh	r2, [r4, #16]
 801849c:	8265      	strh	r5, [r4, #18]
 801849e:	82a5      	strh	r5, [r4, #20]
 80184a0:	82e5      	strh	r5, [r4, #22]
 80184a2:	8325      	strh	r5, [r4, #24]
 80184a4:	8365      	strh	r5, [r4, #26]
 80184a6:	83a5      	strh	r5, [r4, #28]
 80184a8:	77a5      	strb	r5, [r4, #30]
 80184aa:	b32e      	cbz	r6, 80184f8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80184ac:	6803      	ldr	r3, [r0, #0]
 80184ae:	695b      	ldr	r3, [r3, #20]
 80184b0:	4798      	blx	r3
 80184b2:	4606      	mov	r6, r0
 80184b4:	b300      	cbz	r0, 80184f8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80184b6:	68e0      	ldr	r0, [r4, #12]
 80184b8:	6803      	ldr	r3, [r0, #0]
 80184ba:	4631      	mov	r1, r6
 80184bc:	68db      	ldr	r3, [r3, #12]
 80184be:	4798      	blx	r3
 80184c0:	4605      	mov	r5, r0
 80184c2:	b1c8      	cbz	r0, 80184f8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80184c4:	7b43      	ldrb	r3, [r0, #13]
 80184c6:	7a82      	ldrb	r2, [r0, #10]
 80184c8:	005b      	lsls	r3, r3, #1
 80184ca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80184ce:	4313      	orrs	r3, r2
 80184d0:	83a3      	strh	r3, [r4, #28]
 80184d2:	7a63      	ldrb	r3, [r4, #9]
 80184d4:	2b04      	cmp	r3, #4
 80184d6:	d10f      	bne.n	80184f8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80184d8:	68e0      	ldr	r0, [r4, #12]
 80184da:	6803      	ldr	r3, [r0, #0]
 80184dc:	462a      	mov	r2, r5
 80184de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80184e0:	4631      	mov	r1, r6
 80184e2:	4798      	blx	r3
 80184e4:	7b6b      	ldrb	r3, [r5, #13]
 80184e6:	005b      	lsls	r3, r3, #1
 80184e8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80184ec:	7aab      	ldrb	r3, [r5, #10]
 80184ee:	4313      	orrs	r3, r2
 80184f0:	4418      	add	r0, r3
 80184f2:	8ba3      	ldrh	r3, [r4, #28]
 80184f4:	4418      	add	r0, r3
 80184f6:	83a0      	strh	r0, [r4, #28]
 80184f8:	4620      	mov	r0, r4
 80184fa:	bd70      	pop	{r4, r5, r6, pc}

080184fc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80184fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018500:	2400      	movs	r4, #0
 8018502:	b085      	sub	sp, #20
 8018504:	4681      	mov	r9, r0
 8018506:	4688      	mov	r8, r1
 8018508:	4692      	mov	sl, r2
 801850a:	469b      	mov	fp, r3
 801850c:	4627      	mov	r7, r4
 801850e:	4625      	mov	r5, r4
 8018510:	4626      	mov	r6, r4
 8018512:	4554      	cmp	r4, sl
 8018514:	da2a      	bge.n	801856c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8018516:	2300      	movs	r3, #0
 8018518:	9303      	str	r3, [sp, #12]
 801851a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801851e:	429d      	cmp	r5, r3
 8018520:	d004      	beq.n	801852c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8018522:	f242 030b 	movw	r3, #8203	; 0x200b
 8018526:	429d      	cmp	r5, r3
 8018528:	bf18      	it	ne
 801852a:	462f      	movne	r7, r5
 801852c:	ab03      	add	r3, sp, #12
 801852e:	4642      	mov	r2, r8
 8018530:	4659      	mov	r1, fp
 8018532:	4648      	mov	r0, r9
 8018534:	f003 f826 	bl	801b584 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018538:	4605      	mov	r5, r0
 801853a:	b1b8      	cbz	r0, 801856c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801853c:	280a      	cmp	r0, #10
 801853e:	d015      	beq.n	801856c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8018540:	9a03      	ldr	r2, [sp, #12]
 8018542:	b18a      	cbz	r2, 8018568 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8018544:	7b50      	ldrb	r0, [r2, #13]
 8018546:	7a93      	ldrb	r3, [r2, #10]
 8018548:	8895      	ldrh	r5, [r2, #4]
 801854a:	0040      	lsls	r0, r0, #1
 801854c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8018550:	4303      	orrs	r3, r0
 8018552:	9301      	str	r3, [sp, #4]
 8018554:	f8d8 3000 	ldr.w	r3, [r8]
 8018558:	4639      	mov	r1, r7
 801855a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801855c:	4640      	mov	r0, r8
 801855e:	4798      	blx	r3
 8018560:	9b01      	ldr	r3, [sp, #4]
 8018562:	4418      	add	r0, r3
 8018564:	4406      	add	r6, r0
 8018566:	b2b6      	uxth	r6, r6
 8018568:	3401      	adds	r4, #1
 801856a:	e7d2      	b.n	8018512 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801856c:	4630      	mov	r0, r6
 801856e:	b005      	add	sp, #20
 8018570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018574 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8018574:	2a02      	cmp	r2, #2
 8018576:	b530      	push	{r4, r5, lr}
 8018578:	d011      	beq.n	801859e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801857a:	2a03      	cmp	r2, #3
 801857c:	d01c      	beq.n	80185b8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801857e:	2a01      	cmp	r2, #1
 8018580:	d10c      	bne.n	801859c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8018582:	888b      	ldrh	r3, [r1, #4]
 8018584:	8801      	ldrh	r1, [r0, #0]
 8018586:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801858a:	8844      	ldrh	r4, [r0, #2]
 801858c:	8004      	strh	r4, [r0, #0]
 801858e:	1a5b      	subs	r3, r3, r1
 8018590:	1a9b      	subs	r3, r3, r2
 8018592:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8018596:	8043      	strh	r3, [r0, #2]
 8018598:	8081      	strh	r1, [r0, #4]
 801859a:	80c2      	strh	r2, [r0, #6]
 801859c:	bd30      	pop	{r4, r5, pc}
 801859e:	88cb      	ldrh	r3, [r1, #6]
 80185a0:	8842      	ldrh	r2, [r0, #2]
 80185a2:	1a9b      	subs	r3, r3, r2
 80185a4:	88c2      	ldrh	r2, [r0, #6]
 80185a6:	1a9b      	subs	r3, r3, r2
 80185a8:	888a      	ldrh	r2, [r1, #4]
 80185aa:	8801      	ldrh	r1, [r0, #0]
 80185ac:	8043      	strh	r3, [r0, #2]
 80185ae:	1a52      	subs	r2, r2, r1
 80185b0:	8881      	ldrh	r1, [r0, #4]
 80185b2:	1a52      	subs	r2, r2, r1
 80185b4:	8002      	strh	r2, [r0, #0]
 80185b6:	e7f1      	b.n	801859c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80185b8:	88cb      	ldrh	r3, [r1, #6]
 80185ba:	8841      	ldrh	r1, [r0, #2]
 80185bc:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80185c0:	f9b0 5000 	ldrsh.w	r5, [r0]
 80185c4:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80185c8:	8045      	strh	r5, [r0, #2]
 80185ca:	1a5b      	subs	r3, r3, r1
 80185cc:	1a9b      	subs	r3, r3, r2
 80185ce:	8003      	strh	r3, [r0, #0]
 80185d0:	8082      	strh	r2, [r0, #4]
 80185d2:	80c4      	strh	r4, [r0, #6]
 80185d4:	e7e2      	b.n	801859c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080185d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80185d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185da:	b09f      	sub	sp, #124	; 0x7c
 80185dc:	9116      	str	r1, [sp, #88]	; 0x58
 80185de:	9317      	str	r3, [sp, #92]	; 0x5c
 80185e0:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80185e2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80185e4:	8809      	ldrh	r1, [r1, #0]
 80185e6:	889b      	ldrh	r3, [r3, #4]
 80185e8:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80185ec:	9212      	str	r2, [sp, #72]	; 0x48
 80185ee:	440b      	add	r3, r1
 80185f0:	b21b      	sxth	r3, r3
 80185f2:	9310      	str	r3, [sp, #64]	; 0x40
 80185f4:	f8d8 3000 	ldr.w	r3, [r8]
 80185f8:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80185fc:	7a59      	ldrb	r1, [r3, #9]
 80185fe:	7a1b      	ldrb	r3, [r3, #8]
 8018600:	9011      	str	r0, [sp, #68]	; 0x44
 8018602:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8018606:	9114      	str	r1, [sp, #80]	; 0x50
 8018608:	9315      	str	r3, [sp, #84]	; 0x54
 801860a:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 801860e:	2a00      	cmp	r2, #0
 8018610:	d067      	beq.n	80186e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10c>
 8018612:	f898 3010 	ldrb.w	r3, [r8, #16]
 8018616:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018618:	2b04      	cmp	r3, #4
 801861a:	bf14      	ite	ne
 801861c:	2301      	movne	r3, #1
 801861e:	2302      	moveq	r3, #2
 8018620:	4413      	add	r3, r2
 8018622:	f04f 0900 	mov.w	r9, #0
 8018626:	930f      	str	r3, [sp, #60]	; 0x3c
 8018628:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801862c:	464c      	mov	r4, r9
 801862e:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8018632:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8018636:	4293      	cmp	r3, r2
 8018638:	f280 808c 	bge.w	8018754 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 801863c:	2300      	movs	r3, #0
 801863e:	931c      	str	r3, [sp, #112]	; 0x70
 8018640:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8018644:	429c      	cmp	r4, r3
 8018646:	d006      	beq.n	8018656 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x80>
 8018648:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801864a:	f242 020b 	movw	r2, #8203	; 0x200b
 801864e:	4294      	cmp	r4, r2
 8018650:	bf18      	it	ne
 8018652:	4623      	movne	r3, r4
 8018654:	930d      	str	r3, [sp, #52]	; 0x34
 8018656:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018658:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801865a:	f8d8 2000 	ldr.w	r2, [r8]
 801865e:	428b      	cmp	r3, r1
 8018660:	db41      	blt.n	80186e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x110>
 8018662:	6813      	ldr	r3, [r2, #0]
 8018664:	4610      	mov	r0, r2
 8018666:	695b      	ldr	r3, [r3, #20]
 8018668:	4798      	blx	r3
 801866a:	4604      	mov	r4, r0
 801866c:	f8d8 0000 	ldr.w	r0, [r8]
 8018670:	6803      	ldr	r3, [r0, #0]
 8018672:	aa1d      	add	r2, sp, #116	; 0x74
 8018674:	689e      	ldr	r6, [r3, #8]
 8018676:	4621      	mov	r1, r4
 8018678:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801867c:	47b0      	blx	r6
 801867e:	901c      	str	r0, [sp, #112]	; 0x70
 8018680:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8018684:	429c      	cmp	r4, r3
 8018686:	f000 80e9 	beq.w	801885c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 801868a:	f242 030b 	movw	r3, #8203	; 0x200b
 801868e:	429c      	cmp	r4, r3
 8018690:	f000 80e4 	beq.w	801885c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 8018694:	2c00      	cmp	r4, #0
 8018696:	f000 80f6 	beq.w	8018886 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 801869a:	2c0a      	cmp	r4, #10
 801869c:	d060      	beq.n	8018760 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 801869e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80186a0:	b36a      	cbz	r2, 80186fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x128>
 80186a2:	8894      	ldrh	r4, [r2, #4]
 80186a4:	f1bb 0f00 	cmp.w	fp, #0
 80186a8:	d03b      	beq.n	8018722 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14c>
 80186aa:	f892 900d 	ldrb.w	r9, [r2, #13]
 80186ae:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80186b2:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80186b6:	f892 900a 	ldrb.w	r9, [r2, #10]
 80186ba:	f1bb 0f01 	cmp.w	fp, #1
 80186be:	ea49 0903 	orr.w	r9, r9, r3
 80186c2:	d134      	bne.n	801872e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x158>
 80186c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80186c6:	eba5 0509 	sub.w	r5, r5, r9
 80186ca:	2b00      	cmp	r3, #0
 80186cc:	d14f      	bne.n	801876e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 80186ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80186d0:	eb09 0305 	add.w	r3, r9, r5
 80186d4:	4413      	add	r3, r2
 80186d6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80186d8:	f9b2 2000 	ldrsh.w	r2, [r2]
 80186dc:	4293      	cmp	r3, r2
 80186de:	da51      	bge.n	8018784 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80186e0:	e038      	b.n	8018754 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 80186e2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80186e4:	e79d      	b.n	8018622 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80186e6:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80186ea:	9301      	str	r3, [sp, #4]
 80186ec:	ab1d      	add	r3, sp, #116	; 0x74
 80186ee:	9300      	str	r3, [sp, #0]
 80186f0:	4659      	mov	r1, fp
 80186f2:	ab1c      	add	r3, sp, #112	; 0x70
 80186f4:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80186f6:	f002 ff9d 	bl	801b634 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80186fa:	4604      	mov	r4, r0
 80186fc:	e7c0      	b.n	8018680 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xaa>
 80186fe:	f8d8 0000 	ldr.w	r0, [r8]
 8018702:	6803      	ldr	r3, [r0, #0]
 8018704:	691b      	ldr	r3, [r3, #16]
 8018706:	4798      	blx	r3
 8018708:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801870c:	4298      	cmp	r0, r3
 801870e:	f000 80a5 	beq.w	801885c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 8018712:	f242 030b 	movw	r3, #8203	; 0x200b
 8018716:	4298      	cmp	r0, r3
 8018718:	f000 80a0 	beq.w	801885c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 801871c:	f1bb 0f00 	cmp.w	fp, #0
 8018720:	d100      	bne.n	8018724 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 8018722:	444d      	add	r5, r9
 8018724:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8018726:	2a00      	cmp	r2, #0
 8018728:	d1bf      	bne.n	80186aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd4>
 801872a:	4691      	mov	r9, r2
 801872c:	e096      	b.n	801885c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 801872e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018730:	2b00      	cmp	r3, #0
 8018732:	f000 80aa 	beq.w	801888a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 8018736:	f1bb 0f00 	cmp.w	fp, #0
 801873a:	d118      	bne.n	801876e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 801873c:	f8d8 0000 	ldr.w	r0, [r8]
 8018740:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018742:	6803      	ldr	r3, [r0, #0]
 8018744:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018746:	4798      	blx	r3
 8018748:	4405      	add	r5, r0
 801874a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801874c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801874e:	1aeb      	subs	r3, r5, r3
 8018750:	4293      	cmp	r3, r2
 8018752:	dd17      	ble.n	8018784 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8018754:	2c00      	cmp	r4, #0
 8018756:	f000 8096 	beq.w	8018886 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 801875a:	2c0a      	cmp	r4, #10
 801875c:	f040 8084 	bne.w	8018868 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8018760:	240a      	movs	r4, #10
 8018762:	fab4 f084 	clz	r0, r4
 8018766:	0940      	lsrs	r0, r0, #5
 8018768:	b01f      	add	sp, #124	; 0x7c
 801876a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801876e:	f8d8 0000 	ldr.w	r0, [r8]
 8018772:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018774:	6803      	ldr	r3, [r0, #0]
 8018776:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018778:	4798      	blx	r3
 801877a:	f1bb 0f01 	cmp.w	fp, #1
 801877e:	eba5 0500 	sub.w	r5, r5, r0
 8018782:	d0a4      	beq.n	80186ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf8>
 8018784:	981c      	ldr	r0, [sp, #112]	; 0x70
 8018786:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018788:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801878c:	f9b3 6000 	ldrsh.w	r6, [r3]
 8018790:	7b43      	ldrb	r3, [r0, #13]
 8018792:	015b      	lsls	r3, r3, #5
 8018794:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018798:	7983      	ldrb	r3, [r0, #6]
 801879a:	4429      	add	r1, r5
 801879c:	4313      	orrs	r3, r2
 801879e:	440b      	add	r3, r1
 80187a0:	42b3      	cmp	r3, r6
 80187a2:	db5b      	blt.n	801885c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 80187a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80187a6:	4299      	cmp	r1, r3
 80187a8:	da58      	bge.n	801885c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 80187aa:	f8d8 0000 	ldr.w	r0, [r8]
 80187ae:	6803      	ldr	r3, [r0, #0]
 80187b0:	42ae      	cmp	r6, r5
 80187b2:	bfc8      	it	gt
 80187b4:	1b76      	subgt	r6, r6, r5
 80187b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80187b8:	bfcc      	ite	gt
 80187ba:	b2b6      	uxthgt	r6, r6
 80187bc:	2600      	movle	r6, #0
 80187be:	4798      	blx	r3
 80187c0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80187c2:	7b5a      	ldrb	r2, [r3, #13]
 80187c4:	00d1      	lsls	r1, r2, #3
 80187c6:	f401 7780 	and.w	r7, r1, #256	; 0x100
 80187ca:	7a19      	ldrb	r1, [r3, #8]
 80187cc:	4339      	orrs	r1, r7
 80187ce:	0657      	lsls	r7, r2, #25
 80187d0:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 80187d2:	bf44      	itt	mi
 80187d4:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80187d8:	b209      	sxthmi	r1, r1
 80187da:	19c7      	adds	r7, r0, r7
 80187dc:	1a7f      	subs	r7, r7, r1
 80187de:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80187e0:	b2bf      	uxth	r7, r7
 80187e2:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80187e6:	fa0f fa87 	sxth.w	sl, r7
 80187ea:	4551      	cmp	r1, sl
 80187ec:	dd3a      	ble.n	8018864 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80187ee:	0112      	lsls	r2, r2, #4
 80187f0:	79d8      	ldrb	r0, [r3, #7]
 80187f2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80187f6:	4302      	orrs	r2, r0
 80187f8:	4492      	add	sl, r2
 80187fa:	4551      	cmp	r1, sl
 80187fc:	dc2e      	bgt.n	801885c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 80187fe:	1bcf      	subs	r7, r1, r7
 8018800:	b2bf      	uxth	r7, r7
 8018802:	468a      	mov	sl, r1
 8018804:	9319      	str	r3, [sp, #100]	; 0x64
 8018806:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018808:	f8d8 0000 	ldr.w	r0, [r8]
 801880c:	681a      	ldr	r2, [r3, #0]
 801880e:	6801      	ldr	r1, [r0, #0]
 8018810:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8018812:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8018814:	9313      	str	r3, [sp, #76]	; 0x4c
 8018816:	9218      	str	r2, [sp, #96]	; 0x60
 8018818:	6b89      	ldr	r1, [r1, #56]	; 0x38
 801881a:	4788      	blx	r1
 801881c:	f898 1006 	ldrb.w	r1, [r8, #6]
 8018820:	910b      	str	r1, [sp, #44]	; 0x2c
 8018822:	f898 100e 	ldrb.w	r1, [r8, #14]
 8018826:	910a      	str	r1, [sp, #40]	; 0x28
 8018828:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 801882c:	9109      	str	r1, [sp, #36]	; 0x24
 801882e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8018830:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8018834:	9305      	str	r3, [sp, #20]
 8018836:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018838:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801883a:	9206      	str	r2, [sp, #24]
 801883c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8018840:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8018844:	e9cd a601 	strd	sl, r6, [sp, #4]
 8018848:	442e      	add	r6, r5
 801884a:	b236      	sxth	r6, r6
 801884c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801884e:	9600      	str	r6, [sp, #0]
 8018850:	681a      	ldr	r2, [r3, #0]
 8018852:	9916      	ldr	r1, [sp, #88]	; 0x58
 8018854:	685b      	ldr	r3, [r3, #4]
 8018856:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018858:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801885a:	47b0      	blx	r6
 801885c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801885e:	3301      	adds	r3, #1
 8018860:	930e      	str	r3, [sp, #56]	; 0x38
 8018862:	e6e6      	b.n	8018632 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8018864:	2700      	movs	r7, #0
 8018866:	e7cd      	b.n	8018804 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x22e>
 8018868:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801886a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801886c:	3501      	adds	r5, #1
 801886e:	429d      	cmp	r5, r3
 8018870:	f6bf af77 	bge.w	8018762 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8018874:	4659      	mov	r1, fp
 8018876:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8018878:	f7f2 f9a8 	bl	800abcc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801887c:	4604      	mov	r4, r0
 801887e:	b110      	cbz	r0, 8018886 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 8018880:	280a      	cmp	r0, #10
 8018882:	d1f2      	bne.n	801886a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8018884:	e76c      	b.n	8018760 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 8018886:	2400      	movs	r4, #0
 8018888:	e76b      	b.n	8018762 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801888a:	f1bb 0f00 	cmp.w	fp, #0
 801888e:	f43f af5c 	beq.w	801874a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x174>
 8018892:	e777      	b.n	8018784 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08018894 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8018894:	b530      	push	{r4, r5, lr}
 8018896:	8a44      	ldrh	r4, [r0, #18]
 8018898:	8ac5      	ldrh	r5, [r0, #22]
 801889a:	82c3      	strh	r3, [r0, #22]
 801889c:	442c      	add	r4, r5
 801889e:	1ae4      	subs	r4, r4, r3
 80188a0:	8244      	strh	r4, [r0, #18]
 80188a2:	8b03      	ldrh	r3, [r0, #24]
 80188a4:	8a84      	ldrh	r4, [r0, #20]
 80188a6:	4422      	add	r2, r4
 80188a8:	440c      	add	r4, r1
 80188aa:	1a59      	subs	r1, r3, r1
 80188ac:	8342      	strh	r2, [r0, #26]
 80188ae:	8284      	strh	r4, [r0, #20]
 80188b0:	8301      	strh	r1, [r0, #24]
 80188b2:	bd30      	pop	{r4, r5, pc}

080188b4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 80188b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188b8:	7a43      	ldrb	r3, [r0, #9]
 80188ba:	1eda      	subs	r2, r3, #3
 80188bc:	b087      	sub	sp, #28
 80188be:	4604      	mov	r4, r0
 80188c0:	b2d2      	uxtb	r2, r2
 80188c2:	460f      	mov	r7, r1
 80188c4:	2900      	cmp	r1, #0
 80188c6:	d036      	beq.n	8018936 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 80188c8:	2a01      	cmp	r2, #1
 80188ca:	d932      	bls.n	8018932 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 80188cc:	1e58      	subs	r0, r3, #1
 80188ce:	f1d0 0b00 	rsbs	fp, r0, #0
 80188d2:	eb4b 0b00 	adc.w	fp, fp, r0
 80188d6:	1e99      	subs	r1, r3, #2
 80188d8:	424b      	negs	r3, r1
 80188da:	414b      	adcs	r3, r1
 80188dc:	9303      	str	r3, [sp, #12]
 80188de:	2300      	movs	r3, #0
 80188e0:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80188e4:	2500      	movs	r5, #0
 80188e6:	8265      	strh	r5, [r4, #18]
 80188e8:	82a5      	strh	r5, [r4, #20]
 80188ea:	46a9      	mov	r9, r5
 80188ec:	f242 0a0b 	movw	sl, #8203	; 0x200b
 80188f0:	2300      	movs	r3, #0
 80188f2:	9305      	str	r3, [sp, #20]
 80188f4:	8823      	ldrh	r3, [r4, #0]
 80188f6:	2b20      	cmp	r3, #32
 80188f8:	d02b      	beq.n	8018952 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 80188fa:	eba3 020a 	sub.w	r2, r3, sl
 80188fe:	4256      	negs	r6, r2
 8018900:	4156      	adcs	r6, r2
 8018902:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8018906:	4293      	cmp	r3, r2
 8018908:	d004      	beq.n	8018914 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 801890a:	4553      	cmp	r3, sl
 801890c:	bf16      	itet	ne
 801890e:	4699      	movne	r9, r3
 8018910:	2601      	moveq	r6, #1
 8018912:	2600      	movne	r6, #0
 8018914:	ab05      	add	r3, sp, #20
 8018916:	68e2      	ldr	r2, [r4, #12]
 8018918:	7a21      	ldrb	r1, [r4, #8]
 801891a:	6860      	ldr	r0, [r4, #4]
 801891c:	f002 fe32 	bl	801b584 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018920:	8020      	strh	r0, [r4, #0]
 8018922:	b9c8      	cbnz	r0, 8018958 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 8018924:	8b22      	ldrh	r2, [r4, #24]
 8018926:	2300      	movs	r3, #0
 8018928:	4611      	mov	r1, r2
 801892a:	4620      	mov	r0, r4
 801892c:	f7ff ffb2 	bl	8018894 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8018930:	e066      	b.n	8018a00 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8018932:	468b      	mov	fp, r1
 8018934:	e7cf      	b.n	80188d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8018936:	3b01      	subs	r3, #1
 8018938:	2a01      	cmp	r2, #1
 801893a:	bf8c      	ite	hi
 801893c:	2200      	movhi	r2, #0
 801893e:	2201      	movls	r2, #1
 8018940:	2b01      	cmp	r3, #1
 8018942:	bf8c      	ite	hi
 8018944:	2300      	movhi	r3, #0
 8018946:	2301      	movls	r3, #1
 8018948:	9202      	str	r2, [sp, #8]
 801894a:	9301      	str	r3, [sp, #4]
 801894c:	9103      	str	r1, [sp, #12]
 801894e:	468b      	mov	fp, r1
 8018950:	e7c8      	b.n	80188e4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8018952:	4699      	mov	r9, r3
 8018954:	2601      	movs	r6, #1
 8018956:	e7dd      	b.n	8018914 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8018958:	8ae3      	ldrh	r3, [r4, #22]
 801895a:	280a      	cmp	r0, #10
 801895c:	f103 0301 	add.w	r3, r3, #1
 8018960:	82e3      	strh	r3, [r4, #22]
 8018962:	d0df      	beq.n	8018924 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8018964:	9a05      	ldr	r2, [sp, #20]
 8018966:	bb42      	cbnz	r2, 80189ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8018968:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801896c:	4298      	cmp	r0, r3
 801896e:	d001      	beq.n	8018974 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8018970:	4550      	cmp	r0, sl
 8018972:	d1bd      	bne.n	80188f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8018974:	8823      	ldrh	r3, [r4, #0]
 8018976:	8b21      	ldrh	r1, [r4, #24]
 8018978:	2b20      	cmp	r3, #32
 801897a:	d001      	beq.n	8018980 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 801897c:	4553      	cmp	r3, sl
 801897e:	d131      	bne.n	80189e4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8018980:	2e00      	cmp	r6, #0
 8018982:	bf0a      	itet	eq
 8018984:	460d      	moveq	r5, r1
 8018986:	4630      	movne	r0, r6
 8018988:	2001      	moveq	r0, #1
 801898a:	440a      	add	r2, r1
 801898c:	8aa3      	ldrh	r3, [r4, #20]
 801898e:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8018992:	b292      	uxth	r2, r2
 8018994:	8322      	strh	r2, [r4, #24]
 8018996:	4413      	add	r3, r2
 8018998:	2f00      	cmp	r7, #0
 801899a:	d03a      	beq.n	8018a12 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 801899c:	f1bb 0f00 	cmp.w	fp, #0
 80189a0:	d102      	bne.n	80189a8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 80189a2:	9903      	ldr	r1, [sp, #12]
 80189a4:	b301      	cbz	r1, 80189e8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 80189a6:	b1f8      	cbz	r0, 80189e8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 80189a8:	8ba1      	ldrh	r1, [r4, #28]
 80189aa:	4419      	add	r1, r3
 80189ac:	458c      	cmp	ip, r1
 80189ae:	da2a      	bge.n	8018a06 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 80189b0:	8a61      	ldrh	r1, [r4, #18]
 80189b2:	b341      	cbz	r1, 8018a06 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 80189b4:	4563      	cmp	r3, ip
 80189b6:	dd9b      	ble.n	80188f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80189b8:	e01c      	b.n	80189f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 80189ba:	8893      	ldrh	r3, [r2, #4]
 80189bc:	8023      	strh	r3, [r4, #0]
 80189be:	f892 800d 	ldrb.w	r8, [r2, #13]
 80189c2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80189c6:	f408 7080 	and.w	r0, r8, #256	; 0x100
 80189ca:	f892 800a 	ldrb.w	r8, [r2, #10]
 80189ce:	ea48 0800 	orr.w	r8, r8, r0
 80189d2:	68e0      	ldr	r0, [r4, #12]
 80189d4:	6803      	ldr	r3, [r0, #0]
 80189d6:	4649      	mov	r1, r9
 80189d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80189da:	4798      	blx	r3
 80189dc:	eb08 0200 	add.w	r2, r8, r0
 80189e0:	b292      	uxth	r2, r2
 80189e2:	e7c7      	b.n	8018974 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 80189e4:	2000      	movs	r0, #0
 80189e6:	e7d0      	b.n	801898a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 80189e8:	4563      	cmp	r3, ip
 80189ea:	dd81      	ble.n	80188f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80189ec:	8a63      	ldrh	r3, [r4, #18]
 80189ee:	2b00      	cmp	r3, #0
 80189f0:	f43f af7e 	beq.w	80188f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80189f4:	2301      	movs	r3, #1
 80189f6:	77a3      	strb	r3, [r4, #30]
 80189f8:	8ba2      	ldrh	r2, [r4, #28]
 80189fa:	8b63      	ldrh	r3, [r4, #26]
 80189fc:	4413      	add	r3, r2
 80189fe:	8363      	strh	r3, [r4, #26]
 8018a00:	b007      	add	sp, #28
 8018a02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a06:	2300      	movs	r3, #0
 8018a08:	4611      	mov	r1, r2
 8018a0a:	4620      	mov	r0, r4
 8018a0c:	f7ff ff42 	bl	8018894 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8018a10:	e76e      	b.n	80188f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8018a12:	4563      	cmp	r3, ip
 8018a14:	dd14      	ble.n	8018a40 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8018a16:	9b02      	ldr	r3, [sp, #8]
 8018a18:	b113      	cbz	r3, 8018a20 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8018a1a:	2301      	movs	r3, #1
 8018a1c:	460a      	mov	r2, r1
 8018a1e:	e783      	b.n	8018928 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 8018a20:	9b01      	ldr	r3, [sp, #4]
 8018a22:	2b00      	cmp	r3, #0
 8018a24:	f43f af64 	beq.w	80188f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8018a28:	2800      	cmp	r0, #0
 8018a2a:	f47f af61 	bne.w	80188f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8018a2e:	b116      	cbz	r6, 8018a36 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 8018a30:	2301      	movs	r3, #1
 8018a32:	462a      	mov	r2, r5
 8018a34:	e779      	b.n	801892a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8018a36:	8a63      	ldrh	r3, [r4, #18]
 8018a38:	2b00      	cmp	r3, #0
 8018a3a:	f43f af59 	beq.w	80188f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8018a3e:	e7df      	b.n	8018a00 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8018a40:	2800      	cmp	r0, #0
 8018a42:	f47f af55 	bne.w	80188f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8018a46:	2e00      	cmp	r6, #0
 8018a48:	f43f af52 	beq.w	80188f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8018a4c:	2301      	movs	r3, #1
 8018a4e:	462a      	mov	r2, r5
 8018a50:	e7db      	b.n	8018a0a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08018a52 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8018a52:	b530      	push	{r4, r5, lr}
 8018a54:	4605      	mov	r5, r0
 8018a56:	b08b      	sub	sp, #44	; 0x2c
 8018a58:	b191      	cbz	r1, 8018a80 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8018a5a:	e9cd 3100 	strd	r3, r1, [sp]
 8018a5e:	4613      	mov	r3, r2
 8018a60:	4601      	mov	r1, r0
 8018a62:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8018a66:	a802      	add	r0, sp, #8
 8018a68:	f7ff fd0c 	bl	8018484 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8018a6c:	2401      	movs	r4, #1
 8018a6e:	2100      	movs	r1, #0
 8018a70:	a802      	add	r0, sp, #8
 8018a72:	f7ff ff1f 	bl	80188b4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8018a76:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8018a7a:	b163      	cbz	r3, 8018a96 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8018a7c:	3401      	adds	r4, #1
 8018a7e:	e7f6      	b.n	8018a6e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8018a80:	f002 fe7a 	bl	801b778 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018a84:	2401      	movs	r4, #1
 8018a86:	280a      	cmp	r0, #10
 8018a88:	4628      	mov	r0, r5
 8018a8a:	bf08      	it	eq
 8018a8c:	3401      	addeq	r4, #1
 8018a8e:	f002 fe73 	bl	801b778 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018a92:	2800      	cmp	r0, #0
 8018a94:	d1f7      	bne.n	8018a86 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8018a96:	b2a0      	uxth	r0, r4
 8018a98:	b00b      	add	sp, #44	; 0x2c
 8018a9a:	bd30      	pop	{r4, r5, pc}

08018a9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8018a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018aa0:	b0e5      	sub	sp, #404	; 0x194
 8018aa2:	4689      	mov	r9, r1
 8018aa4:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8018aa8:	900a      	str	r0, [sp, #40]	; 0x28
 8018aaa:	461c      	mov	r4, r3
 8018aac:	f1ba 0f00 	cmp.w	sl, #0
 8018ab0:	f000 80b4 	beq.w	8018c1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018ab4:	681b      	ldr	r3, [r3, #0]
 8018ab6:	2b00      	cmp	r3, #0
 8018ab8:	f000 80b0 	beq.w	8018c1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018abc:	7ba3      	ldrb	r3, [r4, #14]
 8018abe:	2b00      	cmp	r3, #0
 8018ac0:	f000 80ac 	beq.w	8018c1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018ac4:	6810      	ldr	r0, [r2, #0]
 8018ac6:	6851      	ldr	r1, [r2, #4]
 8018ac8:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8018acc:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8018ad0:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 8018ad4:	4643      	mov	r3, r8
 8018ad6:	c303      	stmia	r3!, {r0, r1}
 8018ad8:	2500      	movs	r5, #0
 8018ada:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8018ade:	79a2      	ldrb	r2, [r4, #6]
 8018ae0:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8018ae4:	a90f      	add	r1, sp, #60	; 0x3c
 8018ae6:	4640      	mov	r0, r8
 8018ae8:	950f      	str	r5, [sp, #60]	; 0x3c
 8018aea:	f7ff fd43 	bl	8018574 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8018aee:	a90f      	add	r1, sp, #60	; 0x3c
 8018af0:	4608      	mov	r0, r1
 8018af2:	79a2      	ldrb	r2, [r4, #6]
 8018af4:	af19      	add	r7, sp, #100	; 0x64
 8018af6:	f7ff fd3d 	bl	8018574 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8018afa:	4638      	mov	r0, r7
 8018afc:	f002 f9c6 	bl	801ae8c <_ZN8touchgfx12TextProviderC1Ev>
 8018b00:	6820      	ldr	r0, [r4, #0]
 8018b02:	6803      	ldr	r3, [r0, #0]
 8018b04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018b06:	4798      	blx	r3
 8018b08:	4606      	mov	r6, r0
 8018b0a:	6820      	ldr	r0, [r4, #0]
 8018b0c:	6803      	ldr	r3, [r0, #0]
 8018b0e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018b10:	4798      	blx	r3
 8018b12:	4633      	mov	r3, r6
 8018b14:	9000      	str	r0, [sp, #0]
 8018b16:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8018b18:	4651      	mov	r1, sl
 8018b1a:	4638      	mov	r0, r7
 8018b1c:	f002 fa22 	bl	801af64 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018b20:	6820      	ldr	r0, [r4, #0]
 8018b22:	7923      	ldrb	r3, [r4, #4]
 8018b24:	9308      	str	r3, [sp, #32]
 8018b26:	6803      	ldr	r3, [r0, #0]
 8018b28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8018b2a:	4798      	blx	r3
 8018b2c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8018b30:	181e      	adds	r6, r3, r0
 8018b32:	42ae      	cmp	r6, r5
 8018b34:	dd06      	ble.n	8018b44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8018b36:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8018b3a:	4282      	cmp	r2, r0
 8018b3c:	bfa4      	itt	ge
 8018b3e:	189d      	addge	r5, r3, r2
 8018b40:	fb95 f5f6 	sdivge	r5, r5, r6
 8018b44:	a832      	add	r0, sp, #200	; 0xc8
 8018b46:	f002 f9a1 	bl	801ae8c <_ZN8touchgfx12TextProviderC1Ev>
 8018b4a:	7c23      	ldrb	r3, [r4, #16]
 8018b4c:	b17b      	cbz	r3, 8018b6e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8018b4e:	6820      	ldr	r0, [r4, #0]
 8018b50:	6803      	ldr	r3, [r0, #0]
 8018b52:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018b54:	4798      	blx	r3
 8018b56:	4683      	mov	fp, r0
 8018b58:	6820      	ldr	r0, [r4, #0]
 8018b5a:	6803      	ldr	r3, [r0, #0]
 8018b5c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018b5e:	4798      	blx	r3
 8018b60:	465b      	mov	r3, fp
 8018b62:	9000      	str	r0, [sp, #0]
 8018b64:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8018b66:	4651      	mov	r1, sl
 8018b68:	a832      	add	r0, sp, #200	; 0xc8
 8018b6a:	f002 f9fb 	bl	801af64 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018b6e:	7be1      	ldrb	r1, [r4, #15]
 8018b70:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8018b74:	7963      	ldrb	r3, [r4, #5]
 8018b76:	1a52      	subs	r2, r2, r1
 8018b78:	7c21      	ldrb	r1, [r4, #16]
 8018b7a:	9101      	str	r1, [sp, #4]
 8018b7c:	6821      	ldr	r1, [r4, #0]
 8018b7e:	9100      	str	r1, [sp, #0]
 8018b80:	b292      	uxth	r2, r2
 8018b82:	a932      	add	r1, sp, #200	; 0xc8
 8018b84:	a811      	add	r0, sp, #68	; 0x44
 8018b86:	f7ff fc7d 	bl	8018484 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8018b8a:	7c23      	ldrb	r3, [r4, #16]
 8018b8c:	b9bb      	cbnz	r3, 8018bbe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8018b8e:	fa1f fa86 	uxth.w	sl, r6
 8018b92:	2d00      	cmp	r5, #0
 8018b94:	dd45      	ble.n	8018c22 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8018b96:	4638      	mov	r0, r7
 8018b98:	f002 fdee 	bl	801b778 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018b9c:	2800      	cmp	r0, #0
 8018b9e:	d03d      	beq.n	8018c1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018ba0:	280a      	cmp	r0, #10
 8018ba2:	d1f6      	bne.n	8018b92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8018ba4:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8018ba8:	4453      	add	r3, sl
 8018baa:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8018bae:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8018bb2:	eba3 030a 	sub.w	r3, r3, sl
 8018bb6:	3d01      	subs	r5, #1
 8018bb8:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8018bbc:	e7e9      	b.n	8018b92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8018bbe:	0073      	lsls	r3, r6, #1
 8018bc0:	9309      	str	r3, [sp, #36]	; 0x24
 8018bc2:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8018bc6:	fa1f fa86 	uxth.w	sl, r6
 8018bca:	2d00      	cmp	r5, #0
 8018bcc:	dd29      	ble.n	8018c22 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8018bce:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8018bd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018bd4:	428b      	cmp	r3, r1
 8018bd6:	bfd4      	ite	le
 8018bd8:	2100      	movle	r1, #0
 8018bda:	2101      	movgt	r1, #1
 8018bdc:	a811      	add	r0, sp, #68	; 0x44
 8018bde:	f7ff fe69 	bl	80188b4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8018be2:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8018be6:	3b01      	subs	r3, #1
 8018be8:	b29b      	uxth	r3, r3
 8018bea:	455b      	cmp	r3, fp
 8018bec:	930b      	str	r3, [sp, #44]	; 0x2c
 8018bee:	d005      	beq.n	8018bfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 8018bf0:	7961      	ldrb	r1, [r4, #5]
 8018bf2:	4638      	mov	r0, r7
 8018bf4:	f7f1 ffea 	bl	800abcc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018bf8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018bfa:	e7f4      	b.n	8018be6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 8018bfc:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8018c00:	4453      	add	r3, sl
 8018c02:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8018c06:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8018c0a:	eba3 030a 	sub.w	r3, r3, sl
 8018c0e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8018c12:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018c16:	3d01      	subs	r5, #1
 8018c18:	2b00      	cmp	r3, #0
 8018c1a:	d1d6      	bne.n	8018bca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 8018c1c:	b065      	add	sp, #404	; 0x194
 8018c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c22:	0075      	lsls	r5, r6, #1
 8018c24:	f04f 0a00 	mov.w	sl, #0
 8018c28:	7c23      	ldrb	r3, [r4, #16]
 8018c2a:	2b00      	cmp	r3, #0
 8018c2c:	d066      	beq.n	8018cfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8018c2e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8018c32:	428d      	cmp	r5, r1
 8018c34:	bfd4      	ite	le
 8018c36:	2100      	movle	r1, #0
 8018c38:	2101      	movgt	r1, #1
 8018c3a:	a811      	add	r0, sp, #68	; 0x44
 8018c3c:	f7ff fe3a 	bl	80188b4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8018c40:	9b08      	ldr	r3, [sp, #32]
 8018c42:	2b00      	cmp	r3, #0
 8018c44:	d055      	beq.n	8018cf2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8018c46:	f894 b010 	ldrb.w	fp, [r4, #16]
 8018c4a:	2264      	movs	r2, #100	; 0x64
 8018c4c:	4639      	mov	r1, r7
 8018c4e:	a84b      	add	r0, sp, #300	; 0x12c
 8018c50:	f013 fb48 	bl	802c2e4 <memcpy>
 8018c54:	f1bb 0f00 	cmp.w	fp, #0
 8018c58:	d058      	beq.n	8018d0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8018c5a:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018c5e:	7922      	ldrb	r2, [r4, #4]
 8018c60:	2a01      	cmp	r2, #1
 8018c62:	d13c      	bne.n	8018cde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8018c64:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8018c68:	1ac0      	subs	r0, r0, r3
 8018c6a:	2302      	movs	r3, #2
 8018c6c:	fb90 f0f3 	sdiv	r0, r0, r3
 8018c70:	b200      	sxth	r0, r0
 8018c72:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8018c76:	4418      	add	r0, r3
 8018c78:	7c23      	ldrb	r3, [r4, #16]
 8018c7a:	b200      	sxth	r0, r0
 8018c7c:	2b00      	cmp	r3, #0
 8018c7e:	d03a      	beq.n	8018cf6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8018c80:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8018c84:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8018c88:	9000      	str	r0, [sp, #0]
 8018c8a:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8018c8e:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8018c92:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018c94:	e9cd a703 	strd	sl, r7, [sp, #12]
 8018c98:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8018c9c:	464a      	mov	r2, r9
 8018c9e:	2100      	movs	r1, #0
 8018ca0:	f7ff fc99 	bl	80185d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8018ca4:	2800      	cmp	r0, #0
 8018ca6:	d1b9      	bne.n	8018c1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018ca8:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8018cac:	b2b2      	uxth	r2, r6
 8018cae:	4611      	mov	r1, r2
 8018cb0:	4413      	add	r3, r2
 8018cb2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8018cb6:	1a52      	subs	r2, r2, r1
 8018cb8:	7c21      	ldrb	r1, [r4, #16]
 8018cba:	b21b      	sxth	r3, r3
 8018cbc:	b212      	sxth	r2, r2
 8018cbe:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8018cc2:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8018cc6:	b109      	cbz	r1, 8018ccc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8018cc8:	42b2      	cmp	r2, r6
 8018cca:	dba7      	blt.n	8018c1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018ccc:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8018cd0:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 8018cd4:	440a      	add	r2, r1
 8018cd6:	b212      	sxth	r2, r2
 8018cd8:	4293      	cmp	r3, r2
 8018cda:	dda5      	ble.n	8018c28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8018cdc:	e79e      	b.n	8018c1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8018cde:	2a02      	cmp	r2, #2
 8018ce0:	d105      	bne.n	8018cee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8018ce2:	7be2      	ldrb	r2, [r4, #15]
 8018ce4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8018ce8:	1a80      	subs	r0, r0, r2
 8018cea:	1ac0      	subs	r0, r0, r3
 8018cec:	e7c0      	b.n	8018c70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8018cee:	2000      	movs	r0, #0
 8018cf0:	e7bf      	b.n	8018c72 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8018cf2:	7be0      	ldrb	r0, [r4, #15]
 8018cf4:	e7bd      	b.n	8018c72 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8018cf6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018cfa:	e7c3      	b.n	8018c84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8018cfc:	9b08      	ldr	r3, [sp, #32]
 8018cfe:	2b00      	cmp	r3, #0
 8018d00:	d0f7      	beq.n	8018cf2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8018d02:	2264      	movs	r2, #100	; 0x64
 8018d04:	4639      	mov	r1, r7
 8018d06:	a84b      	add	r0, sp, #300	; 0x12c
 8018d08:	f013 faec 	bl	802c2e4 <memcpy>
 8018d0c:	2300      	movs	r3, #0
 8018d0e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018d12:	6821      	ldr	r1, [r4, #0]
 8018d14:	a84b      	add	r0, sp, #300	; 0x12c
 8018d16:	f7ff fbf1 	bl	80184fc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8018d1a:	b203      	sxth	r3, r0
 8018d1c:	e79f      	b.n	8018c5e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08018d1e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8018d1e:	b510      	push	{r4, lr}
 8018d20:	2b02      	cmp	r3, #2
 8018d22:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018d26:	d00b      	beq.n	8018d40 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 8018d28:	2b03      	cmp	r3, #3
 8018d2a:	d00e      	beq.n	8018d4a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 8018d2c:	2b01      	cmp	r3, #1
 8018d2e:	d001      	beq.n	8018d34 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 8018d30:	1860      	adds	r0, r4, r1
 8018d32:	bd10      	pop	{r4, pc}
 8018d34:	8880      	ldrh	r0, [r0, #4]
 8018d36:	4420      	add	r0, r4
 8018d38:	b200      	sxth	r0, r0
 8018d3a:	1a80      	subs	r0, r0, r2
 8018d3c:	3801      	subs	r0, #1
 8018d3e:	e7f8      	b.n	8018d32 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 8018d40:	8880      	ldrh	r0, [r0, #4]
 8018d42:	4420      	add	r0, r4
 8018d44:	b200      	sxth	r0, r0
 8018d46:	1a40      	subs	r0, r0, r1
 8018d48:	e7f8      	b.n	8018d3c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8018d4a:	18a0      	adds	r0, r4, r2
 8018d4c:	e7f1      	b.n	8018d32 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

08018d4e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8018d4e:	b510      	push	{r4, lr}
 8018d50:	2b02      	cmp	r3, #2
 8018d52:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8018d56:	d006      	beq.n	8018d66 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 8018d58:	2b03      	cmp	r3, #3
 8018d5a:	d00a      	beq.n	8018d72 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8018d5c:	2b01      	cmp	r3, #1
 8018d5e:	bf14      	ite	ne
 8018d60:	18a0      	addne	r0, r4, r2
 8018d62:	1860      	addeq	r0, r4, r1
 8018d64:	bd10      	pop	{r4, pc}
 8018d66:	88c0      	ldrh	r0, [r0, #6]
 8018d68:	4420      	add	r0, r4
 8018d6a:	b200      	sxth	r0, r0
 8018d6c:	1a80      	subs	r0, r0, r2
 8018d6e:	3801      	subs	r0, #1
 8018d70:	e7f8      	b.n	8018d64 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 8018d72:	88c0      	ldrh	r0, [r0, #6]
 8018d74:	4420      	add	r0, r4
 8018d76:	b200      	sxth	r0, r0
 8018d78:	1a40      	subs	r0, r0, r1
 8018d7a:	e7f8      	b.n	8018d6e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

08018d7c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8018d7c:	4b01      	ldr	r3, [pc, #4]	; (8018d84 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8018d7e:	2200      	movs	r2, #0
 8018d80:	601a      	str	r2, [r3, #0]
 8018d82:	4770      	bx	lr
 8018d84:	2001e1e8 	.word	0x2001e1e8

08018d88 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8018d88:	4603      	mov	r3, r0
 8018d8a:	b1c8      	cbz	r0, 8018dc0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8018d8c:	0c02      	lsrs	r2, r0, #16
 8018d8e:	0412      	lsls	r2, r2, #16
 8018d90:	b9a2      	cbnz	r2, 8018dbc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8018d92:	0403      	lsls	r3, r0, #16
 8018d94:	2010      	movs	r0, #16
 8018d96:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8018d9a:	bf04      	itt	eq
 8018d9c:	021b      	lsleq	r3, r3, #8
 8018d9e:	3008      	addeq	r0, #8
 8018da0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8018da4:	bf04      	itt	eq
 8018da6:	011b      	lsleq	r3, r3, #4
 8018da8:	3004      	addeq	r0, #4
 8018daa:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8018dae:	bf04      	itt	eq
 8018db0:	009b      	lsleq	r3, r3, #2
 8018db2:	3002      	addeq	r0, #2
 8018db4:	2b00      	cmp	r3, #0
 8018db6:	db04      	blt.n	8018dc2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8018db8:	3001      	adds	r0, #1
 8018dba:	4770      	bx	lr
 8018dbc:	2000      	movs	r0, #0
 8018dbe:	e7ea      	b.n	8018d96 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8018dc0:	2020      	movs	r0, #32
 8018dc2:	4770      	bx	lr

08018dc4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8018dc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018dc8:	b087      	sub	sp, #28
 8018dca:	4681      	mov	r9, r0
 8018dcc:	4698      	mov	r8, r3
 8018dce:	4610      	mov	r0, r2
 8018dd0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8018dd4:	460d      	mov	r5, r1
 8018dd6:	b981      	cbnz	r1, 8018dfa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8018dd8:	b14b      	cbz	r3, 8018dee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8018dda:	460b      	mov	r3, r1
 8018ddc:	e9cd 4700 	strd	r4, r7, [sp]
 8018de0:	464a      	mov	r2, r9
 8018de2:	4641      	mov	r1, r8
 8018de4:	f7ff ffee 	bl	8018dc4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018de8:	b007      	add	sp, #28
 8018dea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018dee:	f04f 33ff 	mov.w	r3, #4294967295
 8018df2:	603b      	str	r3, [r7, #0]
 8018df4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8018df8:	e7f6      	b.n	8018de8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8018dfa:	fa32 fa01 	lsrs.w	sl, r2, r1
 8018dfe:	d107      	bne.n	8018e10 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8018e00:	fb09 f602 	mul.w	r6, r9, r2
 8018e04:	fbb6 f0f4 	udiv	r0, r6, r4
 8018e08:	fb04 6610 	mls	r6, r4, r0, r6
 8018e0c:	603e      	str	r6, [r7, #0]
 8018e0e:	e7eb      	b.n	8018de8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8018e10:	2601      	movs	r6, #1
 8018e12:	408e      	lsls	r6, r1
 8018e14:	3e01      	subs	r6, #1
 8018e16:	4016      	ands	r6, r2
 8018e18:	fa09 fb01 	lsl.w	fp, r9, r1
 8018e1c:	4630      	mov	r0, r6
 8018e1e:	fbbb f3f4 	udiv	r3, fp, r4
 8018e22:	9302      	str	r3, [sp, #8]
 8018e24:	fb0a f303 	mul.w	r3, sl, r3
 8018e28:	9303      	str	r3, [sp, #12]
 8018e2a:	f7ff ffad 	bl	8018d88 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018e2e:	464a      	mov	r2, r9
 8018e30:	460b      	mov	r3, r1
 8018e32:	e9cd 4700 	strd	r4, r7, [sp]
 8018e36:	4601      	mov	r1, r0
 8018e38:	4630      	mov	r0, r6
 8018e3a:	f7ff ffc3 	bl	8018dc4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018e3e:	9b02      	ldr	r3, [sp, #8]
 8018e40:	fb04 bb13 	mls	fp, r4, r3, fp
 8018e44:	4606      	mov	r6, r0
 8018e46:	4658      	mov	r0, fp
 8018e48:	eb05 0108 	add.w	r1, r5, r8
 8018e4c:	f7ff ff9c 	bl	8018d88 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018e50:	ab05      	add	r3, sp, #20
 8018e52:	e9cd 4300 	strd	r4, r3, [sp]
 8018e56:	465a      	mov	r2, fp
 8018e58:	4603      	mov	r3, r0
 8018e5a:	4650      	mov	r0, sl
 8018e5c:	f7ff ffb2 	bl	8018dc4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018e60:	6839      	ldr	r1, [r7, #0]
 8018e62:	9a05      	ldr	r2, [sp, #20]
 8018e64:	9b03      	ldr	r3, [sp, #12]
 8018e66:	4411      	add	r1, r2
 8018e68:	fbb1 f2f4 	udiv	r2, r1, r4
 8018e6c:	18d3      	adds	r3, r2, r3
 8018e6e:	441e      	add	r6, r3
 8018e70:	fb04 1412 	mls	r4, r4, r2, r1
 8018e74:	4430      	add	r0, r6
 8018e76:	603c      	str	r4, [r7, #0]
 8018e78:	e7b6      	b.n	8018de8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08018e7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8018e7a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018e7e:	b085      	sub	sp, #20
 8018e80:	f1b0 0900 	subs.w	r9, r0, #0
 8018e84:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018e86:	461d      	mov	r5, r3
 8018e88:	bfbf      	itttt	lt
 8018e8a:	6823      	ldrlt	r3, [r4, #0]
 8018e8c:	425b      	neglt	r3, r3
 8018e8e:	f1c9 0900 	rsblt	r9, r9, #0
 8018e92:	6023      	strlt	r3, [r4, #0]
 8018e94:	bfb4      	ite	lt
 8018e96:	f04f 36ff 	movlt.w	r6, #4294967295
 8018e9a:	2601      	movge	r6, #1
 8018e9c:	2a00      	cmp	r2, #0
 8018e9e:	4617      	mov	r7, r2
 8018ea0:	da04      	bge.n	8018eac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8018ea2:	6823      	ldr	r3, [r4, #0]
 8018ea4:	425b      	negs	r3, r3
 8018ea6:	4257      	negs	r7, r2
 8018ea8:	4276      	negs	r6, r6
 8018eaa:	6023      	str	r3, [r4, #0]
 8018eac:	2d00      	cmp	r5, #0
 8018eae:	4638      	mov	r0, r7
 8018eb0:	bfba      	itte	lt
 8018eb2:	426d      	neglt	r5, r5
 8018eb4:	f04f 38ff 	movlt.w	r8, #4294967295
 8018eb8:	f04f 0801 	movge.w	r8, #1
 8018ebc:	f7ff ff64 	bl	8018d88 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018ec0:	ab03      	add	r3, sp, #12
 8018ec2:	e9cd 5300 	strd	r5, r3, [sp]
 8018ec6:	463a      	mov	r2, r7
 8018ec8:	4603      	mov	r3, r0
 8018eca:	4648      	mov	r0, r9
 8018ecc:	f7ff ff7a 	bl	8018dc4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018ed0:	6823      	ldr	r3, [r4, #0]
 8018ed2:	9a03      	ldr	r2, [sp, #12]
 8018ed4:	4546      	cmp	r6, r8
 8018ed6:	441a      	add	r2, r3
 8018ed8:	fb92 f3f5 	sdiv	r3, r2, r5
 8018edc:	4418      	add	r0, r3
 8018ede:	bf18      	it	ne
 8018ee0:	4240      	negne	r0, r0
 8018ee2:	fb05 2313 	mls	r3, r5, r3, r2
 8018ee6:	1c72      	adds	r2, r6, #1
 8018ee8:	6023      	str	r3, [r4, #0]
 8018eea:	d105      	bne.n	8018ef8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8018eec:	2b00      	cmp	r3, #0
 8018eee:	f1c3 0200 	rsb	r2, r3, #0
 8018ef2:	db0b      	blt.n	8018f0c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8018ef4:	6022      	str	r2, [r4, #0]
 8018ef6:	e006      	b.n	8018f06 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018ef8:	2e01      	cmp	r6, #1
 8018efa:	d104      	bne.n	8018f06 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018efc:	2b00      	cmp	r3, #0
 8018efe:	da02      	bge.n	8018f06 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018f00:	442b      	add	r3, r5
 8018f02:	3801      	subs	r0, #1
 8018f04:	6023      	str	r3, [r4, #0]
 8018f06:	b005      	add	sp, #20
 8018f08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018f0c:	3801      	subs	r0, #1
 8018f0e:	1b52      	subs	r2, r2, r5
 8018f10:	e7f0      	b.n	8018ef4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08018f14 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8018f14:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8018f18:	4c1c      	ldr	r4, [pc, #112]	; (8018f8c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8018f1a:	6807      	ldr	r7, [r0, #0]
 8018f1c:	69a3      	ldr	r3, [r4, #24]
 8018f1e:	4605      	mov	r5, r0
 8018f20:	b92b      	cbnz	r3, 8018f2e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8018f22:	6840      	ldr	r0, [r0, #4]
 8018f24:	e9c5 7000 	strd	r7, r0, [r5]
 8018f28:	b004      	add	sp, #16
 8018f2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018f2e:	68a2      	ldr	r2, [r4, #8]
 8018f30:	6820      	ldr	r0, [r4, #0]
 8018f32:	ae04      	add	r6, sp, #16
 8018f34:	f04f 0802 	mov.w	r8, #2
 8018f38:	fb93 f1f8 	sdiv	r1, r3, r8
 8018f3c:	440a      	add	r2, r1
 8018f3e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8018f42:	69e1      	ldr	r1, [r4, #28]
 8018f44:	9600      	str	r6, [sp, #0]
 8018f46:	463a      	mov	r2, r7
 8018f48:	f7ff ff97 	bl	8018e7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018f4c:	69a3      	ldr	r3, [r4, #24]
 8018f4e:	686a      	ldr	r2, [r5, #4]
 8018f50:	6a21      	ldr	r1, [r4, #32]
 8018f52:	9600      	str	r6, [sp, #0]
 8018f54:	4607      	mov	r7, r0
 8018f56:	6860      	ldr	r0, [r4, #4]
 8018f58:	f7ff ff8f 	bl	8018e7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018f5c:	6962      	ldr	r2, [r4, #20]
 8018f5e:	69a3      	ldr	r3, [r4, #24]
 8018f60:	fb93 f8f8 	sdiv	r8, r3, r8
 8018f64:	4442      	add	r2, r8
 8018f66:	9203      	str	r2, [sp, #12]
 8018f68:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8018f6a:	682a      	ldr	r2, [r5, #0]
 8018f6c:	9600      	str	r6, [sp, #0]
 8018f6e:	4407      	add	r7, r0
 8018f70:	68e0      	ldr	r0, [r4, #12]
 8018f72:	f7ff ff82 	bl	8018e7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018f76:	9600      	str	r6, [sp, #0]
 8018f78:	4680      	mov	r8, r0
 8018f7a:	69a3      	ldr	r3, [r4, #24]
 8018f7c:	686a      	ldr	r2, [r5, #4]
 8018f7e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8018f80:	6920      	ldr	r0, [r4, #16]
 8018f82:	f7ff ff7a 	bl	8018e7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018f86:	4440      	add	r0, r8
 8018f88:	e7cc      	b.n	8018f24 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8018f8a:	bf00      	nop
 8018f8c:	2001e1ec 	.word	0x2001e1ec

08018f90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8018f90:	4b07      	ldr	r3, [pc, #28]	; (8018fb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8018f92:	781b      	ldrb	r3, [r3, #0]
 8018f94:	2b01      	cmp	r3, #1
 8018f96:	d109      	bne.n	8018fac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8018f98:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018f9c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018fa0:	8003      	strh	r3, [r0, #0]
 8018fa2:	4b04      	ldr	r3, [pc, #16]	; (8018fb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8018fa4:	881b      	ldrh	r3, [r3, #0]
 8018fa6:	3b01      	subs	r3, #1
 8018fa8:	1a9b      	subs	r3, r3, r2
 8018faa:	800b      	strh	r3, [r1, #0]
 8018fac:	4770      	bx	lr
 8018fae:	bf00      	nop
 8018fb0:	2001e1b8 	.word	0x2001e1b8
 8018fb4:	2001e1b4 	.word	0x2001e1b4

08018fb8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8018fb8:	b510      	push	{r4, lr}
 8018fba:	4b07      	ldr	r3, [pc, #28]	; (8018fd8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8018fbc:	781b      	ldrb	r3, [r3, #0]
 8018fbe:	2b01      	cmp	r3, #1
 8018fc0:	d108      	bne.n	8018fd4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8018fc2:	4b06      	ldr	r3, [pc, #24]	; (8018fdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8018fc4:	880c      	ldrh	r4, [r1, #0]
 8018fc6:	881b      	ldrh	r3, [r3, #0]
 8018fc8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018fcc:	3b01      	subs	r3, #1
 8018fce:	1b1b      	subs	r3, r3, r4
 8018fd0:	8003      	strh	r3, [r0, #0]
 8018fd2:	800a      	strh	r2, [r1, #0]
 8018fd4:	bd10      	pop	{r4, pc}
 8018fd6:	bf00      	nop
 8018fd8:	2001e1b8 	.word	0x2001e1b8
 8018fdc:	2001e1b4 	.word	0x2001e1b4

08018fe0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8018fe0:	b510      	push	{r4, lr}
 8018fe2:	4b0a      	ldr	r3, [pc, #40]	; (801900c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8018fe4:	781b      	ldrb	r3, [r3, #0]
 8018fe6:	2b01      	cmp	r3, #1
 8018fe8:	d10e      	bne.n	8019008 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8018fea:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8018fee:	8843      	ldrh	r3, [r0, #2]
 8018ff0:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018ff4:	8044      	strh	r4, [r0, #2]
 8018ff6:	18ca      	adds	r2, r1, r3
 8018ff8:	4b05      	ldr	r3, [pc, #20]	; (8019010 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8018ffa:	881b      	ldrh	r3, [r3, #0]
 8018ffc:	1a9b      	subs	r3, r3, r2
 8018ffe:	8003      	strh	r3, [r0, #0]
 8019000:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8019004:	80c3      	strh	r3, [r0, #6]
 8019006:	8081      	strh	r1, [r0, #4]
 8019008:	bd10      	pop	{r4, pc}
 801900a:	bf00      	nop
 801900c:	2001e1b8 	.word	0x2001e1b8
 8019010:	2001e1b4 	.word	0x2001e1b4

08019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8019014:	4b08      	ldr	r3, [pc, #32]	; (8019038 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8019016:	781b      	ldrb	r3, [r3, #0]
 8019018:	2b01      	cmp	r3, #1
 801901a:	d10c      	bne.n	8019036 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801901c:	8803      	ldrh	r3, [r0, #0]
 801901e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8019022:	8842      	ldrh	r2, [r0, #2]
 8019024:	8002      	strh	r2, [r0, #0]
 8019026:	185a      	adds	r2, r3, r1
 8019028:	4b04      	ldr	r3, [pc, #16]	; (801903c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801902a:	881b      	ldrh	r3, [r3, #0]
 801902c:	1a9b      	subs	r3, r3, r2
 801902e:	8043      	strh	r3, [r0, #2]
 8019030:	88c3      	ldrh	r3, [r0, #6]
 8019032:	8083      	strh	r3, [r0, #4]
 8019034:	80c1      	strh	r1, [r0, #6]
 8019036:	4770      	bx	lr
 8019038:	2001e1b8 	.word	0x2001e1b8
 801903c:	2001e1b4 	.word	0x2001e1b4

08019040 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8019040:	b510      	push	{r4, lr}
 8019042:	4b07      	ldr	r3, [pc, #28]	; (8019060 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8019044:	781b      	ldrb	r3, [r3, #0]
 8019046:	2b01      	cmp	r3, #1
 8019048:	d108      	bne.n	801905c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801904a:	f9b1 3000 	ldrsh.w	r3, [r1]
 801904e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8019052:	8003      	strh	r3, [r0, #0]
 8019054:	8893      	ldrh	r3, [r2, #4]
 8019056:	3b01      	subs	r3, #1
 8019058:	1b1b      	subs	r3, r3, r4
 801905a:	800b      	strh	r3, [r1, #0]
 801905c:	bd10      	pop	{r4, pc}
 801905e:	bf00      	nop
 8019060:	2001e1b8 	.word	0x2001e1b8

08019064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8019064:	b510      	push	{r4, lr}
 8019066:	4b0a      	ldr	r3, [pc, #40]	; (8019090 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8019068:	781b      	ldrb	r3, [r3, #0]
 801906a:	2b01      	cmp	r3, #1
 801906c:	460a      	mov	r2, r1
 801906e:	d10d      	bne.n	801908c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8019070:	8881      	ldrh	r1, [r0, #4]
 8019072:	8803      	ldrh	r3, [r0, #0]
 8019074:	440b      	add	r3, r1
 8019076:	4601      	mov	r1, r0
 8019078:	3b01      	subs	r3, #1
 801907a:	f821 3b02 	strh.w	r3, [r1], #2
 801907e:	f7ff ffdf 	bl	8019040 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8019082:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8019086:	88c2      	ldrh	r2, [r0, #6]
 8019088:	8082      	strh	r2, [r0, #4]
 801908a:	80c3      	strh	r3, [r0, #6]
 801908c:	bd10      	pop	{r4, pc}
 801908e:	bf00      	nop
 8019090:	2001e1b8 	.word	0x2001e1b8

08019094 <_ZN8touchgfx11Application13requestRedrawEv>:
 8019094:	4b06      	ldr	r3, [pc, #24]	; (80190b0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8019096:	f9b3 2000 	ldrsh.w	r2, [r3]
 801909a:	4b06      	ldr	r3, [pc, #24]	; (80190b4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801909c:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 80190a0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80190a4:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 80190a8:	2100      	movs	r1, #0
 80190aa:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 80190ae:	4770      	bx	lr
 80190b0:	2001e1b4 	.word	0x2001e1b4
 80190b4:	2001e1b6 	.word	0x2001e1b6

080190b8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80190b8:	4b03      	ldr	r3, [pc, #12]	; (80190c8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80190ba:	6818      	ldr	r0, [r3, #0]
 80190bc:	b110      	cbz	r0, 80190c4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80190be:	6803      	ldr	r3, [r0, #0]
 80190c0:	699b      	ldr	r3, [r3, #24]
 80190c2:	4718      	bx	r3
 80190c4:	4770      	bx	lr
 80190c6:	bf00      	nop
 80190c8:	2001e21c 	.word	0x2001e21c

080190cc <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80190cc:	4770      	bx	lr
	...

080190d0 <_ZN8touchgfx11Application4drawEv>:
 80190d0:	b507      	push	{r0, r1, r2, lr}
 80190d2:	4b09      	ldr	r3, [pc, #36]	; (80190f8 <_ZN8touchgfx11Application4drawEv+0x28>)
 80190d4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80190d8:	4b08      	ldr	r3, [pc, #32]	; (80190fc <_ZN8touchgfx11Application4drawEv+0x2c>)
 80190da:	f8ad 2004 	strh.w	r2, [sp, #4]
 80190de:	f9b3 3000 	ldrsh.w	r3, [r3]
 80190e2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80190e6:	6803      	ldr	r3, [r0, #0]
 80190e8:	2100      	movs	r1, #0
 80190ea:	9100      	str	r1, [sp, #0]
 80190ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80190ee:	4669      	mov	r1, sp
 80190f0:	4798      	blx	r3
 80190f2:	b003      	add	sp, #12
 80190f4:	f85d fb04 	ldr.w	pc, [sp], #4
 80190f8:	2001e1b4 	.word	0x2001e1b4
 80190fc:	2001e1b6 	.word	0x2001e1b6

08019100 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8019100:	4b03      	ldr	r3, [pc, #12]	; (8019110 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8019102:	6818      	ldr	r0, [r3, #0]
 8019104:	b110      	cbz	r0, 801910c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8019106:	6803      	ldr	r3, [r0, #0]
 8019108:	69db      	ldr	r3, [r3, #28]
 801910a:	4718      	bx	r3
 801910c:	4770      	bx	lr
 801910e:	bf00      	nop
 8019110:	2001e21c 	.word	0x2001e21c

08019114 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8019114:	4b03      	ldr	r3, [pc, #12]	; (8019124 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8019116:	6818      	ldr	r0, [r3, #0]
 8019118:	b110      	cbz	r0, 8019120 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801911a:	6803      	ldr	r3, [r0, #0]
 801911c:	6a1b      	ldr	r3, [r3, #32]
 801911e:	4718      	bx	r3
 8019120:	4770      	bx	lr
 8019122:	bf00      	nop
 8019124:	2001e21c 	.word	0x2001e21c

08019128 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8019128:	2300      	movs	r3, #0
 801912a:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 801912e:	4770      	bx	lr

08019130 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8019130:	4b03      	ldr	r3, [pc, #12]	; (8019140 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8019132:	6818      	ldr	r0, [r3, #0]
 8019134:	b110      	cbz	r0, 801913c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8019136:	6803      	ldr	r3, [r0, #0]
 8019138:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801913a:	4718      	bx	r3
 801913c:	4770      	bx	lr
 801913e:	bf00      	nop
 8019140:	2001e21c 	.word	0x2001e21c

08019144 <_ZN8touchgfx11ApplicationD1Ev>:
 8019144:	4770      	bx	lr

08019146 <_ZN8touchgfx11ApplicationD0Ev>:
 8019146:	b510      	push	{r4, lr}
 8019148:	f44f 719c 	mov.w	r1, #312	; 0x138
 801914c:	4604      	mov	r4, r0
 801914e:	f012 f804 	bl	802b15a <_ZdlPvj>
 8019152:	4620      	mov	r0, r4
 8019154:	bd10      	pop	{r4, pc}
	...

08019158 <_ZN8touchgfx11Application15handleTickEventEv>:
 8019158:	b570      	push	{r4, r5, r6, lr}
 801915a:	4d38      	ldr	r5, [pc, #224]	; (801923c <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 801915c:	4604      	mov	r4, r0
 801915e:	6828      	ldr	r0, [r5, #0]
 8019160:	b140      	cbz	r0, 8019174 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8019162:	7a03      	ldrb	r3, [r0, #8]
 8019164:	b933      	cbnz	r3, 8019174 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8019166:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 801916a:	6803      	ldr	r3, [r0, #0]
 801916c:	689b      	ldr	r3, [r3, #8]
 801916e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019172:	4718      	bx	r3
 8019174:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8019178:	b97b      	cbnz	r3, 801919a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801917a:	b170      	cbz	r0, 801919a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801917c:	7a03      	ldrb	r3, [r0, #8]
 801917e:	b163      	cbz	r3, 801919a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8019180:	4b2f      	ldr	r3, [pc, #188]	; (8019240 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 8019182:	6818      	ldr	r0, [r3, #0]
 8019184:	b110      	cbz	r0, 801918c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8019186:	6803      	ldr	r3, [r0, #0]
 8019188:	691b      	ldr	r3, [r3, #16]
 801918a:	4798      	blx	r3
 801918c:	6828      	ldr	r0, [r5, #0]
 801918e:	6803      	ldr	r3, [r0, #0]
 8019190:	68db      	ldr	r3, [r3, #12]
 8019192:	4798      	blx	r3
 8019194:	2301      	movs	r3, #1
 8019196:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 801919a:	2500      	movs	r5, #0
 801919c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 80191a0:	42a8      	cmp	r0, r5
 80191a2:	dd0c      	ble.n	80191be <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 80191a4:	1963      	adds	r3, r4, r5
 80191a6:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 80191aa:	b132      	cbz	r2, 80191ba <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 80191ac:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80191b0:	4413      	add	r3, r2
 80191b2:	6858      	ldr	r0, [r3, #4]
 80191b4:	6803      	ldr	r3, [r0, #0]
 80191b6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80191b8:	4798      	blx	r3
 80191ba:	3501      	adds	r5, #1
 80191bc:	e7ee      	b.n	801919c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 80191be:	2300      	movs	r3, #0
 80191c0:	461a      	mov	r2, r3
 80191c2:	4298      	cmp	r0, r3
 80191c4:	d10f      	bne.n	80191e6 <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 80191c6:	1d25      	adds	r5, r4, #4
 80191c8:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 80191cc:	4291      	cmp	r1, r2
 80191ce:	dd2d      	ble.n	801922c <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 80191d0:	1e48      	subs	r0, r1, #1
 80191d2:	b280      	uxth	r0, r0
 80191d4:	4288      	cmp	r0, r1
 80191d6:	d31a      	bcc.n	801920e <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 80191d8:	4b1a      	ldr	r3, [pc, #104]	; (8019244 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 80191da:	4a1b      	ldr	r2, [pc, #108]	; (8019248 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 80191dc:	481b      	ldr	r0, [pc, #108]	; (801924c <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 80191de:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 80191e2:	f012 ff07 	bl	802bff4 <__assert_func>
 80191e6:	18e1      	adds	r1, r4, r3
 80191e8:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 80191ec:	b16d      	cbz	r5, 801920a <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 80191ee:	429a      	cmp	r2, r3
 80191f0:	d00a      	beq.n	8019208 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 80191f2:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 80191f6:	4431      	add	r1, r6
 80191f8:	684e      	ldr	r6, [r1, #4]
 80191fa:	b291      	uxth	r1, r2
 80191fc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8019200:	604e      	str	r6, [r1, #4]
 8019202:	18a1      	adds	r1, r4, r2
 8019204:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8019208:	3201      	adds	r2, #1
 801920a:	3301      	adds	r3, #1
 801920c:	e7d9      	b.n	80191c2 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 801920e:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 8019212:	3304      	adds	r3, #4
 8019214:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8019218:	428b      	cmp	r3, r1
 801921a:	d004      	beq.n	8019226 <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 801921c:	f853 6f04 	ldr.w	r6, [r3, #4]!
 8019220:	f843 6c04 	str.w	r6, [r3, #-4]
 8019224:	e7f8      	b.n	8019218 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 8019226:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 801922a:	e7cd      	b.n	80191c8 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 801922c:	4b04      	ldr	r3, [pc, #16]	; (8019240 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 801922e:	6818      	ldr	r0, [r3, #0]
 8019230:	b110      	cbz	r0, 8019238 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 8019232:	6803      	ldr	r3, [r0, #0]
 8019234:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019236:	e79a      	b.n	801916e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8019238:	bd70      	pop	{r4, r5, r6, pc}
 801923a:	bf00      	nop
 801923c:	2001e220 	.word	0x2001e220
 8019240:	2001e21c 	.word	0x2001e21c
 8019244:	08034c81 	.word	0x08034c81
 8019248:	08034ee1 	.word	0x08034ee1
 801924c:	08034c8f 	.word	0x08034c8f

08019250 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8019250:	b570      	push	{r4, r5, r6, lr}
 8019252:	4606      	mov	r6, r0
 8019254:	460c      	mov	r4, r1
 8019256:	b929      	cbnz	r1, 8019264 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 8019258:	4b0c      	ldr	r3, [pc, #48]	; (801928c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 801925a:	4a0d      	ldr	r2, [pc, #52]	; (8019290 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 801925c:	480d      	ldr	r0, [pc, #52]	; (8019294 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 801925e:	215e      	movs	r1, #94	; 0x5e
 8019260:	f012 fec8 	bl	802bff4 <__assert_func>
 8019264:	4d0c      	ldr	r5, [pc, #48]	; (8019298 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 8019266:	2300      	movs	r3, #0
 8019268:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801926c:	6828      	ldr	r0, [r5, #0]
 801926e:	b110      	cbz	r0, 8019276 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 8019270:	6803      	ldr	r3, [r0, #0]
 8019272:	695b      	ldr	r3, [r3, #20]
 8019274:	4798      	blx	r3
 8019276:	602c      	str	r4, [r5, #0]
 8019278:	6823      	ldr	r3, [r4, #0]
 801927a:	4620      	mov	r0, r4
 801927c:	68db      	ldr	r3, [r3, #12]
 801927e:	4798      	blx	r3
 8019280:	6833      	ldr	r3, [r6, #0]
 8019282:	4630      	mov	r0, r6
 8019284:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019286:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801928a:	4718      	bx	r3
 801928c:	08034c4d 	.word	0x08034c4d
 8019290:	08034d5c 	.word	0x08034d5c
 8019294:	08034c57 	.word	0x08034c57
 8019298:	2001e21c 	.word	0x2001e21c

0801929c <_ZN8touchgfx4Rect10restrictToEss>:
 801929c:	f9b0 3000 	ldrsh.w	r3, [r0]
 80192a0:	2b00      	cmp	r3, #0
 80192a2:	b510      	push	{r4, lr}
 80192a4:	da04      	bge.n	80192b0 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80192a6:	8884      	ldrh	r4, [r0, #4]
 80192a8:	4423      	add	r3, r4
 80192aa:	8083      	strh	r3, [r0, #4]
 80192ac:	2300      	movs	r3, #0
 80192ae:	8003      	strh	r3, [r0, #0]
 80192b0:	f9b0 4000 	ldrsh.w	r4, [r0]
 80192b4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80192b8:	1b09      	subs	r1, r1, r4
 80192ba:	428b      	cmp	r3, r1
 80192bc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80192c0:	bfc8      	it	gt
 80192c2:	8081      	strhgt	r1, [r0, #4]
 80192c4:	2b00      	cmp	r3, #0
 80192c6:	da04      	bge.n	80192d2 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80192c8:	88c1      	ldrh	r1, [r0, #6]
 80192ca:	440b      	add	r3, r1
 80192cc:	80c3      	strh	r3, [r0, #6]
 80192ce:	2300      	movs	r3, #0
 80192d0:	8043      	strh	r3, [r0, #2]
 80192d2:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80192d6:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80192da:	1a52      	subs	r2, r2, r1
 80192dc:	4293      	cmp	r3, r2
 80192de:	bfc8      	it	gt
 80192e0:	80c2      	strhgt	r2, [r0, #6]
 80192e2:	bd10      	pop	{r4, pc}

080192e4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80192e4:	b510      	push	{r4, lr}
 80192e6:	4b10      	ldr	r3, [pc, #64]	; (8019328 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80192e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80192ec:	4b0f      	ldr	r3, [pc, #60]	; (801932c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80192ee:	460c      	mov	r4, r1
 80192f0:	4620      	mov	r0, r4
 80192f2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80192f6:	f7ff ffd1 	bl	801929c <_ZN8touchgfx4Rect10restrictToEss>
 80192fa:	4b0d      	ldr	r3, [pc, #52]	; (8019330 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80192fc:	6818      	ldr	r0, [r3, #0]
 80192fe:	b190      	cbz	r0, 8019326 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8019300:	6803      	ldr	r3, [r0, #0]
 8019302:	4621      	mov	r1, r4
 8019304:	689b      	ldr	r3, [r3, #8]
 8019306:	4798      	blx	r3
 8019308:	4b0a      	ldr	r3, [pc, #40]	; (8019334 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801930a:	6818      	ldr	r0, [r3, #0]
 801930c:	b118      	cbz	r0, 8019316 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801930e:	6803      	ldr	r3, [r0, #0]
 8019310:	4621      	mov	r1, r4
 8019312:	689b      	ldr	r3, [r3, #8]
 8019314:	4798      	blx	r3
 8019316:	4b08      	ldr	r3, [pc, #32]	; (8019338 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8019318:	6818      	ldr	r0, [r3, #0]
 801931a:	6803      	ldr	r3, [r0, #0]
 801931c:	4621      	mov	r1, r4
 801931e:	69db      	ldr	r3, [r3, #28]
 8019320:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019324:	4718      	bx	r3
 8019326:	bd10      	pop	{r4, pc}
 8019328:	2001e1b6 	.word	0x2001e1b6
 801932c:	2001e1b4 	.word	0x2001e1b4
 8019330:	2001e21c 	.word	0x2001e21c
 8019334:	2001e218 	.word	0x2001e218
 8019338:	2001e1c0 	.word	0x2001e1c0

0801933c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801933c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801933e:	4606      	mov	r6, r0
 8019340:	4608      	mov	r0, r1
 8019342:	460f      	mov	r7, r1
 8019344:	f7f8 ff29 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019348:	b9e8      	cbnz	r0, 8019386 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801934a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801934e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8019352:	42a5      	cmp	r5, r4
 8019354:	db17      	blt.n	8019386 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8019356:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801935a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801935e:	429a      	cmp	r2, r3
 8019360:	db11      	blt.n	8019386 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8019362:	88b9      	ldrh	r1, [r7, #4]
 8019364:	440d      	add	r5, r1
 8019366:	88b1      	ldrh	r1, [r6, #4]
 8019368:	440c      	add	r4, r1
 801936a:	b22d      	sxth	r5, r5
 801936c:	b224      	sxth	r4, r4
 801936e:	42a5      	cmp	r5, r4
 8019370:	dc09      	bgt.n	8019386 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8019372:	88f8      	ldrh	r0, [r7, #6]
 8019374:	4410      	add	r0, r2
 8019376:	88f2      	ldrh	r2, [r6, #6]
 8019378:	4413      	add	r3, r2
 801937a:	b200      	sxth	r0, r0
 801937c:	b21b      	sxth	r3, r3
 801937e:	4298      	cmp	r0, r3
 8019380:	bfcc      	ite	gt
 8019382:	2000      	movgt	r0, #0
 8019384:	2001      	movle	r0, #1
 8019386:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08019388 <_ZN8touchgfx11Application11getInstanceEv>:
 8019388:	4b01      	ldr	r3, [pc, #4]	; (8019390 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801938a:	6818      	ldr	r0, [r3, #0]
 801938c:	4770      	bx	lr
 801938e:	bf00      	nop
 8019390:	2001e22c 	.word	0x2001e22c

08019394 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 8019394:	b570      	push	{r4, r5, r6, lr}
 8019396:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 801939a:	1d04      	adds	r4, r0, #4
 801939c:	2200      	movs	r2, #0
 801939e:	b295      	uxth	r5, r2
 80193a0:	42ab      	cmp	r3, r5
 80193a2:	d90f      	bls.n	80193c4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 80193a4:	f854 6b04 	ldr.w	r6, [r4], #4
 80193a8:	428e      	cmp	r6, r1
 80193aa:	4615      	mov	r5, r2
 80193ac:	f102 0201 	add.w	r2, r2, #1
 80193b0:	d1f5      	bne.n	801939e <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 80193b2:	4428      	add	r0, r5
 80193b4:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 80193b8:	2bff      	cmp	r3, #255	; 0xff
 80193ba:	d002      	beq.n	80193c2 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 80193bc:	3301      	adds	r3, #1
 80193be:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 80193c2:	bd70      	pop	{r4, r5, r6, pc}
 80193c4:	2b20      	cmp	r3, #32
 80193c6:	d106      	bne.n	80193d6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 80193c8:	4b08      	ldr	r3, [pc, #32]	; (80193ec <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 80193ca:	4a09      	ldr	r2, [pc, #36]	; (80193f0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 80193cc:	4809      	ldr	r0, [pc, #36]	; (80193f4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 80193ce:	f240 2149 	movw	r1, #585	; 0x249
 80193d2:	f012 fe0f 	bl	802bff4 <__assert_func>
 80193d6:	18c2      	adds	r2, r0, r3
 80193d8:	2401      	movs	r4, #1
 80193da:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 80193de:	191a      	adds	r2, r3, r4
 80193e0:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 80193e4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80193e8:	6041      	str	r1, [r0, #4]
 80193ea:	e7ea      	b.n	80193c2 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 80193ec:	08034cb8 	.word	0x08034cb8
 80193f0:	08034da0 	.word	0x08034da0
 80193f4:	08034c57 	.word	0x08034c57

080193f8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 80193f8:	b570      	push	{r4, r5, r6, lr}
 80193fa:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 80193fe:	1d04      	adds	r4, r0, #4
 8019400:	2300      	movs	r3, #0
 8019402:	b29a      	uxth	r2, r3
 8019404:	4296      	cmp	r6, r2
 8019406:	d90a      	bls.n	801941e <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 8019408:	f854 2b04 	ldr.w	r2, [r4], #4
 801940c:	428a      	cmp	r2, r1
 801940e:	d107      	bne.n	8019420 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 8019410:	18c5      	adds	r5, r0, r3
 8019412:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 8019416:	b11a      	cbz	r2, 8019420 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 8019418:	3a01      	subs	r2, #1
 801941a:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 801941e:	bd70      	pop	{r4, r5, r6, pc}
 8019420:	3301      	adds	r3, #1
 8019422:	e7ee      	b.n	8019402 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

08019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8019424:	2300      	movs	r3, #0
 8019426:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801942a:	f100 0288 	add.w	r2, r0, #136	; 0x88
 801942e:	30a8      	adds	r0, #168	; 0xa8
 8019430:	f802 3b01 	strb.w	r3, [r2], #1
 8019434:	4282      	cmp	r2, r0
 8019436:	d1fb      	bne.n	8019430 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8019438:	4770      	bx	lr
	...

0801943c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 801943c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801943e:	4b10      	ldr	r3, [pc, #64]	; (8019480 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8019440:	781b      	ldrb	r3, [r3, #0]
 8019442:	4605      	mov	r5, r0
 8019444:	b1d3      	cbz	r3, 801947c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8019446:	4b0f      	ldr	r3, [pc, #60]	; (8019484 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8019448:	4f0f      	ldr	r7, [pc, #60]	; (8019488 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801944a:	881c      	ldrh	r4, [r3, #0]
 801944c:	f100 06ea 	add.w	r6, r0, #234	; 0xea
 8019450:	f8b5 312a 	ldrh.w	r3, [r5, #298]	; 0x12a
 8019454:	42a3      	cmp	r3, r4
 8019456:	d90e      	bls.n	8019476 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8019458:	683b      	ldr	r3, [r7, #0]
 801945a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801945e:	b10a      	cbz	r2, 8019464 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8019460:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8019462:	b900      	cbnz	r0, 8019466 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8019464:	6898      	ldr	r0, [r3, #8]
 8019466:	6803      	ldr	r3, [r0, #0]
 8019468:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 801946c:	69db      	ldr	r3, [r3, #28]
 801946e:	3401      	adds	r4, #1
 8019470:	4798      	blx	r3
 8019472:	b2a4      	uxth	r4, r4
 8019474:	e7ec      	b.n	8019450 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8019476:	2300      	movs	r3, #0
 8019478:	f8a5 312a 	strh.w	r3, [r5, #298]	; 0x12a
 801947c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801947e:	bf00      	nop
 8019480:	2001e1be 	.word	0x2001e1be
 8019484:	2000009c 	.word	0x2000009c
 8019488:	2001e1c0 	.word	0x2001e1c0

0801948c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801948c:	4603      	mov	r3, r0
 801948e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8019492:	2200      	movs	r2, #0
 8019494:	801a      	strh	r2, [r3, #0]
 8019496:	805a      	strh	r2, [r3, #2]
 8019498:	809a      	strh	r2, [r3, #4]
 801949a:	80da      	strh	r2, [r3, #6]
 801949c:	3308      	adds	r3, #8
 801949e:	428b      	cmp	r3, r1
 80194a0:	d1f8      	bne.n	8019494 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80194a2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80194a6:	4770      	bx	lr

080194a8 <_ZN8touchgfx11ApplicationC1Ev>:
 80194a8:	b570      	push	{r4, r5, r6, lr}
 80194aa:	4b19      	ldr	r3, [pc, #100]	; (8019510 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 80194ac:	6003      	str	r3, [r0, #0]
 80194ae:	2500      	movs	r5, #0
 80194b0:	4604      	mov	r4, r0
 80194b2:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80194b6:	30a8      	adds	r0, #168	; 0xa8
 80194b8:	f7ff ffe8 	bl	801948c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80194bc:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80194c0:	f7ff ffe4 	bl	801948c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80194c4:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80194c8:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 80194cc:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80194d0:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80194d4:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 80194d8:	490e      	ldr	r1, [pc, #56]	; (8019514 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80194da:	480f      	ldr	r0, [pc, #60]	; (8019518 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 80194dc:	4e0f      	ldr	r6, [pc, #60]	; (801951c <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 80194de:	f00f f911 	bl	8028704 <CRC_Lock>
 80194e2:	4b0f      	ldr	r3, [pc, #60]	; (8019520 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80194e4:	b158      	cbz	r0, 80194fe <_ZN8touchgfx11ApplicationC1Ev+0x56>
 80194e6:	801d      	strh	r5, [r3, #0]
 80194e8:	4a0e      	ldr	r2, [pc, #56]	; (8019524 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80194ea:	2300      	movs	r3, #0
 80194ec:	6013      	str	r3, [r2, #0]
 80194ee:	4a0e      	ldr	r2, [pc, #56]	; (8019528 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80194f0:	6033      	str	r3, [r6, #0]
 80194f2:	4620      	mov	r0, r4
 80194f4:	6013      	str	r3, [r2, #0]
 80194f6:	f7ff ff95 	bl	8019424 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 80194fa:	4620      	mov	r0, r4
 80194fc:	bd70      	pop	{r4, r5, r6, pc}
 80194fe:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8019502:	2002      	movs	r0, #2
 8019504:	801a      	strh	r2, [r3, #0]
 8019506:	6030      	str	r0, [r6, #0]
 8019508:	f001 fae6 	bl	801aad8 <_ZN8touchgfx6Screen4drawEv>
 801950c:	e7ec      	b.n	80194e8 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 801950e:	bf00      	nop
 8019510:	08034d18 	.word	0x08034d18
 8019514:	b5e8b5cd 	.word	0xb5e8b5cd
 8019518:	f407a5c2 	.word	0xf407a5c2
 801951c:	2001e21c 	.word	0x2001e21c
 8019520:	2000009c 	.word	0x2000009c
 8019524:	2001e22c 	.word	0x2001e22c
 8019528:	2001e220 	.word	0x2001e220

0801952c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801952c:	b510      	push	{r4, lr}
 801952e:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8019532:	428b      	cmp	r3, r1
 8019534:	d806      	bhi.n	8019544 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 8019536:	4b0b      	ldr	r3, [pc, #44]	; (8019564 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 8019538:	4a0b      	ldr	r2, [pc, #44]	; (8019568 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 801953a:	480c      	ldr	r0, [pc, #48]	; (801956c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 801953c:	f240 11dd 	movw	r1, #477	; 0x1dd
 8019540:	f012 fd58 	bl	802bff4 <__assert_func>
 8019544:	3b01      	subs	r3, #1
 8019546:	b29b      	uxth	r3, r3
 8019548:	428b      	cmp	r3, r1
 801954a:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801954e:	d908      	bls.n	8019562 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 8019550:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8019554:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8019558:	681a      	ldr	r2, [r3, #0]
 801955a:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801955e:	685a      	ldr	r2, [r3, #4]
 8019560:	6062      	str	r2, [r4, #4]
 8019562:	bd10      	pop	{r4, pc}
 8019564:	08034c81 	.word	0x08034c81
 8019568:	08034de5 	.word	0x08034de5
 801956c:	08034c8f 	.word	0x08034c8f

08019570 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 8019570:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8019572:	466b      	mov	r3, sp
 8019574:	e883 0006 	stmia.w	r3, {r1, r2}
 8019578:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 801957c:	2a07      	cmp	r2, #7
 801957e:	4604      	mov	r4, r0
 8019580:	d906      	bls.n	8019590 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 8019582:	4b09      	ldr	r3, [pc, #36]	; (80195a8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 8019584:	4a09      	ldr	r2, [pc, #36]	; (80195ac <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 8019586:	480a      	ldr	r0, [pc, #40]	; (80195b0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 8019588:	f240 11a3 	movw	r1, #419	; 0x1a3
 801958c:	f012 fd32 	bl	802bff4 <__assert_func>
 8019590:	1c51      	adds	r1, r2, #1
 8019592:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8019596:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 801959a:	cb03      	ldmia	r3!, {r0, r1}
 801959c:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 80195a0:	6069      	str	r1, [r5, #4]
 80195a2:	b003      	add	sp, #12
 80195a4:	bd30      	pop	{r4, r5, pc}
 80195a6:	bf00      	nop
 80195a8:	08034ce0 	.word	0x08034ce0
 80195ac:	08034e7b 	.word	0x08034e7b
 80195b0:	08034c8f 	.word	0x08034c8f

080195b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80195b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80195b8:	4b94      	ldr	r3, [pc, #592]	; (801980c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 80195ba:	b08d      	sub	sp, #52	; 0x34
 80195bc:	ac08      	add	r4, sp, #32
 80195be:	e884 0006 	stmia.w	r4, {r1, r2}
 80195c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80195c6:	4b92      	ldr	r3, [pc, #584]	; (8019810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 80195c8:	4683      	mov	fp, r0
 80195ca:	f9b3 1000 	ldrsh.w	r1, [r3]
 80195ce:	4620      	mov	r0, r4
 80195d0:	f7ff fe64 	bl	801929c <_ZN8touchgfx4Rect10restrictToEss>
 80195d4:	4620      	mov	r0, r4
 80195d6:	f7f8 fde0 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 80195da:	2800      	cmp	r0, #0
 80195dc:	d16a      	bne.n	80196b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80195de:	9402      	str	r4, [sp, #8]
 80195e0:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80195e4:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80195e8:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80195ec:	2400      	movs	r4, #0
 80195ee:	9301      	str	r3, [sp, #4]
 80195f0:	36a0      	adds	r6, #160	; 0xa0
 80195f2:	42a5      	cmp	r5, r4
 80195f4:	d00d      	beq.n	8019612 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 80195f6:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 80195fa:	9802      	ldr	r0, [sp, #8]
 80195fc:	f7ff fe9e 	bl	801933c <_ZNK8touchgfx4Rect8includesERKS0_>
 8019600:	b128      	cbz	r0, 801960e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8019602:	1e69      	subs	r1, r5, #1
 8019604:	1b09      	subs	r1, r1, r4
 8019606:	b289      	uxth	r1, r1
 8019608:	9801      	ldr	r0, [sp, #4]
 801960a:	f7ff ff8f 	bl	801952c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801960e:	3401      	adds	r4, #1
 8019610:	e7ef      	b.n	80195f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 8019612:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8019616:	9703      	str	r7, [sp, #12]
 8019618:	1e7b      	subs	r3, r7, #1
 801961a:	9300      	str	r3, [sp, #0]
 801961c:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 8019620:	2400      	movs	r4, #0
 8019622:	4655      	mov	r5, sl
 8019624:	9704      	str	r7, [sp, #16]
 8019626:	4626      	mov	r6, r4
 8019628:	9b04      	ldr	r3, [sp, #16]
 801962a:	2b00      	cmp	r3, #0
 801962c:	d078      	beq.n	8019720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 801962e:	9902      	ldr	r1, [sp, #8]
 8019630:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8019634:	f7fa ffa8 	bl	8014588 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019638:	b360      	cbz	r0, 8019694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801963a:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801963e:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8019642:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 8019646:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 801964a:	45e6      	cmp	lr, ip
 801964c:	db35      	blt.n	80196ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801964e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8019652:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8019656:	4472      	add	r2, lr
 8019658:	4463      	add	r3, ip
 801965a:	b212      	sxth	r2, r2
 801965c:	b21b      	sxth	r3, r3
 801965e:	429a      	cmp	r2, r3
 8019660:	dc2b      	bgt.n	80196ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8019662:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8019666:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801966a:	fa1f f288 	uxth.w	r2, r8
 801966e:	4413      	add	r3, r2
 8019670:	b29b      	uxth	r3, r3
 8019672:	45c1      	cmp	r9, r8
 8019674:	fa0f fe83 	sxth.w	lr, r3
 8019678:	fa1f fc89 	uxth.w	ip, r9
 801967c:	db0f      	blt.n	801969e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801967e:	eba3 030c 	sub.w	r3, r3, ip
 8019682:	1ac9      	subs	r1, r1, r3
 8019684:	b209      	sxth	r1, r1
 8019686:	2900      	cmp	r1, #0
 8019688:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 801968c:	dd12      	ble.n	80196b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801968e:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 8019692:	4604      	mov	r4, r0
 8019694:	9b04      	ldr	r3, [sp, #16]
 8019696:	3b01      	subs	r3, #1
 8019698:	9304      	str	r3, [sp, #16]
 801969a:	3d08      	subs	r5, #8
 801969c:	e7c4      	b.n	8019628 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 801969e:	4461      	add	r1, ip
 80196a0:	b209      	sxth	r1, r1
 80196a2:	4571      	cmp	r1, lr
 80196a4:	dc3a      	bgt.n	801971c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80196a6:	eba2 020c 	sub.w	r2, r2, ip
 80196aa:	b212      	sxth	r2, r2
 80196ac:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 80196b0:	2a00      	cmp	r2, #0
 80196b2:	dcee      	bgt.n	8019692 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80196b4:	b00d      	add	sp, #52	; 0x34
 80196b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80196ba:	45c1      	cmp	r9, r8
 80196bc:	db2e      	blt.n	801971c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80196be:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 80196c2:	4499      	add	r9, r3
 80196c4:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80196c8:	4498      	add	r8, r3
 80196ca:	fa0f f989 	sxth.w	r9, r9
 80196ce:	fa0f f888 	sxth.w	r8, r8
 80196d2:	45c1      	cmp	r9, r8
 80196d4:	dc22      	bgt.n	801971c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80196d6:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80196da:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80196de:	fa1f f28c 	uxth.w	r2, ip
 80196e2:	4413      	add	r3, r2
 80196e4:	b29b      	uxth	r3, r3
 80196e6:	45e6      	cmp	lr, ip
 80196e8:	fa1f f88e 	uxth.w	r8, lr
 80196ec:	fa0f f983 	sxth.w	r9, r3
 80196f0:	db0a      	blt.n	8019708 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 80196f2:	eba3 0308 	sub.w	r3, r3, r8
 80196f6:	1ac9      	subs	r1, r1, r3
 80196f8:	b209      	sxth	r1, r1
 80196fa:	2900      	cmp	r1, #0
 80196fc:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8019700:	ddd8      	ble.n	80196b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019702:	f8ad 9020 	strh.w	r9, [sp, #32]
 8019706:	e7c4      	b.n	8019692 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8019708:	4441      	add	r1, r8
 801970a:	b209      	sxth	r1, r1
 801970c:	4549      	cmp	r1, r9
 801970e:	dc05      	bgt.n	801971c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8019710:	eba2 0208 	sub.w	r2, r2, r8
 8019714:	b212      	sxth	r2, r2
 8019716:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 801971a:	e7c9      	b.n	80196b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 801971c:	4606      	mov	r6, r0
 801971e:	e7b9      	b.n	8019694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8019720:	2c00      	cmp	r4, #0
 8019722:	f47f af7d 	bne.w	8019620 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 8019726:	2e00      	cmp	r6, #0
 8019728:	f000 81e1 	beq.w	8019aee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801972c:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 8019730:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 8019734:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8019738:	b2b9      	uxth	r1, r7
 801973a:	9104      	str	r1, [sp, #16]
 801973c:	9804      	ldr	r0, [sp, #16]
 801973e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8019742:	4401      	add	r1, r0
 8019744:	b2b3      	uxth	r3, r6
 8019746:	b289      	uxth	r1, r1
 8019748:	441a      	add	r2, r3
 801974a:	9105      	str	r1, [sp, #20]
 801974c:	b292      	uxth	r2, r2
 801974e:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 8019752:	fa0f f882 	sxth.w	r8, r2
 8019756:	4655      	mov	r5, sl
 8019758:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801975c:	9b03      	ldr	r3, [sp, #12]
 801975e:	2b00      	cmp	r3, #0
 8019760:	d058      	beq.n	8019814 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 8019762:	9902      	ldr	r1, [sp, #8]
 8019764:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8019768:	f7fa ff0e 	bl	8014588 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801976c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8019770:	b1d8      	cbz	r0, 80197aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8019772:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8019776:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 801977a:	4576      	cmp	r6, lr
 801977c:	dc26      	bgt.n	80197cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 801977e:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8019782:	44f4      	add	ip, lr
 8019784:	fa0f fc8c 	sxth.w	ip, ip
 8019788:	45e0      	cmp	r8, ip
 801978a:	db1f      	blt.n	80197cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 801978c:	428f      	cmp	r7, r1
 801978e:	fa1f fc81 	uxth.w	ip, r1
 8019792:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8019796:	dc0f      	bgt.n	80197b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8019798:	9805      	ldr	r0, [sp, #20]
 801979a:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 801979e:	eba0 0c0c 	sub.w	ip, r0, ip
 80197a2:	eba1 010c 	sub.w	r1, r1, ip
 80197a6:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 80197aa:	4620      	mov	r0, r4
 80197ac:	9903      	ldr	r1, [sp, #12]
 80197ae:	3901      	subs	r1, #1
 80197b0:	9103      	str	r1, [sp, #12]
 80197b2:	3d08      	subs	r5, #8
 80197b4:	4604      	mov	r4, r0
 80197b6:	e7cf      	b.n	8019758 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 80197b8:	4461      	add	r1, ip
 80197ba:	b209      	sxth	r1, r1
 80197bc:	4549      	cmp	r1, r9
 80197be:	dcf5      	bgt.n	80197ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80197c0:	9904      	ldr	r1, [sp, #16]
 80197c2:	eba1 0c0c 	sub.w	ip, r1, ip
 80197c6:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 80197ca:	e7ee      	b.n	80197aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80197cc:	428f      	cmp	r7, r1
 80197ce:	dced      	bgt.n	80197ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80197d0:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 80197d4:	4461      	add	r1, ip
 80197d6:	b209      	sxth	r1, r1
 80197d8:	4589      	cmp	r9, r1
 80197da:	dbe7      	blt.n	80197ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80197dc:	4576      	cmp	r6, lr
 80197de:	fa1f fc8e 	uxth.w	ip, lr
 80197e2:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 80197e6:	dc08      	bgt.n	80197fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 80197e8:	eba2 0c0c 	sub.w	ip, r2, ip
 80197ec:	eba1 010c 	sub.w	r1, r1, ip
 80197f0:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 80197f4:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 80197f8:	e7d7      	b.n	80197aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80197fa:	4461      	add	r1, ip
 80197fc:	b209      	sxth	r1, r1
 80197fe:	4588      	cmp	r8, r1
 8019800:	dbd4      	blt.n	80197ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8019802:	eba3 0c0c 	sub.w	ip, r3, ip
 8019806:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 801980a:	e7ce      	b.n	80197aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801980c:	2001e1b6 	.word	0x2001e1b6
 8019810:	2001e1b4 	.word	0x2001e1b4
 8019814:	2c00      	cmp	r4, #0
 8019816:	f000 816a 	beq.w	8019aee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801981a:	9b00      	ldr	r3, [sp, #0]
 801981c:	3301      	adds	r3, #1
 801981e:	f000 8166 	beq.w	8019aee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8019822:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 8019826:	4621      	mov	r1, r4
 8019828:	9802      	ldr	r0, [sp, #8]
 801982a:	f7ff fd87 	bl	801933c <_ZNK8touchgfx4Rect8includesERKS0_>
 801982e:	b120      	cbz	r0, 801983a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 8019830:	f8bd 1000 	ldrh.w	r1, [sp]
 8019834:	9801      	ldr	r0, [sp, #4]
 8019836:	f7ff fe79 	bl	801952c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801983a:	9902      	ldr	r1, [sp, #8]
 801983c:	4620      	mov	r0, r4
 801983e:	f7fa fea3 	bl	8014588 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019842:	2800      	cmp	r0, #0
 8019844:	f000 809b 	beq.w	801997e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8019848:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801984c:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 8019850:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 8019854:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 8019858:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801985c:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 8019860:	fa1f f288 	uxth.w	r2, r8
 8019864:	19d5      	adds	r5, r2, r7
 8019866:	fa1f f985 	uxth.w	r9, r5
 801986a:	fa0f f589 	sxth.w	r5, r9
 801986e:	b2a1      	uxth	r1, r4
 8019870:	440b      	add	r3, r1
 8019872:	9503      	str	r5, [sp, #12]
 8019874:	45a0      	cmp	r8, r4
 8019876:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801987a:	9507      	str	r5, [sp, #28]
 801987c:	b29b      	uxth	r3, r3
 801987e:	f340 809d 	ble.w	80199bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 8019882:	1a52      	subs	r2, r2, r1
 8019884:	b292      	uxth	r2, r2
 8019886:	4584      	cmp	ip, r0
 8019888:	fa0f fe83 	sxth.w	lr, r3
 801988c:	b215      	sxth	r5, r2
 801988e:	dd2f      	ble.n	80198f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33c>
 8019890:	9e00      	ldr	r6, [sp, #0]
 8019892:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8019896:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 801989a:	9e03      	ldr	r6, [sp, #12]
 801989c:	eba6 060e 	sub.w	r6, r6, lr
 80198a0:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 80198a4:	fa1f fc8c 	uxth.w	ip, ip
 80198a8:	b280      	uxth	r0, r0
 80198aa:	ebac 0300 	sub.w	r3, ip, r0
 80198ae:	448c      	add	ip, r1
 80198b0:	4470      	add	r0, lr
 80198b2:	b29b      	uxth	r3, r3
 80198b4:	fa0f fc8c 	sxth.w	ip, ip
 80198b8:	b200      	sxth	r0, r0
 80198ba:	b21c      	sxth	r4, r3
 80198bc:	ebac 0000 	sub.w	r0, ip, r0
 80198c0:	4366      	muls	r6, r4
 80198c2:	4368      	muls	r0, r5
 80198c4:	4286      	cmp	r6, r0
 80198c6:	db09      	blt.n	80198dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 80198c8:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 80198cc:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 80198d0:	4417      	add	r7, r2
 80198d2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80198d6:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80198da:	e681      	b.n	80195e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80198dc:	440b      	add	r3, r1
 80198de:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80198e2:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 80198e6:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 80198ea:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80198ee:	e677      	b.n	80195e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80198f0:	9e03      	ldr	r6, [sp, #12]
 80198f2:	45b6      	cmp	lr, r6
 80198f4:	da28      	bge.n	8019948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 80198f6:	9b00      	ldr	r3, [sp, #0]
 80198f8:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 80198fc:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 8019900:	eb04 030c 	add.w	r3, r4, ip
 8019904:	fa1f f883 	uxth.w	r8, r3
 8019908:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 801990c:	4403      	add	r3, r0
 801990e:	eba3 0308 	sub.w	r3, r3, r8
 8019912:	b29b      	uxth	r3, r3
 8019914:	fa0f f988 	sxth.w	r9, r8
 8019918:	eba0 000c 	sub.w	r0, r0, ip
 801991c:	fa0f f883 	sxth.w	r8, r3
 8019920:	eba6 060e 	sub.w	r6, r6, lr
 8019924:	4368      	muls	r0, r5
 8019926:	fb08 f606 	mul.w	r6, r8, r6
 801992a:	42b0      	cmp	r0, r6
 801992c:	dc06      	bgt.n	801993c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801992e:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 8019932:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 8019936:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 801993a:	e7c9      	b.n	80198d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31c>
 801993c:	4423      	add	r3, r4
 801993e:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 8019942:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8019946:	e64b      	b.n	80195e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019948:	9807      	ldr	r0, [sp, #28]
 801994a:	eba3 0309 	sub.w	r3, r3, r9
 801994e:	b29b      	uxth	r3, r3
 8019950:	2806      	cmp	r0, #6
 8019952:	fa0f fc83 	sxth.w	ip, r3
 8019956:	d818      	bhi.n	801998a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8019958:	4652      	mov	r2, sl
 801995a:	ab0a      	add	r3, sp, #40	; 0x28
 801995c:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 8019960:	6851      	ldr	r1, [r2, #4]
 8019962:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 8019966:	c303      	stmia	r3!, {r0, r1}
 8019968:	9b03      	ldr	r3, [sp, #12]
 801996a:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 801996e:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8019972:	ab0a      	add	r3, sp, #40	; 0x28
 8019974:	e893 0006 	ldmia.w	r3, {r1, r2}
 8019978:	9801      	ldr	r0, [sp, #4]
 801997a:	f7ff fdf9 	bl	8019570 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 801997e:	9b00      	ldr	r3, [sp, #0]
 8019980:	3b01      	subs	r3, #1
 8019982:	9300      	str	r3, [sp, #0]
 8019984:	f1aa 0a08 	sub.w	sl, sl, #8
 8019988:	e747      	b.n	801981a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 801998a:	9800      	ldr	r0, [sp, #0]
 801998c:	45ac      	cmp	ip, r5
 801998e:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8019992:	db0c      	blt.n	80199ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fa>
 8019994:	4417      	add	r7, r2
 8019996:	b2bf      	uxth	r7, r7
 8019998:	4458      	add	r0, fp
 801999a:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 801999e:	440f      	add	r7, r1
 80199a0:	f8ad 4020 	strh.w	r4, [sp, #32]
 80199a4:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 80199a8:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 80199ac:	e618      	b.n	80195e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80199ae:	4458      	add	r0, fp
 80199b0:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 80199b4:	443b      	add	r3, r7
 80199b6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80199ba:	e611      	b.n	80195e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80199bc:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 80199c0:	fa1f f18c 	uxth.w	r1, ip
 80199c4:	eb01 0e05 	add.w	lr, r1, r5
 80199c8:	b282      	uxth	r2, r0
 80199ca:	fa1f fe8e 	uxth.w	lr, lr
 80199ce:	9204      	str	r2, [sp, #16]
 80199d0:	fa0f f28e 	sxth.w	r2, lr
 80199d4:	9205      	str	r2, [sp, #20]
 80199d6:	9e04      	ldr	r6, [sp, #16]
 80199d8:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 80199dc:	4432      	add	r2, r6
 80199de:	b292      	uxth	r2, r2
 80199e0:	4584      	cmp	ip, r0
 80199e2:	9206      	str	r2, [sp, #24]
 80199e4:	da26      	bge.n	8019a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x480>
 80199e6:	eba3 0309 	sub.w	r3, r3, r9
 80199ea:	eba2 020e 	sub.w	r2, r2, lr
 80199ee:	b29b      	uxth	r3, r3
 80199f0:	b292      	uxth	r2, r2
 80199f2:	fa0f fa83 	sxth.w	sl, r3
 80199f6:	b211      	sxth	r1, r2
 80199f8:	eba0 000c 	sub.w	r0, r0, ip
 80199fc:	eba4 0408 	sub.w	r4, r4, r8
 8019a00:	fb0a f000 	mul.w	r0, sl, r0
 8019a04:	434c      	muls	r4, r1
 8019a06:	42a0      	cmp	r0, r4
 8019a08:	9800      	ldr	r0, [sp, #0]
 8019a0a:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8019a0e:	dc06      	bgt.n	8019a1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8019a10:	4458      	add	r0, fp
 8019a12:	9a05      	ldr	r2, [sp, #20]
 8019a14:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 8019a18:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 8019a1c:	e7ca      	b.n	80199b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 8019a1e:	eb0b 0300 	add.w	r3, fp, r0
 8019a22:	9903      	ldr	r1, [sp, #12]
 8019a24:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 8019a28:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 8019a2c:	442a      	add	r2, r5
 8019a2e:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8019a32:	e5d5      	b.n	80195e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019a34:	9e04      	ldr	r6, [sp, #16]
 8019a36:	9a03      	ldr	r2, [sp, #12]
 8019a38:	1b89      	subs	r1, r1, r6
 8019a3a:	b21e      	sxth	r6, r3
 8019a3c:	b289      	uxth	r1, r1
 8019a3e:	4296      	cmp	r6, r2
 8019a40:	fa0f fc81 	sxth.w	ip, r1
 8019a44:	dd26      	ble.n	8019a94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4e0>
 8019a46:	eba3 0309 	sub.w	r3, r3, r9
 8019a4a:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8019a4e:	9e05      	ldr	r6, [sp, #20]
 8019a50:	b29b      	uxth	r3, r3
 8019a52:	eba6 0902 	sub.w	r9, r6, r2
 8019a56:	b218      	sxth	r0, r3
 8019a58:	eba4 0408 	sub.w	r4, r4, r8
 8019a5c:	fb0c f404 	mul.w	r4, ip, r4
 8019a60:	fb00 f909 	mul.w	r9, r0, r9
 8019a64:	9a00      	ldr	r2, [sp, #0]
 8019a66:	454c      	cmp	r4, r9
 8019a68:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8019a6c:	db03      	blt.n	8019a76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 8019a6e:	445a      	add	r2, fp
 8019a70:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 8019a74:	e79e      	b.n	80199b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 8019a76:	eb0b 0302 	add.w	r3, fp, r2
 8019a7a:	9a03      	ldr	r2, [sp, #12]
 8019a7c:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8019a80:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 8019a84:	4429      	add	r1, r5
 8019a86:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8019a8a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8019a8e:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8019a92:	e5a5      	b.n	80195e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019a94:	9b06      	ldr	r3, [sp, #24]
 8019a96:	9c07      	ldr	r4, [sp, #28]
 8019a98:	eba3 020e 	sub.w	r2, r3, lr
 8019a9c:	b292      	uxth	r2, r2
 8019a9e:	2c06      	cmp	r4, #6
 8019aa0:	b213      	sxth	r3, r2
 8019aa2:	d80d      	bhi.n	8019ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8019aa4:	4651      	mov	r1, sl
 8019aa6:	aa0a      	add	r2, sp, #40	; 0x28
 8019aa8:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 8019aac:	6849      	ldr	r1, [r1, #4]
 8019aae:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 8019ab2:	9b05      	ldr	r3, [sp, #20]
 8019ab4:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8019ab8:	c203      	stmia	r2!, {r0, r1}
 8019aba:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 8019abe:	e758      	b.n	8019972 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8019ac0:	9c00      	ldr	r4, [sp, #0]
 8019ac2:	4563      	cmp	r3, ip
 8019ac4:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8019ac8:	db0d      	blt.n	8019ae6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8019aca:	4429      	add	r1, r5
 8019acc:	9a04      	ldr	r2, [sp, #16]
 8019ace:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019ad2:	b289      	uxth	r1, r1
 8019ad4:	445c      	add	r4, fp
 8019ad6:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8019ada:	4411      	add	r1, r2
 8019adc:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 8019ae0:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 8019ae4:	e57c      	b.n	80195e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019ae6:	445c      	add	r4, fp
 8019ae8:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 8019aec:	e79e      	b.n	8019a2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x478>
 8019aee:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8019af2:	2f07      	cmp	r7, #7
 8019af4:	d806      	bhi.n	8019b04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x550>
 8019af6:	ab08      	add	r3, sp, #32
 8019af8:	e893 0006 	ldmia.w	r3, {r1, r2}
 8019afc:	9801      	ldr	r0, [sp, #4]
 8019afe:	f7ff fd37 	bl	8019570 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8019b02:	e5d7      	b.n	80196b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019b04:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8019b08:	f107 39ff 	add.w	r9, r7, #4294967295
 8019b0c:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8019b10:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 8019b14:	f04f 35ff 	mov.w	r5, #4294967295
 8019b18:	2400      	movs	r4, #0
 8019b1a:	9304      	str	r3, [sp, #16]
 8019b1c:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 8019b20:	9300      	str	r3, [sp, #0]
 8019b22:	f109 32ff 	add.w	r2, r9, #4294967295
 8019b26:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 8019b2a:	9303      	str	r3, [sp, #12]
 8019b2c:	4690      	mov	r8, r2
 8019b2e:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8019b32:	f1b8 3fff 	cmp.w	r8, #4294967295
 8019b36:	bf14      	ite	ne
 8019b38:	9904      	ldrne	r1, [sp, #16]
 8019b3a:	f8dd e008 	ldreq.w	lr, [sp, #8]
 8019b3e:	6818      	ldr	r0, [r3, #0]
 8019b40:	9206      	str	r2, [sp, #24]
 8019b42:	bf18      	it	ne
 8019b44:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 8019b48:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8019b4c:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8019b50:	f8be 6004 	ldrh.w	r6, [lr, #4]
 8019b54:	9305      	str	r3, [sp, #20]
 8019b56:	fb16 f601 	smulbb	r6, r6, r1
 8019b5a:	6859      	ldr	r1, [r3, #4]
 8019b5c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8019b60:	4671      	mov	r1, lr
 8019b62:	a80a      	add	r0, sp, #40	; 0x28
 8019b64:	f7fb fb0f 	bl	8015186 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019b68:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8019b6c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8019b70:	9b03      	ldr	r3, [sp, #12]
 8019b72:	9a00      	ldr	r2, [sp, #0]
 8019b74:	fb11 f100 	smulbb	r1, r1, r0
 8019b78:	fb02 6603 	mla	r6, r2, r3, r6
 8019b7c:	1b8e      	subs	r6, r1, r6
 8019b7e:	2008      	movs	r0, #8
 8019b80:	fb91 f1f0 	sdiv	r1, r1, r0
 8019b84:	42b1      	cmp	r1, r6
 8019b86:	dc21      	bgt.n	8019bcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 8019b88:	4556      	cmp	r6, sl
 8019b8a:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 8019b8e:	da03      	bge.n	8019b98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e4>
 8019b90:	b1e6      	cbz	r6, 8019bcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 8019b92:	46b2      	mov	sl, r6
 8019b94:	4645      	mov	r5, r8
 8019b96:	464c      	mov	r4, r9
 8019b98:	f108 38ff 	add.w	r8, r8, #4294967295
 8019b9c:	f118 0f02 	cmn.w	r8, #2
 8019ba0:	d1c7      	bne.n	8019b32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57e>
 8019ba2:	f1b2 3fff 	cmp.w	r2, #4294967295
 8019ba6:	f1a7 0708 	sub.w	r7, r7, #8
 8019baa:	4691      	mov	r9, r2
 8019bac:	d1b6      	bne.n	8019b1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x568>
 8019bae:	9b01      	ldr	r3, [sp, #4]
 8019bb0:	b2a6      	uxth	r6, r4
 8019bb2:	00e4      	lsls	r4, r4, #3
 8019bb4:	1918      	adds	r0, r3, r4
 8019bb6:	1c6b      	adds	r3, r5, #1
 8019bb8:	d10b      	bne.n	8019bd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x61e>
 8019bba:	4601      	mov	r1, r0
 8019bbc:	9802      	ldr	r0, [sp, #8]
 8019bbe:	f7fb fae2 	bl	8015186 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019bc2:	4631      	mov	r1, r6
 8019bc4:	9801      	ldr	r0, [sp, #4]
 8019bc6:	f7ff fcb1 	bl	801952c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019bca:	e509      	b.n	80195e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019bcc:	4645      	mov	r5, r8
 8019bce:	464c      	mov	r4, r9
 8019bd0:	e7ed      	b.n	8019bae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 8019bd2:	9b01      	ldr	r3, [sp, #4]
 8019bd4:	00ed      	lsls	r5, r5, #3
 8019bd6:	1959      	adds	r1, r3, r5
 8019bd8:	f7fb fad5 	bl	8015186 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019bdc:	9b02      	ldr	r3, [sp, #8]
 8019bde:	cb03      	ldmia	r3!, {r0, r1}
 8019be0:	445d      	add	r5, fp
 8019be2:	445c      	add	r4, fp
 8019be4:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 8019be8:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 8019bec:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 8019bf0:	9b02      	ldr	r3, [sp, #8]
 8019bf2:	6861      	ldr	r1, [r4, #4]
 8019bf4:	c303      	stmia	r3!, {r0, r1}
 8019bf6:	e7e4      	b.n	8019bc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60e>

08019bf8 <_ZN8touchgfx11Application10invalidateEv>:
 8019bf8:	4b09      	ldr	r3, [pc, #36]	; (8019c20 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8019bfa:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019bfe:	4b09      	ldr	r3, [pc, #36]	; (8019c24 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8019c00:	b082      	sub	sp, #8
 8019c02:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019c06:	f8ad 3006 	strh.w	r3, [sp, #6]
 8019c0a:	2100      	movs	r1, #0
 8019c0c:	9100      	str	r1, [sp, #0]
 8019c0e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8019c12:	ab02      	add	r3, sp, #8
 8019c14:	e913 0006 	ldmdb	r3, {r1, r2}
 8019c18:	b002      	add	sp, #8
 8019c1a:	f7ff bccb 	b.w	80195b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8019c1e:	bf00      	nop
 8019c20:	2001e1b4 	.word	0x2001e1b4
 8019c24:	2001e1b6 	.word	0x2001e1b6

08019c28 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8019c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c2c:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8019c30:	b09b      	sub	sp, #108	; 0x6c
 8019c32:	4604      	mov	r4, r0
 8019c34:	4630      	mov	r0, r6
 8019c36:	f7f8 fab0 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019c3a:	4605      	mov	r5, r0
 8019c3c:	b940      	cbnz	r0, 8019c50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8019c3e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8019c42:	4620      	mov	r0, r4
 8019c44:	f7ff fcb6 	bl	80195b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8019c48:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8019c4c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8019c50:	4bc6      	ldr	r3, [pc, #792]	; (8019f6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8019c52:	681b      	ldr	r3, [r3, #0]
 8019c54:	b33b      	cbz	r3, 8019ca6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 8019c56:	4dc6      	ldr	r5, [pc, #792]	; (8019f70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8019c58:	4628      	mov	r0, r5
 8019c5a:	f7f8 fa9e 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019c5e:	4606      	mov	r6, r0
 8019c60:	bb08      	cbnz	r0, 8019ca6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 8019c62:	4628      	mov	r0, r5
 8019c64:	f7ff f9bc 	bl	8018fe0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019c68:	6829      	ldr	r1, [r5, #0]
 8019c6a:	686a      	ldr	r2, [r5, #4]
 8019c6c:	4620      	mov	r0, r4
 8019c6e:	f7ff fca1 	bl	80195b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8019c72:	802e      	strh	r6, [r5, #0]
 8019c74:	806e      	strh	r6, [r5, #2]
 8019c76:	80ae      	strh	r6, [r5, #4]
 8019c78:	80ee      	strh	r6, [r5, #6]
 8019c7a:	4dbe      	ldr	r5, [pc, #760]	; (8019f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8019c7c:	a809      	add	r0, sp, #36	; 0x24
 8019c7e:	f7ff fc05 	bl	801948c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8019c82:	882f      	ldrh	r7, [r5, #0]
 8019c84:	463e      	mov	r6, r7
 8019c86:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8019c8a:	42b3      	cmp	r3, r6
 8019c8c:	d912      	bls.n	8019cb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 8019c8e:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8019c92:	a809      	add	r0, sp, #36	; 0x24
 8019c94:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 8019c98:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 8019c9c:	3601      	adds	r6, #1
 8019c9e:	f7ff fc67 	bl	8019570 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8019ca2:	b2b6      	uxth	r6, r6
 8019ca4:	e7ef      	b.n	8019c86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5e>
 8019ca6:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8019caa:	2b00      	cmp	r3, #0
 8019cac:	d1e5      	bne.n	8019c7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x52>
 8019cae:	b01b      	add	sp, #108	; 0x6c
 8019cb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019cb4:	463e      	mov	r6, r7
 8019cb6:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8019cba:	42b3      	cmp	r3, r6
 8019cbc:	d90b      	bls.n	8019cd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8019cbe:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8019cc2:	4620      	mov	r0, r4
 8019cc4:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8019cc8:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8019ccc:	3601      	adds	r6, #1
 8019cce:	f7ff fc71 	bl	80195b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8019cd2:	b2b6      	uxth	r6, r6
 8019cd4:	e7ef      	b.n	8019cb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8e>
 8019cd6:	4ea8      	ldr	r6, [pc, #672]	; (8019f78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019cd8:	6833      	ldr	r3, [r6, #0]
 8019cda:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8019cde:	2b01      	cmp	r3, #1
 8019ce0:	f040 80d2 	bne.w	8019e88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 8019ce4:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8019ce8:	f8b4 c0e8 	ldrh.w	ip, [r4, #232]	; 0xe8
 8019cec:	4639      	mov	r1, r7
 8019cee:	33aa      	adds	r3, #170	; 0xaa
 8019cf0:	2700      	movs	r7, #0
 8019cf2:	458c      	cmp	ip, r1
 8019cf4:	f103 0308 	add.w	r3, r3, #8
 8019cf8:	dd0a      	ble.n	8019d10 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe8>
 8019cfa:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8019cfe:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8019d02:	4402      	add	r2, r0
 8019d04:	b212      	sxth	r2, r2
 8019d06:	4297      	cmp	r7, r2
 8019d08:	bfb8      	it	lt
 8019d0a:	4617      	movlt	r7, r2
 8019d0c:	3101      	adds	r1, #1
 8019d0e:	e7f0      	b.n	8019cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8019d10:	4b9a      	ldr	r3, [pc, #616]	; (8019f7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8019d12:	f8b3 9000 	ldrh.w	r9, [r3]
 8019d16:	2300      	movs	r3, #0
 8019d18:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8019d1c:	f1b9 0f0f 	cmp.w	r9, #15
 8019d20:	bf8c      	ite	hi
 8019d22:	ea4f 09d9 	movhi.w	r9, r9, lsr #3
 8019d26:	f04f 0901 	movls.w	r9, #1
 8019d2a:	f8bd 801a 	ldrh.w	r8, [sp, #26]
 8019d2e:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8019d32:	4440      	add	r0, r8
 8019d34:	fa0f f880 	sxth.w	r8, r0
 8019d38:	6830      	ldr	r0, [r6, #0]
 8019d3a:	4547      	cmp	r7, r8
 8019d3c:	6803      	ldr	r3, [r0, #0]
 8019d3e:	f340 8086 	ble.w	8019e4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x226>
 8019d42:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8019d46:	4798      	blx	r3
 8019d48:	eb08 0309 	add.w	r3, r8, r9
 8019d4c:	4298      	cmp	r0, r3
 8019d4e:	da08      	bge.n	8019d62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8019d50:	4287      	cmp	r7, r0
 8019d52:	dd06      	ble.n	8019d62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8019d54:	4580      	cmp	r8, r0
 8019d56:	dd70      	ble.n	8019e3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 8019d58:	f1b8 0f00 	cmp.w	r8, #0
 8019d5c:	dd6d      	ble.n	8019e3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 8019d5e:	4638      	mov	r0, r7
 8019d60:	e004      	b.n	8019d6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 8019d62:	4580      	cmp	r8, r0
 8019d64:	dcfb      	bgt.n	8019d5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 8019d66:	42b8      	cmp	r0, r7
 8019d68:	bfa8      	it	ge
 8019d6a:	4638      	movge	r0, r7
 8019d6c:	4b84      	ldr	r3, [pc, #528]	; (8019f80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8019d6e:	f8ad 8016 	strh.w	r8, [sp, #22]
 8019d72:	eba0 0008 	sub.w	r0, r0, r8
 8019d76:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019d7a:	f8b5 8000 	ldrh.w	r8, [r5]
 8019d7e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8019d82:	2200      	movs	r2, #0
 8019d84:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019d88:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019d8c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8019d90:	4543      	cmp	r3, r8
 8019d92:	d9ca      	bls.n	8019d2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 8019d94:	eb04 02c8 	add.w	r2, r4, r8, lsl #3
 8019d98:	ab07      	add	r3, sp, #28
 8019d9a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8019d9e:	6851      	ldr	r1, [r2, #4]
 8019da0:	c303      	stmia	r3!, {r0, r1}
 8019da2:	a905      	add	r1, sp, #20
 8019da4:	a807      	add	r0, sp, #28
 8019da6:	f7fa fbef 	bl	8014588 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019daa:	2800      	cmp	r0, #0
 8019dac:	d04c      	beq.n	8019e48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x220>
 8019dae:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8019db2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8019db6:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8019dba:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8019dbe:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8019dc2:	4686      	mov	lr, r0
 8019dc4:	4290      	cmp	r0, r2
 8019dc6:	4450      	add	r0, sl
 8019dc8:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8019dcc:	bfb8      	it	lt
 8019dce:	4696      	movlt	lr, r2
 8019dd0:	4452      	add	r2, sl
 8019dd2:	b280      	uxth	r0, r0
 8019dd4:	b292      	uxth	r2, r2
 8019dd6:	4299      	cmp	r1, r3
 8019dd8:	fa0f fb80 	sxth.w	fp, r0
 8019ddc:	fa0f fa82 	sxth.w	sl, r2
 8019de0:	468c      	mov	ip, r1
 8019de2:	bfb8      	it	lt
 8019de4:	469c      	movlt	ip, r3
 8019de6:	45d3      	cmp	fp, sl
 8019de8:	bfb8      	it	lt
 8019dea:	4602      	movlt	r2, r0
 8019dec:	eba2 020e 	sub.w	r2, r2, lr
 8019df0:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019df4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8019df8:	f8ad e01c 	strh.w	lr, [sp, #28]
 8019dfc:	4411      	add	r1, r2
 8019dfe:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019e02:	f8ad c01e 	strh.w	ip, [sp, #30]
 8019e06:	4413      	add	r3, r2
 8019e08:	b289      	uxth	r1, r1
 8019e0a:	b29b      	uxth	r3, r3
 8019e0c:	b208      	sxth	r0, r1
 8019e0e:	b21a      	sxth	r2, r3
 8019e10:	4290      	cmp	r0, r2
 8019e12:	bfb8      	it	lt
 8019e14:	460b      	movlt	r3, r1
 8019e16:	eba3 030c 	sub.w	r3, r3, ip
 8019e1a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8019e1e:	a807      	add	r0, sp, #28
 8019e20:	f7f8 f9bb 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019e24:	b920      	cbnz	r0, 8019e30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x208>
 8019e26:	6823      	ldr	r3, [r4, #0]
 8019e28:	a907      	add	r1, sp, #28
 8019e2a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019e2c:	4620      	mov	r0, r4
 8019e2e:	4798      	blx	r3
 8019e30:	f108 0801 	add.w	r8, r8, #1
 8019e34:	fa1f f888 	uxth.w	r8, r8
 8019e38:	e7a8      	b.n	8019d8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x164>
 8019e3a:	6830      	ldr	r0, [r6, #0]
 8019e3c:	6803      	ldr	r3, [r0, #0]
 8019e3e:	2101      	movs	r1, #1
 8019e40:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8019e44:	4798      	blx	r3
 8019e46:	e770      	b.n	8019d2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 8019e48:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8019e4c:	e7e7      	b.n	8019e1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1f6>
 8019e4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8019e50:	4798      	blx	r3
 8019e52:	4b4c      	ldr	r3, [pc, #304]	; (8019f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8019e54:	781b      	ldrb	r3, [r3, #0]
 8019e56:	2b00      	cmp	r3, #0
 8019e58:	f43f af29 	beq.w	8019cae <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8019e5c:	2300      	movs	r3, #0
 8019e5e:	882d      	ldrh	r5, [r5, #0]
 8019e60:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8019e64:	34ea      	adds	r4, #234	; 0xea
 8019e66:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8019e6a:	42ab      	cmp	r3, r5
 8019e6c:	f67f af1f 	bls.w	8019cae <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8019e70:	ab1a      	add	r3, sp, #104	; 0x68
 8019e72:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019e76:	3b44      	subs	r3, #68	; 0x44
 8019e78:	e893 0006 	ldmia.w	r3, {r1, r2}
 8019e7c:	4620      	mov	r0, r4
 8019e7e:	3501      	adds	r5, #1
 8019e80:	f7ff fb76 	bl	8019570 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8019e84:	b2ad      	uxth	r5, r5
 8019e86:	e7ee      	b.n	8019e66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8019e88:	2b02      	cmp	r3, #2
 8019e8a:	f040 8136 	bne.w	801a0fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 8019e8e:	4b3e      	ldr	r3, [pc, #248]	; (8019f88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8019e90:	781b      	ldrb	r3, [r3, #0]
 8019e92:	2b01      	cmp	r3, #1
 8019e94:	d02c      	beq.n	8019ef0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c8>
 8019e96:	f104 0aa8 	add.w	sl, r4, #168	; 0xa8
 8019e9a:	882a      	ldrh	r2, [r5, #0]
 8019e9c:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 8019ea0:	3201      	adds	r2, #1
 8019ea2:	b292      	uxth	r2, r2
 8019ea4:	2900      	cmp	r1, #0
 8019ea6:	d0d4      	beq.n	8019e52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 8019ea8:	f8b4 70aa 	ldrh.w	r7, [r4, #170]	; 0xaa
 8019eac:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8019eb0:	441f      	add	r7, r3
 8019eb2:	b23f      	sxth	r7, r7
 8019eb4:	4610      	mov	r0, r2
 8019eb6:	f04f 0900 	mov.w	r9, #0
 8019eba:	b283      	uxth	r3, r0
 8019ebc:	4299      	cmp	r1, r3
 8019ebe:	ea4f 08c9 	mov.w	r8, r9, lsl #3
 8019ec2:	f240 80c5 	bls.w	801a050 <_ZN8touchgfx11Application15drawCachedAreasEv+0x428>
 8019ec6:	44a0      	add	r8, r4
 8019ec8:	eb04 0bc0 	add.w	fp, r4, r0, lsl #3
 8019ecc:	f9b8 30aa 	ldrsh.w	r3, [r8, #170]	; 0xaa
 8019ed0:	f9bb e0aa 	ldrsh.w	lr, [fp, #170]	; 0xaa
 8019ed4:	4573      	cmp	r3, lr
 8019ed6:	4684      	mov	ip, r0
 8019ed8:	f340 80a7 	ble.w	801a02a <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 8019edc:	f8bb 70ae 	ldrh.w	r7, [fp, #174]	; 0xae
 8019ee0:	4477      	add	r7, lr
 8019ee2:	b23f      	sxth	r7, r7
 8019ee4:	429f      	cmp	r7, r3
 8019ee6:	bfa8      	it	ge
 8019ee8:	461f      	movge	r7, r3
 8019eea:	3001      	adds	r0, #1
 8019eec:	46e1      	mov	r9, ip
 8019eee:	e7e4      	b.n	8019eba <_ZN8touchgfx11Application15drawCachedAreasEv+0x292>
 8019ef0:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8019ef4:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8019ef8:	f1bb 0f00 	cmp.w	fp, #0
 8019efc:	d0a9      	beq.n	8019e52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 8019efe:	882b      	ldrh	r3, [r5, #0]
 8019f00:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8019f04:	3301      	adds	r3, #1
 8019f06:	b29b      	uxth	r3, r3
 8019f08:	f04f 0800 	mov.w	r8, #0
 8019f0c:	b299      	uxth	r1, r3
 8019f0e:	458b      	cmp	fp, r1
 8019f10:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8019f14:	d93a      	bls.n	8019f8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8019f16:	4427      	add	r7, r4
 8019f18:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8019f1c:	f8b7 10ac 	ldrh.w	r1, [r7, #172]	; 0xac
 8019f20:	f8b7 00a8 	ldrh.w	r0, [r7, #168]	; 0xa8
 8019f24:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8019f28:	4408      	add	r0, r1
 8019f2a:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8019f2e:	4471      	add	r1, lr
 8019f30:	b200      	sxth	r0, r0
 8019f32:	b209      	sxth	r1, r1
 8019f34:	4288      	cmp	r0, r1
 8019f36:	469c      	mov	ip, r3
 8019f38:	da06      	bge.n	8019f48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8019f3a:	4586      	cmp	lr, r0
 8019f3c:	4672      	mov	r2, lr
 8019f3e:	bfb8      	it	lt
 8019f40:	4602      	movlt	r2, r0
 8019f42:	3301      	adds	r3, #1
 8019f44:	46e0      	mov	r8, ip
 8019f46:	e7e1      	b.n	8019f0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>
 8019f48:	d10b      	bne.n	8019f62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8019f4a:	f9b7 c0ae 	ldrsh.w	ip, [r7, #174]	; 0xae
 8019f4e:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8019f52:	458c      	cmp	ip, r1
 8019f54:	bfb4      	ite	lt
 8019f56:	469c      	movlt	ip, r3
 8019f58:	46c4      	movge	ip, r8
 8019f5a:	4572      	cmp	r2, lr
 8019f5c:	bfb8      	it	lt
 8019f5e:	4672      	movlt	r2, lr
 8019f60:	e7ef      	b.n	8019f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8019f62:	428a      	cmp	r2, r1
 8019f64:	bfb8      	it	lt
 8019f66:	460a      	movlt	r2, r1
 8019f68:	46c4      	mov	ip, r8
 8019f6a:	e7ea      	b.n	8019f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8019f6c:	2001e218 	.word	0x2001e218
 8019f70:	2001e224 	.word	0x2001e224
 8019f74:	2000009c 	.word	0x2000009c
 8019f78:	2001e1c0 	.word	0x2001e1c0
 8019f7c:	2001e1b6 	.word	0x2001e1b6
 8019f80:	2001e1b4 	.word	0x2001e1b4
 8019f84:	2001e1be 	.word	0x2001e1be
 8019f88:	2001e1b8 	.word	0x2001e1b8
 8019f8c:	19e1      	adds	r1, r4, r7
 8019f8e:	ab07      	add	r3, sp, #28
 8019f90:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8019f94:	6849      	ldr	r1, [r1, #4]
 8019f96:	c303      	stmia	r3!, {r0, r1}
 8019f98:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8019f9c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019fa0:	2b13      	cmp	r3, #19
 8019fa2:	bfd8      	it	le
 8019fa4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8019fa8:	f8ad 201c 	strh.w	r2, [sp, #28]
 8019fac:	440b      	add	r3, r1
 8019fae:	1a9b      	subs	r3, r3, r2
 8019fb0:	a807      	add	r0, sp, #28
 8019fb2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8019fb6:	f7ff f82d 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019fba:	a807      	add	r0, sp, #28
 8019fbc:	f7f8 f8ed 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019fc0:	2800      	cmp	r0, #0
 8019fc2:	d197      	bne.n	8019ef4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 8019fc4:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8019fc8:	6830      	ldr	r0, [r6, #0]
 8019fca:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8019fce:	f8d0 e000 	ldr.w	lr, [r0]
 8019fd2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8019fd6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019fda:	f1bc 0f14 	cmp.w	ip, #20
 8019fde:	bfa8      	it	ge
 8019fe0:	f04f 0c14 	movge.w	ip, #20
 8019fe4:	fa1f fc8c 	uxth.w	ip, ip
 8019fe8:	f8cd c000 	str.w	ip, [sp]
 8019fec:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8019ff0:	47d0      	blx	sl
 8019ff2:	4682      	mov	sl, r0
 8019ff4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019ff8:	a807      	add	r0, sp, #28
 8019ffa:	f7fe fff1 	bl	8018fe0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019ffe:	6823      	ldr	r3, [r4, #0]
 801a000:	4427      	add	r7, r4
 801a002:	4620      	mov	r0, r4
 801a004:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801a006:	a907      	add	r1, sp, #28
 801a008:	4798      	blx	r3
 801a00a:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	; 0xac
 801a00e:	eba0 000a 	sub.w	r0, r0, sl
 801a012:	b200      	sxth	r0, r0
 801a014:	f8a7 00ac 	strh.w	r0, [r7, #172]	; 0xac
 801a018:	2800      	cmp	r0, #0
 801a01a:	f47f af6b 	bne.w	8019ef4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 801a01e:	fa1f f188 	uxth.w	r1, r8
 801a022:	4648      	mov	r0, r9
 801a024:	f7ff fa82 	bl	801952c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801a028:	e764      	b.n	8019ef4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 801a02a:	d10c      	bne.n	801a046 <_ZN8touchgfx11Application15drawCachedAreasEv+0x41e>
 801a02c:	f9b8 e0ac 	ldrsh.w	lr, [r8, #172]	; 0xac
 801a030:	f9bb c0ac 	ldrsh.w	ip, [fp, #172]	; 0xac
 801a034:	45e6      	cmp	lr, ip
 801a036:	bfb4      	ite	lt
 801a038:	4684      	movlt	ip, r0
 801a03a:	46cc      	movge	ip, r9
 801a03c:	f8bb e0ae 	ldrh.w	lr, [fp, #174]	; 0xae
 801a040:	4473      	add	r3, lr
 801a042:	b21b      	sxth	r3, r3
 801a044:	e74e      	b.n	8019ee4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2bc>
 801a046:	4577      	cmp	r7, lr
 801a048:	bfa8      	it	ge
 801a04a:	4677      	movge	r7, lr
 801a04c:	46cc      	mov	ip, r9
 801a04e:	e74c      	b.n	8019eea <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 801a050:	eb0a 0008 	add.w	r0, sl, r8
 801a054:	44a0      	add	r8, r4
 801a056:	e9cd 1202 	strd	r1, r2, [sp, #8]
 801a05a:	f9b8 b0ae 	ldrsh.w	fp, [r8, #174]	; 0xae
 801a05e:	f1bb 0f13 	cmp.w	fp, #19
 801a062:	bfde      	ittt	le
 801a064:	f8b8 70aa 	ldrhle.w	r7, [r8, #170]	; 0xaa
 801a068:	445f      	addle	r7, fp
 801a06a:	b23f      	sxthle	r7, r7
 801a06c:	f7f8 f895 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 801a070:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801a074:	2800      	cmp	r0, #0
 801a076:	f47f af15 	bne.w	8019ea4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27c>
 801a07a:	f9b8 20aa 	ldrsh.w	r2, [r8, #170]	; 0xaa
 801a07e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801a082:	1abf      	subs	r7, r7, r2
 801a084:	2f14      	cmp	r7, #20
 801a086:	f9b8 10a8 	ldrsh.w	r1, [r8, #168]	; 0xa8
 801a08a:	f9b8 30ac 	ldrsh.w	r3, [r8, #172]	; 0xac
 801a08e:	6830      	ldr	r0, [r6, #0]
 801a090:	f8ad 101c 	strh.w	r1, [sp, #28]
 801a094:	f8ad 201e 	strh.w	r2, [sp, #30]
 801a098:	f8ad 3020 	strh.w	r3, [sp, #32]
 801a09c:	bfa8      	it	ge
 801a09e:	2714      	movge	r7, #20
 801a0a0:	f8d0 c000 	ldr.w	ip, [r0]
 801a0a4:	b2bf      	uxth	r7, r7
 801a0a6:	fa1f fb8b 	uxth.w	fp, fp
 801a0aa:	455f      	cmp	r7, fp
 801a0ac:	bf94      	ite	ls
 801a0ae:	9700      	strls	r7, [sp, #0]
 801a0b0:	f8cd b000 	strhi.w	fp, [sp]
 801a0b4:	b292      	uxth	r2, r2
 801a0b6:	f8dc 7090 	ldr.w	r7, [ip, #144]	; 0x90
 801a0ba:	b29b      	uxth	r3, r3
 801a0bc:	b289      	uxth	r1, r1
 801a0be:	47b8      	blx	r7
 801a0c0:	6823      	ldr	r3, [r4, #0]
 801a0c2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801a0c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801a0c8:	a907      	add	r1, sp, #28
 801a0ca:	4620      	mov	r0, r4
 801a0cc:	4798      	blx	r3
 801a0ce:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801a0d2:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 801a0d6:	f8b8 20aa 	ldrh.w	r2, [r8, #170]	; 0xaa
 801a0da:	1a5b      	subs	r3, r3, r1
 801a0dc:	440a      	add	r2, r1
 801a0de:	b21b      	sxth	r3, r3
 801a0e0:	f8a8 20aa 	strh.w	r2, [r8, #170]	; 0xaa
 801a0e4:	f8a8 30ae 	strh.w	r3, [r8, #174]	; 0xae
 801a0e8:	2b00      	cmp	r3, #0
 801a0ea:	f47f aed6 	bne.w	8019e9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 801a0ee:	fa1f f189 	uxth.w	r1, r9
 801a0f2:	4650      	mov	r0, sl
 801a0f4:	f7ff fa1a 	bl	801952c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801a0f8:	e6cf      	b.n	8019e9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 801a0fa:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801a0fe:	42bb      	cmp	r3, r7
 801a100:	f67f aea7 	bls.w	8019e52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 801a104:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 801a108:	ab07      	add	r3, sp, #28
 801a10a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801a10e:	6851      	ldr	r1, [r2, #4]
 801a110:	c303      	stmia	r3!, {r0, r1}
 801a112:	a807      	add	r0, sp, #28
 801a114:	f7f8 f841 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 801a118:	b920      	cbnz	r0, 801a124 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fc>
 801a11a:	6823      	ldr	r3, [r4, #0]
 801a11c:	a907      	add	r1, sp, #28
 801a11e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801a120:	4620      	mov	r0, r4
 801a122:	4798      	blx	r3
 801a124:	3701      	adds	r7, #1
 801a126:	b2bf      	uxth	r7, r7
 801a128:	e7e7      	b.n	801a0fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 801a12a:	bf00      	nop

0801a12c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801a12c:	4b03      	ldr	r3, [pc, #12]	; (801a13c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801a12e:	2200      	movs	r2, #0
 801a130:	801a      	strh	r2, [r3, #0]
 801a132:	805a      	strh	r2, [r3, #2]
 801a134:	809a      	strh	r2, [r3, #4]
 801a136:	80da      	strh	r2, [r3, #6]
 801a138:	4770      	bx	lr
 801a13a:	bf00      	nop
 801a13c:	2001e224 	.word	0x2001e224

0801a140 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801a140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a144:	4606      	mov	r6, r0
 801a146:	b09d      	sub	sp, #116	; 0x74
 801a148:	a803      	add	r0, sp, #12
 801a14a:	4614      	mov	r4, r2
 801a14c:	468a      	mov	sl, r1
 801a14e:	461d      	mov	r5, r3
 801a150:	f000 fe9c 	bl	801ae8c <_ZN8touchgfx12TextProviderC1Ev>
 801a154:	6833      	ldr	r3, [r6, #0]
 801a156:	4630      	mov	r0, r6
 801a158:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a15a:	4798      	blx	r3
 801a15c:	6833      	ldr	r3, [r6, #0]
 801a15e:	4607      	mov	r7, r0
 801a160:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a162:	4630      	mov	r0, r6
 801a164:	4798      	blx	r3
 801a166:	462a      	mov	r2, r5
 801a168:	9000      	str	r0, [sp, #0]
 801a16a:	4621      	mov	r1, r4
 801a16c:	463b      	mov	r3, r7
 801a16e:	a803      	add	r0, sp, #12
 801a170:	f000 fef8 	bl	801af64 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a174:	2500      	movs	r5, #0
 801a176:	462c      	mov	r4, r5
 801a178:	46a9      	mov	r9, r5
 801a17a:	46a8      	mov	r8, r5
 801a17c:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801a180:	2300      	movs	r3, #0
 801a182:	9302      	str	r3, [sp, #8]
 801a184:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801a188:	429c      	cmp	r4, r3
 801a18a:	d002      	beq.n	801a192 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801a18c:	455c      	cmp	r4, fp
 801a18e:	bf18      	it	ne
 801a190:	4625      	movne	r5, r4
 801a192:	ab02      	add	r3, sp, #8
 801a194:	4632      	mov	r2, r6
 801a196:	4651      	mov	r1, sl
 801a198:	a803      	add	r0, sp, #12
 801a19a:	f001 f9f3 	bl	801b584 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a19e:	4604      	mov	r4, r0
 801a1a0:	b108      	cbz	r0, 801a1a6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801a1a2:	280a      	cmp	r0, #10
 801a1a4:	d10a      	bne.n	801a1bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801a1a6:	45c1      	cmp	r9, r8
 801a1a8:	bf38      	it	cc
 801a1aa:	46c1      	movcc	r9, r8
 801a1ac:	f04f 0800 	mov.w	r8, #0
 801a1b0:	2c00      	cmp	r4, #0
 801a1b2:	d1e5      	bne.n	801a180 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801a1b4:	4648      	mov	r0, r9
 801a1b6:	b01d      	add	sp, #116	; 0x74
 801a1b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1bc:	9a02      	ldr	r2, [sp, #8]
 801a1be:	2a00      	cmp	r2, #0
 801a1c0:	d0de      	beq.n	801a180 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801a1c2:	7b57      	ldrb	r7, [r2, #13]
 801a1c4:	6833      	ldr	r3, [r6, #0]
 801a1c6:	8894      	ldrh	r4, [r2, #4]
 801a1c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a1ca:	007f      	lsls	r7, r7, #1
 801a1cc:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801a1d0:	7a97      	ldrb	r7, [r2, #10]
 801a1d2:	4629      	mov	r1, r5
 801a1d4:	4307      	orrs	r7, r0
 801a1d6:	4630      	mov	r0, r6
 801a1d8:	4798      	blx	r3
 801a1da:	4438      	add	r0, r7
 801a1dc:	4480      	add	r8, r0
 801a1de:	fa1f f888 	uxth.w	r8, r8
 801a1e2:	e7e5      	b.n	801a1b0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801a1e4 <_ZNK8touchgfx4Font12getCharWidthEt>:
 801a1e4:	b508      	push	{r3, lr}
 801a1e6:	6803      	ldr	r3, [r0, #0]
 801a1e8:	68db      	ldr	r3, [r3, #12]
 801a1ea:	4798      	blx	r3
 801a1ec:	b128      	cbz	r0, 801a1fa <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801a1ee:	7b43      	ldrb	r3, [r0, #13]
 801a1f0:	7a80      	ldrb	r0, [r0, #10]
 801a1f2:	005b      	lsls	r3, r3, #1
 801a1f4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801a1f8:	4318      	orrs	r0, r3
 801a1fa:	bd08      	pop	{r3, pc}

0801a1fc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801a1fc:	b40e      	push	{r1, r2, r3}
 801a1fe:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a200:	b09e      	sub	sp, #120	; 0x78
 801a202:	ab23      	add	r3, sp, #140	; 0x8c
 801a204:	4605      	mov	r5, r0
 801a206:	f853 4b04 	ldr.w	r4, [r3], #4
 801a20a:	9303      	str	r3, [sp, #12]
 801a20c:	a805      	add	r0, sp, #20
 801a20e:	f000 fe3d 	bl	801ae8c <_ZN8touchgfx12TextProviderC1Ev>
 801a212:	682b      	ldr	r3, [r5, #0]
 801a214:	4628      	mov	r0, r5
 801a216:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a218:	4798      	blx	r3
 801a21a:	682b      	ldr	r3, [r5, #0]
 801a21c:	4606      	mov	r6, r0
 801a21e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a220:	4628      	mov	r0, r5
 801a222:	4798      	blx	r3
 801a224:	4633      	mov	r3, r6
 801a226:	ae1e      	add	r6, sp, #120	; 0x78
 801a228:	4621      	mov	r1, r4
 801a22a:	9000      	str	r0, [sp, #0]
 801a22c:	9a03      	ldr	r2, [sp, #12]
 801a22e:	2400      	movs	r4, #0
 801a230:	a805      	add	r0, sp, #20
 801a232:	f000 fe97 	bl	801af64 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a236:	f846 4d68 	str.w	r4, [r6, #-104]!
 801a23a:	462a      	mov	r2, r5
 801a23c:	4633      	mov	r3, r6
 801a23e:	4621      	mov	r1, r4
 801a240:	a805      	add	r0, sp, #20
 801a242:	f001 f99f 	bl	801b584 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a246:	b1f0      	cbz	r0, 801a286 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 801a248:	280a      	cmp	r0, #10
 801a24a:	d018      	beq.n	801a27e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801a24c:	9f04      	ldr	r7, [sp, #16]
 801a24e:	b1b7      	cbz	r7, 801a27e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801a250:	7b78      	ldrb	r0, [r7, #13]
 801a252:	7a3b      	ldrb	r3, [r7, #8]
 801a254:	88aa      	ldrh	r2, [r5, #4]
 801a256:	00c1      	lsls	r1, r0, #3
 801a258:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801a25c:	4319      	orrs	r1, r3
 801a25e:	0643      	lsls	r3, r0, #25
 801a260:	bf44      	itt	mi
 801a262:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801a266:	b219      	sxthmi	r1, r3
 801a268:	0100      	lsls	r0, r0, #4
 801a26a:	79fb      	ldrb	r3, [r7, #7]
 801a26c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801a270:	4303      	orrs	r3, r0
 801a272:	4413      	add	r3, r2
 801a274:	1a5b      	subs	r3, r3, r1
 801a276:	b29b      	uxth	r3, r3
 801a278:	42a3      	cmp	r3, r4
 801a27a:	bfc8      	it	gt
 801a27c:	b21c      	sxthgt	r4, r3
 801a27e:	4633      	mov	r3, r6
 801a280:	462a      	mov	r2, r5
 801a282:	2100      	movs	r1, #0
 801a284:	e7dc      	b.n	801a240 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801a286:	b2a0      	uxth	r0, r4
 801a288:	b01e      	add	sp, #120	; 0x78
 801a28a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801a28e:	b003      	add	sp, #12
 801a290:	4770      	bx	lr

0801a292 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801a292:	b40e      	push	{r1, r2, r3}
 801a294:	b570      	push	{r4, r5, r6, lr}
 801a296:	b09d      	sub	sp, #116	; 0x74
 801a298:	ab21      	add	r3, sp, #132	; 0x84
 801a29a:	4604      	mov	r4, r0
 801a29c:	f853 5b04 	ldr.w	r5, [r3], #4
 801a2a0:	9302      	str	r3, [sp, #8]
 801a2a2:	a803      	add	r0, sp, #12
 801a2a4:	f000 fdf2 	bl	801ae8c <_ZN8touchgfx12TextProviderC1Ev>
 801a2a8:	6823      	ldr	r3, [r4, #0]
 801a2aa:	4620      	mov	r0, r4
 801a2ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a2ae:	4798      	blx	r3
 801a2b0:	6823      	ldr	r3, [r4, #0]
 801a2b2:	4606      	mov	r6, r0
 801a2b4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a2b6:	4620      	mov	r0, r4
 801a2b8:	4798      	blx	r3
 801a2ba:	4633      	mov	r3, r6
 801a2bc:	9000      	str	r0, [sp, #0]
 801a2be:	9a02      	ldr	r2, [sp, #8]
 801a2c0:	4629      	mov	r1, r5
 801a2c2:	a803      	add	r0, sp, #12
 801a2c4:	f000 fe4e 	bl	801af64 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a2c8:	a803      	add	r0, sp, #12
 801a2ca:	f001 fa55 	bl	801b778 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a2ce:	2401      	movs	r4, #1
 801a2d0:	b2a3      	uxth	r3, r4
 801a2d2:	b140      	cbz	r0, 801a2e6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801a2d4:	280a      	cmp	r0, #10
 801a2d6:	bf08      	it	eq
 801a2d8:	3301      	addeq	r3, #1
 801a2da:	a803      	add	r0, sp, #12
 801a2dc:	bf08      	it	eq
 801a2de:	b21c      	sxtheq	r4, r3
 801a2e0:	f001 fa4a 	bl	801b778 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801a2e4:	e7f4      	b.n	801a2d0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801a2e6:	4618      	mov	r0, r3
 801a2e8:	b01d      	add	sp, #116	; 0x74
 801a2ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a2ee:	b003      	add	sp, #12
 801a2f0:	4770      	bx	lr

0801a2f2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801a2f2:	b40e      	push	{r1, r2, r3}
 801a2f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a2f6:	b09e      	sub	sp, #120	; 0x78
 801a2f8:	ab23      	add	r3, sp, #140	; 0x8c
 801a2fa:	4604      	mov	r4, r0
 801a2fc:	f853 5b04 	ldr.w	r5, [r3], #4
 801a300:	9303      	str	r3, [sp, #12]
 801a302:	a805      	add	r0, sp, #20
 801a304:	f000 fdc2 	bl	801ae8c <_ZN8touchgfx12TextProviderC1Ev>
 801a308:	6823      	ldr	r3, [r4, #0]
 801a30a:	4620      	mov	r0, r4
 801a30c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a30e:	4798      	blx	r3
 801a310:	6823      	ldr	r3, [r4, #0]
 801a312:	4606      	mov	r6, r0
 801a314:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a316:	4620      	mov	r0, r4
 801a318:	4798      	blx	r3
 801a31a:	4633      	mov	r3, r6
 801a31c:	4629      	mov	r1, r5
 801a31e:	9000      	str	r0, [sp, #0]
 801a320:	9a03      	ldr	r2, [sp, #12]
 801a322:	a805      	add	r0, sp, #20
 801a324:	ad1e      	add	r5, sp, #120	; 0x78
 801a326:	f000 fe1d 	bl	801af64 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a32a:	2100      	movs	r1, #0
 801a32c:	f845 1d68 	str.w	r1, [r5, #-104]!
 801a330:	4622      	mov	r2, r4
 801a332:	462b      	mov	r3, r5
 801a334:	a805      	add	r0, sp, #20
 801a336:	f001 f925 	bl	801b584 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a33a:	26ff      	movs	r6, #255	; 0xff
 801a33c:	b1d8      	cbz	r0, 801a376 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 801a33e:	280a      	cmp	r0, #10
 801a340:	d012      	beq.n	801a368 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801a342:	9804      	ldr	r0, [sp, #16]
 801a344:	b180      	cbz	r0, 801a368 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801a346:	7b47      	ldrb	r7, [r0, #13]
 801a348:	7922      	ldrb	r2, [r4, #4]
 801a34a:	00fb      	lsls	r3, r7, #3
 801a34c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801a350:	7a03      	ldrb	r3, [r0, #8]
 801a352:	430b      	orrs	r3, r1
 801a354:	0679      	lsls	r1, r7, #25
 801a356:	bf44      	itt	mi
 801a358:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a35c:	b21b      	sxthmi	r3, r3
 801a35e:	1ad3      	subs	r3, r2, r3
 801a360:	b2db      	uxtb	r3, r3
 801a362:	429e      	cmp	r6, r3
 801a364:	bf28      	it	cs
 801a366:	461e      	movcs	r6, r3
 801a368:	462b      	mov	r3, r5
 801a36a:	4622      	mov	r2, r4
 801a36c:	2100      	movs	r1, #0
 801a36e:	a805      	add	r0, sp, #20
 801a370:	f001 f908 	bl	801b584 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a374:	e7e2      	b.n	801a33c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 801a376:	4630      	mov	r0, r6
 801a378:	b01e      	add	sp, #120	; 0x78
 801a37a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801a37e:	b003      	add	sp, #12
 801a380:	4770      	bx	lr

0801a382 <_ZNK8touchgfx8Drawable10invalidateEv>:
 801a382:	b513      	push	{r0, r1, r4, lr}
 801a384:	6803      	ldr	r3, [r0, #0]
 801a386:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a38a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a38e:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a392:	2400      	movs	r4, #0
 801a394:	9400      	str	r4, [sp, #0]
 801a396:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a39a:	691b      	ldr	r3, [r3, #16]
 801a39c:	4669      	mov	r1, sp
 801a39e:	4798      	blx	r3
 801a3a0:	b002      	add	sp, #8
 801a3a2:	bd10      	pop	{r4, pc}

0801a3a4 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801a3a4:	b538      	push	{r3, r4, r5, lr}
 801a3a6:	680b      	ldr	r3, [r1, #0]
 801a3a8:	460c      	mov	r4, r1
 801a3aa:	68db      	ldr	r3, [r3, #12]
 801a3ac:	4605      	mov	r5, r0
 801a3ae:	4798      	blx	r3
 801a3b0:	6823      	ldr	r3, [r4, #0]
 801a3b2:	4620      	mov	r0, r4
 801a3b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a3b6:	4629      	mov	r1, r5
 801a3b8:	4798      	blx	r3
 801a3ba:	4628      	mov	r0, r5
 801a3bc:	bd38      	pop	{r3, r4, r5, pc}

0801a3be <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801a3be:	b410      	push	{r4}
 801a3c0:	880a      	ldrh	r2, [r1, #0]
 801a3c2:	8884      	ldrh	r4, [r0, #4]
 801a3c4:	4422      	add	r2, r4
 801a3c6:	800a      	strh	r2, [r1, #0]
 801a3c8:	88c4      	ldrh	r4, [r0, #6]
 801a3ca:	884a      	ldrh	r2, [r1, #2]
 801a3cc:	4422      	add	r2, r4
 801a3ce:	804a      	strh	r2, [r1, #2]
 801a3d0:	6940      	ldr	r0, [r0, #20]
 801a3d2:	b120      	cbz	r0, 801a3de <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801a3d4:	6803      	ldr	r3, [r0, #0]
 801a3d6:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a3da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a3dc:	4718      	bx	r3
 801a3de:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a3e2:	4770      	bx	lr

0801a3e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801a3e4:	b570      	push	{r4, r5, r6, lr}
 801a3e6:	8882      	ldrh	r2, [r0, #4]
 801a3e8:	880b      	ldrh	r3, [r1, #0]
 801a3ea:	4413      	add	r3, r2
 801a3ec:	800b      	strh	r3, [r1, #0]
 801a3ee:	88c2      	ldrh	r2, [r0, #6]
 801a3f0:	884b      	ldrh	r3, [r1, #2]
 801a3f2:	460c      	mov	r4, r1
 801a3f4:	4413      	add	r3, r2
 801a3f6:	804b      	strh	r3, [r1, #2]
 801a3f8:	4605      	mov	r5, r0
 801a3fa:	1d01      	adds	r1, r0, #4
 801a3fc:	4620      	mov	r0, r4
 801a3fe:	f7f7 fe89 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801a402:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801a406:	2b00      	cmp	r3, #0
 801a408:	dd0b      	ble.n	801a422 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801a40a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a40e:	2b00      	cmp	r3, #0
 801a410:	dd07      	ble.n	801a422 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801a412:	6968      	ldr	r0, [r5, #20]
 801a414:	b128      	cbz	r0, 801a422 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801a416:	6803      	ldr	r3, [r0, #0]
 801a418:	4621      	mov	r1, r4
 801a41a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a41c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a420:	4718      	bx	r3
 801a422:	bd70      	pop	{r4, r5, r6, pc}

0801a424 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801a424:	b570      	push	{r4, r5, r6, lr}
 801a426:	8882      	ldrh	r2, [r0, #4]
 801a428:	880b      	ldrh	r3, [r1, #0]
 801a42a:	4413      	add	r3, r2
 801a42c:	800b      	strh	r3, [r1, #0]
 801a42e:	88c2      	ldrh	r2, [r0, #6]
 801a430:	884b      	ldrh	r3, [r1, #2]
 801a432:	460c      	mov	r4, r1
 801a434:	4413      	add	r3, r2
 801a436:	804b      	strh	r3, [r1, #2]
 801a438:	4605      	mov	r5, r0
 801a43a:	1d01      	adds	r1, r0, #4
 801a43c:	4620      	mov	r0, r4
 801a43e:	f7f7 fe69 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801a442:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801a446:	2b00      	cmp	r3, #0
 801a448:	dd18      	ble.n	801a47c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801a44a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a44e:	2b00      	cmp	r3, #0
 801a450:	dd14      	ble.n	801a47c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801a452:	6968      	ldr	r0, [r5, #20]
 801a454:	b128      	cbz	r0, 801a462 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801a456:	6803      	ldr	r3, [r0, #0]
 801a458:	4621      	mov	r1, r4
 801a45a:	691b      	ldr	r3, [r3, #16]
 801a45c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a460:	4718      	bx	r3
 801a462:	4b07      	ldr	r3, [pc, #28]	; (801a480 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801a464:	681b      	ldr	r3, [r3, #0]
 801a466:	3304      	adds	r3, #4
 801a468:	429d      	cmp	r5, r3
 801a46a:	d107      	bne.n	801a47c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801a46c:	f7fe ff8c 	bl	8019388 <_ZN8touchgfx11Application11getInstanceEv>
 801a470:	6821      	ldr	r1, [r4, #0]
 801a472:	6862      	ldr	r2, [r4, #4]
 801a474:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a478:	f7ff b89c 	b.w	80195b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801a47c:	bd70      	pop	{r4, r5, r6, pc}
 801a47e:	bf00      	nop
 801a480:	2001e21c 	.word	0x2001e21c

0801a484 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801a484:	b570      	push	{r4, r5, r6, lr}
 801a486:	4604      	mov	r4, r0
 801a488:	4616      	mov	r6, r2
 801a48a:	460d      	mov	r5, r1
 801a48c:	b901      	cbnz	r1, 801a490 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801a48e:	b192      	cbz	r2, 801a4b6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801a490:	6823      	ldr	r3, [r4, #0]
 801a492:	4620      	mov	r0, r4
 801a494:	699b      	ldr	r3, [r3, #24]
 801a496:	4798      	blx	r3
 801a498:	88e2      	ldrh	r2, [r4, #6]
 801a49a:	88a1      	ldrh	r1, [r4, #4]
 801a49c:	4432      	add	r2, r6
 801a49e:	4429      	add	r1, r5
 801a4a0:	4620      	mov	r0, r4
 801a4a2:	b212      	sxth	r2, r2
 801a4a4:	b209      	sxth	r1, r1
 801a4a6:	f7e9 f9df 	bl	8003868 <_ZN8touchgfx8Drawable5setXYEss>
 801a4aa:	6823      	ldr	r3, [r4, #0]
 801a4ac:	4620      	mov	r0, r4
 801a4ae:	699b      	ldr	r3, [r3, #24]
 801a4b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a4b4:	4718      	bx	r3
 801a4b6:	bd70      	pop	{r4, r5, r6, pc}

0801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801a4b8:	b510      	push	{r4, lr}
 801a4ba:	4604      	mov	r4, r0
 801a4bc:	4608      	mov	r0, r1
 801a4be:	2300      	movs	r3, #0
 801a4c0:	8023      	strh	r3, [r4, #0]
 801a4c2:	8063      	strh	r3, [r4, #2]
 801a4c4:	6803      	ldr	r3, [r0, #0]
 801a4c6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a4ca:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801a4ce:	80a1      	strh	r1, [r4, #4]
 801a4d0:	80e2      	strh	r2, [r4, #6]
 801a4d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a4d4:	4621      	mov	r1, r4
 801a4d6:	4798      	blx	r3
 801a4d8:	4620      	mov	r0, r4
 801a4da:	bd10      	pop	{r4, pc}

0801a4dc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 801a4dc:	b530      	push	{r4, r5, lr}
 801a4de:	8083      	strh	r3, [r0, #4]
 801a4e0:	f89d 300c 	ldrb.w	r3, [sp, #12]
 801a4e4:	f89d 5010 	ldrb.w	r5, [sp, #16]
 801a4e8:	7183      	strb	r3, [r0, #6]
 801a4ea:	79c3      	ldrb	r3, [r0, #7]
 801a4ec:	6101      	str	r1, [r0, #16]
 801a4ee:	f365 0306 	bfi	r3, r5, #0, #7
 801a4f2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801a4f6:	8282      	strh	r2, [r0, #20]
 801a4f8:	f365 13c7 	bfi	r3, r5, #7, #1
 801a4fc:	71c3      	strb	r3, [r0, #7]
 801a4fe:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801a502:	7203      	strb	r3, [r0, #8]
 801a504:	f89d 301c 	ldrb.w	r3, [sp, #28]
 801a508:	7243      	strb	r3, [r0, #9]
 801a50a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801a50e:	8143      	strh	r3, [r0, #10]
 801a510:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801a514:	8183      	strh	r3, [r0, #12]
 801a516:	4b01      	ldr	r3, [pc, #4]	; (801a51c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 801a518:	6003      	str	r3, [r0, #0]
 801a51a:	bd30      	pop	{r4, r5, pc}
 801a51c:	08034fe8 	.word	0x08034fe8

0801a520 <_ZNK8touchgfx9ConstFont4findEt>:
 801a520:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a522:	6904      	ldr	r4, [r0, #16]
 801a524:	b3bc      	cbz	r4, 801a596 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a526:	88a3      	ldrh	r3, [r4, #4]
 801a528:	8a82      	ldrh	r2, [r0, #20]
 801a52a:	1acb      	subs	r3, r1, r3
 801a52c:	f102 32ff 	add.w	r2, r2, #4294967295
 801a530:	d431      	bmi.n	801a596 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a532:	4293      	cmp	r3, r2
 801a534:	dd0c      	ble.n	801a550 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801a536:	230e      	movs	r3, #14
 801a538:	fb03 4302 	mla	r3, r3, r2, r4
 801a53c:	889b      	ldrh	r3, [r3, #4]
 801a53e:	1a5b      	subs	r3, r3, r1
 801a540:	1ad3      	subs	r3, r2, r3
 801a542:	429a      	cmp	r2, r3
 801a544:	db27      	blt.n	801a596 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a546:	2b00      	cmp	r3, #0
 801a548:	bfbc      	itt	lt
 801a54a:	2302      	movlt	r3, #2
 801a54c:	fb92 f3f3 	sdivlt	r3, r2, r3
 801a550:	2500      	movs	r5, #0
 801a552:	260e      	movs	r6, #14
 801a554:	4295      	cmp	r5, r2
 801a556:	dc1e      	bgt.n	801a596 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a558:	fb06 4003 	mla	r0, r6, r3, r4
 801a55c:	8887      	ldrh	r7, [r0, #4]
 801a55e:	42b9      	cmp	r1, r7
 801a560:	d01a      	beq.n	801a598 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801a562:	d20d      	bcs.n	801a580 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801a564:	1e5a      	subs	r2, r3, #1
 801a566:	4295      	cmp	r5, r2
 801a568:	dc15      	bgt.n	801a596 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a56a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801a56e:	1a5b      	subs	r3, r3, r1
 801a570:	1ad3      	subs	r3, r2, r3
 801a572:	429a      	cmp	r2, r3
 801a574:	db0f      	blt.n	801a596 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a576:	429d      	cmp	r5, r3
 801a578:	ddec      	ble.n	801a554 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a57a:	1953      	adds	r3, r2, r5
 801a57c:	105b      	asrs	r3, r3, #1
 801a57e:	e7e9      	b.n	801a554 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a580:	1c5d      	adds	r5, r3, #1
 801a582:	42aa      	cmp	r2, r5
 801a584:	db07      	blt.n	801a596 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a586:	8a43      	ldrh	r3, [r0, #18]
 801a588:	1acb      	subs	r3, r1, r3
 801a58a:	442b      	add	r3, r5
 801a58c:	429d      	cmp	r5, r3
 801a58e:	dc02      	bgt.n	801a596 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801a590:	429a      	cmp	r2, r3
 801a592:	dadf      	bge.n	801a554 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801a594:	e7f1      	b.n	801a57a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801a596:	2000      	movs	r0, #0
 801a598:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a59a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801a59a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a59c:	4604      	mov	r4, r0
 801a59e:	4617      	mov	r7, r2
 801a5a0:	461e      	mov	r6, r3
 801a5a2:	b911      	cbnz	r1, 801a5aa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801a5a4:	2500      	movs	r5, #0
 801a5a6:	4628      	mov	r0, r5
 801a5a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a5aa:	290a      	cmp	r1, #10
 801a5ac:	d0fa      	beq.n	801a5a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a5ae:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801a5b2:	4291      	cmp	r1, r2
 801a5b4:	d0f6      	beq.n	801a5a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a5b6:	f242 020b 	movw	r2, #8203	; 0x200b
 801a5ba:	4291      	cmp	r1, r2
 801a5bc:	d0f2      	beq.n	801a5a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a5be:	f7ff ffaf 	bl	801a520 <_ZNK8touchgfx9ConstFont4findEt>
 801a5c2:	4605      	mov	r5, r0
 801a5c4:	b950      	cbnz	r0, 801a5dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801a5c6:	6823      	ldr	r3, [r4, #0]
 801a5c8:	4620      	mov	r0, r4
 801a5ca:	691b      	ldr	r3, [r3, #16]
 801a5cc:	4798      	blx	r3
 801a5ce:	4601      	mov	r1, r0
 801a5d0:	4620      	mov	r0, r4
 801a5d2:	f7ff ffa5 	bl	801a520 <_ZNK8touchgfx9ConstFont4findEt>
 801a5d6:	4605      	mov	r5, r0
 801a5d8:	2800      	cmp	r0, #0
 801a5da:	d0e3      	beq.n	801a5a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801a5dc:	6823      	ldr	r3, [r4, #0]
 801a5de:	4629      	mov	r1, r5
 801a5e0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a5e2:	4620      	mov	r0, r4
 801a5e4:	4798      	blx	r3
 801a5e6:	6038      	str	r0, [r7, #0]
 801a5e8:	6823      	ldr	r3, [r4, #0]
 801a5ea:	4620      	mov	r0, r4
 801a5ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801a5ee:	4798      	blx	r3
 801a5f0:	7030      	strb	r0, [r6, #0]
 801a5f2:	e7d8      	b.n	801a5a6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801a5f4 <_ZN8touchgfx6memsetEPvhm>:
 801a5f4:	4402      	add	r2, r0
 801a5f6:	4290      	cmp	r0, r2
 801a5f8:	d002      	beq.n	801a600 <_ZN8touchgfx6memsetEPvhm+0xc>
 801a5fa:	f800 1b01 	strb.w	r1, [r0], #1
 801a5fe:	e7fa      	b.n	801a5f6 <_ZN8touchgfx6memsetEPvhm+0x2>
 801a600:	4770      	bx	lr

0801a602 <_ZN8touchgfx4clzuEm>:
 801a602:	4603      	mov	r3, r0
 801a604:	b1c8      	cbz	r0, 801a63a <_ZN8touchgfx4clzuEm+0x38>
 801a606:	0c02      	lsrs	r2, r0, #16
 801a608:	0412      	lsls	r2, r2, #16
 801a60a:	b9a2      	cbnz	r2, 801a636 <_ZN8touchgfx4clzuEm+0x34>
 801a60c:	0403      	lsls	r3, r0, #16
 801a60e:	2010      	movs	r0, #16
 801a610:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801a614:	bf04      	itt	eq
 801a616:	021b      	lsleq	r3, r3, #8
 801a618:	3008      	addeq	r0, #8
 801a61a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801a61e:	bf04      	itt	eq
 801a620:	011b      	lsleq	r3, r3, #4
 801a622:	3004      	addeq	r0, #4
 801a624:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801a628:	bf04      	itt	eq
 801a62a:	009b      	lsleq	r3, r3, #2
 801a62c:	3002      	addeq	r0, #2
 801a62e:	2b00      	cmp	r3, #0
 801a630:	db04      	blt.n	801a63c <_ZN8touchgfx4clzuEm+0x3a>
 801a632:	3001      	adds	r0, #1
 801a634:	4770      	bx	lr
 801a636:	2000      	movs	r0, #0
 801a638:	e7ea      	b.n	801a610 <_ZN8touchgfx4clzuEm+0xe>
 801a63a:	2020      	movs	r0, #32
 801a63c:	4770      	bx	lr

0801a63e <_ZN8touchgfx7muldivuEmmmRm>:
 801a63e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a642:	4680      	mov	r8, r0
 801a644:	460f      	mov	r7, r1
 801a646:	4615      	mov	r5, r2
 801a648:	461e      	mov	r6, r3
 801a64a:	f7ff ffda 	bl	801a602 <_ZN8touchgfx4clzuEm>
 801a64e:	b998      	cbnz	r0, 801a678 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801a650:	4608      	mov	r0, r1
 801a652:	f7ff ffd6 	bl	801a602 <_ZN8touchgfx4clzuEm>
 801a656:	2800      	cmp	r0, #0
 801a658:	dd08      	ble.n	801a66c <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 801a65a:	4633      	mov	r3, r6
 801a65c:	462a      	mov	r2, r5
 801a65e:	4641      	mov	r1, r8
 801a660:	4638      	mov	r0, r7
 801a662:	f7ff ffec 	bl	801a63e <_ZN8touchgfx7muldivuEmmmRm>
 801a666:	b003      	add	sp, #12
 801a668:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a66c:	f04f 33ff 	mov.w	r3, #4294967295
 801a670:	6033      	str	r3, [r6, #0]
 801a672:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801a676:	e7f6      	b.n	801a666 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801a678:	fa31 f900 	lsrs.w	r9, r1, r0
 801a67c:	fb01 f308 	mul.w	r3, r1, r8
 801a680:	d105      	bne.n	801a68e <_ZN8touchgfx7muldivuEmmmRm+0x50>
 801a682:	fbb3 f0f5 	udiv	r0, r3, r5
 801a686:	fb05 3510 	mls	r5, r5, r0, r3
 801a68a:	6035      	str	r5, [r6, #0]
 801a68c:	e7eb      	b.n	801a666 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801a68e:	2301      	movs	r3, #1
 801a690:	fa08 fb00 	lsl.w	fp, r8, r0
 801a694:	fa03 f000 	lsl.w	r0, r3, r0
 801a698:	3801      	subs	r0, #1
 801a69a:	462a      	mov	r2, r5
 801a69c:	4633      	mov	r3, r6
 801a69e:	4641      	mov	r1, r8
 801a6a0:	4038      	ands	r0, r7
 801a6a2:	f7ff ffcc 	bl	801a63e <_ZN8touchgfx7muldivuEmmmRm>
 801a6a6:	fbbb faf5 	udiv	sl, fp, r5
 801a6aa:	462a      	mov	r2, r5
 801a6ac:	4607      	mov	r7, r0
 801a6ae:	ab01      	add	r3, sp, #4
 801a6b0:	fb05 b11a 	mls	r1, r5, sl, fp
 801a6b4:	4648      	mov	r0, r9
 801a6b6:	f7ff ffc2 	bl	801a63e <_ZN8touchgfx7muldivuEmmmRm>
 801a6ba:	9b01      	ldr	r3, [sp, #4]
 801a6bc:	6832      	ldr	r2, [r6, #0]
 801a6be:	fb09 f40a 	mul.w	r4, r9, sl
 801a6c2:	441a      	add	r2, r3
 801a6c4:	fbb2 f3f5 	udiv	r3, r2, r5
 801a6c8:	441c      	add	r4, r3
 801a6ca:	443c      	add	r4, r7
 801a6cc:	4420      	add	r0, r4
 801a6ce:	fb05 2513 	mls	r5, r5, r3, r2
 801a6d2:	e7da      	b.n	801a68a <_ZN8touchgfx7muldivuEmmmRm+0x4c>

0801a6d4 <_ZN8touchgfx6muldivElllRl>:
 801a6d4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a6d6:	2800      	cmp	r0, #0
 801a6d8:	bfba      	itte	lt
 801a6da:	4240      	neglt	r0, r0
 801a6dc:	f04f 34ff 	movlt.w	r4, #4294967295
 801a6e0:	2401      	movge	r4, #1
 801a6e2:	2900      	cmp	r1, #0
 801a6e4:	bfbc      	itt	lt
 801a6e6:	4249      	neglt	r1, r1
 801a6e8:	4264      	neglt	r4, r4
 801a6ea:	2a00      	cmp	r2, #0
 801a6ec:	bfb6      	itet	lt
 801a6ee:	4265      	neglt	r5, r4
 801a6f0:	4625      	movge	r5, r4
 801a6f2:	4252      	neglt	r2, r2
 801a6f4:	4288      	cmp	r0, r1
 801a6f6:	461e      	mov	r6, r3
 801a6f8:	bfc2      	ittt	gt
 801a6fa:	4603      	movgt	r3, r0
 801a6fc:	4608      	movgt	r0, r1
 801a6fe:	4619      	movgt	r1, r3
 801a700:	ab01      	add	r3, sp, #4
 801a702:	f7ff ff9c 	bl	801a63e <_ZN8touchgfx7muldivuEmmmRm>
 801a706:	9b01      	ldr	r3, [sp, #4]
 801a708:	4368      	muls	r0, r5
 801a70a:	435c      	muls	r4, r3
 801a70c:	6034      	str	r4, [r6, #0]
 801a70e:	b002      	add	sp, #8
 801a710:	bd70      	pop	{r4, r5, r6, pc}

0801a712 <_ZN8touchgfx6muldivElll>:
 801a712:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a714:	4606      	mov	r6, r0
 801a716:	ab01      	add	r3, sp, #4
 801a718:	460d      	mov	r5, r1
 801a71a:	4614      	mov	r4, r2
 801a71c:	f7ff ffda 	bl	801a6d4 <_ZN8touchgfx6muldivElllRl>
 801a720:	2e00      	cmp	r6, #0
 801a722:	db20      	blt.n	801a766 <_ZN8touchgfx6muldivElll+0x54>
 801a724:	bf14      	ite	ne
 801a726:	2301      	movne	r3, #1
 801a728:	2300      	moveq	r3, #0
 801a72a:	2d00      	cmp	r5, #0
 801a72c:	db1e      	blt.n	801a76c <_ZN8touchgfx6muldivElll+0x5a>
 801a72e:	bf14      	ite	ne
 801a730:	2201      	movne	r2, #1
 801a732:	2200      	moveq	r2, #0
 801a734:	2c00      	cmp	r4, #0
 801a736:	fb03 f202 	mul.w	r2, r3, r2
 801a73a:	db1a      	blt.n	801a772 <_ZN8touchgfx6muldivElll+0x60>
 801a73c:	bf14      	ite	ne
 801a73e:	2301      	movne	r3, #1
 801a740:	2300      	moveq	r3, #0
 801a742:	4353      	muls	r3, r2
 801a744:	2b01      	cmp	r3, #1
 801a746:	d117      	bne.n	801a778 <_ZN8touchgfx6muldivElll+0x66>
 801a748:	9b01      	ldr	r3, [sp, #4]
 801a74a:	2c00      	cmp	r4, #0
 801a74c:	bfb8      	it	lt
 801a74e:	4264      	neglt	r4, r4
 801a750:	2b00      	cmp	r3, #0
 801a752:	f104 0401 	add.w	r4, r4, #1
 801a756:	bfb8      	it	lt
 801a758:	425b      	neglt	r3, r3
 801a75a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801a75e:	db00      	blt.n	801a762 <_ZN8touchgfx6muldivElll+0x50>
 801a760:	3001      	adds	r0, #1
 801a762:	b002      	add	sp, #8
 801a764:	bd70      	pop	{r4, r5, r6, pc}
 801a766:	f04f 33ff 	mov.w	r3, #4294967295
 801a76a:	e7de      	b.n	801a72a <_ZN8touchgfx6muldivElll+0x18>
 801a76c:	f04f 32ff 	mov.w	r2, #4294967295
 801a770:	e7e0      	b.n	801a734 <_ZN8touchgfx6muldivElll+0x22>
 801a772:	f04f 33ff 	mov.w	r3, #4294967295
 801a776:	e7e4      	b.n	801a742 <_ZN8touchgfx6muldivElll+0x30>
 801a778:	3301      	adds	r3, #1
 801a77a:	d1f2      	bne.n	801a762 <_ZN8touchgfx6muldivElll+0x50>
 801a77c:	9b01      	ldr	r3, [sp, #4]
 801a77e:	2c00      	cmp	r4, #0
 801a780:	bfb8      	it	lt
 801a782:	4264      	neglt	r4, r4
 801a784:	2b00      	cmp	r3, #0
 801a786:	bfb8      	it	lt
 801a788:	425b      	neglt	r3, r3
 801a78a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801a78e:	bfc8      	it	gt
 801a790:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801a794:	e7e5      	b.n	801a762 <_ZN8touchgfx6muldivElll+0x50>

0801a796 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801a796:	2000      	movs	r0, #0
 801a798:	4770      	bx	lr

0801a79a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801a79a:	2001      	movs	r0, #1
 801a79c:	4770      	bx	lr

0801a79e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801a79e:	2002      	movs	r0, #2
 801a7a0:	4770      	bx	lr

0801a7a2 <_ZN8touchgfx6ScreenD1Ev>:
 801a7a2:	4770      	bx	lr

0801a7a4 <_ZN8touchgfx12GestureEventD1Ev>:
 801a7a4:	4770      	bx	lr

0801a7a6 <_ZN8touchgfx9DragEventD1Ev>:
 801a7a6:	4770      	bx	lr

0801a7a8 <_ZN8touchgfx10ClickEventD1Ev>:
 801a7a8:	4770      	bx	lr

0801a7aa <_ZN8touchgfx10ClickEventD0Ev>:
 801a7aa:	b510      	push	{r4, lr}
 801a7ac:	210c      	movs	r1, #12
 801a7ae:	4604      	mov	r4, r0
 801a7b0:	f010 fcd3 	bl	802b15a <_ZdlPvj>
 801a7b4:	4620      	mov	r0, r4
 801a7b6:	bd10      	pop	{r4, pc}

0801a7b8 <_ZN8touchgfx9DragEventD0Ev>:
 801a7b8:	b510      	push	{r4, lr}
 801a7ba:	2110      	movs	r1, #16
 801a7bc:	4604      	mov	r4, r0
 801a7be:	f010 fccc 	bl	802b15a <_ZdlPvj>
 801a7c2:	4620      	mov	r0, r4
 801a7c4:	bd10      	pop	{r4, pc}

0801a7c6 <_ZN8touchgfx12GestureEventD0Ev>:
 801a7c6:	b510      	push	{r4, lr}
 801a7c8:	210c      	movs	r1, #12
 801a7ca:	4604      	mov	r4, r0
 801a7cc:	f010 fcc5 	bl	802b15a <_ZdlPvj>
 801a7d0:	4620      	mov	r0, r4
 801a7d2:	bd10      	pop	{r4, pc}

0801a7d4 <_ZN8touchgfx6ScreenD0Ev>:
 801a7d4:	b510      	push	{r4, lr}
 801a7d6:	213c      	movs	r1, #60	; 0x3c
 801a7d8:	4604      	mov	r4, r0
 801a7da:	f010 fcbe 	bl	802b15a <_ZdlPvj>
 801a7de:	4620      	mov	r0, r4
 801a7e0:	bd10      	pop	{r4, pc}
	...

0801a7e4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801a7e4:	b530      	push	{r4, r5, lr}
 801a7e6:	460d      	mov	r5, r1
 801a7e8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a7ea:	b087      	sub	sp, #28
 801a7ec:	4604      	mov	r4, r0
 801a7ee:	b301      	cbz	r1, 801a832 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801a7f0:	a801      	add	r0, sp, #4
 801a7f2:	f7ff fe61 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a7f6:	892a      	ldrh	r2, [r5, #8]
 801a7f8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801a7fc:	7928      	ldrb	r0, [r5, #4]
 801a7fe:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801a802:	f88d 0010 	strb.w	r0, [sp, #16]
 801a806:	1ad2      	subs	r2, r2, r3
 801a808:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801a80a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a80c:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a810:	441a      	add	r2, r3
 801a812:	896b      	ldrh	r3, [r5, #10]
 801a814:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801a818:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a81c:	1b5b      	subs	r3, r3, r5
 801a81e:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801a820:	442b      	add	r3, r5
 801a822:	4d05      	ldr	r5, [pc, #20]	; (801a838 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801a824:	9503      	str	r5, [sp, #12]
 801a826:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a82a:	6803      	ldr	r3, [r0, #0]
 801a82c:	a903      	add	r1, sp, #12
 801a82e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a830:	4798      	blx	r3
 801a832:	b007      	add	sp, #28
 801a834:	bd30      	pop	{r4, r5, pc}
 801a836:	bf00      	nop
 801a838:	08035068 	.word	0x08035068

0801a83c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801a83c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a840:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801a842:	b08a      	sub	sp, #40	; 0x28
 801a844:	4604      	mov	r4, r0
 801a846:	460d      	mov	r5, r1
 801a848:	b113      	cbz	r3, 801a850 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801a84a:	790b      	ldrb	r3, [r1, #4]
 801a84c:	2b00      	cmp	r3, #0
 801a84e:	d044      	beq.n	801a8da <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a850:	f104 0804 	add.w	r8, r4, #4
 801a854:	4641      	mov	r1, r8
 801a856:	a803      	add	r0, sp, #12
 801a858:	f7ff fe2e 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a85c:	792b      	ldrb	r3, [r5, #4]
 801a85e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a862:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801a866:	b983      	cbnz	r3, 801a88a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801a868:	892a      	ldrh	r2, [r5, #8]
 801a86a:	88e9      	ldrh	r1, [r5, #6]
 801a86c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801a870:	1b92      	subs	r2, r2, r6
 801a872:	1bc9      	subs	r1, r1, r7
 801a874:	9301      	str	r3, [sp, #4]
 801a876:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801a87a:	9300      	str	r3, [sp, #0]
 801a87c:	b212      	sxth	r2, r2
 801a87e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801a882:	b209      	sxth	r1, r1
 801a884:	4640      	mov	r0, r8
 801a886:	f7f7 fb61 	bl	8011f4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801a88a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801a88c:	b329      	cbz	r1, 801a8da <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a88e:	a805      	add	r0, sp, #20
 801a890:	f7ff fe12 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a894:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801a898:	792b      	ldrb	r3, [r5, #4]
 801a89a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a89c:	f88d 3020 	strb.w	r3, [sp, #32]
 801a8a0:	1abf      	subs	r7, r7, r2
 801a8a2:	88ea      	ldrh	r2, [r5, #6]
 801a8a4:	4417      	add	r7, r2
 801a8a6:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801a8a8:	4417      	add	r7, r2
 801a8aa:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801a8ae:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801a8b2:	1ab6      	subs	r6, r6, r2
 801a8b4:	892a      	ldrh	r2, [r5, #8]
 801a8b6:	4416      	add	r6, r2
 801a8b8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a8ba:	4416      	add	r6, r2
 801a8bc:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801a8c0:	4a07      	ldr	r2, [pc, #28]	; (801a8e0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801a8c2:	9207      	str	r2, [sp, #28]
 801a8c4:	2600      	movs	r6, #0
 801a8c6:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801a8ca:	6803      	ldr	r3, [r0, #0]
 801a8cc:	a907      	add	r1, sp, #28
 801a8ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a8d0:	4798      	blx	r3
 801a8d2:	792b      	ldrb	r3, [r5, #4]
 801a8d4:	b10b      	cbz	r3, 801a8da <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a8d6:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801a8da:	b00a      	add	sp, #40	; 0x28
 801a8dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a8e0:	08035040 	.word	0x08035040

0801a8e4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801a8e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a8e8:	460c      	mov	r4, r1
 801a8ea:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a8ec:	b088      	sub	sp, #32
 801a8ee:	4605      	mov	r5, r0
 801a8f0:	2900      	cmp	r1, #0
 801a8f2:	d06d      	beq.n	801a9d0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801a8f4:	4668      	mov	r0, sp
 801a8f6:	f7ff fddf 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a8fa:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801a8fc:	88e3      	ldrh	r3, [r4, #6]
 801a8fe:	f9bd 8000 	ldrsh.w	r8, [sp]
 801a902:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801a906:	440b      	add	r3, r1
 801a908:	b21b      	sxth	r3, r3
 801a90a:	4543      	cmp	r3, r8
 801a90c:	db31      	blt.n	801a972 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a90e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801a912:	44c4      	add	ip, r8
 801a914:	fa0f fc8c 	sxth.w	ip, ip
 801a918:	4563      	cmp	r3, ip
 801a91a:	da2a      	bge.n	801a972 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a91c:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801a91e:	8926      	ldrh	r6, [r4, #8]
 801a920:	4416      	add	r6, r2
 801a922:	b236      	sxth	r6, r6
 801a924:	42be      	cmp	r6, r7
 801a926:	db24      	blt.n	801a972 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a928:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801a92c:	4438      	add	r0, r7
 801a92e:	b200      	sxth	r0, r0
 801a930:	4286      	cmp	r6, r0
 801a932:	da1e      	bge.n	801a972 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a934:	8963      	ldrh	r3, [r4, #10]
 801a936:	4419      	add	r1, r3
 801a938:	b209      	sxth	r1, r1
 801a93a:	4541      	cmp	r1, r8
 801a93c:	db08      	blt.n	801a950 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a93e:	4561      	cmp	r1, ip
 801a940:	da06      	bge.n	801a950 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a942:	89a3      	ldrh	r3, [r4, #12]
 801a944:	441a      	add	r2, r3
 801a946:	b212      	sxth	r2, r2
 801a948:	42ba      	cmp	r2, r7
 801a94a:	db01      	blt.n	801a950 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a94c:	4282      	cmp	r2, r0
 801a94e:	db10      	blt.n	801a972 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a950:	4b21      	ldr	r3, [pc, #132]	; (801a9d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801a952:	9304      	str	r3, [sp, #16]
 801a954:	2302      	movs	r3, #2
 801a956:	f88d 3014 	strb.w	r3, [sp, #20]
 801a95a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a95c:	2300      	movs	r3, #0
 801a95e:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a962:	f8ad 3018 	strh.w	r3, [sp, #24]
 801a966:	f8ad 301a 	strh.w	r3, [sp, #26]
 801a96a:	6803      	ldr	r3, [r0, #0]
 801a96c:	a904      	add	r1, sp, #16
 801a96e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a970:	4798      	blx	r3
 801a972:	1d29      	adds	r1, r5, #4
 801a974:	a802      	add	r0, sp, #8
 801a976:	f7ff fd9f 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a97a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a97e:	88e0      	ldrh	r0, [r4, #6]
 801a980:	7921      	ldrb	r1, [r4, #4]
 801a982:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801a986:	8922      	ldrh	r2, [r4, #8]
 801a988:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801a98a:	f88d 1014 	strb.w	r1, [sp, #20]
 801a98e:	eba3 0808 	sub.w	r8, r3, r8
 801a992:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a996:	1bdf      	subs	r7, r3, r7
 801a998:	b2bb      	uxth	r3, r7
 801a99a:	fa1f f888 	uxth.w	r8, r8
 801a99e:	8967      	ldrh	r7, [r4, #10]
 801a9a0:	89a4      	ldrh	r4, [r4, #12]
 801a9a2:	4440      	add	r0, r8
 801a9a4:	4460      	add	r0, ip
 801a9a6:	441a      	add	r2, r3
 801a9a8:	44b8      	add	r8, r7
 801a9aa:	4423      	add	r3, r4
 801a9ac:	f8ad 0016 	strh.w	r0, [sp, #22]
 801a9b0:	4433      	add	r3, r6
 801a9b2:	4432      	add	r2, r6
 801a9b4:	44e0      	add	r8, ip
 801a9b6:	4c09      	ldr	r4, [pc, #36]	; (801a9dc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801a9b8:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a9ba:	9404      	str	r4, [sp, #16]
 801a9bc:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a9c0:	f8ad 801a 	strh.w	r8, [sp, #26]
 801a9c4:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a9c8:	6803      	ldr	r3, [r0, #0]
 801a9ca:	a904      	add	r1, sp, #16
 801a9cc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a9ce:	4798      	blx	r3
 801a9d0:	b008      	add	sp, #32
 801a9d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a9d6:	bf00      	nop
 801a9d8:	08035040 	.word	0x08035040
 801a9dc:	08035054 	.word	0x08035054

0801a9e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801a9e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801a9e2:	4604      	mov	r4, r0
 801a9e4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801a9e8:	3201      	adds	r2, #1
 801a9ea:	d112      	bne.n	801aa12 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801a9ec:	6803      	ldr	r3, [r0, #0]
 801a9ee:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a9f2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a9f6:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a9fa:	2500      	movs	r5, #0
 801a9fc:	9500      	str	r5, [sp, #0]
 801a9fe:	466d      	mov	r5, sp
 801aa00:	4629      	mov	r1, r5
 801aa02:	f8ad 2006 	strh.w	r2, [sp, #6]
 801aa06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801aa08:	4798      	blx	r3
 801aa0a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801aa0e:	e884 0003 	stmia.w	r4, {r0, r1}
 801aa12:	4620      	mov	r0, r4
 801aa14:	b003      	add	sp, #12
 801aa16:	bd30      	pop	{r4, r5, pc}

0801aa18 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801aa18:	b513      	push	{r0, r1, r4, lr}
 801aa1a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801aa1e:	3301      	adds	r3, #1
 801aa20:	4604      	mov	r4, r0
 801aa22:	d109      	bne.n	801aa38 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801aa24:	4601      	mov	r1, r0
 801aa26:	4668      	mov	r0, sp
 801aa28:	f7ff fd46 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801aa2c:	f8bd 3000 	ldrh.w	r3, [sp]
 801aa30:	8423      	strh	r3, [r4, #32]
 801aa32:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801aa36:	8463      	strh	r3, [r4, #34]	; 0x22
 801aa38:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801aa3c:	b002      	add	sp, #8
 801aa3e:	bd10      	pop	{r4, pc}

0801aa40 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801aa40:	b513      	push	{r0, r1, r4, lr}
 801aa42:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801aa46:	3301      	adds	r3, #1
 801aa48:	4604      	mov	r4, r0
 801aa4a:	d109      	bne.n	801aa60 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801aa4c:	4601      	mov	r1, r0
 801aa4e:	4668      	mov	r0, sp
 801aa50:	f7ff fd32 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801aa54:	f8bd 3000 	ldrh.w	r3, [sp]
 801aa58:	8423      	strh	r3, [r4, #32]
 801aa5a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801aa5e:	8463      	strh	r3, [r4, #34]	; 0x22
 801aa60:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801aa64:	b002      	add	sp, #8
 801aa66:	bd10      	pop	{r4, pc}

0801aa68 <_ZN8touchgfx6ScreenC1Ev>:
 801aa68:	b570      	push	{r4, r5, r6, lr}
 801aa6a:	4605      	mov	r5, r0
 801aa6c:	4b16      	ldr	r3, [pc, #88]	; (801aac8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801aa6e:	f845 3b04 	str.w	r3, [r5], #4
 801aa72:	2300      	movs	r3, #0
 801aa74:	8103      	strh	r3, [r0, #8]
 801aa76:	8143      	strh	r3, [r0, #10]
 801aa78:	8183      	strh	r3, [r0, #12]
 801aa7a:	81c3      	strh	r3, [r0, #14]
 801aa7c:	8203      	strh	r3, [r0, #16]
 801aa7e:	8243      	strh	r3, [r0, #18]
 801aa80:	8283      	strh	r3, [r0, #20]
 801aa82:	82c3      	strh	r3, [r0, #22]
 801aa84:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801aa88:	6203      	str	r3, [r0, #32]
 801aa8a:	8483      	strh	r3, [r0, #36]	; 0x24
 801aa8c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801aa8e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801aa92:	4a0e      	ldr	r2, [pc, #56]	; (801aacc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801aa94:	6343      	str	r3, [r0, #52]	; 0x34
 801aa96:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801aa9a:	4b0d      	ldr	r3, [pc, #52]	; (801aad0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801aa9c:	6042      	str	r2, [r0, #4]
 801aa9e:	f9b3 6000 	ldrsh.w	r6, [r3]
 801aaa2:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801aaa4:	4a0b      	ldr	r2, [pc, #44]	; (801aad4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801aaa6:	4604      	mov	r4, r0
 801aaa8:	2101      	movs	r1, #1
 801aaaa:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801aaae:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801aab2:	f9b2 1000 	ldrsh.w	r1, [r2]
 801aab6:	4628      	mov	r0, r5
 801aab8:	4798      	blx	r3
 801aaba:	6863      	ldr	r3, [r4, #4]
 801aabc:	4628      	mov	r0, r5
 801aabe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801aac0:	4631      	mov	r1, r6
 801aac2:	4798      	blx	r3
 801aac4:	4620      	mov	r0, r4
 801aac6:	bd70      	pop	{r4, r5, r6, pc}
 801aac8:	0803507c 	.word	0x0803507c
 801aacc:	08033294 	.word	0x08033294
 801aad0:	2001e1b6 	.word	0x2001e1b6
 801aad4:	2001e1b4 	.word	0x2001e1b4

0801aad8 <_ZN8touchgfx6Screen4drawEv>:
 801aad8:	b507      	push	{r0, r1, r2, lr}
 801aada:	4b09      	ldr	r3, [pc, #36]	; (801ab00 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801aadc:	f9b3 2000 	ldrsh.w	r2, [r3]
 801aae0:	4b08      	ldr	r3, [pc, #32]	; (801ab04 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801aae2:	f8ad 2004 	strh.w	r2, [sp, #4]
 801aae6:	f9b3 3000 	ldrsh.w	r3, [r3]
 801aaea:	f8ad 3006 	strh.w	r3, [sp, #6]
 801aaee:	6803      	ldr	r3, [r0, #0]
 801aaf0:	2100      	movs	r1, #0
 801aaf2:	9100      	str	r1, [sp, #0]
 801aaf4:	689b      	ldr	r3, [r3, #8]
 801aaf6:	4669      	mov	r1, sp
 801aaf8:	4798      	blx	r3
 801aafa:	b003      	add	sp, #12
 801aafc:	f85d fb04 	ldr.w	pc, [sp], #4
 801ab00:	2001e1b4 	.word	0x2001e1b4
 801ab04:	2001e1b6 	.word	0x2001e1b6

0801ab08 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801ab08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab0c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801ab10:	2b00      	cmp	r3, #0
 801ab12:	b089      	sub	sp, #36	; 0x24
 801ab14:	4680      	mov	r8, r0
 801ab16:	460c      	mov	r4, r1
 801ab18:	4615      	mov	r5, r2
 801ab1a:	dd0e      	ble.n	801ab3a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801ab1c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801ab20:	2b00      	cmp	r3, #0
 801ab22:	dd0a      	ble.n	801ab3a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801ab24:	4628      	mov	r0, r5
 801ab26:	f7ff ff5b 	bl	801a9e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801ab2a:	4621      	mov	r1, r4
 801ab2c:	f7f9 fd2c 	bl	8014588 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801ab30:	69eb      	ldr	r3, [r5, #28]
 801ab32:	b928      	cbnz	r0, 801ab40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801ab34:	461d      	mov	r5, r3
 801ab36:	2b00      	cmp	r3, #0
 801ab38:	d1f4      	bne.n	801ab24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801ab3a:	b009      	add	sp, #36	; 0x24
 801ab3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab40:	ae04      	add	r6, sp, #16
 801ab42:	2b00      	cmp	r3, #0
 801ab44:	f000 80b5 	beq.w	801acb2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801ab48:	682b      	ldr	r3, [r5, #0]
 801ab4a:	4629      	mov	r1, r5
 801ab4c:	68db      	ldr	r3, [r3, #12]
 801ab4e:	a802      	add	r0, sp, #8
 801ab50:	4798      	blx	r3
 801ab52:	4628      	mov	r0, r5
 801ab54:	f7ff ff60 	bl	801aa18 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801ab58:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801ab5c:	4407      	add	r7, r0
 801ab5e:	4628      	mov	r0, r5
 801ab60:	f7ff ff6e 	bl	801aa40 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801ab64:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ab68:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801ab6c:	f8ad 2014 	strh.w	r2, [sp, #20]
 801ab70:	4418      	add	r0, r3
 801ab72:	4621      	mov	r1, r4
 801ab74:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801ab78:	f8ad 0012 	strh.w	r0, [sp, #18]
 801ab7c:	b23f      	sxth	r7, r7
 801ab7e:	4630      	mov	r0, r6
 801ab80:	f8ad 3016 	strh.w	r3, [sp, #22]
 801ab84:	f8ad 7010 	strh.w	r7, [sp, #16]
 801ab88:	f7f7 fac4 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801ab8c:	4628      	mov	r0, r5
 801ab8e:	f7ff ff27 	bl	801a9e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801ab92:	4602      	mov	r2, r0
 801ab94:	e896 0003 	ldmia.w	r6, {r0, r1}
 801ab98:	ab06      	add	r3, sp, #24
 801ab9a:	e883 0003 	stmia.w	r3, {r0, r1}
 801ab9e:	4611      	mov	r1, r2
 801aba0:	4618      	mov	r0, r3
 801aba2:	f7f7 fab7 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801aba6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801abaa:	f9b4 1000 	ldrsh.w	r1, [r4]
 801abae:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801abb2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801abb6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801abba:	4299      	cmp	r1, r3
 801abbc:	d10b      	bne.n	801abd6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801abbe:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801abc2:	4552      	cmp	r2, sl
 801abc4:	d107      	bne.n	801abd6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801abc6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801abca:	455a      	cmp	r2, fp
 801abcc:	d103      	bne.n	801abd6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801abce:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801abd2:	454a      	cmp	r2, r9
 801abd4:	d06d      	beq.n	801acb2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801abd6:	f1bb 0f00 	cmp.w	fp, #0
 801abda:	dd65      	ble.n	801aca8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801abdc:	f1b9 0f00 	cmp.w	r9, #0
 801abe0:	dd62      	ble.n	801aca8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801abe2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801abe6:	fa1f f08a 	uxth.w	r0, sl
 801abea:	4552      	cmp	r2, sl
 801abec:	9000      	str	r0, [sp, #0]
 801abee:	da12      	bge.n	801ac16 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801abf0:	9301      	str	r3, [sp, #4]
 801abf2:	9b00      	ldr	r3, [sp, #0]
 801abf4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801abf8:	f8ad 2012 	strh.w	r2, [sp, #18]
 801abfc:	1a9a      	subs	r2, r3, r2
 801abfe:	f8ad 1010 	strh.w	r1, [sp, #16]
 801ac02:	f8ad 0014 	strh.w	r0, [sp, #20]
 801ac06:	f8ad 2016 	strh.w	r2, [sp, #22]
 801ac0a:	69ea      	ldr	r2, [r5, #28]
 801ac0c:	4631      	mov	r1, r6
 801ac0e:	4640      	mov	r0, r8
 801ac10:	f7ff ff7a 	bl	801ab08 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ac14:	9b01      	ldr	r3, [sp, #4]
 801ac16:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ac1a:	429a      	cmp	r2, r3
 801ac1c:	b29f      	uxth	r7, r3
 801ac1e:	da0d      	bge.n	801ac3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801ac20:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ac24:	1aba      	subs	r2, r7, r2
 801ac26:	f8ad a012 	strh.w	sl, [sp, #18]
 801ac2a:	f8ad 2014 	strh.w	r2, [sp, #20]
 801ac2e:	f8ad 9016 	strh.w	r9, [sp, #22]
 801ac32:	69ea      	ldr	r2, [r5, #28]
 801ac34:	4631      	mov	r1, r6
 801ac36:	4640      	mov	r0, r8
 801ac38:	f7ff ff66 	bl	801ab08 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ac3c:	8822      	ldrh	r2, [r4, #0]
 801ac3e:	88a3      	ldrh	r3, [r4, #4]
 801ac40:	445f      	add	r7, fp
 801ac42:	4413      	add	r3, r2
 801ac44:	b29b      	uxth	r3, r3
 801ac46:	b2bf      	uxth	r7, r7
 801ac48:	b23a      	sxth	r2, r7
 801ac4a:	b219      	sxth	r1, r3
 801ac4c:	4291      	cmp	r1, r2
 801ac4e:	dd0d      	ble.n	801ac6c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801ac50:	1bdb      	subs	r3, r3, r7
 801ac52:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ac56:	f8ad a012 	strh.w	sl, [sp, #18]
 801ac5a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801ac5e:	f8ad 9016 	strh.w	r9, [sp, #22]
 801ac62:	69ea      	ldr	r2, [r5, #28]
 801ac64:	4631      	mov	r1, r6
 801ac66:	4640      	mov	r0, r8
 801ac68:	f7ff ff4e 	bl	801ab08 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ac6c:	88e2      	ldrh	r2, [r4, #6]
 801ac6e:	8863      	ldrh	r3, [r4, #2]
 801ac70:	4413      	add	r3, r2
 801ac72:	9a00      	ldr	r2, [sp, #0]
 801ac74:	444a      	add	r2, r9
 801ac76:	b29b      	uxth	r3, r3
 801ac78:	fa1f f982 	uxth.w	r9, r2
 801ac7c:	fa0f f289 	sxth.w	r2, r9
 801ac80:	b219      	sxth	r1, r3
 801ac82:	428a      	cmp	r2, r1
 801ac84:	da15      	bge.n	801acb2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801ac86:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ac8a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ac8e:	f8ad 1014 	strh.w	r1, [sp, #20]
 801ac92:	eba3 0309 	sub.w	r3, r3, r9
 801ac96:	f8ad 0010 	strh.w	r0, [sp, #16]
 801ac9a:	f8ad 2012 	strh.w	r2, [sp, #18]
 801ac9e:	f8ad 3016 	strh.w	r3, [sp, #22]
 801aca2:	69ea      	ldr	r2, [r5, #28]
 801aca4:	4631      	mov	r1, r6
 801aca6:	e001      	b.n	801acac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801aca8:	69ea      	ldr	r2, [r5, #28]
 801acaa:	4621      	mov	r1, r4
 801acac:	4640      	mov	r0, r8
 801acae:	f7ff ff2b 	bl	801ab08 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801acb2:	4628      	mov	r0, r5
 801acb4:	f7ff fe94 	bl	801a9e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801acb8:	6861      	ldr	r1, [r4, #4]
 801acba:	4602      	mov	r2, r0
 801acbc:	6820      	ldr	r0, [r4, #0]
 801acbe:	4633      	mov	r3, r6
 801acc0:	c303      	stmia	r3!, {r0, r1}
 801acc2:	4611      	mov	r1, r2
 801acc4:	4630      	mov	r0, r6
 801acc6:	f7f7 fa25 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801acca:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801acce:	2b00      	cmp	r3, #0
 801acd0:	f77f af33 	ble.w	801ab3a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801acd4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801acd8:	2b00      	cmp	r3, #0
 801acda:	f77f af2e 	ble.w	801ab3a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801acde:	4628      	mov	r0, r5
 801ace0:	f7ff fe9a 	bl	801aa18 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801ace4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801ace8:	1a18      	subs	r0, r3, r0
 801acea:	f8ad 0010 	strh.w	r0, [sp, #16]
 801acee:	4628      	mov	r0, r5
 801acf0:	f7ff fea6 	bl	801aa40 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801acf4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801acf8:	1a18      	subs	r0, r3, r0
 801acfa:	f8ad 0012 	strh.w	r0, [sp, #18]
 801acfe:	682b      	ldr	r3, [r5, #0]
 801ad00:	4631      	mov	r1, r6
 801ad02:	689b      	ldr	r3, [r3, #8]
 801ad04:	4628      	mov	r0, r5
 801ad06:	4798      	blx	r3
 801ad08:	e717      	b.n	801ab3a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801ad0a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801ad0a:	b570      	push	{r4, r5, r6, lr}
 801ad0c:	460c      	mov	r4, r1
 801ad0e:	b086      	sub	sp, #24
 801ad10:	1d06      	adds	r6, r0, #4
 801ad12:	2300      	movs	r3, #0
 801ad14:	4631      	mov	r1, r6
 801ad16:	4605      	mov	r5, r0
 801ad18:	a802      	add	r0, sp, #8
 801ad1a:	9301      	str	r3, [sp, #4]
 801ad1c:	f7ff fbcc 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801ad20:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ad24:	8822      	ldrh	r2, [r4, #0]
 801ad26:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801ad2a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ad2e:	f8ad 0014 	strh.w	r0, [sp, #20]
 801ad32:	1ad2      	subs	r2, r2, r3
 801ad34:	8863      	ldrh	r3, [r4, #2]
 801ad36:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ad3a:	1a5b      	subs	r3, r3, r1
 801ad3c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801ad40:	f8ad 1016 	strh.w	r1, [sp, #22]
 801ad44:	aa01      	add	r2, sp, #4
 801ad46:	a904      	add	r1, sp, #16
 801ad48:	4630      	mov	r0, r6
 801ad4a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ad4e:	f7f7 fab9 	bl	80122c4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801ad52:	9a01      	ldr	r2, [sp, #4]
 801ad54:	b11a      	cbz	r2, 801ad5e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801ad56:	4621      	mov	r1, r4
 801ad58:	4628      	mov	r0, r5
 801ad5a:	f7ff fed5 	bl	801ab08 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ad5e:	b006      	add	sp, #24
 801ad60:	bd70      	pop	{r4, r5, r6, pc}

0801ad62 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801ad62:	b530      	push	{r4, r5, lr}
 801ad64:	4602      	mov	r2, r0
 801ad66:	4604      	mov	r4, r0
 801ad68:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801ad6c:	b085      	sub	sp, #20
 801ad6e:	460d      	mov	r5, r1
 801ad70:	6851      	ldr	r1, [r2, #4]
 801ad72:	466b      	mov	r3, sp
 801ad74:	c303      	stmia	r3!, {r0, r1}
 801ad76:	4629      	mov	r1, r5
 801ad78:	4668      	mov	r0, sp
 801ad7a:	f7f7 f9cb 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801ad7e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801ad82:	b12b      	cbz	r3, 801ad90 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801ad84:	4669      	mov	r1, sp
 801ad86:	4620      	mov	r0, r4
 801ad88:	f7ff ffbf 	bl	801ad0a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801ad8c:	b005      	add	sp, #20
 801ad8e:	bd30      	pop	{r4, r5, pc}
 801ad90:	3404      	adds	r4, #4
 801ad92:	4621      	mov	r1, r4
 801ad94:	a802      	add	r0, sp, #8
 801ad96:	f7ff fb8f 	bl	801a4b8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801ad9a:	f8bd 3000 	ldrh.w	r3, [sp]
 801ad9e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801ada2:	1a9b      	subs	r3, r3, r2
 801ada4:	f8ad 3000 	strh.w	r3, [sp]
 801ada8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801adac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801adb0:	4669      	mov	r1, sp
 801adb2:	1a9b      	subs	r3, r3, r2
 801adb4:	4620      	mov	r0, r4
 801adb6:	f8ad 3002 	strh.w	r3, [sp, #2]
 801adba:	f7f7 fa4a 	bl	8012252 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801adbe:	e7e5      	b.n	801ad8c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801adc0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801adc0:	680a      	ldr	r2, [r1, #0]
 801adc2:	460b      	mov	r3, r1
 801adc4:	6992      	ldr	r2, [r2, #24]
 801adc6:	1d01      	adds	r1, r0, #4
 801adc8:	4618      	mov	r0, r3
 801adca:	4710      	bx	r2

0801adcc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801adcc:	4298      	cmp	r0, r3
 801adce:	d200      	bcs.n	801add2 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801add0:	b913      	cbnz	r3, 801add8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801add2:	440a      	add	r2, r1
 801add4:	b210      	sxth	r0, r2
 801add6:	4770      	bx	lr
 801add8:	ee07 0a90 	vmov	s15, r0
 801addc:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801ade0:	ee07 3a90 	vmov	s15, r3
 801ade4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801ade8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801adec:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801adf0:	ee37 7a66 	vsub.f32	s14, s14, s13
 801adf4:	ee07 2a90 	vmov	s15, r2
 801adf8:	ee67 5a07 	vmul.f32	s11, s14, s14
 801adfc:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801ae00:	eee5 6a87 	vfma.f32	s13, s11, s14
 801ae04:	ee07 1a90 	vmov	s15, r1
 801ae08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801ae0c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801ae10:	eee6 7a26 	vfma.f32	s15, s12, s13
 801ae14:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801ae18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae1c:	bfcc      	ite	gt
 801ae1e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801ae22:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801ae26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801ae2a:	ee17 3a90 	vmov	r3, s15
 801ae2e:	b218      	sxth	r0, r3
 801ae30:	4770      	bx	lr

0801ae32 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801ae32:	4298      	cmp	r0, r3
 801ae34:	d200      	bcs.n	801ae38 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801ae36:	b913      	cbnz	r3, 801ae3e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801ae38:	440a      	add	r2, r1
 801ae3a:	b210      	sxth	r0, r2
 801ae3c:	4770      	bx	lr
 801ae3e:	ee07 2a90 	vmov	s15, r2
 801ae42:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801ae46:	ee07 0a90 	vmov	s15, r0
 801ae4a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801ae4e:	ee67 7a27 	vmul.f32	s15, s14, s15
 801ae52:	ee07 3a10 	vmov	s14, r3
 801ae56:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801ae5a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801ae5e:	ee07 1a90 	vmov	s15, r1
 801ae62:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801ae66:	ee77 7a27 	vadd.f32	s15, s14, s15
 801ae6a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801ae6e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801ae72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ae76:	bfcc      	ite	gt
 801ae78:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801ae7c:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801ae80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801ae84:	ee17 3a90 	vmov	r3, s15
 801ae88:	b218      	sxth	r0, r3
 801ae8a:	4770      	bx	lr

0801ae8c <_ZN8touchgfx12TextProviderC1Ev>:
 801ae8c:	b538      	push	{r3, r4, r5, lr}
 801ae8e:	2500      	movs	r5, #0
 801ae90:	2302      	movs	r3, #2
 801ae92:	4604      	mov	r4, r0
 801ae94:	e9c0 5500 	strd	r5, r5, [r0]
 801ae98:	7403      	strb	r3, [r0, #16]
 801ae9a:	6145      	str	r5, [r0, #20]
 801ae9c:	7605      	strb	r5, [r0, #24]
 801ae9e:	83c5      	strh	r5, [r0, #30]
 801aea0:	8405      	strh	r5, [r0, #32]
 801aea2:	86c5      	strh	r5, [r0, #54]	; 0x36
 801aea4:	8705      	strh	r5, [r0, #56]	; 0x38
 801aea6:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801aea8:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801aeac:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801aeb0:	220e      	movs	r2, #14
 801aeb2:	4629      	mov	r1, r5
 801aeb4:	304c      	adds	r0, #76	; 0x4c
 801aeb6:	f011 fa23 	bl	802c300 <memset>
 801aeba:	2301      	movs	r3, #1
 801aebc:	4620      	mov	r0, r4
 801aebe:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801aec2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801aec6:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801aeca:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801aece:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801aed2:	f7ef febd 	bl	800ac50 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801aed6:	4620      	mov	r0, r4
 801aed8:	bd38      	pop	{r3, r4, r5, pc}
	...

0801aedc <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801aedc:	b508      	push	{r3, lr}
 801aede:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801aee0:	b92b      	cbnz	r3, 801aeee <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 801aee2:	4b07      	ldr	r3, [pc, #28]	; (801af00 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 801aee4:	4a07      	ldr	r2, [pc, #28]	; (801af04 <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 801aee6:	4808      	ldr	r0, [pc, #32]	; (801af08 <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 801aee8:	21c0      	movs	r1, #192	; 0xc0
 801aeea:	f011 f883 	bl	802bff4 <__assert_func>
 801aeee:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801aef0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aef4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801aef6:	fab0 f080 	clz	r0, r0
 801aefa:	0940      	lsrs	r0, r0, #5
 801aefc:	bd08      	pop	{r3, pc}
 801aefe:	bf00      	nop
 801af00:	080323c4 	.word	0x080323c4
 801af04:	080352d7 	.word	0x080352d7
 801af08:	08032496 	.word	0x08032496

0801af0c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801af0c:	b530      	push	{r4, r5, lr}
 801af0e:	2500      	movs	r5, #0
 801af10:	2401      	movs	r4, #1
 801af12:	6843      	ldr	r3, [r0, #4]
 801af14:	b913      	cbnz	r3, 801af1c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801af16:	6803      	ldr	r3, [r0, #0]
 801af18:	b313      	cbz	r3, 801af60 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801af1a:	6043      	str	r3, [r0, #4]
 801af1c:	7e03      	ldrb	r3, [r0, #24]
 801af1e:	b143      	cbz	r3, 801af32 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801af20:	6943      	ldr	r3, [r0, #20]
 801af22:	b12b      	cbz	r3, 801af30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801af24:	881a      	ldrh	r2, [r3, #0]
 801af26:	b11a      	cbz	r2, 801af30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801af28:	1c9a      	adds	r2, r3, #2
 801af2a:	6142      	str	r2, [r0, #20]
 801af2c:	8818      	ldrh	r0, [r3, #0]
 801af2e:	bd30      	pop	{r4, r5, pc}
 801af30:	7605      	strb	r5, [r0, #24]
 801af32:	6843      	ldr	r3, [r0, #4]
 801af34:	8819      	ldrh	r1, [r3, #0]
 801af36:	b199      	cbz	r1, 801af60 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801af38:	1c9a      	adds	r2, r3, #2
 801af3a:	2902      	cmp	r1, #2
 801af3c:	6042      	str	r2, [r0, #4]
 801af3e:	d1f5      	bne.n	801af2c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801af40:	7c03      	ldrb	r3, [r0, #16]
 801af42:	2b01      	cmp	r3, #1
 801af44:	d8e5      	bhi.n	801af12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801af46:	1c5a      	adds	r2, r3, #1
 801af48:	3302      	adds	r3, #2
 801af4a:	7402      	strb	r2, [r0, #16]
 801af4c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801af50:	6143      	str	r3, [r0, #20]
 801af52:	2b00      	cmp	r3, #0
 801af54:	d0dd      	beq.n	801af12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801af56:	881b      	ldrh	r3, [r3, #0]
 801af58:	2b00      	cmp	r3, #0
 801af5a:	d0da      	beq.n	801af12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801af5c:	7604      	strb	r4, [r0, #24]
 801af5e:	e7d8      	b.n	801af12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801af60:	2000      	movs	r0, #0
 801af62:	e7e4      	b.n	801af2e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801af64 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801af64:	b430      	push	{r4, r5}
 801af66:	6001      	str	r1, [r0, #0]
 801af68:	2100      	movs	r1, #0
 801af6a:	6041      	str	r1, [r0, #4]
 801af6c:	6815      	ldr	r5, [r2, #0]
 801af6e:	6085      	str	r5, [r0, #8]
 801af70:	6852      	ldr	r2, [r2, #4]
 801af72:	6443      	str	r3, [r0, #68]	; 0x44
 801af74:	9b02      	ldr	r3, [sp, #8]
 801af76:	60c2      	str	r2, [r0, #12]
 801af78:	7401      	strb	r1, [r0, #16]
 801af7a:	6141      	str	r1, [r0, #20]
 801af7c:	7601      	strb	r1, [r0, #24]
 801af7e:	8701      	strh	r1, [r0, #56]	; 0x38
 801af80:	8401      	strh	r1, [r0, #32]
 801af82:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801af86:	6483      	str	r3, [r0, #72]	; 0x48
 801af88:	bc30      	pop	{r4, r5}
 801af8a:	f7ef be61 	b.w	800ac50 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801af8e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801af8e:	b408      	push	{r3}
 801af90:	b510      	push	{r4, lr}
 801af92:	b085      	sub	sp, #20
 801af94:	ac07      	add	r4, sp, #28
 801af96:	f854 3b04 	ldr.w	r3, [r4], #4
 801af9a:	9300      	str	r3, [sp, #0]
 801af9c:	4613      	mov	r3, r2
 801af9e:	4622      	mov	r2, r4
 801afa0:	9403      	str	r4, [sp, #12]
 801afa2:	f7ff ffdf 	bl	801af64 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801afa6:	b005      	add	sp, #20
 801afa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801afac:	b001      	add	sp, #4
 801afae:	4770      	bx	lr

0801afb0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801afb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801afb2:	4605      	mov	r5, r0
 801afb4:	4608      	mov	r0, r1
 801afb6:	b1e9      	cbz	r1, 801aff4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801afb8:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801afbc:	460b      	mov	r3, r1
 801afbe:	f101 0708 	add.w	r7, r1, #8
 801afc2:	4622      	mov	r2, r4
 801afc4:	6818      	ldr	r0, [r3, #0]
 801afc6:	6859      	ldr	r1, [r3, #4]
 801afc8:	4626      	mov	r6, r4
 801afca:	c603      	stmia	r6!, {r0, r1}
 801afcc:	3308      	adds	r3, #8
 801afce:	42bb      	cmp	r3, r7
 801afd0:	4634      	mov	r4, r6
 801afd2:	d1f7      	bne.n	801afc4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801afd4:	6818      	ldr	r0, [r3, #0]
 801afd6:	6030      	str	r0, [r6, #0]
 801afd8:	889b      	ldrh	r3, [r3, #4]
 801afda:	80b3      	strh	r3, [r6, #4]
 801afdc:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801afe0:	015b      	lsls	r3, r3, #5
 801afe2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801afe6:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801afea:	430b      	orrs	r3, r1
 801afec:	425b      	negs	r3, r3
 801afee:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801aff2:	4610      	mov	r0, r2
 801aff4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801aff6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801aff6:	b538      	push	{r3, r4, r5, lr}
 801aff8:	460c      	mov	r4, r1
 801affa:	6811      	ldr	r1, [r2, #0]
 801affc:	4610      	mov	r0, r2
 801affe:	68cd      	ldr	r5, [r1, #12]
 801b000:	4619      	mov	r1, r3
 801b002:	47a8      	blx	r5
 801b004:	2800      	cmp	r0, #0
 801b006:	bf08      	it	eq
 801b008:	4620      	moveq	r0, r4
 801b00a:	bd38      	pop	{r3, r4, r5, pc}

0801b00c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801b00c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b00e:	4604      	mov	r4, r0
 801b010:	4615      	mov	r5, r2
 801b012:	4608      	mov	r0, r1
 801b014:	b93a      	cbnz	r2, 801b026 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801b016:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801b01a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801b01e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801b022:	4628      	mov	r0, r5
 801b024:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b026:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801b02a:	8893      	ldrh	r3, [r2, #4]
 801b02c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801b030:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801b034:	79ee      	ldrb	r6, [r5, #7]
 801b036:	4316      	orrs	r6, r2
 801b038:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 801b03c:	189a      	adds	r2, r3, r2
 801b03e:	b291      	uxth	r1, r2
 801b040:	291d      	cmp	r1, #29
 801b042:	b2b7      	uxth	r7, r6
 801b044:	f200 8083 	bhi.w	801b14e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 801b048:	2201      	movs	r2, #1
 801b04a:	408a      	lsls	r2, r1
 801b04c:	4978      	ldr	r1, [pc, #480]	; (801b230 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 801b04e:	420a      	tst	r2, r1
 801b050:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801b054:	d12d      	bne.n	801b0b2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 801b056:	f412 7f60 	tst.w	r2, #896	; 0x380
 801b05a:	d078      	beq.n	801b14e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 801b05c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801b060:	462b      	mov	r3, r5
 801b062:	f105 0e08 	add.w	lr, r5, #8
 801b066:	4615      	mov	r5, r2
 801b068:	6818      	ldr	r0, [r3, #0]
 801b06a:	6859      	ldr	r1, [r3, #4]
 801b06c:	4694      	mov	ip, r2
 801b06e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801b072:	3308      	adds	r3, #8
 801b074:	4573      	cmp	r3, lr
 801b076:	4662      	mov	r2, ip
 801b078:	d1f6      	bne.n	801b068 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 801b07a:	6818      	ldr	r0, [r3, #0]
 801b07c:	f8cc 0000 	str.w	r0, [ip]
 801b080:	889b      	ldrh	r3, [r3, #4]
 801b082:	f8ac 3004 	strh.w	r3, [ip, #4]
 801b086:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801b08a:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801b08e:	b2b3      	uxth	r3, r6
 801b090:	1aca      	subs	r2, r1, r3
 801b092:	b292      	uxth	r2, r2
 801b094:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801b098:	10d2      	asrs	r2, r2, #3
 801b09a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801b09e:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801b0a2:	4302      	orrs	r2, r0
 801b0a4:	1bcf      	subs	r7, r1, r7
 801b0a6:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801b0aa:	1afb      	subs	r3, r7, r3
 801b0ac:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801b0b0:	e7b7      	b.n	801b022 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801b0b2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b0b4:	b92b      	cbnz	r3, 801b0c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 801b0b6:	4b5f      	ldr	r3, [pc, #380]	; (801b234 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 801b0b8:	4a5f      	ldr	r2, [pc, #380]	; (801b238 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 801b0ba:	4860      	ldr	r0, [pc, #384]	; (801b23c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 801b0bc:	21c0      	movs	r1, #192	; 0xc0
 801b0be:	f010 ff99 	bl	802bff4 <__assert_func>
 801b0c2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b0c4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b0c8:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801b0ca:	f640 6333 	movw	r3, #3635	; 0xe33
 801b0ce:	4299      	cmp	r1, r3
 801b0d0:	d110      	bne.n	801b0f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 801b0d2:	6803      	ldr	r3, [r0, #0]
 801b0d4:	68db      	ldr	r3, [r3, #12]
 801b0d6:	4798      	blx	r3
 801b0d8:	7b41      	ldrb	r1, [r0, #13]
 801b0da:	00cb      	lsls	r3, r1, #3
 801b0dc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b0e0:	7a03      	ldrb	r3, [r0, #8]
 801b0e2:	0648      	lsls	r0, r1, #25
 801b0e4:	ea43 0302 	orr.w	r3, r3, r2
 801b0e8:	bf44      	itt	mi
 801b0ea:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b0ee:	b21b      	sxthmi	r3, r3
 801b0f0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b0f4:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801b0f8:	443b      	add	r3, r7
 801b0fa:	4433      	add	r3, r6
 801b0fc:	b29b      	uxth	r3, r3
 801b0fe:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801b102:	462a      	mov	r2, r5
 801b104:	f105 0c08 	add.w	ip, r5, #8
 801b108:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b10c:	4635      	mov	r5, r6
 801b10e:	6810      	ldr	r0, [r2, #0]
 801b110:	6851      	ldr	r1, [r2, #4]
 801b112:	4637      	mov	r7, r6
 801b114:	c703      	stmia	r7!, {r0, r1}
 801b116:	3208      	adds	r2, #8
 801b118:	4562      	cmp	r2, ip
 801b11a:	463e      	mov	r6, r7
 801b11c:	d1f7      	bne.n	801b10e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 801b11e:	6810      	ldr	r0, [r2, #0]
 801b120:	6038      	str	r0, [r7, #0]
 801b122:	8892      	ldrh	r2, [r2, #4]
 801b124:	80ba      	strh	r2, [r7, #4]
 801b126:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b12a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b12e:	10db      	asrs	r3, r3, #3
 801b130:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b134:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b138:	4313      	orrs	r3, r2
 801b13a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b13e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801b142:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801b146:	1a9b      	subs	r3, r3, r2
 801b148:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801b14c:	e769      	b.n	801b022 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801b14e:	f023 0204 	bic.w	r2, r3, #4
 801b152:	f640 611b 	movw	r1, #3611	; 0xe1b
 801b156:	428a      	cmp	r2, r1
 801b158:	d003      	beq.n	801b162 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 801b15a:	f640 621d 	movw	r2, #3613	; 0xe1d
 801b15e:	4293      	cmp	r3, r2
 801b160:	d120      	bne.n	801b1a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 801b162:	3b01      	subs	r3, #1
 801b164:	4602      	mov	r2, r0
 801b166:	b29b      	uxth	r3, r3
 801b168:	4629      	mov	r1, r5
 801b16a:	4620      	mov	r0, r4
 801b16c:	f7ff ff43 	bl	801aff6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801b170:	7b41      	ldrb	r1, [r0, #13]
 801b172:	00cb      	lsls	r3, r1, #3
 801b174:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b178:	7a03      	ldrb	r3, [r0, #8]
 801b17a:	0649      	lsls	r1, r1, #25
 801b17c:	ea43 0302 	orr.w	r3, r3, r2
 801b180:	bf44      	itt	mi
 801b182:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b186:	b21b      	sxthmi	r3, r3
 801b188:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b18c:	7b6b      	ldrb	r3, [r5, #13]
 801b18e:	7aaa      	ldrb	r2, [r5, #10]
 801b190:	005b      	lsls	r3, r3, #1
 801b192:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801b196:	4313      	orrs	r3, r2
 801b198:	115a      	asrs	r2, r3, #5
 801b19a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801b19e:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801b1a2:	e036      	b.n	801b212 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 801b1a4:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801b1a8:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801b1ac:	7a2a      	ldrb	r2, [r5, #8]
 801b1ae:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801b1b2:	ea42 0201 	orr.w	r2, r2, r1
 801b1b6:	bf1c      	itt	ne
 801b1b8:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801b1bc:	b212      	sxthne	r2, r2
 801b1be:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801b1c2:	f640 6109 	movw	r1, #3593	; 0xe09
 801b1c6:	f023 0210 	bic.w	r2, r3, #16
 801b1ca:	428a      	cmp	r2, r1
 801b1cc:	d003      	beq.n	801b1d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 801b1ce:	f640 6213 	movw	r2, #3603	; 0xe13
 801b1d2:	4293      	cmp	r3, r2
 801b1d4:	d12a      	bne.n	801b22c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 801b1d6:	7b6e      	ldrb	r6, [r5, #13]
 801b1d8:	0076      	lsls	r6, r6, #1
 801b1da:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801b1de:	7aae      	ldrb	r6, [r5, #10]
 801b1e0:	4316      	orrs	r6, r2
 801b1e2:	f640 6213 	movw	r2, #3603	; 0xe13
 801b1e6:	4293      	cmp	r3, r2
 801b1e8:	bf18      	it	ne
 801b1ea:	f103 33ff 	addne.w	r3, r3, #4294967295
 801b1ee:	4602      	mov	r2, r0
 801b1f0:	bf14      	ite	ne
 801b1f2:	b29b      	uxthne	r3, r3
 801b1f4:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801b1f8:	4629      	mov	r1, r5
 801b1fa:	4620      	mov	r0, r4
 801b1fc:	f7ff fefb 	bl	801aff6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801b200:	7b43      	ldrb	r3, [r0, #13]
 801b202:	7a82      	ldrb	r2, [r0, #10]
 801b204:	005b      	lsls	r3, r3, #1
 801b206:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801b20a:	4313      	orrs	r3, r2
 801b20c:	1af6      	subs	r6, r6, r3
 801b20e:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801b212:	7b69      	ldrb	r1, [r5, #13]
 801b214:	00cb      	lsls	r3, r1, #3
 801b216:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b21a:	7a2b      	ldrb	r3, [r5, #8]
 801b21c:	4313      	orrs	r3, r2
 801b21e:	064a      	lsls	r2, r1, #25
 801b220:	bf44      	itt	mi
 801b222:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b226:	b21b      	sxthmi	r3, r3
 801b228:	1bdb      	subs	r3, r3, r7
 801b22a:	e73f      	b.n	801b0ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 801b22c:	2300      	movs	r3, #0
 801b22e:	e7b6      	b.n	801b19e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 801b230:	3fc00079 	.word	0x3fc00079
 801b234:	080323c4 	.word	0x080323c4
 801b238:	080352d7 	.word	0x080352d7
 801b23c:	08032496 	.word	0x08032496

0801b240 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801b240:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b244:	4604      	mov	r4, r0
 801b246:	b942      	cbnz	r2, 801b25a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801b248:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b24c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801b250:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801b254:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801b258:	e046      	b.n	801b2e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 801b25a:	7b51      	ldrb	r1, [r2, #13]
 801b25c:	8893      	ldrh	r3, [r2, #4]
 801b25e:	010f      	lsls	r7, r1, #4
 801b260:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801b264:	79d7      	ldrb	r7, [r2, #7]
 801b266:	4307      	orrs	r7, r0
 801b268:	2f04      	cmp	r7, #4
 801b26a:	b2bd      	uxth	r5, r7
 801b26c:	bfcc      	ite	gt
 801b26e:	08bf      	lsrgt	r7, r7, #2
 801b270:	2701      	movle	r7, #1
 801b272:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801b276:	f200 80ab 	bhi.w	801b3d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 801b27a:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801b27e:	4283      	cmp	r3, r0
 801b280:	d216      	bcs.n	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b282:	f240 605b 	movw	r0, #1627	; 0x65b
 801b286:	4283      	cmp	r3, r0
 801b288:	d859      	bhi.n	801b33e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 801b28a:	f240 6057 	movw	r0, #1623	; 0x657
 801b28e:	4283      	cmp	r3, r0
 801b290:	d20e      	bcs.n	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b292:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801b296:	d24a      	bcs.n	801b32e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 801b298:	f240 604e 	movw	r0, #1614	; 0x64e
 801b29c:	4283      	cmp	r3, r0
 801b29e:	d207      	bcs.n	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b2a0:	f240 601a 	movw	r0, #1562	; 0x61a
 801b2a4:	4283      	cmp	r3, r0
 801b2a6:	d02a      	beq.n	801b2fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b2a8:	d821      	bhi.n	801b2ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 801b2aa:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801b2ae:	d35b      	bcc.n	801b368 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801b2b0:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801b2b4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b2b8:	f040 80d0 	bne.w	801b45c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 801b2bc:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801b2c0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b2c4:	f040 80ca 	bne.w	801b45c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 801b2c8:	00cb      	lsls	r3, r1, #3
 801b2ca:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801b2ce:	7a13      	ldrb	r3, [r2, #8]
 801b2d0:	0649      	lsls	r1, r1, #25
 801b2d2:	ea43 0300 	orr.w	r3, r3, r0
 801b2d6:	bf44      	itt	mi
 801b2d8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b2dc:	b21b      	sxthmi	r3, r3
 801b2de:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b2e2:	1b5d      	subs	r5, r3, r5
 801b2e4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b2e8:	4610      	mov	r0, r2
 801b2ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b2ee:	f240 604b 	movw	r0, #1611	; 0x64b
 801b2f2:	4283      	cmp	r3, r0
 801b2f4:	d338      	bcc.n	801b368 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801b2f6:	f240 604c 	movw	r0, #1612	; 0x64c
 801b2fa:	4283      	cmp	r3, r0
 801b2fc:	d9d8      	bls.n	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b2fe:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801b302:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801b306:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b30a:	f040 80f1 	bne.w	801b4f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 801b30e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b312:	f040 80ed 	bne.w	801b4f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 801b316:	00cb      	lsls	r3, r1, #3
 801b318:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801b31c:	7a13      	ldrb	r3, [r2, #8]
 801b31e:	064e      	lsls	r6, r1, #25
 801b320:	ea43 0300 	orr.w	r3, r3, r0
 801b324:	bf44      	itt	mi
 801b326:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b32a:	b21b      	sxthmi	r3, r3
 801b32c:	e7d9      	b.n	801b2e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 801b32e:	f240 6054 	movw	r0, #1620	; 0x654
 801b332:	4283      	cmp	r3, r0
 801b334:	d8e3      	bhi.n	801b2fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b336:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801b33a:	d9e0      	bls.n	801b2fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b33c:	e7b8      	b.n	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b33e:	f240 6074 	movw	r0, #1652	; 0x674
 801b342:	4283      	cmp	r3, r0
 801b344:	d0b4      	beq.n	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b346:	d82d      	bhi.n	801b3a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 801b348:	f240 605e 	movw	r0, #1630	; 0x65e
 801b34c:	4283      	cmp	r3, r0
 801b34e:	d804      	bhi.n	801b35a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 801b350:	f240 605d 	movw	r0, #1629	; 0x65d
 801b354:	4283      	cmp	r3, r0
 801b356:	d3d2      	bcc.n	801b2fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b358:	e7aa      	b.n	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b35a:	f240 605f 	movw	r0, #1631	; 0x65f
 801b35e:	4283      	cmp	r3, r0
 801b360:	d0cd      	beq.n	801b2fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b362:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801b366:	d0a3      	beq.n	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b368:	00cb      	lsls	r3, r1, #3
 801b36a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801b36e:	7a13      	ldrb	r3, [r2, #8]
 801b370:	0649      	lsls	r1, r1, #25
 801b372:	ea43 0300 	orr.w	r3, r3, r0
 801b376:	bf44      	itt	mi
 801b378:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b37c:	b21b      	sxthmi	r3, r3
 801b37e:	1b5d      	subs	r5, r3, r5
 801b380:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b384:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b388:	7b53      	ldrb	r3, [r2, #13]
 801b38a:	015b      	lsls	r3, r3, #5
 801b38c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801b390:	7993      	ldrb	r3, [r2, #6]
 801b392:	430b      	orrs	r3, r1
 801b394:	005b      	lsls	r3, r3, #1
 801b396:	2105      	movs	r1, #5
 801b398:	fb93 f3f1 	sdiv	r3, r3, r1
 801b39c:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801b3a0:	440b      	add	r3, r1
 801b3a2:	e757      	b.n	801b254 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801b3a4:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801b3a8:	4283      	cmp	r3, r0
 801b3aa:	d809      	bhi.n	801b3c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 801b3ac:	f240 60df 	movw	r0, #1759	; 0x6df
 801b3b0:	4283      	cmp	r3, r0
 801b3b2:	f4bf af7d 	bcs.w	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b3b6:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801b3ba:	2b05      	cmp	r3, #5
 801b3bc:	d8d4      	bhi.n	801b368 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801b3be:	e777      	b.n	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b3c0:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801b3c4:	4283      	cmp	r3, r0
 801b3c6:	d09a      	beq.n	801b2fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b3c8:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801b3cc:	4283      	cmp	r3, r0
 801b3ce:	e7ca      	b.n	801b366 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 801b3d0:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801b3d4:	d22b      	bcs.n	801b42e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 801b3d6:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801b3da:	4283      	cmp	r3, r0
 801b3dc:	d28f      	bcs.n	801b2fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b3de:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801b3e2:	4283      	cmp	r3, r0
 801b3e4:	d816      	bhi.n	801b414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 801b3e6:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801b3ea:	4283      	cmp	r3, r0
 801b3ec:	f4bf af60 	bcs.w	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b3f0:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801b3f4:	4283      	cmp	r3, r0
 801b3f6:	d80a      	bhi.n	801b40e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 801b3f8:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801b3fc:	4283      	cmp	r3, r0
 801b3fe:	f4bf af57 	bcs.w	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b402:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801b406:	4283      	cmp	r3, r0
 801b408:	f43f af79 	beq.w	801b2fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b40c:	e7ac      	b.n	801b368 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801b40e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801b412:	e7f8      	b.n	801b406 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 801b414:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801b418:	4283      	cmp	r3, r0
 801b41a:	d802      	bhi.n	801b422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 801b41c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801b420:	e798      	b.n	801b354 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 801b422:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801b426:	4283      	cmp	r3, r0
 801b428:	f47f af42 	bne.w	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b42c:	e767      	b.n	801b2fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b42e:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801b432:	4283      	cmp	r3, r0
 801b434:	f43f af63 	beq.w	801b2fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b438:	d802      	bhi.n	801b440 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 801b43a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801b43e:	e7f2      	b.n	801b426 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 801b440:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801b444:	4283      	cmp	r3, r0
 801b446:	d805      	bhi.n	801b454 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 801b448:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801b44c:	4283      	cmp	r3, r0
 801b44e:	f4ff af2f 	bcc.w	801b2b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801b452:	e754      	b.n	801b2fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801b454:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801b458:	4283      	cmp	r3, r0
 801b45a:	e7af      	b.n	801b3bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 801b45c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801b460:	4617      	mov	r7, r2
 801b462:	f102 0808 	add.w	r8, r2, #8
 801b466:	4666      	mov	r6, ip
 801b468:	6838      	ldr	r0, [r7, #0]
 801b46a:	6879      	ldr	r1, [r7, #4]
 801b46c:	46e6      	mov	lr, ip
 801b46e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801b472:	3708      	adds	r7, #8
 801b474:	4547      	cmp	r7, r8
 801b476:	46f4      	mov	ip, lr
 801b478:	d1f6      	bne.n	801b468 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 801b47a:	6838      	ldr	r0, [r7, #0]
 801b47c:	f8ce 0000 	str.w	r0, [lr]
 801b480:	88b9      	ldrh	r1, [r7, #4]
 801b482:	f8ae 1004 	strh.w	r1, [lr, #4]
 801b486:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801b48a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b48e:	d009      	beq.n	801b4a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 801b490:	7b51      	ldrb	r1, [r2, #13]
 801b492:	7992      	ldrb	r2, [r2, #6]
 801b494:	0149      	lsls	r1, r1, #5
 801b496:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801b49a:	4311      	orrs	r1, r2
 801b49c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801b4a0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801b4a4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b4a8:	d00d      	beq.n	801b4c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 801b4aa:	442b      	add	r3, r5
 801b4ac:	b29b      	uxth	r3, r3
 801b4ae:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b4b2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b4b6:	10db      	asrs	r3, r3, #3
 801b4b8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b4bc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b4c0:	4313      	orrs	r3, r2
 801b4c2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b4c6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801b4ca:	00cb      	lsls	r3, r1, #3
 801b4cc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b4d0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801b4d4:	064f      	lsls	r7, r1, #25
 801b4d6:	ea43 0302 	orr.w	r3, r3, r2
 801b4da:	bf44      	itt	mi
 801b4dc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b4e0:	b21b      	sxthmi	r3, r3
 801b4e2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801b4e6:	1b5d      	subs	r5, r3, r5
 801b4e8:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801b4ec:	4632      	mov	r2, r6
 801b4ee:	e6fb      	b.n	801b2e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 801b4f0:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 801b4f4:	4694      	mov	ip, r2
 801b4f6:	f102 0908 	add.w	r9, r2, #8
 801b4fa:	4676      	mov	r6, lr
 801b4fc:	f8dc 0000 	ldr.w	r0, [ip]
 801b500:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801b504:	46f0      	mov	r8, lr
 801b506:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801b50a:	f10c 0c08 	add.w	ip, ip, #8
 801b50e:	45cc      	cmp	ip, r9
 801b510:	46c6      	mov	lr, r8
 801b512:	d1f3      	bne.n	801b4fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 801b514:	f8dc 0000 	ldr.w	r0, [ip]
 801b518:	f8c8 0000 	str.w	r0, [r8]
 801b51c:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 801b520:	f8a8 1004 	strh.w	r1, [r8, #4]
 801b524:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801b528:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801b52c:	d009      	beq.n	801b542 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 801b52e:	7b51      	ldrb	r1, [r2, #13]
 801b530:	7992      	ldrb	r2, [r2, #6]
 801b532:	0149      	lsls	r1, r1, #5
 801b534:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801b538:	4311      	orrs	r1, r2
 801b53a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801b53e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801b542:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801b546:	d00d      	beq.n	801b564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 801b548:	1bdb      	subs	r3, r3, r7
 801b54a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801b54e:	b29b      	uxth	r3, r3
 801b550:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801b554:	10db      	asrs	r3, r3, #3
 801b556:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801b55a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801b55e:	4313      	orrs	r3, r2
 801b560:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801b564:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801b568:	00cb      	lsls	r3, r1, #3
 801b56a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b56e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801b572:	0648      	lsls	r0, r1, #25
 801b574:	ea43 0302 	orr.w	r3, r3, r2
 801b578:	bf44      	itt	mi
 801b57a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801b57e:	b21b      	sxthmi	r3, r3
 801b580:	e7b1      	b.n	801b4e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0801b584 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801b584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b588:	461e      	mov	r6, r3
 801b58a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801b58c:	4604      	mov	r4, r0
 801b58e:	4617      	mov	r7, r2
 801b590:	b92b      	cbnz	r3, 801b59e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 801b592:	4b25      	ldr	r3, [pc, #148]	; (801b628 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 801b594:	4a25      	ldr	r2, [pc, #148]	; (801b62c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 801b596:	4826      	ldr	r0, [pc, #152]	; (801b630 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 801b598:	21c0      	movs	r1, #192	; 0xc0
 801b59a:	f010 fd2b 	bl	802bff4 <__assert_func>
 801b59e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b5a0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b5a4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b5a8:	f7ef fb10 	bl	800abcc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b5ac:	4605      	mov	r5, r0
 801b5ae:	b918      	cbnz	r0, 801b5b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 801b5b0:	6030      	str	r0, [r6, #0]
 801b5b2:	4628      	mov	r0, r5
 801b5b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b5b8:	683b      	ldr	r3, [r7, #0]
 801b5ba:	4601      	mov	r1, r0
 801b5bc:	68db      	ldr	r3, [r3, #12]
 801b5be:	4638      	mov	r0, r7
 801b5c0:	4798      	blx	r3
 801b5c2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b5c6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b5ca:	4602      	mov	r2, r0
 801b5cc:	6030      	str	r0, [r6, #0]
 801b5ce:	d213      	bcs.n	801b5f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 801b5d0:	4643      	mov	r3, r8
 801b5d2:	4639      	mov	r1, r7
 801b5d4:	4620      	mov	r0, r4
 801b5d6:	f7ff fe33 	bl	801b240 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b5da:	6030      	str	r0, [r6, #0]
 801b5dc:	6833      	ldr	r3, [r6, #0]
 801b5de:	b143      	cbz	r3, 801b5f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 801b5e0:	7b5a      	ldrb	r2, [r3, #13]
 801b5e2:	7a9b      	ldrb	r3, [r3, #10]
 801b5e4:	0052      	lsls	r2, r2, #1
 801b5e6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b5ea:	4313      	orrs	r3, r2
 801b5ec:	bf0c      	ite	eq
 801b5ee:	2301      	moveq	r3, #1
 801b5f0:	2300      	movne	r3, #0
 801b5f2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b5f6:	e7dc      	b.n	801b5b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 801b5f8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b5fc:	b29b      	uxth	r3, r3
 801b5fe:	2b7f      	cmp	r3, #127	; 0x7f
 801b600:	d804      	bhi.n	801b60c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 801b602:	4639      	mov	r1, r7
 801b604:	4620      	mov	r0, r4
 801b606:	f7ff fd01 	bl	801b00c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b60a:	e7e6      	b.n	801b5da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801b60c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b610:	2b00      	cmp	r3, #0
 801b612:	d0e3      	beq.n	801b5dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801b614:	f640 1302 	movw	r3, #2306	; 0x902
 801b618:	429d      	cmp	r5, r3
 801b61a:	d1df      	bne.n	801b5dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801b61c:	4601      	mov	r1, r0
 801b61e:	4620      	mov	r0, r4
 801b620:	f7ff fcc6 	bl	801afb0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b624:	e7d9      	b.n	801b5da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801b626:	bf00      	nop
 801b628:	080323c4 	.word	0x080323c4
 801b62c:	080352d7 	.word	0x080352d7
 801b630:	08032496 	.word	0x08032496

0801b634 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801b634:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b638:	461e      	mov	r6, r3
 801b63a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801b63c:	4604      	mov	r4, r0
 801b63e:	4617      	mov	r7, r2
 801b640:	b92b      	cbnz	r3, 801b64e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 801b642:	4b26      	ldr	r3, [pc, #152]	; (801b6dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 801b644:	4a26      	ldr	r2, [pc, #152]	; (801b6e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 801b646:	4827      	ldr	r0, [pc, #156]	; (801b6e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 801b648:	21c0      	movs	r1, #192	; 0xc0
 801b64a:	f010 fcd3 	bl	802bff4 <__assert_func>
 801b64e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b650:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b654:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b658:	f7ef fab8 	bl	800abcc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801b65c:	4605      	mov	r5, r0
 801b65e:	b918      	cbnz	r0, 801b668 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 801b660:	6030      	str	r0, [r6, #0]
 801b662:	4628      	mov	r0, r5
 801b664:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b668:	683b      	ldr	r3, [r7, #0]
 801b66a:	4601      	mov	r1, r0
 801b66c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801b670:	4638      	mov	r0, r7
 801b672:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801b676:	47c8      	blx	r9
 801b678:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801b67c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801b680:	4602      	mov	r2, r0
 801b682:	6030      	str	r0, [r6, #0]
 801b684:	d213      	bcs.n	801b6ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 801b686:	4643      	mov	r3, r8
 801b688:	4639      	mov	r1, r7
 801b68a:	4620      	mov	r0, r4
 801b68c:	f7ff fdd8 	bl	801b240 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801b690:	6030      	str	r0, [r6, #0]
 801b692:	6833      	ldr	r3, [r6, #0]
 801b694:	b143      	cbz	r3, 801b6a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 801b696:	7b5a      	ldrb	r2, [r3, #13]
 801b698:	7a9b      	ldrb	r3, [r3, #10]
 801b69a:	0052      	lsls	r2, r2, #1
 801b69c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801b6a0:	4313      	orrs	r3, r2
 801b6a2:	bf0c      	ite	eq
 801b6a4:	2301      	moveq	r3, #1
 801b6a6:	2300      	movne	r3, #0
 801b6a8:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801b6ac:	e7d9      	b.n	801b662 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 801b6ae:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801b6b2:	b29b      	uxth	r3, r3
 801b6b4:	2b7f      	cmp	r3, #127	; 0x7f
 801b6b6:	d804      	bhi.n	801b6c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 801b6b8:	4639      	mov	r1, r7
 801b6ba:	4620      	mov	r0, r4
 801b6bc:	f7ff fca6 	bl	801b00c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801b6c0:	e7e6      	b.n	801b690 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801b6c2:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801b6c6:	2b00      	cmp	r3, #0
 801b6c8:	d0e3      	beq.n	801b692 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801b6ca:	f640 1302 	movw	r3, #2306	; 0x902
 801b6ce:	429d      	cmp	r5, r3
 801b6d0:	d1df      	bne.n	801b692 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801b6d2:	4601      	mov	r1, r0
 801b6d4:	4620      	mov	r0, r4
 801b6d6:	f7ff fc6b 	bl	801afb0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801b6da:	e7d9      	b.n	801b690 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801b6dc:	080323c4 	.word	0x080323c4
 801b6e0:	080352d7 	.word	0x080352d7
 801b6e4:	08032496 	.word	0x08032496

0801b6e8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801b6e8:	b510      	push	{r4, lr}
 801b6ea:	4604      	mov	r4, r0
 801b6ec:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801b6f0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b6f2:	b9d9      	cbnz	r1, 801b72c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 801b6f4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b6f6:	2b0a      	cmp	r3, #10
 801b6f8:	d037      	beq.n	801b76a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 801b6fa:	4620      	mov	r0, r4
 801b6fc:	f7ff fc06 	bl	801af0c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801b700:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b702:	2b09      	cmp	r3, #9
 801b704:	d906      	bls.n	801b714 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 801b706:	4b19      	ldr	r3, [pc, #100]	; (801b76c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 801b708:	4a19      	ldr	r2, [pc, #100]	; (801b770 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 801b70a:	481a      	ldr	r0, [pc, #104]	; (801b774 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 801b70c:	f44f 7182 	mov.w	r1, #260	; 0x104
 801b710:	f010 fc70 	bl	802bff4 <__assert_func>
 801b714:	1c5a      	adds	r2, r3, #1
 801b716:	8722      	strh	r2, [r4, #56]	; 0x38
 801b718:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b71a:	4413      	add	r3, r2
 801b71c:	b29b      	uxth	r3, r3
 801b71e:	2b09      	cmp	r3, #9
 801b720:	bf88      	it	hi
 801b722:	3b0a      	subhi	r3, #10
 801b724:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b728:	8458      	strh	r0, [r3, #34]	; 0x22
 801b72a:	e7e3      	b.n	801b6f4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 801b72c:	2b0a      	cmp	r3, #10
 801b72e:	d01c      	beq.n	801b76a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 801b730:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801b732:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801b736:	3901      	subs	r1, #1
 801b738:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801b73a:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801b73e:	1c51      	adds	r1, r2, #1
 801b740:	b289      	uxth	r1, r1
 801b742:	2901      	cmp	r1, #1
 801b744:	bf8a      	itet	hi
 801b746:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801b74a:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801b74c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801b74e:	2b09      	cmp	r3, #9
 801b750:	d8d9      	bhi.n	801b706 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 801b752:	1c5a      	adds	r2, r3, #1
 801b754:	8722      	strh	r2, [r4, #56]	; 0x38
 801b756:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b758:	4413      	add	r3, r2
 801b75a:	b29b      	uxth	r3, r3
 801b75c:	2b09      	cmp	r3, #9
 801b75e:	bf88      	it	hi
 801b760:	3b0a      	subhi	r3, #10
 801b762:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b766:	8458      	strh	r0, [r3, #34]	; 0x22
 801b768:	e7c0      	b.n	801b6ec <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801b76a:	bd10      	pop	{r4, pc}
 801b76c:	080350a8 	.word	0x080350a8
 801b770:	0803542d 	.word	0x0803542d
 801b774:	08032496 	.word	0x08032496

0801b778 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801b778:	b538      	push	{r3, r4, r5, lr}
 801b77a:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801b77c:	4604      	mov	r4, r0
 801b77e:	b92a      	cbnz	r2, 801b78c <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 801b780:	4b13      	ldr	r3, [pc, #76]	; (801b7d0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 801b782:	4a14      	ldr	r2, [pc, #80]	; (801b7d4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 801b784:	4814      	ldr	r0, [pc, #80]	; (801b7d8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 801b786:	21d5      	movs	r1, #213	; 0xd5
 801b788:	f010 fc34 	bl	802bff4 <__assert_func>
 801b78c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b78e:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 801b792:	3a01      	subs	r2, #1
 801b794:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 801b796:	8702      	strh	r2, [r0, #56]	; 0x38
 801b798:	1c5a      	adds	r2, r3, #1
 801b79a:	b292      	uxth	r2, r2
 801b79c:	2a09      	cmp	r2, #9
 801b79e:	bf86      	itte	hi
 801b7a0:	3b09      	subhi	r3, #9
 801b7a2:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801b7a4:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801b7a6:	f7ff ff9f 	bl	801b6e8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801b7aa:	8c23      	ldrh	r3, [r4, #32]
 801b7ac:	2b01      	cmp	r3, #1
 801b7ae:	bf9c      	itt	ls
 801b7b0:	3301      	addls	r3, #1
 801b7b2:	8423      	strhls	r3, [r4, #32]
 801b7b4:	8be3      	ldrh	r3, [r4, #30]
 801b7b6:	b90b      	cbnz	r3, 801b7bc <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 801b7b8:	2302      	movs	r3, #2
 801b7ba:	83e3      	strh	r3, [r4, #30]
 801b7bc:	8be3      	ldrh	r3, [r4, #30]
 801b7be:	3b01      	subs	r3, #1
 801b7c0:	b29b      	uxth	r3, r3
 801b7c2:	83e3      	strh	r3, [r4, #30]
 801b7c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b7c8:	4628      	mov	r0, r5
 801b7ca:	8365      	strh	r5, [r4, #26]
 801b7cc:	bd38      	pop	{r3, r4, r5, pc}
 801b7ce:	bf00      	nop
 801b7d0:	080323c4 	.word	0x080323c4
 801b7d4:	08035382 	.word	0x08035382
 801b7d8:	08032496 	.word	0x08032496

0801b7dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801b7dc:	b538      	push	{r3, r4, r5, lr}
 801b7de:	428a      	cmp	r2, r1
 801b7e0:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801b7e2:	d90c      	bls.n	801b7fe <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 801b7e4:	b92c      	cbnz	r4, 801b7f2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 801b7e6:	4b1c      	ldr	r3, [pc, #112]	; (801b858 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 801b7e8:	4a1c      	ldr	r2, [pc, #112]	; (801b85c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 801b7ea:	21e1      	movs	r1, #225	; 0xe1
 801b7ec:	481c      	ldr	r0, [pc, #112]	; (801b860 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 801b7ee:	f010 fc01 	bl	802bff4 <__assert_func>
 801b7f2:	3c01      	subs	r4, #1
 801b7f4:	8704      	strh	r4, [r0, #56]	; 0x38
 801b7f6:	4b1b      	ldr	r3, [pc, #108]	; (801b864 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 801b7f8:	4a1b      	ldr	r2, [pc, #108]	; (801b868 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 801b7fa:	21c5      	movs	r1, #197	; 0xc5
 801b7fc:	e7f6      	b.n	801b7ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801b7fe:	428c      	cmp	r4, r1
 801b800:	d203      	bcs.n	801b80a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 801b802:	4b1a      	ldr	r3, [pc, #104]	; (801b86c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 801b804:	4a1a      	ldr	r2, [pc, #104]	; (801b870 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 801b806:	21cb      	movs	r1, #203	; 0xcb
 801b808:	e7f0      	b.n	801b7ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801b80a:	1a64      	subs	r4, r4, r1
 801b80c:	8704      	strh	r4, [r0, #56]	; 0x38
 801b80e:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 801b810:	4421      	add	r1, r4
 801b812:	b289      	uxth	r1, r1
 801b814:	2909      	cmp	r1, #9
 801b816:	bf88      	it	hi
 801b818:	390a      	subhi	r1, #10
 801b81a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b81c:	250a      	movs	r5, #10
 801b81e:	b1ba      	cbz	r2, 801b850 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 801b820:	3a01      	subs	r2, #1
 801b822:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801b824:	b292      	uxth	r2, r2
 801b826:	2909      	cmp	r1, #9
 801b828:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801b82c:	d903      	bls.n	801b836 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 801b82e:	4b11      	ldr	r3, [pc, #68]	; (801b874 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 801b830:	4a11      	ldr	r2, [pc, #68]	; (801b878 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 801b832:	21e6      	movs	r1, #230	; 0xe6
 801b834:	e7da      	b.n	801b7ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801b836:	3101      	adds	r1, #1
 801b838:	8701      	strh	r1, [r0, #56]	; 0x38
 801b83a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b83c:	b901      	cbnz	r1, 801b840 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 801b83e:	86c5      	strh	r5, [r0, #54]	; 0x36
 801b840:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b842:	3901      	subs	r1, #1
 801b844:	b289      	uxth	r1, r1
 801b846:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b848:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801b84c:	844c      	strh	r4, [r1, #34]	; 0x22
 801b84e:	e7e6      	b.n	801b81e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 801b850:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b854:	f7ff bf48 	b.w	801b6e8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801b858:	080323c4 	.word	0x080323c4
 801b85c:	0803515b 	.word	0x0803515b
 801b860:	08032496 	.word	0x08032496
 801b864:	080324c2 	.word	0x080324c2
 801b868:	08035205 	.word	0x08035205
 801b86c:	080350b4 	.word	0x080350b4
 801b870:	080354dc 	.word	0x080354dc
 801b874:	080350c0 	.word	0x080350c0
 801b878:	080350d3 	.word	0x080350d3

0801b87c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801b87c:	3a01      	subs	r2, #1
 801b87e:	b570      	push	{r4, r5, r6, lr}
 801b880:	b292      	uxth	r2, r2
 801b882:	f64f 76ff 	movw	r6, #65535	; 0xffff
 801b886:	42b2      	cmp	r2, r6
 801b888:	d019      	beq.n	801b8be <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 801b88a:	8c04      	ldrh	r4, [r0, #32]
 801b88c:	f831 5b02 	ldrh.w	r5, [r1], #2
 801b890:	4294      	cmp	r4, r2
 801b892:	d805      	bhi.n	801b8a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 801b894:	4b19      	ldr	r3, [pc, #100]	; (801b8fc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 801b896:	4a1a      	ldr	r2, [pc, #104]	; (801b900 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 801b898:	481a      	ldr	r0, [pc, #104]	; (801b904 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 801b89a:	21c5      	movs	r1, #197	; 0xc5
 801b89c:	f010 fbaa 	bl	802bff4 <__assert_func>
 801b8a0:	8bc4      	ldrh	r4, [r0, #30]
 801b8a2:	4414      	add	r4, r2
 801b8a4:	b2a4      	uxth	r4, r4
 801b8a6:	2c01      	cmp	r4, #1
 801b8a8:	bf88      	it	hi
 801b8aa:	3c02      	subhi	r4, #2
 801b8ac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b8b0:	3a01      	subs	r2, #1
 801b8b2:	8b64      	ldrh	r4, [r4, #26]
 801b8b4:	42ac      	cmp	r4, r5
 801b8b6:	b292      	uxth	r2, r2
 801b8b8:	d0e5      	beq.n	801b886 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 801b8ba:	2000      	movs	r0, #0
 801b8bc:	bd70      	pop	{r4, r5, r6, pc}
 801b8be:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b8c2:	2400      	movs	r4, #0
 801b8c4:	4413      	add	r3, r2
 801b8c6:	b2a2      	uxth	r2, r4
 801b8c8:	429a      	cmp	r2, r3
 801b8ca:	da14      	bge.n	801b8f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 801b8cc:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 801b8ce:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801b8d2:	4296      	cmp	r6, r2
 801b8d4:	d802      	bhi.n	801b8dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 801b8d6:	4b09      	ldr	r3, [pc, #36]	; (801b8fc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 801b8d8:	4a0b      	ldr	r2, [pc, #44]	; (801b908 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 801b8da:	e7dd      	b.n	801b898 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 801b8dc:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801b8de:	4432      	add	r2, r6
 801b8e0:	b292      	uxth	r2, r2
 801b8e2:	2a09      	cmp	r2, #9
 801b8e4:	bf88      	it	hi
 801b8e6:	3a0a      	subhi	r2, #10
 801b8e8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b8ec:	3401      	adds	r4, #1
 801b8ee:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b8f0:	42aa      	cmp	r2, r5
 801b8f2:	d0e8      	beq.n	801b8c6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 801b8f4:	e7e1      	b.n	801b8ba <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 801b8f6:	2001      	movs	r0, #1
 801b8f8:	e7e0      	b.n	801b8bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 801b8fa:	bf00      	nop
 801b8fc:	080324c2 	.word	0x080324c2
 801b900:	08035560 	.word	0x08035560
 801b904:	08032496 	.word	0x08032496
 801b908:	08035205 	.word	0x08035205

0801b90c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801b90c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b910:	4605      	mov	r5, r0
 801b912:	4616      	mov	r6, r2
 801b914:	1c8c      	adds	r4, r1, #2
 801b916:	8809      	ldrh	r1, [r1, #0]
 801b918:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801b91c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801b920:	42b3      	cmp	r3, r6
 801b922:	d124      	bne.n	801b96e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801b924:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801b928:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801b92c:	f001 070f 	and.w	r7, r1, #15
 801b930:	f8cd 8000 	str.w	r8, [sp]
 801b934:	464b      	mov	r3, r9
 801b936:	4652      	mov	r2, sl
 801b938:	4621      	mov	r1, r4
 801b93a:	4628      	mov	r0, r5
 801b93c:	f7ff ff9e 	bl	801b87c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801b940:	4683      	mov	fp, r0
 801b942:	b168      	cbz	r0, 801b960 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801b944:	eb0a 0109 	add.w	r1, sl, r9
 801b948:	4441      	add	r1, r8
 801b94a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801b94e:	463a      	mov	r2, r7
 801b950:	4649      	mov	r1, r9
 801b952:	4628      	mov	r0, r5
 801b954:	f7ff ff42 	bl	801b7dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801b958:	4658      	mov	r0, fp
 801b95a:	b003      	add	sp, #12
 801b95c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b960:	eb07 010a 	add.w	r1, r7, sl
 801b964:	4449      	add	r1, r9
 801b966:	4441      	add	r1, r8
 801b968:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801b96c:	e7d2      	b.n	801b914 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801b96e:	f04f 0b00 	mov.w	fp, #0
 801b972:	e7f1      	b.n	801b958 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801b974 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801b974:	b570      	push	{r4, r5, r6, lr}
 801b976:	8810      	ldrh	r0, [r2, #0]
 801b978:	4298      	cmp	r0, r3
 801b97a:	d817      	bhi.n	801b9ac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b97c:	1e48      	subs	r0, r1, #1
 801b97e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801b982:	4298      	cmp	r0, r3
 801b984:	d312      	bcc.n	801b9ac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b986:	2400      	movs	r4, #0
 801b988:	428c      	cmp	r4, r1
 801b98a:	d20f      	bcs.n	801b9ac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b98c:	1860      	adds	r0, r4, r1
 801b98e:	1040      	asrs	r0, r0, #1
 801b990:	0085      	lsls	r5, r0, #2
 801b992:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801b996:	42b3      	cmp	r3, r6
 801b998:	d902      	bls.n	801b9a0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801b99a:	3001      	adds	r0, #1
 801b99c:	b284      	uxth	r4, r0
 801b99e:	e7f3      	b.n	801b988 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b9a0:	d201      	bcs.n	801b9a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b9a2:	b281      	uxth	r1, r0
 801b9a4:	e7f0      	b.n	801b988 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b9a6:	442a      	add	r2, r5
 801b9a8:	8850      	ldrh	r0, [r2, #2]
 801b9aa:	bd70      	pop	{r4, r5, r6, pc}
 801b9ac:	2000      	movs	r0, #0
 801b9ae:	e7fc      	b.n	801b9aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b9b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b9b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b9b4:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b9b6:	886f      	ldrh	r7, [r5, #2]
 801b9b8:	4604      	mov	r4, r0
 801b9ba:	087f      	lsrs	r7, r7, #1
 801b9bc:	260b      	movs	r6, #11
 801b9be:	3e01      	subs	r6, #1
 801b9c0:	d01b      	beq.n	801b9fa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801b9c2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b9c4:	b92b      	cbnz	r3, 801b9d2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 801b9c6:	4b0e      	ldr	r3, [pc, #56]	; (801ba00 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 801b9c8:	4a0e      	ldr	r2, [pc, #56]	; (801ba04 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 801b9ca:	480f      	ldr	r0, [pc, #60]	; (801ba08 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 801b9cc:	21c0      	movs	r1, #192	; 0xc0
 801b9ce:	f010 fb11 	bl	802bff4 <__assert_func>
 801b9d2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b9d4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b9d8:	462a      	mov	r2, r5
 801b9da:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b9de:	4639      	mov	r1, r7
 801b9e0:	4643      	mov	r3, r8
 801b9e2:	4620      	mov	r0, r4
 801b9e4:	f7ff ffc6 	bl	801b974 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b9e8:	b138      	cbz	r0, 801b9fa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801b9ea:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b9ee:	4642      	mov	r2, r8
 801b9f0:	4620      	mov	r0, r4
 801b9f2:	f7ff ff8b 	bl	801b90c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b9f6:	2800      	cmp	r0, #0
 801b9f8:	d1e1      	bne.n	801b9be <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b9fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b9fe:	bf00      	nop
 801ba00:	080323c4 	.word	0x080323c4
 801ba04:	080352d7 	.word	0x080352d7
 801ba08:	08032496 	.word	0x08032496

0801ba0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801ba0c:	b570      	push	{r4, r5, r6, lr}
 801ba0e:	694a      	ldr	r2, [r1, #20]
 801ba10:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801ba12:	684b      	ldr	r3, [r1, #4]
 801ba14:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801ba16:	1b54      	subs	r4, r2, r5
 801ba18:	f000 8106 	beq.w	801bc28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801ba1c:	1b9b      	subs	r3, r3, r6
 801ba1e:	d003      	beq.n	801ba28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801ba20:	4363      	muls	r3, r4
 801ba22:	2210      	movs	r2, #16
 801ba24:	fb93 f3f2 	sdiv	r3, r3, r2
 801ba28:	680c      	ldr	r4, [r1, #0]
 801ba2a:	698a      	ldr	r2, [r1, #24]
 801ba2c:	1b65      	subs	r5, r4, r5
 801ba2e:	f000 80fd 	beq.w	801bc2c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801ba32:	1b92      	subs	r2, r2, r6
 801ba34:	d003      	beq.n	801ba3e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801ba36:	436a      	muls	r2, r5
 801ba38:	2410      	movs	r4, #16
 801ba3a:	fb92 f2f4 	sdiv	r2, r2, r4
 801ba3e:	1a9b      	subs	r3, r3, r2
 801ba40:	ee07 3a90 	vmov	s15, r3
 801ba44:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801bc68 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801ba48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801ba4c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ba50:	ee67 7a84 	vmul.f32	s15, s15, s8
 801ba54:	460a      	mov	r2, r1
 801ba56:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801ba5a:	4603      	mov	r3, r0
 801ba5c:	f100 040c 	add.w	r4, r0, #12
 801ba60:	eeb1 6a43 	vneg.f32	s12, s6
 801ba64:	edd2 7a02 	vldr	s15, [r2, #8]
 801ba68:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801ba6c:	3214      	adds	r2, #20
 801ba6e:	ece3 6a01 	vstmia	r3!, {s13}
 801ba72:	ed52 7a02 	vldr	s15, [r2, #-8]
 801ba76:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801ba7a:	429c      	cmp	r4, r3
 801ba7c:	edc3 7a02 	vstr	s15, [r3, #8]
 801ba80:	ed52 7a01 	vldr	s15, [r2, #-4]
 801ba84:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801ba88:	edc3 7a05 	vstr	s15, [r3, #20]
 801ba8c:	d1ea      	bne.n	801ba64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801ba8e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801ba90:	698b      	ldr	r3, [r1, #24]
 801ba92:	edd0 4a02 	vldr	s9, [r0, #8]
 801ba96:	edd0 3a00 	vldr	s7, [r0]
 801ba9a:	edd0 6a01 	vldr	s13, [r0, #4]
 801ba9e:	ed90 5a05 	vldr	s10, [r0, #20]
 801baa2:	ed90 2a03 	vldr	s4, [r0, #12]
 801baa6:	edd0 5a04 	vldr	s11, [r0, #16]
 801baaa:	ed90 1a07 	vldr	s2, [r0, #28]
 801baae:	edd0 2a06 	vldr	s5, [r0, #24]
 801bab2:	1a9b      	subs	r3, r3, r2
 801bab4:	ee07 3a90 	vmov	s15, r3
 801bab8:	684b      	ldr	r3, [r1, #4]
 801baba:	1a9b      	subs	r3, r3, r2
 801babc:	ee07 3a10 	vmov	s14, r3
 801bac0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801bac4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801bac8:	ee67 7a84 	vmul.f32	s15, s15, s8
 801bacc:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801bad0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bad4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801bad8:	ee27 7a04 	vmul.f32	s14, s14, s8
 801badc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801bae0:	eee6 7a87 	vfma.f32	s15, s13, s14
 801bae4:	ee32 5a45 	vsub.f32	s10, s4, s10
 801bae8:	ee67 7a83 	vmul.f32	s15, s15, s6
 801baec:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801baf0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801baf2:	694a      	ldr	r2, [r1, #20]
 801baf4:	1b13      	subs	r3, r2, r4
 801baf6:	ee07 3a10 	vmov	s14, r3
 801bafa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bafe:	680b      	ldr	r3, [r1, #0]
 801bb00:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bb04:	1b1b      	subs	r3, r3, r4
 801bb06:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801bb0a:	ee07 3a10 	vmov	s14, r3
 801bb0e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bb12:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bb16:	eee6 4a87 	vfma.f32	s9, s13, s14
 801bb1a:	ee64 4a86 	vmul.f32	s9, s9, s12
 801bb1e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801bb22:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801bb24:	698b      	ldr	r3, [r1, #24]
 801bb26:	1a9b      	subs	r3, r3, r2
 801bb28:	ee06 3a90 	vmov	s13, r3
 801bb2c:	684b      	ldr	r3, [r1, #4]
 801bb2e:	1a9b      	subs	r3, r3, r2
 801bb30:	ee07 3a10 	vmov	s14, r3
 801bb34:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801bb38:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bb3c:	ee66 6a84 	vmul.f32	s13, s13, s8
 801bb40:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bb44:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801bb48:	eee5 6a87 	vfma.f32	s13, s11, s14
 801bb4c:	ee66 6a83 	vmul.f32	s13, s13, s6
 801bb50:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801bb54:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801bb56:	694a      	ldr	r2, [r1, #20]
 801bb58:	1b13      	subs	r3, r2, r4
 801bb5a:	ee07 3a10 	vmov	s14, r3
 801bb5e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bb62:	680b      	ldr	r3, [r1, #0]
 801bb64:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bb68:	1b1b      	subs	r3, r3, r4
 801bb6a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801bb6e:	ee07 3a10 	vmov	s14, r3
 801bb72:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bb76:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bb7a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801bb7e:	edd0 5a08 	vldr	s11, [r0, #32]
 801bb82:	ee25 5a06 	vmul.f32	s10, s10, s12
 801bb86:	ee31 1a65 	vsub.f32	s2, s2, s11
 801bb8a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801bb8e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801bb90:	698b      	ldr	r3, [r1, #24]
 801bb92:	1a9b      	subs	r3, r3, r2
 801bb94:	ee07 3a10 	vmov	s14, r3
 801bb98:	684b      	ldr	r3, [r1, #4]
 801bb9a:	1a9b      	subs	r3, r3, r2
 801bb9c:	ee01 3a90 	vmov	s3, r3
 801bba0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bba4:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801bba8:	ee27 7a04 	vmul.f32	s14, s14, s8
 801bbac:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801bbb0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801bbb4:	ee61 1a84 	vmul.f32	s3, s3, s8
 801bbb8:	eea1 7a21 	vfma.f32	s14, s2, s3
 801bbbc:	ee27 7a03 	vmul.f32	s14, s14, s6
 801bbc0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801bbc4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801bbc6:	694a      	ldr	r2, [r1, #20]
 801bbc8:	1b13      	subs	r3, r2, r4
 801bbca:	ee03 3a10 	vmov	s6, r3
 801bbce:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801bbd2:	680b      	ldr	r3, [r1, #0]
 801bbd4:	ee23 3a04 	vmul.f32	s6, s6, s8
 801bbd8:	1b1b      	subs	r3, r3, r4
 801bbda:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801bbde:	ee03 3a10 	vmov	s6, r3
 801bbe2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801bbe6:	ee23 4a04 	vmul.f32	s8, s6, s8
 801bbea:	eee1 5a04 	vfma.f32	s11, s2, s8
 801bbee:	ee25 6a86 	vmul.f32	s12, s11, s12
 801bbf2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801bbf6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801bbfa:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801bbfe:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801bc02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc06:	dd13      	ble.n	801bc30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801bc08:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801bc0c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801bc10:	63c3      	str	r3, [r0, #60]	; 0x3c
 801bc12:	eee3 7a87 	vfma.f32	s15, s7, s14
 801bc16:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801bc1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc1e:	dd15      	ble.n	801bc4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801bc20:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801bc24:	6403      	str	r3, [r0, #64]	; 0x40
 801bc26:	bd70      	pop	{r4, r5, r6, pc}
 801bc28:	4623      	mov	r3, r4
 801bc2a:	e6fd      	b.n	801ba28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801bc2c:	462a      	mov	r2, r5
 801bc2e:	e706      	b.n	801ba3e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801bc30:	d502      	bpl.n	801bc38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801bc32:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801bc36:	e7e9      	b.n	801bc0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801bc38:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801bc3c:	eea3 2a85 	vfma.f32	s4, s7, s10
 801bc40:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801bc44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc48:	dade      	bge.n	801bc08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801bc4a:	e7f2      	b.n	801bc32 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801bc4c:	d502      	bpl.n	801bc54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801bc4e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801bc52:	e7e7      	b.n	801bc24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801bc54:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801bc58:	eee3 4a86 	vfma.f32	s9, s7, s12
 801bc5c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801bc60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc64:	dadc      	bge.n	801bc20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801bc66:	e7f2      	b.n	801bc4e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801bc68:	3d800000 	.word	0x3d800000

0801bc6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801bc6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bc70:	2714      	movs	r7, #20
 801bc72:	435f      	muls	r7, r3
 801bc74:	eb02 0c07 	add.w	ip, r2, r7
 801bc78:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801bc7c:	f115 0e0f 	adds.w	lr, r5, #15
 801bc80:	d432      	bmi.n	801bce8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x7c>
 801bc82:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801bc86:	9c08      	ldr	r4, [sp, #32]
 801bc88:	f8c0 e014 	str.w	lr, [r0, #20]
 801bc8c:	2614      	movs	r6, #20
 801bc8e:	4366      	muls	r6, r4
 801bc90:	eb02 0806 	add.w	r8, r2, r6
 801bc94:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801bc98:	f115 040f 	adds.w	r4, r5, #15
 801bc9c:	d430      	bmi.n	801bd00 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801bc9e:	1124      	asrs	r4, r4, #4
 801bca0:	eba4 040e 	sub.w	r4, r4, lr
 801bca4:	6184      	str	r4, [r0, #24]
 801bca6:	2c00      	cmp	r4, #0
 801bca8:	f000 80a9 	beq.w	801bdfe <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x192>
 801bcac:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801bcb0:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801bcb4:	5995      	ldr	r5, [r2, r6]
 801bcb6:	eba4 0809 	sub.w	r8, r4, r9
 801bcba:	59d4      	ldr	r4, [r2, r7]
 801bcbc:	eba5 0a04 	sub.w	sl, r5, r4
 801bcc0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801bcc4:	fb0e fe05 	mul.w	lr, lr, r5
 801bcc8:	fb0a ee19 	mls	lr, sl, r9, lr
 801bccc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801bcd0:	fb08 e404 	mla	r4, r8, r4, lr
 801bcd4:	3c01      	subs	r4, #1
 801bcd6:	2e00      	cmp	r6, #0
 801bcd8:	4434      	add	r4, r6
 801bcda:	dc1d      	bgt.n	801bd18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xac>
 801bcdc:	4b5a      	ldr	r3, [pc, #360]	; (801be48 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1dc>)
 801bcde:	4a5b      	ldr	r2, [pc, #364]	; (801be4c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e0>)
 801bce0:	485b      	ldr	r0, [pc, #364]	; (801be50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e4>)
 801bce2:	21f7      	movs	r1, #247	; 0xf7
 801bce4:	f010 f986 	bl	802bff4 <__assert_func>
 801bce8:	f1c5 0501 	rsb	r5, r5, #1
 801bcec:	f015 050f 	ands.w	r5, r5, #15
 801bcf0:	bf18      	it	ne
 801bcf2:	2501      	movne	r5, #1
 801bcf4:	2410      	movs	r4, #16
 801bcf6:	fb9e fef4 	sdiv	lr, lr, r4
 801bcfa:	ebae 0e05 	sub.w	lr, lr, r5
 801bcfe:	e7c2      	b.n	801bc86 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a>
 801bd00:	f1c5 0501 	rsb	r5, r5, #1
 801bd04:	f015 050f 	ands.w	r5, r5, #15
 801bd08:	bf18      	it	ne
 801bd0a:	2501      	movne	r5, #1
 801bd0c:	f04f 0910 	mov.w	r9, #16
 801bd10:	fb94 f4f9 	sdiv	r4, r4, r9
 801bd14:	1b64      	subs	r4, r4, r5
 801bd16:	e7c3      	b.n	801bca0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x34>
 801bd18:	2c00      	cmp	r4, #0
 801bd1a:	db72      	blt.n	801be02 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x196>
 801bd1c:	fb94 fef6 	sdiv	lr, r4, r6
 801bd20:	f8c0 e000 	str.w	lr, [r0]
 801bd24:	fb06 441e 	mls	r4, r6, lr, r4
 801bd28:	6104      	str	r4, [r0, #16]
 801bd2a:	2d00      	cmp	r5, #0
 801bd2c:	db7b      	blt.n	801be26 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ba>
 801bd2e:	fb95 f4f6 	sdiv	r4, r5, r6
 801bd32:	6044      	str	r4, [r0, #4]
 801bd34:	fb06 5514 	mls	r5, r6, r4, r5
 801bd38:	6085      	str	r5, [r0, #8]
 801bd3a:	60c6      	str	r6, [r0, #12]
 801bd3c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801bd40:	6945      	ldr	r5, [r0, #20]
 801bd42:	59d2      	ldr	r2, [r2, r7]
 801bd44:	eddf 6a43 	vldr	s13, [pc, #268]	; 801be54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e8>
 801bd48:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801bd4c:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801bd50:	ee07 4a10 	vmov	s14, r4
 801bd54:	6804      	ldr	r4, [r0, #0]
 801bd56:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801bd5a:	ee07 2a90 	vmov	s15, r2
 801bd5e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bd62:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801bd66:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801bd6a:	ee27 7a26 	vmul.f32	s14, s14, s13
 801bd6e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bd72:	edd3 6a00 	vldr	s13, [r3]
 801bd76:	eee6 6a07 	vfma.f32	s13, s12, s14
 801bd7a:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801bd7e:	eee6 6a27 	vfma.f32	s13, s12, s15
 801bd82:	edc0 6a07 	vstr	s13, [r0, #28]
 801bd86:	edd0 6a01 	vldr	s13, [r0, #4]
 801bd8a:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801bd8e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801bd92:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801bd96:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801bd9a:	ed80 6a08 	vstr	s12, [r0, #32]
 801bd9e:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801bda0:	6242      	str	r2, [r0, #36]	; 0x24
 801bda2:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801bda6:	ed93 6a03 	vldr	s12, [r3, #12]
 801bdaa:	eea5 6a87 	vfma.f32	s12, s11, s14
 801bdae:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801bdb2:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801bdb6:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801bdba:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801bdbe:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801bdc2:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801bdc6:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801bdca:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801bdcc:	6302      	str	r2, [r0, #48]	; 0x30
 801bdce:	ed93 6a06 	vldr	s12, [r3, #24]
 801bdd2:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801bdd6:	eea5 6a87 	vfma.f32	s12, s11, s14
 801bdda:	eeb0 7a46 	vmov.f32	s14, s12
 801bdde:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801bde2:	eea6 7a27 	vfma.f32	s14, s12, s15
 801bde6:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801bdea:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801bdee:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801bdf2:	eee6 7a87 	vfma.f32	s15, s13, s14
 801bdf6:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801bdfa:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801bdfc:	63c3      	str	r3, [r0, #60]	; 0x3c
 801bdfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801be02:	4264      	negs	r4, r4
 801be04:	fb94 fef6 	sdiv	lr, r4, r6
 801be08:	f1ce 0800 	rsb	r8, lr, #0
 801be0c:	fb06 441e 	mls	r4, r6, lr, r4
 801be10:	f8c0 8000 	str.w	r8, [r0]
 801be14:	6104      	str	r4, [r0, #16]
 801be16:	2c00      	cmp	r4, #0
 801be18:	d087      	beq.n	801bd2a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbe>
 801be1a:	ea6f 0e0e 	mvn.w	lr, lr
 801be1e:	f8c0 e000 	str.w	lr, [r0]
 801be22:	1b34      	subs	r4, r6, r4
 801be24:	e780      	b.n	801bd28 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbc>
 801be26:	426d      	negs	r5, r5
 801be28:	fb95 f4f6 	sdiv	r4, r5, r6
 801be2c:	f1c4 0e00 	rsb	lr, r4, #0
 801be30:	fb06 5514 	mls	r5, r6, r4, r5
 801be34:	f8c0 e004 	str.w	lr, [r0, #4]
 801be38:	6085      	str	r5, [r0, #8]
 801be3a:	2d00      	cmp	r5, #0
 801be3c:	f43f af7d 	beq.w	801bd3a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xce>
 801be40:	43e4      	mvns	r4, r4
 801be42:	6044      	str	r4, [r0, #4]
 801be44:	1b75      	subs	r5, r6, r5
 801be46:	e777      	b.n	801bd38 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xcc>
 801be48:	08035631 	.word	0x08035631
 801be4c:	08035670 	.word	0x08035670
 801be50:	08035641 	.word	0x08035641
 801be54:	3d800000 	.word	0x3d800000

0801be58 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801be58:	4602      	mov	r2, r0
 801be5a:	b148      	cbz	r0, 801be70 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801be5c:	2300      	movs	r3, #0
 801be5e:	b298      	uxth	r0, r3
 801be60:	3301      	adds	r3, #1
 801be62:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801be66:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801be6a:	2900      	cmp	r1, #0
 801be6c:	d1f7      	bne.n	801be5e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801be6e:	4770      	bx	lr
 801be70:	4770      	bx	lr

0801be72 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801be72:	b530      	push	{r4, r5, lr}
 801be74:	4604      	mov	r4, r0
 801be76:	b159      	cbz	r1, 801be90 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801be78:	b148      	cbz	r0, 801be8e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801be7a:	2300      	movs	r3, #0
 801be7c:	b298      	uxth	r0, r3
 801be7e:	4282      	cmp	r2, r0
 801be80:	d905      	bls.n	801be8e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801be82:	5ccd      	ldrb	r5, [r1, r3]
 801be84:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801be88:	3301      	adds	r3, #1
 801be8a:	2d00      	cmp	r5, #0
 801be8c:	d1f6      	bne.n	801be7c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801be8e:	bd30      	pop	{r4, r5, pc}
 801be90:	4608      	mov	r0, r1
 801be92:	e7fc      	b.n	801be8e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801be94 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 801be94:	b5f0      	push	{r4, r5, r6, r7, lr}
 801be96:	b08b      	sub	sp, #44	; 0x2c
 801be98:	468c      	mov	ip, r1
 801be9a:	2100      	movs	r1, #0
 801be9c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801bea0:	ae01      	add	r6, sp, #4
 801bea2:	211f      	movs	r1, #31
 801bea4:	fbb0 f7f3 	udiv	r7, r0, r3
 801bea8:	fb03 0517 	mls	r5, r3, r7, r0
 801beac:	b2ec      	uxtb	r4, r5
 801beae:	2d09      	cmp	r5, #9
 801beb0:	bfd4      	ite	le
 801beb2:	3430      	addle	r4, #48	; 0x30
 801beb4:	3457      	addgt	r4, #87	; 0x57
 801beb6:	b2e4      	uxtb	r4, r4
 801beb8:	558c      	strb	r4, [r1, r6]
 801beba:	4638      	mov	r0, r7
 801bebc:	1e4c      	subs	r4, r1, #1
 801bebe:	b92f      	cbnz	r7, 801becc <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 801bec0:	4431      	add	r1, r6
 801bec2:	4660      	mov	r0, ip
 801bec4:	f7ff ffd5 	bl	801be72 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801bec8:	b00b      	add	sp, #44	; 0x2c
 801beca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801becc:	4621      	mov	r1, r4
 801bece:	e7e9      	b.n	801bea4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0801bed0 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801bed0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bed2:	4607      	mov	r7, r0
 801bed4:	b08b      	sub	sp, #44	; 0x2c
 801bed6:	4608      	mov	r0, r1
 801bed8:	b341      	cbz	r1, 801bf2c <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801beda:	1e99      	subs	r1, r3, #2
 801bedc:	2922      	cmp	r1, #34	; 0x22
 801bede:	d825      	bhi.n	801bf2c <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801bee0:	2100      	movs	r1, #0
 801bee2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801bee6:	463c      	mov	r4, r7
 801bee8:	261f      	movs	r6, #31
 801beea:	f10d 0c04 	add.w	ip, sp, #4
 801beee:	fb94 fef3 	sdiv	lr, r4, r3
 801bef2:	fb03 441e 	mls	r4, r3, lr, r4
 801bef6:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801befa:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801befe:	b2ec      	uxtb	r4, r5
 801bf00:	2d09      	cmp	r5, #9
 801bf02:	bfd4      	ite	le
 801bf04:	3430      	addle	r4, #48	; 0x30
 801bf06:	3457      	addgt	r4, #87	; 0x57
 801bf08:	b2e4      	uxtb	r4, r4
 801bf0a:	f80c 4006 	strb.w	r4, [ip, r6]
 801bf0e:	4674      	mov	r4, lr
 801bf10:	1e71      	subs	r1, r6, #1
 801bf12:	b96c      	cbnz	r4, 801bf30 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 801bf14:	2f00      	cmp	r7, #0
 801bf16:	da05      	bge.n	801bf24 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 801bf18:	ab0a      	add	r3, sp, #40	; 0x28
 801bf1a:	4419      	add	r1, r3
 801bf1c:	232d      	movs	r3, #45	; 0x2d
 801bf1e:	f801 3c24 	strb.w	r3, [r1, #-36]
 801bf22:	1eb1      	subs	r1, r6, #2
 801bf24:	3101      	adds	r1, #1
 801bf26:	4461      	add	r1, ip
 801bf28:	f7ff ffa3 	bl	801be72 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801bf2c:	b00b      	add	sp, #44	; 0x2c
 801bf2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801bf30:	460e      	mov	r6, r1
 801bf32:	e7dc      	b.n	801beee <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0801bf34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801bf34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf38:	4691      	mov	r9, r2
 801bf3a:	b085      	sub	sp, #20
 801bf3c:	6802      	ldr	r2, [r0, #0]
 801bf3e:	9201      	str	r2, [sp, #4]
 801bf40:	4688      	mov	r8, r1
 801bf42:	4683      	mov	fp, r0
 801bf44:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801bf48:	9103      	str	r1, [sp, #12]
 801bf4a:	4610      	mov	r0, r2
 801bf4c:	461c      	mov	r4, r3
 801bf4e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801bf52:	9302      	str	r3, [sp, #8]
 801bf54:	f7ff ff80 	bl	801be58 <_ZN8touchgfx7Unicode6strlenEPKt>
 801bf58:	f1b8 0f00 	cmp.w	r8, #0
 801bf5c:	bf0c      	ite	eq
 801bf5e:	4684      	moveq	ip, r0
 801bf60:	f100 0c01 	addne.w	ip, r0, #1
 801bf64:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801bf68:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801bf6c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801bf6e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bf70:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801bf74:	9903      	ldr	r1, [sp, #12]
 801bf76:	fa1f fc8c 	uxth.w	ip, ip
 801bf7a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801bf7e:	d041      	beq.n	801c004 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801bf80:	d834      	bhi.n	801bfec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801bf82:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801bf86:	d059      	beq.n	801c03c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801bf88:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801bf8c:	d03a      	beq.n	801c004 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801bf8e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801bf92:	d034      	beq.n	801bffe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801bf94:	2400      	movs	r4, #0
 801bf96:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801bf9a:	3a01      	subs	r2, #1
 801bf9c:	b169      	cbz	r1, 801bfba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801bf9e:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bfa0:	458c      	cmp	ip, r1
 801bfa2:	da09      	bge.n	801bfb8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801bfa4:	eba1 010c 	sub.w	r1, r1, ip
 801bfa8:	b289      	uxth	r1, r1
 801bfaa:	b933      	cbnz	r3, 801bfba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801bfac:	2e00      	cmp	r6, #0
 801bfae:	d051      	beq.n	801c054 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801bfb0:	2800      	cmp	r0, #0
 801bfb2:	d04f      	beq.n	801c054 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801bfb4:	440c      	add	r4, r1
 801bfb6:	b2a4      	uxth	r4, r4
 801bfb8:	2100      	movs	r1, #0
 801bfba:	682b      	ldr	r3, [r5, #0]
 801bfbc:	4293      	cmp	r3, r2
 801bfbe:	da07      	bge.n	801bfd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801bfc0:	f1b8 0f00 	cmp.w	r8, #0
 801bfc4:	d004      	beq.n	801bfd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801bfc6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801bfca:	682b      	ldr	r3, [r5, #0]
 801bfcc:	3301      	adds	r3, #1
 801bfce:	602b      	str	r3, [r5, #0]
 801bfd0:	2730      	movs	r7, #48	; 0x30
 801bfd2:	2c00      	cmp	r4, #0
 801bfd4:	d04e      	beq.n	801c074 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801bfd6:	682e      	ldr	r6, [r5, #0]
 801bfd8:	3c01      	subs	r4, #1
 801bfda:	42b2      	cmp	r2, r6
 801bfdc:	b2a4      	uxth	r4, r4
 801bfde:	dd49      	ble.n	801c074 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801bfe0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801bfe4:	682b      	ldr	r3, [r5, #0]
 801bfe6:	3301      	adds	r3, #1
 801bfe8:	602b      	str	r3, [r5, #0]
 801bfea:	e7f2      	b.n	801bfd2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801bfec:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801bff0:	d01d      	beq.n	801c02e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801bff2:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801bff6:	d002      	beq.n	801bffe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801bff8:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801bffc:	e7c9      	b.n	801bf92 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801bffe:	4684      	mov	ip, r0
 801c000:	f04f 0800 	mov.w	r8, #0
 801c004:	2c00      	cmp	r4, #0
 801c006:	d0c6      	beq.n	801bf96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c008:	b947      	cbnz	r7, 801c01c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801c00a:	2801      	cmp	r0, #1
 801c00c:	d106      	bne.n	801c01c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801c00e:	8814      	ldrh	r4, [r2, #0]
 801c010:	2c30      	cmp	r4, #48	; 0x30
 801c012:	bf02      	ittt	eq
 801c014:	3202      	addeq	r2, #2
 801c016:	f8cb 2000 	streq.w	r2, [fp]
 801c01a:	4638      	moveq	r0, r7
 801c01c:	45bc      	cmp	ip, r7
 801c01e:	da14      	bge.n	801c04a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801c020:	b2bf      	uxth	r7, r7
 801c022:	eba7 040c 	sub.w	r4, r7, ip
 801c026:	b2a4      	uxth	r4, r4
 801c028:	46bc      	mov	ip, r7
 801c02a:	2600      	movs	r6, #0
 801c02c:	e7b3      	b.n	801bf96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c02e:	4684      	mov	ip, r0
 801c030:	b16c      	cbz	r4, 801c04e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801c032:	42b8      	cmp	r0, r7
 801c034:	dd00      	ble.n	801c038 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801c036:	b2b8      	uxth	r0, r7
 801c038:	2400      	movs	r4, #0
 801c03a:	e003      	b.n	801c044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801c03c:	f04f 0c01 	mov.w	ip, #1
 801c040:	2400      	movs	r4, #0
 801c042:	4660      	mov	r0, ip
 801c044:	4626      	mov	r6, r4
 801c046:	46a0      	mov	r8, r4
 801c048:	e7a5      	b.n	801bf96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c04a:	2400      	movs	r4, #0
 801c04c:	e7ed      	b.n	801c02a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801c04e:	4626      	mov	r6, r4
 801c050:	46a0      	mov	r8, r4
 801c052:	e7a0      	b.n	801bf96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801c054:	2900      	cmp	r1, #0
 801c056:	d0b0      	beq.n	801bfba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801c058:	2720      	movs	r7, #32
 801c05a:	682e      	ldr	r6, [r5, #0]
 801c05c:	2900      	cmp	r1, #0
 801c05e:	d0ac      	beq.n	801bfba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801c060:	3901      	subs	r1, #1
 801c062:	4296      	cmp	r6, r2
 801c064:	b289      	uxth	r1, r1
 801c066:	daa7      	bge.n	801bfb8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801c068:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801c06c:	682b      	ldr	r3, [r5, #0]
 801c06e:	3301      	adds	r3, #1
 801c070:	602b      	str	r3, [r5, #0]
 801c072:	e7f2      	b.n	801c05a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801c074:	b188      	cbz	r0, 801c09a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801c076:	682b      	ldr	r3, [r5, #0]
 801c078:	3801      	subs	r0, #1
 801c07a:	429a      	cmp	r2, r3
 801c07c:	b280      	uxth	r0, r0
 801c07e:	dd0c      	ble.n	801c09a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801c080:	f8db 3000 	ldr.w	r3, [fp]
 801c084:	1c9c      	adds	r4, r3, #2
 801c086:	f8cb 4000 	str.w	r4, [fp]
 801c08a:	881c      	ldrh	r4, [r3, #0]
 801c08c:	682b      	ldr	r3, [r5, #0]
 801c08e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801c092:	682b      	ldr	r3, [r5, #0]
 801c094:	3301      	adds	r3, #1
 801c096:	602b      	str	r3, [r5, #0]
 801c098:	e7ec      	b.n	801c074 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801c09a:	2620      	movs	r6, #32
 801c09c:	b151      	cbz	r1, 801c0b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801c09e:	6828      	ldr	r0, [r5, #0]
 801c0a0:	3901      	subs	r1, #1
 801c0a2:	4282      	cmp	r2, r0
 801c0a4:	b289      	uxth	r1, r1
 801c0a6:	dd05      	ble.n	801c0b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801c0a8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801c0ac:	682b      	ldr	r3, [r5, #0]
 801c0ae:	3301      	adds	r3, #1
 801c0b0:	602b      	str	r3, [r5, #0]
 801c0b2:	e7f3      	b.n	801c09c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801c0b4:	b005      	add	sp, #20
 801c0b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c0ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801c0ba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c0be:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801c0c2:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801c0c6:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801c0ca:	2400      	movs	r4, #0
 801c0cc:	8014      	strh	r4, [r2, #0]
 801c0ce:	701c      	strb	r4, [r3, #0]
 801c0d0:	f888 4000 	strb.w	r4, [r8]
 801c0d4:	f88c 4000 	strb.w	r4, [ip]
 801c0d8:	f88e 4000 	strb.w	r4, [lr]
 801c0dc:	703c      	strb	r4, [r7, #0]
 801c0de:	6804      	ldr	r4, [r0, #0]
 801c0e0:	b1a4      	cbz	r4, 801c10c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801c0e2:	8824      	ldrh	r4, [r4, #0]
 801c0e4:	f04f 0901 	mov.w	r9, #1
 801c0e8:	b314      	cbz	r4, 801c130 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801c0ea:	2c2b      	cmp	r4, #43	; 0x2b
 801c0ec:	d001      	beq.n	801c0f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801c0ee:	2c20      	cmp	r4, #32
 801c0f0:	d110      	bne.n	801c114 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801c0f2:	8014      	strh	r4, [r2, #0]
 801c0f4:	6804      	ldr	r4, [r0, #0]
 801c0f6:	b10c      	cbz	r4, 801c0fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801c0f8:	3402      	adds	r4, #2
 801c0fa:	6004      	str	r4, [r0, #0]
 801c0fc:	680c      	ldr	r4, [r1, #0]
 801c0fe:	b10c      	cbz	r4, 801c104 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801c100:	3401      	adds	r4, #1
 801c102:	600c      	str	r4, [r1, #0]
 801c104:	6804      	ldr	r4, [r0, #0]
 801c106:	b17c      	cbz	r4, 801c128 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801c108:	8824      	ldrh	r4, [r4, #0]
 801c10a:	e7ed      	b.n	801c0e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801c10c:	680c      	ldr	r4, [r1, #0]
 801c10e:	b17c      	cbz	r4, 801c130 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801c110:	7824      	ldrb	r4, [r4, #0]
 801c112:	e7e7      	b.n	801c0e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801c114:	2c2d      	cmp	r4, #45	; 0x2d
 801c116:	d102      	bne.n	801c11e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801c118:	f883 9000 	strb.w	r9, [r3]
 801c11c:	e7ea      	b.n	801c0f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801c11e:	2c23      	cmp	r4, #35	; 0x23
 801c120:	d107      	bne.n	801c132 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801c122:	f888 9000 	strb.w	r9, [r8]
 801c126:	e7e5      	b.n	801c0f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801c128:	680c      	ldr	r4, [r1, #0]
 801c12a:	b10c      	cbz	r4, 801c130 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801c12c:	7824      	ldrb	r4, [r4, #0]
 801c12e:	e7db      	b.n	801c0e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801c130:	2400      	movs	r4, #0
 801c132:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801c136:	2b09      	cmp	r3, #9
 801c138:	d901      	bls.n	801c13e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801c13a:	2c2a      	cmp	r4, #42	; 0x2a
 801c13c:	d122      	bne.n	801c184 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801c13e:	2301      	movs	r3, #1
 801c140:	2c30      	cmp	r4, #48	; 0x30
 801c142:	f88e 3000 	strb.w	r3, [lr]
 801c146:	d10d      	bne.n	801c164 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801c148:	f88c 3000 	strb.w	r3, [ip]
 801c14c:	6803      	ldr	r3, [r0, #0]
 801c14e:	b10b      	cbz	r3, 801c154 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801c150:	3302      	adds	r3, #2
 801c152:	6003      	str	r3, [r0, #0]
 801c154:	680b      	ldr	r3, [r1, #0]
 801c156:	b10b      	cbz	r3, 801c15c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801c158:	3301      	adds	r3, #1
 801c15a:	600b      	str	r3, [r1, #0]
 801c15c:	6803      	ldr	r3, [r0, #0]
 801c15e:	2b00      	cmp	r3, #0
 801c160:	d02f      	beq.n	801c1c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801c162:	881c      	ldrh	r4, [r3, #0]
 801c164:	2c2a      	cmp	r4, #42	; 0x2a
 801c166:	d135      	bne.n	801c1d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801c168:	f04f 33ff 	mov.w	r3, #4294967295
 801c16c:	6033      	str	r3, [r6, #0]
 801c16e:	6803      	ldr	r3, [r0, #0]
 801c170:	b10b      	cbz	r3, 801c176 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801c172:	3302      	adds	r3, #2
 801c174:	6003      	str	r3, [r0, #0]
 801c176:	680b      	ldr	r3, [r1, #0]
 801c178:	b10b      	cbz	r3, 801c17e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801c17a:	3301      	adds	r3, #1
 801c17c:	600b      	str	r3, [r1, #0]
 801c17e:	6803      	ldr	r3, [r0, #0]
 801c180:	b31b      	cbz	r3, 801c1ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801c182:	881c      	ldrh	r4, [r3, #0]
 801c184:	2c2e      	cmp	r4, #46	; 0x2e
 801c186:	d11a      	bne.n	801c1be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801c188:	2301      	movs	r3, #1
 801c18a:	703b      	strb	r3, [r7, #0]
 801c18c:	6803      	ldr	r3, [r0, #0]
 801c18e:	b10b      	cbz	r3, 801c194 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801c190:	3302      	adds	r3, #2
 801c192:	6003      	str	r3, [r0, #0]
 801c194:	680b      	ldr	r3, [r1, #0]
 801c196:	b10b      	cbz	r3, 801c19c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801c198:	3301      	adds	r3, #1
 801c19a:	600b      	str	r3, [r1, #0]
 801c19c:	6803      	ldr	r3, [r0, #0]
 801c19e:	2b00      	cmp	r3, #0
 801c1a0:	d036      	beq.n	801c210 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801c1a2:	881b      	ldrh	r3, [r3, #0]
 801c1a4:	2b2a      	cmp	r3, #42	; 0x2a
 801c1a6:	d137      	bne.n	801c218 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801c1a8:	f04f 33ff 	mov.w	r3, #4294967295
 801c1ac:	602b      	str	r3, [r5, #0]
 801c1ae:	6803      	ldr	r3, [r0, #0]
 801c1b0:	b10b      	cbz	r3, 801c1b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801c1b2:	3302      	adds	r3, #2
 801c1b4:	6003      	str	r3, [r0, #0]
 801c1b6:	680b      	ldr	r3, [r1, #0]
 801c1b8:	b10b      	cbz	r3, 801c1be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801c1ba:	3301      	adds	r3, #1
 801c1bc:	600b      	str	r3, [r1, #0]
 801c1be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c1c2:	680c      	ldr	r4, [r1, #0]
 801c1c4:	b134      	cbz	r4, 801c1d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801c1c6:	7824      	ldrb	r4, [r4, #0]
 801c1c8:	e7cc      	b.n	801c164 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801c1ca:	680b      	ldr	r3, [r1, #0]
 801c1cc:	2b00      	cmp	r3, #0
 801c1ce:	d0f6      	beq.n	801c1be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801c1d0:	781c      	ldrb	r4, [r3, #0]
 801c1d2:	e7d7      	b.n	801c184 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801c1d4:	2300      	movs	r3, #0
 801c1d6:	6033      	str	r3, [r6, #0]
 801c1d8:	220a      	movs	r2, #10
 801c1da:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801c1de:	fa1f f38c 	uxth.w	r3, ip
 801c1e2:	2b09      	cmp	r3, #9
 801c1e4:	d8ce      	bhi.n	801c184 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801c1e6:	6833      	ldr	r3, [r6, #0]
 801c1e8:	fb02 c303 	mla	r3, r2, r3, ip
 801c1ec:	6033      	str	r3, [r6, #0]
 801c1ee:	6803      	ldr	r3, [r0, #0]
 801c1f0:	b10b      	cbz	r3, 801c1f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801c1f2:	3302      	adds	r3, #2
 801c1f4:	6003      	str	r3, [r0, #0]
 801c1f6:	680b      	ldr	r3, [r1, #0]
 801c1f8:	b10b      	cbz	r3, 801c1fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801c1fa:	3301      	adds	r3, #1
 801c1fc:	600b      	str	r3, [r1, #0]
 801c1fe:	6803      	ldr	r3, [r0, #0]
 801c200:	b10b      	cbz	r3, 801c206 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801c202:	881c      	ldrh	r4, [r3, #0]
 801c204:	e7e9      	b.n	801c1da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801c206:	680c      	ldr	r4, [r1, #0]
 801c208:	2c00      	cmp	r4, #0
 801c20a:	d0e6      	beq.n	801c1da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801c20c:	7824      	ldrb	r4, [r4, #0]
 801c20e:	e7e4      	b.n	801c1da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801c210:	680b      	ldr	r3, [r1, #0]
 801c212:	b10b      	cbz	r3, 801c218 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801c214:	781b      	ldrb	r3, [r3, #0]
 801c216:	e7c5      	b.n	801c1a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801c218:	2200      	movs	r2, #0
 801c21a:	602a      	str	r2, [r5, #0]
 801c21c:	240a      	movs	r4, #10
 801c21e:	3b30      	subs	r3, #48	; 0x30
 801c220:	b29e      	uxth	r6, r3
 801c222:	2e09      	cmp	r6, #9
 801c224:	682a      	ldr	r2, [r5, #0]
 801c226:	d813      	bhi.n	801c250 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801c228:	fb04 3302 	mla	r3, r4, r2, r3
 801c22c:	602b      	str	r3, [r5, #0]
 801c22e:	6803      	ldr	r3, [r0, #0]
 801c230:	b10b      	cbz	r3, 801c236 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801c232:	3302      	adds	r3, #2
 801c234:	6003      	str	r3, [r0, #0]
 801c236:	680b      	ldr	r3, [r1, #0]
 801c238:	b10b      	cbz	r3, 801c23e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801c23a:	3301      	adds	r3, #1
 801c23c:	600b      	str	r3, [r1, #0]
 801c23e:	6803      	ldr	r3, [r0, #0]
 801c240:	b10b      	cbz	r3, 801c246 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801c242:	881b      	ldrh	r3, [r3, #0]
 801c244:	e7eb      	b.n	801c21e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801c246:	680b      	ldr	r3, [r1, #0]
 801c248:	2b00      	cmp	r3, #0
 801c24a:	d0e8      	beq.n	801c21e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801c24c:	781b      	ldrb	r3, [r3, #0]
 801c24e:	e7e6      	b.n	801c21e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801c250:	2a06      	cmp	r2, #6
 801c252:	bfa8      	it	ge
 801c254:	2206      	movge	r2, #6
 801c256:	602a      	str	r2, [r5, #0]
 801c258:	e7b1      	b.n	801c1be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801c25a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801c25a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c25e:	b0a3      	sub	sp, #140	; 0x8c
 801c260:	2600      	movs	r6, #0
 801c262:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801c266:	4607      	mov	r7, r0
 801c268:	4688      	mov	r8, r1
 801c26a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801c26e:	4631      	mov	r1, r6
 801c270:	2242      	movs	r2, #66	; 0x42
 801c272:	4648      	mov	r0, r9
 801c274:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801c276:	960d      	str	r6, [sp, #52]	; 0x34
 801c278:	f010 f842 	bl	802c300 <memset>
 801c27c:	b15f      	cbz	r7, 801c296 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801c27e:	f108 3aff 	add.w	sl, r8, #4294967295
 801c282:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c284:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c286:	b152      	cbz	r2, 801c29e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801c288:	8812      	ldrh	r2, [r2, #0]
 801c28a:	b10a      	cbz	r2, 801c290 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801c28c:	459a      	cmp	sl, r3
 801c28e:	dc2e      	bgt.n	801c2ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801c290:	2200      	movs	r2, #0
 801c292:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801c296:	4638      	mov	r0, r7
 801c298:	b023      	add	sp, #140	; 0x8c
 801c29a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c29e:	9a08      	ldr	r2, [sp, #32]
 801c2a0:	2a00      	cmp	r2, #0
 801c2a2:	d0f5      	beq.n	801c290 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801c2a4:	7812      	ldrb	r2, [r2, #0]
 801c2a6:	e7f0      	b.n	801c28a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801c2a8:	2d00      	cmp	r5, #0
 801c2aa:	d0ea      	beq.n	801c282 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c2ac:	782a      	ldrb	r2, [r5, #0]
 801c2ae:	b142      	cbz	r2, 801c2c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801c2b0:	2a25      	cmp	r2, #37	; 0x25
 801c2b2:	d001      	beq.n	801c2b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801c2b4:	459a      	cmp	sl, r3
 801c2b6:	dc08      	bgt.n	801c2ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801c2b8:	f1bb 0f00 	cmp.w	fp, #0
 801c2bc:	d121      	bne.n	801c302 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801c2be:	2d00      	cmp	r5, #0
 801c2c0:	d0df      	beq.n	801c282 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c2c2:	782a      	ldrb	r2, [r5, #0]
 801c2c4:	f04f 0b00 	mov.w	fp, #0
 801c2c8:	e01d      	b.n	801c306 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801c2ca:	f1bb 0f00 	cmp.w	fp, #0
 801c2ce:	d078      	beq.n	801c3c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801c2d0:	f8bb 2000 	ldrh.w	r2, [fp]
 801c2d4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801c2d8:	f1bb 0f00 	cmp.w	fp, #0
 801c2dc:	d002      	beq.n	801c2e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801c2de:	f10b 0202 	add.w	r2, fp, #2
 801c2e2:	9209      	str	r2, [sp, #36]	; 0x24
 801c2e4:	b10d      	cbz	r5, 801c2ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801c2e6:	3501      	adds	r5, #1
 801c2e8:	9508      	str	r5, [sp, #32]
 801c2ea:	3301      	adds	r3, #1
 801c2ec:	930d      	str	r3, [sp, #52]	; 0x34
 801c2ee:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801c2f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c2f4:	f1bb 0f00 	cmp.w	fp, #0
 801c2f8:	d0d6      	beq.n	801c2a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801c2fa:	f8bb 2000 	ldrh.w	r2, [fp]
 801c2fe:	2a00      	cmp	r2, #0
 801c300:	d1d6      	bne.n	801c2b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801c302:	f8bb 2000 	ldrh.w	r2, [fp]
 801c306:	2a00      	cmp	r2, #0
 801c308:	d0bb      	beq.n	801c282 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c30a:	459a      	cmp	sl, r3
 801c30c:	ddb9      	ble.n	801c282 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c30e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801c312:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801c316:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801c31a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801c31e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801c322:	960e      	str	r6, [sp, #56]	; 0x38
 801c324:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801c328:	960f      	str	r6, [sp, #60]	; 0x3c
 801c32a:	f1bb 0f00 	cmp.w	fp, #0
 801c32e:	d002      	beq.n	801c336 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801c330:	f10b 0302 	add.w	r3, fp, #2
 801c334:	9309      	str	r3, [sp, #36]	; 0x24
 801c336:	b10d      	cbz	r5, 801c33c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801c338:	1c6b      	adds	r3, r5, #1
 801c33a:	9308      	str	r3, [sp, #32]
 801c33c:	ab0f      	add	r3, sp, #60	; 0x3c
 801c33e:	9305      	str	r3, [sp, #20]
 801c340:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801c344:	9304      	str	r3, [sp, #16]
 801c346:	ab0e      	add	r3, sp, #56	; 0x38
 801c348:	9303      	str	r3, [sp, #12]
 801c34a:	ab0c      	add	r3, sp, #48	; 0x30
 801c34c:	9302      	str	r3, [sp, #8]
 801c34e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801c352:	9301      	str	r3, [sp, #4]
 801c354:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801c358:	9300      	str	r3, [sp, #0]
 801c35a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801c35e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801c362:	a908      	add	r1, sp, #32
 801c364:	a809      	add	r0, sp, #36	; 0x24
 801c366:	f7ff fea8 	bl	801c0ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801c36a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c36c:	2b00      	cmp	r3, #0
 801c36e:	bfbe      	ittt	lt
 801c370:	6823      	ldrlt	r3, [r4, #0]
 801c372:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801c376:	930e      	strlt	r3, [sp, #56]	; 0x38
 801c378:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c37a:	bfb8      	it	lt
 801c37c:	3404      	addlt	r4, #4
 801c37e:	2b00      	cmp	r3, #0
 801c380:	bfb8      	it	lt
 801c382:	6823      	ldrlt	r3, [r4, #0]
 801c384:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c388:	bfbe      	ittt	lt
 801c38a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801c38e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801c390:	3404      	addlt	r4, #4
 801c392:	b1d9      	cbz	r1, 801c3cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801c394:	880b      	ldrh	r3, [r1, #0]
 801c396:	2b69      	cmp	r3, #105	; 0x69
 801c398:	d01f      	beq.n	801c3da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c39a:	d82f      	bhi.n	801c3fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801c39c:	2b58      	cmp	r3, #88	; 0x58
 801c39e:	d01c      	beq.n	801c3da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c3a0:	d818      	bhi.n	801c3d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801c3a2:	2b25      	cmp	r3, #37	; 0x25
 801c3a4:	d034      	beq.n	801c410 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801c3a6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801c3aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c3ac:	f1bb 0f00 	cmp.w	fp, #0
 801c3b0:	f000 80b8 	beq.w	801c524 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801c3b4:	f8bb 5000 	ldrh.w	r5, [fp]
 801c3b8:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801c3bc:	3301      	adds	r3, #1
 801c3be:	930d      	str	r3, [sp, #52]	; 0x34
 801c3c0:	e029      	b.n	801c416 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801c3c2:	b10d      	cbz	r5, 801c3c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801c3c4:	782a      	ldrb	r2, [r5, #0]
 801c3c6:	e785      	b.n	801c2d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801c3c8:	462a      	mov	r2, r5
 801c3ca:	e783      	b.n	801c2d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801c3cc:	2a00      	cmp	r2, #0
 801c3ce:	d0ea      	beq.n	801c3a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c3d0:	7813      	ldrb	r3, [r2, #0]
 801c3d2:	e7e0      	b.n	801c396 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801c3d4:	3b63      	subs	r3, #99	; 0x63
 801c3d6:	2b01      	cmp	r3, #1
 801c3d8:	d8e5      	bhi.n	801c3a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c3da:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801c3de:	b329      	cbz	r1, 801c42c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801c3e0:	880b      	ldrh	r3, [r1, #0]
 801c3e2:	2b69      	cmp	r3, #105	; 0x69
 801c3e4:	d063      	beq.n	801c4ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801c3e6:	d825      	bhi.n	801c434 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801c3e8:	2b63      	cmp	r3, #99	; 0x63
 801c3ea:	d038      	beq.n	801c45e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801c3ec:	2b64      	cmp	r3, #100	; 0x64
 801c3ee:	d05e      	beq.n	801c4ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801c3f0:	2b58      	cmp	r3, #88	; 0x58
 801c3f2:	d07b      	beq.n	801c4ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801c3f4:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801c3f8:	4625      	mov	r5, r4
 801c3fa:	e036      	b.n	801c46a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c3fc:	2b73      	cmp	r3, #115	; 0x73
 801c3fe:	d0ec      	beq.n	801c3da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c400:	d802      	bhi.n	801c408 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801c402:	2b6f      	cmp	r3, #111	; 0x6f
 801c404:	d1cf      	bne.n	801c3a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801c406:	e7e8      	b.n	801c3da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c408:	2b75      	cmp	r3, #117	; 0x75
 801c40a:	d0e6      	beq.n	801c3da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801c40c:	2b78      	cmp	r3, #120	; 0x78
 801c40e:	e7f9      	b.n	801c404 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801c410:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c412:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801c416:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c418:	b10b      	cbz	r3, 801c41e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801c41a:	3302      	adds	r3, #2
 801c41c:	9309      	str	r3, [sp, #36]	; 0x24
 801c41e:	9b08      	ldr	r3, [sp, #32]
 801c420:	2b00      	cmp	r3, #0
 801c422:	f43f af2e 	beq.w	801c282 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c426:	3301      	adds	r3, #1
 801c428:	9308      	str	r3, [sp, #32]
 801c42a:	e72a      	b.n	801c282 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801c42c:	2a00      	cmp	r2, #0
 801c42e:	d0e1      	beq.n	801c3f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c430:	7813      	ldrb	r3, [r2, #0]
 801c432:	e7d6      	b.n	801c3e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801c434:	2b73      	cmp	r3, #115	; 0x73
 801c436:	d036      	beq.n	801c4a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801c438:	d807      	bhi.n	801c44a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801c43a:	2b6f      	cmp	r3, #111	; 0x6f
 801c43c:	d1da      	bne.n	801c3f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c43e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c440:	1d25      	adds	r5, r4, #4
 801c442:	eba8 0202 	sub.w	r2, r8, r2
 801c446:	2308      	movs	r3, #8
 801c448:	e04a      	b.n	801c4e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801c44a:	2b75      	cmp	r3, #117	; 0x75
 801c44c:	d043      	beq.n	801c4d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801c44e:	2b78      	cmp	r3, #120	; 0x78
 801c450:	d1d0      	bne.n	801c3f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801c452:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c454:	1d25      	adds	r5, r4, #4
 801c456:	eba8 0202 	sub.w	r2, r8, r2
 801c45a:	2310      	movs	r3, #16
 801c45c:	e040      	b.n	801c4e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801c45e:	7823      	ldrb	r3, [r4, #0]
 801c460:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801c464:	1d25      	adds	r5, r4, #4
 801c466:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801c46a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c46c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801c470:	2b00      	cmp	r3, #0
 801c472:	d052      	beq.n	801c51a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801c474:	881a      	ldrh	r2, [r3, #0]
 801c476:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801c47a:	a80d      	add	r0, sp, #52	; 0x34
 801c47c:	9005      	str	r0, [sp, #20]
 801c47e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801c482:	9004      	str	r0, [sp, #16]
 801c484:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c486:	9003      	str	r0, [sp, #12]
 801c488:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801c48c:	9002      	str	r0, [sp, #8]
 801c48e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c490:	9001      	str	r0, [sp, #4]
 801c492:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801c496:	9000      	str	r0, [sp, #0]
 801c498:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801c49c:	a810      	add	r0, sp, #64	; 0x40
 801c49e:	f7ff fd49 	bl	801bf34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801c4a2:	462c      	mov	r4, r5
 801c4a4:	e7b7      	b.n	801c416 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801c4a6:	6823      	ldr	r3, [r4, #0]
 801c4a8:	1d25      	adds	r5, r4, #4
 801c4aa:	9310      	str	r3, [sp, #64]	; 0x40
 801c4ac:	e7dd      	b.n	801c46a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c4ae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c4b0:	6820      	ldr	r0, [r4, #0]
 801c4b2:	eba8 0202 	sub.w	r2, r8, r2
 801c4b6:	230a      	movs	r3, #10
 801c4b8:	b292      	uxth	r2, r2
 801c4ba:	4649      	mov	r1, r9
 801c4bc:	f7ff fd08 	bl	801bed0 <_ZN8touchgfx7Unicode4itoaElPtti>
 801c4c0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801c4c4:	2b2d      	cmp	r3, #45	; 0x2d
 801c4c6:	f104 0504 	add.w	r5, r4, #4
 801c4ca:	d1ce      	bne.n	801c46a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c4cc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c4d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c4d2:	3302      	adds	r3, #2
 801c4d4:	e7e9      	b.n	801c4aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801c4d6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c4d8:	1d25      	adds	r5, r4, #4
 801c4da:	eba8 0202 	sub.w	r2, r8, r2
 801c4de:	230a      	movs	r3, #10
 801c4e0:	b292      	uxth	r2, r2
 801c4e2:	4649      	mov	r1, r9
 801c4e4:	6820      	ldr	r0, [r4, #0]
 801c4e6:	f7ff fcd5 	bl	801be94 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801c4ea:	e7be      	b.n	801c46a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c4ec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c4ee:	6820      	ldr	r0, [r4, #0]
 801c4f0:	eba8 0202 	sub.w	r2, r8, r2
 801c4f4:	b292      	uxth	r2, r2
 801c4f6:	2310      	movs	r3, #16
 801c4f8:	4649      	mov	r1, r9
 801c4fa:	f7ff fccb 	bl	801be94 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801c4fe:	1d25      	adds	r5, r4, #4
 801c500:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801c504:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801c508:	2b00      	cmp	r3, #0
 801c50a:	d0ae      	beq.n	801c46a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801c50c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801c510:	2919      	cmp	r1, #25
 801c512:	d8f7      	bhi.n	801c504 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801c514:	3b20      	subs	r3, #32
 801c516:	8013      	strh	r3, [r2, #0]
 801c518:	e7f4      	b.n	801c504 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801c51a:	9a08      	ldr	r2, [sp, #32]
 801c51c:	2a00      	cmp	r2, #0
 801c51e:	d0aa      	beq.n	801c476 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801c520:	7812      	ldrb	r2, [r2, #0]
 801c522:	e7a8      	b.n	801c476 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801c524:	2d00      	cmp	r5, #0
 801c526:	f43f af47 	beq.w	801c3b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801c52a:	782d      	ldrb	r5, [r5, #0]
 801c52c:	e744      	b.n	801c3b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801c52e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801c52e:	b507      	push	{r0, r1, r2, lr}
 801c530:	9300      	str	r3, [sp, #0]
 801c532:	4613      	mov	r3, r2
 801c534:	2200      	movs	r2, #0
 801c536:	f7ff fe90 	bl	801c25a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801c53a:	b003      	add	sp, #12
 801c53c:	f85d fb04 	ldr.w	pc, [sp], #4

0801c540 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801c540:	b40c      	push	{r2, r3}
 801c542:	b507      	push	{r0, r1, r2, lr}
 801c544:	ab04      	add	r3, sp, #16
 801c546:	f853 2b04 	ldr.w	r2, [r3], #4
 801c54a:	9301      	str	r3, [sp, #4]
 801c54c:	f7ff ffef 	bl	801c52e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801c550:	b003      	add	sp, #12
 801c552:	f85d eb04 	ldr.w	lr, [sp], #4
 801c556:	b002      	add	sp, #8
 801c558:	4770      	bx	lr
	...

0801c55c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801c55c:	4b01      	ldr	r3, [pc, #4]	; (801c564 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801c55e:	6018      	str	r0, [r3, #0]
 801c560:	4770      	bx	lr
 801c562:	bf00      	nop
 801c564:	2001e240 	.word	0x2001e240

0801c568 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801c568:	4b06      	ldr	r3, [pc, #24]	; (801c584 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801c56a:	881a      	ldrh	r2, [r3, #0]
 801c56c:	4282      	cmp	r2, r0
 801c56e:	d807      	bhi.n	801c580 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801c570:	4b05      	ldr	r3, [pc, #20]	; (801c588 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801c572:	881b      	ldrh	r3, [r3, #0]
 801c574:	4413      	add	r3, r2
 801c576:	4298      	cmp	r0, r3
 801c578:	bfac      	ite	ge
 801c57a:	2000      	movge	r0, #0
 801c57c:	2001      	movlt	r0, #1
 801c57e:	4770      	bx	lr
 801c580:	2000      	movs	r0, #0
 801c582:	4770      	bx	lr
 801c584:	2001e260 	.word	0x2001e260
 801c588:	2001e264 	.word	0x2001e264

0801c58c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801c58c:	b508      	push	{r3, lr}
 801c58e:	4601      	mov	r1, r0
 801c590:	f7ff ffea 	bl	801c568 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801c594:	b118      	cbz	r0, 801c59e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801c596:	4b02      	ldr	r3, [pc, #8]	; (801c5a0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801c598:	681b      	ldr	r3, [r3, #0]
 801c59a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801c59e:	bd08      	pop	{r3, pc}
 801c5a0:	2001e244 	.word	0x2001e244

0801c5a4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801c5a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c5a6:	4c24      	ldr	r4, [pc, #144]	; (801c638 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801c5a8:	6823      	ldr	r3, [r4, #0]
 801c5aa:	2b00      	cmp	r3, #0
 801c5ac:	d042      	beq.n	801c634 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c5ae:	4a23      	ldr	r2, [pc, #140]	; (801c63c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801c5b0:	4d23      	ldr	r5, [pc, #140]	; (801c640 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801c5b2:	8811      	ldrh	r1, [r2, #0]
 801c5b4:	f8b5 c000 	ldrh.w	ip, [r5]
 801c5b8:	4822      	ldr	r0, [pc, #136]	; (801c644 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801c5ba:	4461      	add	r1, ip
 801c5bc:	1c4a      	adds	r2, r1, #1
 801c5be:	f022 0201 	bic.w	r2, r2, #1
 801c5c2:	008f      	lsls	r7, r1, #2
 801c5c4:	0412      	lsls	r2, r2, #16
 801c5c6:	19de      	adds	r6, r3, r7
 801c5c8:	0c12      	lsrs	r2, r2, #16
 801c5ca:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801c5ce:	6006      	str	r6, [r0, #0]
 801c5d0:	4e1d      	ldr	r6, [pc, #116]	; (801c648 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801c5d2:	19da      	adds	r2, r3, r7
 801c5d4:	6032      	str	r2, [r6, #0]
 801c5d6:	220e      	movs	r2, #14
 801c5d8:	fb02 f20c 	mul.w	r2, r2, ip
 801c5dc:	3203      	adds	r2, #3
 801c5de:	f022 0203 	bic.w	r2, r2, #3
 801c5e2:	443a      	add	r2, r7
 801c5e4:	4f19      	ldr	r7, [pc, #100]	; (801c64c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801c5e6:	4413      	add	r3, r2
 801c5e8:	603b      	str	r3, [r7, #0]
 801c5ea:	4f19      	ldr	r7, [pc, #100]	; (801c650 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801c5ec:	2300      	movs	r3, #0
 801c5ee:	803b      	strh	r3, [r7, #0]
 801c5f0:	4f18      	ldr	r7, [pc, #96]	; (801c654 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801c5f2:	683f      	ldr	r7, [r7, #0]
 801c5f4:	1aba      	subs	r2, r7, r2
 801c5f6:	4f18      	ldr	r7, [pc, #96]	; (801c658 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c5f8:	603a      	str	r2, [r7, #0]
 801c5fa:	4a18      	ldr	r2, [pc, #96]	; (801c65c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c5fc:	469c      	mov	ip, r3
 801c5fe:	8013      	strh	r3, [r2, #0]
 801c600:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c604:	428b      	cmp	r3, r1
 801c606:	d10d      	bne.n	801c624 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c608:	882d      	ldrh	r5, [r5, #0]
 801c60a:	6830      	ldr	r0, [r6, #0]
 801c60c:	2300      	movs	r3, #0
 801c60e:	240e      	movs	r4, #14
 801c610:	429d      	cmp	r5, r3
 801c612:	d90f      	bls.n	801c634 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c614:	fb04 0203 	mla	r2, r4, r3, r0
 801c618:	3301      	adds	r3, #1
 801c61a:	7b11      	ldrb	r1, [r2, #12]
 801c61c:	f36f 1145 	bfc	r1, #5, #1
 801c620:	7311      	strb	r1, [r2, #12]
 801c622:	e7f5      	b.n	801c610 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c624:	6822      	ldr	r2, [r4, #0]
 801c626:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c62a:	6802      	ldr	r2, [r0, #0]
 801c62c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c630:	3301      	adds	r3, #1
 801c632:	e7e7      	b.n	801c604 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c634:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c636:	bf00      	nop
 801c638:	2001e244 	.word	0x2001e244
 801c63c:	2001e260 	.word	0x2001e260
 801c640:	2001e264 	.word	0x2001e264
 801c644:	2001e258 	.word	0x2001e258
 801c648:	2001e248 	.word	0x2001e248
 801c64c:	2001e250 	.word	0x2001e250
 801c650:	2001e262 	.word	0x2001e262
 801c654:	2001e24c 	.word	0x2001e24c
 801c658:	2001e25c 	.word	0x2001e25c
 801c65c:	2001e254 	.word	0x2001e254

0801c660 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c660:	b510      	push	{r4, lr}
 801c662:	4b10      	ldr	r3, [pc, #64]	; (801c6a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 801c664:	681b      	ldr	r3, [r3, #0]
 801c666:	b9db      	cbnz	r3, 801c6a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801c668:	b1d1      	cbz	r1, 801c6a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801c66a:	4b0f      	ldr	r3, [pc, #60]	; (801c6a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 801c66c:	801a      	strh	r2, [r3, #0]
 801c66e:	4b0f      	ldr	r3, [pc, #60]	; (801c6ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 801c670:	881b      	ldrh	r3, [r3, #0]
 801c672:	b292      	uxth	r2, r2
 801c674:	240e      	movs	r4, #14
 801c676:	4413      	add	r3, r2
 801c678:	4362      	muls	r2, r4
 801c67a:	2406      	movs	r4, #6
 801c67c:	fb04 2203 	mla	r2, r4, r3, r2
 801c680:	428a      	cmp	r2, r1
 801c682:	d305      	bcc.n	801c690 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 801c684:	4b0a      	ldr	r3, [pc, #40]	; (801c6b0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 801c686:	4a0b      	ldr	r2, [pc, #44]	; (801c6b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 801c688:	480b      	ldr	r0, [pc, #44]	; (801c6b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 801c68a:	2134      	movs	r1, #52	; 0x34
 801c68c:	f00f fcb2 	bl	802bff4 <__assert_func>
 801c690:	4b0a      	ldr	r3, [pc, #40]	; (801c6bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 801c692:	6019      	str	r1, [r3, #0]
 801c694:	4b0a      	ldr	r3, [pc, #40]	; (801c6c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 801c696:	6018      	str	r0, [r3, #0]
 801c698:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c69c:	f7ff bf82 	b.w	801c5a4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c6a0:	bd10      	pop	{r4, pc}
 801c6a2:	bf00      	nop
 801c6a4:	2001e250 	.word	0x2001e250
 801c6a8:	2001e264 	.word	0x2001e264
 801c6ac:	2001e260 	.word	0x2001e260
 801c6b0:	0803570e 	.word	0x0803570e
 801c6b4:	08035767 	.word	0x08035767
 801c6b8:	080356e9 	.word	0x080356e9
 801c6bc:	2001e24c 	.word	0x2001e24c
 801c6c0:	2001e244 	.word	0x2001e244

0801c6c4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c6c4:	b470      	push	{r4, r5, r6}
 801c6c6:	4c07      	ldr	r4, [pc, #28]	; (801c6e4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c6c8:	6826      	ldr	r6, [r4, #0]
 801c6ca:	4605      	mov	r5, r0
 801c6cc:	4610      	mov	r0, r2
 801c6ce:	9a03      	ldr	r2, [sp, #12]
 801c6d0:	b936      	cbnz	r6, 801c6e0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c6d2:	6025      	str	r5, [r4, #0]
 801c6d4:	4c04      	ldr	r4, [pc, #16]	; (801c6e8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c6d6:	8021      	strh	r1, [r4, #0]
 801c6d8:	bc70      	pop	{r4, r5, r6}
 801c6da:	4619      	mov	r1, r3
 801c6dc:	f7ff bfc0 	b.w	801c660 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c6e0:	bc70      	pop	{r4, r5, r6}
 801c6e2:	4770      	bx	lr
 801c6e4:	2001e268 	.word	0x2001e268
 801c6e8:	2001e260 	.word	0x2001e260

0801c6ec <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c6ec:	b508      	push	{r3, lr}
 801c6ee:	4b17      	ldr	r3, [pc, #92]	; (801c74c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c6f0:	6819      	ldr	r1, [r3, #0]
 801c6f2:	b931      	cbnz	r1, 801c702 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 801c6f4:	4b16      	ldr	r3, [pc, #88]	; (801c750 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c6f6:	4a17      	ldr	r2, [pc, #92]	; (801c754 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 801c6f8:	4817      	ldr	r0, [pc, #92]	; (801c758 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 801c6fa:	f240 4184 	movw	r1, #1156	; 0x484
 801c6fe:	f00f fc79 	bl	802bff4 <__assert_func>
 801c702:	4a16      	ldr	r2, [pc, #88]	; (801c75c <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 801c704:	8803      	ldrh	r3, [r0, #0]
 801c706:	8812      	ldrh	r2, [r2, #0]
 801c708:	4293      	cmp	r3, r2
 801c70a:	d204      	bcs.n	801c716 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 801c70c:	2214      	movs	r2, #20
 801c70e:	fb02 1303 	mla	r3, r2, r3, r1
 801c712:	8918      	ldrh	r0, [r3, #8]
 801c714:	bd08      	pop	{r3, pc}
 801c716:	4912      	ldr	r1, [pc, #72]	; (801c760 <_ZNK8touchgfx6Bitmap8getWidthEv+0x74>)
 801c718:	8809      	ldrh	r1, [r1, #0]
 801c71a:	4411      	add	r1, r2
 801c71c:	428b      	cmp	r3, r1
 801c71e:	da06      	bge.n	801c72e <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 801c720:	1a9b      	subs	r3, r3, r2
 801c722:	4a10      	ldr	r2, [pc, #64]	; (801c764 <_ZNK8touchgfx6Bitmap8getWidthEv+0x78>)
 801c724:	6812      	ldr	r2, [r2, #0]
 801c726:	210e      	movs	r1, #14
 801c728:	fb01 2303 	mla	r3, r1, r3, r2
 801c72c:	e7f1      	b.n	801c712 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 801c72e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c732:	4293      	cmp	r3, r2
 801c734:	d107      	bne.n	801c746 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5a>
 801c736:	4b0c      	ldr	r3, [pc, #48]	; (801c768 <_ZNK8touchgfx6Bitmap8getWidthEv+0x7c>)
 801c738:	781b      	ldrb	r3, [r3, #0]
 801c73a:	b913      	cbnz	r3, 801c742 <_ZNK8touchgfx6Bitmap8getWidthEv+0x56>
 801c73c:	4b0b      	ldr	r3, [pc, #44]	; (801c76c <_ZNK8touchgfx6Bitmap8getWidthEv+0x80>)
 801c73e:	8818      	ldrh	r0, [r3, #0]
 801c740:	e7e8      	b.n	801c714 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 801c742:	4b0b      	ldr	r3, [pc, #44]	; (801c770 <_ZNK8touchgfx6Bitmap8getWidthEv+0x84>)
 801c744:	e7fb      	b.n	801c73e <_ZNK8touchgfx6Bitmap8getWidthEv+0x52>
 801c746:	2000      	movs	r0, #0
 801c748:	e7e4      	b.n	801c714 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 801c74a:	bf00      	nop
 801c74c:	2001e268 	.word	0x2001e268
 801c750:	08033c04 	.word	0x08033c04
 801c754:	08035814 	.word	0x08035814
 801c758:	080356e9 	.word	0x080356e9
 801c75c:	2001e260 	.word	0x2001e260
 801c760:	2001e264 	.word	0x2001e264
 801c764:	2001e248 	.word	0x2001e248
 801c768:	2001e1b8 	.word	0x2001e1b8
 801c76c:	2001e1ba 	.word	0x2001e1ba
 801c770:	2001e1bc 	.word	0x2001e1bc

0801c774 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c774:	b508      	push	{r3, lr}
 801c776:	4b17      	ldr	r3, [pc, #92]	; (801c7d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c778:	6819      	ldr	r1, [r3, #0]
 801c77a:	b931      	cbnz	r1, 801c78a <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 801c77c:	4b16      	ldr	r3, [pc, #88]	; (801c7d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c77e:	4a17      	ldr	r2, [pc, #92]	; (801c7dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 801c780:	4817      	ldr	r0, [pc, #92]	; (801c7e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 801c782:	f44f 6193 	mov.w	r1, #1176	; 0x498
 801c786:	f00f fc35 	bl	802bff4 <__assert_func>
 801c78a:	4a16      	ldr	r2, [pc, #88]	; (801c7e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 801c78c:	8803      	ldrh	r3, [r0, #0]
 801c78e:	8812      	ldrh	r2, [r2, #0]
 801c790:	4293      	cmp	r3, r2
 801c792:	d204      	bcs.n	801c79e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 801c794:	2214      	movs	r2, #20
 801c796:	fb02 1303 	mla	r3, r2, r3, r1
 801c79a:	8958      	ldrh	r0, [r3, #10]
 801c79c:	bd08      	pop	{r3, pc}
 801c79e:	4912      	ldr	r1, [pc, #72]	; (801c7e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x74>)
 801c7a0:	8809      	ldrh	r1, [r1, #0]
 801c7a2:	4411      	add	r1, r2
 801c7a4:	428b      	cmp	r3, r1
 801c7a6:	da06      	bge.n	801c7b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 801c7a8:	1a9b      	subs	r3, r3, r2
 801c7aa:	4a10      	ldr	r2, [pc, #64]	; (801c7ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x78>)
 801c7ac:	6812      	ldr	r2, [r2, #0]
 801c7ae:	210e      	movs	r1, #14
 801c7b0:	fb01 2303 	mla	r3, r1, r3, r2
 801c7b4:	e7f1      	b.n	801c79a <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 801c7b6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c7ba:	4293      	cmp	r3, r2
 801c7bc:	d107      	bne.n	801c7ce <_ZNK8touchgfx6Bitmap9getHeightEv+0x5a>
 801c7be:	4b0c      	ldr	r3, [pc, #48]	; (801c7f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x7c>)
 801c7c0:	781b      	ldrb	r3, [r3, #0]
 801c7c2:	b913      	cbnz	r3, 801c7ca <_ZNK8touchgfx6Bitmap9getHeightEv+0x56>
 801c7c4:	4b0b      	ldr	r3, [pc, #44]	; (801c7f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x80>)
 801c7c6:	8818      	ldrh	r0, [r3, #0]
 801c7c8:	e7e8      	b.n	801c79c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 801c7ca:	4b0b      	ldr	r3, [pc, #44]	; (801c7f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x84>)
 801c7cc:	e7fb      	b.n	801c7c6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x52>
 801c7ce:	2000      	movs	r0, #0
 801c7d0:	e7e4      	b.n	801c79c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 801c7d2:	bf00      	nop
 801c7d4:	2001e268 	.word	0x2001e268
 801c7d8:	08033c04 	.word	0x08033c04
 801c7dc:	08035840 	.word	0x08035840
 801c7e0:	080356e9 	.word	0x080356e9
 801c7e4:	2001e260 	.word	0x2001e260
 801c7e8:	2001e264 	.word	0x2001e264
 801c7ec:	2001e248 	.word	0x2001e248
 801c7f0:	2001e1b8 	.word	0x2001e1b8
 801c7f4:	2001e1bc 	.word	0x2001e1bc
 801c7f8:	2001e1ba 	.word	0x2001e1ba

0801c7fc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c7fc:	b510      	push	{r4, lr}
 801c7fe:	4b23      	ldr	r3, [pc, #140]	; (801c88c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801c800:	681c      	ldr	r4, [r3, #0]
 801c802:	b934      	cbnz	r4, 801c812 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 801c804:	4b22      	ldr	r3, [pc, #136]	; (801c890 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801c806:	4a23      	ldr	r2, [pc, #140]	; (801c894 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801c808:	4823      	ldr	r0, [pc, #140]	; (801c898 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801c80a:	f240 41ac 	movw	r1, #1196	; 0x4ac
 801c80e:	f00f fbf1 	bl	802bff4 <__assert_func>
 801c812:	4a22      	ldr	r2, [pc, #136]	; (801c89c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801c814:	880b      	ldrh	r3, [r1, #0]
 801c816:	8812      	ldrh	r2, [r2, #0]
 801c818:	4293      	cmp	r3, r2
 801c81a:	d211      	bcs.n	801c840 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 801c81c:	2214      	movs	r2, #20
 801c81e:	fb02 4303 	mla	r3, r2, r3, r4
 801c822:	8a1a      	ldrh	r2, [r3, #16]
 801c824:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801c828:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801c82c:	8a5b      	ldrh	r3, [r3, #18]
 801c82e:	8004      	strh	r4, [r0, #0]
 801c830:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c834:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801c838:	8041      	strh	r1, [r0, #2]
 801c83a:	8082      	strh	r2, [r0, #4]
 801c83c:	80c3      	strh	r3, [r0, #6]
 801c83e:	e00e      	b.n	801c85e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801c840:	4917      	ldr	r1, [pc, #92]	; (801c8a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 801c842:	8809      	ldrh	r1, [r1, #0]
 801c844:	4411      	add	r1, r2
 801c846:	428b      	cmp	r3, r1
 801c848:	da0a      	bge.n	801c860 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 801c84a:	1a9b      	subs	r3, r3, r2
 801c84c:	4a15      	ldr	r2, [pc, #84]	; (801c8a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 801c84e:	6812      	ldr	r2, [r2, #0]
 801c850:	210e      	movs	r1, #14
 801c852:	fb01 2303 	mla	r3, r1, r3, r2
 801c856:	681a      	ldr	r2, [r3, #0]
 801c858:	6002      	str	r2, [r0, #0]
 801c85a:	685a      	ldr	r2, [r3, #4]
 801c85c:	6042      	str	r2, [r0, #4]
 801c85e:	bd10      	pop	{r4, pc}
 801c860:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c864:	4293      	cmp	r3, r2
 801c866:	d10b      	bne.n	801c880 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 801c868:	4b0f      	ldr	r3, [pc, #60]	; (801c8a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 801c86a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c86e:	4b0f      	ldr	r3, [pc, #60]	; (801c8ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 801c870:	8081      	strh	r1, [r0, #4]
 801c872:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c876:	80c2      	strh	r2, [r0, #6]
 801c878:	2300      	movs	r3, #0
 801c87a:	8003      	strh	r3, [r0, #0]
 801c87c:	8043      	strh	r3, [r0, #2]
 801c87e:	e7ee      	b.n	801c85e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801c880:	2300      	movs	r3, #0
 801c882:	8003      	strh	r3, [r0, #0]
 801c884:	8043      	strh	r3, [r0, #2]
 801c886:	8083      	strh	r3, [r0, #4]
 801c888:	e7d8      	b.n	801c83c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 801c88a:	bf00      	nop
 801c88c:	2001e268 	.word	0x2001e268
 801c890:	08033c04 	.word	0x08033c04
 801c894:	080357ad 	.word	0x080357ad
 801c898:	080356e9 	.word	0x080356e9
 801c89c:	2001e260 	.word	0x2001e260
 801c8a0:	2001e264 	.word	0x2001e264
 801c8a4:	2001e248 	.word	0x2001e248
 801c8a8:	2001e1b4 	.word	0x2001e1b4
 801c8ac:	2001e1b6 	.word	0x2001e1b6

0801c8b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801c8b0:	4b18      	ldr	r3, [pc, #96]	; (801c914 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801c8b2:	681b      	ldr	r3, [r3, #0]
 801c8b4:	b34b      	cbz	r3, 801c90a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801c8b6:	4a18      	ldr	r2, [pc, #96]	; (801c918 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801c8b8:	8800      	ldrh	r0, [r0, #0]
 801c8ba:	8812      	ldrh	r2, [r2, #0]
 801c8bc:	4290      	cmp	r0, r2
 801c8be:	d211      	bcs.n	801c8e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 801c8c0:	2214      	movs	r2, #20
 801c8c2:	fb02 3300 	mla	r3, r2, r0, r3
 801c8c6:	8a1a      	ldrh	r2, [r3, #16]
 801c8c8:	8919      	ldrh	r1, [r3, #8]
 801c8ca:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c8ce:	428a      	cmp	r2, r1
 801c8d0:	db1d      	blt.n	801c90e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801c8d2:	8a58      	ldrh	r0, [r3, #18]
 801c8d4:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801c8d8:	895b      	ldrh	r3, [r3, #10]
 801c8da:	4298      	cmp	r0, r3
 801c8dc:	bfac      	ite	ge
 801c8de:	2000      	movge	r0, #0
 801c8e0:	2001      	movlt	r0, #1
 801c8e2:	4770      	bx	lr
 801c8e4:	4b0d      	ldr	r3, [pc, #52]	; (801c91c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801c8e6:	881b      	ldrh	r3, [r3, #0]
 801c8e8:	4413      	add	r3, r2
 801c8ea:	4298      	cmp	r0, r3
 801c8ec:	da0d      	bge.n	801c90a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801c8ee:	4b0c      	ldr	r3, [pc, #48]	; (801c920 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 801c8f0:	681b      	ldr	r3, [r3, #0]
 801c8f2:	1a80      	subs	r0, r0, r2
 801c8f4:	220e      	movs	r2, #14
 801c8f6:	fb02 3300 	mla	r3, r2, r0, r3
 801c8fa:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801c8fe:	891a      	ldrh	r2, [r3, #8]
 801c900:	4291      	cmp	r1, r2
 801c902:	db04      	blt.n	801c90e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801c904:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801c908:	e7e6      	b.n	801c8d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 801c90a:	2000      	movs	r0, #0
 801c90c:	4770      	bx	lr
 801c90e:	2001      	movs	r0, #1
 801c910:	4770      	bx	lr
 801c912:	bf00      	nop
 801c914:	2001e268 	.word	0x2001e268
 801c918:	2001e260 	.word	0x2001e260
 801c91c:	2001e264 	.word	0x2001e264
 801c920:	2001e248 	.word	0x2001e248

0801c924 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801c924:	b508      	push	{r3, lr}
 801c926:	4b12      	ldr	r3, [pc, #72]	; (801c970 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801c928:	6819      	ldr	r1, [r3, #0]
 801c92a:	b931      	cbnz	r1, 801c93a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801c92c:	4b11      	ldr	r3, [pc, #68]	; (801c974 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c92e:	4a12      	ldr	r2, [pc, #72]	; (801c978 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801c930:	4812      	ldr	r0, [pc, #72]	; (801c97c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801c932:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 801c936:	f00f fb5d 	bl	802bff4 <__assert_func>
 801c93a:	8803      	ldrh	r3, [r0, #0]
 801c93c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801c940:	4293      	cmp	r3, r2
 801c942:	d012      	beq.n	801c96a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801c944:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c948:	4293      	cmp	r3, r2
 801c94a:	d103      	bne.n	801c954 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 801c94c:	4b0c      	ldr	r3, [pc, #48]	; (801c980 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801c94e:	681b      	ldr	r3, [r3, #0]
 801c950:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801c952:	bd08      	pop	{r3, pc}
 801c954:	4a0b      	ldr	r2, [pc, #44]	; (801c984 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 801c956:	6812      	ldr	r2, [r2, #0]
 801c958:	b11a      	cbz	r2, 801c962 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 801c95a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c95e:	2800      	cmp	r0, #0
 801c960:	d1f7      	bne.n	801c952 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801c962:	2214      	movs	r2, #20
 801c964:	4353      	muls	r3, r2
 801c966:	58c8      	ldr	r0, [r1, r3]
 801c968:	e7f3      	b.n	801c952 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801c96a:	2000      	movs	r0, #0
 801c96c:	e7f1      	b.n	801c952 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801c96e:	bf00      	nop
 801c970:	2001e268 	.word	0x2001e268
 801c974:	08033c04 	.word	0x08033c04
 801c978:	080357e3 	.word	0x080357e3
 801c97c:	080356e9 	.word	0x080356e9
 801c980:	2001e1c0 	.word	0x2001e1c0
 801c984:	2001e244 	.word	0x2001e244

0801c988 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801c988:	8802      	ldrh	r2, [r0, #0]
 801c98a:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 801c98e:	429a      	cmp	r2, r3
 801c990:	d845      	bhi.n	801ca1e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801c992:	4b24      	ldr	r3, [pc, #144]	; (801ca24 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c994:	8818      	ldrh	r0, [r3, #0]
 801c996:	4282      	cmp	r2, r0
 801c998:	d221      	bcs.n	801c9de <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 801c99a:	4b23      	ldr	r3, [pc, #140]	; (801ca28 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801c99c:	6819      	ldr	r1, [r3, #0]
 801c99e:	2314      	movs	r3, #20
 801c9a0:	fb03 1302 	mla	r3, r3, r2, r1
 801c9a4:	6858      	ldr	r0, [r3, #4]
 801c9a6:	2800      	cmp	r0, #0
 801c9a8:	d03a      	beq.n	801ca20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801c9aa:	4920      	ldr	r1, [pc, #128]	; (801ca2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801c9ac:	6809      	ldr	r1, [r1, #0]
 801c9ae:	2900      	cmp	r1, #0
 801c9b0:	d036      	beq.n	801ca20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801c9b2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801c9b6:	2900      	cmp	r1, #0
 801c9b8:	d032      	beq.n	801ca20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801c9ba:	891a      	ldrh	r2, [r3, #8]
 801c9bc:	8958      	ldrh	r0, [r3, #10]
 801c9be:	4350      	muls	r0, r2
 801c9c0:	7c5a      	ldrb	r2, [r3, #17]
 801c9c2:	7cdb      	ldrb	r3, [r3, #19]
 801c9c4:	0952      	lsrs	r2, r2, #5
 801c9c6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801c9ca:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801c9ce:	2b0b      	cmp	r3, #11
 801c9d0:	bf18      	it	ne
 801c9d2:	0040      	lslne	r0, r0, #1
 801c9d4:	3003      	adds	r0, #3
 801c9d6:	f020 0003 	bic.w	r0, r0, #3
 801c9da:	4408      	add	r0, r1
 801c9dc:	4770      	bx	lr
 801c9de:	4b14      	ldr	r3, [pc, #80]	; (801ca30 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 801c9e0:	881b      	ldrh	r3, [r3, #0]
 801c9e2:	4403      	add	r3, r0
 801c9e4:	429a      	cmp	r2, r3
 801c9e6:	da1a      	bge.n	801ca1e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801c9e8:	4b12      	ldr	r3, [pc, #72]	; (801ca34 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 801c9ea:	681b      	ldr	r3, [r3, #0]
 801c9ec:	1a10      	subs	r0, r2, r0
 801c9ee:	210e      	movs	r1, #14
 801c9f0:	fb01 3000 	mla	r0, r1, r0, r3
 801c9f4:	7b03      	ldrb	r3, [r0, #12]
 801c9f6:	f003 031f 	and.w	r3, r3, #31
 801c9fa:	2b0b      	cmp	r3, #11
 801c9fc:	d10b      	bne.n	801ca16 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c9fe:	8903      	ldrh	r3, [r0, #8]
 801ca00:	8940      	ldrh	r0, [r0, #10]
 801ca02:	4358      	muls	r0, r3
 801ca04:	4b09      	ldr	r3, [pc, #36]	; (801ca2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801ca06:	6819      	ldr	r1, [r3, #0]
 801ca08:	3003      	adds	r0, #3
 801ca0a:	f020 0303 	bic.w	r3, r0, #3
 801ca0e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801ca12:	4418      	add	r0, r3
 801ca14:	4770      	bx	lr
 801ca16:	2b0d      	cmp	r3, #13
 801ca18:	d101      	bne.n	801ca1e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801ca1a:	300d      	adds	r0, #13
 801ca1c:	4770      	bx	lr
 801ca1e:	2000      	movs	r0, #0
 801ca20:	4770      	bx	lr
 801ca22:	bf00      	nop
 801ca24:	2001e260 	.word	0x2001e260
 801ca28:	2001e268 	.word	0x2001e268
 801ca2c:	2001e244 	.word	0x2001e244
 801ca30:	2001e264 	.word	0x2001e264
 801ca34:	2001e248 	.word	0x2001e248

0801ca38 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801ca38:	b510      	push	{r4, lr}
 801ca3a:	4b17      	ldr	r3, [pc, #92]	; (801ca98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801ca3c:	6819      	ldr	r1, [r3, #0]
 801ca3e:	8803      	ldrh	r3, [r0, #0]
 801ca40:	b1e9      	cbz	r1, 801ca7e <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 801ca42:	4a16      	ldr	r2, [pc, #88]	; (801ca9c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801ca44:	8812      	ldrh	r2, [r2, #0]
 801ca46:	429a      	cmp	r2, r3
 801ca48:	d90a      	bls.n	801ca60 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 801ca4a:	2214      	movs	r2, #20
 801ca4c:	fb02 1303 	mla	r3, r2, r3, r1
 801ca50:	7c58      	ldrb	r0, [r3, #17]
 801ca52:	0942      	lsrs	r2, r0, #5
 801ca54:	7cd8      	ldrb	r0, [r3, #19]
 801ca56:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801ca5a:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801ca5e:	bd10      	pop	{r4, pc}
 801ca60:	490f      	ldr	r1, [pc, #60]	; (801caa0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801ca62:	8809      	ldrh	r1, [r1, #0]
 801ca64:	4411      	add	r1, r2
 801ca66:	428b      	cmp	r3, r1
 801ca68:	da09      	bge.n	801ca7e <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 801ca6a:	1a9b      	subs	r3, r3, r2
 801ca6c:	4a0d      	ldr	r2, [pc, #52]	; (801caa4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801ca6e:	6812      	ldr	r2, [r2, #0]
 801ca70:	210e      	movs	r1, #14
 801ca72:	fb01 2303 	mla	r3, r1, r3, r2
 801ca76:	7b18      	ldrb	r0, [r3, #12]
 801ca78:	f000 001f 	and.w	r0, r0, #31
 801ca7c:	e7ef      	b.n	801ca5e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801ca7e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801ca82:	4293      	cmp	r3, r2
 801ca84:	d106      	bne.n	801ca94 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 801ca86:	f7f5 fe13 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 801ca8a:	6803      	ldr	r3, [r0, #0]
 801ca8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ca90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ca92:	4718      	bx	r3
 801ca94:	2000      	movs	r0, #0
 801ca96:	e7e2      	b.n	801ca5e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801ca98:	2001e268 	.word	0x2001e268
 801ca9c:	2001e260 	.word	0x2001e260
 801caa0:	2001e264 	.word	0x2001e264
 801caa4:	2001e248 	.word	0x2001e248

0801caa8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801caa8:	2010      	movs	r0, #16
 801caaa:	4770      	bx	lr

0801caac <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801caac:	2000      	movs	r0, #0
 801caae:	4770      	bx	lr

0801cab0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801cab0:	2bff      	cmp	r3, #255	; 0xff
 801cab2:	d050      	beq.n	801cb56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801cab4:	2a0b      	cmp	r2, #11
 801cab6:	d04a      	beq.n	801cb4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801cab8:	d80e      	bhi.n	801cad8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801caba:	2a03      	cmp	r2, #3
 801cabc:	d03f      	beq.n	801cb3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801cabe:	d804      	bhi.n	801caca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801cac0:	2a01      	cmp	r2, #1
 801cac2:	d03e      	beq.n	801cb42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801cac4:	d93f      	bls.n	801cb46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801cac6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801cac8:	4770      	bx	lr
 801caca:	2a09      	cmp	r2, #9
 801cacc:	d03f      	beq.n	801cb4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801cace:	d83c      	bhi.n	801cb4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801cad0:	2a08      	cmp	r2, #8
 801cad2:	d03a      	beq.n	801cb4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801cad4:	2000      	movs	r0, #0
 801cad6:	4770      	bx	lr
 801cad8:	2a2f      	cmp	r2, #47	; 0x2f
 801cada:	d024      	beq.n	801cb26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801cadc:	d80d      	bhi.n	801cafa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801cade:	2a2d      	cmp	r2, #45	; 0x2d
 801cae0:	d014      	beq.n	801cb0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801cae2:	d826      	bhi.n	801cb32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801cae4:	2a2c      	cmp	r2, #44	; 0x2c
 801cae6:	d1f5      	bne.n	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cae8:	684b      	ldr	r3, [r1, #4]
 801caea:	781b      	ldrb	r3, [r3, #0]
 801caec:	2b01      	cmp	r3, #1
 801caee:	d018      	beq.n	801cb22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801caf0:	d323      	bcc.n	801cb3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801caf2:	2b02      	cmp	r3, #2
 801caf4:	d1ee      	bne.n	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801caf6:	6880      	ldr	r0, [r0, #8]
 801caf8:	4770      	bx	lr
 801cafa:	2a31      	cmp	r2, #49	; 0x31
 801cafc:	d004      	beq.n	801cb08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801cafe:	d328      	bcc.n	801cb52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801cb00:	2a32      	cmp	r2, #50	; 0x32
 801cb02:	d026      	beq.n	801cb52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801cb04:	2a33      	cmp	r2, #51	; 0x33
 801cb06:	d1e5      	bne.n	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb08:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801cb0a:	4770      	bx	lr
 801cb0c:	684b      	ldr	r3, [r1, #4]
 801cb0e:	781b      	ldrb	r3, [r3, #0]
 801cb10:	2b01      	cmp	r3, #1
 801cb12:	d004      	beq.n	801cb1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801cb14:	d30b      	bcc.n	801cb2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801cb16:	2b02      	cmp	r3, #2
 801cb18:	d1dc      	bne.n	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb1a:	6900      	ldr	r0, [r0, #16]
 801cb1c:	4770      	bx	lr
 801cb1e:	6a00      	ldr	r0, [r0, #32]
 801cb20:	4770      	bx	lr
 801cb22:	6980      	ldr	r0, [r0, #24]
 801cb24:	4770      	bx	lr
 801cb26:	684b      	ldr	r3, [r1, #4]
 801cb28:	781b      	ldrb	r3, [r3, #0]
 801cb2a:	2b00      	cmp	r3, #0
 801cb2c:	d1d2      	bne.n	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb2e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801cb30:	4770      	bx	lr
 801cb32:	684b      	ldr	r3, [r1, #4]
 801cb34:	781b      	ldrb	r3, [r3, #0]
 801cb36:	2b00      	cmp	r3, #0
 801cb38:	d1cc      	bne.n	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb3a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801cb3c:	4770      	bx	lr
 801cb3e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801cb40:	4770      	bx	lr
 801cb42:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801cb44:	4770      	bx	lr
 801cb46:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801cb48:	4770      	bx	lr
 801cb4a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801cb4c:	4770      	bx	lr
 801cb4e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801cb50:	4770      	bx	lr
 801cb52:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801cb54:	4770      	bx	lr
 801cb56:	2a0b      	cmp	r2, #11
 801cb58:	d049      	beq.n	801cbee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801cb5a:	d80e      	bhi.n	801cb7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801cb5c:	2a03      	cmp	r2, #3
 801cb5e:	d040      	beq.n	801cbe2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801cb60:	d804      	bhi.n	801cb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801cb62:	2a01      	cmp	r2, #1
 801cb64:	d03f      	beq.n	801cbe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801cb66:	d940      	bls.n	801cbea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801cb68:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801cb6a:	4770      	bx	lr
 801cb6c:	2a09      	cmp	r2, #9
 801cb6e:	d03e      	beq.n	801cbee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801cb70:	d801      	bhi.n	801cb76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801cb72:	2a08      	cmp	r2, #8
 801cb74:	d1ae      	bne.n	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb76:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801cb78:	4770      	bx	lr
 801cb7a:	2a2f      	cmp	r2, #47	; 0x2f
 801cb7c:	d024      	beq.n	801cbc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801cb7e:	d80d      	bhi.n	801cb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801cb80:	2a2d      	cmp	r2, #45	; 0x2d
 801cb82:	d014      	beq.n	801cbae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801cb84:	d826      	bhi.n	801cbd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801cb86:	2a2c      	cmp	r2, #44	; 0x2c
 801cb88:	d1a4      	bne.n	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb8a:	684b      	ldr	r3, [r1, #4]
 801cb8c:	781b      	ldrb	r3, [r3, #0]
 801cb8e:	2b01      	cmp	r3, #1
 801cb90:	d018      	beq.n	801cbc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801cb92:	d324      	bcc.n	801cbde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801cb94:	2b02      	cmp	r3, #2
 801cb96:	d19d      	bne.n	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cb98:	68c0      	ldr	r0, [r0, #12]
 801cb9a:	4770      	bx	lr
 801cb9c:	2a31      	cmp	r2, #49	; 0x31
 801cb9e:	d004      	beq.n	801cbaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801cba0:	d327      	bcc.n	801cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801cba2:	2a32      	cmp	r2, #50	; 0x32
 801cba4:	d025      	beq.n	801cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801cba6:	2a33      	cmp	r2, #51	; 0x33
 801cba8:	d194      	bne.n	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cbaa:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801cbac:	4770      	bx	lr
 801cbae:	684b      	ldr	r3, [r1, #4]
 801cbb0:	781b      	ldrb	r3, [r3, #0]
 801cbb2:	2b01      	cmp	r3, #1
 801cbb4:	d004      	beq.n	801cbc0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801cbb6:	d30b      	bcc.n	801cbd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801cbb8:	2b02      	cmp	r3, #2
 801cbba:	d18b      	bne.n	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cbbc:	6940      	ldr	r0, [r0, #20]
 801cbbe:	4770      	bx	lr
 801cbc0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801cbc2:	4770      	bx	lr
 801cbc4:	69c0      	ldr	r0, [r0, #28]
 801cbc6:	4770      	bx	lr
 801cbc8:	684b      	ldr	r3, [r1, #4]
 801cbca:	781b      	ldrb	r3, [r3, #0]
 801cbcc:	2b00      	cmp	r3, #0
 801cbce:	d181      	bne.n	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cbd0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801cbd2:	4770      	bx	lr
 801cbd4:	684b      	ldr	r3, [r1, #4]
 801cbd6:	781b      	ldrb	r3, [r3, #0]
 801cbd8:	2b00      	cmp	r3, #0
 801cbda:	f47f af7b 	bne.w	801cad4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801cbde:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801cbe0:	4770      	bx	lr
 801cbe2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801cbe4:	4770      	bx	lr
 801cbe6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801cbe8:	4770      	bx	lr
 801cbea:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801cbec:	4770      	bx	lr
 801cbee:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801cbf0:	4770      	bx	lr
 801cbf2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801cbf4:	4770      	bx	lr

0801cbf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cbf6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbfa:	b087      	sub	sp, #28
 801cbfc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cbfe:	9205      	str	r2, [sp, #20]
 801cc00:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cc04:	9202      	str	r2, [sp, #8]
 801cc06:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801cc0a:	9101      	str	r1, [sp, #4]
 801cc0c:	6841      	ldr	r1, [r0, #4]
 801cc0e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801cc12:	fb01 2404 	mla	r4, r1, r4, r2
 801cc16:	6802      	ldr	r2, [r0, #0]
 801cc18:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cc1c:	f8de 2000 	ldr.w	r2, [lr]
 801cc20:	9203      	str	r2, [sp, #12]
 801cc22:	f8de 2004 	ldr.w	r2, [lr, #4]
 801cc26:	3204      	adds	r2, #4
 801cc28:	9204      	str	r2, [sp, #16]
 801cc2a:	9a02      	ldr	r2, [sp, #8]
 801cc2c:	43d6      	mvns	r6, r2
 801cc2e:	b2f6      	uxtb	r6, r6
 801cc30:	9a01      	ldr	r2, [sp, #4]
 801cc32:	2a00      	cmp	r2, #0
 801cc34:	dc03      	bgt.n	801cc3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cc36:	9a05      	ldr	r2, [sp, #20]
 801cc38:	2a00      	cmp	r2, #0
 801cc3a:	f340 8129 	ble.w	801ce90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801cc3e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cc40:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801cc44:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801cc48:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cc4c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cc4e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cc52:	2b00      	cmp	r3, #0
 801cc54:	dd0e      	ble.n	801cc74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cc56:	1408      	asrs	r0, r1, #16
 801cc58:	d405      	bmi.n	801cc66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc5a:	4560      	cmp	r0, ip
 801cc5c:	da03      	bge.n	801cc66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc5e:	1410      	asrs	r0, r2, #16
 801cc60:	d401      	bmi.n	801cc66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc62:	42b8      	cmp	r0, r7
 801cc64:	db07      	blt.n	801cc76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801cc66:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cc68:	4401      	add	r1, r0
 801cc6a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cc6c:	3b01      	subs	r3, #1
 801cc6e:	4402      	add	r2, r0
 801cc70:	3402      	adds	r4, #2
 801cc72:	e7ee      	b.n	801cc52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801cc74:	d071      	beq.n	801cd5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cc76:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cc78:	1e58      	subs	r0, r3, #1
 801cc7a:	fb05 1500 	mla	r5, r5, r0, r1
 801cc7e:	142d      	asrs	r5, r5, #16
 801cc80:	d45f      	bmi.n	801cd42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801cc82:	4565      	cmp	r5, ip
 801cc84:	da5d      	bge.n	801cd42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801cc86:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cc88:	fb05 2000 	mla	r0, r5, r0, r2
 801cc8c:	1400      	asrs	r0, r0, #16
 801cc8e:	d458      	bmi.n	801cd42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801cc90:	42b8      	cmp	r0, r7
 801cc92:	da56      	bge.n	801cd42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801cc94:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801cc98:	4699      	mov	r9, r3
 801cc9a:	46a2      	mov	sl, r4
 801cc9c:	f1b9 0f00 	cmp.w	r9, #0
 801cca0:	dd57      	ble.n	801cd52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801cca2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801cca6:	9803      	ldr	r0, [sp, #12]
 801cca8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801ccac:	140d      	asrs	r5, r1, #16
 801ccae:	fb07 000c 	mla	r0, r7, ip, r0
 801ccb2:	f109 39ff 	add.w	r9, r9, #4294967295
 801ccb6:	5d40      	ldrb	r0, [r0, r5]
 801ccb8:	9d04      	ldr	r5, [sp, #16]
 801ccba:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ccbe:	f8ba 5000 	ldrh.w	r5, [sl]
 801ccc2:	122f      	asrs	r7, r5, #8
 801ccc4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ccc8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cccc:	fb17 f706 	smulbb	r7, r7, r6
 801ccd0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801ccd4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ccd8:	00ed      	lsls	r5, r5, #3
 801ccda:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801ccde:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801cce2:	10c7      	asrs	r7, r0, #3
 801cce4:	b2ed      	uxtb	r5, r5
 801cce6:	00c0      	lsls	r0, r0, #3
 801cce8:	fb18 f806 	smulbb	r8, r8, r6
 801ccec:	fb15 f506 	smulbb	r5, r5, r6
 801ccf0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ccf4:	b2c0      	uxtb	r0, r0
 801ccf6:	fa1f fc8c 	uxth.w	ip, ip
 801ccfa:	fb07 870b 	mla	r7, r7, fp, r8
 801ccfe:	fb00 500b 	mla	r0, r0, fp, r5
 801cd02:	b280      	uxth	r0, r0
 801cd04:	b2bf      	uxth	r7, r7
 801cd06:	f10c 0501 	add.w	r5, ip, #1
 801cd0a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801cd0e:	f107 0801 	add.w	r8, r7, #1
 801cd12:	1c45      	adds	r5, r0, #1
 801cd14:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801cd18:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801cd1c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cd1e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cd22:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801cd26:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801cd2a:	ea45 0c0c 	orr.w	ip, r5, ip
 801cd2e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801cd32:	4401      	add	r1, r0
 801cd34:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cd36:	ea4c 0c08 	orr.w	ip, ip, r8
 801cd3a:	f82a cb02 	strh.w	ip, [sl], #2
 801cd3e:	4402      	add	r2, r0
 801cd40:	e7ac      	b.n	801cc9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801cd42:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801cd46:	f04f 0800 	mov.w	r8, #0
 801cd4a:	eb03 0008 	add.w	r0, r3, r8
 801cd4e:	2800      	cmp	r0, #0
 801cd50:	dc41      	bgt.n	801cdd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801cd52:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cd56:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cd5a:	9b01      	ldr	r3, [sp, #4]
 801cd5c:	2b00      	cmp	r3, #0
 801cd5e:	f340 8097 	ble.w	801ce90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801cd62:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cd66:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cd6a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cd6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cd70:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cd74:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cd78:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cd7c:	eef0 6a62 	vmov.f32	s13, s5
 801cd80:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cd84:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd88:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cd8c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801cd90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd94:	eef0 6a43 	vmov.f32	s13, s6
 801cd98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd9c:	ee12 2a90 	vmov	r2, s5
 801cda0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cda4:	fb92 f3f3 	sdiv	r3, r2, r3
 801cda8:	ee13 2a10 	vmov	r2, s6
 801cdac:	9313      	str	r3, [sp, #76]	; 0x4c
 801cdae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cdb0:	fb92 f3f3 	sdiv	r3, r2, r3
 801cdb4:	9314      	str	r3, [sp, #80]	; 0x50
 801cdb6:	9b01      	ldr	r3, [sp, #4]
 801cdb8:	9a05      	ldr	r2, [sp, #20]
 801cdba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdbe:	3b01      	subs	r3, #1
 801cdc0:	9301      	str	r3, [sp, #4]
 801cdc2:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801cdc6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cdc8:	eeb0 3a67 	vmov.f32	s6, s15
 801cdcc:	bf08      	it	eq
 801cdce:	4613      	moveq	r3, r2
 801cdd0:	eef0 2a47 	vmov.f32	s5, s14
 801cdd4:	e72c      	b.n	801cc30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cdd6:	140f      	asrs	r7, r1, #16
 801cdd8:	d453      	bmi.n	801ce82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cdda:	f8de 5008 	ldr.w	r5, [lr, #8]
 801cdde:	42bd      	cmp	r5, r7
 801cde0:	dd4f      	ble.n	801ce82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cde2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801cde6:	d44c      	bmi.n	801ce82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cde8:	f8de 000c 	ldr.w	r0, [lr, #12]
 801cdec:	4560      	cmp	r0, ip
 801cdee:	dd48      	ble.n	801ce82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cdf0:	9803      	ldr	r0, [sp, #12]
 801cdf2:	b22d      	sxth	r5, r5
 801cdf4:	fb0c 0505 	mla	r5, ip, r5, r0
 801cdf8:	5de8      	ldrb	r0, [r5, r7]
 801cdfa:	9d04      	ldr	r5, [sp, #16]
 801cdfc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ce00:	f06f 0501 	mvn.w	r5, #1
 801ce04:	fb05 fb08 	mul.w	fp, r5, r8
 801ce08:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ce0c:	f834 500b 	ldrh.w	r5, [r4, fp]
 801ce10:	122f      	asrs	r7, r5, #8
 801ce12:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ce16:	fb17 f706 	smulbb	r7, r7, r6
 801ce1a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ce1e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ce22:	00ed      	lsls	r5, r5, #3
 801ce24:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801ce28:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ce2c:	10c7      	asrs	r7, r0, #3
 801ce2e:	b2ed      	uxtb	r5, r5
 801ce30:	00c0      	lsls	r0, r0, #3
 801ce32:	fb19 f906 	smulbb	r9, r9, r6
 801ce36:	fb15 f506 	smulbb	r5, r5, r6
 801ce3a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ce3e:	b2c0      	uxtb	r0, r0
 801ce40:	fa1f fc8c 	uxth.w	ip, ip
 801ce44:	fb07 970a 	mla	r7, r7, sl, r9
 801ce48:	fb00 500a 	mla	r0, r0, sl, r5
 801ce4c:	b2bf      	uxth	r7, r7
 801ce4e:	b280      	uxth	r0, r0
 801ce50:	f10c 0501 	add.w	r5, ip, #1
 801ce54:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ce58:	f107 0901 	add.w	r9, r7, #1
 801ce5c:	1c45      	adds	r5, r0, #1
 801ce5e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ce62:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801ce66:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ce6a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ce6e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ce72:	ea45 0c0c 	orr.w	ip, r5, ip
 801ce76:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ce7a:	ea4c 0c09 	orr.w	ip, ip, r9
 801ce7e:	f824 c00b 	strh.w	ip, [r4, fp]
 801ce82:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ce84:	4401      	add	r1, r0
 801ce86:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ce88:	f108 38ff 	add.w	r8, r8, #4294967295
 801ce8c:	4402      	add	r2, r0
 801ce8e:	e75c      	b.n	801cd4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801ce90:	b007      	add	sp, #28
 801ce92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ce96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ce96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce9a:	b085      	sub	sp, #20
 801ce9c:	4693      	mov	fp, r2
 801ce9e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cea0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801cea2:	6870      	ldr	r0, [r6, #4]
 801cea4:	9100      	str	r1, [sp, #0]
 801cea6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ceaa:	fb00 2404 	mla	r4, r0, r4, r2
 801ceae:	6832      	ldr	r2, [r6, #0]
 801ceb0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ceb4:	682a      	ldr	r2, [r5, #0]
 801ceb6:	9201      	str	r2, [sp, #4]
 801ceb8:	686a      	ldr	r2, [r5, #4]
 801ceba:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801cebe:	3204      	adds	r2, #4
 801cec0:	9202      	str	r2, [sp, #8]
 801cec2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cec6:	9a00      	ldr	r2, [sp, #0]
 801cec8:	2a00      	cmp	r2, #0
 801ceca:	dc03      	bgt.n	801ced4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801cecc:	f1bb 0f00 	cmp.w	fp, #0
 801ced0:	f340 80a0 	ble.w	801d014 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ced4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ced6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ceda:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801cede:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cee2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cee4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cee8:	2b00      	cmp	r3, #0
 801ceea:	dd0c      	ble.n	801cf06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ceec:	1406      	asrs	r6, r0, #16
 801ceee:	d405      	bmi.n	801cefc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cef0:	454e      	cmp	r6, r9
 801cef2:	da03      	bge.n	801cefc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cef4:	1416      	asrs	r6, r2, #16
 801cef6:	d401      	bmi.n	801cefc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cef8:	4546      	cmp	r6, r8
 801cefa:	db05      	blt.n	801cf08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cefc:	4470      	add	r0, lr
 801cefe:	4462      	add	r2, ip
 801cf00:	3b01      	subs	r3, #1
 801cf02:	3402      	adds	r4, #2
 801cf04:	e7f0      	b.n	801cee8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801cf06:	d00f      	beq.n	801cf28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cf08:	1e5e      	subs	r6, r3, #1
 801cf0a:	fb0e 0706 	mla	r7, lr, r6, r0
 801cf0e:	143f      	asrs	r7, r7, #16
 801cf10:	d541      	bpl.n	801cf96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801cf12:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801cf16:	4698      	mov	r8, r3
 801cf18:	9603      	str	r6, [sp, #12]
 801cf1a:	f1b8 0f00 	cmp.w	r8, #0
 801cf1e:	dc59      	bgt.n	801cfd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cf20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cf24:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cf28:	9b00      	ldr	r3, [sp, #0]
 801cf2a:	2b00      	cmp	r3, #0
 801cf2c:	dd72      	ble.n	801d014 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801cf2e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cf32:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cf36:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cf3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cf3c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cf40:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cf44:	eeb0 6a62 	vmov.f32	s12, s5
 801cf48:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cf4c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cf50:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cf54:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cf58:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cf5c:	eeb0 6a43 	vmov.f32	s12, s6
 801cf60:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cf64:	ee12 2a90 	vmov	r2, s5
 801cf68:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cf6c:	fb92 fef3 	sdiv	lr, r2, r3
 801cf70:	ee13 2a10 	vmov	r2, s6
 801cf74:	fb92 fcf3 	sdiv	ip, r2, r3
 801cf78:	9b00      	ldr	r3, [sp, #0]
 801cf7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cf7e:	3b01      	subs	r3, #1
 801cf80:	9300      	str	r3, [sp, #0]
 801cf82:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801cf86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cf88:	eeb0 3a67 	vmov.f32	s6, s15
 801cf8c:	bf08      	it	eq
 801cf8e:	465b      	moveq	r3, fp
 801cf90:	eef0 2a47 	vmov.f32	s5, s14
 801cf94:	e797      	b.n	801cec6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801cf96:	454f      	cmp	r7, r9
 801cf98:	dabb      	bge.n	801cf12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cf9a:	fb0c 2606 	mla	r6, ip, r6, r2
 801cf9e:	1436      	asrs	r6, r6, #16
 801cfa0:	d4b7      	bmi.n	801cf12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cfa2:	4546      	cmp	r6, r8
 801cfa4:	dab5      	bge.n	801cf12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cfa6:	461e      	mov	r6, r3
 801cfa8:	46a0      	mov	r8, r4
 801cfaa:	2e00      	cmp	r6, #0
 801cfac:	ddb8      	ble.n	801cf20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cfae:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801cfb2:	9901      	ldr	r1, [sp, #4]
 801cfb4:	1417      	asrs	r7, r2, #16
 801cfb6:	ea4f 4920 	mov.w	r9, r0, asr #16
 801cfba:	fb0a 1707 	mla	r7, sl, r7, r1
 801cfbe:	9902      	ldr	r1, [sp, #8]
 801cfc0:	f817 7009 	ldrb.w	r7, [r7, r9]
 801cfc4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801cfc8:	f828 7b02 	strh.w	r7, [r8], #2
 801cfcc:	4470      	add	r0, lr
 801cfce:	4462      	add	r2, ip
 801cfd0:	3e01      	subs	r6, #1
 801cfd2:	e7ea      	b.n	801cfaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801cfd4:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cfd8:	d417      	bmi.n	801d00a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cfda:	68ae      	ldr	r6, [r5, #8]
 801cfdc:	454e      	cmp	r6, r9
 801cfde:	dd14      	ble.n	801d00a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cfe0:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801cfe4:	d411      	bmi.n	801d00a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cfe6:	68ef      	ldr	r7, [r5, #12]
 801cfe8:	4557      	cmp	r7, sl
 801cfea:	dd0e      	ble.n	801d00a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cfec:	9f01      	ldr	r7, [sp, #4]
 801cfee:	b236      	sxth	r6, r6
 801cff0:	fb0a 7606 	mla	r6, sl, r6, r7
 801cff4:	9f02      	ldr	r7, [sp, #8]
 801cff6:	f816 6009 	ldrb.w	r6, [r6, r9]
 801cffa:	f06f 0101 	mvn.w	r1, #1
 801cffe:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801d002:	fb01 f608 	mul.w	r6, r1, r8
 801d006:	9903      	ldr	r1, [sp, #12]
 801d008:	538f      	strh	r7, [r1, r6]
 801d00a:	4470      	add	r0, lr
 801d00c:	4462      	add	r2, ip
 801d00e:	f108 38ff 	add.w	r8, r8, #4294967295
 801d012:	e782      	b.n	801cf1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d014:	b005      	add	sp, #20
 801d016:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d01a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d01a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d01e:	b087      	sub	sp, #28
 801d020:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d022:	9205      	str	r2, [sp, #20]
 801d024:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d028:	9203      	str	r2, [sp, #12]
 801d02a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801d02e:	9102      	str	r1, [sp, #8]
 801d030:	6861      	ldr	r1, [r4, #4]
 801d032:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d036:	fb01 2000 	mla	r0, r1, r0, r2
 801d03a:	6822      	ldr	r2, [r4, #0]
 801d03c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801d040:	9200      	str	r2, [sp, #0]
 801d042:	f8dc 2000 	ldr.w	r2, [ip]
 801d046:	9204      	str	r2, [sp, #16]
 801d048:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801d04c:	3204      	adds	r2, #4
 801d04e:	9201      	str	r2, [sp, #4]
 801d050:	9a03      	ldr	r2, [sp, #12]
 801d052:	43d5      	mvns	r5, r2
 801d054:	b2ed      	uxtb	r5, r5
 801d056:	9a02      	ldr	r2, [sp, #8]
 801d058:	2a00      	cmp	r2, #0
 801d05a:	dc03      	bgt.n	801d064 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d05c:	9a05      	ldr	r2, [sp, #20]
 801d05e:	2a00      	cmp	r2, #0
 801d060:	f340 812c 	ble.w	801d2bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801d064:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d066:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801d06a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801d06e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d072:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d074:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d078:	2b00      	cmp	r3, #0
 801d07a:	dd10      	ble.n	801d09e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d07c:	140c      	asrs	r4, r1, #16
 801d07e:	d405      	bmi.n	801d08c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d080:	4574      	cmp	r4, lr
 801d082:	da03      	bge.n	801d08c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d084:	1414      	asrs	r4, r2, #16
 801d086:	d401      	bmi.n	801d08c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d088:	42bc      	cmp	r4, r7
 801d08a:	db09      	blt.n	801d0a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d08c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d08e:	9800      	ldr	r0, [sp, #0]
 801d090:	4421      	add	r1, r4
 801d092:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d094:	3002      	adds	r0, #2
 801d096:	4422      	add	r2, r4
 801d098:	3b01      	subs	r3, #1
 801d09a:	9000      	str	r0, [sp, #0]
 801d09c:	e7ec      	b.n	801d078 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801d09e:	d071      	beq.n	801d184 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801d0a0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d0a2:	1e5c      	subs	r4, r3, #1
 801d0a4:	fb06 1604 	mla	r6, r6, r4, r1
 801d0a8:	1436      	asrs	r6, r6, #16
 801d0aa:	d45d      	bmi.n	801d168 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d0ac:	4576      	cmp	r6, lr
 801d0ae:	da5b      	bge.n	801d168 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d0b0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801d0b2:	fb06 2404 	mla	r4, r6, r4, r2
 801d0b6:	1424      	asrs	r4, r4, #16
 801d0b8:	d456      	bmi.n	801d168 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d0ba:	42bc      	cmp	r4, r7
 801d0bc:	da54      	bge.n	801d168 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801d0be:	f8dd 9000 	ldr.w	r9, [sp]
 801d0c2:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801d0c6:	4698      	mov	r8, r3
 801d0c8:	f1b8 0f00 	cmp.w	r8, #0
 801d0cc:	dd54      	ble.n	801d178 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801d0ce:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d0d2:	9804      	ldr	r0, [sp, #16]
 801d0d4:	1414      	asrs	r4, r2, #16
 801d0d6:	fb07 0404 	mla	r4, r7, r4, r0
 801d0da:	140e      	asrs	r6, r1, #16
 801d0dc:	9801      	ldr	r0, [sp, #4]
 801d0de:	f814 e006 	ldrb.w	lr, [r4, r6]
 801d0e2:	f8b9 4000 	ldrh.w	r4, [r9]
 801d0e6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d0ea:	eb00 0b0e 	add.w	fp, r0, lr
 801d0ee:	1227      	asrs	r7, r4, #8
 801d0f0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801d0f4:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d0f8:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801d0fc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d0fe:	fb16 f60a 	smulbb	r6, r6, sl
 801d102:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d106:	fb07 6705 	mla	r7, r7, r5, r6
 801d10a:	10e6      	asrs	r6, r4, #3
 801d10c:	00e4      	lsls	r4, r4, #3
 801d10e:	b2e4      	uxtb	r4, r4
 801d110:	fb1b fb0a 	smulbb	fp, fp, sl
 801d114:	fb14 f405 	smulbb	r4, r4, r5
 801d118:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d11c:	b2bf      	uxth	r7, r7
 801d11e:	fb06 b605 	mla	r6, r6, r5, fp
 801d122:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801d126:	b2b6      	uxth	r6, r6
 801d128:	fa1f fe8e 	uxth.w	lr, lr
 801d12c:	1c7c      	adds	r4, r7, #1
 801d12e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801d132:	f106 0b01 	add.w	fp, r6, #1
 801d136:	f10e 0401 	add.w	r4, lr, #1
 801d13a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801d13e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801d142:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d146:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801d14a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801d14e:	4327      	orrs	r7, r4
 801d150:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d154:	4401      	add	r1, r0
 801d156:	9814      	ldr	r0, [sp, #80]	; 0x50
 801d158:	ea47 070b 	orr.w	r7, r7, fp
 801d15c:	f829 7b02 	strh.w	r7, [r9], #2
 801d160:	4402      	add	r2, r0
 801d162:	f108 38ff 	add.w	r8, r8, #4294967295
 801d166:	e7af      	b.n	801d0c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801d168:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801d16c:	f04f 0e00 	mov.w	lr, #0
 801d170:	eb03 040e 	add.w	r4, r3, lr
 801d174:	2c00      	cmp	r4, #0
 801d176:	dc43      	bgt.n	801d200 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801d178:	9a00      	ldr	r2, [sp, #0]
 801d17a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d17e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d182:	9300      	str	r3, [sp, #0]
 801d184:	9b02      	ldr	r3, [sp, #8]
 801d186:	2b00      	cmp	r3, #0
 801d188:	f340 8098 	ble.w	801d2bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801d18c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d190:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d194:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d198:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d19a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d19e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d1a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d1a6:	eef0 6a62 	vmov.f32	s13, s5
 801d1aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d1ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d1b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d1b6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801d1ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d1be:	eef0 6a43 	vmov.f32	s13, s6
 801d1c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d1c6:	ee12 2a90 	vmov	r2, s5
 801d1ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d1ce:	fb92 f3f3 	sdiv	r3, r2, r3
 801d1d2:	ee13 2a10 	vmov	r2, s6
 801d1d6:	9313      	str	r3, [sp, #76]	; 0x4c
 801d1d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d1da:	fb92 f3f3 	sdiv	r3, r2, r3
 801d1de:	9314      	str	r3, [sp, #80]	; 0x50
 801d1e0:	9b02      	ldr	r3, [sp, #8]
 801d1e2:	9a05      	ldr	r2, [sp, #20]
 801d1e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d1e8:	3b01      	subs	r3, #1
 801d1ea:	9302      	str	r3, [sp, #8]
 801d1ec:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801d1f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d1f2:	eeb0 3a67 	vmov.f32	s6, s15
 801d1f6:	bf08      	it	eq
 801d1f8:	4613      	moveq	r3, r2
 801d1fa:	eef0 2a47 	vmov.f32	s5, s14
 801d1fe:	e72a      	b.n	801d056 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d200:	140f      	asrs	r7, r1, #16
 801d202:	d454      	bmi.n	801d2ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d204:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801d208:	42be      	cmp	r6, r7
 801d20a:	dd50      	ble.n	801d2ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d20c:	ea5f 4822 	movs.w	r8, r2, asr #16
 801d210:	d44d      	bmi.n	801d2ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d212:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801d216:	4544      	cmp	r4, r8
 801d218:	dd49      	ble.n	801d2ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801d21a:	9c04      	ldr	r4, [sp, #16]
 801d21c:	b236      	sxth	r6, r6
 801d21e:	fb08 4606 	mla	r6, r8, r6, r4
 801d222:	f06f 0001 	mvn.w	r0, #1
 801d226:	f816 8007 	ldrb.w	r8, [r6, r7]
 801d22a:	9c01      	ldr	r4, [sp, #4]
 801d22c:	fb00 fa0e 	mul.w	sl, r0, lr
 801d230:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801d234:	9800      	ldr	r0, [sp, #0]
 801d236:	eb04 0b08 	add.w	fp, r4, r8
 801d23a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801d23e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801d242:	9801      	ldr	r0, [sp, #4]
 801d244:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d248:	f810 8008 	ldrb.w	r8, [r0, r8]
 801d24c:	9800      	ldr	r0, [sp, #0]
 801d24e:	1227      	asrs	r7, r4, #8
 801d250:	fb16 f609 	smulbb	r6, r6, r9
 801d254:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d258:	fb07 6705 	mla	r7, r7, r5, r6
 801d25c:	10e6      	asrs	r6, r4, #3
 801d25e:	00e4      	lsls	r4, r4, #3
 801d260:	b2e4      	uxtb	r4, r4
 801d262:	fb1b fb09 	smulbb	fp, fp, r9
 801d266:	fb14 f405 	smulbb	r4, r4, r5
 801d26a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d26e:	b2bf      	uxth	r7, r7
 801d270:	fb06 b605 	mla	r6, r6, r5, fp
 801d274:	fb08 4809 	mla	r8, r8, r9, r4
 801d278:	b2b6      	uxth	r6, r6
 801d27a:	fa1f f888 	uxth.w	r8, r8
 801d27e:	1c7c      	adds	r4, r7, #1
 801d280:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801d284:	f106 0b01 	add.w	fp, r6, #1
 801d288:	f108 0401 	add.w	r4, r8, #1
 801d28c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801d290:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801d294:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d298:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801d29c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801d2a0:	4327      	orrs	r7, r4
 801d2a2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d2a6:	ea47 070b 	orr.w	r7, r7, fp
 801d2aa:	f820 700a 	strh.w	r7, [r0, sl]
 801d2ae:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d2b0:	4401      	add	r1, r0
 801d2b2:	9814      	ldr	r0, [sp, #80]	; 0x50
 801d2b4:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d2b8:	4402      	add	r2, r0
 801d2ba:	e759      	b.n	801d170 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801d2bc:	b007      	add	sp, #28
 801d2be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801d2c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d2c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d2c8:	b085      	sub	sp, #20
 801d2ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d2ce:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d2d0:	9203      	str	r2, [sp, #12]
 801d2d2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d2d6:	6870      	ldr	r0, [r6, #4]
 801d2d8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d2da:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801d2de:	686f      	ldr	r7, [r5, #4]
 801d2e0:	9101      	str	r1, [sp, #4]
 801d2e2:	fb00 2404 	mla	r4, r0, r4, r2
 801d2e6:	6832      	ldr	r2, [r6, #0]
 801d2e8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d2ec:	682a      	ldr	r2, [r5, #0]
 801d2ee:	9202      	str	r2, [sp, #8]
 801d2f0:	3704      	adds	r7, #4
 801d2f2:	9a01      	ldr	r2, [sp, #4]
 801d2f4:	2a00      	cmp	r2, #0
 801d2f6:	dc03      	bgt.n	801d300 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d2f8:	9a03      	ldr	r2, [sp, #12]
 801d2fa:	2a00      	cmp	r2, #0
 801d2fc:	f340 80cc 	ble.w	801d498 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801d300:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d302:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d306:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801d30a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d30e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d310:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d314:	2b00      	cmp	r3, #0
 801d316:	dd0d      	ble.n	801d334 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d318:	1406      	asrs	r6, r0, #16
 801d31a:	d405      	bmi.n	801d328 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d31c:	454e      	cmp	r6, r9
 801d31e:	da03      	bge.n	801d328 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d320:	1416      	asrs	r6, r2, #16
 801d322:	d401      	bmi.n	801d328 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801d324:	4546      	cmp	r6, r8
 801d326:	db06      	blt.n	801d336 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d328:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801d32a:	4460      	add	r0, ip
 801d32c:	4432      	add	r2, r6
 801d32e:	3b01      	subs	r3, #1
 801d330:	3402      	adds	r4, #2
 801d332:	e7ef      	b.n	801d314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801d334:	d00f      	beq.n	801d356 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d336:	1e5e      	subs	r6, r3, #1
 801d338:	fb0c 0e06 	mla	lr, ip, r6, r0
 801d33c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801d340:	d543      	bpl.n	801d3ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801d342:	4698      	mov	r8, r3
 801d344:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801d348:	f1b8 0f00 	cmp.w	r8, #0
 801d34c:	dc71      	bgt.n	801d432 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801d34e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d352:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d356:	9b01      	ldr	r3, [sp, #4]
 801d358:	2b00      	cmp	r3, #0
 801d35a:	f340 809d 	ble.w	801d498 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801d35e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d362:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d366:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d36a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d36c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d370:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d374:	eeb0 6a62 	vmov.f32	s12, s5
 801d378:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d37c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d380:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d384:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d388:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d38c:	eeb0 6a43 	vmov.f32	s12, s6
 801d390:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d394:	ee12 2a90 	vmov	r2, s5
 801d398:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d39c:	fb92 fcf3 	sdiv	ip, r2, r3
 801d3a0:	ee13 2a10 	vmov	r2, s6
 801d3a4:	fb92 f3f3 	sdiv	r3, r2, r3
 801d3a8:	9312      	str	r3, [sp, #72]	; 0x48
 801d3aa:	9b01      	ldr	r3, [sp, #4]
 801d3ac:	9a03      	ldr	r2, [sp, #12]
 801d3ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d3b2:	3b01      	subs	r3, #1
 801d3b4:	9301      	str	r3, [sp, #4]
 801d3b6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d3ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d3bc:	eeb0 3a67 	vmov.f32	s6, s15
 801d3c0:	bf08      	it	eq
 801d3c2:	4613      	moveq	r3, r2
 801d3c4:	eef0 2a47 	vmov.f32	s5, s14
 801d3c8:	e793      	b.n	801d2f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d3ca:	45ce      	cmp	lr, r9
 801d3cc:	dab9      	bge.n	801d342 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d3ce:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d3d0:	fb01 2606 	mla	r6, r1, r6, r2
 801d3d4:	1436      	asrs	r6, r6, #16
 801d3d6:	d4b4      	bmi.n	801d342 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d3d8:	4546      	cmp	r6, r8
 801d3da:	dab2      	bge.n	801d342 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d3dc:	4698      	mov	r8, r3
 801d3de:	46a2      	mov	sl, r4
 801d3e0:	f1b8 0f00 	cmp.w	r8, #0
 801d3e4:	ddb3      	ble.n	801d34e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801d3e6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d3ea:	9902      	ldr	r1, [sp, #8]
 801d3ec:	1416      	asrs	r6, r2, #16
 801d3ee:	fb09 1606 	mla	r6, r9, r6, r1
 801d3f2:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801d3f6:	492a      	ldr	r1, [pc, #168]	; (801d4a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801d3f8:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801d3fc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d400:	eb07 0b0e 	add.w	fp, r7, lr
 801d404:	4460      	add	r0, ip
 801d406:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801d40a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801d40e:	00f6      	lsls	r6, r6, #3
 801d410:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801d414:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d418:	ea49 0606 	orr.w	r6, r9, r6
 801d41c:	f817 900e 	ldrb.w	r9, [r7, lr]
 801d420:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d422:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801d426:	f82a 6b02 	strh.w	r6, [sl], #2
 801d42a:	440a      	add	r2, r1
 801d42c:	f108 38ff 	add.w	r8, r8, #4294967295
 801d430:	e7d6      	b.n	801d3e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d432:	ea5f 4920 	movs.w	r9, r0, asr #16
 801d436:	d429      	bmi.n	801d48c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d438:	68ae      	ldr	r6, [r5, #8]
 801d43a:	454e      	cmp	r6, r9
 801d43c:	dd26      	ble.n	801d48c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d43e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801d442:	d423      	bmi.n	801d48c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d444:	68e9      	ldr	r1, [r5, #12]
 801d446:	4559      	cmp	r1, fp
 801d448:	dd20      	ble.n	801d48c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d44a:	9902      	ldr	r1, [sp, #8]
 801d44c:	fa0f fe86 	sxth.w	lr, r6
 801d450:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801d454:	f06f 0101 	mvn.w	r1, #1
 801d458:	f81e e009 	ldrb.w	lr, [lr, r9]
 801d45c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d460:	eb07 060e 	add.w	r6, r7, lr
 801d464:	fb01 f908 	mul.w	r9, r1, r8
 801d468:	f896 b002 	ldrb.w	fp, [r6, #2]
 801d46c:	7876      	ldrb	r6, [r6, #1]
 801d46e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801d472:	00f6      	lsls	r6, r6, #3
 801d474:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801d478:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d47c:	ea4b 0606 	orr.w	r6, fp, r6
 801d480:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801d484:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801d488:	f82a 6009 	strh.w	r6, [sl, r9]
 801d48c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d48e:	4460      	add	r0, ip
 801d490:	440a      	add	r2, r1
 801d492:	f108 38ff 	add.w	r8, r8, #4294967295
 801d496:	e757      	b.n	801d348 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d498:	b005      	add	sp, #20
 801d49a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d49e:	bf00      	nop
 801d4a0:	fffff800 	.word	0xfffff800

0801d4a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d4a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4a8:	b087      	sub	sp, #28
 801d4aa:	468b      	mov	fp, r1
 801d4ac:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d4ae:	9204      	str	r2, [sp, #16]
 801d4b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d4b4:	9205      	str	r2, [sp, #20]
 801d4b6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801d4ba:	6841      	ldr	r1, [r0, #4]
 801d4bc:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d4c0:	fb01 2404 	mla	r4, r1, r4, r2
 801d4c4:	6802      	ldr	r2, [r0, #0]
 801d4c6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d4ca:	f8dc 2000 	ldr.w	r2, [ip]
 801d4ce:	9201      	str	r2, [sp, #4]
 801d4d0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801d4d4:	3204      	adds	r2, #4
 801d4d6:	9202      	str	r2, [sp, #8]
 801d4d8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d4dc:	f1bb 0f00 	cmp.w	fp, #0
 801d4e0:	dc03      	bgt.n	801d4ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801d4e2:	9a04      	ldr	r2, [sp, #16]
 801d4e4:	2a00      	cmp	r2, #0
 801d4e6:	f340 8138 	ble.w	801d75a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d4ea:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d4ec:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d4f0:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801d4f4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d4f8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d4fa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d4fe:	2b00      	cmp	r3, #0
 801d500:	dd0e      	ble.n	801d520 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d502:	1402      	asrs	r2, r0, #16
 801d504:	d405      	bmi.n	801d512 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d506:	42ba      	cmp	r2, r7
 801d508:	da03      	bge.n	801d512 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d50a:	140a      	asrs	r2, r1, #16
 801d50c:	d401      	bmi.n	801d512 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d50e:	42b2      	cmp	r2, r6
 801d510:	db07      	blt.n	801d522 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d512:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d514:	4410      	add	r0, r2
 801d516:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d518:	3b01      	subs	r3, #1
 801d51a:	4411      	add	r1, r2
 801d51c:	3402      	adds	r4, #2
 801d51e:	e7ee      	b.n	801d4fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d520:	d019      	beq.n	801d556 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d522:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d524:	1e5a      	subs	r2, r3, #1
 801d526:	fb05 0502 	mla	r5, r5, r2, r0
 801d52a:	142d      	asrs	r5, r5, #16
 801d52c:	d409      	bmi.n	801d542 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d52e:	42bd      	cmp	r5, r7
 801d530:	da07      	bge.n	801d542 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d532:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d534:	fb05 1202 	mla	r2, r5, r2, r1
 801d538:	1412      	asrs	r2, r2, #16
 801d53a:	d402      	bmi.n	801d542 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d53c:	42b2      	cmp	r2, r6
 801d53e:	f2c0 80ac 	blt.w	801d69a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801d542:	f04f 0e00 	mov.w	lr, #0
 801d546:	eb03 020e 	add.w	r2, r3, lr
 801d54a:	2a00      	cmp	r2, #0
 801d54c:	dc3e      	bgt.n	801d5cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d54e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d552:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d556:	f1bb 0f00 	cmp.w	fp, #0
 801d55a:	f340 80fe 	ble.w	801d75a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d55e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d562:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d566:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d56a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d56c:	f1bb 0b01 	subs.w	fp, fp, #1
 801d570:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d574:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d578:	eeb0 6a62 	vmov.f32	s12, s5
 801d57c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d580:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d584:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d588:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d58c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d590:	eeb0 6a43 	vmov.f32	s12, s6
 801d594:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d598:	ee12 2a90 	vmov	r2, s5
 801d59c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d5a0:	fb92 f3f3 	sdiv	r3, r2, r3
 801d5a4:	ee13 2a10 	vmov	r2, s6
 801d5a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d5ac:	9313      	str	r3, [sp, #76]	; 0x4c
 801d5ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d5b0:	fb92 f3f3 	sdiv	r3, r2, r3
 801d5b4:	9a04      	ldr	r2, [sp, #16]
 801d5b6:	9314      	str	r3, [sp, #80]	; 0x50
 801d5b8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d5bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d5be:	eeb0 3a67 	vmov.f32	s6, s15
 801d5c2:	bf08      	it	eq
 801d5c4:	4613      	moveq	r3, r2
 801d5c6:	eef0 2a47 	vmov.f32	s5, s14
 801d5ca:	e787      	b.n	801d4dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d5cc:	1406      	asrs	r6, r0, #16
 801d5ce:	d45d      	bmi.n	801d68c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d5d0:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801d5d4:	42b5      	cmp	r5, r6
 801d5d6:	dd59      	ble.n	801d68c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d5d8:	140f      	asrs	r7, r1, #16
 801d5da:	d457      	bmi.n	801d68c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d5dc:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801d5e0:	42ba      	cmp	r2, r7
 801d5e2:	dd53      	ble.n	801d68c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d5e4:	9a01      	ldr	r2, [sp, #4]
 801d5e6:	b22d      	sxth	r5, r5
 801d5e8:	fb07 2505 	mla	r5, r7, r5, r2
 801d5ec:	5daa      	ldrb	r2, [r5, r6]
 801d5ee:	9d02      	ldr	r5, [sp, #8]
 801d5f0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d5f4:	0e2e      	lsrs	r6, r5, #24
 801d5f6:	d049      	beq.n	801d68c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d5f8:	f06f 0201 	mvn.w	r2, #1
 801d5fc:	fb02 f20e 	mul.w	r2, r2, lr
 801d600:	9203      	str	r2, [sp, #12]
 801d602:	f834 8002 	ldrh.w	r8, [r4, r2]
 801d606:	9a05      	ldr	r2, [sp, #20]
 801d608:	4356      	muls	r6, r2
 801d60a:	1c72      	adds	r2, r6, #1
 801d60c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d610:	1212      	asrs	r2, r2, #8
 801d612:	fa1f f982 	uxth.w	r9, r2
 801d616:	ea4f 2728 	mov.w	r7, r8, asr #8
 801d61a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d61e:	43d2      	mvns	r2, r2
 801d620:	b2d2      	uxtb	r2, r2
 801d622:	fb16 f609 	smulbb	r6, r6, r9
 801d626:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d62a:	fb07 6702 	mla	r7, r7, r2, r6
 801d62e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d632:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d636:	b2ed      	uxtb	r5, r5
 801d638:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d63c:	fa5f f888 	uxtb.w	r8, r8
 801d640:	fb15 f509 	smulbb	r5, r5, r9
 801d644:	fb08 5502 	mla	r5, r8, r2, r5
 801d648:	b2bf      	uxth	r7, r7
 801d64a:	fb1a fa09 	smulbb	sl, sl, r9
 801d64e:	b2ad      	uxth	r5, r5
 801d650:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d654:	fb06 a602 	mla	r6, r6, r2, sl
 801d658:	1c7a      	adds	r2, r7, #1
 801d65a:	f105 0a01 	add.w	sl, r5, #1
 801d65e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d662:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d666:	b2b6      	uxth	r6, r6
 801d668:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d66c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d670:	ea4a 0707 	orr.w	r7, sl, r7
 801d674:	f106 0a01 	add.w	sl, r6, #1
 801d678:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d67c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d680:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d684:	9a03      	ldr	r2, [sp, #12]
 801d686:	ea47 070a 	orr.w	r7, r7, sl
 801d68a:	52a7      	strh	r7, [r4, r2]
 801d68c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d68e:	4410      	add	r0, r2
 801d690:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d692:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d696:	4411      	add	r1, r2
 801d698:	e755      	b.n	801d546 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d69a:	f04f 0800 	mov.w	r8, #0
 801d69e:	eba3 0208 	sub.w	r2, r3, r8
 801d6a2:	2a00      	cmp	r2, #0
 801d6a4:	f77f af53 	ble.w	801d54e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d6a8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d6ac:	9f01      	ldr	r7, [sp, #4]
 801d6ae:	140a      	asrs	r2, r1, #16
 801d6b0:	1405      	asrs	r5, r0, #16
 801d6b2:	fb06 7202 	mla	r2, r6, r2, r7
 801d6b6:	5d52      	ldrb	r2, [r2, r5]
 801d6b8:	9d02      	ldr	r5, [sp, #8]
 801d6ba:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d6be:	0e2e      	lsrs	r6, r5, #24
 801d6c0:	d044      	beq.n	801d74c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d6c2:	9a05      	ldr	r2, [sp, #20]
 801d6c4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d6c8:	4356      	muls	r6, r2
 801d6ca:	1c72      	adds	r2, r6, #1
 801d6cc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d6d0:	1212      	asrs	r2, r2, #8
 801d6d2:	fa1f f982 	uxth.w	r9, r2
 801d6d6:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d6da:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d6de:	43d2      	mvns	r2, r2
 801d6e0:	b2d2      	uxtb	r2, r2
 801d6e2:	fb16 f609 	smulbb	r6, r6, r9
 801d6e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d6ea:	fb07 6702 	mla	r7, r7, r2, r6
 801d6ee:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d6f2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d6f6:	b2ed      	uxtb	r5, r5
 801d6f8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d6fc:	fa5f fe8e 	uxtb.w	lr, lr
 801d700:	fb15 f509 	smulbb	r5, r5, r9
 801d704:	fb0e 5502 	mla	r5, lr, r2, r5
 801d708:	b2bf      	uxth	r7, r7
 801d70a:	fb1a fa09 	smulbb	sl, sl, r9
 801d70e:	b2ad      	uxth	r5, r5
 801d710:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d714:	fb06 a602 	mla	r6, r6, r2, sl
 801d718:	1c7a      	adds	r2, r7, #1
 801d71a:	f105 0a01 	add.w	sl, r5, #1
 801d71e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d722:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d726:	b2b6      	uxth	r6, r6
 801d728:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d72c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d730:	ea4a 0707 	orr.w	r7, sl, r7
 801d734:	f106 0a01 	add.w	sl, r6, #1
 801d738:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d73c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d740:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d744:	ea47 070a 	orr.w	r7, r7, sl
 801d748:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d74c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d74e:	4410      	add	r0, r2
 801d750:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d752:	f108 0801 	add.w	r8, r8, #1
 801d756:	4411      	add	r1, r2
 801d758:	e7a1      	b.n	801d69e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d75a:	b007      	add	sp, #28
 801d75c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d760 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d764:	b085      	sub	sp, #20
 801d766:	468b      	mov	fp, r1
 801d768:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d76a:	9203      	str	r2, [sp, #12]
 801d76c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d770:	6841      	ldr	r1, [r0, #4]
 801d772:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d776:	fb01 2404 	mla	r4, r1, r4, r2
 801d77a:	6802      	ldr	r2, [r0, #0]
 801d77c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d780:	f8de 2000 	ldr.w	r2, [lr]
 801d784:	9200      	str	r2, [sp, #0]
 801d786:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d78a:	3204      	adds	r2, #4
 801d78c:	9201      	str	r2, [sp, #4]
 801d78e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d792:	f1bb 0f00 	cmp.w	fp, #0
 801d796:	dc03      	bgt.n	801d7a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d798:	9a03      	ldr	r2, [sp, #12]
 801d79a:	2a00      	cmp	r2, #0
 801d79c:	f340 8153 	ble.w	801da46 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d7a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d7a2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d7a6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d7aa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d7ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d7b0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d7b4:	2b00      	cmp	r3, #0
 801d7b6:	dd0e      	ble.n	801d7d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d7b8:	1408      	asrs	r0, r1, #16
 801d7ba:	d405      	bmi.n	801d7c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d7bc:	42b8      	cmp	r0, r7
 801d7be:	da03      	bge.n	801d7c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d7c0:	1410      	asrs	r0, r2, #16
 801d7c2:	d401      	bmi.n	801d7c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d7c4:	42b0      	cmp	r0, r6
 801d7c6:	db07      	blt.n	801d7d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d7c8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d7ca:	4401      	add	r1, r0
 801d7cc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d7ce:	3b01      	subs	r3, #1
 801d7d0:	4402      	add	r2, r0
 801d7d2:	3402      	adds	r4, #2
 801d7d4:	e7ee      	b.n	801d7b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d7d6:	d017      	beq.n	801d808 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d7d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d7da:	1e58      	subs	r0, r3, #1
 801d7dc:	fb05 1500 	mla	r5, r5, r0, r1
 801d7e0:	142d      	asrs	r5, r5, #16
 801d7e2:	d409      	bmi.n	801d7f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d7e4:	42bd      	cmp	r5, r7
 801d7e6:	da07      	bge.n	801d7f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d7e8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d7ea:	fb05 2000 	mla	r0, r5, r0, r2
 801d7ee:	1400      	asrs	r0, r0, #16
 801d7f0:	d402      	bmi.n	801d7f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d7f2:	42b0      	cmp	r0, r6
 801d7f4:	f2c0 80bc 	blt.w	801d970 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d7f8:	2600      	movs	r6, #0
 801d7fa:	1998      	adds	r0, r3, r6
 801d7fc:	2800      	cmp	r0, #0
 801d7fe:	dc3e      	bgt.n	801d87e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d800:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d804:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d808:	f1bb 0f00 	cmp.w	fp, #0
 801d80c:	f340 811b 	ble.w	801da46 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d810:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d814:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d818:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d81c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d81e:	f1bb 0b01 	subs.w	fp, fp, #1
 801d822:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d826:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d82a:	eeb0 6a62 	vmov.f32	s12, s5
 801d82e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d832:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d836:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d83a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d83e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d842:	eeb0 6a43 	vmov.f32	s12, s6
 801d846:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d84a:	ee12 2a90 	vmov	r2, s5
 801d84e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d852:	fb92 f3f3 	sdiv	r3, r2, r3
 801d856:	ee13 2a10 	vmov	r2, s6
 801d85a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d85e:	9311      	str	r3, [sp, #68]	; 0x44
 801d860:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d862:	fb92 f3f3 	sdiv	r3, r2, r3
 801d866:	9a03      	ldr	r2, [sp, #12]
 801d868:	9312      	str	r3, [sp, #72]	; 0x48
 801d86a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d86e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d870:	eeb0 3a67 	vmov.f32	s6, s15
 801d874:	bf08      	it	eq
 801d876:	4613      	moveq	r3, r2
 801d878:	eef0 2a47 	vmov.f32	s5, s14
 801d87c:	e789      	b.n	801d792 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d87e:	140f      	asrs	r7, r1, #16
 801d880:	d426      	bmi.n	801d8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d882:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d886:	42bd      	cmp	r5, r7
 801d888:	dd22      	ble.n	801d8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d88a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d88e:	d41f      	bmi.n	801d8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d890:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d894:	4560      	cmp	r0, ip
 801d896:	dd1b      	ble.n	801d8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d898:	9800      	ldr	r0, [sp, #0]
 801d89a:	b22d      	sxth	r5, r5
 801d89c:	fb0c 0505 	mla	r5, ip, r5, r0
 801d8a0:	5de8      	ldrb	r0, [r5, r7]
 801d8a2:	9d01      	ldr	r5, [sp, #4]
 801d8a4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801d8a8:	0e07      	lsrs	r7, r0, #24
 801d8aa:	2fff      	cmp	r7, #255	; 0xff
 801d8ac:	d116      	bne.n	801d8dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d8ae:	f06f 0501 	mvn.w	r5, #1
 801d8b2:	fb05 f706 	mul.w	r7, r5, r6
 801d8b6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d8ba:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d8be:	0945      	lsrs	r5, r0, #5
 801d8c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d8c4:	ea4c 0505 	orr.w	r5, ip, r5
 801d8c8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d8cc:	4305      	orrs	r5, r0
 801d8ce:	53e5      	strh	r5, [r4, r7]
 801d8d0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d8d2:	4401      	add	r1, r0
 801d8d4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d8d6:	3e01      	subs	r6, #1
 801d8d8:	4402      	add	r2, r0
 801d8da:	e78e      	b.n	801d7fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d8dc:	b2fd      	uxtb	r5, r7
 801d8de:	2f00      	cmp	r7, #0
 801d8e0:	d0f6      	beq.n	801d8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d8e2:	f06f 0701 	mvn.w	r7, #1
 801d8e6:	4377      	muls	r7, r6
 801d8e8:	fa1f f985 	uxth.w	r9, r5
 801d8ec:	f834 8007 	ldrh.w	r8, [r4, r7]
 801d8f0:	9702      	str	r7, [sp, #8]
 801d8f2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d8f6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d8fa:	43ed      	mvns	r5, r5
 801d8fc:	b2ed      	uxtb	r5, r5
 801d8fe:	fb17 f709 	smulbb	r7, r7, r9
 801d902:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d906:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d90a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d90e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801d912:	b2c0      	uxtb	r0, r0
 801d914:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d918:	fa5f f888 	uxtb.w	r8, r8
 801d91c:	fb10 f009 	smulbb	r0, r0, r9
 801d920:	fb08 0005 	mla	r0, r8, r5, r0
 801d924:	b280      	uxth	r0, r0
 801d926:	fa1f fc8c 	uxth.w	ip, ip
 801d92a:	fb1a fa09 	smulbb	sl, sl, r9
 801d92e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d932:	fb07 a705 	mla	r7, r7, r5, sl
 801d936:	f100 0a01 	add.w	sl, r0, #1
 801d93a:	f10c 0501 	add.w	r5, ip, #1
 801d93e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d942:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d946:	b2bf      	uxth	r7, r7
 801d948:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d94c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d950:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d954:	f107 0a01 	add.w	sl, r7, #1
 801d958:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d95c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d960:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d964:	9802      	ldr	r0, [sp, #8]
 801d966:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d96a:	f824 c000 	strh.w	ip, [r4, r0]
 801d96e:	e7af      	b.n	801d8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d970:	f04f 0800 	mov.w	r8, #0
 801d974:	eba3 0008 	sub.w	r0, r3, r8
 801d978:	2800      	cmp	r0, #0
 801d97a:	f77f af41 	ble.w	801d800 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d97e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d982:	9f00      	ldr	r7, [sp, #0]
 801d984:	1410      	asrs	r0, r2, #16
 801d986:	140d      	asrs	r5, r1, #16
 801d988:	fb06 7000 	mla	r0, r6, r0, r7
 801d98c:	5d40      	ldrb	r0, [r0, r5]
 801d98e:	9d01      	ldr	r5, [sp, #4]
 801d990:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d994:	0e2e      	lsrs	r6, r5, #24
 801d996:	2eff      	cmp	r6, #255	; 0xff
 801d998:	d112      	bne.n	801d9c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801d99a:	482c      	ldr	r0, [pc, #176]	; (801da4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801d99c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d9a0:	0968      	lsrs	r0, r5, #5
 801d9a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d9a6:	4330      	orrs	r0, r6
 801d9a8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d9ac:	4328      	orrs	r0, r5
 801d9ae:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801d9b2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d9b4:	4401      	add	r1, r0
 801d9b6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d9b8:	f108 0801 	add.w	r8, r8, #1
 801d9bc:	4402      	add	r2, r0
 801d9be:	e7d9      	b.n	801d974 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d9c0:	b2f0      	uxtb	r0, r6
 801d9c2:	2e00      	cmp	r6, #0
 801d9c4:	d0f5      	beq.n	801d9b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d9c6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801d9ca:	fa1f f980 	uxth.w	r9, r0
 801d9ce:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d9d2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d9d6:	43c0      	mvns	r0, r0
 801d9d8:	b2c0      	uxtb	r0, r0
 801d9da:	fb16 f609 	smulbb	r6, r6, r9
 801d9de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d9e2:	fb07 6700 	mla	r7, r7, r0, r6
 801d9e6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d9ea:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d9ee:	b2ed      	uxtb	r5, r5
 801d9f0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d9f4:	fa5f fc8c 	uxtb.w	ip, ip
 801d9f8:	fb15 f509 	smulbb	r5, r5, r9
 801d9fc:	fb0c 5500 	mla	r5, ip, r0, r5
 801da00:	b2bf      	uxth	r7, r7
 801da02:	fb1a fa09 	smulbb	sl, sl, r9
 801da06:	b2ad      	uxth	r5, r5
 801da08:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801da0c:	fb06 a600 	mla	r6, r6, r0, sl
 801da10:	1c78      	adds	r0, r7, #1
 801da12:	f105 0a01 	add.w	sl, r5, #1
 801da16:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801da1a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801da1e:	b2b6      	uxth	r6, r6
 801da20:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801da24:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801da28:	ea4a 0707 	orr.w	r7, sl, r7
 801da2c:	f106 0a01 	add.w	sl, r6, #1
 801da30:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801da34:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801da38:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801da3c:	ea47 070a 	orr.w	r7, r7, sl
 801da40:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801da44:	e7b5      	b.n	801d9b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801da46:	b005      	add	sp, #20
 801da48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da4c:	fffff800 	.word	0xfffff800

0801da50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801da50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da54:	b087      	sub	sp, #28
 801da56:	468b      	mov	fp, r1
 801da58:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801da5a:	9204      	str	r2, [sp, #16]
 801da5c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801da60:	9205      	str	r2, [sp, #20]
 801da62:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801da66:	6861      	ldr	r1, [r4, #4]
 801da68:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801da6c:	fb01 2000 	mla	r0, r1, r0, r2
 801da70:	6822      	ldr	r2, [r4, #0]
 801da72:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801da76:	f8de 2000 	ldr.w	r2, [lr]
 801da7a:	9201      	str	r2, [sp, #4]
 801da7c:	f8de 2004 	ldr.w	r2, [lr, #4]
 801da80:	9202      	str	r2, [sp, #8]
 801da82:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801da86:	f1bb 0f00 	cmp.w	fp, #0
 801da8a:	dc03      	bgt.n	801da94 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801da8c:	9a04      	ldr	r2, [sp, #16]
 801da8e:	2a00      	cmp	r2, #0
 801da90:	f340 8142 	ble.w	801dd18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801da94:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801da96:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801da9a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801da9e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801daa2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801daa4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801daa8:	2b00      	cmp	r3, #0
 801daaa:	dd0e      	ble.n	801daca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801daac:	140c      	asrs	r4, r1, #16
 801daae:	d405      	bmi.n	801dabc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dab0:	42bc      	cmp	r4, r7
 801dab2:	da03      	bge.n	801dabc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dab4:	1414      	asrs	r4, r2, #16
 801dab6:	d401      	bmi.n	801dabc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dab8:	42b4      	cmp	r4, r6
 801daba:	db07      	blt.n	801dacc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dabc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801dabe:	4421      	add	r1, r4
 801dac0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dac2:	3b01      	subs	r3, #1
 801dac4:	4422      	add	r2, r4
 801dac6:	3002      	adds	r0, #2
 801dac8:	e7ee      	b.n	801daa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801daca:	d019      	beq.n	801db00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801dacc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801dace:	1e5c      	subs	r4, r3, #1
 801dad0:	fb05 1504 	mla	r5, r5, r4, r1
 801dad4:	142d      	asrs	r5, r5, #16
 801dad6:	d409      	bmi.n	801daec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801dad8:	42bd      	cmp	r5, r7
 801dada:	da07      	bge.n	801daec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801dadc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dade:	fb05 2404 	mla	r4, r5, r4, r2
 801dae2:	1424      	asrs	r4, r4, #16
 801dae4:	d402      	bmi.n	801daec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801dae6:	42b4      	cmp	r4, r6
 801dae8:	f2c0 80b1 	blt.w	801dc4e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801daec:	f04f 0800 	mov.w	r8, #0
 801daf0:	eb03 0408 	add.w	r4, r3, r8
 801daf4:	2c00      	cmp	r4, #0
 801daf6:	dc3e      	bgt.n	801db76 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801daf8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dafc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801db00:	f1bb 0f00 	cmp.w	fp, #0
 801db04:	f340 8108 	ble.w	801dd18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801db08:	ee30 0a04 	vadd.f32	s0, s0, s8
 801db0c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801db10:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801db14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801db16:	f1bb 0b01 	subs.w	fp, fp, #1
 801db1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801db1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801db22:	eeb0 6a62 	vmov.f32	s12, s5
 801db26:	ee61 7a27 	vmul.f32	s15, s2, s15
 801db2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801db2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801db32:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801db36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801db3a:	eeb0 6a43 	vmov.f32	s12, s6
 801db3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801db42:	ee12 2a90 	vmov	r2, s5
 801db46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801db4a:	fb92 f3f3 	sdiv	r3, r2, r3
 801db4e:	ee13 2a10 	vmov	r2, s6
 801db52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801db56:	9313      	str	r3, [sp, #76]	; 0x4c
 801db58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801db5a:	fb92 f3f3 	sdiv	r3, r2, r3
 801db5e:	9a04      	ldr	r2, [sp, #16]
 801db60:	9314      	str	r3, [sp, #80]	; 0x50
 801db62:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801db66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801db68:	eeb0 3a67 	vmov.f32	s6, s15
 801db6c:	bf08      	it	eq
 801db6e:	4613      	moveq	r3, r2
 801db70:	eef0 2a47 	vmov.f32	s5, s14
 801db74:	e787      	b.n	801da86 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801db76:	140e      	asrs	r6, r1, #16
 801db78:	d462      	bmi.n	801dc40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801db7a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801db7e:	42b5      	cmp	r5, r6
 801db80:	dd5e      	ble.n	801dc40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801db82:	1417      	asrs	r7, r2, #16
 801db84:	d45c      	bmi.n	801dc40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801db86:	f8de 400c 	ldr.w	r4, [lr, #12]
 801db8a:	42bc      	cmp	r4, r7
 801db8c:	dd58      	ble.n	801dc40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801db8e:	b22d      	sxth	r5, r5
 801db90:	fb07 6505 	mla	r5, r7, r5, r6
 801db94:	9c02      	ldr	r4, [sp, #8]
 801db96:	5d66      	ldrb	r6, [r4, r5]
 801db98:	2e00      	cmp	r6, #0
 801db9a:	d051      	beq.n	801dc40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801db9c:	9c01      	ldr	r4, [sp, #4]
 801db9e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801dba2:	f06f 0401 	mvn.w	r4, #1
 801dba6:	fb04 f408 	mul.w	r4, r4, r8
 801dbaa:	9403      	str	r4, [sp, #12]
 801dbac:	5b05      	ldrh	r5, [r0, r4]
 801dbae:	9c05      	ldr	r4, [sp, #20]
 801dbb0:	4366      	muls	r6, r4
 801dbb2:	1c74      	adds	r4, r6, #1
 801dbb4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801dbb8:	1224      	asrs	r4, r4, #8
 801dbba:	b2a7      	uxth	r7, r4
 801dbbc:	122e      	asrs	r6, r5, #8
 801dbbe:	43e4      	mvns	r4, r4
 801dbc0:	b2e4      	uxtb	r4, r4
 801dbc2:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801dbc6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dbca:	fb16 f604 	smulbb	r6, r6, r4
 801dbce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801dbd2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dbd6:	00ed      	lsls	r5, r5, #3
 801dbd8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801dbdc:	b2ed      	uxtb	r5, r5
 801dbde:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801dbe2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801dbe6:	fb15 f504 	smulbb	r5, r5, r4
 801dbea:	fa5f f989 	uxtb.w	r9, r9
 801dbee:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801dbf2:	fb09 5507 	mla	r5, r9, r7, r5
 801dbf6:	fb1a fa04 	smulbb	sl, sl, r4
 801dbfa:	fa1f fc8c 	uxth.w	ip, ip
 801dbfe:	b2ad      	uxth	r5, r5
 801dc00:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dc04:	fb06 a607 	mla	r6, r6, r7, sl
 801dc08:	f10c 0401 	add.w	r4, ip, #1
 801dc0c:	f105 0a01 	add.w	sl, r5, #1
 801dc10:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dc14:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dc18:	b2b6      	uxth	r6, r6
 801dc1a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dc1e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dc22:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dc26:	f106 0a01 	add.w	sl, r6, #1
 801dc2a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dc2e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dc32:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dc36:	9c03      	ldr	r4, [sp, #12]
 801dc38:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dc3c:	f820 c004 	strh.w	ip, [r0, r4]
 801dc40:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801dc42:	4421      	add	r1, r4
 801dc44:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dc46:	f108 38ff 	add.w	r8, r8, #4294967295
 801dc4a:	4422      	add	r2, r4
 801dc4c:	e750      	b.n	801daf0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801dc4e:	f04f 0900 	mov.w	r9, #0
 801dc52:	eba3 0409 	sub.w	r4, r3, r9
 801dc56:	2c00      	cmp	r4, #0
 801dc58:	f77f af4e 	ble.w	801daf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801dc5c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801dc60:	140d      	asrs	r5, r1, #16
 801dc62:	1414      	asrs	r4, r2, #16
 801dc64:	fb06 5404 	mla	r4, r6, r4, r5
 801dc68:	9d02      	ldr	r5, [sp, #8]
 801dc6a:	5d2e      	ldrb	r6, [r5, r4]
 801dc6c:	2e00      	cmp	r6, #0
 801dc6e:	d04c      	beq.n	801dd0a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801dc70:	9d01      	ldr	r5, [sp, #4]
 801dc72:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801dc76:	9c05      	ldr	r4, [sp, #20]
 801dc78:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801dc7c:	4366      	muls	r6, r4
 801dc7e:	1c74      	adds	r4, r6, #1
 801dc80:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801dc84:	1224      	asrs	r4, r4, #8
 801dc86:	b2a7      	uxth	r7, r4
 801dc88:	122e      	asrs	r6, r5, #8
 801dc8a:	43e4      	mvns	r4, r4
 801dc8c:	b2e4      	uxtb	r4, r4
 801dc8e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801dc92:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dc96:	fb16 f604 	smulbb	r6, r6, r4
 801dc9a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801dc9e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dca2:	00ed      	lsls	r5, r5, #3
 801dca4:	fb0c 6c07 	mla	ip, ip, r7, r6
 801dca8:	b2ed      	uxtb	r5, r5
 801dcaa:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801dcae:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801dcb2:	fb15 f504 	smulbb	r5, r5, r4
 801dcb6:	fa5f f888 	uxtb.w	r8, r8
 801dcba:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801dcbe:	fb08 5507 	mla	r5, r8, r7, r5
 801dcc2:	fb1a fa04 	smulbb	sl, sl, r4
 801dcc6:	fa1f fc8c 	uxth.w	ip, ip
 801dcca:	b2ad      	uxth	r5, r5
 801dccc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dcd0:	fb06 a607 	mla	r6, r6, r7, sl
 801dcd4:	f10c 0401 	add.w	r4, ip, #1
 801dcd8:	f105 0a01 	add.w	sl, r5, #1
 801dcdc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dce0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dce4:	b2b6      	uxth	r6, r6
 801dce6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dcea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dcee:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dcf2:	f106 0a01 	add.w	sl, r6, #1
 801dcf6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dcfa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dcfe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dd02:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dd06:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801dd0a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801dd0c:	4421      	add	r1, r4
 801dd0e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dd10:	f109 0901 	add.w	r9, r9, #1
 801dd14:	4422      	add	r2, r4
 801dd16:	e79c      	b.n	801dc52 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801dd18:	b007      	add	sp, #28
 801dd1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dd1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dd1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd22:	b085      	sub	sp, #20
 801dd24:	468b      	mov	fp, r1
 801dd26:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801dd28:	9203      	str	r2, [sp, #12]
 801dd2a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801dd2e:	6861      	ldr	r1, [r4, #4]
 801dd30:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801dd34:	fb01 2000 	mla	r0, r1, r0, r2
 801dd38:	6822      	ldr	r2, [r4, #0]
 801dd3a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801dd3e:	f8d8 2000 	ldr.w	r2, [r8]
 801dd42:	9200      	str	r2, [sp, #0]
 801dd44:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801dd48:	9201      	str	r2, [sp, #4]
 801dd4a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dd4e:	f1bb 0f00 	cmp.w	fp, #0
 801dd52:	dc03      	bgt.n	801dd5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801dd54:	9a03      	ldr	r2, [sp, #12]
 801dd56:	2a00      	cmp	r2, #0
 801dd58:	f340 8146 	ble.w	801dfe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801dd5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dd5e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801dd62:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801dd66:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801dd6a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dd6c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801dd70:	2b00      	cmp	r3, #0
 801dd72:	dd0e      	ble.n	801dd92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801dd74:	140c      	asrs	r4, r1, #16
 801dd76:	d405      	bmi.n	801dd84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dd78:	42bc      	cmp	r4, r7
 801dd7a:	da03      	bge.n	801dd84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dd7c:	1414      	asrs	r4, r2, #16
 801dd7e:	d401      	bmi.n	801dd84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801dd80:	42b4      	cmp	r4, r6
 801dd82:	db07      	blt.n	801dd94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dd84:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dd86:	4421      	add	r1, r4
 801dd88:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dd8a:	3b01      	subs	r3, #1
 801dd8c:	4422      	add	r2, r4
 801dd8e:	3002      	adds	r0, #2
 801dd90:	e7ee      	b.n	801dd70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801dd92:	d017      	beq.n	801ddc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801dd94:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dd96:	1e5c      	subs	r4, r3, #1
 801dd98:	fb05 1504 	mla	r5, r5, r4, r1
 801dd9c:	142d      	asrs	r5, r5, #16
 801dd9e:	d409      	bmi.n	801ddb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801dda0:	42bd      	cmp	r5, r7
 801dda2:	da07      	bge.n	801ddb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801dda4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801dda6:	fb05 2404 	mla	r4, r5, r4, r2
 801ddaa:	1424      	asrs	r4, r4, #16
 801ddac:	d402      	bmi.n	801ddb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ddae:	42b4      	cmp	r4, r6
 801ddb0:	f2c0 80b3 	blt.w	801df1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801ddb4:	2600      	movs	r6, #0
 801ddb6:	199c      	adds	r4, r3, r6
 801ddb8:	2c00      	cmp	r4, #0
 801ddba:	dc3e      	bgt.n	801de3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ddbc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ddc0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ddc4:	f1bb 0f00 	cmp.w	fp, #0
 801ddc8:	f340 810e 	ble.w	801dfe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ddcc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ddd0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ddd4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ddd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ddda:	f1bb 0b01 	subs.w	fp, fp, #1
 801ddde:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dde2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dde6:	eeb0 6a62 	vmov.f32	s12, s5
 801ddea:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ddee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ddf2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ddf6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ddfa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ddfe:	eeb0 6a43 	vmov.f32	s12, s6
 801de02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de06:	ee12 2a90 	vmov	r2, s5
 801de0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de0e:	fb92 f3f3 	sdiv	r3, r2, r3
 801de12:	ee13 2a10 	vmov	r2, s6
 801de16:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de1a:	9311      	str	r3, [sp, #68]	; 0x44
 801de1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801de1e:	fb92 f3f3 	sdiv	r3, r2, r3
 801de22:	9a03      	ldr	r2, [sp, #12]
 801de24:	9312      	str	r3, [sp, #72]	; 0x48
 801de26:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801de2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801de2c:	eeb0 3a67 	vmov.f32	s6, s15
 801de30:	bf08      	it	eq
 801de32:	4613      	moveq	r3, r2
 801de34:	eef0 2a47 	vmov.f32	s5, s14
 801de38:	e789      	b.n	801dd4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801de3a:	140f      	asrs	r7, r1, #16
 801de3c:	d418      	bmi.n	801de70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801de3e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801de42:	42bd      	cmp	r5, r7
 801de44:	dd14      	ble.n	801de70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801de46:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801de4a:	d411      	bmi.n	801de70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801de4c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801de50:	4564      	cmp	r4, ip
 801de52:	dd0d      	ble.n	801de70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801de54:	b22d      	sxth	r5, r5
 801de56:	fb0c 7505 	mla	r5, ip, r5, r7
 801de5a:	9c01      	ldr	r4, [sp, #4]
 801de5c:	5d64      	ldrb	r4, [r4, r5]
 801de5e:	2cff      	cmp	r4, #255	; 0xff
 801de60:	d10c      	bne.n	801de7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801de62:	9c00      	ldr	r4, [sp, #0]
 801de64:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801de68:	f06f 0401 	mvn.w	r4, #1
 801de6c:	4374      	muls	r4, r6
 801de6e:	5305      	strh	r5, [r0, r4]
 801de70:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801de72:	4421      	add	r1, r4
 801de74:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801de76:	3e01      	subs	r6, #1
 801de78:	4422      	add	r2, r4
 801de7a:	e79c      	b.n	801ddb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801de7c:	2c00      	cmp	r4, #0
 801de7e:	d0f7      	beq.n	801de70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801de80:	9f00      	ldr	r7, [sp, #0]
 801de82:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801de86:	f06f 0501 	mvn.w	r5, #1
 801de8a:	4375      	muls	r5, r6
 801de8c:	9502      	str	r5, [sp, #8]
 801de8e:	5b45      	ldrh	r5, [r0, r5]
 801de90:	fa1f fc84 	uxth.w	ip, r4
 801de94:	122f      	asrs	r7, r5, #8
 801de96:	43e4      	mvns	r4, r4
 801de98:	b2e4      	uxtb	r4, r4
 801de9a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801de9e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dea2:	fb17 f704 	smulbb	r7, r7, r4
 801dea6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801deaa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801deae:	00ed      	lsls	r5, r5, #3
 801deb0:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801deb4:	b2ed      	uxtb	r5, r5
 801deb6:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801deba:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801debe:	fb15 f504 	smulbb	r5, r5, r4
 801dec2:	fa5f f989 	uxtb.w	r9, r9
 801dec6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801deca:	fb09 550c 	mla	r5, r9, ip, r5
 801dece:	fb1a fa04 	smulbb	sl, sl, r4
 801ded2:	fa1f fe8e 	uxth.w	lr, lr
 801ded6:	b2ad      	uxth	r5, r5
 801ded8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dedc:	fb07 a70c 	mla	r7, r7, ip, sl
 801dee0:	f10e 0401 	add.w	r4, lr, #1
 801dee4:	f105 0a01 	add.w	sl, r5, #1
 801dee8:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801deec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801def0:	b2bf      	uxth	r7, r7
 801def2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801def6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801defa:	ea4a 0e0e 	orr.w	lr, sl, lr
 801defe:	f107 0a01 	add.w	sl, r7, #1
 801df02:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801df06:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801df0a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801df0e:	9c02      	ldr	r4, [sp, #8]
 801df10:	ea4e 0e0a 	orr.w	lr, lr, sl
 801df14:	f820 e004 	strh.w	lr, [r0, r4]
 801df18:	e7aa      	b.n	801de70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801df1a:	f04f 0900 	mov.w	r9, #0
 801df1e:	eba3 0409 	sub.w	r4, r3, r9
 801df22:	2c00      	cmp	r4, #0
 801df24:	f77f af4a 	ble.w	801ddbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801df28:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801df2c:	1414      	asrs	r4, r2, #16
 801df2e:	140d      	asrs	r5, r1, #16
 801df30:	fb06 5504 	mla	r5, r6, r4, r5
 801df34:	9c01      	ldr	r4, [sp, #4]
 801df36:	5d64      	ldrb	r4, [r4, r5]
 801df38:	2cff      	cmp	r4, #255	; 0xff
 801df3a:	d10b      	bne.n	801df54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801df3c:	9c00      	ldr	r4, [sp, #0]
 801df3e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801df42:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801df46:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801df48:	4421      	add	r1, r4
 801df4a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801df4c:	f109 0901 	add.w	r9, r9, #1
 801df50:	4422      	add	r2, r4
 801df52:	e7e4      	b.n	801df1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801df54:	2c00      	cmp	r4, #0
 801df56:	d0f6      	beq.n	801df46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801df58:	9e00      	ldr	r6, [sp, #0]
 801df5a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801df5e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801df62:	b2a7      	uxth	r7, r4
 801df64:	122e      	asrs	r6, r5, #8
 801df66:	43e4      	mvns	r4, r4
 801df68:	b2e4      	uxtb	r4, r4
 801df6a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801df6e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801df72:	fb16 f604 	smulbb	r6, r6, r4
 801df76:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801df7a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801df7e:	00ed      	lsls	r5, r5, #3
 801df80:	fb0c 6c07 	mla	ip, ip, r7, r6
 801df84:	b2ed      	uxtb	r5, r5
 801df86:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801df8a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801df8e:	fb15 f504 	smulbb	r5, r5, r4
 801df92:	fa5f fe8e 	uxtb.w	lr, lr
 801df96:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801df9a:	fb0e 5507 	mla	r5, lr, r7, r5
 801df9e:	fb1a fa04 	smulbb	sl, sl, r4
 801dfa2:	fa1f fc8c 	uxth.w	ip, ip
 801dfa6:	b2ad      	uxth	r5, r5
 801dfa8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801dfac:	fb06 a607 	mla	r6, r6, r7, sl
 801dfb0:	f10c 0401 	add.w	r4, ip, #1
 801dfb4:	f105 0a01 	add.w	sl, r5, #1
 801dfb8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dfbc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dfc0:	b2b6      	uxth	r6, r6
 801dfc2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dfc6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dfca:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dfce:	f106 0a01 	add.w	sl, r6, #1
 801dfd2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dfd6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dfda:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dfde:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dfe2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801dfe6:	e7ae      	b.n	801df46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801dfe8:	b005      	add	sp, #20
 801dfea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dfee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dfee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dff2:	b085      	sub	sp, #20
 801dff4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dff6:	9203      	str	r2, [sp, #12]
 801dff8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801dffc:	9201      	str	r2, [sp, #4]
 801dffe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e002:	9100      	str	r1, [sp, #0]
 801e004:	6841      	ldr	r1, [r0, #4]
 801e006:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801e00a:	fb01 2404 	mla	r4, r1, r4, r2
 801e00e:	6802      	ldr	r2, [r0, #0]
 801e010:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e014:	f8de 2000 	ldr.w	r2, [lr]
 801e018:	9202      	str	r2, [sp, #8]
 801e01a:	9a01      	ldr	r2, [sp, #4]
 801e01c:	43d6      	mvns	r6, r2
 801e01e:	b2f6      	uxtb	r6, r6
 801e020:	9a00      	ldr	r2, [sp, #0]
 801e022:	2a00      	cmp	r2, #0
 801e024:	dc03      	bgt.n	801e02e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801e026:	9a03      	ldr	r2, [sp, #12]
 801e028:	2a00      	cmp	r2, #0
 801e02a:	f340 8124 	ble.w	801e276 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801e02e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e030:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801e034:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801e038:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e03c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e03e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e042:	2b00      	cmp	r3, #0
 801e044:	dd0e      	ble.n	801e064 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e046:	1408      	asrs	r0, r1, #16
 801e048:	d405      	bmi.n	801e056 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e04a:	4560      	cmp	r0, ip
 801e04c:	da03      	bge.n	801e056 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e04e:	1410      	asrs	r0, r2, #16
 801e050:	d401      	bmi.n	801e056 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e052:	42b8      	cmp	r0, r7
 801e054:	db07      	blt.n	801e066 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e056:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e058:	4401      	add	r1, r0
 801e05a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e05c:	3b01      	subs	r3, #1
 801e05e:	4402      	add	r2, r0
 801e060:	3402      	adds	r4, #2
 801e062:	e7ee      	b.n	801e042 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e064:	d06e      	beq.n	801e144 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801e066:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e068:	1e58      	subs	r0, r3, #1
 801e06a:	fb05 1500 	mla	r5, r5, r0, r1
 801e06e:	142d      	asrs	r5, r5, #16
 801e070:	d45c      	bmi.n	801e12c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e072:	4565      	cmp	r5, ip
 801e074:	da5a      	bge.n	801e12c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e076:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e078:	fb05 2000 	mla	r0, r5, r0, r2
 801e07c:	1400      	asrs	r0, r0, #16
 801e07e:	d455      	bmi.n	801e12c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e080:	42b8      	cmp	r0, r7
 801e082:	da53      	bge.n	801e12c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801e084:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801e088:	4699      	mov	r9, r3
 801e08a:	46a2      	mov	sl, r4
 801e08c:	f1b9 0f00 	cmp.w	r9, #0
 801e090:	dd54      	ble.n	801e13c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801e092:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801e096:	140d      	asrs	r5, r1, #16
 801e098:	1410      	asrs	r0, r2, #16
 801e09a:	fb07 5000 	mla	r0, r7, r0, r5
 801e09e:	9d02      	ldr	r5, [sp, #8]
 801e0a0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801e0a4:	f8ba 5000 	ldrh.w	r5, [sl]
 801e0a8:	122f      	asrs	r7, r5, #8
 801e0aa:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801e0ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e0b2:	fb17 f706 	smulbb	r7, r7, r6
 801e0b6:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801e0ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e0be:	00ed      	lsls	r5, r5, #3
 801e0c0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801e0c4:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801e0c8:	10c7      	asrs	r7, r0, #3
 801e0ca:	b2ed      	uxtb	r5, r5
 801e0cc:	00c0      	lsls	r0, r0, #3
 801e0ce:	fb18 f806 	smulbb	r8, r8, r6
 801e0d2:	fb15 f506 	smulbb	r5, r5, r6
 801e0d6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e0da:	b2c0      	uxtb	r0, r0
 801e0dc:	fa1f fc8c 	uxth.w	ip, ip
 801e0e0:	fb07 870b 	mla	r7, r7, fp, r8
 801e0e4:	fb00 500b 	mla	r0, r0, fp, r5
 801e0e8:	b280      	uxth	r0, r0
 801e0ea:	b2bf      	uxth	r7, r7
 801e0ec:	f10c 0501 	add.w	r5, ip, #1
 801e0f0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e0f4:	f107 0801 	add.w	r8, r7, #1
 801e0f8:	1c45      	adds	r5, r0, #1
 801e0fa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e0fe:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801e102:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e104:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e108:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e10c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e110:	ea45 0c0c 	orr.w	ip, r5, ip
 801e114:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e118:	4401      	add	r1, r0
 801e11a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e11c:	ea4c 0c08 	orr.w	ip, ip, r8
 801e120:	f82a cb02 	strh.w	ip, [sl], #2
 801e124:	4402      	add	r2, r0
 801e126:	f109 39ff 	add.w	r9, r9, #4294967295
 801e12a:	e7af      	b.n	801e08c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e12c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801e130:	f04f 0800 	mov.w	r8, #0
 801e134:	eb03 0008 	add.w	r0, r3, r8
 801e138:	2800      	cmp	r0, #0
 801e13a:	dc41      	bgt.n	801e1c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801e13c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e140:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e144:	9b00      	ldr	r3, [sp, #0]
 801e146:	2b00      	cmp	r3, #0
 801e148:	f340 8095 	ble.w	801e276 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801e14c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e150:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e154:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e158:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e15a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e15e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e162:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e166:	eef0 6a62 	vmov.f32	s13, s5
 801e16a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e16e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e172:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e176:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801e17a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e17e:	eef0 6a43 	vmov.f32	s13, s6
 801e182:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e186:	ee12 2a90 	vmov	r2, s5
 801e18a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e18e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e192:	ee13 2a10 	vmov	r2, s6
 801e196:	9311      	str	r3, [sp, #68]	; 0x44
 801e198:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e19a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e19e:	9312      	str	r3, [sp, #72]	; 0x48
 801e1a0:	9b00      	ldr	r3, [sp, #0]
 801e1a2:	9a03      	ldr	r2, [sp, #12]
 801e1a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e1a8:	3b01      	subs	r3, #1
 801e1aa:	9300      	str	r3, [sp, #0]
 801e1ac:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801e1b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e1b2:	eeb0 3a67 	vmov.f32	s6, s15
 801e1b6:	bf08      	it	eq
 801e1b8:	4613      	moveq	r3, r2
 801e1ba:	eef0 2a47 	vmov.f32	s5, s14
 801e1be:	e72f      	b.n	801e020 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801e1c0:	140f      	asrs	r7, r1, #16
 801e1c2:	d451      	bmi.n	801e268 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e1c4:	f8de 5008 	ldr.w	r5, [lr, #8]
 801e1c8:	42bd      	cmp	r5, r7
 801e1ca:	dd4d      	ble.n	801e268 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e1cc:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e1d0:	d44a      	bmi.n	801e268 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e1d2:	f8de 000c 	ldr.w	r0, [lr, #12]
 801e1d6:	4560      	cmp	r0, ip
 801e1d8:	dd46      	ble.n	801e268 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801e1da:	b22d      	sxth	r5, r5
 801e1dc:	fb0c 7505 	mla	r5, ip, r5, r7
 801e1e0:	9802      	ldr	r0, [sp, #8]
 801e1e2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801e1e6:	f06f 0501 	mvn.w	r5, #1
 801e1ea:	fb05 fb08 	mul.w	fp, r5, r8
 801e1ee:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801e1f2:	f834 500b 	ldrh.w	r5, [r4, fp]
 801e1f6:	122f      	asrs	r7, r5, #8
 801e1f8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e1fc:	fb17 f706 	smulbb	r7, r7, r6
 801e200:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e204:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e208:	00ed      	lsls	r5, r5, #3
 801e20a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801e20e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e212:	10c7      	asrs	r7, r0, #3
 801e214:	b2ed      	uxtb	r5, r5
 801e216:	00c0      	lsls	r0, r0, #3
 801e218:	fb19 f906 	smulbb	r9, r9, r6
 801e21c:	fb15 f506 	smulbb	r5, r5, r6
 801e220:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e224:	b2c0      	uxtb	r0, r0
 801e226:	fa1f fc8c 	uxth.w	ip, ip
 801e22a:	fb07 970a 	mla	r7, r7, sl, r9
 801e22e:	fb00 500a 	mla	r0, r0, sl, r5
 801e232:	b2bf      	uxth	r7, r7
 801e234:	b280      	uxth	r0, r0
 801e236:	f10c 0501 	add.w	r5, ip, #1
 801e23a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e23e:	f107 0901 	add.w	r9, r7, #1
 801e242:	1c45      	adds	r5, r0, #1
 801e244:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e248:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801e24c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e250:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e254:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e258:	ea45 0c0c 	orr.w	ip, r5, ip
 801e25c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e260:	ea4c 0c09 	orr.w	ip, ip, r9
 801e264:	f824 c00b 	strh.w	ip, [r4, fp]
 801e268:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e26a:	4401      	add	r1, r0
 801e26c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e26e:	f108 38ff 	add.w	r8, r8, #4294967295
 801e272:	4402      	add	r2, r0
 801e274:	e75e      	b.n	801e134 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801e276:	b005      	add	sp, #20
 801e278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e27c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e27c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e280:	b085      	sub	sp, #20
 801e282:	4693      	mov	fp, r2
 801e284:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801e286:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e288:	6870      	ldr	r0, [r6, #4]
 801e28a:	9101      	str	r1, [sp, #4]
 801e28c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e290:	fb00 2404 	mla	r4, r0, r4, r2
 801e294:	6832      	ldr	r2, [r6, #0]
 801e296:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801e29a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e29e:	682a      	ldr	r2, [r5, #0]
 801e2a0:	9202      	str	r2, [sp, #8]
 801e2a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e2a6:	9a01      	ldr	r2, [sp, #4]
 801e2a8:	2a00      	cmp	r2, #0
 801e2aa:	dc03      	bgt.n	801e2b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e2ac:	f1bb 0f00 	cmp.w	fp, #0
 801e2b0:	f340 809a 	ble.w	801e3e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801e2b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e2b6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801e2ba:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801e2be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e2c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e2c4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e2c8:	2b00      	cmp	r3, #0
 801e2ca:	dd0c      	ble.n	801e2e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801e2cc:	1406      	asrs	r6, r0, #16
 801e2ce:	d405      	bmi.n	801e2dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e2d0:	454e      	cmp	r6, r9
 801e2d2:	da03      	bge.n	801e2dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e2d4:	1416      	asrs	r6, r2, #16
 801e2d6:	d401      	bmi.n	801e2dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e2d8:	4546      	cmp	r6, r8
 801e2da:	db05      	blt.n	801e2e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e2dc:	4470      	add	r0, lr
 801e2de:	4462      	add	r2, ip
 801e2e0:	3b01      	subs	r3, #1
 801e2e2:	3402      	adds	r4, #2
 801e2e4:	e7f0      	b.n	801e2c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e2e6:	d00f      	beq.n	801e308 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801e2e8:	1e5e      	subs	r6, r3, #1
 801e2ea:	fb0e 0706 	mla	r7, lr, r6, r0
 801e2ee:	143f      	asrs	r7, r7, #16
 801e2f0:	d541      	bpl.n	801e376 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801e2f2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801e2f6:	4698      	mov	r8, r3
 801e2f8:	9603      	str	r6, [sp, #12]
 801e2fa:	f1b8 0f00 	cmp.w	r8, #0
 801e2fe:	dc56      	bgt.n	801e3ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801e300:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e304:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e308:	9b01      	ldr	r3, [sp, #4]
 801e30a:	2b00      	cmp	r3, #0
 801e30c:	dd6c      	ble.n	801e3e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801e30e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e312:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e316:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e31a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e31c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e320:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e324:	eeb0 6a62 	vmov.f32	s12, s5
 801e328:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e32c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e330:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e334:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e338:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e33c:	eeb0 6a43 	vmov.f32	s12, s6
 801e340:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e344:	ee12 2a90 	vmov	r2, s5
 801e348:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e34c:	fb92 fef3 	sdiv	lr, r2, r3
 801e350:	ee13 2a10 	vmov	r2, s6
 801e354:	fb92 fcf3 	sdiv	ip, r2, r3
 801e358:	9b01      	ldr	r3, [sp, #4]
 801e35a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e35e:	3b01      	subs	r3, #1
 801e360:	9301      	str	r3, [sp, #4]
 801e362:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e366:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e368:	eeb0 3a67 	vmov.f32	s6, s15
 801e36c:	bf08      	it	eq
 801e36e:	465b      	moveq	r3, fp
 801e370:	eef0 2a47 	vmov.f32	s5, s14
 801e374:	e797      	b.n	801e2a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e376:	454f      	cmp	r7, r9
 801e378:	dabb      	bge.n	801e2f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e37a:	fb0c 2606 	mla	r6, ip, r6, r2
 801e37e:	1436      	asrs	r6, r6, #16
 801e380:	d4b7      	bmi.n	801e2f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e382:	4546      	cmp	r6, r8
 801e384:	dab5      	bge.n	801e2f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e386:	461e      	mov	r6, r3
 801e388:	46a0      	mov	r8, r4
 801e38a:	2e00      	cmp	r6, #0
 801e38c:	ddb8      	ble.n	801e300 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e38e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801e392:	9902      	ldr	r1, [sp, #8]
 801e394:	1417      	asrs	r7, r2, #16
 801e396:	ea4f 4920 	mov.w	r9, r0, asr #16
 801e39a:	fb0a 9707 	mla	r7, sl, r7, r9
 801e39e:	4470      	add	r0, lr
 801e3a0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801e3a4:	f828 7b02 	strh.w	r7, [r8], #2
 801e3a8:	4462      	add	r2, ip
 801e3aa:	3e01      	subs	r6, #1
 801e3ac:	e7ed      	b.n	801e38a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801e3ae:	ea5f 4920 	movs.w	r9, r0, asr #16
 801e3b2:	d414      	bmi.n	801e3de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e3b4:	68ae      	ldr	r6, [r5, #8]
 801e3b6:	454e      	cmp	r6, r9
 801e3b8:	dd11      	ble.n	801e3de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e3ba:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801e3be:	d40e      	bmi.n	801e3de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e3c0:	68ef      	ldr	r7, [r5, #12]
 801e3c2:	4557      	cmp	r7, sl
 801e3c4:	dd0b      	ble.n	801e3de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801e3c6:	b236      	sxth	r6, r6
 801e3c8:	fb0a 9606 	mla	r6, sl, r6, r9
 801e3cc:	9f02      	ldr	r7, [sp, #8]
 801e3ce:	f06f 0101 	mvn.w	r1, #1
 801e3d2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801e3d6:	fb01 f608 	mul.w	r6, r1, r8
 801e3da:	9903      	ldr	r1, [sp, #12]
 801e3dc:	538f      	strh	r7, [r1, r6]
 801e3de:	4470      	add	r0, lr
 801e3e0:	4462      	add	r2, ip
 801e3e2:	f108 38ff 	add.w	r8, r8, #4294967295
 801e3e6:	e788      	b.n	801e2fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e3e8:	b005      	add	sp, #20
 801e3ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e3ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e3ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e3f2:	b087      	sub	sp, #28
 801e3f4:	468b      	mov	fp, r1
 801e3f6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e3f8:	9203      	str	r2, [sp, #12]
 801e3fa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e3fe:	9204      	str	r2, [sp, #16]
 801e400:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801e404:	6841      	ldr	r1, [r0, #4]
 801e406:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e40a:	fb01 2505 	mla	r5, r1, r5, r2
 801e40e:	6802      	ldr	r2, [r0, #0]
 801e410:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801e414:	f8d9 2000 	ldr.w	r2, [r9]
 801e418:	9201      	str	r2, [sp, #4]
 801e41a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e41e:	f1bb 0f00 	cmp.w	fp, #0
 801e422:	dc03      	bgt.n	801e42c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e424:	9a03      	ldr	r2, [sp, #12]
 801e426:	2a00      	cmp	r2, #0
 801e428:	f340 8159 	ble.w	801e6de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e42c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e42e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e432:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e436:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e43a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e43c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e440:	2b00      	cmp	r3, #0
 801e442:	dd0e      	ble.n	801e462 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e444:	1402      	asrs	r2, r0, #16
 801e446:	d405      	bmi.n	801e454 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e448:	42ba      	cmp	r2, r7
 801e44a:	da03      	bge.n	801e454 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e44c:	140a      	asrs	r2, r1, #16
 801e44e:	d401      	bmi.n	801e454 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e450:	42b2      	cmp	r2, r6
 801e452:	db07      	blt.n	801e464 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e454:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e456:	4410      	add	r0, r2
 801e458:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e45a:	3b01      	subs	r3, #1
 801e45c:	4411      	add	r1, r2
 801e45e:	3502      	adds	r5, #2
 801e460:	e7ee      	b.n	801e440 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801e462:	d017      	beq.n	801e494 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e464:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e466:	1e5a      	subs	r2, r3, #1
 801e468:	fb04 0402 	mla	r4, r4, r2, r0
 801e46c:	1424      	asrs	r4, r4, #16
 801e46e:	d409      	bmi.n	801e484 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e470:	42bc      	cmp	r4, r7
 801e472:	da07      	bge.n	801e484 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e474:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e476:	fb04 1202 	mla	r2, r4, r2, r1
 801e47a:	1412      	asrs	r2, r2, #16
 801e47c:	d402      	bmi.n	801e484 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e47e:	42b2      	cmp	r2, r6
 801e480:	f2c0 80bf 	blt.w	801e602 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e484:	2700      	movs	r7, #0
 801e486:	19da      	adds	r2, r3, r7
 801e488:	2a00      	cmp	r2, #0
 801e48a:	dc3e      	bgt.n	801e50a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e48c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e490:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e494:	f1bb 0f00 	cmp.w	fp, #0
 801e498:	f340 8121 	ble.w	801e6de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e49c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e4a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e4a4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e4a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e4aa:	f1bb 0b01 	subs.w	fp, fp, #1
 801e4ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e4b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e4b6:	eeb0 6a62 	vmov.f32	s12, s5
 801e4ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e4be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e4c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e4c6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e4ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e4ce:	eeb0 6a43 	vmov.f32	s12, s6
 801e4d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e4d6:	ee12 2a90 	vmov	r2, s5
 801e4da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e4de:	fb92 f3f3 	sdiv	r3, r2, r3
 801e4e2:	ee13 2a10 	vmov	r2, s6
 801e4e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e4ea:	9313      	str	r3, [sp, #76]	; 0x4c
 801e4ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e4ee:	fb92 f3f3 	sdiv	r3, r2, r3
 801e4f2:	9a03      	ldr	r2, [sp, #12]
 801e4f4:	9314      	str	r3, [sp, #80]	; 0x50
 801e4f6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e4fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e4fc:	eeb0 3a67 	vmov.f32	s6, s15
 801e500:	bf08      	it	eq
 801e502:	4613      	moveq	r3, r2
 801e504:	eef0 2a47 	vmov.f32	s5, s14
 801e508:	e789      	b.n	801e41e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e50a:	1406      	asrs	r6, r0, #16
 801e50c:	d42d      	bmi.n	801e56a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e50e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801e512:	42b4      	cmp	r4, r6
 801e514:	dd29      	ble.n	801e56a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e516:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801e51a:	d426      	bmi.n	801e56a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e51c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e520:	4562      	cmp	r2, ip
 801e522:	dd22      	ble.n	801e56a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e524:	b224      	sxth	r4, r4
 801e526:	9a01      	ldr	r2, [sp, #4]
 801e528:	fb0c 6404 	mla	r4, ip, r4, r6
 801e52c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801e530:	0e22      	lsrs	r2, r4, #24
 801e532:	d01a      	beq.n	801e56a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e534:	9e04      	ldr	r6, [sp, #16]
 801e536:	4372      	muls	r2, r6
 801e538:	1c56      	adds	r6, r2, #1
 801e53a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e53e:	1212      	asrs	r2, r2, #8
 801e540:	0a26      	lsrs	r6, r4, #8
 801e542:	2aff      	cmp	r2, #255	; 0xff
 801e544:	9605      	str	r6, [sp, #20]
 801e546:	d116      	bne.n	801e576 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801e548:	f06f 0201 	mvn.w	r2, #1
 801e54c:	fb02 fc07 	mul.w	ip, r2, r7
 801e550:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e554:	0962      	lsrs	r2, r4, #5
 801e556:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e55a:	f026 0607 	bic.w	r6, r6, #7
 801e55e:	4316      	orrs	r6, r2
 801e560:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e564:	4326      	orrs	r6, r4
 801e566:	f825 600c 	strh.w	r6, [r5, ip]
 801e56a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e56c:	4410      	add	r0, r2
 801e56e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e570:	3f01      	subs	r7, #1
 801e572:	4411      	add	r1, r2
 801e574:	e787      	b.n	801e486 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e576:	f06f 0601 	mvn.w	r6, #1
 801e57a:	437e      	muls	r6, r7
 801e57c:	fa1f fa82 	uxth.w	sl, r2
 801e580:	f835 8006 	ldrh.w	r8, [r5, r6]
 801e584:	9602      	str	r6, [sp, #8]
 801e586:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e58a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801e58e:	43d2      	mvns	r2, r2
 801e590:	b2d2      	uxtb	r2, r2
 801e592:	fb1c fc0a 	smulbb	ip, ip, sl
 801e596:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e59a:	fb0e ce02 	mla	lr, lr, r2, ip
 801e59e:	b2e4      	uxtb	r4, r4
 801e5a0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e5a4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e5a8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e5ac:	fa5f f888 	uxtb.w	r8, r8
 801e5b0:	fb14 f40a 	smulbb	r4, r4, sl
 801e5b4:	fb08 4402 	mla	r4, r8, r2, r4
 801e5b8:	fa1f fe8e 	uxth.w	lr, lr
 801e5bc:	fb16 f60a 	smulbb	r6, r6, sl
 801e5c0:	b2a4      	uxth	r4, r4
 801e5c2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e5c6:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e5ca:	f10e 0201 	add.w	r2, lr, #1
 801e5ce:	1c66      	adds	r6, r4, #1
 801e5d0:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e5d4:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e5d8:	fa1f fc8c 	uxth.w	ip, ip
 801e5dc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e5e0:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e5e4:	ea46 0e0e 	orr.w	lr, r6, lr
 801e5e8:	f10c 0601 	add.w	r6, ip, #1
 801e5ec:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e5f0:	0976      	lsrs	r6, r6, #5
 801e5f2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e5f6:	9a02      	ldr	r2, [sp, #8]
 801e5f8:	ea4e 0e06 	orr.w	lr, lr, r6
 801e5fc:	f825 e002 	strh.w	lr, [r5, r2]
 801e600:	e7b3      	b.n	801e56a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e602:	f04f 0800 	mov.w	r8, #0
 801e606:	eba3 0208 	sub.w	r2, r3, r8
 801e60a:	2a00      	cmp	r2, #0
 801e60c:	f77f af3e 	ble.w	801e48c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e610:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801e614:	1404      	asrs	r4, r0, #16
 801e616:	140a      	asrs	r2, r1, #16
 801e618:	fb06 4202 	mla	r2, r6, r2, r4
 801e61c:	9c01      	ldr	r4, [sp, #4]
 801e61e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801e622:	0e22      	lsrs	r2, r4, #24
 801e624:	d016      	beq.n	801e654 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e626:	9e04      	ldr	r6, [sp, #16]
 801e628:	4372      	muls	r2, r6
 801e62a:	1c56      	adds	r6, r2, #1
 801e62c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e630:	1212      	asrs	r2, r2, #8
 801e632:	2aff      	cmp	r2, #255	; 0xff
 801e634:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801e638:	d113      	bne.n	801e662 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e63a:	0962      	lsrs	r2, r4, #5
 801e63c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e640:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e644:	f026 0607 	bic.w	r6, r6, #7
 801e648:	4316      	orrs	r6, r2
 801e64a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e64e:	4326      	orrs	r6, r4
 801e650:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801e654:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e656:	4410      	add	r0, r2
 801e658:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e65a:	f108 0801 	add.w	r8, r8, #1
 801e65e:	4411      	add	r1, r2
 801e660:	e7d1      	b.n	801e606 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801e662:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801e666:	fa1f fa82 	uxth.w	sl, r2
 801e66a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e66e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801e672:	43d2      	mvns	r2, r2
 801e674:	b2d2      	uxtb	r2, r2
 801e676:	fb17 f70a 	smulbb	r7, r7, sl
 801e67a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e67e:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e682:	b2e4      	uxtb	r4, r4
 801e684:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e688:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e68c:	fa5f fe8e 	uxtb.w	lr, lr
 801e690:	fb14 f40a 	smulbb	r4, r4, sl
 801e694:	fb0e 4402 	mla	r4, lr, r2, r4
 801e698:	b2f6      	uxtb	r6, r6
 801e69a:	fa1f fc8c 	uxth.w	ip, ip
 801e69e:	fb16 f60a 	smulbb	r6, r6, sl
 801e6a2:	b2a4      	uxth	r4, r4
 801e6a4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e6a8:	fb07 6702 	mla	r7, r7, r2, r6
 801e6ac:	f10c 0201 	add.w	r2, ip, #1
 801e6b0:	1c66      	adds	r6, r4, #1
 801e6b2:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e6b6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e6ba:	b2bf      	uxth	r7, r7
 801e6bc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e6c0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e6c4:	ea46 0c0c 	orr.w	ip, r6, ip
 801e6c8:	1c7e      	adds	r6, r7, #1
 801e6ca:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e6ce:	0976      	lsrs	r6, r6, #5
 801e6d0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e6d4:	ea4c 0c06 	orr.w	ip, ip, r6
 801e6d8:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e6dc:	e7ba      	b.n	801e654 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e6de:	b007      	add	sp, #28
 801e6e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e6e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e6e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6e8:	b085      	sub	sp, #20
 801e6ea:	468b      	mov	fp, r1
 801e6ec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e6ee:	9203      	str	r2, [sp, #12]
 801e6f0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e6f4:	6841      	ldr	r1, [r0, #4]
 801e6f6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e6fa:	fb01 2404 	mla	r4, r1, r4, r2
 801e6fe:	6802      	ldr	r2, [r0, #0]
 801e700:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e704:	f8d8 2000 	ldr.w	r2, [r8]
 801e708:	9201      	str	r2, [sp, #4]
 801e70a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e70e:	f1bb 0f00 	cmp.w	fp, #0
 801e712:	dc03      	bgt.n	801e71c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e714:	9a03      	ldr	r2, [sp, #12]
 801e716:	2a00      	cmp	r2, #0
 801e718:	f340 814f 	ble.w	801e9ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e71c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e71e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e722:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e726:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e72a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e72c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e730:	2b00      	cmp	r3, #0
 801e732:	dd0e      	ble.n	801e752 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e734:	1408      	asrs	r0, r1, #16
 801e736:	d405      	bmi.n	801e744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e738:	42b8      	cmp	r0, r7
 801e73a:	da03      	bge.n	801e744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e73c:	1410      	asrs	r0, r2, #16
 801e73e:	d401      	bmi.n	801e744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e740:	42b0      	cmp	r0, r6
 801e742:	db07      	blt.n	801e754 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e744:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e746:	4401      	add	r1, r0
 801e748:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e74a:	3b01      	subs	r3, #1
 801e74c:	4402      	add	r2, r0
 801e74e:	3402      	adds	r4, #2
 801e750:	e7ee      	b.n	801e730 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e752:	d017      	beq.n	801e784 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e754:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e756:	1e58      	subs	r0, r3, #1
 801e758:	fb05 1500 	mla	r5, r5, r0, r1
 801e75c:	142d      	asrs	r5, r5, #16
 801e75e:	d409      	bmi.n	801e774 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e760:	42bd      	cmp	r5, r7
 801e762:	da07      	bge.n	801e774 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e764:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e766:	fb05 2000 	mla	r0, r5, r0, r2
 801e76a:	1400      	asrs	r0, r0, #16
 801e76c:	d402      	bmi.n	801e774 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e76e:	42b0      	cmp	r0, r6
 801e770:	f2c0 80ba 	blt.w	801e8e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e774:	2600      	movs	r6, #0
 801e776:	1998      	adds	r0, r3, r6
 801e778:	2800      	cmp	r0, #0
 801e77a:	dc3e      	bgt.n	801e7fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e77c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e780:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e784:	f1bb 0f00 	cmp.w	fp, #0
 801e788:	f340 8117 	ble.w	801e9ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e78c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e790:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e794:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e798:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e79a:	f1bb 0b01 	subs.w	fp, fp, #1
 801e79e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e7a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e7a6:	eeb0 6a62 	vmov.f32	s12, s5
 801e7aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e7ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e7b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e7b6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e7ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e7be:	eeb0 6a43 	vmov.f32	s12, s6
 801e7c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e7c6:	ee12 2a90 	vmov	r2, s5
 801e7ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e7ce:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7d2:	ee13 2a10 	vmov	r2, s6
 801e7d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e7da:	9311      	str	r3, [sp, #68]	; 0x44
 801e7dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e7de:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7e2:	9a03      	ldr	r2, [sp, #12]
 801e7e4:	9312      	str	r3, [sp, #72]	; 0x48
 801e7e6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e7ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e7ec:	eeb0 3a67 	vmov.f32	s6, s15
 801e7f0:	bf08      	it	eq
 801e7f2:	4613      	moveq	r3, r2
 801e7f4:	eef0 2a47 	vmov.f32	s5, s14
 801e7f8:	e789      	b.n	801e70e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e7fa:	140f      	asrs	r7, r1, #16
 801e7fc:	d424      	bmi.n	801e848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e7fe:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e802:	42bd      	cmp	r5, r7
 801e804:	dd20      	ble.n	801e848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e806:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e80a:	d41d      	bmi.n	801e848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e80c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e810:	4560      	cmp	r0, ip
 801e812:	dd19      	ble.n	801e848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e814:	b22d      	sxth	r5, r5
 801e816:	fb0c 7505 	mla	r5, ip, r5, r7
 801e81a:	9801      	ldr	r0, [sp, #4]
 801e81c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801e820:	0e07      	lsrs	r7, r0, #24
 801e822:	2fff      	cmp	r7, #255	; 0xff
 801e824:	d116      	bne.n	801e854 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801e826:	f06f 0501 	mvn.w	r5, #1
 801e82a:	fb05 f706 	mul.w	r7, r5, r6
 801e82e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801e832:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801e836:	0945      	lsrs	r5, r0, #5
 801e838:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e83c:	ea4c 0505 	orr.w	r5, ip, r5
 801e840:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e844:	4305      	orrs	r5, r0
 801e846:	53e5      	strh	r5, [r4, r7]
 801e848:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e84a:	4401      	add	r1, r0
 801e84c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e84e:	3e01      	subs	r6, #1
 801e850:	4402      	add	r2, r0
 801e852:	e790      	b.n	801e776 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e854:	b2fd      	uxtb	r5, r7
 801e856:	2f00      	cmp	r7, #0
 801e858:	d0f6      	beq.n	801e848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e85a:	f06f 0701 	mvn.w	r7, #1
 801e85e:	4377      	muls	r7, r6
 801e860:	fa1f f985 	uxth.w	r9, r5
 801e864:	f834 e007 	ldrh.w	lr, [r4, r7]
 801e868:	9702      	str	r7, [sp, #8]
 801e86a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e86e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801e872:	43ed      	mvns	r5, r5
 801e874:	b2ed      	uxtb	r5, r5
 801e876:	fb17 f709 	smulbb	r7, r7, r9
 801e87a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e87e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801e882:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801e886:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e88a:	b2c0      	uxtb	r0, r0
 801e88c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e890:	fa5f fe8e 	uxtb.w	lr, lr
 801e894:	fb10 f009 	smulbb	r0, r0, r9
 801e898:	fb0e 0005 	mla	r0, lr, r5, r0
 801e89c:	b280      	uxth	r0, r0
 801e89e:	fa1f fc8c 	uxth.w	ip, ip
 801e8a2:	fb1a fa09 	smulbb	sl, sl, r9
 801e8a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e8aa:	fb07 a705 	mla	r7, r7, r5, sl
 801e8ae:	f100 0a01 	add.w	sl, r0, #1
 801e8b2:	f10c 0501 	add.w	r5, ip, #1
 801e8b6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801e8ba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e8be:	b2bf      	uxth	r7, r7
 801e8c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e8c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e8c8:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e8cc:	f107 0a01 	add.w	sl, r7, #1
 801e8d0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e8d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e8d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e8dc:	9802      	ldr	r0, [sp, #8]
 801e8de:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e8e2:	f824 c000 	strh.w	ip, [r4, r0]
 801e8e6:	e7af      	b.n	801e848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e8e8:	f04f 0e00 	mov.w	lr, #0
 801e8ec:	eba3 000e 	sub.w	r0, r3, lr
 801e8f0:	2800      	cmp	r0, #0
 801e8f2:	f77f af43 	ble.w	801e77c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e8f6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e8fa:	140d      	asrs	r5, r1, #16
 801e8fc:	1410      	asrs	r0, r2, #16
 801e8fe:	fb06 5000 	mla	r0, r6, r0, r5
 801e902:	9d01      	ldr	r5, [sp, #4]
 801e904:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801e908:	0e2e      	lsrs	r6, r5, #24
 801e90a:	2eff      	cmp	r6, #255	; 0xff
 801e90c:	d112      	bne.n	801e934 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801e90e:	482c      	ldr	r0, [pc, #176]	; (801e9c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801e910:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801e914:	0968      	lsrs	r0, r5, #5
 801e916:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e91a:	4330      	orrs	r0, r6
 801e91c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e920:	4328      	orrs	r0, r5
 801e922:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801e926:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e928:	4401      	add	r1, r0
 801e92a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e92c:	f10e 0e01 	add.w	lr, lr, #1
 801e930:	4402      	add	r2, r0
 801e932:	e7db      	b.n	801e8ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801e934:	b2f0      	uxtb	r0, r6
 801e936:	2e00      	cmp	r6, #0
 801e938:	d0f5      	beq.n	801e926 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e93a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801e93e:	fa1f f980 	uxth.w	r9, r0
 801e942:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e946:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801e94a:	43c0      	mvns	r0, r0
 801e94c:	b2c0      	uxtb	r0, r0
 801e94e:	fb16 f609 	smulbb	r6, r6, r9
 801e952:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e956:	fb07 6700 	mla	r7, r7, r0, r6
 801e95a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801e95e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e962:	b2ed      	uxtb	r5, r5
 801e964:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e968:	fa5f fc8c 	uxtb.w	ip, ip
 801e96c:	fb15 f509 	smulbb	r5, r5, r9
 801e970:	fb0c 5500 	mla	r5, ip, r0, r5
 801e974:	b2bf      	uxth	r7, r7
 801e976:	fb1a fa09 	smulbb	sl, sl, r9
 801e97a:	b2ad      	uxth	r5, r5
 801e97c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e980:	fb06 a600 	mla	r6, r6, r0, sl
 801e984:	1c78      	adds	r0, r7, #1
 801e986:	f105 0a01 	add.w	sl, r5, #1
 801e98a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e98e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e992:	b2b6      	uxth	r6, r6
 801e994:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e998:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e99c:	ea4a 0707 	orr.w	r7, sl, r7
 801e9a0:	f106 0a01 	add.w	sl, r6, #1
 801e9a4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e9a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e9ac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e9b0:	ea47 070a 	orr.w	r7, r7, sl
 801e9b4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801e9b8:	e7b5      	b.n	801e926 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e9ba:	b005      	add	sp, #20
 801e9bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e9c0:	fffff800 	.word	0xfffff800

0801e9c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e9c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e9c8:	b087      	sub	sp, #28
 801e9ca:	468b      	mov	fp, r1
 801e9cc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e9ce:	9203      	str	r2, [sp, #12]
 801e9d0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e9d4:	9204      	str	r2, [sp, #16]
 801e9d6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e9da:	6841      	ldr	r1, [r0, #4]
 801e9dc:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e9e0:	fb01 2404 	mla	r4, r1, r4, r2
 801e9e4:	6802      	ldr	r2, [r0, #0]
 801e9e6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e9ea:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e9ee:	3201      	adds	r2, #1
 801e9f0:	f022 0201 	bic.w	r2, r2, #1
 801e9f4:	9200      	str	r2, [sp, #0]
 801e9f6:	f8d9 2000 	ldr.w	r2, [r9]
 801e9fa:	9201      	str	r2, [sp, #4]
 801e9fc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ea00:	f1bb 0f00 	cmp.w	fp, #0
 801ea04:	dc03      	bgt.n	801ea0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ea06:	9a03      	ldr	r2, [sp, #12]
 801ea08:	2a00      	cmp	r2, #0
 801ea0a:	f340 8169 	ble.w	801ece0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ea0e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ea10:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801ea14:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801ea18:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ea1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ea1e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ea22:	2b00      	cmp	r3, #0
 801ea24:	dd0e      	ble.n	801ea44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ea26:	1402      	asrs	r2, r0, #16
 801ea28:	d405      	bmi.n	801ea36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ea2a:	42ba      	cmp	r2, r7
 801ea2c:	da03      	bge.n	801ea36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ea2e:	140a      	asrs	r2, r1, #16
 801ea30:	d401      	bmi.n	801ea36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ea32:	42b2      	cmp	r2, r6
 801ea34:	db07      	blt.n	801ea46 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ea36:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ea38:	4410      	add	r0, r2
 801ea3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ea3c:	3b01      	subs	r3, #1
 801ea3e:	4411      	add	r1, r2
 801ea40:	3402      	adds	r4, #2
 801ea42:	e7ee      	b.n	801ea22 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ea44:	d017      	beq.n	801ea76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ea46:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ea48:	1e5a      	subs	r2, r3, #1
 801ea4a:	fb05 0502 	mla	r5, r5, r2, r0
 801ea4e:	142d      	asrs	r5, r5, #16
 801ea50:	d409      	bmi.n	801ea66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ea52:	42bd      	cmp	r5, r7
 801ea54:	da07      	bge.n	801ea66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ea56:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ea58:	fb05 1202 	mla	r2, r5, r2, r1
 801ea5c:	1412      	asrs	r2, r2, #16
 801ea5e:	d402      	bmi.n	801ea66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ea60:	42b2      	cmp	r2, r6
 801ea62:	f2c0 80c7 	blt.w	801ebf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801ea66:	2700      	movs	r7, #0
 801ea68:	19da      	adds	r2, r3, r7
 801ea6a:	2a00      	cmp	r2, #0
 801ea6c:	dc3e      	bgt.n	801eaec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ea6e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ea72:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ea76:	f1bb 0f00 	cmp.w	fp, #0
 801ea7a:	f340 8131 	ble.w	801ece0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ea7e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ea82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ea86:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ea8a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ea8c:	f1bb 0b01 	subs.w	fp, fp, #1
 801ea90:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ea94:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ea98:	eeb0 6a62 	vmov.f32	s12, s5
 801ea9c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eaa0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801eaa4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eaa8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801eaac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eab0:	eeb0 6a43 	vmov.f32	s12, s6
 801eab4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eab8:	ee12 2a90 	vmov	r2, s5
 801eabc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eac0:	fb92 f3f3 	sdiv	r3, r2, r3
 801eac4:	ee13 2a10 	vmov	r2, s6
 801eac8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801eacc:	9313      	str	r3, [sp, #76]	; 0x4c
 801eace:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ead0:	fb92 f3f3 	sdiv	r3, r2, r3
 801ead4:	9a03      	ldr	r2, [sp, #12]
 801ead6:	9314      	str	r3, [sp, #80]	; 0x50
 801ead8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801eadc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eade:	eeb0 3a67 	vmov.f32	s6, s15
 801eae2:	bf08      	it	eq
 801eae4:	4613      	moveq	r3, r2
 801eae6:	eef0 2a47 	vmov.f32	s5, s14
 801eaea:	e789      	b.n	801ea00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801eaec:	1405      	asrs	r5, r0, #16
 801eaee:	d435      	bmi.n	801eb5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eaf0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801eaf4:	42aa      	cmp	r2, r5
 801eaf6:	dd31      	ble.n	801eb5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eaf8:	140e      	asrs	r6, r1, #16
 801eafa:	d42f      	bmi.n	801eb5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eafc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801eb00:	42b2      	cmp	r2, r6
 801eb02:	dd2b      	ble.n	801eb5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eb04:	9a00      	ldr	r2, [sp, #0]
 801eb06:	fb06 5502 	mla	r5, r6, r2, r5
 801eb0a:	086a      	lsrs	r2, r5, #1
 801eb0c:	9e01      	ldr	r6, [sp, #4]
 801eb0e:	5cb2      	ldrb	r2, [r6, r2]
 801eb10:	07ee      	lsls	r6, r5, #31
 801eb12:	bf54      	ite	pl
 801eb14:	f002 020f 	andpl.w	r2, r2, #15
 801eb18:	1112      	asrmi	r2, r2, #4
 801eb1a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801eb1e:	b2d2      	uxtb	r2, r2
 801eb20:	b1e2      	cbz	r2, 801eb5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eb22:	9d04      	ldr	r5, [sp, #16]
 801eb24:	436a      	muls	r2, r5
 801eb26:	1c55      	adds	r5, r2, #1
 801eb28:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801eb2c:	4d6e      	ldr	r5, [pc, #440]	; (801ece8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801eb2e:	682d      	ldr	r5, [r5, #0]
 801eb30:	1212      	asrs	r2, r2, #8
 801eb32:	0a2e      	lsrs	r6, r5, #8
 801eb34:	2aff      	cmp	r2, #255	; 0xff
 801eb36:	9605      	str	r6, [sp, #20]
 801eb38:	d116      	bne.n	801eb68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801eb3a:	f06f 0201 	mvn.w	r2, #1
 801eb3e:	fb02 fc07 	mul.w	ip, r2, r7
 801eb42:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801eb46:	096a      	lsrs	r2, r5, #5
 801eb48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb4c:	f026 0607 	bic.w	r6, r6, #7
 801eb50:	4316      	orrs	r6, r2
 801eb52:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801eb56:	432e      	orrs	r6, r5
 801eb58:	f824 600c 	strh.w	r6, [r4, ip]
 801eb5c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801eb5e:	4410      	add	r0, r2
 801eb60:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801eb62:	3f01      	subs	r7, #1
 801eb64:	4411      	add	r1, r2
 801eb66:	e77f      	b.n	801ea68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801eb68:	f06f 0601 	mvn.w	r6, #1
 801eb6c:	437e      	muls	r6, r7
 801eb6e:	fa1f fa82 	uxth.w	sl, r2
 801eb72:	f834 8006 	ldrh.w	r8, [r4, r6]
 801eb76:	9602      	str	r6, [sp, #8]
 801eb78:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801eb7c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801eb80:	43d2      	mvns	r2, r2
 801eb82:	b2d2      	uxtb	r2, r2
 801eb84:	fb1c fc0a 	smulbb	ip, ip, sl
 801eb88:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801eb8c:	fb0e ce02 	mla	lr, lr, r2, ip
 801eb90:	b2ed      	uxtb	r5, r5
 801eb92:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801eb96:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801eb9a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801eb9e:	fa5f f888 	uxtb.w	r8, r8
 801eba2:	fb15 f50a 	smulbb	r5, r5, sl
 801eba6:	fb08 5502 	mla	r5, r8, r2, r5
 801ebaa:	fa1f fe8e 	uxth.w	lr, lr
 801ebae:	fb16 f60a 	smulbb	r6, r6, sl
 801ebb2:	b2ad      	uxth	r5, r5
 801ebb4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ebb8:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ebbc:	f10e 0201 	add.w	r2, lr, #1
 801ebc0:	1c6e      	adds	r6, r5, #1
 801ebc2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801ebc6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801ebca:	fa1f fc8c 	uxth.w	ip, ip
 801ebce:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ebd2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ebd6:	ea46 0e0e 	orr.w	lr, r6, lr
 801ebda:	f10c 0601 	add.w	r6, ip, #1
 801ebde:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ebe2:	0976      	lsrs	r6, r6, #5
 801ebe4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ebe8:	9a02      	ldr	r2, [sp, #8]
 801ebea:	ea4e 0e06 	orr.w	lr, lr, r6
 801ebee:	f824 e002 	strh.w	lr, [r4, r2]
 801ebf2:	e7b3      	b.n	801eb5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ebf4:	f04f 0800 	mov.w	r8, #0
 801ebf8:	eba3 0208 	sub.w	r2, r3, r8
 801ebfc:	2a00      	cmp	r2, #0
 801ebfe:	f77f af36 	ble.w	801ea6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ec02:	9e00      	ldr	r6, [sp, #0]
 801ec04:	1402      	asrs	r2, r0, #16
 801ec06:	140d      	asrs	r5, r1, #16
 801ec08:	fb06 2505 	mla	r5, r6, r5, r2
 801ec0c:	086a      	lsrs	r2, r5, #1
 801ec0e:	9e01      	ldr	r6, [sp, #4]
 801ec10:	5cb2      	ldrb	r2, [r6, r2]
 801ec12:	07ed      	lsls	r5, r5, #31
 801ec14:	bf54      	ite	pl
 801ec16:	f002 020f 	andpl.w	r2, r2, #15
 801ec1a:	1112      	asrmi	r2, r2, #4
 801ec1c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ec20:	b2d2      	uxtb	r2, r2
 801ec22:	b1c2      	cbz	r2, 801ec56 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ec24:	9d04      	ldr	r5, [sp, #16]
 801ec26:	436a      	muls	r2, r5
 801ec28:	1c55      	adds	r5, r2, #1
 801ec2a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ec2e:	4d2e      	ldr	r5, [pc, #184]	; (801ece8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ec30:	1212      	asrs	r2, r2, #8
 801ec32:	682e      	ldr	r6, [r5, #0]
 801ec34:	2aff      	cmp	r2, #255	; 0xff
 801ec36:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801ec3a:	d113      	bne.n	801ec64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ec3c:	0972      	lsrs	r2, r6, #5
 801ec3e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ec42:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ec46:	f025 0507 	bic.w	r5, r5, #7
 801ec4a:	4315      	orrs	r5, r2
 801ec4c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ec50:	4335      	orrs	r5, r6
 801ec52:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801ec56:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ec58:	4410      	add	r0, r2
 801ec5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ec5c:	f108 0801 	add.w	r8, r8, #1
 801ec60:	4411      	add	r1, r2
 801ec62:	e7c9      	b.n	801ebf8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ec64:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ec68:	fa1f fa82 	uxth.w	sl, r2
 801ec6c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ec70:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801ec74:	43d2      	mvns	r2, r2
 801ec76:	b2d2      	uxtb	r2, r2
 801ec78:	fb17 f70a 	smulbb	r7, r7, sl
 801ec7c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ec80:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ec84:	b2f6      	uxtb	r6, r6
 801ec86:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ec8a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ec8e:	fa5f fe8e 	uxtb.w	lr, lr
 801ec92:	fb16 f60a 	smulbb	r6, r6, sl
 801ec96:	fb0e 6602 	mla	r6, lr, r2, r6
 801ec9a:	b2ed      	uxtb	r5, r5
 801ec9c:	fa1f fc8c 	uxth.w	ip, ip
 801eca0:	fb15 f50a 	smulbb	r5, r5, sl
 801eca4:	b2b6      	uxth	r6, r6
 801eca6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ecaa:	fb07 5702 	mla	r7, r7, r2, r5
 801ecae:	f10c 0201 	add.w	r2, ip, #1
 801ecb2:	1c75      	adds	r5, r6, #1
 801ecb4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ecb8:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ecbc:	b2bf      	uxth	r7, r7
 801ecbe:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ecc2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ecc6:	ea45 0c0c 	orr.w	ip, r5, ip
 801ecca:	1c7d      	adds	r5, r7, #1
 801eccc:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801ecd0:	096d      	lsrs	r5, r5, #5
 801ecd2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ecd6:	ea4c 0c05 	orr.w	ip, ip, r5
 801ecda:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801ecde:	e7ba      	b.n	801ec56 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ece0:	b007      	add	sp, #28
 801ece2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ece6:	bf00      	nop
 801ece8:	2001e1e8 	.word	0x2001e1e8

0801ecec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ecec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ecf0:	b087      	sub	sp, #28
 801ecf2:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801f000 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801ecf6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ecf8:	9205      	str	r2, [sp, #20]
 801ecfa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ecfe:	9101      	str	r1, [sp, #4]
 801ed00:	6841      	ldr	r1, [r0, #4]
 801ed02:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801ed06:	fb01 2404 	mla	r4, r1, r4, r2
 801ed0a:	6802      	ldr	r2, [r0, #0]
 801ed0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ed10:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ed14:	3201      	adds	r2, #1
 801ed16:	f022 0201 	bic.w	r2, r2, #1
 801ed1a:	9202      	str	r2, [sp, #8]
 801ed1c:	f8db 2000 	ldr.w	r2, [fp]
 801ed20:	9203      	str	r2, [sp, #12]
 801ed22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ed26:	9a01      	ldr	r2, [sp, #4]
 801ed28:	2a00      	cmp	r2, #0
 801ed2a:	dc03      	bgt.n	801ed34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ed2c:	9a05      	ldr	r2, [sp, #20]
 801ed2e:	2a00      	cmp	r2, #0
 801ed30:	f340 8162 	ble.w	801eff8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ed34:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ed36:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801ed3a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801ed3e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ed42:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ed44:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ed48:	2b00      	cmp	r3, #0
 801ed4a:	dd0e      	ble.n	801ed6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ed4c:	1402      	asrs	r2, r0, #16
 801ed4e:	d405      	bmi.n	801ed5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ed50:	42ba      	cmp	r2, r7
 801ed52:	da03      	bge.n	801ed5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ed54:	140a      	asrs	r2, r1, #16
 801ed56:	d401      	bmi.n	801ed5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ed58:	42b2      	cmp	r2, r6
 801ed5a:	db07      	blt.n	801ed6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ed5c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ed5e:	4410      	add	r0, r2
 801ed60:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ed62:	3b01      	subs	r3, #1
 801ed64:	4411      	add	r1, r2
 801ed66:	3402      	adds	r4, #2
 801ed68:	e7ee      	b.n	801ed48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ed6a:	d017      	beq.n	801ed9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ed6c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ed6e:	1e5a      	subs	r2, r3, #1
 801ed70:	fb05 0502 	mla	r5, r5, r2, r0
 801ed74:	142d      	asrs	r5, r5, #16
 801ed76:	d409      	bmi.n	801ed8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ed78:	42bd      	cmp	r5, r7
 801ed7a:	da07      	bge.n	801ed8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ed7c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ed7e:	fb05 1202 	mla	r2, r5, r2, r1
 801ed82:	1412      	asrs	r2, r2, #16
 801ed84:	d402      	bmi.n	801ed8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ed86:	42b2      	cmp	r2, r6
 801ed88:	f2c0 80c3 	blt.w	801ef12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801ed8c:	2500      	movs	r5, #0
 801ed8e:	195a      	adds	r2, r3, r5
 801ed90:	2a00      	cmp	r2, #0
 801ed92:	dc3f      	bgt.n	801ee14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ed94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ed98:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ed9c:	9b01      	ldr	r3, [sp, #4]
 801ed9e:	2b00      	cmp	r3, #0
 801eda0:	f340 812a 	ble.w	801eff8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801eda4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eda8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801edac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801edb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801edb2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801edb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801edba:	eeb0 6a62 	vmov.f32	s12, s5
 801edbe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801edc2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801edc6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801edca:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801edce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801edd2:	eeb0 6a43 	vmov.f32	s12, s6
 801edd6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801edda:	ee12 2a90 	vmov	r2, s5
 801edde:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ede2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ede6:	ee13 2a10 	vmov	r2, s6
 801edea:	9313      	str	r3, [sp, #76]	; 0x4c
 801edec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801edee:	fb92 f3f3 	sdiv	r3, r2, r3
 801edf2:	9314      	str	r3, [sp, #80]	; 0x50
 801edf4:	9b01      	ldr	r3, [sp, #4]
 801edf6:	9a05      	ldr	r2, [sp, #20]
 801edf8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801edfc:	3b01      	subs	r3, #1
 801edfe:	9301      	str	r3, [sp, #4]
 801ee00:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ee04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ee06:	eeb0 3a67 	vmov.f32	s6, s15
 801ee0a:	bf08      	it	eq
 801ee0c:	4613      	moveq	r3, r2
 801ee0e:	eef0 2a47 	vmov.f32	s5, s14
 801ee12:	e788      	b.n	801ed26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ee14:	1406      	asrs	r6, r0, #16
 801ee16:	d42c      	bmi.n	801ee72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee18:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ee1c:	42b2      	cmp	r2, r6
 801ee1e:	dd28      	ble.n	801ee72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee20:	140f      	asrs	r7, r1, #16
 801ee22:	d426      	bmi.n	801ee72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee24:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ee28:	42ba      	cmp	r2, r7
 801ee2a:	dd22      	ble.n	801ee72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee2c:	9a02      	ldr	r2, [sp, #8]
 801ee2e:	fb07 6602 	mla	r6, r7, r2, r6
 801ee32:	0872      	lsrs	r2, r6, #1
 801ee34:	9f03      	ldr	r7, [sp, #12]
 801ee36:	5cba      	ldrb	r2, [r7, r2]
 801ee38:	07f6      	lsls	r6, r6, #31
 801ee3a:	bf54      	ite	pl
 801ee3c:	f002 020f 	andpl.w	r2, r2, #15
 801ee40:	1112      	asrmi	r2, r2, #4
 801ee42:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ee46:	b2d2      	uxtb	r2, r2
 801ee48:	2aff      	cmp	r2, #255	; 0xff
 801ee4a:	d118      	bne.n	801ee7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801ee4c:	f8d8 2000 	ldr.w	r2, [r8]
 801ee50:	f06f 0601 	mvn.w	r6, #1
 801ee54:	fb06 f705 	mul.w	r7, r6, r5
 801ee58:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ee5c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ee60:	0956      	lsrs	r6, r2, #5
 801ee62:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ee66:	ea4c 0606 	orr.w	r6, ip, r6
 801ee6a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ee6e:	4316      	orrs	r6, r2
 801ee70:	53e6      	strh	r6, [r4, r7]
 801ee72:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ee74:	4410      	add	r0, r2
 801ee76:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ee78:	3d01      	subs	r5, #1
 801ee7a:	4411      	add	r1, r2
 801ee7c:	e787      	b.n	801ed8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ee7e:	2a00      	cmp	r2, #0
 801ee80:	d0f7      	beq.n	801ee72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee82:	f06f 0601 	mvn.w	r6, #1
 801ee86:	436e      	muls	r6, r5
 801ee88:	f8d8 c000 	ldr.w	ip, [r8]
 801ee8c:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ee90:	9604      	str	r6, [sp, #16]
 801ee92:	fa1f f982 	uxth.w	r9, r2
 801ee96:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ee9a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ee9e:	43d2      	mvns	r2, r2
 801eea0:	b2d2      	uxtb	r2, r2
 801eea2:	fb16 f609 	smulbb	r6, r6, r9
 801eea6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801eeaa:	fb07 6702 	mla	r7, r7, r2, r6
 801eeae:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801eeb2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801eeb6:	fa5f fc8c 	uxtb.w	ip, ip
 801eeba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801eebe:	fa5f fe8e 	uxtb.w	lr, lr
 801eec2:	fb1c fc09 	smulbb	ip, ip, r9
 801eec6:	fb0e cc02 	mla	ip, lr, r2, ip
 801eeca:	b2bf      	uxth	r7, r7
 801eecc:	fb1a fa09 	smulbb	sl, sl, r9
 801eed0:	fa1f fc8c 	uxth.w	ip, ip
 801eed4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801eed8:	fb06 a602 	mla	r6, r6, r2, sl
 801eedc:	1c7a      	adds	r2, r7, #1
 801eede:	f10c 0a01 	add.w	sl, ip, #1
 801eee2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801eee6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801eeea:	b2b6      	uxth	r6, r6
 801eeec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eef0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801eef4:	ea4a 0707 	orr.w	r7, sl, r7
 801eef8:	f106 0a01 	add.w	sl, r6, #1
 801eefc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ef00:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ef04:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ef08:	9a04      	ldr	r2, [sp, #16]
 801ef0a:	ea47 070a 	orr.w	r7, r7, sl
 801ef0e:	52a7      	strh	r7, [r4, r2]
 801ef10:	e7af      	b.n	801ee72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ef12:	f04f 0e00 	mov.w	lr, #0
 801ef16:	eba3 020e 	sub.w	r2, r3, lr
 801ef1a:	2a00      	cmp	r2, #0
 801ef1c:	f77f af3a 	ble.w	801ed94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ef20:	9e02      	ldr	r6, [sp, #8]
 801ef22:	1402      	asrs	r2, r0, #16
 801ef24:	140d      	asrs	r5, r1, #16
 801ef26:	fb06 2505 	mla	r5, r6, r5, r2
 801ef2a:	086a      	lsrs	r2, r5, #1
 801ef2c:	9e03      	ldr	r6, [sp, #12]
 801ef2e:	5cb2      	ldrb	r2, [r6, r2]
 801ef30:	07ed      	lsls	r5, r5, #31
 801ef32:	bf54      	ite	pl
 801ef34:	f002 020f 	andpl.w	r2, r2, #15
 801ef38:	1112      	asrmi	r2, r2, #4
 801ef3a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ef3e:	b2d2      	uxtb	r2, r2
 801ef40:	2aff      	cmp	r2, #255	; 0xff
 801ef42:	d115      	bne.n	801ef70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ef44:	f8d8 5000 	ldr.w	r5, [r8]
 801ef48:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ef4c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ef50:	096a      	lsrs	r2, r5, #5
 801ef52:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ef56:	4332      	orrs	r2, r6
 801ef58:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ef5c:	432a      	orrs	r2, r5
 801ef5e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ef62:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ef64:	4410      	add	r0, r2
 801ef66:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ef68:	f10e 0e01 	add.w	lr, lr, #1
 801ef6c:	4411      	add	r1, r2
 801ef6e:	e7d2      	b.n	801ef16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ef70:	2a00      	cmp	r2, #0
 801ef72:	d0f6      	beq.n	801ef62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ef74:	f8d8 7000 	ldr.w	r7, [r8]
 801ef78:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ef7c:	fa1f f982 	uxth.w	r9, r2
 801ef80:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ef84:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ef88:	43d2      	mvns	r2, r2
 801ef8a:	b2d2      	uxtb	r2, r2
 801ef8c:	fb15 f509 	smulbb	r5, r5, r9
 801ef90:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ef94:	fb06 5602 	mla	r6, r6, r2, r5
 801ef98:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801ef9c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801efa0:	b2ff      	uxtb	r7, r7
 801efa2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801efa6:	fa5f fc8c 	uxtb.w	ip, ip
 801efaa:	fb17 f709 	smulbb	r7, r7, r9
 801efae:	fb0c 7702 	mla	r7, ip, r2, r7
 801efb2:	b2b6      	uxth	r6, r6
 801efb4:	fb1a fa09 	smulbb	sl, sl, r9
 801efb8:	b2bf      	uxth	r7, r7
 801efba:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801efbe:	fb05 a502 	mla	r5, r5, r2, sl
 801efc2:	1c72      	adds	r2, r6, #1
 801efc4:	f107 0a01 	add.w	sl, r7, #1
 801efc8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801efcc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801efd0:	b2ad      	uxth	r5, r5
 801efd2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801efd6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801efda:	ea4a 0606 	orr.w	r6, sl, r6
 801efde:	f105 0a01 	add.w	sl, r5, #1
 801efe2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801efe6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801efea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801efee:	ea46 060a 	orr.w	r6, r6, sl
 801eff2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801eff6:	e7b4      	b.n	801ef62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801eff8:	b007      	add	sp, #28
 801effa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801effe:	bf00      	nop
 801f000:	2001e1e8 	.word	0x2001e1e8

0801f004 <_ZN8touchgfx8LCD16bppD1Ev>:
 801f004:	4770      	bx	lr

0801f006 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801f006:	4770      	bx	lr

0801f008 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801f008:	4770      	bx	lr

0801f00a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801f00a:	4770      	bx	lr

0801f00c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801f00c:	4770      	bx	lr

0801f00e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801f00e:	4770      	bx	lr

0801f010 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801f010:	4770      	bx	lr

0801f012 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801f012:	4770      	bx	lr

0801f014 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801f014:	4770      	bx	lr

0801f016 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801f016:	4770      	bx	lr

0801f018 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801f018:	4770      	bx	lr

0801f01a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801f01a:	4770      	bx	lr

0801f01c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801f01c:	4770      	bx	lr

0801f01e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801f01e:	4770      	bx	lr

0801f020 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801f020:	4770      	bx	lr

0801f022 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801f022:	4770      	bx	lr

0801f024 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801f024:	4770      	bx	lr

0801f026 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801f026:	4770      	bx	lr

0801f028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801f028:	4770      	bx	lr

0801f02a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801f02a:	4770      	bx	lr

0801f02c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801f02c:	4770      	bx	lr

0801f02e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801f02e:	4770      	bx	lr

0801f030 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801f030:	4770      	bx	lr

0801f032 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801f032:	4770      	bx	lr

0801f034 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801f034:	4770      	bx	lr

0801f036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801f036:	4770      	bx	lr

0801f038 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801f038:	4770      	bx	lr

0801f03a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801f03a:	4770      	bx	lr

0801f03c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801f03c:	4770      	bx	lr
	...

0801f040 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801f040:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f044:	4692      	mov	sl, r2
 801f046:	4a22      	ldr	r2, [pc, #136]	; (801f0d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x90>)
 801f048:	6812      	ldr	r2, [r2, #0]
 801f04a:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801f04e:	2a02      	cmp	r2, #2
 801f050:	b088      	sub	sp, #32
 801f052:	4605      	mov	r5, r0
 801f054:	4689      	mov	r9, r1
 801f056:	d106      	bne.n	801f066 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 801f058:	4b1e      	ldr	r3, [pc, #120]	; (801f0d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x94>)
 801f05a:	4a1f      	ldr	r2, [pc, #124]	; (801f0d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801f05c:	f44f 7158 	mov.w	r1, #864	; 0x360
 801f060:	481e      	ldr	r0, [pc, #120]	; (801f0dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x9c>)
 801f062:	f00c ffc7 	bl	802bff4 <__assert_func>
 801f066:	ac08      	add	r4, sp, #32
 801f068:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801f06c:	4620      	mov	r0, r4
 801f06e:	f7fd fce3 	bl	801ca38 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801f072:	682b      	ldr	r3, [r5, #0]
 801f074:	4606      	mov	r6, r0
 801f076:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f078:	4628      	mov	r0, r5
 801f07a:	4798      	blx	r3
 801f07c:	4286      	cmp	r6, r0
 801f07e:	d004      	beq.n	801f08a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 801f080:	4b17      	ldr	r3, [pc, #92]	; (801f0e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 801f082:	4a15      	ldr	r2, [pc, #84]	; (801f0d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801f084:	f240 3162 	movw	r1, #866	; 0x362
 801f088:	e7ea      	b.n	801f060 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801f08a:	4620      	mov	r0, r4
 801f08c:	f7fd fc4a 	bl	801c924 <_ZNK8touchgfx6Bitmap7getDataEv>
 801f090:	4606      	mov	r6, r0
 801f092:	b920      	cbnz	r0, 801f09e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801f094:	4b13      	ldr	r3, [pc, #76]	; (801f0e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa4>)
 801f096:	4a10      	ldr	r2, [pc, #64]	; (801f0d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801f098:	f44f 7159 	mov.w	r1, #868	; 0x364
 801f09c:	e7e0      	b.n	801f060 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801f09e:	682b      	ldr	r3, [r5, #0]
 801f0a0:	4620      	mov	r0, r4
 801f0a2:	f8d3 8018 	ldr.w	r8, [r3, #24]
 801f0a6:	f7fd fb21 	bl	801c6ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f0aa:	4607      	mov	r7, r0
 801f0ac:	4620      	mov	r0, r4
 801f0ae:	f7fd fb61 	bl	801c774 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f0b2:	b23f      	sxth	r7, r7
 801f0b4:	b200      	sxth	r0, r0
 801f0b6:	9002      	str	r0, [sp, #8]
 801f0b8:	e9cd 6700 	strd	r6, r7, [sp]
 801f0bc:	a806      	add	r0, sp, #24
 801f0be:	4653      	mov	r3, sl
 801f0c0:	464a      	mov	r2, r9
 801f0c2:	4629      	mov	r1, r5
 801f0c4:	47c0      	blx	r8
 801f0c6:	4630      	mov	r0, r6
 801f0c8:	b008      	add	sp, #32
 801f0ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f0ce:	bf00      	nop
 801f0d0:	2001e1c0 	.word	0x2001e1c0
 801f0d4:	08035a0a 	.word	0x08035a0a
 801f0d8:	08036307 	.word	0x08036307
 801f0dc:	08035abc 	.word	0x08035abc
 801f0e0:	08035aee 	.word	0x08035aee
 801f0e4:	08035b43 	.word	0x08035b43

0801f0e8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801f0e8:	b508      	push	{r3, lr}
 801f0ea:	4b06      	ldr	r3, [pc, #24]	; (801f104 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 801f0ec:	8818      	ldrh	r0, [r3, #0]
 801f0ee:	b928      	cbnz	r0, 801f0fc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 801f0f0:	4b05      	ldr	r3, [pc, #20]	; (801f108 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801f0f2:	4a06      	ldr	r2, [pc, #24]	; (801f10c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801f0f4:	4806      	ldr	r0, [pc, #24]	; (801f110 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801f0f6:	2153      	movs	r1, #83	; 0x53
 801f0f8:	f00c ff7c 	bl	802bff4 <__assert_func>
 801f0fc:	0040      	lsls	r0, r0, #1
 801f0fe:	b280      	uxth	r0, r0
 801f100:	bd08      	pop	{r3, pc}
 801f102:	bf00      	nop
 801f104:	2001e1ba 	.word	0x2001e1ba
 801f108:	08035bb2 	.word	0x08035bb2
 801f10c:	080361c4 	.word	0x080361c4
 801f110:	08035bf4 	.word	0x08035bf4

0801f114 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801f114:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801f118:	2300      	movs	r3, #0
 801f11a:	9300      	str	r3, [sp, #0]
 801f11c:	4b3d      	ldr	r3, [pc, #244]	; (801f214 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801f11e:	781b      	ldrb	r3, [r3, #0]
 801f120:	2b00      	cmp	r3, #0
 801f122:	d137      	bne.n	801f194 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801f124:	4a3c      	ldr	r2, [pc, #240]	; (801f218 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801f126:	f9b2 2000 	ldrsh.w	r2, [r2]
 801f12a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801f12e:	2b00      	cmp	r3, #0
 801f130:	d132      	bne.n	801f198 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801f132:	4b3a      	ldr	r3, [pc, #232]	; (801f21c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801f134:	f9b3 3000 	ldrsh.w	r3, [r3]
 801f138:	6808      	ldr	r0, [r1, #0]
 801f13a:	6849      	ldr	r1, [r1, #4]
 801f13c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801f140:	ac02      	add	r4, sp, #8
 801f142:	ab02      	add	r3, sp, #8
 801f144:	c303      	stmia	r3!, {r0, r1}
 801f146:	4669      	mov	r1, sp
 801f148:	4620      	mov	r0, r4
 801f14a:	f7f9 ff8b 	bl	8019064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f14e:	4668      	mov	r0, sp
 801f150:	f7f9 ff60 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f154:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801f158:	f8bd 2000 	ldrh.w	r2, [sp]
 801f15c:	4d30      	ldr	r5, [pc, #192]	; (801f220 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801f15e:	4413      	add	r3, r2
 801f160:	f8ad 3008 	strh.w	r3, [sp, #8]
 801f164:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801f168:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801f16c:	6828      	ldr	r0, [r5, #0]
 801f16e:	4413      	add	r3, r2
 801f170:	f8ad 300a 	strh.w	r3, [sp, #10]
 801f174:	6803      	ldr	r3, [r0, #0]
 801f176:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f178:	4798      	blx	r3
 801f17a:	f010 0f01 	tst.w	r0, #1
 801f17e:	462f      	mov	r7, r5
 801f180:	d00c      	beq.n	801f19c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801f182:	6828      	ldr	r0, [r5, #0]
 801f184:	6803      	ldr	r3, [r0, #0]
 801f186:	e894 0006 	ldmia.w	r4, {r1, r2}
 801f18a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801f18c:	4798      	blx	r3
 801f18e:	b004      	add	sp, #16
 801f190:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f194:	4a21      	ldr	r2, [pc, #132]	; (801f21c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801f196:	e7c6      	b.n	801f126 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801f198:	4b1f      	ldr	r3, [pc, #124]	; (801f218 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801f19a:	e7cb      	b.n	801f134 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801f19c:	6838      	ldr	r0, [r7, #0]
 801f19e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801f1a2:	6803      	ldr	r3, [r0, #0]
 801f1a4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801f1a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801f1aa:	4798      	blx	r3
 801f1ac:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801f1b0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f1b4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801f1b8:	fb16 3602 	smlabb	r6, r6, r2, r3
 801f1bc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801f1c0:	6838      	ldr	r0, [r7, #0]
 801f1c2:	6803      	ldr	r3, [r0, #0]
 801f1c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f1c6:	4798      	blx	r3
 801f1c8:	4a13      	ldr	r2, [pc, #76]	; (801f218 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801f1ca:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801f1ce:	8813      	ldrh	r3, [r2, #0]
 801f1d0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801f1d4:	fb03 1404 	mla	r4, r3, r4, r1
 801f1d8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f1dc:	435d      	muls	r5, r3
 801f1de:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f1e2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801f1e6:	4691      	mov	r9, r2
 801f1e8:	6838      	ldr	r0, [r7, #0]
 801f1ea:	42ac      	cmp	r4, r5
 801f1ec:	6803      	ldr	r3, [r0, #0]
 801f1ee:	d20e      	bcs.n	801f20e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801f1f0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801f1f4:	4632      	mov	r2, r6
 801f1f6:	4643      	mov	r3, r8
 801f1f8:	4621      	mov	r1, r4
 801f1fa:	47d0      	blx	sl
 801f1fc:	f8b9 3000 	ldrh.w	r3, [r9]
 801f200:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f204:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801f208:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f20c:	e7ec      	b.n	801f1e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801f20e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f210:	4798      	blx	r3
 801f212:	e7bc      	b.n	801f18e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801f214:	2001e1b8 	.word	0x2001e1b8
 801f218:	2001e1ba 	.word	0x2001e1ba
 801f21c:	2001e1bc 	.word	0x2001e1bc
 801f220:	2001e1c0 	.word	0x2001e1c0

0801f224 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801f224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f228:	b08b      	sub	sp, #44	; 0x2c
 801f22a:	460f      	mov	r7, r1
 801f22c:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801f230:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801f234:	4616      	mov	r6, r2
 801f236:	f1bb 0f00 	cmp.w	fp, #0
 801f23a:	d049      	beq.n	801f2d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801f23c:	6810      	ldr	r0, [r2, #0]
 801f23e:	6851      	ldr	r1, [r2, #4]
 801f240:	ad06      	add	r5, sp, #24
 801f242:	c503      	stmia	r5!, {r0, r1}
 801f244:	6818      	ldr	r0, [r3, #0]
 801f246:	6859      	ldr	r1, [r3, #4]
 801f248:	ad08      	add	r5, sp, #32
 801f24a:	c503      	stmia	r5!, {r0, r1}
 801f24c:	a806      	add	r0, sp, #24
 801f24e:	f7f9 fee1 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f252:	4631      	mov	r1, r6
 801f254:	a808      	add	r0, sp, #32
 801f256:	f7f9 ff05 	bl	8019064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f25a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801f25e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801f262:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801f266:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801f26a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801f26e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801f272:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801f276:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801f27a:	4f5f      	ldr	r7, [pc, #380]	; (801f3f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801f27c:	440a      	add	r2, r1
 801f27e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801f282:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801f286:	6838      	ldr	r0, [r7, #0]
 801f288:	4413      	add	r3, r2
 801f28a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801f28e:	6803      	ldr	r3, [r0, #0]
 801f290:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f292:	4798      	blx	r3
 801f294:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801f298:	46b9      	mov	r9, r7
 801f29a:	d01c      	beq.n	801f2d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 801f29c:	f010 0f04 	tst.w	r0, #4
 801f2a0:	d01d      	beq.n	801f2de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801f2a2:	f8d9 0000 	ldr.w	r0, [r9]
 801f2a6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801f2aa:	6801      	ldr	r1, [r0, #0]
 801f2ac:	f8cd b00c 	str.w	fp, [sp, #12]
 801f2b0:	2700      	movs	r7, #0
 801f2b2:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801f2b6:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801f2ba:	9402      	str	r4, [sp, #8]
 801f2bc:	b2ad      	uxth	r5, r5
 801f2be:	fa1f f488 	uxth.w	r4, r8
 801f2c2:	9501      	str	r5, [sp, #4]
 801f2c4:	9400      	str	r4, [sp, #0]
 801f2c6:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801f2c8:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f2cc:	4631      	mov	r1, r6
 801f2ce:	47a0      	blx	r4
 801f2d0:	b00b      	add	sp, #44	; 0x2c
 801f2d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f2d6:	b914      	cbnz	r4, 801f2de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801f2d8:	f010 0f01 	tst.w	r0, #1
 801f2dc:	e7e0      	b.n	801f2a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801f2de:	f8d9 0000 	ldr.w	r0, [r9]
 801f2e2:	6803      	ldr	r3, [r0, #0]
 801f2e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f2e6:	4798      	blx	r3
 801f2e8:	4b44      	ldr	r3, [pc, #272]	; (801f3fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801f2ea:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801f2ee:	881a      	ldrh	r2, [r3, #0]
 801f2f0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801f2f4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801f2f8:	fb02 1404 	mla	r4, r2, r4, r1
 801f2fc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f300:	469a      	mov	sl, r3
 801f302:	fb05 f502 	mul.w	r5, r5, r2
 801f306:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801f30a:	d059      	beq.n	801f3c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801f30c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801f310:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f314:	fa1f f28b 	uxth.w	r2, fp
 801f318:	fa1f f989 	uxth.w	r9, r9
 801f31c:	469e      	mov	lr, r3
 801f31e:	42ac      	cmp	r4, r5
 801f320:	d264      	bcs.n	801f3ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801f322:	eb04 0a07 	add.w	sl, r4, r7
 801f326:	4554      	cmp	r4, sl
 801f328:	d23d      	bcs.n	801f3a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801f32a:	8821      	ldrh	r1, [r4, #0]
 801f32c:	f836 3b02 	ldrh.w	r3, [r6], #2
 801f330:	1208      	asrs	r0, r1, #8
 801f332:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f336:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f33a:	fb10 f009 	smulbb	r0, r0, r9
 801f33e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801f342:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f346:	00c9      	lsls	r1, r1, #3
 801f348:	fb0c 0c02 	mla	ip, ip, r2, r0
 801f34c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f350:	10d8      	asrs	r0, r3, #3
 801f352:	b2c9      	uxtb	r1, r1
 801f354:	00db      	lsls	r3, r3, #3
 801f356:	fa1f fc8c 	uxth.w	ip, ip
 801f35a:	fb1b fb09 	smulbb	fp, fp, r9
 801f35e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f362:	b2db      	uxtb	r3, r3
 801f364:	fb11 f109 	smulbb	r1, r1, r9
 801f368:	fb00 b002 	mla	r0, r0, r2, fp
 801f36c:	fb03 1302 	mla	r3, r3, r2, r1
 801f370:	f10c 0b01 	add.w	fp, ip, #1
 801f374:	b29b      	uxth	r3, r3
 801f376:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801f37a:	b280      	uxth	r0, r0
 801f37c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801f380:	f103 0c01 	add.w	ip, r3, #1
 801f384:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f388:	1c43      	adds	r3, r0, #1
 801f38a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f38e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f392:	0940      	lsrs	r0, r0, #5
 801f394:	ea4c 0c0b 	orr.w	ip, ip, fp
 801f398:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f39c:	ea4c 0c00 	orr.w	ip, ip, r0
 801f3a0:	f824 cb02 	strh.w	ip, [r4], #2
 801f3a4:	e7bf      	b.n	801f326 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801f3a6:	f8be 3000 	ldrh.w	r3, [lr]
 801f3aa:	eba3 0308 	sub.w	r3, r3, r8
 801f3ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f3b2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801f3b6:	eba3 0308 	sub.w	r3, r3, r8
 801f3ba:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f3be:	e7ae      	b.n	801f31e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801f3c0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801f3c4:	f8d9 0000 	ldr.w	r0, [r9]
 801f3c8:	42ac      	cmp	r4, r5
 801f3ca:	6803      	ldr	r3, [r0, #0]
 801f3cc:	d20e      	bcs.n	801f3ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801f3ce:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801f3d2:	4632      	mov	r2, r6
 801f3d4:	463b      	mov	r3, r7
 801f3d6:	4621      	mov	r1, r4
 801f3d8:	47c0      	blx	r8
 801f3da:	f8ba 3000 	ldrh.w	r3, [sl]
 801f3de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f3e2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801f3e6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801f3ea:	e7eb      	b.n	801f3c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801f3ec:	4b02      	ldr	r3, [pc, #8]	; (801f3f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801f3ee:	6818      	ldr	r0, [r3, #0]
 801f3f0:	6803      	ldr	r3, [r0, #0]
 801f3f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f3f4:	4798      	blx	r3
 801f3f6:	e76b      	b.n	801f2d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801f3f8:	2001e1c0 	.word	0x2001e1c0
 801f3fc:	2001e1ba 	.word	0x2001e1ba

0801f400 <_ZN8touchgfx8LCD16bppD0Ev>:
 801f400:	b510      	push	{r4, lr}
 801f402:	2178      	movs	r1, #120	; 0x78
 801f404:	4604      	mov	r4, r0
 801f406:	f00b fea8 	bl	802b15a <_ZdlPvj>
 801f40a:	4620      	mov	r0, r4
 801f40c:	bd10      	pop	{r4, pc}

0801f40e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f40e:	b510      	push	{r4, lr}
 801f410:	2104      	movs	r1, #4
 801f412:	4604      	mov	r4, r0
 801f414:	f00b fea1 	bl	802b15a <_ZdlPvj>
 801f418:	4620      	mov	r0, r4
 801f41a:	bd10      	pop	{r4, pc}

0801f41c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f41c:	b510      	push	{r4, lr}
 801f41e:	2104      	movs	r1, #4
 801f420:	4604      	mov	r4, r0
 801f422:	f00b fe9a 	bl	802b15a <_ZdlPvj>
 801f426:	4620      	mov	r0, r4
 801f428:	bd10      	pop	{r4, pc}

0801f42a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f42a:	b510      	push	{r4, lr}
 801f42c:	2104      	movs	r1, #4
 801f42e:	4604      	mov	r4, r0
 801f430:	f00b fe93 	bl	802b15a <_ZdlPvj>
 801f434:	4620      	mov	r0, r4
 801f436:	bd10      	pop	{r4, pc}

0801f438 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f438:	b510      	push	{r4, lr}
 801f43a:	2104      	movs	r1, #4
 801f43c:	4604      	mov	r4, r0
 801f43e:	f00b fe8c 	bl	802b15a <_ZdlPvj>
 801f442:	4620      	mov	r0, r4
 801f444:	bd10      	pop	{r4, pc}

0801f446 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f446:	b510      	push	{r4, lr}
 801f448:	2104      	movs	r1, #4
 801f44a:	4604      	mov	r4, r0
 801f44c:	f00b fe85 	bl	802b15a <_ZdlPvj>
 801f450:	4620      	mov	r0, r4
 801f452:	bd10      	pop	{r4, pc}

0801f454 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801f454:	b510      	push	{r4, lr}
 801f456:	2104      	movs	r1, #4
 801f458:	4604      	mov	r4, r0
 801f45a:	f00b fe7e 	bl	802b15a <_ZdlPvj>
 801f45e:	4620      	mov	r0, r4
 801f460:	bd10      	pop	{r4, pc}

0801f462 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f462:	b510      	push	{r4, lr}
 801f464:	2104      	movs	r1, #4
 801f466:	4604      	mov	r4, r0
 801f468:	f00b fe77 	bl	802b15a <_ZdlPvj>
 801f46c:	4620      	mov	r0, r4
 801f46e:	bd10      	pop	{r4, pc}

0801f470 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801f470:	b510      	push	{r4, lr}
 801f472:	2104      	movs	r1, #4
 801f474:	4604      	mov	r4, r0
 801f476:	f00b fe70 	bl	802b15a <_ZdlPvj>
 801f47a:	4620      	mov	r0, r4
 801f47c:	bd10      	pop	{r4, pc}

0801f47e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f47e:	b510      	push	{r4, lr}
 801f480:	2104      	movs	r1, #4
 801f482:	4604      	mov	r4, r0
 801f484:	f00b fe69 	bl	802b15a <_ZdlPvj>
 801f488:	4620      	mov	r0, r4
 801f48a:	bd10      	pop	{r4, pc}

0801f48c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f48c:	b510      	push	{r4, lr}
 801f48e:	2104      	movs	r1, #4
 801f490:	4604      	mov	r4, r0
 801f492:	f00b fe62 	bl	802b15a <_ZdlPvj>
 801f496:	4620      	mov	r0, r4
 801f498:	bd10      	pop	{r4, pc}

0801f49a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f49a:	b510      	push	{r4, lr}
 801f49c:	2104      	movs	r1, #4
 801f49e:	4604      	mov	r4, r0
 801f4a0:	f00b fe5b 	bl	802b15a <_ZdlPvj>
 801f4a4:	4620      	mov	r0, r4
 801f4a6:	bd10      	pop	{r4, pc}

0801f4a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f4a8:	b510      	push	{r4, lr}
 801f4aa:	2104      	movs	r1, #4
 801f4ac:	4604      	mov	r4, r0
 801f4ae:	f00b fe54 	bl	802b15a <_ZdlPvj>
 801f4b2:	4620      	mov	r0, r4
 801f4b4:	bd10      	pop	{r4, pc}

0801f4b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f4b6:	b510      	push	{r4, lr}
 801f4b8:	2104      	movs	r1, #4
 801f4ba:	4604      	mov	r4, r0
 801f4bc:	f00b fe4d 	bl	802b15a <_ZdlPvj>
 801f4c0:	4620      	mov	r0, r4
 801f4c2:	bd10      	pop	{r4, pc}

0801f4c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f4c4:	b510      	push	{r4, lr}
 801f4c6:	2104      	movs	r1, #4
 801f4c8:	4604      	mov	r4, r0
 801f4ca:	f00b fe46 	bl	802b15a <_ZdlPvj>
 801f4ce:	4620      	mov	r0, r4
 801f4d0:	bd10      	pop	{r4, pc}

0801f4d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f4d2:	b510      	push	{r4, lr}
 801f4d4:	2104      	movs	r1, #4
 801f4d6:	4604      	mov	r4, r0
 801f4d8:	f00b fe3f 	bl	802b15a <_ZdlPvj>
 801f4dc:	4620      	mov	r0, r4
 801f4de:	bd10      	pop	{r4, pc}

0801f4e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f4e0:	b510      	push	{r4, lr}
 801f4e2:	2104      	movs	r1, #4
 801f4e4:	4604      	mov	r4, r0
 801f4e6:	f00b fe38 	bl	802b15a <_ZdlPvj>
 801f4ea:	4620      	mov	r0, r4
 801f4ec:	bd10      	pop	{r4, pc}

0801f4ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f4ee:	b510      	push	{r4, lr}
 801f4f0:	2104      	movs	r1, #4
 801f4f2:	4604      	mov	r4, r0
 801f4f4:	f00b fe31 	bl	802b15a <_ZdlPvj>
 801f4f8:	4620      	mov	r0, r4
 801f4fa:	bd10      	pop	{r4, pc}

0801f4fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f4fc:	b510      	push	{r4, lr}
 801f4fe:	2104      	movs	r1, #4
 801f500:	4604      	mov	r4, r0
 801f502:	f00b fe2a 	bl	802b15a <_ZdlPvj>
 801f506:	4620      	mov	r0, r4
 801f508:	bd10      	pop	{r4, pc}

0801f50a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f50a:	b510      	push	{r4, lr}
 801f50c:	2104      	movs	r1, #4
 801f50e:	4604      	mov	r4, r0
 801f510:	f00b fe23 	bl	802b15a <_ZdlPvj>
 801f514:	4620      	mov	r0, r4
 801f516:	bd10      	pop	{r4, pc}

0801f518 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f518:	b510      	push	{r4, lr}
 801f51a:	2104      	movs	r1, #4
 801f51c:	4604      	mov	r4, r0
 801f51e:	f00b fe1c 	bl	802b15a <_ZdlPvj>
 801f522:	4620      	mov	r0, r4
 801f524:	bd10      	pop	{r4, pc}

0801f526 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f526:	b510      	push	{r4, lr}
 801f528:	2104      	movs	r1, #4
 801f52a:	4604      	mov	r4, r0
 801f52c:	f00b fe15 	bl	802b15a <_ZdlPvj>
 801f530:	4620      	mov	r0, r4
 801f532:	bd10      	pop	{r4, pc}

0801f534 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f534:	b510      	push	{r4, lr}
 801f536:	2104      	movs	r1, #4
 801f538:	4604      	mov	r4, r0
 801f53a:	f00b fe0e 	bl	802b15a <_ZdlPvj>
 801f53e:	4620      	mov	r0, r4
 801f540:	bd10      	pop	{r4, pc}

0801f542 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f542:	b510      	push	{r4, lr}
 801f544:	2104      	movs	r1, #4
 801f546:	4604      	mov	r4, r0
 801f548:	f00b fe07 	bl	802b15a <_ZdlPvj>
 801f54c:	4620      	mov	r0, r4
 801f54e:	bd10      	pop	{r4, pc}

0801f550 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f550:	b510      	push	{r4, lr}
 801f552:	2104      	movs	r1, #4
 801f554:	4604      	mov	r4, r0
 801f556:	f00b fe00 	bl	802b15a <_ZdlPvj>
 801f55a:	4620      	mov	r0, r4
 801f55c:	bd10      	pop	{r4, pc}

0801f55e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801f55e:	b510      	push	{r4, lr}
 801f560:	2104      	movs	r1, #4
 801f562:	4604      	mov	r4, r0
 801f564:	f00b fdf9 	bl	802b15a <_ZdlPvj>
 801f568:	4620      	mov	r0, r4
 801f56a:	bd10      	pop	{r4, pc}

0801f56c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801f56c:	b510      	push	{r4, lr}
 801f56e:	2104      	movs	r1, #4
 801f570:	4604      	mov	r4, r0
 801f572:	f00b fdf2 	bl	802b15a <_ZdlPvj>
 801f576:	4620      	mov	r0, r4
 801f578:	bd10      	pop	{r4, pc}

0801f57a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801f57a:	b510      	push	{r4, lr}
 801f57c:	2104      	movs	r1, #4
 801f57e:	4604      	mov	r4, r0
 801f580:	f00b fdeb 	bl	802b15a <_ZdlPvj>
 801f584:	4620      	mov	r0, r4
 801f586:	bd10      	pop	{r4, pc}

0801f588 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801f588:	b510      	push	{r4, lr}
 801f58a:	2104      	movs	r1, #4
 801f58c:	4604      	mov	r4, r0
 801f58e:	f00b fde4 	bl	802b15a <_ZdlPvj>
 801f592:	4620      	mov	r0, r4
 801f594:	bd10      	pop	{r4, pc}
	...

0801f598 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801f598:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f59a:	4606      	mov	r6, r0
 801f59c:	b087      	sub	sp, #28
 801f59e:	460c      	mov	r4, r1
 801f5a0:	4617      	mov	r7, r2
 801f5a2:	461d      	mov	r5, r3
 801f5a4:	b333      	cbz	r3, 801f5f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801f5a6:	4608      	mov	r0, r1
 801f5a8:	f7f2 fdf7 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 801f5ac:	bb10      	cbnz	r0, 801f5f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801f5ae:	6820      	ldr	r0, [r4, #0]
 801f5b0:	6861      	ldr	r1, [r4, #4]
 801f5b2:	4c1c      	ldr	r4, [pc, #112]	; (801f624 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801f5b4:	ab04      	add	r3, sp, #16
 801f5b6:	c303      	stmia	r3!, {r0, r1}
 801f5b8:	a804      	add	r0, sp, #16
 801f5ba:	f7f9 fd2b 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f5be:	6820      	ldr	r0, [r4, #0]
 801f5c0:	6803      	ldr	r3, [r0, #0]
 801f5c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f5c4:	4798      	blx	r3
 801f5c6:	2dff      	cmp	r5, #255	; 0xff
 801f5c8:	d016      	beq.n	801f5f8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801f5ca:	f010 0f08 	tst.w	r0, #8
 801f5ce:	6820      	ldr	r0, [r4, #0]
 801f5d0:	d015      	beq.n	801f5fe <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801f5d2:	2400      	movs	r4, #0
 801f5d4:	6801      	ldr	r1, [r0, #0]
 801f5d6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801f5da:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f5de:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801f5e2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801f5e6:	9401      	str	r4, [sp, #4]
 801f5e8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801f5ec:	9400      	str	r4, [sp, #0]
 801f5ee:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801f5f0:	4639      	mov	r1, r7
 801f5f2:	47a0      	blx	r4
 801f5f4:	b007      	add	sp, #28
 801f5f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f5f8:	f010 0f02 	tst.w	r0, #2
 801f5fc:	e7e7      	b.n	801f5ce <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801f5fe:	6803      	ldr	r3, [r0, #0]
 801f600:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f602:	4798      	blx	r3
 801f604:	4b08      	ldr	r3, [pc, #32]	; (801f628 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801f606:	881a      	ldrh	r2, [r3, #0]
 801f608:	6833      	ldr	r3, [r6, #0]
 801f60a:	e9cd 7500 	strd	r7, r5, [sp]
 801f60e:	4601      	mov	r1, r0
 801f610:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801f612:	4630      	mov	r0, r6
 801f614:	ab04      	add	r3, sp, #16
 801f616:	47a8      	blx	r5
 801f618:	6820      	ldr	r0, [r4, #0]
 801f61a:	6803      	ldr	r3, [r0, #0]
 801f61c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f61e:	4798      	blx	r3
 801f620:	e7e8      	b.n	801f5f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801f622:	bf00      	nop
 801f624:	2001e1c0 	.word	0x2001e1c0
 801f628:	2001e1ba 	.word	0x2001e1ba

0801f62c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801f62c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f630:	4690      	mov	r8, r2
 801f632:	4a8d      	ldr	r2, [pc, #564]	; (801f868 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>)
 801f634:	6812      	ldr	r2, [r2, #0]
 801f636:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801f63a:	b091      	sub	sp, #68	; 0x44
 801f63c:	2a02      	cmp	r2, #2
 801f63e:	4606      	mov	r6, r0
 801f640:	460d      	mov	r5, r1
 801f642:	461c      	mov	r4, r3
 801f644:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	; 0x6c
 801f648:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f64c:	d106      	bne.n	801f65c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x30>
 801f64e:	4b87      	ldr	r3, [pc, #540]	; (801f86c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x240>)
 801f650:	4a87      	ldr	r2, [pc, #540]	; (801f870 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 801f652:	f240 316b 	movw	r1, #875	; 0x36b
 801f656:	4887      	ldr	r0, [pc, #540]	; (801f874 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>)
 801f658:	f00c fccc 	bl	802bff4 <__assert_func>
 801f65c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801f65e:	b923      	cbnz	r3, 801f66a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e>
 801f660:	4b85      	ldr	r3, [pc, #532]	; (801f878 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x24c>)
 801f662:	4a83      	ldr	r2, [pc, #524]	; (801f870 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 801f664:	f44f 715b 	mov.w	r1, #876	; 0x36c
 801f668:	e7f5      	b.n	801f656 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x2a>
 801f66a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801f66e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f672:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 801f676:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 801f67a:	4621      	mov	r1, r4
 801f67c:	4648      	mov	r0, r9
 801f67e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801f682:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 801f686:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801f68a:	f7f2 fd43 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801f68e:	4641      	mov	r1, r8
 801f690:	4648      	mov	r0, r9
 801f692:	f7f2 fd3f 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 801f696:	4a79      	ldr	r2, [pc, #484]	; (801f87c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 801f698:	f8b2 c000 	ldrh.w	ip, [r2]
 801f69c:	4a78      	ldr	r2, [pc, #480]	; (801f880 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x254>)
 801f69e:	8810      	ldrh	r0, [r2, #0]
 801f6a0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801f6a4:	2a00      	cmp	r2, #0
 801f6a6:	fa0f f18c 	sxth.w	r1, ip
 801f6aa:	fa0f fe80 	sxth.w	lr, r0
 801f6ae:	da07      	bge.n	801f6c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x94>
 801f6b0:	f8bd 802c 	ldrh.w	r8, [sp, #44]	; 0x2c
 801f6b4:	4442      	add	r2, r8
 801f6b6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801f6ba:	2200      	movs	r2, #0
 801f6bc:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801f6c0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801f6c4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801f6c8:	1a89      	subs	r1, r1, r2
 801f6ca:	4588      	cmp	r8, r1
 801f6cc:	bfc4      	itt	gt
 801f6ce:	ebac 0102 	subgt.w	r1, ip, r2
 801f6d2:	f8ad 102c 	strhgt.w	r1, [sp, #44]	; 0x2c
 801f6d6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801f6da:	2900      	cmp	r1, #0
 801f6dc:	da07      	bge.n	801f6ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xc2>
 801f6de:	f8bd 802e 	ldrh.w	r8, [sp, #46]	; 0x2e
 801f6e2:	4441      	add	r1, r8
 801f6e4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801f6e8:	2100      	movs	r1, #0
 801f6ea:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 801f6ee:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801f6f2:	f9bd 102e 	ldrsh.w	r1, [sp, #46]	; 0x2e
 801f6f6:	ebae 0e0a 	sub.w	lr, lr, sl
 801f6fa:	4571      	cmp	r1, lr
 801f6fc:	bfc4      	itt	gt
 801f6fe:	eba0 010a 	subgt.w	r1, r0, sl
 801f702:	f8ad 102e 	strhgt.w	r1, [sp, #46]	; 0x2e
 801f706:	495f      	ldr	r1, [pc, #380]	; (801f884 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x258>)
 801f708:	7809      	ldrb	r1, [r1, #0]
 801f70a:	b9a9      	cbnz	r1, 801f738 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x10c>
 801f70c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801f710:	45e0      	cmp	r8, ip
 801f712:	bf14      	ite	ne
 801f714:	2300      	movne	r3, #0
 801f716:	2301      	moveq	r3, #1
 801f718:	4648      	mov	r0, r9
 801f71a:	9202      	str	r2, [sp, #8]
 801f71c:	9305      	str	r3, [sp, #20]
 801f71e:	f7f2 fd3c 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 801f722:	9a02      	ldr	r2, [sp, #8]
 801f724:	b160      	cbz	r0, 801f740 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x114>
 801f726:	2300      	movs	r3, #0
 801f728:	8033      	strh	r3, [r6, #0]
 801f72a:	8073      	strh	r3, [r6, #2]
 801f72c:	80b3      	strh	r3, [r6, #4]
 801f72e:	4630      	mov	r0, r6
 801f730:	80f3      	strh	r3, [r6, #6]
 801f732:	b011      	add	sp, #68	; 0x44
 801f734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f738:	f9bd 802e 	ldrsh.w	r8, [sp, #46]	; 0x2e
 801f73c:	4580      	cmp	r8, r0
 801f73e:	e7e8      	b.n	801f712 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe6>
 801f740:	8821      	ldrh	r1, [r4, #0]
 801f742:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801f746:	9304      	str	r3, [sp, #16]
 801f748:	1a52      	subs	r2, r2, r1
 801f74a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801f74e:	9306      	str	r3, [sp, #24]
 801f750:	b213      	sxth	r3, r2
 801f752:	9302      	str	r3, [sp, #8]
 801f754:	8863      	ldrh	r3, [r4, #2]
 801f756:	900e      	str	r0, [sp, #56]	; 0x38
 801f758:	ebaa 0a03 	sub.w	sl, sl, r3
 801f75c:	fa0f f38a 	sxth.w	r3, sl
 801f760:	9303      	str	r3, [sp, #12]
 801f762:	9b02      	ldr	r3, [sp, #8]
 801f764:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801f768:	9b03      	ldr	r3, [sp, #12]
 801f76a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801f76e:	9b04      	ldr	r3, [sp, #16]
 801f770:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801f774:	a90e      	add	r1, sp, #56	; 0x38
 801f776:	9b06      	ldr	r3, [sp, #24]
 801f778:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801f77c:	a80c      	add	r0, sp, #48	; 0x30
 801f77e:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801f782:	f8ad b03c 	strh.w	fp, [sp, #60]	; 0x3c
 801f786:	f7f9 fc6d 	bl	8019064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f78a:	4648      	mov	r0, r9
 801f78c:	f7f9 fc42 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f790:	a80e      	add	r0, sp, #56	; 0x38
 801f792:	f7f9 fc3f 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f796:	4b3c      	ldr	r3, [pc, #240]	; (801f888 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25c>)
 801f798:	f9bd 703c 	ldrsh.w	r7, [sp, #60]	; 0x3c
 801f79c:	881b      	ldrh	r3, [r3, #0]
 801f79e:	9307      	str	r3, [sp, #28]
 801f7a0:	682b      	ldr	r3, [r5, #0]
 801f7a2:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 801f868 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 801f7a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801f7a8:	4628      	mov	r0, r5
 801f7aa:	4798      	blx	r3
 801f7ac:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801f7b0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801f7b4:	4682      	mov	sl, r0
 801f7b6:	fb17 2303 	smlabb	r3, r7, r3, r2
 801f7ba:	f8d8 0000 	ldr.w	r0, [r8]
 801f7be:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801f7c0:	eb02 0443 	add.w	r4, r2, r3, lsl #1
 801f7c4:	6803      	ldr	r3, [r0, #0]
 801f7c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801f7c8:	4798      	blx	r3
 801f7ca:	9009      	str	r0, [sp, #36]	; 0x24
 801f7cc:	f8d8 0000 	ldr.w	r0, [r8]
 801f7d0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f7d4:	6802      	ldr	r2, [r0, #0]
 801f7d6:	9308      	str	r3, [sp, #32]
 801f7d8:	6b92      	ldr	r2, [r2, #56]	; 0x38
 801f7da:	f9bd 502a 	ldrsh.w	r5, [sp, #42]	; 0x2a
 801f7de:	4790      	blx	r2
 801f7e0:	f010 0f01 	tst.w	r0, #1
 801f7e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f7e6:	d011      	beq.n	801f80c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 801f7e8:	f8d8 0000 	ldr.w	r0, [r8]
 801f7ec:	6803      	ldr	r3, [r0, #0]
 801f7ee:	f8cd b000 	str.w	fp, [sp]
 801f7f2:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 801f7f4:	e899 0006 	ldmia.w	r9, {r1, r2}
 801f7f8:	4623      	mov	r3, r4
 801f7fa:	47a8      	blx	r5
 801f7fc:	9b02      	ldr	r3, [sp, #8]
 801f7fe:	8033      	strh	r3, [r6, #0]
 801f800:	9b03      	ldr	r3, [sp, #12]
 801f802:	8073      	strh	r3, [r6, #2]
 801f804:	9b04      	ldr	r3, [sp, #16]
 801f806:	80b3      	strh	r3, [r6, #4]
 801f808:	9b06      	ldr	r3, [sp, #24]
 801f80a:	e790      	b.n	801f72e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x102>
 801f80c:	9a08      	ldr	r2, [sp, #32]
 801f80e:	fb0a f505 	mul.w	r5, sl, r5
 801f812:	eb05 0542 	add.w	r5, r5, r2, lsl #1
 801f816:	9a05      	ldr	r2, [sp, #20]
 801f818:	441d      	add	r5, r3
 801f81a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801f81e:	b162      	cbz	r2, 801f83a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 801f820:	9a07      	ldr	r2, [sp, #28]
 801f822:	4297      	cmp	r7, r2
 801f824:	d109      	bne.n	801f83a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 801f826:	f8d8 0000 	ldr.w	r0, [r8]
 801f82a:	6802      	ldr	r2, [r0, #0]
 801f82c:	fb03 f30a 	mul.w	r3, r3, sl
 801f830:	6b57      	ldr	r7, [r2, #52]	; 0x34
 801f832:	4621      	mov	r1, r4
 801f834:	462a      	mov	r2, r5
 801f836:	47b8      	blx	r7
 801f838:	e7e0      	b.n	801f7fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 801f83a:	437b      	muls	r3, r7
 801f83c:	f8df b028 	ldr.w	fp, [pc, #40]	; 801f868 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 801f840:	eb04 0843 	add.w	r8, r4, r3, lsl #1
 801f844:	007f      	lsls	r7, r7, #1
 801f846:	4544      	cmp	r4, r8
 801f848:	d2d8      	bcs.n	801f7fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 801f84a:	f8db 0000 	ldr.w	r0, [fp]
 801f84e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f852:	6802      	ldr	r2, [r0, #0]
 801f854:	4621      	mov	r1, r4
 801f856:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 801f85a:	005b      	lsls	r3, r3, #1
 801f85c:	462a      	mov	r2, r5
 801f85e:	47c8      	blx	r9
 801f860:	4455      	add	r5, sl
 801f862:	443c      	add	r4, r7
 801f864:	e7ef      	b.n	801f846 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 801f866:	bf00      	nop
 801f868:	2001e1c0 	.word	0x2001e1c0
 801f86c:	08035a0a 	.word	0x08035a0a
 801f870:	08036274 	.word	0x08036274
 801f874:	08035abc 	.word	0x08035abc
 801f878:	080359bc 	.word	0x080359bc
 801f87c:	2001e1b4 	.word	0x2001e1b4
 801f880:	2001e1b6 	.word	0x2001e1b6
 801f884:	2001e1b8 	.word	0x2001e1b8
 801f888:	2001e1ba 	.word	0x2001e1ba

0801f88c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801f88c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f890:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801f894:	9e08      	ldr	r6, [sp, #32]
 801f896:	4688      	mov	r8, r1
 801f898:	4614      	mov	r4, r2
 801f89a:	461d      	mov	r5, r3
 801f89c:	2f00      	cmp	r7, #0
 801f89e:	f000 80b3 	beq.w	801fa08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801f8a2:	4618      	mov	r0, r3
 801f8a4:	f7f2 fc79 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 801f8a8:	2800      	cmp	r0, #0
 801f8aa:	f040 80ad 	bne.w	801fa08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801f8ae:	f9b5 1000 	ldrsh.w	r1, [r5]
 801f8b2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801f8b6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801f8ba:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801f8be:	fb04 1303 	mla	r3, r4, r3, r1
 801f8c2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801f8c6:	4365      	muls	r5, r4
 801f8c8:	2fff      	cmp	r7, #255	; 0xff
 801f8ca:	eba4 0200 	sub.w	r2, r4, r0
 801f8ce:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801f8d2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801f8d6:	d04b      	beq.n	801f970 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801f8d8:	b2bc      	uxth	r4, r7
 801f8da:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801f8de:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801f8e2:	fa5f f788 	uxtb.w	r7, r8
 801f8e6:	b2f3      	uxtb	r3, r6
 801f8e8:	0040      	lsls	r0, r0, #1
 801f8ea:	fb0e fe04 	mul.w	lr, lr, r4
 801f8ee:	4367      	muls	r7, r4
 801f8f0:	4363      	muls	r3, r4
 801f8f2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801f8f6:	fa1f fc8c 	uxth.w	ip, ip
 801f8fa:	42a9      	cmp	r1, r5
 801f8fc:	f080 8084 	bcs.w	801fa08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801f900:	eb01 0900 	add.w	r9, r1, r0
 801f904:	4549      	cmp	r1, r9
 801f906:	d231      	bcs.n	801f96c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 801f908:	880a      	ldrh	r2, [r1, #0]
 801f90a:	1214      	asrs	r4, r2, #8
 801f90c:	10d6      	asrs	r6, r2, #3
 801f90e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f912:	00d2      	lsls	r2, r2, #3
 801f914:	b2d2      	uxtb	r2, r2
 801f916:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f91a:	fb14 f40c 	smulbb	r4, r4, ip
 801f91e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f922:	4474      	add	r4, lr
 801f924:	fb12 f20c 	smulbb	r2, r2, ip
 801f928:	b2a4      	uxth	r4, r4
 801f92a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f92e:	441a      	add	r2, r3
 801f930:	b292      	uxth	r2, r2
 801f932:	f104 0a01 	add.w	sl, r4, #1
 801f936:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801f93a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f93e:	fb16 f60c 	smulbb	r6, r6, ip
 801f942:	f102 0a01 	add.w	sl, r2, #1
 801f946:	443e      	add	r6, r7
 801f948:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801f94c:	b2b6      	uxth	r6, r6
 801f94e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f952:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f956:	4322      	orrs	r2, r4
 801f958:	1c74      	adds	r4, r6, #1
 801f95a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801f95e:	0976      	lsrs	r6, r6, #5
 801f960:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f964:	4332      	orrs	r2, r6
 801f966:	f821 2b02 	strh.w	r2, [r1], #2
 801f96a:	e7cb      	b.n	801f904 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 801f96c:	4441      	add	r1, r8
 801f96e:	e7c4      	b.n	801f8fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801f970:	4f26      	ldr	r7, [pc, #152]	; (801fa0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 801f972:	0973      	lsrs	r3, r6, #5
 801f974:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f978:	ea08 0707 	and.w	r7, r8, r7
 801f97c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801f980:	433b      	orrs	r3, r7
 801f982:	4333      	orrs	r3, r6
 801f984:	07e6      	lsls	r6, r4, #31
 801f986:	b29b      	uxth	r3, r3
 801f988:	d50b      	bpl.n	801f9a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 801f98a:	0040      	lsls	r0, r0, #1
 801f98c:	0052      	lsls	r2, r2, #1
 801f98e:	42a9      	cmp	r1, r5
 801f990:	d23a      	bcs.n	801fa08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801f992:	180c      	adds	r4, r1, r0
 801f994:	42a1      	cmp	r1, r4
 801f996:	d202      	bcs.n	801f99e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 801f998:	f821 3b02 	strh.w	r3, [r1], #2
 801f99c:	e7fa      	b.n	801f994 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 801f99e:	4411      	add	r1, r2
 801f9a0:	e7f5      	b.n	801f98e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 801f9a2:	078f      	lsls	r7, r1, #30
 801f9a4:	d008      	beq.n	801f9b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 801f9a6:	0066      	lsls	r6, r4, #1
 801f9a8:	460a      	mov	r2, r1
 801f9aa:	42aa      	cmp	r2, r5
 801f9ac:	d202      	bcs.n	801f9b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 801f9ae:	8013      	strh	r3, [r2, #0]
 801f9b0:	4432      	add	r2, r6
 801f9b2:	e7fa      	b.n	801f9aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 801f9b4:	3102      	adds	r1, #2
 801f9b6:	3801      	subs	r0, #1
 801f9b8:	07c6      	lsls	r6, r0, #31
 801f9ba:	d50b      	bpl.n	801f9d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801f9bc:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801f9c0:	3a01      	subs	r2, #1
 801f9c2:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801f9c6:	0066      	lsls	r6, r4, #1
 801f9c8:	42aa      	cmp	r2, r5
 801f9ca:	d202      	bcs.n	801f9d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801f9cc:	8013      	strh	r3, [r2, #0]
 801f9ce:	4432      	add	r2, r6
 801f9d0:	e7fa      	b.n	801f9c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 801f9d2:	3801      	subs	r0, #1
 801f9d4:	b1c0      	cbz	r0, 801fa08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801f9d6:	1040      	asrs	r0, r0, #1
 801f9d8:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801f9dc:	0080      	lsls	r0, r0, #2
 801f9de:	0064      	lsls	r4, r4, #1
 801f9e0:	42a9      	cmp	r1, r5
 801f9e2:	d211      	bcs.n	801fa08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801f9e4:	078a      	lsls	r2, r1, #30
 801f9e6:	d006      	beq.n	801f9f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 801f9e8:	4b09      	ldr	r3, [pc, #36]	; (801fa10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 801f9ea:	4a0a      	ldr	r2, [pc, #40]	; (801fa14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 801f9ec:	480a      	ldr	r0, [pc, #40]	; (801fa18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 801f9ee:	f240 4137 	movw	r1, #1079	; 0x437
 801f9f2:	f00c faff 	bl	802bff4 <__assert_func>
 801f9f6:	180e      	adds	r6, r1, r0
 801f9f8:	460a      	mov	r2, r1
 801f9fa:	42b2      	cmp	r2, r6
 801f9fc:	d202      	bcs.n	801fa04 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 801f9fe:	f842 3b04 	str.w	r3, [r2], #4
 801fa02:	e7fa      	b.n	801f9fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 801fa04:	4421      	add	r1, r4
 801fa06:	e7eb      	b.n	801f9e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 801fa08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fa0c:	00fff800 	.word	0x00fff800
 801fa10:	0803586d 	.word	0x0803586d
 801fa14:	08035ec0 	.word	0x08035ec0
 801fa18:	08035abc 	.word	0x08035abc

0801fa1c <_ZN8touchgfx8LCD16bppC1Ev>:
 801fa1c:	2200      	movs	r2, #0
 801fa1e:	4910      	ldr	r1, [pc, #64]	; (801fa60 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 801fa20:	6042      	str	r2, [r0, #4]
 801fa22:	6001      	str	r1, [r0, #0]
 801fa24:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801fa28:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801fa2c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801fa30:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801fa34:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801fa38:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801fa3c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801fa40:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801fa44:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801fa48:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801fa4c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801fa50:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801fa54:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801fa58:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801fa5c:	4770      	bx	lr
 801fa5e:	bf00      	nop
 801fa60:	08035e70 	.word	0x08035e70

0801fa64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801fa64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa68:	460d      	mov	r5, r1
 801fa6a:	b08d      	sub	sp, #52	; 0x34
 801fa6c:	4604      	mov	r4, r0
 801fa6e:	6808      	ldr	r0, [r1, #0]
 801fa70:	6849      	ldr	r1, [r1, #4]
 801fa72:	4699      	mov	r9, r3
 801fa74:	ab08      	add	r3, sp, #32
 801fa76:	c303      	stmia	r3!, {r0, r1}
 801fa78:	6810      	ldr	r0, [r2, #0]
 801fa7a:	6851      	ldr	r1, [r2, #4]
 801fa7c:	ab0a      	add	r3, sp, #40	; 0x28
 801fa7e:	c303      	stmia	r3!, {r0, r1}
 801fa80:	a808      	add	r0, sp, #32
 801fa82:	f7f9 fac7 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fa86:	4629      	mov	r1, r5
 801fa88:	a80a      	add	r0, sp, #40	; 0x28
 801fa8a:	f7f9 faeb 	bl	8019064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fa8e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801fa92:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801fa96:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801fa9a:	4d63      	ldr	r5, [pc, #396]	; (801fc28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801fa9c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801faa0:	6828      	ldr	r0, [r5, #0]
 801faa2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801faa6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801faaa:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801faae:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801fab2:	440a      	add	r2, r1
 801fab4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801fab8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801fabc:	4413      	add	r3, r2
 801fabe:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801fac2:	6803      	ldr	r3, [r0, #0]
 801fac4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fac6:	4798      	blx	r3
 801fac8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801facc:	d119      	bne.n	801fb02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801face:	f010 0f20 	tst.w	r0, #32
 801fad2:	6828      	ldr	r0, [r5, #0]
 801fad4:	d018      	beq.n	801fb08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801fad6:	2500      	movs	r5, #0
 801fad8:	6801      	ldr	r1, [r0, #0]
 801fada:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801fade:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801fae2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801fae6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801faea:	9502      	str	r5, [sp, #8]
 801faec:	b2b6      	uxth	r6, r6
 801faee:	fa1f f588 	uxth.w	r5, r8
 801faf2:	9601      	str	r6, [sp, #4]
 801faf4:	9500      	str	r5, [sp, #0]
 801faf6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801faf8:	4621      	mov	r1, r4
 801fafa:	47a8      	blx	r5
 801fafc:	b00d      	add	sp, #52	; 0x34
 801fafe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb02:	f010 0f40 	tst.w	r0, #64	; 0x40
 801fb06:	e7e4      	b.n	801fad2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801fb08:	6803      	ldr	r3, [r0, #0]
 801fb0a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fb0c:	4798      	blx	r3
 801fb0e:	4947      	ldr	r1, [pc, #284]	; (801fc2c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801fb10:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801fb14:	880b      	ldrh	r3, [r1, #0]
 801fb16:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801fb1a:	fb03 5202 	mla	r2, r3, r2, r5
 801fb1e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fb22:	4373      	muls	r3, r6
 801fb24:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fb28:	9307      	str	r3, [sp, #28]
 801fb2a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801fb2e:	9306      	str	r3, [sp, #24]
 801fb30:	468a      	mov	sl, r1
 801fb32:	9b07      	ldr	r3, [sp, #28]
 801fb34:	4298      	cmp	r0, r3
 801fb36:	d270      	bcs.n	801fc1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801fb38:	9b06      	ldr	r3, [sp, #24]
 801fb3a:	4621      	mov	r1, r4
 801fb3c:	eb00 0b03 	add.w	fp, r0, r3
 801fb40:	4558      	cmp	r0, fp
 801fb42:	d25d      	bcs.n	801fc00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801fb44:	f851 4b04 	ldr.w	r4, [r1], #4
 801fb48:	0e23      	lsrs	r3, r4, #24
 801fb4a:	d014      	beq.n	801fb76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801fb4c:	2bff      	cmp	r3, #255	; 0xff
 801fb4e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801fb52:	d112      	bne.n	801fb7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801fb54:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801fb58:	d10f      	bne.n	801fb7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801fb5a:	0963      	lsrs	r3, r4, #5
 801fb5c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801fb60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fb64:	f02c 0c07 	bic.w	ip, ip, #7
 801fb68:	ea43 0c0c 	orr.w	ip, r3, ip
 801fb6c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801fb70:	ea4c 0404 	orr.w	r4, ip, r4
 801fb74:	8004      	strh	r4, [r0, #0]
 801fb76:	3002      	adds	r0, #2
 801fb78:	e7e2      	b.n	801fb40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801fb7a:	fb09 f303 	mul.w	r3, r9, r3
 801fb7e:	8807      	ldrh	r7, [r0, #0]
 801fb80:	1c5a      	adds	r2, r3, #1
 801fb82:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801fb86:	1212      	asrs	r2, r2, #8
 801fb88:	123e      	asrs	r6, r7, #8
 801fb8a:	b293      	uxth	r3, r2
 801fb8c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801fb90:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801fb94:	43d2      	mvns	r2, r2
 801fb96:	b2d2      	uxtb	r2, r2
 801fb98:	10fd      	asrs	r5, r7, #3
 801fb9a:	fb1e fe03 	smulbb	lr, lr, r3
 801fb9e:	00ff      	lsls	r7, r7, #3
 801fba0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801fba4:	fb06 e602 	mla	r6, r6, r2, lr
 801fba8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801fbac:	b2ff      	uxtb	r7, r7
 801fbae:	fa5f fc8c 	uxtb.w	ip, ip
 801fbb2:	b2e4      	uxtb	r4, r4
 801fbb4:	b2b6      	uxth	r6, r6
 801fbb6:	fb1c fc03 	smulbb	ip, ip, r3
 801fbba:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801fbbe:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801fbc2:	fb14 f403 	smulbb	r4, r4, r3
 801fbc6:	fb05 c502 	mla	r5, r5, r2, ip
 801fbca:	f106 0e01 	add.w	lr, r6, #1
 801fbce:	fb07 4702 	mla	r7, r7, r2, r4
 801fbd2:	b2ad      	uxth	r5, r5
 801fbd4:	b2bf      	uxth	r7, r7
 801fbd6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801fbda:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801fbde:	f105 0c01 	add.w	ip, r5, #1
 801fbe2:	1c7e      	adds	r6, r7, #1
 801fbe4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801fbe8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fbec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801fbf0:	096d      	lsrs	r5, r5, #5
 801fbf2:	ea46 060e 	orr.w	r6, r6, lr
 801fbf6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fbfa:	432e      	orrs	r6, r5
 801fbfc:	8006      	strh	r6, [r0, #0]
 801fbfe:	e7ba      	b.n	801fb76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801fc00:	f8ba 3000 	ldrh.w	r3, [sl]
 801fc04:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801fc08:	eba3 0308 	sub.w	r3, r3, r8
 801fc0c:	eba4 0408 	sub.w	r4, r4, r8
 801fc10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fc14:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801fc18:	e78b      	b.n	801fb32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801fc1a:	4b03      	ldr	r3, [pc, #12]	; (801fc28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801fc1c:	6818      	ldr	r0, [r3, #0]
 801fc1e:	6803      	ldr	r3, [r0, #0]
 801fc20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fc22:	4798      	blx	r3
 801fc24:	e76a      	b.n	801fafc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801fc26:	bf00      	nop
 801fc28:	2001e1c0 	.word	0x2001e1c0
 801fc2c:	2001e1ba 	.word	0x2001e1ba

0801fc30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801fc30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801fc34:	460c      	mov	r4, r1
 801fc36:	b085      	sub	sp, #20
 801fc38:	6810      	ldr	r0, [r2, #0]
 801fc3a:	6851      	ldr	r1, [r2, #4]
 801fc3c:	466d      	mov	r5, sp
 801fc3e:	c503      	stmia	r5!, {r0, r1}
 801fc40:	6818      	ldr	r0, [r3, #0]
 801fc42:	6859      	ldr	r1, [r3, #4]
 801fc44:	4616      	mov	r6, r2
 801fc46:	c503      	stmia	r5!, {r0, r1}
 801fc48:	4668      	mov	r0, sp
 801fc4a:	f7f9 f9e3 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fc4e:	4631      	mov	r1, r6
 801fc50:	a802      	add	r0, sp, #8
 801fc52:	f7f9 fa07 	bl	8019064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fc56:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801fc5a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801fc5e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801fc62:	4d28      	ldr	r5, [pc, #160]	; (801fd04 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801fc64:	4e28      	ldr	r6, [pc, #160]	; (801fd08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801fc66:	6828      	ldr	r0, [r5, #0]
 801fc68:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801fc6c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801fc70:	fb11 2103 	smlabb	r1, r1, r3, r2
 801fc74:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801fc78:	f8bd 1000 	ldrh.w	r1, [sp]
 801fc7c:	440a      	add	r2, r1
 801fc7e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801fc82:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801fc86:	4413      	add	r3, r2
 801fc88:	f8ad 300a 	strh.w	r3, [sp, #10]
 801fc8c:	6803      	ldr	r3, [r0, #0]
 801fc8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fc90:	4798      	blx	r3
 801fc92:	8833      	ldrh	r3, [r6, #0]
 801fc94:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801fc98:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801fc9c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801fd0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801fca0:	fb03 1202 	mla	r2, r3, r2, r1
 801fca4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fca8:	fb08 f303 	mul.w	r3, r8, r3
 801fcac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fcb0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801fcb4:	4298      	cmp	r0, r3
 801fcb6:	d21d      	bcs.n	801fcf4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801fcb8:	eb00 080c 	add.w	r8, r0, ip
 801fcbc:	4540      	cmp	r0, r8
 801fcbe:	d20f      	bcs.n	801fce0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801fcc0:	f854 1b04 	ldr.w	r1, [r4], #4
 801fcc4:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801fcc8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801fccc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801fcd0:	ea42 0209 	orr.w	r2, r2, r9
 801fcd4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801fcd8:	430a      	orrs	r2, r1
 801fcda:	f820 2b02 	strh.w	r2, [r0], #2
 801fcde:	e7ed      	b.n	801fcbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801fce0:	8832      	ldrh	r2, [r6, #0]
 801fce2:	1bd2      	subs	r2, r2, r7
 801fce4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fce8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801fcec:	1bd2      	subs	r2, r2, r7
 801fcee:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801fcf2:	e7df      	b.n	801fcb4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801fcf4:	6828      	ldr	r0, [r5, #0]
 801fcf6:	6803      	ldr	r3, [r0, #0]
 801fcf8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fcfa:	4798      	blx	r3
 801fcfc:	b005      	add	sp, #20
 801fcfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801fd02:	bf00      	nop
 801fd04:	2001e1c0 	.word	0x2001e1c0
 801fd08:	2001e1ba 	.word	0x2001e1ba
 801fd0c:	fffff800 	.word	0xfffff800

0801fd10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801fd10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fd14:	460e      	mov	r6, r1
 801fd16:	b08e      	sub	sp, #56	; 0x38
 801fd18:	4604      	mov	r4, r0
 801fd1a:	6808      	ldr	r0, [r1, #0]
 801fd1c:	6849      	ldr	r1, [r1, #4]
 801fd1e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801fef8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801fd22:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801fefc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801fd26:	461d      	mov	r5, r3
 801fd28:	ab0a      	add	r3, sp, #40	; 0x28
 801fd2a:	c303      	stmia	r3!, {r0, r1}
 801fd2c:	6810      	ldr	r0, [r2, #0]
 801fd2e:	6851      	ldr	r1, [r2, #4]
 801fd30:	ab0c      	add	r3, sp, #48	; 0x30
 801fd32:	c303      	stmia	r3!, {r0, r1}
 801fd34:	a80a      	add	r0, sp, #40	; 0x28
 801fd36:	f7f9 f96d 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fd3a:	4631      	mov	r1, r6
 801fd3c:	a80c      	add	r0, sp, #48	; 0x30
 801fd3e:	f7f9 f991 	bl	8019064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fd42:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801fd46:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801fd4a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801fd4e:	f8d8 0000 	ldr.w	r0, [r8]
 801fd52:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801fd56:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801fd5a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801fd5e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801fd62:	440c      	add	r4, r1
 801fd64:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801fd68:	440a      	add	r2, r1
 801fd6a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801fd6e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801fd72:	4413      	add	r3, r2
 801fd74:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801fd78:	6803      	ldr	r3, [r0, #0]
 801fd7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fd7c:	4798      	blx	r3
 801fd7e:	2dff      	cmp	r5, #255	; 0xff
 801fd80:	d124      	bne.n	801fdcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801fd82:	f010 0f01 	tst.w	r0, #1
 801fd86:	f8d8 0000 	ldr.w	r0, [r8]
 801fd8a:	d022      	beq.n	801fdd2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801fd8c:	2100      	movs	r1, #0
 801fd8e:	f8d0 c000 	ldr.w	ip, [r0]
 801fd92:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801fd96:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801fd9a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801fd9e:	f04f 0e01 	mov.w	lr, #1
 801fda2:	f8cd e018 	str.w	lr, [sp, #24]
 801fda6:	f8b9 e000 	ldrh.w	lr, [r9]
 801fdaa:	9503      	str	r5, [sp, #12]
 801fdac:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801fdb0:	b2b6      	uxth	r6, r6
 801fdb2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801fdb6:	9102      	str	r1, [sp, #8]
 801fdb8:	b2bf      	uxth	r7, r7
 801fdba:	9601      	str	r6, [sp, #4]
 801fdbc:	9700      	str	r7, [sp, #0]
 801fdbe:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801fdc2:	4621      	mov	r1, r4
 801fdc4:	47a8      	blx	r5
 801fdc6:	b00e      	add	sp, #56	; 0x38
 801fdc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fdcc:	f010 0f04 	tst.w	r0, #4
 801fdd0:	e7d9      	b.n	801fd86 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801fdd2:	6803      	ldr	r3, [r0, #0]
 801fdd4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fdd6:	4798      	blx	r3
 801fdd8:	f8b9 3000 	ldrh.w	r3, [r9]
 801fddc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801fde0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801fde4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801fde8:	fb03 1202 	mla	r2, r3, r2, r1
 801fdec:	ebac 0c07 	sub.w	ip, ip, r7
 801fdf0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fdf4:	435e      	muls	r6, r3
 801fdf6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801fdfa:	2dff      	cmp	r5, #255	; 0xff
 801fdfc:	eba3 0707 	sub.w	r7, r3, r7
 801fe00:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801fe04:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801fe08:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801fe0c:	d049      	beq.n	801fea2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801fe0e:	43eb      	mvns	r3, r5
 801fe10:	fa1f f985 	uxth.w	r9, r5
 801fe14:	b2db      	uxtb	r3, r3
 801fe16:	42b0      	cmp	r0, r6
 801fe18:	d266      	bcs.n	801fee8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801fe1a:	eb00 0a0e 	add.w	sl, r0, lr
 801fe1e:	4550      	cmp	r0, sl
 801fe20:	4621      	mov	r1, r4
 801fe22:	f104 0403 	add.w	r4, r4, #3
 801fe26:	d25b      	bcs.n	801fee0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801fe28:	8802      	ldrh	r2, [r0, #0]
 801fe2a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801fe2e:	ea4f 2822 	mov.w	r8, r2, asr #8
 801fe32:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801fe36:	fb11 f109 	smulbb	r1, r1, r9
 801fe3a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801fe3e:	10d5      	asrs	r5, r2, #3
 801fe40:	fb08 1803 	mla	r8, r8, r3, r1
 801fe44:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801fe48:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801fe4c:	fb11 f109 	smulbb	r1, r1, r9
 801fe50:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801fe54:	fb05 1503 	mla	r5, r5, r3, r1
 801fe58:	00d2      	lsls	r2, r2, #3
 801fe5a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801fe5e:	b2d2      	uxtb	r2, r2
 801fe60:	fb11 f109 	smulbb	r1, r1, r9
 801fe64:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fe68:	fa1f f888 	uxth.w	r8, r8
 801fe6c:	fb02 1203 	mla	r2, r2, r3, r1
 801fe70:	b292      	uxth	r2, r2
 801fe72:	f108 0101 	add.w	r1, r8, #1
 801fe76:	b2ad      	uxth	r5, r5
 801fe78:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801fe7c:	1c51      	adds	r1, r2, #1
 801fe7e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fe82:	1c69      	adds	r1, r5, #1
 801fe84:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801fe88:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801fe8c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fe90:	096d      	lsrs	r5, r5, #5
 801fe92:	ea42 0208 	orr.w	r2, r2, r8
 801fe96:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fe9a:	432a      	orrs	r2, r5
 801fe9c:	f820 2b02 	strh.w	r2, [r0], #2
 801fea0:	e7bd      	b.n	801fe1e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801fea2:	4a14      	ldr	r2, [pc, #80]	; (801fef4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801fea4:	42b0      	cmp	r0, r6
 801fea6:	d21f      	bcs.n	801fee8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801fea8:	eb00 050e 	add.w	r5, r0, lr
 801feac:	42a8      	cmp	r0, r5
 801feae:	4621      	mov	r1, r4
 801feb0:	f104 0403 	add.w	r4, r4, #3
 801feb4:	d210      	bcs.n	801fed8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801feb6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801feba:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801febe:	00db      	lsls	r3, r3, #3
 801fec0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801fec4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fec8:	430b      	orrs	r3, r1
 801feca:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801fece:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801fed2:	f820 3b02 	strh.w	r3, [r0], #2
 801fed6:	e7e9      	b.n	801feac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801fed8:	4438      	add	r0, r7
 801feda:	eb01 040c 	add.w	r4, r1, ip
 801fede:	e7e1      	b.n	801fea4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801fee0:	4438      	add	r0, r7
 801fee2:	eb01 040c 	add.w	r4, r1, ip
 801fee6:	e796      	b.n	801fe16 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801fee8:	4b03      	ldr	r3, [pc, #12]	; (801fef8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801feea:	6818      	ldr	r0, [r3, #0]
 801feec:	6803      	ldr	r3, [r0, #0]
 801feee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fef0:	4798      	blx	r3
 801fef2:	e768      	b.n	801fdc6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801fef4:	fffff800 	.word	0xfffff800
 801fef8:	2001e1c0 	.word	0x2001e1c0
 801fefc:	2001e1ba 	.word	0x2001e1ba

0801ff00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801ff00:	b570      	push	{r4, r5, r6, lr}
 801ff02:	9c04      	ldr	r4, [sp, #16]
 801ff04:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801ff08:	4605      	mov	r5, r0
 801ff0a:	4608      	mov	r0, r1
 801ff0c:	4619      	mov	r1, r3
 801ff0e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801ff12:	2a0d      	cmp	r2, #13
 801ff14:	d825      	bhi.n	801ff62 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 801ff16:	e8df f002 	tbb	[pc, r2]
 801ff1a:	1807      	.short	0x1807
 801ff1c:	1d1d1d13 	.word	0x1d1d1d13
 801ff20:	1d1d1d1d 	.word	0x1d1d1d1d
 801ff24:	1d1d1d1d 	.word	0x1d1d1d1d
 801ff28:	e9cd 3604 	strd	r3, r6, [sp, #16]
 801ff2c:	682a      	ldr	r2, [r5, #0]
 801ff2e:	68d6      	ldr	r6, [r2, #12]
 801ff30:	4623      	mov	r3, r4
 801ff32:	460a      	mov	r2, r1
 801ff34:	46b4      	mov	ip, r6
 801ff36:	4601      	mov	r1, r0
 801ff38:	4628      	mov	r0, r5
 801ff3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ff3e:	4760      	bx	ip
 801ff40:	4622      	mov	r2, r4
 801ff42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ff46:	f7ff bd8d 	b.w	801fa64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ff4a:	4622      	mov	r2, r4
 801ff4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ff50:	f7ff bede 	b.w	801fd10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801ff54:	4b03      	ldr	r3, [pc, #12]	; (801ff64 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 801ff56:	4a04      	ldr	r2, [pc, #16]	; (801ff68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 801ff58:	4804      	ldr	r0, [pc, #16]	; (801ff6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 801ff5a:	f240 3159 	movw	r1, #857	; 0x359
 801ff5e:	f00c f849 	bl	802bff4 <__assert_func>
 801ff62:	bd70      	pop	{r4, r5, r6, pc}
 801ff64:	08035b81 	.word	0x08035b81
 801ff68:	0803638d 	.word	0x0803638d
 801ff6c:	08035abc 	.word	0x08035abc

0801ff70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801ff70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff74:	b093      	sub	sp, #76	; 0x4c
 801ff76:	880e      	ldrh	r6, [r1, #0]
 801ff78:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801ff7c:	4681      	mov	r9, r0
 801ff7e:	4688      	mov	r8, r1
 801ff80:	4615      	mov	r5, r2
 801ff82:	b136      	cbz	r6, 801ff92 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 801ff84:	4b70      	ldr	r3, [pc, #448]	; (8020148 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801ff86:	4a71      	ldr	r2, [pc, #452]	; (802014c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801ff88:	4871      	ldr	r0, [pc, #452]	; (8020150 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801ff8a:	f44f 71c3 	mov.w	r1, #390	; 0x186
 801ff8e:	f00c f831 	bl	802bff4 <__assert_func>
 801ff92:	6810      	ldr	r0, [r2, #0]
 801ff94:	6851      	ldr	r1, [r2, #4]
 801ff96:	4f6f      	ldr	r7, [pc, #444]	; (8020154 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801ff98:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8020158 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 801ff9c:	ac0e      	add	r4, sp, #56	; 0x38
 801ff9e:	c403      	stmia	r4!, {r0, r1}
 801ffa0:	6818      	ldr	r0, [r3, #0]
 801ffa2:	6859      	ldr	r1, [r3, #4]
 801ffa4:	ac10      	add	r4, sp, #64	; 0x40
 801ffa6:	c403      	stmia	r4!, {r0, r1}
 801ffa8:	a80e      	add	r0, sp, #56	; 0x38
 801ffaa:	f7f9 f833 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ffae:	4629      	mov	r1, r5
 801ffb0:	a810      	add	r0, sp, #64	; 0x40
 801ffb2:	f7f9 f857 	bl	8019064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ffb6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801ffba:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801ffbe:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801ffc2:	6838      	ldr	r0, [r7, #0]
 801ffc4:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801ffc8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801ffcc:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ffd0:	4489      	add	r9, r1
 801ffd2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801ffd6:	440a      	add	r2, r1
 801ffd8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801ffdc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801ffe0:	4413      	add	r3, r2
 801ffe2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801ffe6:	6803      	ldr	r3, [r0, #0]
 801ffe8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ffea:	4798      	blx	r3
 801ffec:	f010 0f80 	tst.w	r0, #128	; 0x80
 801fff0:	6838      	ldr	r0, [r7, #0]
 801fff2:	d01d      	beq.n	8020030 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 801fff4:	6802      	ldr	r2, [r0, #0]
 801fff6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801fffa:	e9cd 6608 	strd	r6, r6, [sp, #32]
 801fffe:	210b      	movs	r1, #11
 8020000:	9107      	str	r1, [sp, #28]
 8020002:	f8bb 1000 	ldrh.w	r1, [fp]
 8020006:	9106      	str	r1, [sp, #24]
 8020008:	2101      	movs	r1, #1
 802000a:	e9cd a104 	strd	sl, r1, [sp, #16]
 802000e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8020012:	9103      	str	r1, [sp, #12]
 8020014:	b2a4      	uxth	r4, r4
 8020016:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 802001a:	9100      	str	r1, [sp, #0]
 802001c:	b2ad      	uxth	r5, r5
 802001e:	9502      	str	r5, [sp, #8]
 8020020:	9401      	str	r4, [sp, #4]
 8020022:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 8020024:	4649      	mov	r1, r9
 8020026:	4642      	mov	r2, r8
 8020028:	47a0      	blx	r4
 802002a:	b013      	add	sp, #76	; 0x4c
 802002c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020030:	6803      	ldr	r3, [r0, #0]
 8020032:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020034:	4798      	blx	r3
 8020036:	f8bb 3000 	ldrh.w	r3, [fp]
 802003a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 802003e:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8020042:	fb03 1202 	mla	r2, r3, r2, r1
 8020046:	435d      	muls	r5, r3
 8020048:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802004c:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8020050:	920c      	str	r2, [sp, #48]	; 0x30
 8020052:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8020056:	1b12      	subs	r2, r2, r4
 8020058:	920d      	str	r2, [sp, #52]	; 0x34
 802005a:	0062      	lsls	r2, r4, #1
 802005c:	1b1c      	subs	r4, r3, r4
 802005e:	0063      	lsls	r3, r4, #1
 8020060:	920a      	str	r2, [sp, #40]	; 0x28
 8020062:	930b      	str	r3, [sp, #44]	; 0x2c
 8020064:	f04f 0e04 	mov.w	lr, #4
 8020068:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802006a:	4298      	cmp	r0, r3
 802006c:	d266      	bcs.n	802013c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 802006e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020070:	eb00 0b03 	add.w	fp, r0, r3
 8020074:	4558      	cmp	r0, fp
 8020076:	d25c      	bcs.n	8020132 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 8020078:	f819 3b01 	ldrb.w	r3, [r9], #1
 802007c:	fb1e e303 	smlabb	r3, lr, r3, lr
 8020080:	f858 2003 	ldr.w	r2, [r8, r3]
 8020084:	0e11      	lsrs	r1, r2, #24
 8020086:	d012      	beq.n	80200ae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8020088:	29ff      	cmp	r1, #255	; 0xff
 802008a:	ea4f 2712 	mov.w	r7, r2, lsr #8
 802008e:	d110      	bne.n	80200b2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8020090:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020094:	d10d      	bne.n	80200b2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8020096:	0953      	lsrs	r3, r2, #5
 8020098:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 802009c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80200a0:	f027 0707 	bic.w	r7, r7, #7
 80200a4:	431f      	orrs	r7, r3
 80200a6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80200aa:	433a      	orrs	r2, r7
 80200ac:	8002      	strh	r2, [r0, #0]
 80200ae:	3002      	adds	r0, #2
 80200b0:	e7e0      	b.n	8020074 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 80200b2:	fb0a f101 	mul.w	r1, sl, r1
 80200b6:	8806      	ldrh	r6, [r0, #0]
 80200b8:	1c4b      	adds	r3, r1, #1
 80200ba:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80200be:	1235      	asrs	r5, r6, #8
 80200c0:	10f4      	asrs	r4, r6, #3
 80200c2:	121b      	asrs	r3, r3, #8
 80200c4:	00f6      	lsls	r6, r6, #3
 80200c6:	b299      	uxth	r1, r3
 80200c8:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80200cc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80200d0:	b2f6      	uxtb	r6, r6
 80200d2:	43db      	mvns	r3, r3
 80200d4:	b2d2      	uxtb	r2, r2
 80200d6:	b2db      	uxtb	r3, r3
 80200d8:	fb1c fc01 	smulbb	ip, ip, r1
 80200dc:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80200e0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80200e4:	fb12 f201 	smulbb	r2, r2, r1
 80200e8:	fb05 c503 	mla	r5, r5, r3, ip
 80200ec:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80200f0:	b2ff      	uxtb	r7, r7
 80200f2:	fb06 2203 	mla	r2, r6, r3, r2
 80200f6:	b2ad      	uxth	r5, r5
 80200f8:	fb17 f701 	smulbb	r7, r7, r1
 80200fc:	b292      	uxth	r2, r2
 80200fe:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8020102:	fb04 7403 	mla	r4, r4, r3, r7
 8020106:	f105 0c01 	add.w	ip, r5, #1
 802010a:	1c57      	adds	r7, r2, #1
 802010c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020110:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020114:	b2a4      	uxth	r4, r4
 8020116:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802011a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802011e:	433d      	orrs	r5, r7
 8020120:	1c67      	adds	r7, r4, #1
 8020122:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8020126:	0964      	lsrs	r4, r4, #5
 8020128:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802012c:	4325      	orrs	r5, r4
 802012e:	8005      	strh	r5, [r0, #0]
 8020130:	e7bd      	b.n	80200ae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8020132:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020134:	4418      	add	r0, r3
 8020136:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020138:	4499      	add	r9, r3
 802013a:	e795      	b.n	8020068 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 802013c:	4b05      	ldr	r3, [pc, #20]	; (8020154 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 802013e:	6818      	ldr	r0, [r3, #0]
 8020140:	6803      	ldr	r3, [r0, #0]
 8020142:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020144:	4798      	blx	r3
 8020146:	e770      	b.n	802002a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 8020148:	0803596c 	.word	0x0803596c
 802014c:	080360cb 	.word	0x080360cb
 8020150:	08035abc 	.word	0x08035abc
 8020154:	2001e1c0 	.word	0x2001e1c0
 8020158:	2001e1ba 	.word	0x2001e1ba

0802015c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 802015c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020160:	4614      	mov	r4, r2
 8020162:	880a      	ldrh	r2, [r1, #0]
 8020164:	b087      	sub	sp, #28
 8020166:	2a02      	cmp	r2, #2
 8020168:	4680      	mov	r8, r0
 802016a:	460d      	mov	r5, r1
 802016c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8020170:	d006      	beq.n	8020180 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8020172:	4b63      	ldr	r3, [pc, #396]	; (8020300 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8020174:	4a63      	ldr	r2, [pc, #396]	; (8020304 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8020176:	4864      	ldr	r0, [pc, #400]	; (8020308 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8020178:	f240 11dd 	movw	r1, #477	; 0x1dd
 802017c:	f00b ff3a 	bl	802bff4 <__assert_func>
 8020180:	2e00      	cmp	r6, #0
 8020182:	f000 80b9 	beq.w	80202f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8020186:	6820      	ldr	r0, [r4, #0]
 8020188:	6861      	ldr	r1, [r4, #4]
 802018a:	af02      	add	r7, sp, #8
 802018c:	c703      	stmia	r7!, {r0, r1}
 802018e:	6818      	ldr	r0, [r3, #0]
 8020190:	6859      	ldr	r1, [r3, #4]
 8020192:	af04      	add	r7, sp, #16
 8020194:	c703      	stmia	r7!, {r0, r1}
 8020196:	a802      	add	r0, sp, #8
 8020198:	f7f8 ff3c 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802019c:	4621      	mov	r1, r4
 802019e:	a804      	add	r0, sp, #16
 80201a0:	f7f8 ff60 	bl	8019064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80201a4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80201a8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80201ac:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80201b0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80201b4:	fb14 2103 	smlabb	r1, r4, r3, r2
 80201b8:	eb08 0401 	add.w	r4, r8, r1
 80201bc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80201c0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80201c4:	440a      	add	r2, r1
 80201c6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80201ca:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80201ce:	4413      	add	r3, r2
 80201d0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80201d4:	4b4d      	ldr	r3, [pc, #308]	; (802030c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80201d6:	6818      	ldr	r0, [r3, #0]
 80201d8:	6803      	ldr	r3, [r0, #0]
 80201da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80201dc:	4798      	blx	r3
 80201de:	4b4c      	ldr	r3, [pc, #304]	; (8020310 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 80201e0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80201e4:	881a      	ldrh	r2, [r3, #0]
 80201e6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80201ea:	2eff      	cmp	r6, #255	; 0xff
 80201ec:	fb02 c101 	mla	r1, r2, r1, ip
 80201f0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80201f4:	fb02 f207 	mul.w	r2, r2, r7
 80201f8:	f105 0104 	add.w	r1, r5, #4
 80201fc:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8020200:	461d      	mov	r5, r3
 8020202:	d05a      	beq.n	80202ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 8020204:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8020208:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802020c:	b2b6      	uxth	r6, r6
 802020e:	fa1f fe8e 	uxth.w	lr, lr
 8020212:	9301      	str	r3, [sp, #4]
 8020214:	4282      	cmp	r2, r0
 8020216:	d96a      	bls.n	80202ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8020218:	eb00 0b0a 	add.w	fp, r0, sl
 802021c:	4583      	cmp	fp, r0
 802021e:	d940      	bls.n	80202a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 8020220:	f814 3b01 	ldrb.w	r3, [r4], #1
 8020224:	8805      	ldrh	r5, [r0, #0]
 8020226:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 802022a:	122f      	asrs	r7, r5, #8
 802022c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8020230:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020234:	fb17 f70e 	smulbb	r7, r7, lr
 8020238:	ea4f 09e5 	mov.w	r9, r5, asr #3
 802023c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020240:	00ed      	lsls	r5, r5, #3
 8020242:	fb0c 7c06 	mla	ip, ip, r6, r7
 8020246:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 802024a:	10df      	asrs	r7, r3, #3
 802024c:	b2ed      	uxtb	r5, r5
 802024e:	00db      	lsls	r3, r3, #3
 8020250:	fa1f fc8c 	uxth.w	ip, ip
 8020254:	fb19 f90e 	smulbb	r9, r9, lr
 8020258:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802025c:	b2db      	uxtb	r3, r3
 802025e:	fb15 f50e 	smulbb	r5, r5, lr
 8020262:	fb07 9706 	mla	r7, r7, r6, r9
 8020266:	fb03 5306 	mla	r3, r3, r6, r5
 802026a:	f10c 0901 	add.w	r9, ip, #1
 802026e:	b29b      	uxth	r3, r3
 8020270:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8020274:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8020278:	f103 0c01 	add.w	ip, r3, #1
 802027c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020280:	b2bf      	uxth	r7, r7
 8020282:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020286:	ea4c 0c09 	orr.w	ip, ip, r9
 802028a:	f107 0901 	add.w	r9, r7, #1
 802028e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8020292:	097f      	lsrs	r7, r7, #5
 8020294:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020298:	ea4c 0c07 	orr.w	ip, ip, r7
 802029c:	f820 cb02 	strh.w	ip, [r0], #2
 80202a0:	e7bc      	b.n	802021c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 80202a2:	9b01      	ldr	r3, [sp, #4]
 80202a4:	881b      	ldrh	r3, [r3, #0]
 80202a6:	eba3 0308 	sub.w	r3, r3, r8
 80202aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80202ae:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80202b2:	eba3 0308 	sub.w	r3, r3, r8
 80202b6:	441c      	add	r4, r3
 80202b8:	e7ac      	b.n	8020214 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 80202ba:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80202be:	4282      	cmp	r2, r0
 80202c0:	d915      	bls.n	80202ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80202c2:	eb00 060a 	add.w	r6, r0, sl
 80202c6:	4286      	cmp	r6, r0
 80202c8:	d906      	bls.n	80202d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 80202ca:	f814 3b01 	ldrb.w	r3, [r4], #1
 80202ce:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80202d2:	f820 3b02 	strh.w	r3, [r0], #2
 80202d6:	e7f6      	b.n	80202c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 80202d8:	882b      	ldrh	r3, [r5, #0]
 80202da:	eba3 0308 	sub.w	r3, r3, r8
 80202de:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80202e2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80202e6:	eba3 0308 	sub.w	r3, r3, r8
 80202ea:	441c      	add	r4, r3
 80202ec:	e7e7      	b.n	80202be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 80202ee:	4b07      	ldr	r3, [pc, #28]	; (802030c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80202f0:	6818      	ldr	r0, [r3, #0]
 80202f2:	6803      	ldr	r3, [r0, #0]
 80202f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80202f6:	4798      	blx	r3
 80202f8:	b007      	add	sp, #28
 80202fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80202fe:	bf00      	nop
 8020300:	0803589c 	.word	0x0803589c
 8020304:	08035f35 	.word	0x08035f35
 8020308:	08035abc 	.word	0x08035abc
 802030c:	2001e1c0 	.word	0x2001e1c0
 8020310:	2001e1ba 	.word	0x2001e1ba

08020314 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8020314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020318:	f8b1 9000 	ldrh.w	r9, [r1]
 802031c:	b091      	sub	sp, #68	; 0x44
 802031e:	f1b9 0f01 	cmp.w	r9, #1
 8020322:	4604      	mov	r4, r0
 8020324:	460f      	mov	r7, r1
 8020326:	4690      	mov	r8, r2
 8020328:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 802032c:	d006      	beq.n	802033c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 802032e:	4b84      	ldr	r3, [pc, #528]	; (8020540 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 8020330:	4a84      	ldr	r2, [pc, #528]	; (8020544 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 8020332:	4885      	ldr	r0, [pc, #532]	; (8020548 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 8020334:	f240 212b 	movw	r1, #555	; 0x22b
 8020338:	f00b fe5c 	bl	802bff4 <__assert_func>
 802033c:	2d00      	cmp	r5, #0
 802033e:	d04f      	beq.n	80203e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8020340:	6810      	ldr	r0, [r2, #0]
 8020342:	6851      	ldr	r1, [r2, #4]
 8020344:	f8df b208 	ldr.w	fp, [pc, #520]	; 8020550 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 8020348:	ae0c      	add	r6, sp, #48	; 0x30
 802034a:	c603      	stmia	r6!, {r0, r1}
 802034c:	6818      	ldr	r0, [r3, #0]
 802034e:	6859      	ldr	r1, [r3, #4]
 8020350:	ae0e      	add	r6, sp, #56	; 0x38
 8020352:	c603      	stmia	r6!, {r0, r1}
 8020354:	a80c      	add	r0, sp, #48	; 0x30
 8020356:	f7f8 fe5d 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802035a:	4641      	mov	r1, r8
 802035c:	a80e      	add	r0, sp, #56	; 0x38
 802035e:	f7f8 fe81 	bl	8019064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020362:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8020366:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 802036a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 802036e:	f8db 0000 	ldr.w	r0, [fp]
 8020372:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8020376:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 802037a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8020554 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 802037e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020382:	440c      	add	r4, r1
 8020384:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8020388:	440a      	add	r2, r1
 802038a:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 802038e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8020392:	4413      	add	r3, r2
 8020394:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8020398:	6803      	ldr	r3, [r0, #0]
 802039a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802039c:	4798      	blx	r3
 802039e:	f010 0f80 	tst.w	r0, #128	; 0x80
 80203a2:	f8db 0000 	ldr.w	r0, [fp]
 80203a6:	d01e      	beq.n	80203e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 80203a8:	2200      	movs	r2, #0
 80203aa:	6801      	ldr	r1, [r0, #0]
 80203ac:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80203b0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80203b4:	220b      	movs	r2, #11
 80203b6:	9207      	str	r2, [sp, #28]
 80203b8:	f8b8 2000 	ldrh.w	r2, [r8]
 80203bc:	9504      	str	r5, [sp, #16]
 80203be:	e9cd 9205 	strd	r9, r2, [sp, #20]
 80203c2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80203c6:	9203      	str	r2, [sp, #12]
 80203c8:	fa1f f28a 	uxth.w	r2, sl
 80203cc:	9202      	str	r2, [sp, #8]
 80203ce:	b2b6      	uxth	r6, r6
 80203d0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80203d4:	9200      	str	r2, [sp, #0]
 80203d6:	9601      	str	r6, [sp, #4]
 80203d8:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80203da:	463a      	mov	r2, r7
 80203dc:	4621      	mov	r1, r4
 80203de:	47a8      	blx	r5
 80203e0:	b011      	add	sp, #68	; 0x44
 80203e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80203e6:	6803      	ldr	r3, [r0, #0]
 80203e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80203ea:	4798      	blx	r3
 80203ec:	f8b8 2000 	ldrh.w	r2, [r8]
 80203f0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80203f4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80203f8:	2dff      	cmp	r5, #255	; 0xff
 80203fa:	fb02 1303 	mla	r3, r2, r3, r1
 80203fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020402:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8020406:	fb0a fa02 	mul.w	sl, sl, r2
 802040a:	d062      	beq.n	80204d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 802040c:	ea6f 0c05 	mvn.w	ip, r5
 8020410:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8020414:	930a      	str	r3, [sp, #40]	; 0x28
 8020416:	b2ad      	uxth	r5, r5
 8020418:	fa5f fc8c 	uxtb.w	ip, ip
 802041c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8020420:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020422:	4298      	cmp	r0, r3
 8020424:	f080 8085 	bcs.w	8020532 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8020428:	eb00 0b09 	add.w	fp, r0, r9
 802042c:	4558      	cmp	r0, fp
 802042e:	d246      	bcs.n	80204be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8020430:	f814 eb01 	ldrb.w	lr, [r4], #1
 8020434:	2303      	movs	r3, #3
 8020436:	2204      	movs	r2, #4
 8020438:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 802043c:	eb07 0a0e 	add.w	sl, r7, lr
 8020440:	8803      	ldrh	r3, [r0, #0]
 8020442:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8020446:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802044a:	1219      	asrs	r1, r3, #8
 802044c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020450:	fb18 f805 	smulbb	r8, r8, r5
 8020454:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8020458:	10da      	asrs	r2, r3, #3
 802045a:	fb01 810c 	mla	r1, r1, ip, r8
 802045e:	00db      	lsls	r3, r3, #3
 8020460:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020464:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020468:	b2db      	uxtb	r3, r3
 802046a:	fb18 f805 	smulbb	r8, r8, r5
 802046e:	fb1e fe05 	smulbb	lr, lr, r5
 8020472:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8020476:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 802047a:	b289      	uxth	r1, r1
 802047c:	fb02 820c 	mla	r2, r2, ip, r8
 8020480:	fb03 e30c 	mla	r3, r3, ip, lr
 8020484:	b292      	uxth	r2, r2
 8020486:	b29b      	uxth	r3, r3
 8020488:	f101 0801 	add.w	r8, r1, #1
 802048c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8020490:	f103 0e01 	add.w	lr, r3, #1
 8020494:	f102 0801 	add.w	r8, r2, #1
 8020498:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 802049c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80204a0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80204a4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80204a8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80204ac:	ea4e 0101 	orr.w	r1, lr, r1
 80204b0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80204b4:	ea41 0108 	orr.w	r1, r1, r8
 80204b8:	f820 1b02 	strh.w	r1, [r0], #2
 80204bc:	e7b6      	b.n	802042c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 80204be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80204c0:	881b      	ldrh	r3, [r3, #0]
 80204c2:	1b9b      	subs	r3, r3, r6
 80204c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80204c8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80204cc:	1b9b      	subs	r3, r3, r6
 80204ce:	441c      	add	r4, r3
 80204d0:	e7a6      	b.n	8020420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 80204d2:	491e      	ldr	r1, [pc, #120]	; (802054c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 80204d4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80204d8:	2203      	movs	r2, #3
 80204da:	2504      	movs	r5, #4
 80204dc:	4550      	cmp	r0, sl
 80204de:	d228      	bcs.n	8020532 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80204e0:	eb00 0c09 	add.w	ip, r0, r9
 80204e4:	4560      	cmp	r0, ip
 80204e6:	4623      	mov	r3, r4
 80204e8:	d219      	bcs.n	802051e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80204ea:	f893 e000 	ldrb.w	lr, [r3]
 80204ee:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80204f2:	eb07 0b0e 	add.w	fp, r7, lr
 80204f6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80204fa:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80204fe:	f89b b001 	ldrb.w	fp, [fp, #1]
 8020502:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8020506:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 802050a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802050e:	ea43 030b 	orr.w	r3, r3, fp
 8020512:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8020516:	3401      	adds	r4, #1
 8020518:	f820 3b02 	strh.w	r3, [r0], #2
 802051c:	e7e2      	b.n	80204e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 802051e:	f8b8 3000 	ldrh.w	r3, [r8]
 8020522:	1b9b      	subs	r3, r3, r6
 8020524:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020528:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802052c:	1b9b      	subs	r3, r3, r6
 802052e:	441c      	add	r4, r3
 8020530:	e7d4      	b.n	80204dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 8020532:	4b07      	ldr	r3, [pc, #28]	; (8020550 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 8020534:	6818      	ldr	r0, [r3, #0]
 8020536:	6803      	ldr	r3, [r0, #0]
 8020538:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802053a:	4798      	blx	r3
 802053c:	e750      	b.n	80203e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 802053e:	bf00      	nop
 8020540:	080358ea 	.word	0x080358ea
 8020544:	08035fbe 	.word	0x08035fbe
 8020548:	08035abc 	.word	0x08035abc
 802054c:	fffff800 	.word	0xfffff800
 8020550:	2001e1c0 	.word	0x2001e1c0
 8020554:	2001e1ba 	.word	0x2001e1ba

08020558 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8020558:	b430      	push	{r4, r5}
 802055a:	780d      	ldrb	r5, [r1, #0]
 802055c:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8020560:	2d01      	cmp	r5, #1
 8020562:	d00a      	beq.n	802057a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8020564:	d305      	bcc.n	8020572 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8020566:	2d02      	cmp	r5, #2
 8020568:	d10b      	bne.n	8020582 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 802056a:	9402      	str	r4, [sp, #8]
 802056c:	bc30      	pop	{r4, r5}
 802056e:	f7ff bdf5 	b.w	802015c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8020572:	9402      	str	r4, [sp, #8]
 8020574:	bc30      	pop	{r4, r5}
 8020576:	f7ff bcfb 	b.w	801ff70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 802057a:	9402      	str	r4, [sp, #8]
 802057c:	bc30      	pop	{r4, r5}
 802057e:	f7ff bec9 	b.w	8020314 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8020582:	bc30      	pop	{r4, r5}
 8020584:	4770      	bx	lr
	...

08020588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8020588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802058c:	4604      	mov	r4, r0
 802058e:	b087      	sub	sp, #28
 8020590:	6810      	ldr	r0, [r2, #0]
 8020592:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8020596:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80207d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 802059a:	460e      	mov	r6, r1
 802059c:	6851      	ldr	r1, [r2, #4]
 802059e:	ad02      	add	r5, sp, #8
 80205a0:	c503      	stmia	r5!, {r0, r1}
 80205a2:	6818      	ldr	r0, [r3, #0]
 80205a4:	6859      	ldr	r1, [r3, #4]
 80205a6:	ad04      	add	r5, sp, #16
 80205a8:	4617      	mov	r7, r2
 80205aa:	c503      	stmia	r5!, {r0, r1}
 80205ac:	a802      	add	r0, sp, #8
 80205ae:	f7f8 fd31 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80205b2:	4639      	mov	r1, r7
 80205b4:	a804      	add	r0, sp, #16
 80205b6:	f7f8 fd55 	bl	8019064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80205ba:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80205be:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80205c2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80205c6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80205ca:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80205ce:	fb11 2103 	smlabb	r1, r1, r3, r2
 80205d2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80205d6:	440e      	add	r6, r1
 80205d8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80205dc:	440a      	add	r2, r1
 80205de:	f8ad 2010 	strh.w	r2, [sp, #16]
 80205e2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80205e6:	4413      	add	r3, r2
 80205e8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80205ec:	4b77      	ldr	r3, [pc, #476]	; (80207cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80205ee:	6818      	ldr	r0, [r3, #0]
 80205f0:	6803      	ldr	r3, [r0, #0]
 80205f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80205f4:	4798      	blx	r3
 80205f6:	f8b9 b000 	ldrh.w	fp, [r9]
 80205fa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80205fe:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8020602:	fb0b 2303 	mla	r3, fp, r3, r2
 8020606:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802060a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 802060e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8020612:	fb05 f50b 	mul.w	r5, r5, fp
 8020616:	9300      	str	r3, [sp, #0]
 8020618:	d069      	beq.n	80206ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 802061a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 802061e:	4558      	cmp	r0, fp
 8020620:	f080 80cc 	bcs.w	80207bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8020624:	9b00      	ldr	r3, [sp, #0]
 8020626:	18c3      	adds	r3, r0, r3
 8020628:	9301      	str	r3, [sp, #4]
 802062a:	4631      	mov	r1, r6
 802062c:	9b01      	ldr	r3, [sp, #4]
 802062e:	4298      	cmp	r0, r3
 8020630:	d24f      	bcs.n	80206d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8020632:	f811 2b01 	ldrb.w	r2, [r1], #1
 8020636:	2a00      	cmp	r2, #0
 8020638:	d048      	beq.n	80206cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 802063a:	fb0a f202 	mul.w	r2, sl, r2
 802063e:	1c53      	adds	r3, r2, #1
 8020640:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020644:	121b      	asrs	r3, r3, #8
 8020646:	d041      	beq.n	80206cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8020648:	8802      	ldrh	r2, [r0, #0]
 802064a:	f8b4 c000 	ldrh.w	ip, [r4]
 802064e:	b29e      	uxth	r6, r3
 8020650:	1215      	asrs	r5, r2, #8
 8020652:	43db      	mvns	r3, r3
 8020654:	b2db      	uxtb	r3, r3
 8020656:	ea4f 272c 	mov.w	r7, ip, asr #8
 802065a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802065e:	fb15 f503 	smulbb	r5, r5, r3
 8020662:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8020666:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 802066a:	00d2      	lsls	r2, r2, #3
 802066c:	fb07 5706 	mla	r7, r7, r6, r5
 8020670:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8020674:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8020678:	b2d2      	uxtb	r2, r2
 802067a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802067e:	b2bf      	uxth	r7, r7
 8020680:	fb1e fe03 	smulbb	lr, lr, r3
 8020684:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020688:	fa5f fc8c 	uxtb.w	ip, ip
 802068c:	fb12 f203 	smulbb	r2, r2, r3
 8020690:	fb05 e506 	mla	r5, r5, r6, lr
 8020694:	fb0c 2c06 	mla	ip, ip, r6, r2
 8020698:	f107 0e01 	add.w	lr, r7, #1
 802069c:	fa1f fc8c 	uxth.w	ip, ip
 80206a0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80206a4:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80206a8:	f10c 0701 	add.w	r7, ip, #1
 80206ac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80206b0:	b2ad      	uxth	r5, r5
 80206b2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80206b6:	ea47 070e 	orr.w	r7, r7, lr
 80206ba:	f105 0e01 	add.w	lr, r5, #1
 80206be:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80206c2:	096d      	lsrs	r5, r5, #5
 80206c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80206c8:	432f      	orrs	r7, r5
 80206ca:	8007      	strh	r7, [r0, #0]
 80206cc:	3002      	adds	r0, #2
 80206ce:	3402      	adds	r4, #2
 80206d0:	e7ac      	b.n	802062c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80206d2:	f8b9 3000 	ldrh.w	r3, [r9]
 80206d6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80206da:	eba3 0308 	sub.w	r3, r3, r8
 80206de:	eba6 0608 	sub.w	r6, r6, r8
 80206e2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80206e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80206ea:	440e      	add	r6, r1
 80206ec:	e797      	b.n	802061e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80206ee:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80206f2:	42a8      	cmp	r0, r5
 80206f4:	d262      	bcs.n	80207bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80206f6:	9b00      	ldr	r3, [sp, #0]
 80206f8:	4631      	mov	r1, r6
 80206fa:	eb00 0b03 	add.w	fp, r0, r3
 80206fe:	4558      	cmp	r0, fp
 8020700:	d24e      	bcs.n	80207a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8020702:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020706:	b12b      	cbz	r3, 8020714 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8020708:	2bff      	cmp	r3, #255	; 0xff
 802070a:	f8b4 e000 	ldrh.w	lr, [r4]
 802070e:	d104      	bne.n	802071a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8020710:	f8a0 e000 	strh.w	lr, [r0]
 8020714:	3002      	adds	r0, #2
 8020716:	3402      	adds	r4, #2
 8020718:	e7f1      	b.n	80206fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 802071a:	8802      	ldrh	r2, [r0, #0]
 802071c:	b29f      	uxth	r7, r3
 802071e:	1216      	asrs	r6, r2, #8
 8020720:	43db      	mvns	r3, r3
 8020722:	b2db      	uxtb	r3, r3
 8020724:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8020728:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 802072c:	fb16 f603 	smulbb	r6, r6, r3
 8020730:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8020734:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020738:	00d2      	lsls	r2, r2, #3
 802073a:	fb0c 6c07 	mla	ip, ip, r7, r6
 802073e:	b2d2      	uxtb	r2, r2
 8020740:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8020744:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8020748:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802074c:	fb1a fa03 	smulbb	sl, sl, r3
 8020750:	fa1f fc8c 	uxth.w	ip, ip
 8020754:	fb12 f303 	smulbb	r3, r2, r3
 8020758:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802075c:	fa5f fe8e 	uxtb.w	lr, lr
 8020760:	fb06 a607 	mla	r6, r6, r7, sl
 8020764:	f10c 0201 	add.w	r2, ip, #1
 8020768:	fb0e 3307 	mla	r3, lr, r7, r3
 802076c:	b2b6      	uxth	r6, r6
 802076e:	b29b      	uxth	r3, r3
 8020770:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8020774:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8020778:	f106 0a01 	add.w	sl, r6, #1
 802077c:	f103 0c01 	add.w	ip, r3, #1
 8020780:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020784:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8020788:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802078c:	0976      	lsrs	r6, r6, #5
 802078e:	ea4c 0c02 	orr.w	ip, ip, r2
 8020792:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8020796:	ea4c 0c06 	orr.w	ip, ip, r6
 802079a:	f8a0 c000 	strh.w	ip, [r0]
 802079e:	e7b9      	b.n	8020714 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80207a0:	f8b9 3000 	ldrh.w	r3, [r9]
 80207a4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80207a8:	eba3 0308 	sub.w	r3, r3, r8
 80207ac:	eba6 0608 	sub.w	r6, r6, r8
 80207b0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80207b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80207b8:	440e      	add	r6, r1
 80207ba:	e79a      	b.n	80206f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80207bc:	4b03      	ldr	r3, [pc, #12]	; (80207cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80207be:	6818      	ldr	r0, [r3, #0]
 80207c0:	6803      	ldr	r3, [r0, #0]
 80207c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80207c4:	4798      	blx	r3
 80207c6:	b007      	add	sp, #28
 80207c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80207cc:	2001e1c0 	.word	0x2001e1c0
 80207d0:	2001e1ba 	.word	0x2001e1ba

080207d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80207d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207d8:	b089      	sub	sp, #36	; 0x24
 80207da:	4682      	mov	sl, r0
 80207dc:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80207e0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80207e2:	460f      	mov	r7, r1
 80207e4:	4691      	mov	r9, r2
 80207e6:	4698      	mov	r8, r3
 80207e8:	2e00      	cmp	r6, #0
 80207ea:	d03d      	beq.n	8020868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80207ec:	4608      	mov	r0, r1
 80207ee:	f7fb ff7d 	bl	801c6ec <_ZNK8touchgfx6Bitmap8getWidthEv>
 80207f2:	4605      	mov	r5, r0
 80207f4:	4638      	mov	r0, r7
 80207f6:	f7fb ffbd 	bl	801c774 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80207fa:	f8ad 000e 	strh.w	r0, [sp, #14]
 80207fe:	4638      	mov	r0, r7
 8020800:	f8ad 9008 	strh.w	r9, [sp, #8]
 8020804:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020808:	f8ad 800a 	strh.w	r8, [sp, #10]
 802080c:	f7fc f88a 	bl	801c924 <_ZNK8touchgfx6Bitmap7getDataEv>
 8020810:	4605      	mov	r5, r0
 8020812:	4638      	mov	r0, r7
 8020814:	f7fc f8b8 	bl	801c988 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8020818:	4681      	mov	r9, r0
 802081a:	4638      	mov	r0, r7
 802081c:	f7fc f90c 	bl	801ca38 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8020820:	280b      	cmp	r0, #11
 8020822:	f200 816f 	bhi.w	8020b04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 8020826:	e8df f010 	tbh	[pc, r0, lsl #1]
 802082a:	00c3      	.short	0x00c3
 802082c:	000c00b4 	.word	0x000c00b4
 8020830:	016d016d 	.word	0x016d016d
 8020834:	016d016d 	.word	0x016d016d
 8020838:	016d016d 	.word	0x016d016d
 802083c:	016d016d 	.word	0x016d016d
 8020840:	00bb      	.short	0x00bb
 8020842:	4bb3      	ldr	r3, [pc, #716]	; (8020b10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 8020844:	6818      	ldr	r0, [r3, #0]
 8020846:	6803      	ldr	r3, [r0, #0]
 8020848:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802084a:	4798      	blx	r3
 802084c:	2eff      	cmp	r6, #255	; 0xff
 802084e:	d121      	bne.n	8020894 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8020850:	0683      	lsls	r3, r0, #26
 8020852:	d41f      	bmi.n	8020894 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8020854:	4638      	mov	r0, r7
 8020856:	f7fc f82b 	bl	801c8b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 802085a:	b940      	cbnz	r0, 802086e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 802085c:	4623      	mov	r3, r4
 802085e:	aa02      	add	r2, sp, #8
 8020860:	4629      	mov	r1, r5
 8020862:	4650      	mov	r0, sl
 8020864:	f7ff f9e4 	bl	801fc30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8020868:	b009      	add	sp, #36	; 0x24
 802086a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802086e:	f10d 0818 	add.w	r8, sp, #24
 8020872:	4639      	mov	r1, r7
 8020874:	4640      	mov	r0, r8
 8020876:	f7fb ffc1 	bl	801c7fc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802087a:	e898 0003 	ldmia.w	r8, {r0, r1}
 802087e:	af04      	add	r7, sp, #16
 8020880:	e887 0003 	stmia.w	r7, {r0, r1}
 8020884:	4638      	mov	r0, r7
 8020886:	4621      	mov	r1, r4
 8020888:	f7f1 fc44 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 802088c:	4638      	mov	r0, r7
 802088e:	f7f1 fc84 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 8020892:	b130      	cbz	r0, 80208a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 8020894:	4633      	mov	r3, r6
 8020896:	4622      	mov	r2, r4
 8020898:	a902      	add	r1, sp, #8
 802089a:	4628      	mov	r0, r5
 802089c:	f7ff f8e2 	bl	801fa64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80208a0:	e7e2      	b.n	8020868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80208a2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80208a6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80208aa:	4293      	cmp	r3, r2
 80208ac:	dd12      	ble.n	80208d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 80208ae:	1a9b      	subs	r3, r3, r2
 80208b0:	f9b4 0000 	ldrsh.w	r0, [r4]
 80208b4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80208b8:	f8ad 0018 	strh.w	r0, [sp, #24]
 80208bc:	f8ad 201a 	strh.w	r2, [sp, #26]
 80208c0:	f8ad 101c 	strh.w	r1, [sp, #28]
 80208c4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80208c8:	4642      	mov	r2, r8
 80208ca:	4633      	mov	r3, r6
 80208cc:	a902      	add	r1, sp, #8
 80208ce:	4628      	mov	r0, r5
 80208d0:	f7ff f8c8 	bl	801fa64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80208d4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80208d8:	f9b4 2000 	ldrsh.w	r2, [r4]
 80208dc:	4293      	cmp	r3, r2
 80208de:	dd12      	ble.n	8020906 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 80208e0:	1a9b      	subs	r3, r3, r2
 80208e2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80208e6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80208ea:	f8ad 2018 	strh.w	r2, [sp, #24]
 80208ee:	f8ad 001a 	strh.w	r0, [sp, #26]
 80208f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80208f6:	f8ad 101e 	strh.w	r1, [sp, #30]
 80208fa:	23ff      	movs	r3, #255	; 0xff
 80208fc:	4642      	mov	r2, r8
 80208fe:	a902      	add	r1, sp, #8
 8020900:	4628      	mov	r0, r5
 8020902:	f7ff f8af 	bl	801fa64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020906:	463b      	mov	r3, r7
 8020908:	aa02      	add	r2, sp, #8
 802090a:	4629      	mov	r1, r5
 802090c:	4650      	mov	r0, sl
 802090e:	f7ff f98f 	bl	801fc30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8020912:	88a2      	ldrh	r2, [r4, #4]
 8020914:	8823      	ldrh	r3, [r4, #0]
 8020916:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 802091a:	4413      	add	r3, r2
 802091c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020920:	440a      	add	r2, r1
 8020922:	b29b      	uxth	r3, r3
 8020924:	b292      	uxth	r2, r2
 8020926:	b211      	sxth	r1, r2
 8020928:	b218      	sxth	r0, r3
 802092a:	4288      	cmp	r0, r1
 802092c:	dd12      	ble.n	8020954 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 802092e:	1a9b      	subs	r3, r3, r2
 8020930:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8020934:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8020938:	f8ad 1018 	strh.w	r1, [sp, #24]
 802093c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020940:	f8ad 001e 	strh.w	r0, [sp, #30]
 8020944:	23ff      	movs	r3, #255	; 0xff
 8020946:	4642      	mov	r2, r8
 8020948:	a902      	add	r1, sp, #8
 802094a:	4628      	mov	r0, r5
 802094c:	f8ad 601a 	strh.w	r6, [sp, #26]
 8020950:	f7ff f888 	bl	801fa64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020954:	88e2      	ldrh	r2, [r4, #6]
 8020956:	8863      	ldrh	r3, [r4, #2]
 8020958:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802095c:	4413      	add	r3, r2
 802095e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8020962:	440a      	add	r2, r1
 8020964:	b29b      	uxth	r3, r3
 8020966:	b292      	uxth	r2, r2
 8020968:	b211      	sxth	r1, r2
 802096a:	b218      	sxth	r0, r3
 802096c:	4288      	cmp	r0, r1
 802096e:	f77f af7b 	ble.w	8020868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8020972:	1a9b      	subs	r3, r3, r2
 8020974:	f9b4 6000 	ldrsh.w	r6, [r4]
 8020978:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802097c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020980:	f8ad 6018 	strh.w	r6, [sp, #24]
 8020984:	f8ad 101a 	strh.w	r1, [sp, #26]
 8020988:	f8ad 001c 	strh.w	r0, [sp, #28]
 802098c:	23ff      	movs	r3, #255	; 0xff
 802098e:	4642      	mov	r2, r8
 8020990:	e782      	b.n	8020898 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 8020992:	4633      	mov	r3, r6
 8020994:	4622      	mov	r2, r4
 8020996:	a902      	add	r1, sp, #8
 8020998:	4628      	mov	r0, r5
 802099a:	f7ff f9b9 	bl	801fd10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 802099e:	e763      	b.n	8020868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80209a0:	9600      	str	r6, [sp, #0]
 80209a2:	4623      	mov	r3, r4
 80209a4:	aa02      	add	r2, sp, #8
 80209a6:	4649      	mov	r1, r9
 80209a8:	4628      	mov	r0, r5
 80209aa:	f7ff fdd5 	bl	8020558 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80209ae:	e75b      	b.n	8020868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80209b0:	4638      	mov	r0, r7
 80209b2:	f7fb ff7d 	bl	801c8b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80209b6:	b950      	cbnz	r0, 80209ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 80209b8:	e9cd 6000 	strd	r6, r0, [sp]
 80209bc:	f8da 3000 	ldr.w	r3, [sl]
 80209c0:	aa02      	add	r2, sp, #8
 80209c2:	68de      	ldr	r6, [r3, #12]
 80209c4:	4629      	mov	r1, r5
 80209c6:	4623      	mov	r3, r4
 80209c8:	4650      	mov	r0, sl
 80209ca:	47b0      	blx	r6
 80209cc:	e74c      	b.n	8020868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80209ce:	f10d 0818 	add.w	r8, sp, #24
 80209d2:	4639      	mov	r1, r7
 80209d4:	4640      	mov	r0, r8
 80209d6:	f7fb ff11 	bl	801c7fc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80209da:	e898 0003 	ldmia.w	r8, {r0, r1}
 80209de:	af04      	add	r7, sp, #16
 80209e0:	e887 0003 	stmia.w	r7, {r0, r1}
 80209e4:	4638      	mov	r0, r7
 80209e6:	4621      	mov	r1, r4
 80209e8:	f7f1 fb94 	bl	8012114 <_ZN8touchgfx4RectaNERKS0_>
 80209ec:	4638      	mov	r0, r7
 80209ee:	f7f1 fbd4 	bl	801219a <_ZNK8touchgfx4Rect7isEmptyEv>
 80209f2:	b138      	cbz	r0, 8020a04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 80209f4:	9600      	str	r6, [sp, #0]
 80209f6:	4623      	mov	r3, r4
 80209f8:	aa02      	add	r2, sp, #8
 80209fa:	4649      	mov	r1, r9
 80209fc:	4628      	mov	r0, r5
 80209fe:	f7ff fdc3 	bl	8020588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020a02:	e731      	b.n	8020868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8020a04:	e9cd 6000 	strd	r6, r0, [sp]
 8020a08:	f8da 3000 	ldr.w	r3, [sl]
 8020a0c:	aa02      	add	r2, sp, #8
 8020a0e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8020a12:	4629      	mov	r1, r5
 8020a14:	463b      	mov	r3, r7
 8020a16:	4650      	mov	r0, sl
 8020a18:	47d8      	blx	fp
 8020a1a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020a1e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8020a22:	4293      	cmp	r3, r2
 8020a24:	dd13      	ble.n	8020a4e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 8020a26:	f9b4 0000 	ldrsh.w	r0, [r4]
 8020a2a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020a2e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8020a32:	1a9b      	subs	r3, r3, r2
 8020a34:	f8ad 201a 	strh.w	r2, [sp, #26]
 8020a38:	f8ad 101c 	strh.w	r1, [sp, #28]
 8020a3c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020a40:	9600      	str	r6, [sp, #0]
 8020a42:	4643      	mov	r3, r8
 8020a44:	aa02      	add	r2, sp, #8
 8020a46:	4649      	mov	r1, r9
 8020a48:	4628      	mov	r0, r5
 8020a4a:	f7ff fd9d 	bl	8020588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020a4e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8020a52:	f9b4 2000 	ldrsh.w	r2, [r4]
 8020a56:	4293      	cmp	r3, r2
 8020a58:	dd13      	ble.n	8020a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 8020a5a:	1a9b      	subs	r3, r3, r2
 8020a5c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8020a60:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8020a64:	f8ad 2018 	strh.w	r2, [sp, #24]
 8020a68:	f8ad 001a 	strh.w	r0, [sp, #26]
 8020a6c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020a70:	f8ad 101e 	strh.w	r1, [sp, #30]
 8020a74:	9600      	str	r6, [sp, #0]
 8020a76:	4643      	mov	r3, r8
 8020a78:	aa02      	add	r2, sp, #8
 8020a7a:	4649      	mov	r1, r9
 8020a7c:	4628      	mov	r0, r5
 8020a7e:	f7ff fd83 	bl	8020588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020a82:	88a2      	ldrh	r2, [r4, #4]
 8020a84:	8823      	ldrh	r3, [r4, #0]
 8020a86:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8020a8a:	4413      	add	r3, r2
 8020a8c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020a90:	440a      	add	r2, r1
 8020a92:	b29b      	uxth	r3, r3
 8020a94:	b292      	uxth	r2, r2
 8020a96:	b211      	sxth	r1, r2
 8020a98:	b218      	sxth	r0, r3
 8020a9a:	4288      	cmp	r0, r1
 8020a9c:	dd13      	ble.n	8020ac6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 8020a9e:	1a9b      	subs	r3, r3, r2
 8020aa0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8020aa4:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8020aa8:	f8ad 1018 	strh.w	r1, [sp, #24]
 8020aac:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020ab0:	f8ad 001e 	strh.w	r0, [sp, #30]
 8020ab4:	9600      	str	r6, [sp, #0]
 8020ab6:	4643      	mov	r3, r8
 8020ab8:	aa02      	add	r2, sp, #8
 8020aba:	4649      	mov	r1, r9
 8020abc:	4628      	mov	r0, r5
 8020abe:	f8ad 701a 	strh.w	r7, [sp, #26]
 8020ac2:	f7ff fd61 	bl	8020588 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020ac6:	88e2      	ldrh	r2, [r4, #6]
 8020ac8:	8863      	ldrh	r3, [r4, #2]
 8020aca:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8020ace:	4413      	add	r3, r2
 8020ad0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8020ad4:	440a      	add	r2, r1
 8020ad6:	b29b      	uxth	r3, r3
 8020ad8:	b292      	uxth	r2, r2
 8020ada:	b211      	sxth	r1, r2
 8020adc:	b218      	sxth	r0, r3
 8020ade:	4288      	cmp	r0, r1
 8020ae0:	f77f aec2 	ble.w	8020868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8020ae4:	f9b4 7000 	ldrsh.w	r7, [r4]
 8020ae8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020aec:	f8ad 7018 	strh.w	r7, [sp, #24]
 8020af0:	1a9b      	subs	r3, r3, r2
 8020af2:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020af6:	f8ad 101a 	strh.w	r1, [sp, #26]
 8020afa:	f8ad 001c 	strh.w	r0, [sp, #28]
 8020afe:	9600      	str	r6, [sp, #0]
 8020b00:	4643      	mov	r3, r8
 8020b02:	e779      	b.n	80209f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8020b04:	4b03      	ldr	r3, [pc, #12]	; (8020b14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 8020b06:	4a04      	ldr	r2, [pc, #16]	; (8020b18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 8020b08:	4804      	ldr	r0, [pc, #16]	; (8020b1c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 8020b0a:	21b0      	movs	r1, #176	; 0xb0
 8020b0c:	f00b fa72 	bl	802bff4 <__assert_func>
 8020b10:	2001e1c0 	.word	0x2001e1c0
 8020b14:	08035938 	.word	0x08035938
 8020b18:	08036047 	.word	0x08036047
 8020b1c:	08035abc 	.word	0x08035abc

08020b20 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8020b20:	b508      	push	{r3, lr}
 8020b22:	b180      	cbz	r0, 8020b46 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8020b24:	2902      	cmp	r1, #2
 8020b26:	d014      	beq.n	8020b52 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8020b28:	2903      	cmp	r1, #3
 8020b2a:	d01d      	beq.n	8020b68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8020b2c:	2901      	cmp	r1, #1
 8020b2e:	d101      	bne.n	8020b34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8020b30:	2001      	movs	r0, #1
 8020b32:	bd08      	pop	{r3, pc}
 8020b34:	4b0e      	ldr	r3, [pc, #56]	; (8020b70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8020b36:	8818      	ldrh	r0, [r3, #0]
 8020b38:	b990      	cbnz	r0, 8020b60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8020b3a:	4b0e      	ldr	r3, [pc, #56]	; (8020b74 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8020b3c:	4a0e      	ldr	r2, [pc, #56]	; (8020b78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8020b3e:	480f      	ldr	r0, [pc, #60]	; (8020b7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8020b40:	2153      	movs	r1, #83	; 0x53
 8020b42:	f00b fa57 	bl	802bff4 <__assert_func>
 8020b46:	2902      	cmp	r1, #2
 8020b48:	d00e      	beq.n	8020b68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8020b4a:	2903      	cmp	r1, #3
 8020b4c:	d0f2      	beq.n	8020b34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8020b4e:	2901      	cmp	r1, #1
 8020b50:	d1ee      	bne.n	8020b30 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8020b52:	4b07      	ldr	r3, [pc, #28]	; (8020b70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8020b54:	8818      	ldrh	r0, [r3, #0]
 8020b56:	2800      	cmp	r0, #0
 8020b58:	d0ef      	beq.n	8020b3a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8020b5a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020b5e:	e7e8      	b.n	8020b32 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8020b60:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020b64:	4240      	negs	r0, r0
 8020b66:	e7e4      	b.n	8020b32 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8020b68:	f04f 30ff 	mov.w	r0, #4294967295
 8020b6c:	e7e1      	b.n	8020b32 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8020b6e:	bf00      	nop
 8020b70:	2001e1ba 	.word	0x2001e1ba
 8020b74:	08035bb2 	.word	0x08035bb2
 8020b78:	080361c4 	.word	0x080361c4
 8020b7c:	08035bf4 	.word	0x08035bf4

08020b80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8020b80:	b508      	push	{r3, lr}
 8020b82:	b180      	cbz	r0, 8020ba6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8020b84:	2902      	cmp	r1, #2
 8020b86:	d014      	beq.n	8020bb2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8020b88:	2903      	cmp	r1, #3
 8020b8a:	d018      	beq.n	8020bbe <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8020b8c:	2901      	cmp	r1, #1
 8020b8e:	d001      	beq.n	8020b94 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8020b90:	2001      	movs	r0, #1
 8020b92:	e013      	b.n	8020bbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8020b94:	4b0e      	ldr	r3, [pc, #56]	; (8020bd0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8020b96:	8818      	ldrh	r0, [r3, #0]
 8020b98:	b970      	cbnz	r0, 8020bb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8020b9a:	4b0e      	ldr	r3, [pc, #56]	; (8020bd4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8020b9c:	4a0e      	ldr	r2, [pc, #56]	; (8020bd8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8020b9e:	480f      	ldr	r0, [pc, #60]	; (8020bdc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8020ba0:	2153      	movs	r1, #83	; 0x53
 8020ba2:	f00b fa27 	bl	802bff4 <__assert_func>
 8020ba6:	2902      	cmp	r1, #2
 8020ba8:	d009      	beq.n	8020bbe <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8020baa:	2903      	cmp	r1, #3
 8020bac:	d0f0      	beq.n	8020b90 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8020bae:	2901      	cmp	r1, #1
 8020bb0:	d1f0      	bne.n	8020b94 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8020bb2:	f04f 30ff 	mov.w	r0, #4294967295
 8020bb6:	e001      	b.n	8020bbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8020bb8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020bbc:	bd08      	pop	{r3, pc}
 8020bbe:	4b04      	ldr	r3, [pc, #16]	; (8020bd0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8020bc0:	8818      	ldrh	r0, [r3, #0]
 8020bc2:	2800      	cmp	r0, #0
 8020bc4:	d0e9      	beq.n	8020b9a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8020bc6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020bca:	4240      	negs	r0, r0
 8020bcc:	e7f6      	b.n	8020bbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8020bce:	bf00      	nop
 8020bd0:	2001e1ba 	.word	0x2001e1ba
 8020bd4:	08035bb2 	.word	0x08035bb2
 8020bd8:	080361c4 	.word	0x080361c4
 8020bdc:	08035bf4 	.word	0x08035bf4

08020be0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8020be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020be4:	b099      	sub	sp, #100	; 0x64
 8020be6:	910b      	str	r1, [sp, #44]	; 0x2c
 8020be8:	a914      	add	r1, sp, #80	; 0x50
 8020bea:	e881 000c 	stmia.w	r1, {r2, r3}
 8020bee:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8020bf2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8020bf6:	930a      	str	r3, [sp, #40]	; 0x28
 8020bf8:	f891 900d 	ldrb.w	r9, [r1, #13]
 8020bfc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8020c00:	9311      	str	r3, [sp, #68]	; 0x44
 8020c02:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8020c06:	930c      	str	r3, [sp, #48]	; 0x30
 8020c08:	7988      	ldrb	r0, [r1, #6]
 8020c0a:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8020c0e:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8020c12:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8020c16:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8020c1a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8020c1e:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8020c22:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8020c26:	4303      	orrs	r3, r0
 8020c28:	9309      	str	r3, [sp, #36]	; 0x24
 8020c2a:	f000 81a1 	beq.w	8020f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8020c2e:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8020c32:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8020c36:	f891 9007 	ldrb.w	r9, [r1, #7]
 8020c3a:	ea59 0903 	orrs.w	r9, r9, r3
 8020c3e:	f000 8197 	beq.w	8020f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8020c42:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8020c46:	b29b      	uxth	r3, r3
 8020c48:	2e00      	cmp	r6, #0
 8020c4a:	f000 813a 	beq.w	8020ec2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8020c4e:	1af6      	subs	r6, r6, r3
 8020c50:	b2b6      	uxth	r6, r6
 8020c52:	0433      	lsls	r3, r6, #16
 8020c54:	d502      	bpl.n	8020c5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8020c56:	1bad      	subs	r5, r5, r6
 8020c58:	b22d      	sxth	r5, r5
 8020c5a:	2600      	movs	r6, #0
 8020c5c:	f9b2 1000 	ldrsh.w	r1, [r2]
 8020c60:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8020c64:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8020c68:	428d      	cmp	r5, r1
 8020c6a:	b28b      	uxth	r3, r1
 8020c6c:	bfbf      	itttt	lt
 8020c6e:	18f6      	addlt	r6, r6, r3
 8020c70:	1b75      	sublt	r5, r6, r5
 8020c72:	b2ae      	uxthlt	r6, r5
 8020c74:	460d      	movlt	r5, r1
 8020c76:	8891      	ldrh	r1, [r2, #4]
 8020c78:	440b      	add	r3, r1
 8020c7a:	b21b      	sxth	r3, r3
 8020c7c:	9310      	str	r3, [sp, #64]	; 0x40
 8020c7e:	88d3      	ldrh	r3, [r2, #6]
 8020c80:	8852      	ldrh	r2, [r2, #2]
 8020c82:	4413      	add	r3, r2
 8020c84:	b21b      	sxth	r3, r3
 8020c86:	930f      	str	r3, [sp, #60]	; 0x3c
 8020c88:	4bbc      	ldr	r3, [pc, #752]	; (8020f7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8020c8a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020c8c:	f893 b000 	ldrb.w	fp, [r3]
 8020c90:	f10b 3cff 	add.w	ip, fp, #4294967295
 8020c94:	f1dc 0300 	rsbs	r3, ip, #0
 8020c98:	eb43 030c 	adc.w	r3, r3, ip
 8020c9c:	930e      	str	r3, [sp, #56]	; 0x38
 8020c9e:	4629      	mov	r1, r5
 8020ca0:	4653      	mov	r3, sl
 8020ca2:	a814      	add	r0, sp, #80	; 0x50
 8020ca4:	f7f8 f83b 	bl	8018d1e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8020ca8:	4629      	mov	r1, r5
 8020caa:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8020cae:	4653      	mov	r3, sl
 8020cb0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020cb2:	a814      	add	r0, sp, #80	; 0x50
 8020cb4:	f7f8 f84b 	bl	8018d4e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8020cb8:	a918      	add	r1, sp, #96	; 0x60
 8020cba:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8020cbe:	a817      	add	r0, sp, #92	; 0x5c
 8020cc0:	f7f8 f966 	bl	8018f90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8020cc4:	f1ba 0f00 	cmp.w	sl, #0
 8020cc8:	f040 80fe 	bne.w	8020ec8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8020ccc:	f1bb 0f01 	cmp.w	fp, #1
 8020cd0:	f040 8102 	bne.w	8020ed8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 8020cd4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020cd6:	b153      	cbz	r3, 8020cee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8020cd8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020cda:	2408      	movs	r4, #8
 8020cdc:	fb94 f3f8 	sdiv	r3, r4, r8
 8020ce0:	1e5c      	subs	r4, r3, #1
 8020ce2:	4414      	add	r4, r2
 8020ce4:	fb94 f4f3 	sdiv	r4, r4, r3
 8020ce8:	fb14 f403 	smulbb	r4, r4, r3
 8020cec:	b2a4      	uxth	r4, r4
 8020cee:	b906      	cbnz	r6, 8020cf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8020cf0:	b16f      	cbz	r7, 8020d0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 8020cf2:	fb07 6304 	mla	r3, r7, r4, r6
 8020cf6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020cf8:	fb08 f303 	mul.w	r3, r8, r3
 8020cfc:	463a      	mov	r2, r7
 8020cfe:	f003 0707 	and.w	r7, r3, #7
 8020d02:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 8020d06:	9328      	str	r3, [sp, #160]	; 0xa0
 8020d08:	eba9 0302 	sub.w	r3, r9, r2
 8020d0c:	930d      	str	r3, [sp, #52]	; 0x34
 8020d0e:	4651      	mov	r1, sl
 8020d10:	980e      	ldr	r0, [sp, #56]	; 0x38
 8020d12:	f7ff ff05 	bl	8020b20 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8020d16:	4651      	mov	r1, sl
 8020d18:	4681      	mov	r9, r0
 8020d1a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8020d1c:	f7ff ff30 	bl	8020b80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8020d20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020d22:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020d24:	eba3 0a02 	sub.w	sl, r3, r2
 8020d28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020d2a:	459a      	cmp	sl, r3
 8020d2c:	bfa8      	it	ge
 8020d2e:	469a      	movge	sl, r3
 8020d30:	f1ba 0f00 	cmp.w	sl, #0
 8020d34:	4683      	mov	fp, r0
 8020d36:	f340 811b 	ble.w	8020f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8020d3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020d3c:	1bad      	subs	r5, r5, r6
 8020d3e:	1b5d      	subs	r5, r3, r5
 8020d40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d42:	429d      	cmp	r5, r3
 8020d44:	bfd4      	ite	le
 8020d46:	ebc6 0605 	rsble	r6, r6, r5
 8020d4a:	ebc6 0603 	rsbgt	r6, r6, r3
 8020d4e:	2e00      	cmp	r6, #0
 8020d50:	f340 810e 	ble.w	8020f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8020d54:	1ba4      	subs	r4, r4, r6
 8020d56:	fb08 f304 	mul.w	r3, r8, r4
 8020d5a:	930f      	str	r3, [sp, #60]	; 0x3c
 8020d5c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020d5e:	2b00      	cmp	r3, #0
 8020d60:	f040 8114 	bne.w	8020f8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8020d64:	4b86      	ldr	r3, [pc, #536]	; (8020f80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8020d66:	6818      	ldr	r0, [r3, #0]
 8020d68:	6803      	ldr	r3, [r0, #0]
 8020d6a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020d6c:	4798      	blx	r3
 8020d6e:	2301      	movs	r3, #1
 8020d70:	fa03 f308 	lsl.w	r3, r3, r8
 8020d74:	4a83      	ldr	r2, [pc, #524]	; (8020f84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8020d76:	3b01      	subs	r3, #1
 8020d78:	b2db      	uxtb	r3, r3
 8020d7a:	8811      	ldrh	r1, [r2, #0]
 8020d7c:	930e      	str	r3, [sp, #56]	; 0x38
 8020d7e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8020d82:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8020d86:	fb01 2303 	mla	r3, r1, r3, r2
 8020d8a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020d8e:	930a      	str	r3, [sp, #40]	; 0x28
 8020d90:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020d92:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8020d96:	9313      	str	r3, [sp, #76]	; 0x4c
 8020d98:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020d9a:	0a19      	lsrs	r1, r3, #8
 8020d9c:	b2cb      	uxtb	r3, r1
 8020d9e:	9312      	str	r3, [sp, #72]	; 0x48
 8020da0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020da2:	b2db      	uxtb	r3, r3
 8020da4:	9311      	str	r3, [sp, #68]	; 0x44
 8020da6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020da8:	095a      	lsrs	r2, r3, #5
 8020daa:	4b77      	ldr	r3, [pc, #476]	; (8020f88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8020dac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020db0:	400b      	ands	r3, r1
 8020db2:	4313      	orrs	r3, r2
 8020db4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8020db6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020dba:	4313      	orrs	r3, r2
 8020dbc:	b29b      	uxth	r3, r3
 8020dbe:	9310      	str	r3, [sp, #64]	; 0x40
 8020dc0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020dc2:	781a      	ldrb	r2, [r3, #0]
 8020dc4:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8020dc8:	413a      	asrs	r2, r7
 8020dca:	fb06 b919 	mls	r9, r6, r9, fp
 8020dce:	fb03 fb06 	mul.w	fp, r3, r6
 8020dd2:	b2d2      	uxtb	r2, r2
 8020dd4:	930d      	str	r3, [sp, #52]	; 0x34
 8020dd6:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8020dda:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8020dde:	f0c0 80ea 	bcc.w	8020fb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 8020de2:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8020de6:	46b6      	mov	lr, r6
 8020de8:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8020dec:	f0c0 80d2 	bcc.w	8020f94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8020df0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020df2:	4013      	ands	r3, r2
 8020df4:	d055      	beq.n	8020ea2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 8020df6:	20ff      	movs	r0, #255	; 0xff
 8020df8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8020dfa:	fb90 f1f1 	sdiv	r1, r0, r1
 8020dfe:	434b      	muls	r3, r1
 8020e00:	2bfe      	cmp	r3, #254	; 0xfe
 8020e02:	dd03      	ble.n	8020e0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 8020e04:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020e06:	4281      	cmp	r1, r0
 8020e08:	f000 80c2 	beq.w	8020f90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8020e0c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020e0e:	f8bc 4000 	ldrh.w	r4, [ip]
 8020e12:	fb11 f303 	smulbb	r3, r1, r3
 8020e16:	b29b      	uxth	r3, r3
 8020e18:	1c59      	adds	r1, r3, #1
 8020e1a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8020e1e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020e22:	b29d      	uxth	r5, r3
 8020e24:	43db      	mvns	r3, r3
 8020e26:	b2db      	uxtb	r3, r3
 8020e28:	9309      	str	r3, [sp, #36]	; 0x24
 8020e2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020e2c:	1220      	asrs	r0, r4, #8
 8020e2e:	fb13 f905 	smulbb	r9, r3, r5
 8020e32:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020e36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e38:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8020e3c:	fb00 9003 	mla	r0, r0, r3, r9
 8020e40:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020e42:	10e1      	asrs	r1, r4, #3
 8020e44:	fb13 f905 	smulbb	r9, r3, r5
 8020e48:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020e4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e4e:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8020e52:	fb01 9103 	mla	r1, r1, r3, r9
 8020e56:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020e58:	00e4      	lsls	r4, r4, #3
 8020e5a:	fb13 f505 	smulbb	r5, r3, r5
 8020e5e:	b2e4      	uxtb	r4, r4
 8020e60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e62:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020e66:	fb04 5403 	mla	r4, r4, r3, r5
 8020e6a:	b280      	uxth	r0, r0
 8020e6c:	b2a4      	uxth	r4, r4
 8020e6e:	1c43      	adds	r3, r0, #1
 8020e70:	f104 0901 	add.w	r9, r4, #1
 8020e74:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020e78:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8020e7c:	b289      	uxth	r1, r1
 8020e7e:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8020e82:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020e86:	ea49 0000 	orr.w	r0, r9, r0
 8020e8a:	f101 0901 	add.w	r9, r1, #1
 8020e8e:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8020e92:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8020e96:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020e9a:	ea40 0009 	orr.w	r0, r0, r9
 8020e9e:	f8ac 0000 	strh.w	r0, [ip]
 8020ea2:	4447      	add	r7, r8
 8020ea4:	b2bf      	uxth	r7, r7
 8020ea6:	2f07      	cmp	r7, #7
 8020ea8:	bf81      	itttt	hi
 8020eaa:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8020eac:	785a      	ldrbhi	r2, [r3, #1]
 8020eae:	3301      	addhi	r3, #1
 8020eb0:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8020eb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020eb4:	bf9a      	itte	ls
 8020eb6:	fa42 f208 	asrls.w	r2, r2, r8
 8020eba:	b2d2      	uxtbls	r2, r2
 8020ebc:	2700      	movhi	r7, #0
 8020ebe:	449c      	add	ip, r3
 8020ec0:	e792      	b.n	8020de8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8020ec2:	441d      	add	r5, r3
 8020ec4:	b22d      	sxth	r5, r5
 8020ec6:	e6c9      	b.n	8020c5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8020ec8:	f1ba 0f01 	cmp.w	sl, #1
 8020ecc:	f47f af02 	bne.w	8020cd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020ed0:	f1bb 0f01 	cmp.w	fp, #1
 8020ed4:	f47f aefe 	bne.w	8020cd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020ed8:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 8020f80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8020edc:	f8db 0000 	ldr.w	r0, [fp]
 8020ee0:	6803      	ldr	r3, [r0, #0]
 8020ee2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020ee4:	4798      	blx	r3
 8020ee6:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8020eea:	465a      	mov	r2, fp
 8020eec:	d006      	beq.n	8020efc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8020eee:	f1b8 0f04 	cmp.w	r8, #4
 8020ef2:	d140      	bne.n	8020f76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8020ef4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020ef6:	3300      	adds	r3, #0
 8020ef8:	bf18      	it	ne
 8020efa:	2301      	movne	r3, #1
 8020efc:	0580      	lsls	r0, r0, #22
 8020efe:	d563      	bpl.n	8020fc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8020f00:	f1b8 0f08 	cmp.w	r8, #8
 8020f04:	d160      	bne.n	8020fc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8020f06:	2b00      	cmp	r3, #0
 8020f08:	bf0c      	ite	eq
 8020f0a:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8020f0e:	f44f 7180 	movne.w	r1, #256	; 0x100
 8020f12:	2e00      	cmp	r6, #0
 8020f14:	f47f aede 	bne.w	8020cd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020f18:	2f00      	cmp	r7, #0
 8020f1a:	f47f aedb 	bne.w	8020cd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020f1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020f20:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020f22:	18eb      	adds	r3, r5, r3
 8020f24:	4283      	cmp	r3, r0
 8020f26:	f73f aed5 	bgt.w	8020cd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020f2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020f2c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8020f2e:	444b      	add	r3, r9
 8020f30:	4283      	cmp	r3, r0
 8020f32:	f73f aecf 	bgt.w	8020cd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020f36:	6810      	ldr	r0, [r2, #0]
 8020f38:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8020f3c:	6805      	ldr	r5, [r0, #0]
 8020f3e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8020f42:	f1b8 0f08 	cmp.w	r8, #8
 8020f46:	f04f 0600 	mov.w	r6, #0
 8020f4a:	bf18      	it	ne
 8020f4c:	3401      	addne	r4, #1
 8020f4e:	e9cd 1605 	strd	r1, r6, [sp, #20]
 8020f52:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020f54:	9104      	str	r1, [sp, #16]
 8020f56:	bf18      	it	ne
 8020f58:	f024 0401 	bicne.w	r4, r4, #1
 8020f5c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8020f5e:	bf18      	it	ne
 8020f60:	b2a4      	uxthne	r4, r4
 8020f62:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8020f66:	e9cd 4900 	strd	r4, r9, [sp]
 8020f6a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020f6c:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 8020f6e:	47a0      	blx	r4
 8020f70:	b019      	add	sp, #100	; 0x64
 8020f72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f76:	2300      	movs	r3, #0
 8020f78:	e7c0      	b.n	8020efc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8020f7a:	bf00      	nop
 8020f7c:	2001e1b8 	.word	0x2001e1b8
 8020f80:	2001e1c0 	.word	0x2001e1c0
 8020f84:	2001e1ba 	.word	0x2001e1ba
 8020f88:	00fff800 	.word	0x00fff800
 8020f8c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8020f8e:	e6ee      	b.n	8020d6e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 8020f90:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020f92:	e784      	b.n	8020e9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 8020f94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020f96:	b153      	cbz	r3, 8020fae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 8020f98:	441f      	add	r7, r3
 8020f9a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020f9c:	b2bf      	uxth	r7, r7
 8020f9e:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8020fa2:	f007 0707 	and.w	r7, r7, #7
 8020fa6:	781a      	ldrb	r2, [r3, #0]
 8020fa8:	9328      	str	r3, [sp, #160]	; 0xa0
 8020faa:	413a      	asrs	r2, r7
 8020fac:	b2d2      	uxtb	r2, r2
 8020fae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020fb0:	445b      	add	r3, fp
 8020fb2:	930a      	str	r3, [sp, #40]	; 0x28
 8020fb4:	e711      	b.n	8020dda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 8020fb6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020fb8:	2b00      	cmp	r3, #0
 8020fba:	d1d9      	bne.n	8020f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8020fbc:	4b05      	ldr	r3, [pc, #20]	; (8020fd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 8020fbe:	6818      	ldr	r0, [r3, #0]
 8020fc0:	6803      	ldr	r3, [r0, #0]
 8020fc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020fc4:	4798      	blx	r3
 8020fc6:	e7d3      	b.n	8020f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8020fc8:	2b00      	cmp	r3, #0
 8020fca:	f43f ae83 	beq.w	8020cd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8020fce:	f44f 7180 	mov.w	r1, #256	; 0x100
 8020fd2:	e79e      	b.n	8020f12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 8020fd4:	2001e1c0 	.word	0x2001e1c0

08020fd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8020fd8:	b538      	push	{r3, r4, r5, lr}
 8020fda:	4c15      	ldr	r4, [pc, #84]	; (8021030 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8020fdc:	7823      	ldrb	r3, [r4, #0]
 8020fde:	f3bf 8f5b 	dmb	ish
 8020fe2:	07da      	lsls	r2, r3, #31
 8020fe4:	4605      	mov	r5, r0
 8020fe6:	d40b      	bmi.n	8021000 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020fe8:	4620      	mov	r0, r4
 8020fea:	f00a f8b8 	bl	802b15e <__cxa_guard_acquire>
 8020fee:	b138      	cbz	r0, 8021000 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020ff0:	4620      	mov	r0, r4
 8020ff2:	f00a f8c0 	bl	802b176 <__cxa_guard_release>
 8020ff6:	4a0f      	ldr	r2, [pc, #60]	; (8021034 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020ff8:	490f      	ldr	r1, [pc, #60]	; (8021038 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8020ffa:	4810      	ldr	r0, [pc, #64]	; (802103c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020ffc:	f00a f8a8 	bl	802b150 <__aeabi_atexit>
 8021000:	4c0f      	ldr	r4, [pc, #60]	; (8021040 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8021002:	7823      	ldrb	r3, [r4, #0]
 8021004:	f3bf 8f5b 	dmb	ish
 8021008:	07db      	lsls	r3, r3, #31
 802100a:	d40b      	bmi.n	8021024 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 802100c:	4620      	mov	r0, r4
 802100e:	f00a f8a6 	bl	802b15e <__cxa_guard_acquire>
 8021012:	b138      	cbz	r0, 8021024 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021014:	4620      	mov	r0, r4
 8021016:	f00a f8ae 	bl	802b176 <__cxa_guard_release>
 802101a:	4a06      	ldr	r2, [pc, #24]	; (8021034 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 802101c:	4909      	ldr	r1, [pc, #36]	; (8021044 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 802101e:	480a      	ldr	r0, [pc, #40]	; (8021048 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021020:	f00a f896 	bl	802b150 <__aeabi_atexit>
 8021024:	4b05      	ldr	r3, [pc, #20]	; (802103c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021026:	612b      	str	r3, [r5, #16]
 8021028:	4b07      	ldr	r3, [pc, #28]	; (8021048 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 802102a:	616b      	str	r3, [r5, #20]
 802102c:	bd38      	pop	{r3, r4, r5, pc}
 802102e:	bf00      	nop
 8021030:	2001e2ac 	.word	0x2001e2ac
 8021034:	20000000 	.word	0x20000000
 8021038:	0801f039 	.word	0x0801f039
 802103c:	200000e0 	.word	0x200000e0
 8021040:	2001e2b0 	.word	0x2001e2b0
 8021044:	0801f037 	.word	0x0801f037
 8021048:	200000e4 	.word	0x200000e4

0802104c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 802104c:	b538      	push	{r3, r4, r5, lr}
 802104e:	4c15      	ldr	r4, [pc, #84]	; (80210a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8021050:	7823      	ldrb	r3, [r4, #0]
 8021052:	f3bf 8f5b 	dmb	ish
 8021056:	07da      	lsls	r2, r3, #31
 8021058:	4605      	mov	r5, r0
 802105a:	d40b      	bmi.n	8021074 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 802105c:	4620      	mov	r0, r4
 802105e:	f00a f87e 	bl	802b15e <__cxa_guard_acquire>
 8021062:	b138      	cbz	r0, 8021074 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021064:	4620      	mov	r0, r4
 8021066:	f00a f886 	bl	802b176 <__cxa_guard_release>
 802106a:	4a0f      	ldr	r2, [pc, #60]	; (80210a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 802106c:	490f      	ldr	r1, [pc, #60]	; (80210ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 802106e:	4810      	ldr	r0, [pc, #64]	; (80210b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021070:	f00a f86e 	bl	802b150 <__aeabi_atexit>
 8021074:	4c0f      	ldr	r4, [pc, #60]	; (80210b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8021076:	7823      	ldrb	r3, [r4, #0]
 8021078:	f3bf 8f5b 	dmb	ish
 802107c:	07db      	lsls	r3, r3, #31
 802107e:	d40b      	bmi.n	8021098 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021080:	4620      	mov	r0, r4
 8021082:	f00a f86c 	bl	802b15e <__cxa_guard_acquire>
 8021086:	b138      	cbz	r0, 8021098 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021088:	4620      	mov	r0, r4
 802108a:	f00a f874 	bl	802b176 <__cxa_guard_release>
 802108e:	4a06      	ldr	r2, [pc, #24]	; (80210a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021090:	4909      	ldr	r1, [pc, #36]	; (80210b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8021092:	480a      	ldr	r0, [pc, #40]	; (80210bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021094:	f00a f85c 	bl	802b150 <__aeabi_atexit>
 8021098:	4b05      	ldr	r3, [pc, #20]	; (80210b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 802109a:	60ab      	str	r3, [r5, #8]
 802109c:	4b07      	ldr	r3, [pc, #28]	; (80210bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 802109e:	60eb      	str	r3, [r5, #12]
 80210a0:	bd38      	pop	{r3, r4, r5, pc}
 80210a2:	bf00      	nop
 80210a4:	2001e284 	.word	0x2001e284
 80210a8:	20000000 	.word	0x20000000
 80210ac:	0801f03d 	.word	0x0801f03d
 80210b0:	200000b8 	.word	0x200000b8
 80210b4:	2001e288 	.word	0x2001e288
 80210b8:	0801f03b 	.word	0x0801f03b
 80210bc:	200000bc 	.word	0x200000bc

080210c0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80210c0:	b510      	push	{r4, lr}
 80210c2:	4604      	mov	r4, r0
 80210c4:	f7ff ff88 	bl	8020fd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80210c8:	4620      	mov	r0, r4
 80210ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80210ce:	f7ff bfbd 	b.w	802104c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080210d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80210d4:	b538      	push	{r3, r4, r5, lr}
 80210d6:	4c15      	ldr	r4, [pc, #84]	; (802112c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80210d8:	7823      	ldrb	r3, [r4, #0]
 80210da:	f3bf 8f5b 	dmb	ish
 80210de:	07da      	lsls	r2, r3, #31
 80210e0:	4605      	mov	r5, r0
 80210e2:	d40b      	bmi.n	80210fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80210e4:	4620      	mov	r0, r4
 80210e6:	f00a f83a 	bl	802b15e <__cxa_guard_acquire>
 80210ea:	b138      	cbz	r0, 80210fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80210ec:	4620      	mov	r0, r4
 80210ee:	f00a f842 	bl	802b176 <__cxa_guard_release>
 80210f2:	4a0f      	ldr	r2, [pc, #60]	; (8021130 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80210f4:	490f      	ldr	r1, [pc, #60]	; (8021134 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80210f6:	4810      	ldr	r0, [pc, #64]	; (8021138 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80210f8:	f00a f82a 	bl	802b150 <__aeabi_atexit>
 80210fc:	4c0f      	ldr	r4, [pc, #60]	; (802113c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80210fe:	7823      	ldrb	r3, [r4, #0]
 8021100:	f3bf 8f5b 	dmb	ish
 8021104:	07db      	lsls	r3, r3, #31
 8021106:	d40b      	bmi.n	8021120 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021108:	4620      	mov	r0, r4
 802110a:	f00a f828 	bl	802b15e <__cxa_guard_acquire>
 802110e:	b138      	cbz	r0, 8021120 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021110:	4620      	mov	r0, r4
 8021112:	f00a f830 	bl	802b176 <__cxa_guard_release>
 8021116:	4a06      	ldr	r2, [pc, #24]	; (8021130 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021118:	4909      	ldr	r1, [pc, #36]	; (8021140 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 802111a:	480a      	ldr	r0, [pc, #40]	; (8021144 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 802111c:	f00a f818 	bl	802b150 <__aeabi_atexit>
 8021120:	4b05      	ldr	r3, [pc, #20]	; (8021138 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021122:	622b      	str	r3, [r5, #32]
 8021124:	4b07      	ldr	r3, [pc, #28]	; (8021144 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021126:	626b      	str	r3, [r5, #36]	; 0x24
 8021128:	bd38      	pop	{r3, r4, r5, pc}
 802112a:	bf00      	nop
 802112c:	2001e2b4 	.word	0x2001e2b4
 8021130:	20000000 	.word	0x20000000
 8021134:	0801f031 	.word	0x0801f031
 8021138:	200000e8 	.word	0x200000e8
 802113c:	2001e2b8 	.word	0x2001e2b8
 8021140:	0801f02f 	.word	0x0801f02f
 8021144:	200000ec 	.word	0x200000ec

08021148 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8021148:	b538      	push	{r3, r4, r5, lr}
 802114a:	4c15      	ldr	r4, [pc, #84]	; (80211a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 802114c:	7823      	ldrb	r3, [r4, #0]
 802114e:	f3bf 8f5b 	dmb	ish
 8021152:	07da      	lsls	r2, r3, #31
 8021154:	4605      	mov	r5, r0
 8021156:	d40b      	bmi.n	8021170 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021158:	4620      	mov	r0, r4
 802115a:	f00a f800 	bl	802b15e <__cxa_guard_acquire>
 802115e:	b138      	cbz	r0, 8021170 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021160:	4620      	mov	r0, r4
 8021162:	f00a f808 	bl	802b176 <__cxa_guard_release>
 8021166:	4a0f      	ldr	r2, [pc, #60]	; (80211a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021168:	490f      	ldr	r1, [pc, #60]	; (80211a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 802116a:	4810      	ldr	r0, [pc, #64]	; (80211ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 802116c:	f009 fff0 	bl	802b150 <__aeabi_atexit>
 8021170:	4c0f      	ldr	r4, [pc, #60]	; (80211b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8021172:	7823      	ldrb	r3, [r4, #0]
 8021174:	f3bf 8f5b 	dmb	ish
 8021178:	07db      	lsls	r3, r3, #31
 802117a:	d40b      	bmi.n	8021194 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 802117c:	4620      	mov	r0, r4
 802117e:	f009 ffee 	bl	802b15e <__cxa_guard_acquire>
 8021182:	b138      	cbz	r0, 8021194 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021184:	4620      	mov	r0, r4
 8021186:	f009 fff6 	bl	802b176 <__cxa_guard_release>
 802118a:	4a06      	ldr	r2, [pc, #24]	; (80211a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 802118c:	4909      	ldr	r1, [pc, #36]	; (80211b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 802118e:	480a      	ldr	r0, [pc, #40]	; (80211b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021190:	f009 ffde 	bl	802b150 <__aeabi_atexit>
 8021194:	4b05      	ldr	r3, [pc, #20]	; (80211ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021196:	61ab      	str	r3, [r5, #24]
 8021198:	4b07      	ldr	r3, [pc, #28]	; (80211b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 802119a:	61eb      	str	r3, [r5, #28]
 802119c:	bd38      	pop	{r3, r4, r5, pc}
 802119e:	bf00      	nop
 80211a0:	2001e28c 	.word	0x2001e28c
 80211a4:	20000000 	.word	0x20000000
 80211a8:	0801f035 	.word	0x0801f035
 80211ac:	200000c0 	.word	0x200000c0
 80211b0:	2001e290 	.word	0x2001e290
 80211b4:	0801f033 	.word	0x0801f033
 80211b8:	200000c4 	.word	0x200000c4

080211bc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80211bc:	b510      	push	{r4, lr}
 80211be:	4604      	mov	r4, r0
 80211c0:	f7ff ff88 	bl	80210d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80211c4:	4620      	mov	r0, r4
 80211c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80211ca:	f7ff bfbd 	b.w	8021148 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080211d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80211d0:	b538      	push	{r3, r4, r5, lr}
 80211d2:	4c15      	ldr	r4, [pc, #84]	; (8021228 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80211d4:	7823      	ldrb	r3, [r4, #0]
 80211d6:	f3bf 8f5b 	dmb	ish
 80211da:	07da      	lsls	r2, r3, #31
 80211dc:	4605      	mov	r5, r0
 80211de:	d40b      	bmi.n	80211f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80211e0:	4620      	mov	r0, r4
 80211e2:	f009 ffbc 	bl	802b15e <__cxa_guard_acquire>
 80211e6:	b138      	cbz	r0, 80211f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80211e8:	4620      	mov	r0, r4
 80211ea:	f009 ffc4 	bl	802b176 <__cxa_guard_release>
 80211ee:	4a0f      	ldr	r2, [pc, #60]	; (802122c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80211f0:	490f      	ldr	r1, [pc, #60]	; (8021230 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80211f2:	4810      	ldr	r0, [pc, #64]	; (8021234 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80211f4:	f009 ffac 	bl	802b150 <__aeabi_atexit>
 80211f8:	4c0f      	ldr	r4, [pc, #60]	; (8021238 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80211fa:	7823      	ldrb	r3, [r4, #0]
 80211fc:	f3bf 8f5b 	dmb	ish
 8021200:	07db      	lsls	r3, r3, #31
 8021202:	d40b      	bmi.n	802121c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021204:	4620      	mov	r0, r4
 8021206:	f009 ffaa 	bl	802b15e <__cxa_guard_acquire>
 802120a:	b138      	cbz	r0, 802121c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 802120c:	4620      	mov	r0, r4
 802120e:	f009 ffb2 	bl	802b176 <__cxa_guard_release>
 8021212:	4a06      	ldr	r2, [pc, #24]	; (802122c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021214:	4909      	ldr	r1, [pc, #36]	; (802123c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8021216:	480a      	ldr	r0, [pc, #40]	; (8021240 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021218:	f009 ff9a 	bl	802b150 <__aeabi_atexit>
 802121c:	4b05      	ldr	r3, [pc, #20]	; (8021234 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 802121e:	632b      	str	r3, [r5, #48]	; 0x30
 8021220:	4b07      	ldr	r3, [pc, #28]	; (8021240 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021222:	636b      	str	r3, [r5, #52]	; 0x34
 8021224:	bd38      	pop	{r3, r4, r5, pc}
 8021226:	bf00      	nop
 8021228:	2001e2c4 	.word	0x2001e2c4
 802122c:	20000000 	.word	0x20000000
 8021230:	0801f029 	.word	0x0801f029
 8021234:	200000f8 	.word	0x200000f8
 8021238:	2001e2c8 	.word	0x2001e2c8
 802123c:	0801f027 	.word	0x0801f027
 8021240:	200000fc 	.word	0x200000fc

08021244 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8021244:	b538      	push	{r3, r4, r5, lr}
 8021246:	4c15      	ldr	r4, [pc, #84]	; (802129c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8021248:	7823      	ldrb	r3, [r4, #0]
 802124a:	f3bf 8f5b 	dmb	ish
 802124e:	07da      	lsls	r2, r3, #31
 8021250:	4605      	mov	r5, r0
 8021252:	d40b      	bmi.n	802126c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021254:	4620      	mov	r0, r4
 8021256:	f009 ff82 	bl	802b15e <__cxa_guard_acquire>
 802125a:	b138      	cbz	r0, 802126c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 802125c:	4620      	mov	r0, r4
 802125e:	f009 ff8a 	bl	802b176 <__cxa_guard_release>
 8021262:	4a0f      	ldr	r2, [pc, #60]	; (80212a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021264:	490f      	ldr	r1, [pc, #60]	; (80212a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8021266:	4810      	ldr	r0, [pc, #64]	; (80212a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021268:	f009 ff72 	bl	802b150 <__aeabi_atexit>
 802126c:	4c0f      	ldr	r4, [pc, #60]	; (80212ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 802126e:	7823      	ldrb	r3, [r4, #0]
 8021270:	f3bf 8f5b 	dmb	ish
 8021274:	07db      	lsls	r3, r3, #31
 8021276:	d40b      	bmi.n	8021290 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021278:	4620      	mov	r0, r4
 802127a:	f009 ff70 	bl	802b15e <__cxa_guard_acquire>
 802127e:	b138      	cbz	r0, 8021290 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021280:	4620      	mov	r0, r4
 8021282:	f009 ff78 	bl	802b176 <__cxa_guard_release>
 8021286:	4a06      	ldr	r2, [pc, #24]	; (80212a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021288:	4909      	ldr	r1, [pc, #36]	; (80212b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 802128a:	480a      	ldr	r0, [pc, #40]	; (80212b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 802128c:	f009 ff60 	bl	802b150 <__aeabi_atexit>
 8021290:	4b05      	ldr	r3, [pc, #20]	; (80212a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021292:	62ab      	str	r3, [r5, #40]	; 0x28
 8021294:	4b07      	ldr	r3, [pc, #28]	; (80212b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8021296:	62eb      	str	r3, [r5, #44]	; 0x2c
 8021298:	bd38      	pop	{r3, r4, r5, pc}
 802129a:	bf00      	nop
 802129c:	2001e294 	.word	0x2001e294
 80212a0:	20000000 	.word	0x20000000
 80212a4:	0801f02d 	.word	0x0801f02d
 80212a8:	200000c8 	.word	0x200000c8
 80212ac:	2001e298 	.word	0x2001e298
 80212b0:	0801f02b 	.word	0x0801f02b
 80212b4:	200000cc 	.word	0x200000cc

080212b8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80212b8:	b510      	push	{r4, lr}
 80212ba:	4604      	mov	r4, r0
 80212bc:	f7ff ff88 	bl	80211d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80212c0:	4620      	mov	r0, r4
 80212c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80212c6:	f7ff bfbd 	b.w	8021244 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080212cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80212cc:	b538      	push	{r3, r4, r5, lr}
 80212ce:	4c15      	ldr	r4, [pc, #84]	; (8021324 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80212d0:	7823      	ldrb	r3, [r4, #0]
 80212d2:	f3bf 8f5b 	dmb	ish
 80212d6:	07da      	lsls	r2, r3, #31
 80212d8:	4605      	mov	r5, r0
 80212da:	d40b      	bmi.n	80212f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80212dc:	4620      	mov	r0, r4
 80212de:	f009 ff3e 	bl	802b15e <__cxa_guard_acquire>
 80212e2:	b138      	cbz	r0, 80212f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80212e4:	4620      	mov	r0, r4
 80212e6:	f009 ff46 	bl	802b176 <__cxa_guard_release>
 80212ea:	4a0f      	ldr	r2, [pc, #60]	; (8021328 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80212ec:	490f      	ldr	r1, [pc, #60]	; (802132c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80212ee:	4810      	ldr	r0, [pc, #64]	; (8021330 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80212f0:	f009 ff2e 	bl	802b150 <__aeabi_atexit>
 80212f4:	4c0f      	ldr	r4, [pc, #60]	; (8021334 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80212f6:	7823      	ldrb	r3, [r4, #0]
 80212f8:	f3bf 8f5b 	dmb	ish
 80212fc:	07db      	lsls	r3, r3, #31
 80212fe:	d40b      	bmi.n	8021318 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8021300:	4620      	mov	r0, r4
 8021302:	f009 ff2c 	bl	802b15e <__cxa_guard_acquire>
 8021306:	b138      	cbz	r0, 8021318 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8021308:	4620      	mov	r0, r4
 802130a:	f009 ff34 	bl	802b176 <__cxa_guard_release>
 802130e:	4a06      	ldr	r2, [pc, #24]	; (8021328 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8021310:	4909      	ldr	r1, [pc, #36]	; (8021338 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8021312:	480a      	ldr	r0, [pc, #40]	; (802133c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8021314:	f009 ff1c 	bl	802b150 <__aeabi_atexit>
 8021318:	4b05      	ldr	r3, [pc, #20]	; (8021330 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802131a:	652b      	str	r3, [r5, #80]	; 0x50
 802131c:	4b07      	ldr	r3, [pc, #28]	; (802133c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802131e:	656b      	str	r3, [r5, #84]	; 0x54
 8021320:	bd38      	pop	{r3, r4, r5, pc}
 8021322:	bf00      	nop
 8021324:	2001e2cc 	.word	0x2001e2cc
 8021328:	20000000 	.word	0x20000000
 802132c:	0801f019 	.word	0x0801f019
 8021330:	20000100 	.word	0x20000100
 8021334:	2001e2d0 	.word	0x2001e2d0
 8021338:	0801f017 	.word	0x0801f017
 802133c:	20000104 	.word	0x20000104

08021340 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8021340:	b538      	push	{r3, r4, r5, lr}
 8021342:	4c15      	ldr	r4, [pc, #84]	; (8021398 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8021344:	7823      	ldrb	r3, [r4, #0]
 8021346:	f3bf 8f5b 	dmb	ish
 802134a:	07da      	lsls	r2, r3, #31
 802134c:	4605      	mov	r5, r0
 802134e:	d40b      	bmi.n	8021368 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8021350:	4620      	mov	r0, r4
 8021352:	f009 ff04 	bl	802b15e <__cxa_guard_acquire>
 8021356:	b138      	cbz	r0, 8021368 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8021358:	4620      	mov	r0, r4
 802135a:	f009 ff0c 	bl	802b176 <__cxa_guard_release>
 802135e:	4a0f      	ldr	r2, [pc, #60]	; (802139c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8021360:	490f      	ldr	r1, [pc, #60]	; (80213a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8021362:	4810      	ldr	r0, [pc, #64]	; (80213a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8021364:	f009 fef4 	bl	802b150 <__aeabi_atexit>
 8021368:	4c0f      	ldr	r4, [pc, #60]	; (80213a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 802136a:	7823      	ldrb	r3, [r4, #0]
 802136c:	f3bf 8f5b 	dmb	ish
 8021370:	07db      	lsls	r3, r3, #31
 8021372:	d40b      	bmi.n	802138c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8021374:	4620      	mov	r0, r4
 8021376:	f009 fef2 	bl	802b15e <__cxa_guard_acquire>
 802137a:	b138      	cbz	r0, 802138c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 802137c:	4620      	mov	r0, r4
 802137e:	f009 fefa 	bl	802b176 <__cxa_guard_release>
 8021382:	4a06      	ldr	r2, [pc, #24]	; (802139c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8021384:	4909      	ldr	r1, [pc, #36]	; (80213ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8021386:	480a      	ldr	r0, [pc, #40]	; (80213b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8021388:	f009 fee2 	bl	802b150 <__aeabi_atexit>
 802138c:	4b05      	ldr	r3, [pc, #20]	; (80213a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802138e:	64ab      	str	r3, [r5, #72]	; 0x48
 8021390:	4b07      	ldr	r3, [pc, #28]	; (80213b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8021392:	64eb      	str	r3, [r5, #76]	; 0x4c
 8021394:	bd38      	pop	{r3, r4, r5, pc}
 8021396:	bf00      	nop
 8021398:	2001e2d4 	.word	0x2001e2d4
 802139c:	20000000 	.word	0x20000000
 80213a0:	0801f01d 	.word	0x0801f01d
 80213a4:	20000108 	.word	0x20000108
 80213a8:	2001e2d8 	.word	0x2001e2d8
 80213ac:	0801f01b 	.word	0x0801f01b
 80213b0:	2000010c 	.word	0x2000010c

080213b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80213b4:	b538      	push	{r3, r4, r5, lr}
 80213b6:	4c15      	ldr	r4, [pc, #84]	; (802140c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80213b8:	7823      	ldrb	r3, [r4, #0]
 80213ba:	f3bf 8f5b 	dmb	ish
 80213be:	07da      	lsls	r2, r3, #31
 80213c0:	4605      	mov	r5, r0
 80213c2:	d40b      	bmi.n	80213dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80213c4:	4620      	mov	r0, r4
 80213c6:	f009 feca 	bl	802b15e <__cxa_guard_acquire>
 80213ca:	b138      	cbz	r0, 80213dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80213cc:	4620      	mov	r0, r4
 80213ce:	f009 fed2 	bl	802b176 <__cxa_guard_release>
 80213d2:	4a0f      	ldr	r2, [pc, #60]	; (8021410 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80213d4:	490f      	ldr	r1, [pc, #60]	; (8021414 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80213d6:	4810      	ldr	r0, [pc, #64]	; (8021418 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80213d8:	f009 feba 	bl	802b150 <__aeabi_atexit>
 80213dc:	4c0f      	ldr	r4, [pc, #60]	; (802141c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80213de:	7823      	ldrb	r3, [r4, #0]
 80213e0:	f3bf 8f5b 	dmb	ish
 80213e4:	07db      	lsls	r3, r3, #31
 80213e6:	d40b      	bmi.n	8021400 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80213e8:	4620      	mov	r0, r4
 80213ea:	f009 feb8 	bl	802b15e <__cxa_guard_acquire>
 80213ee:	b138      	cbz	r0, 8021400 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80213f0:	4620      	mov	r0, r4
 80213f2:	f009 fec0 	bl	802b176 <__cxa_guard_release>
 80213f6:	4a06      	ldr	r2, [pc, #24]	; (8021410 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80213f8:	4909      	ldr	r1, [pc, #36]	; (8021420 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80213fa:	480a      	ldr	r0, [pc, #40]	; (8021424 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80213fc:	f009 fea8 	bl	802b150 <__aeabi_atexit>
 8021400:	4b05      	ldr	r3, [pc, #20]	; (8021418 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8021402:	642b      	str	r3, [r5, #64]	; 0x40
 8021404:	4b07      	ldr	r3, [pc, #28]	; (8021424 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8021406:	646b      	str	r3, [r5, #68]	; 0x44
 8021408:	bd38      	pop	{r3, r4, r5, pc}
 802140a:	bf00      	nop
 802140c:	2001e29c 	.word	0x2001e29c
 8021410:	20000000 	.word	0x20000000
 8021414:	0801f021 	.word	0x0801f021
 8021418:	200000d0 	.word	0x200000d0
 802141c:	2001e2a0 	.word	0x2001e2a0
 8021420:	0801f01f 	.word	0x0801f01f
 8021424:	200000d4 	.word	0x200000d4

08021428 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8021428:	b538      	push	{r3, r4, r5, lr}
 802142a:	4c15      	ldr	r4, [pc, #84]	; (8021480 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 802142c:	7823      	ldrb	r3, [r4, #0]
 802142e:	f3bf 8f5b 	dmb	ish
 8021432:	07da      	lsls	r2, r3, #31
 8021434:	4605      	mov	r5, r0
 8021436:	d40b      	bmi.n	8021450 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8021438:	4620      	mov	r0, r4
 802143a:	f009 fe90 	bl	802b15e <__cxa_guard_acquire>
 802143e:	b138      	cbz	r0, 8021450 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8021440:	4620      	mov	r0, r4
 8021442:	f009 fe98 	bl	802b176 <__cxa_guard_release>
 8021446:	4a0f      	ldr	r2, [pc, #60]	; (8021484 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8021448:	490f      	ldr	r1, [pc, #60]	; (8021488 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 802144a:	4810      	ldr	r0, [pc, #64]	; (802148c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 802144c:	f009 fe80 	bl	802b150 <__aeabi_atexit>
 8021450:	4c0f      	ldr	r4, [pc, #60]	; (8021490 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8021452:	7823      	ldrb	r3, [r4, #0]
 8021454:	f3bf 8f5b 	dmb	ish
 8021458:	07db      	lsls	r3, r3, #31
 802145a:	d40b      	bmi.n	8021474 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 802145c:	4620      	mov	r0, r4
 802145e:	f009 fe7e 	bl	802b15e <__cxa_guard_acquire>
 8021462:	b138      	cbz	r0, 8021474 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8021464:	4620      	mov	r0, r4
 8021466:	f009 fe86 	bl	802b176 <__cxa_guard_release>
 802146a:	4a06      	ldr	r2, [pc, #24]	; (8021484 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 802146c:	4909      	ldr	r1, [pc, #36]	; (8021494 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 802146e:	480a      	ldr	r0, [pc, #40]	; (8021498 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8021470:	f009 fe6e 	bl	802b150 <__aeabi_atexit>
 8021474:	4b05      	ldr	r3, [pc, #20]	; (802148c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8021476:	63ab      	str	r3, [r5, #56]	; 0x38
 8021478:	4b07      	ldr	r3, [pc, #28]	; (8021498 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 802147a:	63eb      	str	r3, [r5, #60]	; 0x3c
 802147c:	bd38      	pop	{r3, r4, r5, pc}
 802147e:	bf00      	nop
 8021480:	2001e2bc 	.word	0x2001e2bc
 8021484:	20000000 	.word	0x20000000
 8021488:	0801f025 	.word	0x0801f025
 802148c:	200000f0 	.word	0x200000f0
 8021490:	2001e2c0 	.word	0x2001e2c0
 8021494:	0801f023 	.word	0x0801f023
 8021498:	200000f4 	.word	0x200000f4

0802149c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 802149c:	b510      	push	{r4, lr}
 802149e:	4604      	mov	r4, r0
 80214a0:	f7ff ff14 	bl	80212cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80214a4:	4620      	mov	r0, r4
 80214a6:	f7ff ff85 	bl	80213b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80214aa:	4620      	mov	r0, r4
 80214ac:	f7ff ff48 	bl	8021340 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80214b0:	4620      	mov	r0, r4
 80214b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80214b6:	f7ff bfb7 	b.w	8021428 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080214bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80214bc:	b538      	push	{r3, r4, r5, lr}
 80214be:	4c15      	ldr	r4, [pc, #84]	; (8021514 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80214c0:	7823      	ldrb	r3, [r4, #0]
 80214c2:	f3bf 8f5b 	dmb	ish
 80214c6:	07da      	lsls	r2, r3, #31
 80214c8:	4605      	mov	r5, r0
 80214ca:	d40b      	bmi.n	80214e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80214cc:	4620      	mov	r0, r4
 80214ce:	f009 fe46 	bl	802b15e <__cxa_guard_acquire>
 80214d2:	b138      	cbz	r0, 80214e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80214d4:	4620      	mov	r0, r4
 80214d6:	f009 fe4e 	bl	802b176 <__cxa_guard_release>
 80214da:	4a0f      	ldr	r2, [pc, #60]	; (8021518 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80214dc:	490f      	ldr	r1, [pc, #60]	; (802151c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80214de:	4810      	ldr	r0, [pc, #64]	; (8021520 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80214e0:	f009 fe36 	bl	802b150 <__aeabi_atexit>
 80214e4:	4c0f      	ldr	r4, [pc, #60]	; (8021524 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80214e6:	7823      	ldrb	r3, [r4, #0]
 80214e8:	f3bf 8f5b 	dmb	ish
 80214ec:	07db      	lsls	r3, r3, #31
 80214ee:	d40b      	bmi.n	8021508 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80214f0:	4620      	mov	r0, r4
 80214f2:	f009 fe34 	bl	802b15e <__cxa_guard_acquire>
 80214f6:	b138      	cbz	r0, 8021508 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80214f8:	4620      	mov	r0, r4
 80214fa:	f009 fe3c 	bl	802b176 <__cxa_guard_release>
 80214fe:	4a06      	ldr	r2, [pc, #24]	; (8021518 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8021500:	4909      	ldr	r1, [pc, #36]	; (8021528 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8021502:	480a      	ldr	r0, [pc, #40]	; (802152c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8021504:	f009 fe24 	bl	802b150 <__aeabi_atexit>
 8021508:	4b05      	ldr	r3, [pc, #20]	; (8021520 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802150a:	662b      	str	r3, [r5, #96]	; 0x60
 802150c:	4b07      	ldr	r3, [pc, #28]	; (802152c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802150e:	666b      	str	r3, [r5, #100]	; 0x64
 8021510:	bd38      	pop	{r3, r4, r5, pc}
 8021512:	bf00      	nop
 8021514:	2001e2a4 	.word	0x2001e2a4
 8021518:	20000000 	.word	0x20000000
 802151c:	0801f011 	.word	0x0801f011
 8021520:	200000d8 	.word	0x200000d8
 8021524:	2001e2a8 	.word	0x2001e2a8
 8021528:	0801f00f 	.word	0x0801f00f
 802152c:	200000dc 	.word	0x200000dc

08021530 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8021530:	b538      	push	{r3, r4, r5, lr}
 8021532:	4c15      	ldr	r4, [pc, #84]	; (8021588 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8021534:	7823      	ldrb	r3, [r4, #0]
 8021536:	f3bf 8f5b 	dmb	ish
 802153a:	07da      	lsls	r2, r3, #31
 802153c:	4605      	mov	r5, r0
 802153e:	d40b      	bmi.n	8021558 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8021540:	4620      	mov	r0, r4
 8021542:	f009 fe0c 	bl	802b15e <__cxa_guard_acquire>
 8021546:	b138      	cbz	r0, 8021558 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8021548:	4620      	mov	r0, r4
 802154a:	f009 fe14 	bl	802b176 <__cxa_guard_release>
 802154e:	4a0f      	ldr	r2, [pc, #60]	; (802158c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8021550:	490f      	ldr	r1, [pc, #60]	; (8021590 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8021552:	4810      	ldr	r0, [pc, #64]	; (8021594 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8021554:	f009 fdfc 	bl	802b150 <__aeabi_atexit>
 8021558:	4c0f      	ldr	r4, [pc, #60]	; (8021598 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 802155a:	7823      	ldrb	r3, [r4, #0]
 802155c:	f3bf 8f5b 	dmb	ish
 8021560:	07db      	lsls	r3, r3, #31
 8021562:	d40b      	bmi.n	802157c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8021564:	4620      	mov	r0, r4
 8021566:	f009 fdfa 	bl	802b15e <__cxa_guard_acquire>
 802156a:	b138      	cbz	r0, 802157c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 802156c:	4620      	mov	r0, r4
 802156e:	f009 fe02 	bl	802b176 <__cxa_guard_release>
 8021572:	4a06      	ldr	r2, [pc, #24]	; (802158c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8021574:	4909      	ldr	r1, [pc, #36]	; (802159c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8021576:	480a      	ldr	r0, [pc, #40]	; (80215a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8021578:	f009 fdea 	bl	802b150 <__aeabi_atexit>
 802157c:	4b05      	ldr	r3, [pc, #20]	; (8021594 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802157e:	65ab      	str	r3, [r5, #88]	; 0x58
 8021580:	4b07      	ldr	r3, [pc, #28]	; (80215a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8021582:	65eb      	str	r3, [r5, #92]	; 0x5c
 8021584:	bd38      	pop	{r3, r4, r5, pc}
 8021586:	bf00      	nop
 8021588:	2001e27c 	.word	0x2001e27c
 802158c:	20000000 	.word	0x20000000
 8021590:	0801f015 	.word	0x0801f015
 8021594:	200000b0 	.word	0x200000b0
 8021598:	2001e280 	.word	0x2001e280
 802159c:	0801f013 	.word	0x0801f013
 80215a0:	200000b4 	.word	0x200000b4

080215a4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80215a4:	b510      	push	{r4, lr}
 80215a6:	4604      	mov	r4, r0
 80215a8:	f7ff ff88 	bl	80214bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80215ac:	4620      	mov	r0, r4
 80215ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80215b2:	f7ff bfbd 	b.w	8021530 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080215b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80215b8:	b538      	push	{r3, r4, r5, lr}
 80215ba:	4c15      	ldr	r4, [pc, #84]	; (8021610 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80215bc:	7823      	ldrb	r3, [r4, #0]
 80215be:	f3bf 8f5b 	dmb	ish
 80215c2:	07da      	lsls	r2, r3, #31
 80215c4:	4605      	mov	r5, r0
 80215c6:	d40b      	bmi.n	80215e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80215c8:	4620      	mov	r0, r4
 80215ca:	f009 fdc8 	bl	802b15e <__cxa_guard_acquire>
 80215ce:	b138      	cbz	r0, 80215e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80215d0:	4620      	mov	r0, r4
 80215d2:	f009 fdd0 	bl	802b176 <__cxa_guard_release>
 80215d6:	4a0f      	ldr	r2, [pc, #60]	; (8021614 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80215d8:	490f      	ldr	r1, [pc, #60]	; (8021618 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80215da:	4810      	ldr	r0, [pc, #64]	; (802161c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80215dc:	f009 fdb8 	bl	802b150 <__aeabi_atexit>
 80215e0:	4c0f      	ldr	r4, [pc, #60]	; (8021620 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80215e2:	7823      	ldrb	r3, [r4, #0]
 80215e4:	f3bf 8f5b 	dmb	ish
 80215e8:	07db      	lsls	r3, r3, #31
 80215ea:	d40b      	bmi.n	8021604 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80215ec:	4620      	mov	r0, r4
 80215ee:	f009 fdb6 	bl	802b15e <__cxa_guard_acquire>
 80215f2:	b138      	cbz	r0, 8021604 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80215f4:	4620      	mov	r0, r4
 80215f6:	f009 fdbe 	bl	802b176 <__cxa_guard_release>
 80215fa:	4a06      	ldr	r2, [pc, #24]	; (8021614 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80215fc:	4909      	ldr	r1, [pc, #36]	; (8021624 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80215fe:	480a      	ldr	r0, [pc, #40]	; (8021628 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8021600:	f009 fda6 	bl	802b150 <__aeabi_atexit>
 8021604:	4b05      	ldr	r3, [pc, #20]	; (802161c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8021606:	672b      	str	r3, [r5, #112]	; 0x70
 8021608:	4b07      	ldr	r3, [pc, #28]	; (8021628 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802160a:	676b      	str	r3, [r5, #116]	; 0x74
 802160c:	bd38      	pop	{r3, r4, r5, pc}
 802160e:	bf00      	nop
 8021610:	2001e274 	.word	0x2001e274
 8021614:	20000000 	.word	0x20000000
 8021618:	0801f009 	.word	0x0801f009
 802161c:	200000a8 	.word	0x200000a8
 8021620:	2001e278 	.word	0x2001e278
 8021624:	0801f007 	.word	0x0801f007
 8021628:	200000ac 	.word	0x200000ac

0802162c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 802162c:	b538      	push	{r3, r4, r5, lr}
 802162e:	4c15      	ldr	r4, [pc, #84]	; (8021684 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8021630:	7823      	ldrb	r3, [r4, #0]
 8021632:	f3bf 8f5b 	dmb	ish
 8021636:	07da      	lsls	r2, r3, #31
 8021638:	4605      	mov	r5, r0
 802163a:	d40b      	bmi.n	8021654 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 802163c:	4620      	mov	r0, r4
 802163e:	f009 fd8e 	bl	802b15e <__cxa_guard_acquire>
 8021642:	b138      	cbz	r0, 8021654 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8021644:	4620      	mov	r0, r4
 8021646:	f009 fd96 	bl	802b176 <__cxa_guard_release>
 802164a:	4a0f      	ldr	r2, [pc, #60]	; (8021688 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 802164c:	490f      	ldr	r1, [pc, #60]	; (802168c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 802164e:	4810      	ldr	r0, [pc, #64]	; (8021690 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8021650:	f009 fd7e 	bl	802b150 <__aeabi_atexit>
 8021654:	4c0f      	ldr	r4, [pc, #60]	; (8021694 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8021656:	7823      	ldrb	r3, [r4, #0]
 8021658:	f3bf 8f5b 	dmb	ish
 802165c:	07db      	lsls	r3, r3, #31
 802165e:	d40b      	bmi.n	8021678 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8021660:	4620      	mov	r0, r4
 8021662:	f009 fd7c 	bl	802b15e <__cxa_guard_acquire>
 8021666:	b138      	cbz	r0, 8021678 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8021668:	4620      	mov	r0, r4
 802166a:	f009 fd84 	bl	802b176 <__cxa_guard_release>
 802166e:	4a06      	ldr	r2, [pc, #24]	; (8021688 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8021670:	4909      	ldr	r1, [pc, #36]	; (8021698 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8021672:	480a      	ldr	r0, [pc, #40]	; (802169c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8021674:	f009 fd6c 	bl	802b150 <__aeabi_atexit>
 8021678:	4b05      	ldr	r3, [pc, #20]	; (8021690 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 802167a:	66ab      	str	r3, [r5, #104]	; 0x68
 802167c:	4b07      	ldr	r3, [pc, #28]	; (802169c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802167e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8021680:	bd38      	pop	{r3, r4, r5, pc}
 8021682:	bf00      	nop
 8021684:	2001e26c 	.word	0x2001e26c
 8021688:	20000000 	.word	0x20000000
 802168c:	0801f00d 	.word	0x0801f00d
 8021690:	200000a0 	.word	0x200000a0
 8021694:	2001e270 	.word	0x2001e270
 8021698:	0801f00b 	.word	0x0801f00b
 802169c:	200000a4 	.word	0x200000a4

080216a0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80216a0:	b510      	push	{r4, lr}
 80216a2:	4604      	mov	r4, r0
 80216a4:	f7ff ff88 	bl	80215b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80216a8:	4620      	mov	r0, r4
 80216aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80216ae:	f7ff bfbd 	b.w	802162c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080216b2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80216b2:	b510      	push	{r4, lr}
 80216b4:	4604      	mov	r4, r0
 80216b6:	f7ff fff3 	bl	80216a0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80216ba:	4620      	mov	r0, r4
 80216bc:	f7ff ff72 	bl	80215a4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80216c0:	4620      	mov	r0, r4
 80216c2:	f7ff fdf9 	bl	80212b8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80216c6:	4620      	mov	r0, r4
 80216c8:	f7ff fcfa 	bl	80210c0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80216cc:	4620      	mov	r0, r4
 80216ce:	f7ff fd75 	bl	80211bc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80216d2:	4620      	mov	r0, r4
 80216d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80216d8:	f7ff bee0 	b.w	802149c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080216dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80216dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80216e0:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 80216e4:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80216e8:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80216ec:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80216f0:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 80216f4:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80216f8:	8808      	ldrh	r0, [r1, #0]
 80216fa:	fb0e 4708 	mla	r7, lr, r8, r4
 80216fe:	f1be 0f00 	cmp.w	lr, #0
 8021702:	eb02 0a07 	add.w	sl, r2, r7
 8021706:	db37      	blt.n	8021778 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8021708:	45f3      	cmp	fp, lr
 802170a:	dd35      	ble.n	8021778 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 802170c:	2c00      	cmp	r4, #0
 802170e:	db31      	blt.n	8021774 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8021710:	45a0      	cmp	r8, r4
 8021712:	dd2f      	ble.n	8021774 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8021714:	5dd2      	ldrb	r2, [r2, r7]
 8021716:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 802171a:	1c62      	adds	r2, r4, #1
 802171c:	d42f      	bmi.n	802177e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 802171e:	4590      	cmp	r8, r2
 8021720:	dd2d      	ble.n	802177e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8021722:	b366      	cbz	r6, 802177e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8021724:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021728:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 802172c:	f11e 0e01 	adds.w	lr, lr, #1
 8021730:	d429      	bmi.n	8021786 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8021732:	45f3      	cmp	fp, lr
 8021734:	dd27      	ble.n	8021786 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8021736:	f1bc 0f00 	cmp.w	ip, #0
 802173a:	f000 80a1 	beq.w	8021880 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 802173e:	2c00      	cmp	r4, #0
 8021740:	db1f      	blt.n	8021782 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8021742:	45a0      	cmp	r8, r4
 8021744:	dd1d      	ble.n	8021782 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8021746:	f81a 2008 	ldrb.w	r2, [sl, r8]
 802174a:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 802174e:	3401      	adds	r4, #1
 8021750:	d41c      	bmi.n	802178c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8021752:	45a0      	cmp	r8, r4
 8021754:	dd1a      	ble.n	802178c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8021756:	b1de      	cbz	r6, 8021790 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8021758:	44d0      	add	r8, sl
 802175a:	f898 2001 	ldrb.w	r2, [r8, #1]
 802175e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8021762:	2e0f      	cmp	r6, #15
 8021764:	d915      	bls.n	8021792 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8021766:	4b49      	ldr	r3, [pc, #292]	; (802188c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8021768:	4a49      	ldr	r2, [pc, #292]	; (8021890 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 802176a:	484a      	ldr	r0, [pc, #296]	; (8021894 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 802176c:	f240 11db 	movw	r1, #475	; 0x1db
 8021770:	f00a fc40 	bl	802bff4 <__assert_func>
 8021774:	4681      	mov	r9, r0
 8021776:	e7d0      	b.n	802171a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8021778:	4607      	mov	r7, r0
 802177a:	4681      	mov	r9, r0
 802177c:	e7d6      	b.n	802172c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 802177e:	4607      	mov	r7, r0
 8021780:	e7d4      	b.n	802172c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8021782:	4686      	mov	lr, r0
 8021784:	e7e3      	b.n	802174e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8021786:	4603      	mov	r3, r0
 8021788:	4686      	mov	lr, r0
 802178a:	e7ea      	b.n	8021762 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 802178c:	4603      	mov	r3, r0
 802178e:	e7e8      	b.n	8021762 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8021790:	4603      	mov	r3, r0
 8021792:	f1bc 0f0f 	cmp.w	ip, #15
 8021796:	d8e6      	bhi.n	8021766 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8021798:	ea4f 4409 	mov.w	r4, r9, lsl #16
 802179c:	fb16 f80c 	smulbb	r8, r6, ip
 80217a0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80217a4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80217a8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80217ac:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80217b0:	ea44 0909 	orr.w	r9, r4, r9
 80217b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80217b8:	f1cc 0410 	rsb	r4, ip, #16
 80217bc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80217c0:	1ba4      	subs	r4, r4, r6
 80217c2:	041a      	lsls	r2, r3, #16
 80217c4:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 80217c8:	ea4a 0707 	orr.w	r7, sl, r7
 80217cc:	4377      	muls	r7, r6
 80217ce:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80217d2:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80217d6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80217da:	fb04 7409 	mla	r4, r4, r9, r7
 80217de:	4313      	orrs	r3, r2
 80217e0:	ea4f 420e 	mov.w	r2, lr, lsl #16
 80217e4:	fb08 4303 	mla	r3, r8, r3, r4
 80217e8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80217ec:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 80217f0:	4322      	orrs	r2, r4
 80217f2:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80217f6:	fb0c 3202 	mla	r2, ip, r2, r3
 80217fa:	0d53      	lsrs	r3, r2, #21
 80217fc:	0952      	lsrs	r2, r2, #5
 80217fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021802:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021806:	431a      	orrs	r2, r3
 8021808:	b293      	uxth	r3, r2
 802180a:	b2af      	uxth	r7, r5
 802180c:	1202      	asrs	r2, r0, #8
 802180e:	43ed      	mvns	r5, r5
 8021810:	b2ed      	uxtb	r5, r5
 8021812:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8021816:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802181a:	fb12 f205 	smulbb	r2, r2, r5
 802181e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021822:	fb0c 2c07 	mla	ip, ip, r7, r2
 8021826:	00dc      	lsls	r4, r3, #3
 8021828:	10da      	asrs	r2, r3, #3
 802182a:	10c6      	asrs	r6, r0, #3
 802182c:	00c3      	lsls	r3, r0, #3
 802182e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021832:	b2db      	uxtb	r3, r3
 8021834:	fb16 f605 	smulbb	r6, r6, r5
 8021838:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802183c:	b2e4      	uxtb	r4, r4
 802183e:	fb13 f305 	smulbb	r3, r3, r5
 8021842:	fa1f fc8c 	uxth.w	ip, ip
 8021846:	fb02 6207 	mla	r2, r2, r7, r6
 802184a:	fb04 3307 	mla	r3, r4, r7, r3
 802184e:	b296      	uxth	r6, r2
 8021850:	b29a      	uxth	r2, r3
 8021852:	f10c 0301 	add.w	r3, ip, #1
 8021856:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802185a:	1c53      	adds	r3, r2, #1
 802185c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021860:	1c72      	adds	r2, r6, #1
 8021862:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8021866:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 802186a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802186e:	0952      	lsrs	r2, r2, #5
 8021870:	ea43 030c 	orr.w	r3, r3, ip
 8021874:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021878:	4313      	orrs	r3, r2
 802187a:	800b      	strh	r3, [r1, #0]
 802187c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021880:	2e0f      	cmp	r6, #15
 8021882:	f63f af70 	bhi.w	8021766 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8021886:	4603      	mov	r3, r0
 8021888:	4686      	mov	lr, r0
 802188a:	e785      	b.n	8021798 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 802188c:	08035c27 	.word	0x08035c27
 8021890:	080361ff 	.word	0x080361ff
 8021894:	08035bf4 	.word	0x08035bf4

08021898 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802189c:	ed2d 8b08 	vpush	{d8-d11}
 80218a0:	b099      	sub	sp, #100	; 0x64
 80218a2:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 80218a6:	9215      	str	r2, [sp, #84]	; 0x54
 80218a8:	9309      	str	r3, [sp, #36]	; 0x24
 80218aa:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80218ac:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 80218b0:	930d      	str	r3, [sp, #52]	; 0x34
 80218b2:	910c      	str	r1, [sp, #48]	; 0x30
 80218b4:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80218b8:	9016      	str	r0, [sp, #88]	; 0x58
 80218ba:	6850      	ldr	r0, [r2, #4]
 80218bc:	6812      	ldr	r2, [r2, #0]
 80218be:	fb00 1303 	mla	r3, r0, r3, r1
 80218c2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80218c6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80218c8:	681b      	ldr	r3, [r3, #0]
 80218ca:	930b      	str	r3, [sp, #44]	; 0x2c
 80218cc:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80218ce:	685e      	ldr	r6, [r3, #4]
 80218d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80218d2:	43db      	mvns	r3, r3
 80218d4:	b2db      	uxtb	r3, r3
 80218d6:	eeb0 aa40 	vmov.f32	s20, s0
 80218da:	eef0 9a60 	vmov.f32	s19, s1
 80218de:	eeb0 9a41 	vmov.f32	s18, s2
 80218e2:	eeb0 8a62 	vmov.f32	s16, s5
 80218e6:	eef0 8a43 	vmov.f32	s17, s6
 80218ea:	eef0 ba44 	vmov.f32	s23, s8
 80218ee:	eeb0 ba64 	vmov.f32	s22, s9
 80218f2:	eef0 aa45 	vmov.f32	s21, s10
 80218f6:	3604      	adds	r6, #4
 80218f8:	930a      	str	r3, [sp, #40]	; 0x28
 80218fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80218fc:	2b00      	cmp	r3, #0
 80218fe:	dc03      	bgt.n	8021908 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021900:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8021902:	2b00      	cmp	r3, #0
 8021904:	f340 8225 	ble.w	8021d52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8021908:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 802190a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802190e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021912:	1e48      	subs	r0, r1, #1
 8021914:	1e57      	subs	r7, r2, #1
 8021916:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021918:	2b00      	cmp	r3, #0
 802191a:	f340 80e3 	ble.w	8021ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 802191e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8021922:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021926:	d406      	bmi.n	8021936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8021928:	4584      	cmp	ip, r0
 802192a:	da04      	bge.n	8021936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802192c:	2b00      	cmp	r3, #0
 802192e:	db02      	blt.n	8021936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8021930:	42bb      	cmp	r3, r7
 8021932:	f2c0 80d8 	blt.w	8021ae6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8021936:	f11c 0c01 	adds.w	ip, ip, #1
 802193a:	f100 80c9 	bmi.w	8021ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802193e:	4561      	cmp	r1, ip
 8021940:	f2c0 80c6 	blt.w	8021ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021944:	3301      	adds	r3, #1
 8021946:	f100 80c3 	bmi.w	8021ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802194a:	429a      	cmp	r2, r3
 802194c:	f2c0 80c0 	blt.w	8021ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021950:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021954:	4647      	mov	r7, r8
 8021956:	f1bb 0f00 	cmp.w	fp, #0
 802195a:	f340 80e3 	ble.w	8021b24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802195e:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8021960:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8021962:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021966:	689b      	ldr	r3, [r3, #8]
 8021968:	ea5f 422a 	movs.w	r2, sl, asr #16
 802196c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021970:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8021974:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021978:	f100 8121 	bmi.w	8021bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 802197c:	f103 39ff 	add.w	r9, r3, #4294967295
 8021980:	454a      	cmp	r2, r9
 8021982:	f280 811c 	bge.w	8021bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8021986:	f1bc 0f00 	cmp.w	ip, #0
 802198a:	f2c0 8118 	blt.w	8021bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 802198e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8021992:	45cc      	cmp	ip, r9
 8021994:	f280 8113 	bge.w	8021bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8021998:	b21b      	sxth	r3, r3
 802199a:	fb0c 2203 	mla	r2, ip, r3, r2
 802199e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80219a0:	eb04 0902 	add.w	r9, r4, r2
 80219a4:	5ca2      	ldrb	r2, [r4, r2]
 80219a6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80219aa:	2800      	cmp	r0, #0
 80219ac:	f000 80fe 	beq.w	8021bac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80219b0:	f899 2001 	ldrb.w	r2, [r9, #1]
 80219b4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80219b8:	9211      	str	r2, [sp, #68]	; 0x44
 80219ba:	b151      	cbz	r1, 80219d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80219bc:	eb09 0203 	add.w	r2, r9, r3
 80219c0:	f819 3003 	ldrb.w	r3, [r9, r3]
 80219c4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80219c8:	930f      	str	r3, [sp, #60]	; 0x3c
 80219ca:	7853      	ldrb	r3, [r2, #1]
 80219cc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80219d0:	9312      	str	r3, [sp, #72]	; 0x48
 80219d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80219d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80219d6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80219da:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80219de:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80219e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80219e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80219e8:	041b      	lsls	r3, r3, #16
 80219ea:	fb10 f201 	smulbb	r2, r0, r1
 80219ee:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80219f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80219f6:	10d2      	asrs	r2, r2, #3
 80219f8:	4323      	orrs	r3, r4
 80219fa:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80219fe:	4353      	muls	r3, r2
 8021a00:	fb09 330c 	mla	r3, r9, ip, r3
 8021a04:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8021a08:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021a0c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021a10:	ea4c 0e0e 	orr.w	lr, ip, lr
 8021a14:	f1c1 0c10 	rsb	ip, r1, #16
 8021a18:	ebac 0c00 	sub.w	ip, ip, r0
 8021a1c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8021a20:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8021a24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021a26:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021a28:	0418      	lsls	r0, r3, #16
 8021a2a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021a2e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021a32:	4318      	orrs	r0, r3
 8021a34:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8021a38:	fb02 c200 	mla	r2, r2, r0, ip
 8021a3c:	0d53      	lsrs	r3, r2, #21
 8021a3e:	0952      	lsrs	r2, r2, #5
 8021a40:	8838      	ldrh	r0, [r7, #0]
 8021a42:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021a46:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021a4a:	431a      	orrs	r2, r3
 8021a4c:	b292      	uxth	r2, r2
 8021a4e:	1201      	asrs	r1, r0, #8
 8021a50:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8021a54:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8021a58:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021a5c:	fb11 f104 	smulbb	r1, r1, r4
 8021a60:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8021a64:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021a68:	00c0      	lsls	r0, r0, #3
 8021a6a:	fb0c 1c03 	mla	ip, ip, r3, r1
 8021a6e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8021a72:	10d1      	asrs	r1, r2, #3
 8021a74:	b2c0      	uxtb	r0, r0
 8021a76:	00d2      	lsls	r2, r2, #3
 8021a78:	b2d2      	uxtb	r2, r2
 8021a7a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021a7e:	fb1e fe04 	smulbb	lr, lr, r4
 8021a82:	fb10 f004 	smulbb	r0, r0, r4
 8021a86:	fa1f fc8c 	uxth.w	ip, ip
 8021a8a:	fb01 e103 	mla	r1, r1, r3, lr
 8021a8e:	fb02 0303 	mla	r3, r2, r3, r0
 8021a92:	b29a      	uxth	r2, r3
 8021a94:	f10c 0301 	add.w	r3, ip, #1
 8021a98:	b289      	uxth	r1, r1
 8021a9a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8021a9e:	1c53      	adds	r3, r2, #1
 8021aa0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021aa4:	1c4a      	adds	r2, r1, #1
 8021aa6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021aaa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8021aae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021ab2:	0949      	lsrs	r1, r1, #5
 8021ab4:	ea43 030c 	orr.w	r3, r3, ip
 8021ab8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021abc:	430b      	orrs	r3, r1
 8021abe:	803b      	strh	r3, [r7, #0]
 8021ac0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8021ac2:	449a      	add	sl, r3
 8021ac4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021ac6:	3702      	adds	r7, #2
 8021ac8:	441d      	add	r5, r3
 8021aca:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021ace:	e742      	b.n	8021956 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8021ad0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8021ad2:	449a      	add	sl, r3
 8021ad4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021ad6:	441d      	add	r5, r3
 8021ad8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021ada:	3b01      	subs	r3, #1
 8021adc:	9309      	str	r3, [sp, #36]	; 0x24
 8021ade:	f108 0802 	add.w	r8, r8, #2
 8021ae2:	e718      	b.n	8021916 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8021ae4:	d023      	beq.n	8021b2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8021ae6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021ae8:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8021aea:	3b01      	subs	r3, #1
 8021aec:	fb00 a003 	mla	r0, r0, r3, sl
 8021af0:	1400      	asrs	r0, r0, #16
 8021af2:	f53f af2d 	bmi.w	8021950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8021af6:	3901      	subs	r1, #1
 8021af8:	4288      	cmp	r0, r1
 8021afa:	f6bf af29 	bge.w	8021950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8021afe:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8021b00:	fb01 5303 	mla	r3, r1, r3, r5
 8021b04:	141b      	asrs	r3, r3, #16
 8021b06:	f53f af23 	bmi.w	8021950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8021b0a:	3a01      	subs	r2, #1
 8021b0c:	4293      	cmp	r3, r2
 8021b0e:	f6bf af1f 	bge.w	8021950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8021b12:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021b16:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8021b1a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8021b1e:	f1be 0f00 	cmp.w	lr, #0
 8021b22:	dc6c      	bgt.n	8021bfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8021b24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b26:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021b2a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8021b2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021b30:	2b00      	cmp	r3, #0
 8021b32:	f340 810e 	ble.w	8021d52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8021b36:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8021b3a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021b3e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8021b42:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021b44:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8021b48:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8021b4c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8021b50:	eef0 6a48 	vmov.f32	s13, s16
 8021b54:	ee69 7a27 	vmul.f32	s15, s18, s15
 8021b58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b5c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8021b60:	ee16 aa90 	vmov	sl, s13
 8021b64:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8021b68:	eef0 6a68 	vmov.f32	s13, s17
 8021b6c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8021b70:	ee18 2a10 	vmov	r2, s16
 8021b74:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8021b78:	fb92 f3f3 	sdiv	r3, r2, r3
 8021b7c:	ee18 2a90 	vmov	r2, s17
 8021b80:	932d      	str	r3, [sp, #180]	; 0xb4
 8021b82:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021b84:	fb92 f3f3 	sdiv	r3, r2, r3
 8021b88:	932e      	str	r3, [sp, #184]	; 0xb8
 8021b8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021b8c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8021b8e:	3b01      	subs	r3, #1
 8021b90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b94:	930c      	str	r3, [sp, #48]	; 0x30
 8021b96:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021b98:	bf08      	it	eq
 8021b9a:	4613      	moveq	r3, r2
 8021b9c:	ee16 5a90 	vmov	r5, s13
 8021ba0:	9309      	str	r3, [sp, #36]	; 0x24
 8021ba2:	eef0 8a67 	vmov.f32	s17, s15
 8021ba6:	eeb0 8a47 	vmov.f32	s16, s14
 8021baa:	e6a6      	b.n	80218fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8021bac:	2900      	cmp	r1, #0
 8021bae:	f43f af10 	beq.w	80219d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8021bb2:	f819 3003 	ldrb.w	r3, [r9, r3]
 8021bb6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021bba:	930f      	str	r3, [sp, #60]	; 0x3c
 8021bbc:	e709      	b.n	80219d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8021bbe:	f112 0901 	adds.w	r9, r2, #1
 8021bc2:	f53f af7d 	bmi.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8021bc6:	454b      	cmp	r3, r9
 8021bc8:	f6ff af7a 	blt.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8021bcc:	f11c 0901 	adds.w	r9, ip, #1
 8021bd0:	f53f af76 	bmi.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8021bd4:	45ce      	cmp	lr, r9
 8021bd6:	f6ff af73 	blt.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8021bda:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021bdc:	9202      	str	r2, [sp, #8]
 8021bde:	b21b      	sxth	r3, r3
 8021be0:	fa0f f28e 	sxth.w	r2, lr
 8021be4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8021be8:	e9cd c003 	strd	ip, r0, [sp, #12]
 8021bec:	9201      	str	r2, [sp, #4]
 8021bee:	9300      	str	r3, [sp, #0]
 8021bf0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021bf2:	9816      	ldr	r0, [sp, #88]	; 0x58
 8021bf4:	4633      	mov	r3, r6
 8021bf6:	4639      	mov	r1, r7
 8021bf8:	f7ff fd70 	bl	80216dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8021bfc:	e760      	b.n	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8021bfe:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8021c00:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021c02:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021c06:	ea4f 422a 	mov.w	r2, sl, asr #16
 8021c0a:	1429      	asrs	r1, r5, #16
 8021c0c:	fb03 2101 	mla	r1, r3, r1, r2
 8021c10:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021c12:	440a      	add	r2, r1
 8021c14:	5c61      	ldrb	r1, [r4, r1]
 8021c16:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8021c1a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021c1e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8021c22:	f1bc 0f00 	cmp.w	ip, #0
 8021c26:	f000 808c 	beq.w	8021d42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8021c2a:	7857      	ldrb	r7, [r2, #1]
 8021c2c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8021c30:	9413      	str	r4, [sp, #76]	; 0x4c
 8021c32:	b140      	cbz	r0, 8021c46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8021c34:	18d7      	adds	r7, r2, r3
 8021c36:	5cd3      	ldrb	r3, [r2, r3]
 8021c38:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021c3c:	9310      	str	r3, [sp, #64]	; 0x40
 8021c3e:	787b      	ldrb	r3, [r7, #1]
 8021c40:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021c44:	9314      	str	r3, [sp, #80]	; 0x50
 8021c46:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021c48:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021c4a:	fb1c f200 	smulbb	r2, ip, r0
 8021c4e:	041f      	lsls	r7, r3, #16
 8021c50:	10d2      	asrs	r2, r2, #3
 8021c52:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021c56:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8021c5a:	431f      	orrs	r7, r3
 8021c5c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8021c60:	9317      	str	r3, [sp, #92]	; 0x5c
 8021c62:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021c64:	041b      	lsls	r3, r3, #16
 8021c66:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8021c6a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021c6e:	ea43 030b 	orr.w	r3, r3, fp
 8021c72:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021c74:	4353      	muls	r3, r2
 8021c76:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021c7a:	fb04 3707 	mla	r7, r4, r7, r3
 8021c7e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021c82:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8021c86:	ea43 0b01 	orr.w	fp, r3, r1
 8021c8a:	f1c0 0110 	rsb	r1, r0, #16
 8021c8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021c90:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021c92:	eba1 0c0c 	sub.w	ip, r1, ip
 8021c96:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8021c9a:	fb0c 770b 	mla	r7, ip, fp, r7
 8021c9e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021ca2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8021ca6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021caa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8021cae:	ea4c 0c0b 	orr.w	ip, ip, fp
 8021cb2:	fb02 770c 	mla	r7, r2, ip, r7
 8021cb6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8021cb8:	0d79      	lsrs	r1, r7, #21
 8021cba:	097f      	lsrs	r7, r7, #5
 8021cbc:	8812      	ldrh	r2, [r2, #0]
 8021cbe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021cc2:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021cc6:	430f      	orrs	r7, r1
 8021cc8:	b2bb      	uxth	r3, r7
 8021cca:	1211      	asrs	r1, r2, #8
 8021ccc:	1218      	asrs	r0, r3, #8
 8021cce:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021cd2:	fb11 f104 	smulbb	r1, r1, r4
 8021cd6:	10d7      	asrs	r7, r2, #3
 8021cd8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021cdc:	00d2      	lsls	r2, r2, #3
 8021cde:	fb00 1009 	mla	r0, r0, r9, r1
 8021ce2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021ce6:	10d9      	asrs	r1, r3, #3
 8021ce8:	b2d2      	uxtb	r2, r2
 8021cea:	00db      	lsls	r3, r3, #3
 8021cec:	fb17 f704 	smulbb	r7, r7, r4
 8021cf0:	fb12 f204 	smulbb	r2, r2, r4
 8021cf4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021cf8:	b2db      	uxtb	r3, r3
 8021cfa:	b280      	uxth	r0, r0
 8021cfc:	fb01 7109 	mla	r1, r1, r9, r7
 8021d00:	fb03 2309 	mla	r3, r3, r9, r2
 8021d04:	b29b      	uxth	r3, r3
 8021d06:	b289      	uxth	r1, r1
 8021d08:	1c42      	adds	r2, r0, #1
 8021d0a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021d0e:	1c4f      	adds	r7, r1, #1
 8021d10:	1c5a      	adds	r2, r3, #1
 8021d12:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021d16:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021d1a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021d1e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021d22:	0949      	lsrs	r1, r1, #5
 8021d24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021d26:	4310      	orrs	r0, r2
 8021d28:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021d2c:	4308      	orrs	r0, r1
 8021d2e:	f823 0b02 	strh.w	r0, [r3], #2
 8021d32:	930e      	str	r3, [sp, #56]	; 0x38
 8021d34:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8021d36:	449a      	add	sl, r3
 8021d38:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021d3a:	f10e 3eff 	add.w	lr, lr, #4294967295
 8021d3e:	441d      	add	r5, r3
 8021d40:	e6ed      	b.n	8021b1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8021d42:	2800      	cmp	r0, #0
 8021d44:	f43f af7f 	beq.w	8021c46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8021d48:	5cd3      	ldrb	r3, [r2, r3]
 8021d4a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021d4e:	9310      	str	r3, [sp, #64]	; 0x40
 8021d50:	e779      	b.n	8021c46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8021d52:	b019      	add	sp, #100	; 0x64
 8021d54:	ecbd 8b08 	vpop	{d8-d11}
 8021d58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021d5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021d5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021d60:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8021d64:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8021d68:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8021d6c:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8021d70:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8021d74:	8808      	ldrh	r0, [r1, #0]
 8021d76:	fb06 570e 	mla	r7, r6, lr, r5
 8021d7a:	2e00      	cmp	r6, #0
 8021d7c:	eb02 0807 	add.w	r8, r2, r7
 8021d80:	db38      	blt.n	8021df4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8021d82:	45b1      	cmp	r9, r6
 8021d84:	dd36      	ble.n	8021df4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8021d86:	2d00      	cmp	r5, #0
 8021d88:	db32      	blt.n	8021df0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8021d8a:	45ae      	cmp	lr, r5
 8021d8c:	dd30      	ble.n	8021df0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8021d8e:	5dd2      	ldrb	r2, [r2, r7]
 8021d90:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8021d94:	1c6a      	adds	r2, r5, #1
 8021d96:	d430      	bmi.n	8021dfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8021d98:	4596      	cmp	lr, r2
 8021d9a:	dd2e      	ble.n	8021dfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8021d9c:	b36c      	cbz	r4, 8021dfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8021d9e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8021da2:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8021da6:	3601      	adds	r6, #1
 8021da8:	d42b      	bmi.n	8021e02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8021daa:	45b1      	cmp	r9, r6
 8021dac:	dd29      	ble.n	8021e02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8021dae:	f1bc 0f00 	cmp.w	ip, #0
 8021db2:	d028      	beq.n	8021e06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8021db4:	2d00      	cmp	r5, #0
 8021db6:	db22      	blt.n	8021dfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8021db8:	45ae      	cmp	lr, r5
 8021dba:	dd20      	ble.n	8021dfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8021dbc:	f818 600e 	ldrb.w	r6, [r8, lr]
 8021dc0:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8021dc4:	3501      	adds	r5, #1
 8021dc6:	d407      	bmi.n	8021dd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8021dc8:	45ae      	cmp	lr, r5
 8021dca:	dd05      	ble.n	8021dd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8021dcc:	b134      	cbz	r4, 8021ddc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021dce:	44c6      	add	lr, r8
 8021dd0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8021dd4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8021dd8:	2c0f      	cmp	r4, #15
 8021dda:	d802      	bhi.n	8021de2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8021ddc:	f1bc 0f0f 	cmp.w	ip, #15
 8021de0:	d914      	bls.n	8021e0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8021de2:	4b26      	ldr	r3, [pc, #152]	; (8021e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8021de4:	4a26      	ldr	r2, [pc, #152]	; (8021e80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8021de6:	4827      	ldr	r0, [pc, #156]	; (8021e84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8021de8:	f240 11db 	movw	r1, #475	; 0x1db
 8021dec:	f00a f902 	bl	802bff4 <__assert_func>
 8021df0:	4607      	mov	r7, r0
 8021df2:	e7cf      	b.n	8021d94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8021df4:	4602      	mov	r2, r0
 8021df6:	4607      	mov	r7, r0
 8021df8:	e7d5      	b.n	8021da6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8021dfa:	4602      	mov	r2, r0
 8021dfc:	e7d3      	b.n	8021da6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8021dfe:	4606      	mov	r6, r0
 8021e00:	e7e0      	b.n	8021dc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8021e02:	4606      	mov	r6, r0
 8021e04:	e7e8      	b.n	8021dd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8021e06:	2c0f      	cmp	r4, #15
 8021e08:	d8eb      	bhi.n	8021de2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8021e0a:	4606      	mov	r6, r0
 8021e0c:	043d      	lsls	r5, r7, #16
 8021e0e:	fb14 f30c 	smulbb	r3, r4, ip
 8021e12:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8021e16:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8021e1a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021e1e:	10db      	asrs	r3, r3, #3
 8021e20:	432f      	orrs	r7, r5
 8021e22:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021e26:	f1cc 0510 	rsb	r5, ip, #16
 8021e2a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021e2e:	1b2d      	subs	r5, r5, r4
 8021e30:	ea4e 0202 	orr.w	r2, lr, r2
 8021e34:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8021e38:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8021e3c:	4354      	muls	r4, r2
 8021e3e:	fb05 4507 	mla	r5, r5, r7, r4
 8021e42:	0404      	lsls	r4, r0, #16
 8021e44:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021e48:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021e4c:	4320      	orrs	r0, r4
 8021e4e:	fb03 5400 	mla	r4, r3, r0, r5
 8021e52:	0430      	lsls	r0, r6, #16
 8021e54:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021e58:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8021e5c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021e60:	4330      	orrs	r0, r6
 8021e62:	fb03 4000 	mla	r0, r3, r0, r4
 8021e66:	0d43      	lsrs	r3, r0, #21
 8021e68:	0940      	lsrs	r0, r0, #5
 8021e6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021e6e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021e72:	4318      	orrs	r0, r3
 8021e74:	8008      	strh	r0, [r1, #0]
 8021e76:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021e7a:	bf00      	nop
 8021e7c:	08035c27 	.word	0x08035c27
 8021e80:	080361ff 	.word	0x080361ff
 8021e84:	08035bf4 	.word	0x08035bf4

08021e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e8c:	ed2d 8b0a 	vpush	{d8-d12}
 8021e90:	b093      	sub	sp, #76	; 0x4c
 8021e92:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8021e96:	920f      	str	r2, [sp, #60]	; 0x3c
 8021e98:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8021e9a:	9108      	str	r1, [sp, #32]
 8021e9c:	9306      	str	r3, [sp, #24]
 8021e9e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8021ea2:	9010      	str	r0, [sp, #64]	; 0x40
 8021ea4:	6850      	ldr	r0, [r2, #4]
 8021ea6:	6812      	ldr	r2, [r2, #0]
 8021ea8:	fb00 1303 	mla	r3, r0, r3, r1
 8021eac:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021eb0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021eb2:	681b      	ldr	r3, [r3, #0]
 8021eb4:	9307      	str	r3, [sp, #28]
 8021eb6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021eb8:	685f      	ldr	r7, [r3, #4]
 8021eba:	eeb0 aa40 	vmov.f32	s20, s0
 8021ebe:	eef0 9a60 	vmov.f32	s19, s1
 8021ec2:	eeb0 9a41 	vmov.f32	s18, s2
 8021ec6:	eeb0 8a62 	vmov.f32	s16, s5
 8021eca:	eef0 8a43 	vmov.f32	s17, s6
 8021ece:	eeb0 ca44 	vmov.f32	s24, s8
 8021ed2:	eef0 ba64 	vmov.f32	s23, s9
 8021ed6:	eeb0 ba45 	vmov.f32	s22, s10
 8021eda:	3704      	adds	r7, #4
 8021edc:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8021ee0:	9b08      	ldr	r3, [sp, #32]
 8021ee2:	2b00      	cmp	r3, #0
 8021ee4:	dc03      	bgt.n	8021eee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8021ee6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021ee8:	2b00      	cmp	r3, #0
 8021eea:	f340 81b2 	ble.w	8022252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8021eee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021ef0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021ef4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021ef8:	1e48      	subs	r0, r1, #1
 8021efa:	f102 3cff 	add.w	ip, r2, #4294967295
 8021efe:	9b06      	ldr	r3, [sp, #24]
 8021f00:	2b00      	cmp	r3, #0
 8021f02:	f340 80a9 	ble.w	8022058 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8021f06:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021f0a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021f0e:	d406      	bmi.n	8021f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021f10:	4586      	cmp	lr, r0
 8021f12:	da04      	bge.n	8021f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021f14:	2b00      	cmp	r3, #0
 8021f16:	db02      	blt.n	8021f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8021f18:	4563      	cmp	r3, ip
 8021f1a:	f2c0 809e 	blt.w	802205a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021f1e:	f11e 0e01 	adds.w	lr, lr, #1
 8021f22:	f100 808f 	bmi.w	8022044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021f26:	4571      	cmp	r1, lr
 8021f28:	f2c0 808c 	blt.w	8022044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021f2c:	3301      	adds	r3, #1
 8021f2e:	f100 8089 	bmi.w	8022044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021f32:	429a      	cmp	r2, r3
 8021f34:	f2c0 8086 	blt.w	8022044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021f38:	f8dd b018 	ldr.w	fp, [sp, #24]
 8021f3c:	46c8      	mov	r8, r9
 8021f3e:	f1bb 0f00 	cmp.w	fp, #0
 8021f42:	f340 80a6 	ble.w	8022092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8021f46:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8021f48:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021f4a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021f4e:	689b      	ldr	r3, [r3, #8]
 8021f50:	1422      	asrs	r2, r4, #16
 8021f52:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021f56:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021f5a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021f5e:	f100 80e3 	bmi.w	8022128 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8021f62:	f103 3aff 	add.w	sl, r3, #4294967295
 8021f66:	4552      	cmp	r2, sl
 8021f68:	f280 80de 	bge.w	8022128 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8021f6c:	f1bc 0f00 	cmp.w	ip, #0
 8021f70:	f2c0 80da 	blt.w	8022128 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8021f74:	f10e 3aff 	add.w	sl, lr, #4294967295
 8021f78:	45d4      	cmp	ip, sl
 8021f7a:	f280 80d5 	bge.w	8022128 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8021f7e:	b21b      	sxth	r3, r3
 8021f80:	fb0c 2203 	mla	r2, ip, r3, r2
 8021f84:	9d07      	ldr	r5, [sp, #28]
 8021f86:	eb05 0a02 	add.w	sl, r5, r2
 8021f8a:	5caa      	ldrb	r2, [r5, r2]
 8021f8c:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8021f90:	2800      	cmp	r0, #0
 8021f92:	f000 80c0 	beq.w	8022116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8021f96:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021f9a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8021f9e:	920b      	str	r2, [sp, #44]	; 0x2c
 8021fa0:	b151      	cbz	r1, 8021fb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8021fa2:	eb0a 0203 	add.w	r2, sl, r3
 8021fa6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8021faa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021fae:	9309      	str	r3, [sp, #36]	; 0x24
 8021fb0:	7853      	ldrb	r3, [r2, #1]
 8021fb2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021fb6:	930c      	str	r3, [sp, #48]	; 0x30
 8021fb8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021fba:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021fbc:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021fc0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021fc4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021fc8:	ea4c 0c03 	orr.w	ip, ip, r3
 8021fcc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021fce:	041b      	lsls	r3, r3, #16
 8021fd0:	fb10 f201 	smulbb	r2, r0, r1
 8021fd4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021fd8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021fdc:	10d2      	asrs	r2, r2, #3
 8021fde:	432b      	orrs	r3, r5
 8021fe0:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8021fe4:	4353      	muls	r3, r2
 8021fe6:	fb0a 330c 	mla	r3, sl, ip, r3
 8021fea:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8021fee:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021ff2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021ff6:	ea4c 0e0e 	orr.w	lr, ip, lr
 8021ffa:	f1c1 0c10 	rsb	ip, r1, #16
 8021ffe:	ebac 0c00 	sub.w	ip, ip, r0
 8022002:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022006:	fb0c 3c0e 	mla	ip, ip, lr, r3
 802200a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802200c:	0418      	lsls	r0, r3, #16
 802200e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022012:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022016:	4318      	orrs	r0, r3
 8022018:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802201c:	fb02 c200 	mla	r2, r2, r0, ip
 8022020:	0d53      	lsrs	r3, r2, #21
 8022022:	0952      	lsrs	r2, r2, #5
 8022024:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022028:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802202c:	431a      	orrs	r2, r3
 802202e:	f8a8 2000 	strh.w	r2, [r8]
 8022032:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022034:	441c      	add	r4, r3
 8022036:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022038:	f108 0802 	add.w	r8, r8, #2
 802203c:	441e      	add	r6, r3
 802203e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022042:	e77c      	b.n	8021f3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8022044:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022046:	441c      	add	r4, r3
 8022048:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802204a:	441e      	add	r6, r3
 802204c:	9b06      	ldr	r3, [sp, #24]
 802204e:	3b01      	subs	r3, #1
 8022050:	9306      	str	r3, [sp, #24]
 8022052:	f109 0902 	add.w	r9, r9, #2
 8022056:	e752      	b.n	8021efe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022058:	d020      	beq.n	802209c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802205a:	9b06      	ldr	r3, [sp, #24]
 802205c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 802205e:	3b01      	subs	r3, #1
 8022060:	fb00 4003 	mla	r0, r0, r3, r4
 8022064:	1400      	asrs	r0, r0, #16
 8022066:	f53f af67 	bmi.w	8021f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802206a:	3901      	subs	r1, #1
 802206c:	4288      	cmp	r0, r1
 802206e:	f6bf af63 	bge.w	8021f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8022072:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8022074:	fb01 6303 	mla	r3, r1, r3, r6
 8022078:	141b      	asrs	r3, r3, #16
 802207a:	f53f af5d 	bmi.w	8021f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 802207e:	3a01      	subs	r2, #1
 8022080:	4293      	cmp	r3, r2
 8022082:	f6bf af59 	bge.w	8021f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8022086:	f8dd 8018 	ldr.w	r8, [sp, #24]
 802208a:	46ca      	mov	sl, r9
 802208c:	f1b8 0f00 	cmp.w	r8, #0
 8022090:	dc67      	bgt.n	8022162 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8022092:	9b06      	ldr	r3, [sp, #24]
 8022094:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022098:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802209c:	9b08      	ldr	r3, [sp, #32]
 802209e:	2b00      	cmp	r3, #0
 80220a0:	f340 80d7 	ble.w	8022252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80220a4:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80220a8:	ee79 9aab 	vadd.f32	s19, s19, s23
 80220ac:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80220b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80220b2:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80220b6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80220ba:	eef0 6a48 	vmov.f32	s13, s16
 80220be:	ee69 7a27 	vmul.f32	s15, s18, s15
 80220c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80220c6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80220ca:	ee16 4a90 	vmov	r4, s13
 80220ce:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80220d2:	eef0 6a68 	vmov.f32	s13, s17
 80220d6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80220da:	ee18 2a10 	vmov	r2, s16
 80220de:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80220e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80220e6:	ee18 2a90 	vmov	r2, s17
 80220ea:	9329      	str	r3, [sp, #164]	; 0xa4
 80220ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80220ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80220f2:	932a      	str	r3, [sp, #168]	; 0xa8
 80220f4:	9b08      	ldr	r3, [sp, #32]
 80220f6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80220f8:	3b01      	subs	r3, #1
 80220fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80220fe:	9308      	str	r3, [sp, #32]
 8022100:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022102:	bf08      	it	eq
 8022104:	4613      	moveq	r3, r2
 8022106:	ee16 6a90 	vmov	r6, s13
 802210a:	9306      	str	r3, [sp, #24]
 802210c:	eef0 8a67 	vmov.f32	s17, s15
 8022110:	eeb0 8a47 	vmov.f32	s16, s14
 8022114:	e6e4      	b.n	8021ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022116:	2900      	cmp	r1, #0
 8022118:	f43f af4e 	beq.w	8021fb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 802211c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022120:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022124:	9309      	str	r3, [sp, #36]	; 0x24
 8022126:	e747      	b.n	8021fb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8022128:	f112 0a01 	adds.w	sl, r2, #1
 802212c:	d481      	bmi.n	8022032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802212e:	4553      	cmp	r3, sl
 8022130:	f6ff af7f 	blt.w	8022032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8022134:	f11c 0a01 	adds.w	sl, ip, #1
 8022138:	f53f af7b 	bmi.w	8022032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802213c:	45d6      	cmp	lr, sl
 802213e:	f6ff af78 	blt.w	8022032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8022142:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8022146:	b21b      	sxth	r3, r3
 8022148:	fa0f f28e 	sxth.w	r2, lr
 802214c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8022150:	9201      	str	r2, [sp, #4]
 8022152:	9300      	str	r3, [sp, #0]
 8022154:	9a07      	ldr	r2, [sp, #28]
 8022156:	9810      	ldr	r0, [sp, #64]	; 0x40
 8022158:	463b      	mov	r3, r7
 802215a:	4641      	mov	r1, r8
 802215c:	f7ff fdfe 	bl	8021d5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022160:	e767      	b.n	8022032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8022162:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022164:	9d07      	ldr	r5, [sp, #28]
 8022166:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802216a:	1422      	asrs	r2, r4, #16
 802216c:	1431      	asrs	r1, r6, #16
 802216e:	fb03 2101 	mla	r1, r3, r1, r2
 8022172:	9a07      	ldr	r2, [sp, #28]
 8022174:	440a      	add	r2, r1
 8022176:	5c69      	ldrb	r1, [r5, r1]
 8022178:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 802217c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022180:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8022184:	f1be 0f00 	cmp.w	lr, #0
 8022188:	d05c      	beq.n	8022244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 802218a:	f892 c001 	ldrb.w	ip, [r2, #1]
 802218e:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8022192:	950d      	str	r5, [sp, #52]	; 0x34
 8022194:	b150      	cbz	r0, 80221ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8022196:	eb02 0c03 	add.w	ip, r2, r3
 802219a:	5cd3      	ldrb	r3, [r2, r3]
 802219c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80221a0:	930a      	str	r3, [sp, #40]	; 0x28
 80221a2:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80221a6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80221aa:	930e      	str	r3, [sp, #56]	; 0x38
 80221ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80221ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80221b0:	fb1e f200 	smulbb	r2, lr, r0
 80221b4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80221b8:	10d2      	asrs	r2, r2, #3
 80221ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80221be:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80221c2:	ea4c 0c03 	orr.w	ip, ip, r3
 80221c6:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80221ca:	9311      	str	r3, [sp, #68]	; 0x44
 80221cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80221ce:	041b      	lsls	r3, r3, #16
 80221d0:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80221d4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80221d8:	ea43 030b 	orr.w	r3, r3, fp
 80221dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80221de:	4353      	muls	r3, r2
 80221e0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80221e4:	fb05 3c0c 	mla	ip, r5, ip, r3
 80221e8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80221ec:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80221f0:	ea43 0b01 	orr.w	fp, r3, r1
 80221f4:	f1c0 0110 	rsb	r1, r0, #16
 80221f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80221fa:	eba1 0e0e 	sub.w	lr, r1, lr
 80221fe:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8022202:	fb0e cc0b 	mla	ip, lr, fp, ip
 8022206:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 802220a:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 802220e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022212:	ea4b 0e0e 	orr.w	lr, fp, lr
 8022216:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 802221a:	fb02 cc0e 	mla	ip, r2, lr, ip
 802221e:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8022222:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022226:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802222a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802222e:	ea43 0c0c 	orr.w	ip, r3, ip
 8022232:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022234:	f82a cb02 	strh.w	ip, [sl], #2
 8022238:	441c      	add	r4, r3
 802223a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802223c:	f108 38ff 	add.w	r8, r8, #4294967295
 8022240:	441e      	add	r6, r3
 8022242:	e723      	b.n	802208c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022244:	2800      	cmp	r0, #0
 8022246:	d0b1      	beq.n	80221ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8022248:	5cd3      	ldrb	r3, [r2, r3]
 802224a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802224e:	930a      	str	r3, [sp, #40]	; 0x28
 8022250:	e7ac      	b.n	80221ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8022252:	b013      	add	sp, #76	; 0x4c
 8022254:	ecbd 8b0a 	vpop	{d8-d12}
 8022258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802225c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802225c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022260:	468b      	mov	fp, r1
 8022262:	8809      	ldrh	r1, [r1, #0]
 8022264:	b089      	sub	sp, #36	; 0x24
 8022266:	10cd      	asrs	r5, r1, #3
 8022268:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 802226c:	ea4f 2921 	mov.w	r9, r1, asr #8
 8022270:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022274:	00c9      	lsls	r1, r1, #3
 8022276:	9500      	str	r5, [sp, #0]
 8022278:	b2c9      	uxtb	r1, r1
 802227a:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 802227e:	9101      	str	r1, [sp, #4]
 8022280:	9900      	ldr	r1, [sp, #0]
 8022282:	9202      	str	r2, [sp, #8]
 8022284:	fb04 650e 	mla	r5, r4, lr, r6
 8022288:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 802228c:	eb02 0805 	add.w	r8, r2, r5
 8022290:	0209      	lsls	r1, r1, #8
 8022292:	9a01      	ldr	r2, [sp, #4]
 8022294:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8022298:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 802229c:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80222a0:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80222a4:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80222a8:	4311      	orrs	r1, r2
 80222aa:	2c00      	cmp	r4, #0
 80222ac:	9107      	str	r1, [sp, #28]
 80222ae:	db43      	blt.n	8022338 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80222b0:	45a2      	cmp	sl, r4
 80222b2:	dd41      	ble.n	8022338 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80222b4:	2e00      	cmp	r6, #0
 80222b6:	db3d      	blt.n	8022334 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80222b8:	45b6      	cmp	lr, r6
 80222ba:	dd3b      	ble.n	8022334 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80222bc:	9a02      	ldr	r2, [sp, #8]
 80222be:	5d55      	ldrb	r5, [r2, r5]
 80222c0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80222c4:	441d      	add	r5, r3
 80222c6:	1c72      	adds	r2, r6, #1
 80222c8:	d439      	bmi.n	802233e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80222ca:	4596      	cmp	lr, r2
 80222cc:	dd37      	ble.n	802233e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80222ce:	2f00      	cmp	r7, #0
 80222d0:	d035      	beq.n	802233e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80222d2:	f898 1001 	ldrb.w	r1, [r8, #1]
 80222d6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80222da:	4419      	add	r1, r3
 80222dc:	3401      	adds	r4, #1
 80222de:	d432      	bmi.n	8022346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80222e0:	45a2      	cmp	sl, r4
 80222e2:	dd30      	ble.n	8022346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80222e4:	b378      	cbz	r0, 8022346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80222e6:	2e00      	cmp	r6, #0
 80222e8:	db2b      	blt.n	8022342 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80222ea:	45b6      	cmp	lr, r6
 80222ec:	dd29      	ble.n	8022342 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80222ee:	f818 400e 	ldrb.w	r4, [r8, lr]
 80222f2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80222f6:	441c      	add	r4, r3
 80222f8:	3601      	adds	r6, #1
 80222fa:	d427      	bmi.n	802234c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80222fc:	45b6      	cmp	lr, r6
 80222fe:	dd25      	ble.n	802234c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8022300:	b327      	cbz	r7, 802234c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8022302:	44c6      	add	lr, r8
 8022304:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022308:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802230c:	4413      	add	r3, r2
 802230e:	782a      	ldrb	r2, [r5, #0]
 8022310:	9202      	str	r2, [sp, #8]
 8022312:	780a      	ldrb	r2, [r1, #0]
 8022314:	9203      	str	r2, [sp, #12]
 8022316:	7822      	ldrb	r2, [r4, #0]
 8022318:	9204      	str	r2, [sp, #16]
 802231a:	2f0f      	cmp	r7, #15
 802231c:	781a      	ldrb	r2, [r3, #0]
 802231e:	9205      	str	r2, [sp, #20]
 8022320:	d801      	bhi.n	8022326 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8022322:	280f      	cmp	r0, #15
 8022324:	d914      	bls.n	8022350 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8022326:	4b3f      	ldr	r3, [pc, #252]	; (8022424 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8022328:	4a3f      	ldr	r2, [pc, #252]	; (8022428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 802232a:	4840      	ldr	r0, [pc, #256]	; (802242c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 802232c:	f240 11f9 	movw	r1, #505	; 0x1f9
 8022330:	f009 fe60 	bl	802bff4 <__assert_func>
 8022334:	ad07      	add	r5, sp, #28
 8022336:	e7c6      	b.n	80222c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8022338:	a907      	add	r1, sp, #28
 802233a:	460d      	mov	r5, r1
 802233c:	e7ce      	b.n	80222dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802233e:	a907      	add	r1, sp, #28
 8022340:	e7cc      	b.n	80222dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8022342:	ac07      	add	r4, sp, #28
 8022344:	e7d8      	b.n	80222f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8022346:	ab07      	add	r3, sp, #28
 8022348:	461c      	mov	r4, r3
 802234a:	e7e0      	b.n	802230e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 802234c:	ab07      	add	r3, sp, #28
 802234e:	e7de      	b.n	802230e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8022350:	b2ba      	uxth	r2, r7
 8022352:	b280      	uxth	r0, r0
 8022354:	fb02 fa00 	mul.w	sl, r2, r0
 8022358:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 802235c:	0112      	lsls	r2, r2, #4
 802235e:	b280      	uxth	r0, r0
 8022360:	f891 8002 	ldrb.w	r8, [r1, #2]
 8022364:	7849      	ldrb	r1, [r1, #1]
 8022366:	78ae      	ldrb	r6, [r5, #2]
 8022368:	786d      	ldrb	r5, [r5, #1]
 802236a:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 802236e:	eba2 020a 	sub.w	r2, r2, sl
 8022372:	b292      	uxth	r2, r2
 8022374:	ebae 0e00 	sub.w	lr, lr, r0
 8022378:	fa1f fe8e 	uxth.w	lr, lr
 802237c:	4351      	muls	r1, r2
 802237e:	fb02 f808 	mul.w	r8, r2, r8
 8022382:	fb0e 8806 	mla	r8, lr, r6, r8
 8022386:	fb0e 1505 	mla	r5, lr, r5, r1
 802238a:	78a6      	ldrb	r6, [r4, #2]
 802238c:	7861      	ldrb	r1, [r4, #1]
 802238e:	fa1f f78c 	uxth.w	r7, ip
 8022392:	fb00 8806 	mla	r8, r0, r6, r8
 8022396:	fb00 5501 	mla	r5, r0, r1, r5
 802239a:	789e      	ldrb	r6, [r3, #2]
 802239c:	7859      	ldrb	r1, [r3, #1]
 802239e:	9b00      	ldr	r3, [sp, #0]
 80223a0:	ea6f 0c0c 	mvn.w	ip, ip
 80223a4:	fa5f fc8c 	uxtb.w	ip, ip
 80223a8:	fb0a 5101 	mla	r1, sl, r1, r5
 80223ac:	fb13 f50c 	smulbb	r5, r3, ip
 80223b0:	9b03      	ldr	r3, [sp, #12]
 80223b2:	435a      	muls	r2, r3
 80223b4:	9b02      	ldr	r3, [sp, #8]
 80223b6:	fb0e 2203 	mla	r2, lr, r3, r2
 80223ba:	9b04      	ldr	r3, [sp, #16]
 80223bc:	fb00 2003 	mla	r0, r0, r3, r2
 80223c0:	9b05      	ldr	r3, [sp, #20]
 80223c2:	fb0a 8606 	mla	r6, sl, r6, r8
 80223c6:	fb19 f90c 	smulbb	r9, r9, ip
 80223ca:	fb0a 0a03 	mla	sl, sl, r3, r0
 80223ce:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80223d2:	9b01      	ldr	r3, [sp, #4]
 80223d4:	fb06 9607 	mla	r6, r6, r7, r9
 80223d8:	b2b6      	uxth	r6, r6
 80223da:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80223de:	fb13 fc0c 	smulbb	ip, r3, ip
 80223e2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80223e6:	fb01 5107 	mla	r1, r1, r7, r5
 80223ea:	f106 0901 	add.w	r9, r6, #1
 80223ee:	fb0a c707 	mla	r7, sl, r7, ip
 80223f2:	b2bf      	uxth	r7, r7
 80223f4:	b289      	uxth	r1, r1
 80223f6:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80223fa:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 80223fe:	1c4d      	adds	r5, r1, #1
 8022400:	1c7e      	adds	r6, r7, #1
 8022402:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8022406:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 802240a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802240e:	0949      	lsrs	r1, r1, #5
 8022410:	ea46 0609 	orr.w	r6, r6, r9
 8022414:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022418:	430e      	orrs	r6, r1
 802241a:	f8ab 6000 	strh.w	r6, [fp]
 802241e:	b009      	add	sp, #36	; 0x24
 8022420:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022424:	08035c27 	.word	0x08035c27
 8022428:	08036156 	.word	0x08036156
 802242c:	08035bf4 	.word	0x08035bf4

08022430 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022434:	ed2d 8b08 	vpush	{d8-d11}
 8022438:	b095      	sub	sp, #84	; 0x54
 802243a:	eeb0 aa40 	vmov.f32	s20, s0
 802243e:	9212      	str	r2, [sp, #72]	; 0x48
 8022440:	9309      	str	r3, [sp, #36]	; 0x24
 8022442:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8022444:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8022448:	930f      	str	r3, [sp, #60]	; 0x3c
 802244a:	910e      	str	r1, [sp, #56]	; 0x38
 802244c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8022450:	9013      	str	r0, [sp, #76]	; 0x4c
 8022452:	6850      	ldr	r0, [r2, #4]
 8022454:	6812      	ldr	r2, [r2, #0]
 8022456:	fb00 1303 	mla	r3, r0, r3, r1
 802245a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802245e:	930a      	str	r3, [sp, #40]	; 0x28
 8022460:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022462:	681b      	ldr	r3, [r3, #0]
 8022464:	930d      	str	r3, [sp, #52]	; 0x34
 8022466:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022468:	685c      	ldr	r4, [r3, #4]
 802246a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802246c:	43db      	mvns	r3, r3
 802246e:	b2db      	uxtb	r3, r3
 8022470:	eef0 9a60 	vmov.f32	s19, s1
 8022474:	eeb0 9a41 	vmov.f32	s18, s2
 8022478:	eeb0 8a62 	vmov.f32	s16, s5
 802247c:	eef0 8a43 	vmov.f32	s17, s6
 8022480:	eef0 ba44 	vmov.f32	s23, s8
 8022484:	eeb0 ba64 	vmov.f32	s22, s9
 8022488:	eef0 aa45 	vmov.f32	s21, s10
 802248c:	3404      	adds	r4, #4
 802248e:	930b      	str	r3, [sp, #44]	; 0x2c
 8022490:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022492:	2b00      	cmp	r3, #0
 8022494:	dc03      	bgt.n	802249e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022496:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8022498:	2b00      	cmp	r3, #0
 802249a:	f340 8255 	ble.w	8022948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 802249e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80224a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80224a4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80224a8:	1e48      	subs	r0, r1, #1
 80224aa:	1e55      	subs	r5, r2, #1
 80224ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80224ae:	2b00      	cmp	r3, #0
 80224b0:	f340 80f9 	ble.w	80226a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80224b4:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80224b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80224b8:	1436      	asrs	r6, r6, #16
 80224ba:	ea4f 4323 	mov.w	r3, r3, asr #16
 80224be:	d406      	bmi.n	80224ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80224c0:	4286      	cmp	r6, r0
 80224c2:	da04      	bge.n	80224ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80224c4:	2b00      	cmp	r3, #0
 80224c6:	db02      	blt.n	80224ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80224c8:	42ab      	cmp	r3, r5
 80224ca:	f2c0 80ed 	blt.w	80226a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80224ce:	3601      	adds	r6, #1
 80224d0:	f100 80da 	bmi.w	8022688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80224d4:	42b1      	cmp	r1, r6
 80224d6:	f2c0 80d7 	blt.w	8022688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80224da:	3301      	adds	r3, #1
 80224dc:	f100 80d4 	bmi.w	8022688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80224e0:	429a      	cmp	r2, r3
 80224e2:	f2c0 80d1 	blt.w	8022688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80224e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80224e8:	9311      	str	r3, [sp, #68]	; 0x44
 80224ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80224ec:	930c      	str	r3, [sp, #48]	; 0x30
 80224ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80224f0:	2b00      	cmp	r3, #0
 80224f2:	f340 80fa 	ble.w	80226ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80224f6:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80224f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80224fa:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80224fc:	68c6      	ldr	r6, [r0, #12]
 80224fe:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022500:	141d      	asrs	r5, r3, #16
 8022502:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8022506:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022508:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 802250a:	1400      	asrs	r0, r0, #16
 802250c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8022510:	6892      	ldr	r2, [r2, #8]
 8022512:	f100 813e 	bmi.w	8022792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022516:	1e57      	subs	r7, r2, #1
 8022518:	42b8      	cmp	r0, r7
 802251a:	f280 813a 	bge.w	8022792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802251e:	2d00      	cmp	r5, #0
 8022520:	f2c0 8137 	blt.w	8022792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022524:	1e77      	subs	r7, r6, #1
 8022526:	42bd      	cmp	r5, r7
 8022528:	f280 8133 	bge.w	8022792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802252c:	b212      	sxth	r2, r2
 802252e:	fb05 0002 	mla	r0, r5, r2, r0
 8022532:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022534:	f815 a000 	ldrb.w	sl, [r5, r0]
 8022538:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802253c:	182e      	adds	r6, r5, r0
 802253e:	eb04 050a 	add.w	r5, r4, sl
 8022542:	2b00      	cmp	r3, #0
 8022544:	f000 8117 	beq.w	8022776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8022548:	f896 c001 	ldrb.w	ip, [r6, #1]
 802254c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8022550:	44a4      	add	ip, r4
 8022552:	2900      	cmp	r1, #0
 8022554:	f000 8117 	beq.w	8022786 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022558:	18b0      	adds	r0, r6, r2
 802255a:	5cb2      	ldrb	r2, [r6, r2]
 802255c:	7840      	ldrb	r0, [r0, #1]
 802255e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022562:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022566:	4422      	add	r2, r4
 8022568:	4420      	add	r0, r4
 802256a:	b29b      	uxth	r3, r3
 802256c:	b289      	uxth	r1, r1
 802256e:	fb03 f901 	mul.w	r9, r3, r1
 8022572:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022576:	011b      	lsls	r3, r3, #4
 8022578:	b289      	uxth	r1, r1
 802257a:	f89c 7002 	ldrb.w	r7, [ip, #2]
 802257e:	f895 b002 	ldrb.w	fp, [r5, #2]
 8022582:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8022584:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8022588:	f8b6 e000 	ldrh.w	lr, [r6]
 802258c:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8022590:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8022594:	eba3 0309 	sub.w	r3, r3, r9
 8022598:	b29b      	uxth	r3, r3
 802259a:	eba8 0801 	sub.w	r8, r8, r1
 802259e:	fa1f f888 	uxth.w	r8, r8
 80225a2:	435f      	muls	r7, r3
 80225a4:	fb08 770b 	mla	r7, r8, fp, r7
 80225a8:	f892 b002 	ldrb.w	fp, [r2, #2]
 80225ac:	9310      	str	r3, [sp, #64]	; 0x40
 80225ae:	fb01 770b 	mla	r7, r1, fp, r7
 80225b2:	f890 b002 	ldrb.w	fp, [r0, #2]
 80225b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80225b8:	fb09 770b 	mla	r7, r9, fp, r7
 80225bc:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80225c0:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80225c4:	fb1b fb03 	smulbb	fp, fp, r3
 80225c8:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80225cc:	fb07 b706 	mla	r7, r7, r6, fp
 80225d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80225d2:	f895 b001 	ldrb.w	fp, [r5, #1]
 80225d6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80225da:	f89c c000 	ldrb.w	ip, [ip]
 80225de:	435d      	muls	r5, r3
 80225e0:	fb08 550b 	mla	r5, r8, fp, r5
 80225e4:	f892 b001 	ldrb.w	fp, [r2, #1]
 80225e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80225ea:	fb01 550b 	mla	r5, r1, fp, r5
 80225ee:	f890 b001 	ldrb.w	fp, [r0, #1]
 80225f2:	fb09 550b 	mla	r5, r9, fp, r5
 80225f6:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80225fa:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80225fe:	fb1b fb03 	smulbb	fp, fp, r3
 8022602:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022604:	fb03 f30c 	mul.w	r3, r3, ip
 8022608:	f892 c000 	ldrb.w	ip, [r2]
 802260c:	fb08 330a 	mla	r3, r8, sl, r3
 8022610:	fb01 330c 	mla	r3, r1, ip, r3
 8022614:	f890 c000 	ldrb.w	ip, [r0]
 8022618:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802261c:	fb09 3c0c 	mla	ip, r9, ip, r3
 8022620:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022622:	fa5f fe8e 	uxtb.w	lr, lr
 8022626:	b2bf      	uxth	r7, r7
 8022628:	fb1e fe03 	smulbb	lr, lr, r3
 802262c:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8022630:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8022634:	fb05 b506 	mla	r5, r5, r6, fp
 8022638:	1c7b      	adds	r3, r7, #1
 802263a:	fb0c e606 	mla	r6, ip, r6, lr
 802263e:	b2ad      	uxth	r5, r5
 8022640:	b2b6      	uxth	r6, r6
 8022642:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022646:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 802264a:	f105 0b01 	add.w	fp, r5, #1
 802264e:	1c77      	adds	r7, r6, #1
 8022650:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8022654:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8022658:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802265c:	096d      	lsrs	r5, r5, #5
 802265e:	431f      	orrs	r7, r3
 8022660:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022664:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022666:	433d      	orrs	r5, r7
 8022668:	801d      	strh	r5, [r3, #0]
 802266a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802266c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802266e:	3302      	adds	r3, #2
 8022670:	930c      	str	r3, [sp, #48]	; 0x30
 8022672:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022674:	4413      	add	r3, r2
 8022676:	9327      	str	r3, [sp, #156]	; 0x9c
 8022678:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 802267a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802267c:	4413      	add	r3, r2
 802267e:	9328      	str	r3, [sp, #160]	; 0xa0
 8022680:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022682:	3b01      	subs	r3, #1
 8022684:	9311      	str	r3, [sp, #68]	; 0x44
 8022686:	e732      	b.n	80224ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8022688:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802268a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 802268c:	4433      	add	r3, r6
 802268e:	9327      	str	r3, [sp, #156]	; 0x9c
 8022690:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8022692:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022694:	4433      	add	r3, r6
 8022696:	9328      	str	r3, [sp, #160]	; 0xa0
 8022698:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802269a:	3b01      	subs	r3, #1
 802269c:	9309      	str	r3, [sp, #36]	; 0x24
 802269e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80226a0:	3302      	adds	r3, #2
 80226a2:	930a      	str	r3, [sp, #40]	; 0x28
 80226a4:	e702      	b.n	80224ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80226a6:	d027      	beq.n	80226f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80226a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80226aa:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80226ac:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80226ae:	3b01      	subs	r3, #1
 80226b0:	fb00 5003 	mla	r0, r0, r3, r5
 80226b4:	1400      	asrs	r0, r0, #16
 80226b6:	f53f af16 	bmi.w	80224e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80226ba:	3901      	subs	r1, #1
 80226bc:	4288      	cmp	r0, r1
 80226be:	f6bf af12 	bge.w	80224e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80226c2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80226c4:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80226c6:	fb01 0303 	mla	r3, r1, r3, r0
 80226ca:	141b      	asrs	r3, r3, #16
 80226cc:	f53f af0b 	bmi.w	80224e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80226d0:	3a01      	subs	r2, #1
 80226d2:	4293      	cmp	r3, r2
 80226d4:	f6bf af07 	bge.w	80224e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80226d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80226da:	9311      	str	r3, [sp, #68]	; 0x44
 80226dc:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80226e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80226e2:	930c      	str	r3, [sp, #48]	; 0x30
 80226e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80226e6:	2b00      	cmp	r3, #0
 80226e8:	dc70      	bgt.n	80227cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80226ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80226ec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80226ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80226f2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80226f6:	930a      	str	r3, [sp, #40]	; 0x28
 80226f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80226fa:	2b00      	cmp	r3, #0
 80226fc:	f340 8124 	ble.w	8022948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8022700:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8022704:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022708:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802270c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802270e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8022712:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8022716:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802271a:	eef0 6a48 	vmov.f32	s13, s16
 802271e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8022722:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022726:	ee37 8a48 	vsub.f32	s16, s14, s16
 802272a:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 802272e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8022732:	eef0 6a68 	vmov.f32	s13, s17
 8022736:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802273a:	ee18 2a10 	vmov	r2, s16
 802273e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8022742:	fb92 f3f3 	sdiv	r3, r2, r3
 8022746:	ee18 2a90 	vmov	r2, s17
 802274a:	9329      	str	r3, [sp, #164]	; 0xa4
 802274c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802274e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022752:	932a      	str	r3, [sp, #168]	; 0xa8
 8022754:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022756:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8022758:	3b01      	subs	r3, #1
 802275a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802275e:	930e      	str	r3, [sp, #56]	; 0x38
 8022760:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022762:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8022766:	bf08      	it	eq
 8022768:	4613      	moveq	r3, r2
 802276a:	9309      	str	r3, [sp, #36]	; 0x24
 802276c:	eef0 8a67 	vmov.f32	s17, s15
 8022770:	eeb0 8a47 	vmov.f32	s16, s14
 8022774:	e68c      	b.n	8022490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8022776:	b149      	cbz	r1, 802278c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8022778:	5cb2      	ldrb	r2, [r6, r2]
 802277a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802277e:	4422      	add	r2, r4
 8022780:	4628      	mov	r0, r5
 8022782:	46ac      	mov	ip, r5
 8022784:	e6f1      	b.n	802256a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8022786:	4628      	mov	r0, r5
 8022788:	462a      	mov	r2, r5
 802278a:	e6ee      	b.n	802256a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 802278c:	4628      	mov	r0, r5
 802278e:	462a      	mov	r2, r5
 8022790:	e7f7      	b.n	8022782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8022792:	1c47      	adds	r7, r0, #1
 8022794:	f53f af69 	bmi.w	802266a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8022798:	42ba      	cmp	r2, r7
 802279a:	f6ff af66 	blt.w	802266a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802279e:	1c6f      	adds	r7, r5, #1
 80227a0:	f53f af63 	bmi.w	802266a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80227a4:	42be      	cmp	r6, r7
 80227a6:	f6ff af60 	blt.w	802266a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80227aa:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80227ac:	9002      	str	r0, [sp, #8]
 80227ae:	b236      	sxth	r6, r6
 80227b0:	b212      	sxth	r2, r2
 80227b2:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80227b6:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80227ba:	9200      	str	r2, [sp, #0]
 80227bc:	9601      	str	r6, [sp, #4]
 80227be:	4623      	mov	r3, r4
 80227c0:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80227c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80227c6:	f7ff fd49 	bl	802225c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80227ca:	e74e      	b.n	802266a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80227cc:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80227ce:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80227d0:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80227d2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80227d4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80227d8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80227da:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80227de:	142d      	asrs	r5, r5, #16
 80227e0:	1400      	asrs	r0, r0, #16
 80227e2:	fb02 5000 	mla	r0, r2, r0, r5
 80227e6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80227e8:	f815 9000 	ldrb.w	r9, [r5, r0]
 80227ec:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80227f0:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80227f4:	182e      	adds	r6, r5, r0
 80227f6:	eb04 0509 	add.w	r5, r4, r9
 80227fa:	2b00      	cmp	r3, #0
 80227fc:	f000 8096 	beq.w	802292c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8022800:	7877      	ldrb	r7, [r6, #1]
 8022802:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8022806:	4427      	add	r7, r4
 8022808:	2900      	cmp	r1, #0
 802280a:	f000 8097 	beq.w	802293c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 802280e:	18b0      	adds	r0, r6, r2
 8022810:	5cb2      	ldrb	r2, [r6, r2]
 8022812:	7840      	ldrb	r0, [r0, #1]
 8022814:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022818:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802281c:	4422      	add	r2, r4
 802281e:	4420      	add	r0, r4
 8022820:	b29b      	uxth	r3, r3
 8022822:	b289      	uxth	r1, r1
 8022824:	fb03 f801 	mul.w	r8, r3, r1
 8022828:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802282a:	f895 b002 	ldrb.w	fp, [r5, #2]
 802282e:	f8b6 c000 	ldrh.w	ip, [r6]
 8022832:	78be      	ldrb	r6, [r7, #2]
 8022834:	f814 9009 	ldrb.w	r9, [r4, r9]
 8022838:	011b      	lsls	r3, r3, #4
 802283a:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 802283e:	b289      	uxth	r1, r1
 8022840:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8022844:	eba3 0308 	sub.w	r3, r3, r8
 8022848:	b29b      	uxth	r3, r3
 802284a:	ebae 0e01 	sub.w	lr, lr, r1
 802284e:	fa1f fe8e 	uxth.w	lr, lr
 8022852:	435e      	muls	r6, r3
 8022854:	fb0e 660b 	mla	r6, lr, fp, r6
 8022858:	f892 b002 	ldrb.w	fp, [r2, #2]
 802285c:	9310      	str	r3, [sp, #64]	; 0x40
 802285e:	fb01 660b 	mla	r6, r1, fp, r6
 8022862:	f890 b002 	ldrb.w	fp, [r0, #2]
 8022866:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022868:	fb08 660b 	mla	r6, r8, fp, r6
 802286c:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8022870:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8022874:	fb1b fb03 	smulbb	fp, fp, r3
 8022878:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802287c:	fb06 b60a 	mla	r6, r6, sl, fp
 8022880:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022882:	f895 b001 	ldrb.w	fp, [r5, #1]
 8022886:	787d      	ldrb	r5, [r7, #1]
 8022888:	783f      	ldrb	r7, [r7, #0]
 802288a:	435d      	muls	r5, r3
 802288c:	fb0e 550b 	mla	r5, lr, fp, r5
 8022890:	f892 b001 	ldrb.w	fp, [r2, #1]
 8022894:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022896:	fb01 550b 	mla	r5, r1, fp, r5
 802289a:	f890 b001 	ldrb.w	fp, [r0, #1]
 802289e:	fb08 550b 	mla	r5, r8, fp, r5
 80228a2:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80228a6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80228aa:	fb1b fb03 	smulbb	fp, fp, r3
 80228ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80228b0:	437b      	muls	r3, r7
 80228b2:	7817      	ldrb	r7, [r2, #0]
 80228b4:	fb0e 3309 	mla	r3, lr, r9, r3
 80228b8:	fb01 3307 	mla	r3, r1, r7, r3
 80228bc:	7807      	ldrb	r7, [r0, #0]
 80228be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80228c2:	fb08 3707 	mla	r7, r8, r7, r3
 80228c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80228c8:	fa5f fc8c 	uxtb.w	ip, ip
 80228cc:	fb1c fc03 	smulbb	ip, ip, r3
 80228d0:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80228d4:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80228d8:	fb05 b50a 	mla	r5, r5, sl, fp
 80228dc:	fb07 c70a 	mla	r7, r7, sl, ip
 80228e0:	b2b6      	uxth	r6, r6
 80228e2:	b2ad      	uxth	r5, r5
 80228e4:	b2bf      	uxth	r7, r7
 80228e6:	1c73      	adds	r3, r6, #1
 80228e8:	1c7a      	adds	r2, r7, #1
 80228ea:	f105 0b01 	add.w	fp, r5, #1
 80228ee:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80228f2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80228f6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80228fa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80228fe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8022902:	096d      	lsrs	r5, r5, #5
 8022904:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022906:	4316      	orrs	r6, r2
 8022908:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802290c:	432e      	orrs	r6, r5
 802290e:	f823 6b02 	strh.w	r6, [r3], #2
 8022912:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022914:	930c      	str	r3, [sp, #48]	; 0x30
 8022916:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022918:	4413      	add	r3, r2
 802291a:	9327      	str	r3, [sp, #156]	; 0x9c
 802291c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 802291e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022920:	4413      	add	r3, r2
 8022922:	9328      	str	r3, [sp, #160]	; 0xa0
 8022924:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022926:	3b01      	subs	r3, #1
 8022928:	9311      	str	r3, [sp, #68]	; 0x44
 802292a:	e6db      	b.n	80226e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 802292c:	b149      	cbz	r1, 8022942 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 802292e:	5cb2      	ldrb	r2, [r6, r2]
 8022930:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022934:	4422      	add	r2, r4
 8022936:	4628      	mov	r0, r5
 8022938:	462f      	mov	r7, r5
 802293a:	e771      	b.n	8022820 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 802293c:	4628      	mov	r0, r5
 802293e:	462a      	mov	r2, r5
 8022940:	e76e      	b.n	8022820 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8022942:	4628      	mov	r0, r5
 8022944:	462a      	mov	r2, r5
 8022946:	e7f7      	b.n	8022938 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8022948:	b015      	add	sp, #84	; 0x54
 802294a:	ecbd 8b08 	vpop	{d8-d11}
 802294e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08022954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8022954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022958:	880e      	ldrh	r6, [r1, #0]
 802295a:	b085      	sub	sp, #20
 802295c:	0230      	lsls	r0, r6, #8
 802295e:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8022962:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8022966:	0170      	lsls	r0, r6, #5
 8022968:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 802296c:	9101      	str	r1, [sp, #4]
 802296e:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8022972:	00f6      	lsls	r6, r6, #3
 8022974:	ea4b 0000 	orr.w	r0, fp, r0
 8022978:	b2f6      	uxtb	r6, r6
 802297a:	4691      	mov	r9, r2
 802297c:	fb05 7a0c 	mla	sl, r5, ip, r7
 8022980:	4306      	orrs	r6, r0
 8022982:	2d00      	cmp	r5, #0
 8022984:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8022988:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 802298c:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8022990:	9603      	str	r6, [sp, #12]
 8022992:	eb09 0e0a 	add.w	lr, r9, sl
 8022996:	db42      	blt.n	8022a1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8022998:	45a8      	cmp	r8, r5
 802299a:	dd40      	ble.n	8022a1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 802299c:	2f00      	cmp	r7, #0
 802299e:	db3c      	blt.n	8022a1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 80229a0:	45bc      	cmp	ip, r7
 80229a2:	dd3a      	ble.n	8022a1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 80229a4:	f819 600a 	ldrb.w	r6, [r9, sl]
 80229a8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80229ac:	441e      	add	r6, r3
 80229ae:	1c78      	adds	r0, r7, #1
 80229b0:	d438      	bmi.n	8022a24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 80229b2:	4584      	cmp	ip, r0
 80229b4:	dd36      	ble.n	8022a24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 80229b6:	b3aa      	cbz	r2, 8022a24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 80229b8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80229bc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80229c0:	4418      	add	r0, r3
 80229c2:	3501      	adds	r5, #1
 80229c4:	d432      	bmi.n	8022a2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 80229c6:	45a8      	cmp	r8, r5
 80229c8:	dd30      	ble.n	8022a2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 80229ca:	b37c      	cbz	r4, 8022a2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 80229cc:	2f00      	cmp	r7, #0
 80229ce:	db2b      	blt.n	8022a28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 80229d0:	45bc      	cmp	ip, r7
 80229d2:	dd29      	ble.n	8022a28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 80229d4:	f81e 500c 	ldrb.w	r5, [lr, ip]
 80229d8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80229dc:	441d      	add	r5, r3
 80229de:	3701      	adds	r7, #1
 80229e0:	d427      	bmi.n	8022a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 80229e2:	45bc      	cmp	ip, r7
 80229e4:	dd25      	ble.n	8022a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 80229e6:	b322      	cbz	r2, 8022a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 80229e8:	44f4      	add	ip, lr
 80229ea:	f89c 7001 	ldrb.w	r7, [ip, #1]
 80229ee:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80229f2:	443b      	add	r3, r7
 80229f4:	781f      	ldrb	r7, [r3, #0]
 80229f6:	f896 9000 	ldrb.w	r9, [r6]
 80229fa:	f890 a000 	ldrb.w	sl, [r0]
 80229fe:	f895 8000 	ldrb.w	r8, [r5]
 8022a02:	2a0f      	cmp	r2, #15
 8022a04:	4639      	mov	r1, r7
 8022a06:	d801      	bhi.n	8022a0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8022a08:	2c0f      	cmp	r4, #15
 8022a0a:	d914      	bls.n	8022a36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8022a0c:	4b2c      	ldr	r3, [pc, #176]	; (8022ac0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8022a0e:	4a2d      	ldr	r2, [pc, #180]	; (8022ac4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8022a10:	482d      	ldr	r0, [pc, #180]	; (8022ac8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8022a12:	f240 11f9 	movw	r1, #505	; 0x1f9
 8022a16:	f009 faed 	bl	802bff4 <__assert_func>
 8022a1a:	ae03      	add	r6, sp, #12
 8022a1c:	e7c7      	b.n	80229ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8022a1e:	a803      	add	r0, sp, #12
 8022a20:	4606      	mov	r6, r0
 8022a22:	e7ce      	b.n	80229c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8022a24:	a803      	add	r0, sp, #12
 8022a26:	e7cc      	b.n	80229c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8022a28:	ad03      	add	r5, sp, #12
 8022a2a:	e7d8      	b.n	80229de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8022a2c:	ab03      	add	r3, sp, #12
 8022a2e:	461d      	mov	r5, r3
 8022a30:	e7e0      	b.n	80229f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8022a32:	ab03      	add	r3, sp, #12
 8022a34:	e7de      	b.n	80229f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8022a36:	b292      	uxth	r2, r2
 8022a38:	b2a4      	uxth	r4, r4
 8022a3a:	fb02 fe04 	mul.w	lr, r2, r4
 8022a3e:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8022a42:	0112      	lsls	r2, r2, #4
 8022a44:	b2a4      	uxth	r4, r4
 8022a46:	f890 c002 	ldrb.w	ip, [r0, #2]
 8022a4a:	f896 b002 	ldrb.w	fp, [r6, #2]
 8022a4e:	7840      	ldrb	r0, [r0, #1]
 8022a50:	7876      	ldrb	r6, [r6, #1]
 8022a52:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8022a56:	eba2 020e 	sub.w	r2, r2, lr
 8022a5a:	b292      	uxth	r2, r2
 8022a5c:	1b3f      	subs	r7, r7, r4
 8022a5e:	b2bf      	uxth	r7, r7
 8022a60:	fb02 fc0c 	mul.w	ip, r2, ip
 8022a64:	fb07 cc0b 	mla	ip, r7, fp, ip
 8022a68:	f895 b002 	ldrb.w	fp, [r5, #2]
 8022a6c:	fb04 cc0b 	mla	ip, r4, fp, ip
 8022a70:	f893 b002 	ldrb.w	fp, [r3, #2]
 8022a74:	785b      	ldrb	r3, [r3, #1]
 8022a76:	fb0e cc0b 	mla	ip, lr, fp, ip
 8022a7a:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8022a7e:	fb02 fc0a 	mul.w	ip, r2, sl
 8022a82:	4342      	muls	r2, r0
 8022a84:	7868      	ldrb	r0, [r5, #1]
 8022a86:	fb07 cc09 	mla	ip, r7, r9, ip
 8022a8a:	fb07 2206 	mla	r2, r7, r6, r2
 8022a8e:	fb04 cc08 	mla	ip, r4, r8, ip
 8022a92:	fb04 2400 	mla	r4, r4, r0, r2
 8022a96:	fb0e cc01 	mla	ip, lr, r1, ip
 8022a9a:	fb0e 4e03 	mla	lr, lr, r3, r4
 8022a9e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8022aa2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022aa6:	ea4c 0c0b 	orr.w	ip, ip, fp
 8022aaa:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022aae:	9b01      	ldr	r3, [sp, #4]
 8022ab0:	ea4c 0c0e 	orr.w	ip, ip, lr
 8022ab4:	f8a3 c000 	strh.w	ip, [r3]
 8022ab8:	b005      	add	sp, #20
 8022aba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022abe:	bf00      	nop
 8022ac0:	08035c27 	.word	0x08035c27
 8022ac4:	08036156 	.word	0x08036156
 8022ac8:	08035bf4 	.word	0x08035bf4

08022acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022acc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ad0:	ed2d 8b08 	vpush	{d8-d11}
 8022ad4:	b08f      	sub	sp, #60	; 0x3c
 8022ad6:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8022ada:	920c      	str	r2, [sp, #48]	; 0x30
 8022adc:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022ade:	910a      	str	r1, [sp, #40]	; 0x28
 8022ae0:	9306      	str	r3, [sp, #24]
 8022ae2:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8022ae6:	900d      	str	r0, [sp, #52]	; 0x34
 8022ae8:	6850      	ldr	r0, [r2, #4]
 8022aea:	6812      	ldr	r2, [r2, #0]
 8022aec:	fb00 1303 	mla	r3, r0, r3, r1
 8022af0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022af4:	9307      	str	r3, [sp, #28]
 8022af6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022af8:	681b      	ldr	r3, [r3, #0]
 8022afa:	9308      	str	r3, [sp, #32]
 8022afc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022afe:	685c      	ldr	r4, [r3, #4]
 8022b00:	eeb0 aa40 	vmov.f32	s20, s0
 8022b04:	eef0 9a60 	vmov.f32	s19, s1
 8022b08:	eeb0 9a41 	vmov.f32	s18, s2
 8022b0c:	eeb0 8a62 	vmov.f32	s16, s5
 8022b10:	eef0 8a43 	vmov.f32	s17, s6
 8022b14:	eef0 ba44 	vmov.f32	s23, s8
 8022b18:	eeb0 ba64 	vmov.f32	s22, s9
 8022b1c:	eef0 aa45 	vmov.f32	s21, s10
 8022b20:	3404      	adds	r4, #4
 8022b22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022b24:	2b00      	cmp	r3, #0
 8022b26:	dc03      	bgt.n	8022b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8022b28:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022b2a:	2b00      	cmp	r3, #0
 8022b2c:	f340 81d6 	ble.w	8022edc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8022b30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022b32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022b36:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022b3a:	1e48      	subs	r0, r1, #1
 8022b3c:	1e56      	subs	r6, r2, #1
 8022b3e:	9b06      	ldr	r3, [sp, #24]
 8022b40:	2b00      	cmp	r3, #0
 8022b42:	f340 80b7 	ble.w	8022cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8022b46:	ea5f 472b 	movs.w	r7, fp, asr #16
 8022b4a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022b4e:	d406      	bmi.n	8022b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022b50:	4287      	cmp	r7, r0
 8022b52:	da04      	bge.n	8022b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022b54:	2b00      	cmp	r3, #0
 8022b56:	db02      	blt.n	8022b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022b58:	42b3      	cmp	r3, r6
 8022b5a:	f2c0 80ac 	blt.w	8022cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8022b5e:	3701      	adds	r7, #1
 8022b60:	f100 809d 	bmi.w	8022c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022b64:	42b9      	cmp	r1, r7
 8022b66:	f2c0 809a 	blt.w	8022c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022b6a:	3301      	adds	r3, #1
 8022b6c:	f100 8097 	bmi.w	8022c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022b70:	429a      	cmp	r2, r3
 8022b72:	f2c0 8094 	blt.w	8022c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022b76:	9b06      	ldr	r3, [sp, #24]
 8022b78:	930b      	str	r3, [sp, #44]	; 0x2c
 8022b7a:	9b07      	ldr	r3, [sp, #28]
 8022b7c:	9309      	str	r3, [sp, #36]	; 0x24
 8022b7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022b80:	2b00      	cmp	r3, #0
 8022b82:	f340 80b5 	ble.w	8022cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8022b86:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8022b88:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8022b8a:	68c7      	ldr	r7, [r0, #12]
 8022b8c:	6892      	ldr	r2, [r2, #8]
 8022b8e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8022b92:	ea4f 4625 	mov.w	r6, r5, asr #16
 8022b96:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8022b9a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022b9e:	f100 80fb 	bmi.w	8022d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8022ba2:	f102 3cff 	add.w	ip, r2, #4294967295
 8022ba6:	4560      	cmp	r0, ip
 8022ba8:	f280 80f6 	bge.w	8022d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8022bac:	2e00      	cmp	r6, #0
 8022bae:	f2c0 80f3 	blt.w	8022d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8022bb2:	f107 3cff 	add.w	ip, r7, #4294967295
 8022bb6:	4566      	cmp	r6, ip
 8022bb8:	f280 80ee 	bge.w	8022d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8022bbc:	b212      	sxth	r2, r2
 8022bbe:	fb06 0002 	mla	r0, r6, r2, r0
 8022bc2:	9e08      	ldr	r6, [sp, #32]
 8022bc4:	1837      	adds	r7, r6, r0
 8022bc6:	5c30      	ldrb	r0, [r6, r0]
 8022bc8:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8022bcc:	eb04 0c08 	add.w	ip, r4, r8
 8022bd0:	2b00      	cmp	r3, #0
 8022bd2:	f000 80d3 	beq.w	8022d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8022bd6:	787e      	ldrb	r6, [r7, #1]
 8022bd8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022bdc:	4426      	add	r6, r4
 8022bde:	2900      	cmp	r1, #0
 8022be0:	f000 80d4 	beq.w	8022d8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8022be4:	18b8      	adds	r0, r7, r2
 8022be6:	5cba      	ldrb	r2, [r7, r2]
 8022be8:	7840      	ldrb	r0, [r0, #1]
 8022bea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022bee:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022bf2:	4422      	add	r2, r4
 8022bf4:	4420      	add	r0, r4
 8022bf6:	b29b      	uxth	r3, r3
 8022bf8:	b289      	uxth	r1, r1
 8022bfa:	fb03 f901 	mul.w	r9, r3, r1
 8022bfe:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022c02:	011b      	lsls	r3, r3, #4
 8022c04:	b289      	uxth	r1, r1
 8022c06:	78b7      	ldrb	r7, [r6, #2]
 8022c08:	f89c a002 	ldrb.w	sl, [ip, #2]
 8022c0c:	f89c c001 	ldrb.w	ip, [ip, #1]
 8022c10:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8022c14:	eba3 0309 	sub.w	r3, r3, r9
 8022c18:	b29b      	uxth	r3, r3
 8022c1a:	ebae 0e01 	sub.w	lr, lr, r1
 8022c1e:	fa1f fe8e 	uxth.w	lr, lr
 8022c22:	435f      	muls	r7, r3
 8022c24:	fb0e 770a 	mla	r7, lr, sl, r7
 8022c28:	f892 a002 	ldrb.w	sl, [r2, #2]
 8022c2c:	fb01 770a 	mla	r7, r1, sl, r7
 8022c30:	f890 a002 	ldrb.w	sl, [r0, #2]
 8022c34:	fb09 7a0a 	mla	sl, r9, sl, r7
 8022c38:	f814 7008 	ldrb.w	r7, [r4, r8]
 8022c3c:	f896 8000 	ldrb.w	r8, [r6]
 8022c40:	7876      	ldrb	r6, [r6, #1]
 8022c42:	fb03 f808 	mul.w	r8, r3, r8
 8022c46:	fb0e 8807 	mla	r8, lr, r7, r8
 8022c4a:	7817      	ldrb	r7, [r2, #0]
 8022c4c:	fb01 8807 	mla	r8, r1, r7, r8
 8022c50:	7807      	ldrb	r7, [r0, #0]
 8022c52:	fb09 8707 	mla	r7, r9, r7, r8
 8022c56:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8022c5a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022c5e:	ea47 070a 	orr.w	r7, r7, sl
 8022c62:	4373      	muls	r3, r6
 8022c64:	f892 a001 	ldrb.w	sl, [r2, #1]
 8022c68:	fb0e 330c 	mla	r3, lr, ip, r3
 8022c6c:	fb01 310a 	mla	r1, r1, sl, r3
 8022c70:	f890 a001 	ldrb.w	sl, [r0, #1]
 8022c74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022c76:	fb09 1a0a 	mla	sl, r9, sl, r1
 8022c7a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022c7e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8022c82:	ea47 070a 	orr.w	r7, r7, sl
 8022c86:	801f      	strh	r7, [r3, #0]
 8022c88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022c8a:	3302      	adds	r3, #2
 8022c8c:	9309      	str	r3, [sp, #36]	; 0x24
 8022c8e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8022c90:	449b      	add	fp, r3
 8022c92:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c94:	441d      	add	r5, r3
 8022c96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022c98:	3b01      	subs	r3, #1
 8022c9a:	930b      	str	r3, [sp, #44]	; 0x2c
 8022c9c:	e76f      	b.n	8022b7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8022c9e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8022ca0:	449b      	add	fp, r3
 8022ca2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ca4:	441d      	add	r5, r3
 8022ca6:	9b06      	ldr	r3, [sp, #24]
 8022ca8:	3b01      	subs	r3, #1
 8022caa:	9306      	str	r3, [sp, #24]
 8022cac:	9b07      	ldr	r3, [sp, #28]
 8022cae:	3302      	adds	r3, #2
 8022cb0:	9307      	str	r3, [sp, #28]
 8022cb2:	e744      	b.n	8022b3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022cb4:	d023      	beq.n	8022cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8022cb6:	9b06      	ldr	r3, [sp, #24]
 8022cb8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022cba:	3b01      	subs	r3, #1
 8022cbc:	fb00 b003 	mla	r0, r0, r3, fp
 8022cc0:	1400      	asrs	r0, r0, #16
 8022cc2:	f53f af58 	bmi.w	8022b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8022cc6:	3901      	subs	r1, #1
 8022cc8:	4288      	cmp	r0, r1
 8022cca:	f6bf af54 	bge.w	8022b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8022cce:	9924      	ldr	r1, [sp, #144]	; 0x90
 8022cd0:	fb01 5303 	mla	r3, r1, r3, r5
 8022cd4:	141b      	asrs	r3, r3, #16
 8022cd6:	f53f af4e 	bmi.w	8022b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8022cda:	3a01      	subs	r2, #1
 8022cdc:	4293      	cmp	r3, r2
 8022cde:	f6bf af4a 	bge.w	8022b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8022ce2:	9b06      	ldr	r3, [sp, #24]
 8022ce4:	9309      	str	r3, [sp, #36]	; 0x24
 8022ce6:	9b07      	ldr	r3, [sp, #28]
 8022ce8:	930b      	str	r3, [sp, #44]	; 0x2c
 8022cea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022cec:	2b00      	cmp	r3, #0
 8022cee:	dc70      	bgt.n	8022dd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8022cf0:	9b06      	ldr	r3, [sp, #24]
 8022cf2:	9a07      	ldr	r2, [sp, #28]
 8022cf4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8022cf8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022cfc:	9307      	str	r3, [sp, #28]
 8022cfe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022d00:	2b00      	cmp	r3, #0
 8022d02:	f340 80eb 	ble.w	8022edc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8022d06:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8022d0a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022d0e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8022d12:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d14:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8022d18:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8022d1c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8022d20:	eef0 6a48 	vmov.f32	s13, s16
 8022d24:	ee69 7a27 	vmul.f32	s15, s18, s15
 8022d28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022d2c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8022d30:	ee16 ba90 	vmov	fp, s13
 8022d34:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8022d38:	eef0 6a68 	vmov.f32	s13, s17
 8022d3c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8022d40:	ee18 2a10 	vmov	r2, s16
 8022d44:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8022d48:	fb92 f3f3 	sdiv	r3, r2, r3
 8022d4c:	ee18 2a90 	vmov	r2, s17
 8022d50:	9323      	str	r3, [sp, #140]	; 0x8c
 8022d52:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d54:	fb92 f3f3 	sdiv	r3, r2, r3
 8022d58:	9324      	str	r3, [sp, #144]	; 0x90
 8022d5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022d5c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022d5e:	3b01      	subs	r3, #1
 8022d60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022d64:	930a      	str	r3, [sp, #40]	; 0x28
 8022d66:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d68:	bf08      	it	eq
 8022d6a:	4613      	moveq	r3, r2
 8022d6c:	ee16 5a90 	vmov	r5, s13
 8022d70:	9306      	str	r3, [sp, #24]
 8022d72:	eef0 8a67 	vmov.f32	s17, s15
 8022d76:	eeb0 8a47 	vmov.f32	s16, s14
 8022d7a:	e6d2      	b.n	8022b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8022d7c:	b149      	cbz	r1, 8022d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8022d7e:	5cba      	ldrb	r2, [r7, r2]
 8022d80:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022d84:	4422      	add	r2, r4
 8022d86:	4660      	mov	r0, ip
 8022d88:	4666      	mov	r6, ip
 8022d8a:	e734      	b.n	8022bf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8022d8c:	4660      	mov	r0, ip
 8022d8e:	4662      	mov	r2, ip
 8022d90:	e731      	b.n	8022bf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8022d92:	4660      	mov	r0, ip
 8022d94:	4662      	mov	r2, ip
 8022d96:	e7f7      	b.n	8022d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8022d98:	f110 0c01 	adds.w	ip, r0, #1
 8022d9c:	f53f af74 	bmi.w	8022c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8022da0:	4562      	cmp	r2, ip
 8022da2:	f6ff af71 	blt.w	8022c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8022da6:	f116 0c01 	adds.w	ip, r6, #1
 8022daa:	f53f af6d 	bmi.w	8022c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8022dae:	4567      	cmp	r7, ip
 8022db0:	f6ff af6a 	blt.w	8022c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8022db4:	b23f      	sxth	r7, r7
 8022db6:	b212      	sxth	r2, r2
 8022db8:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8022dbc:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8022dc0:	9200      	str	r2, [sp, #0]
 8022dc2:	9701      	str	r7, [sp, #4]
 8022dc4:	4623      	mov	r3, r4
 8022dc6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8022dca:	980d      	ldr	r0, [sp, #52]	; 0x34
 8022dcc:	f7ff fdc2 	bl	8022954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8022dd0:	e75a      	b.n	8022c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8022dd2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8022dd4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8022dd8:	ea4f 462b 	mov.w	r6, fp, asr #16
 8022ddc:	1428      	asrs	r0, r5, #16
 8022dde:	fb02 6000 	mla	r0, r2, r0, r6
 8022de2:	9e08      	ldr	r6, [sp, #32]
 8022de4:	f816 8000 	ldrb.w	r8, [r6, r0]
 8022de8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8022dec:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8022df0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022df4:	1837      	adds	r7, r6, r0
 8022df6:	eb04 0c08 	add.w	ip, r4, r8
 8022dfa:	2b00      	cmp	r3, #0
 8022dfc:	d060      	beq.n	8022ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022dfe:	787e      	ldrb	r6, [r7, #1]
 8022e00:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022e04:	4426      	add	r6, r4
 8022e06:	2900      	cmp	r1, #0
 8022e08:	d062      	beq.n	8022ed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8022e0a:	18b8      	adds	r0, r7, r2
 8022e0c:	5cba      	ldrb	r2, [r7, r2]
 8022e0e:	7840      	ldrb	r0, [r0, #1]
 8022e10:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022e14:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022e18:	4422      	add	r2, r4
 8022e1a:	4420      	add	r0, r4
 8022e1c:	b29b      	uxth	r3, r3
 8022e1e:	b289      	uxth	r1, r1
 8022e20:	fb03 f901 	mul.w	r9, r3, r1
 8022e24:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022e28:	011b      	lsls	r3, r3, #4
 8022e2a:	b289      	uxth	r1, r1
 8022e2c:	78b7      	ldrb	r7, [r6, #2]
 8022e2e:	f89c a002 	ldrb.w	sl, [ip, #2]
 8022e32:	f89c c001 	ldrb.w	ip, [ip, #1]
 8022e36:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8022e3a:	eba3 0309 	sub.w	r3, r3, r9
 8022e3e:	b29b      	uxth	r3, r3
 8022e40:	ebae 0e01 	sub.w	lr, lr, r1
 8022e44:	fa1f fe8e 	uxth.w	lr, lr
 8022e48:	435f      	muls	r7, r3
 8022e4a:	fb0e 770a 	mla	r7, lr, sl, r7
 8022e4e:	f892 a002 	ldrb.w	sl, [r2, #2]
 8022e52:	fb01 770a 	mla	r7, r1, sl, r7
 8022e56:	f890 a002 	ldrb.w	sl, [r0, #2]
 8022e5a:	fb09 7a0a 	mla	sl, r9, sl, r7
 8022e5e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8022e62:	f896 8000 	ldrb.w	r8, [r6]
 8022e66:	7876      	ldrb	r6, [r6, #1]
 8022e68:	fb03 f808 	mul.w	r8, r3, r8
 8022e6c:	fb0e 8807 	mla	r8, lr, r7, r8
 8022e70:	7817      	ldrb	r7, [r2, #0]
 8022e72:	fb01 8807 	mla	r8, r1, r7, r8
 8022e76:	7807      	ldrb	r7, [r0, #0]
 8022e78:	fb09 8707 	mla	r7, r9, r7, r8
 8022e7c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8022e80:	4373      	muls	r3, r6
 8022e82:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022e86:	7856      	ldrb	r6, [r2, #1]
 8022e88:	ea47 070a 	orr.w	r7, r7, sl
 8022e8c:	fb0e 330c 	mla	r3, lr, ip, r3
 8022e90:	f890 a001 	ldrb.w	sl, [r0, #1]
 8022e94:	fb01 3306 	mla	r3, r1, r6, r3
 8022e98:	fb09 3a0a 	mla	sl, r9, sl, r3
 8022e9c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022ea0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022ea2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8022ea6:	ea47 070a 	orr.w	r7, r7, sl
 8022eaa:	f823 7b02 	strh.w	r7, [r3], #2
 8022eae:	930b      	str	r3, [sp, #44]	; 0x2c
 8022eb0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8022eb2:	449b      	add	fp, r3
 8022eb4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022eb6:	441d      	add	r5, r3
 8022eb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022eba:	3b01      	subs	r3, #1
 8022ebc:	9309      	str	r3, [sp, #36]	; 0x24
 8022ebe:	e714      	b.n	8022cea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8022ec0:	b149      	cbz	r1, 8022ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8022ec2:	5cba      	ldrb	r2, [r7, r2]
 8022ec4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022ec8:	4422      	add	r2, r4
 8022eca:	4660      	mov	r0, ip
 8022ecc:	4666      	mov	r6, ip
 8022ece:	e7a5      	b.n	8022e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022ed0:	4660      	mov	r0, ip
 8022ed2:	4662      	mov	r2, ip
 8022ed4:	e7a2      	b.n	8022e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022ed6:	4660      	mov	r0, ip
 8022ed8:	4662      	mov	r2, ip
 8022eda:	e7f7      	b.n	8022ecc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8022edc:	b00f      	add	sp, #60	; 0x3c
 8022ede:	ecbd 8b08 	vpop	{d8-d11}
 8022ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08022ee8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8022ee8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022eec:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 8022ef0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8022ef4:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8022ef8:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8022efc:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 8022f00:	fb04 560c 	mla	r6, r4, ip, r5
 8022f04:	2c00      	cmp	r4, #0
 8022f06:	eb02 0e06 	add.w	lr, r2, r6
 8022f0a:	db3d      	blt.n	8022f88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8022f0c:	45a0      	cmp	r8, r4
 8022f0e:	dd3b      	ble.n	8022f88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8022f10:	2d00      	cmp	r5, #0
 8022f12:	db37      	blt.n	8022f84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8022f14:	45ac      	cmp	ip, r5
 8022f16:	dd35      	ble.n	8022f84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8022f18:	5d92      	ldrb	r2, [r2, r6]
 8022f1a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8022f1e:	1c6e      	adds	r6, r5, #1
 8022f20:	d435      	bmi.n	8022f8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8022f22:	45b4      	cmp	ip, r6
 8022f24:	dd33      	ble.n	8022f8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8022f26:	b3a0      	cbz	r0, 8022f92 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 8022f28:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8022f2c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8022f30:	3401      	adds	r4, #1
 8022f32:	d432      	bmi.n	8022f9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8022f34:	45a0      	cmp	r8, r4
 8022f36:	dd30      	ble.n	8022f9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8022f38:	b397      	cbz	r7, 8022fa0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 8022f3a:	2d00      	cmp	r5, #0
 8022f3c:	db2b      	blt.n	8022f96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8022f3e:	45ac      	cmp	ip, r5
 8022f40:	dd29      	ble.n	8022f96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8022f42:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8022f46:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8022f4a:	3501      	adds	r5, #1
 8022f4c:	d42b      	bmi.n	8022fa6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8022f4e:	45ac      	cmp	ip, r5
 8022f50:	dd29      	ble.n	8022fa6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8022f52:	b350      	cbz	r0, 8022faa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8022f54:	44f4      	add	ip, lr
 8022f56:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8022f5a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8022f5e:	280f      	cmp	r0, #15
 8022f60:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8022f64:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8022f68:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022f6c:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8022f70:	d801      	bhi.n	8022f76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 8022f72:	2f0f      	cmp	r7, #15
 8022f74:	d91b      	bls.n	8022fae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 8022f76:	4b8d      	ldr	r3, [pc, #564]	; (80231ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8022f78:	4a8d      	ldr	r2, [pc, #564]	; (80231b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8022f7a:	488e      	ldr	r0, [pc, #568]	; (80231b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8022f7c:	f240 11f9 	movw	r1, #505	; 0x1f9
 8022f80:	f009 f838 	bl	802bff4 <__assert_func>
 8022f84:	2200      	movs	r2, #0
 8022f86:	e7ca      	b.n	8022f1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 8022f88:	2600      	movs	r6, #0
 8022f8a:	4632      	mov	r2, r6
 8022f8c:	e7d0      	b.n	8022f30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8022f8e:	2600      	movs	r6, #0
 8022f90:	e7ce      	b.n	8022f30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8022f92:	4606      	mov	r6, r0
 8022f94:	e7cc      	b.n	8022f30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8022f96:	2400      	movs	r4, #0
 8022f98:	e7d7      	b.n	8022f4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 8022f9a:	2300      	movs	r3, #0
 8022f9c:	461c      	mov	r4, r3
 8022f9e:	e7de      	b.n	8022f5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8022fa0:	463b      	mov	r3, r7
 8022fa2:	463c      	mov	r4, r7
 8022fa4:	e7db      	b.n	8022f5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8022fa6:	2300      	movs	r3, #0
 8022fa8:	e7d9      	b.n	8022f5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8022faa:	4603      	mov	r3, r0
 8022fac:	e7d7      	b.n	8022f5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8022fae:	b280      	uxth	r0, r0
 8022fb0:	b2bf      	uxth	r7, r7
 8022fb2:	fb07 fe00 	mul.w	lr, r7, r0
 8022fb6:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8022fba:	0100      	lsls	r0, r0, #4
 8022fbc:	eba0 0c0e 	sub.w	ip, r0, lr
 8022fc0:	b2bf      	uxth	r7, r7
 8022fc2:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8022fc6:	fa1f fc8c 	uxth.w	ip, ip
 8022fca:	1bed      	subs	r5, r5, r7
 8022fcc:	b2ad      	uxth	r5, r5
 8022fce:	fb0a f00c 	mul.w	r0, sl, ip
 8022fd2:	fb0b 0005 	mla	r0, fp, r5, r0
 8022fd6:	fb07 0009 	mla	r0, r7, r9, r0
 8022fda:	fb0e 0008 	mla	r0, lr, r8, r0
 8022fde:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8022fe2:	9001      	str	r0, [sp, #4]
 8022fe4:	2800      	cmp	r0, #0
 8022fe6:	f000 80de 	beq.w	80231a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 8022fea:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8022fee:	d018      	beq.n	8023022 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 8022ff0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8022ff4:	fb0b f000 	mul.w	r0, fp, r0
 8022ff8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022ffc:	fb0b fb02 	mul.w	fp, fp, r2
 8023000:	0a02      	lsrs	r2, r0, #8
 8023002:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023006:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 802300a:	4402      	add	r2, r0
 802300c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8023010:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8023014:	0a12      	lsrs	r2, r2, #8
 8023016:	0a00      	lsrs	r0, r0, #8
 8023018:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802301c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8023020:	4302      	orrs	r2, r0
 8023022:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8023026:	d01a      	beq.n	802305e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 8023028:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 802302c:	fb0a f000 	mul.w	r0, sl, r0
 8023030:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8023034:	fb0a fa06 	mul.w	sl, sl, r6
 8023038:	0a06      	lsrs	r6, r0, #8
 802303a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 802303e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8023042:	4406      	add	r6, r0
 8023044:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8023048:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802304c:	0a36      	lsrs	r6, r6, #8
 802304e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023052:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8023056:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802305a:	ea46 060a 	orr.w	r6, r6, sl
 802305e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023062:	d01b      	beq.n	802309c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 8023064:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8023068:	fb09 fa0a 	mul.w	sl, r9, sl
 802306c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023070:	fb09 f004 	mul.w	r0, r9, r4
 8023074:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8023078:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802307c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023080:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8023084:	4454      	add	r4, sl
 8023086:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 802308a:	0a24      	lsrs	r4, r4, #8
 802308c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023090:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023094:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023098:	ea44 0409 	orr.w	r4, r4, r9
 802309c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80230a0:	d01b      	beq.n	80230da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 80230a2:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80230a6:	fb08 f909 	mul.w	r9, r8, r9
 80230aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80230ae:	fb08 f003 	mul.w	r0, r8, r3
 80230b2:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80230b6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80230ba:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80230be:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80230c2:	444b      	add	r3, r9
 80230c4:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80230c8:	0a1b      	lsrs	r3, r3, #8
 80230ca:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80230ce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80230d2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80230d6:	ea43 0308 	orr.w	r3, r3, r8
 80230da:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80230de:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80230e2:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 80230e6:	fb0c f808 	mul.w	r8, ip, r8
 80230ea:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80230ee:	fb0c f606 	mul.w	r6, ip, r6
 80230f2:	fb05 8909 	mla	r9, r5, r9, r8
 80230f6:	fb05 6502 	mla	r5, r5, r2, r6
 80230fa:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80230fe:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8023102:	9a01      	ldr	r2, [sp, #4]
 8023104:	8808      	ldrh	r0, [r1, #0]
 8023106:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802310a:	fb07 9908 	mla	r9, r7, r8, r9
 802310e:	fb07 5704 	mla	r7, r7, r4, r5
 8023112:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8023116:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802311a:	b2b6      	uxth	r6, r6
 802311c:	fb0e 9808 	mla	r8, lr, r8, r9
 8023120:	fb0e 7e03 	mla	lr, lr, r3, r7
 8023124:	4372      	muls	r2, r6
 8023126:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802312a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802312e:	1c53      	adds	r3, r2, #1
 8023130:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8023134:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8023138:	ea48 0e0e 	orr.w	lr, r8, lr
 802313c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023140:	1205      	asrs	r5, r0, #8
 8023142:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8023146:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802314a:	b2db      	uxtb	r3, r3
 802314c:	fb12 f206 	smulbb	r2, r2, r6
 8023150:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023154:	fb05 2503 	mla	r5, r5, r3, r2
 8023158:	f3ce 2407 	ubfx	r4, lr, #8, #8
 802315c:	10c2      	asrs	r2, r0, #3
 802315e:	fa5f fe8e 	uxtb.w	lr, lr
 8023162:	00c0      	lsls	r0, r0, #3
 8023164:	fb14 f406 	smulbb	r4, r4, r6
 8023168:	b2c0      	uxtb	r0, r0
 802316a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802316e:	fb1e fe06 	smulbb	lr, lr, r6
 8023172:	fb02 4203 	mla	r2, r2, r3, r4
 8023176:	b2ad      	uxth	r5, r5
 8023178:	fb00 e303 	mla	r3, r0, r3, lr
 802317c:	b298      	uxth	r0, r3
 802317e:	b294      	uxth	r4, r2
 8023180:	1c6b      	adds	r3, r5, #1
 8023182:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023186:	1c62      	adds	r2, r4, #1
 8023188:	1c43      	adds	r3, r0, #1
 802318a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802318e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023192:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023196:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802319a:	0952      	lsrs	r2, r2, #5
 802319c:	432b      	orrs	r3, r5
 802319e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80231a2:	4313      	orrs	r3, r2
 80231a4:	800b      	strh	r3, [r1, #0]
 80231a6:	b003      	add	sp, #12
 80231a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231ac:	08035c27 	.word	0x08035c27
 80231b0:	08036156 	.word	0x08036156
 80231b4:	08035bf4 	.word	0x08035bf4

080231b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80231b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80231bc:	ed2d 8b08 	vpush	{d8-d11}
 80231c0:	b09f      	sub	sp, #124	; 0x7c
 80231c2:	eeb0 aa40 	vmov.f32	s20, s0
 80231c6:	921b      	str	r2, [sp, #108]	; 0x6c
 80231c8:	9309      	str	r3, [sp, #36]	; 0x24
 80231ca:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80231cc:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 80231d0:	931c      	str	r3, [sp, #112]	; 0x70
 80231d2:	9119      	str	r1, [sp, #100]	; 0x64
 80231d4:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 80231d8:	901d      	str	r0, [sp, #116]	; 0x74
 80231da:	6850      	ldr	r0, [r2, #4]
 80231dc:	6812      	ldr	r2, [r2, #0]
 80231de:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 80231e0:	fb00 1303 	mla	r3, r0, r3, r1
 80231e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80231e8:	930c      	str	r3, [sp, #48]	; 0x30
 80231ea:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80231ec:	681b      	ldr	r3, [r3, #0]
 80231ee:	9312      	str	r3, [sp, #72]	; 0x48
 80231f0:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80231f2:	685e      	ldr	r6, [r3, #4]
 80231f4:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80231f8:	930d      	str	r3, [sp, #52]	; 0x34
 80231fa:	eef0 9a60 	vmov.f32	s19, s1
 80231fe:	eeb0 9a41 	vmov.f32	s18, s2
 8023202:	eeb0 8a62 	vmov.f32	s16, s5
 8023206:	eef0 8a43 	vmov.f32	s17, s6
 802320a:	eef0 ba44 	vmov.f32	s23, s8
 802320e:	eeb0 ba64 	vmov.f32	s22, s9
 8023212:	eef0 aa45 	vmov.f32	s21, s10
 8023216:	3604      	adds	r6, #4
 8023218:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802321a:	2b00      	cmp	r3, #0
 802321c:	dc03      	bgt.n	8023226 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802321e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023220:	2b00      	cmp	r3, #0
 8023222:	f340 8388 	ble.w	8023936 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8023226:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8023228:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802322c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023230:	1e48      	subs	r0, r1, #1
 8023232:	1e57      	subs	r7, r2, #1
 8023234:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023236:	2b00      	cmp	r3, #0
 8023238:	f340 8195 	ble.w	8023566 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802323c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 802323e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023242:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023246:	d406      	bmi.n	8023256 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023248:	4584      	cmp	ip, r0
 802324a:	da04      	bge.n	8023256 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802324c:	2b00      	cmp	r3, #0
 802324e:	db02      	blt.n	8023256 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023250:	42bb      	cmp	r3, r7
 8023252:	f2c0 8189 	blt.w	8023568 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8023256:	f11c 0c01 	adds.w	ip, ip, #1
 802325a:	f100 8177 	bmi.w	802354c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802325e:	4561      	cmp	r1, ip
 8023260:	f2c0 8174 	blt.w	802354c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8023264:	3301      	adds	r3, #1
 8023266:	f100 8171 	bmi.w	802354c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802326a:	429a      	cmp	r2, r3
 802326c:	f2c0 816e 	blt.w	802354c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8023270:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023272:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8023274:	931a      	str	r3, [sp, #104]	; 0x68
 8023276:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8023278:	2b00      	cmp	r3, #0
 802327a:	f340 8193 	ble.w	80235a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802327e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8023280:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023284:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8023286:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 802328a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 802328c:	141b      	asrs	r3, r3, #16
 802328e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8023292:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023296:	f100 81d6 	bmi.w	8023646 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802329a:	f100 38ff 	add.w	r8, r0, #4294967295
 802329e:	4543      	cmp	r3, r8
 80232a0:	f280 81d1 	bge.w	8023646 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80232a4:	f1bc 0f00 	cmp.w	ip, #0
 80232a8:	f2c0 81cd 	blt.w	8023646 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80232ac:	f10e 38ff 	add.w	r8, lr, #4294967295
 80232b0:	45c4      	cmp	ip, r8
 80232b2:	f280 81c8 	bge.w	8023646 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80232b6:	b200      	sxth	r0, r0
 80232b8:	fb0c 3300 	mla	r3, ip, r0, r3
 80232bc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80232be:	eb04 0803 	add.w	r8, r4, r3
 80232c2:	5ce3      	ldrb	r3, [r4, r3]
 80232c4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80232c8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80232cc:	2a00      	cmp	r2, #0
 80232ce:	f000 81af 	beq.w	8023630 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 80232d2:	f898 c001 	ldrb.w	ip, [r8, #1]
 80232d6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80232da:	940e      	str	r4, [sp, #56]	; 0x38
 80232dc:	0e24      	lsrs	r4, r4, #24
 80232de:	9415      	str	r4, [sp, #84]	; 0x54
 80232e0:	b179      	cbz	r1, 8023302 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80232e2:	eb08 0c00 	add.w	ip, r8, r0
 80232e6:	f818 0000 	ldrb.w	r0, [r8, r0]
 80232ea:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80232ee:	900a      	str	r0, [sp, #40]	; 0x28
 80232f0:	0e00      	lsrs	r0, r0, #24
 80232f2:	9013      	str	r0, [sp, #76]	; 0x4c
 80232f4:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80232f8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80232fc:	900f      	str	r0, [sp, #60]	; 0x3c
 80232fe:	0e00      	lsrs	r0, r0, #24
 8023300:	9016      	str	r0, [sp, #88]	; 0x58
 8023302:	b292      	uxth	r2, r2
 8023304:	b289      	uxth	r1, r1
 8023306:	fb02 f901 	mul.w	r9, r2, r1
 802330a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802330e:	0112      	lsls	r2, r2, #4
 8023310:	eba2 0809 	sub.w	r8, r2, r9
 8023314:	b289      	uxth	r1, r1
 8023316:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802331a:	9815      	ldr	r0, [sp, #84]	; 0x54
 802331c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802331e:	fa1f f888 	uxth.w	r8, r8
 8023322:	1a52      	subs	r2, r2, r1
 8023324:	b292      	uxth	r2, r2
 8023326:	fb08 f000 	mul.w	r0, r8, r0
 802332a:	fb02 000e 	mla	r0, r2, lr, r0
 802332e:	fb01 0004 	mla	r0, r1, r4, r0
 8023332:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8023334:	fb09 0004 	mla	r0, r9, r4, r0
 8023338:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802333c:	2800      	cmp	r0, #0
 802333e:	f000 80fa 	beq.w	8023536 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023342:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023346:	d01b      	beq.n	8023380 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8023348:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802334c:	fb0e fa0a 	mul.w	sl, lr, sl
 8023350:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023354:	fb0e fe03 	mul.w	lr, lr, r3
 8023358:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802335c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023360:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023364:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023368:	4453      	add	r3, sl
 802336a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802336e:	0a1b      	lsrs	r3, r3, #8
 8023370:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023374:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023378:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802337c:	ea43 030c 	orr.w	r3, r3, ip
 8023380:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023382:	2cff      	cmp	r4, #255	; 0xff
 8023384:	d021      	beq.n	80233ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023386:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023388:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802338c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802338e:	fb04 fb0b 	mul.w	fp, r4, fp
 8023392:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023394:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023398:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802339a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802339e:	fb04 fa0a 	mul.w	sl, r4, sl
 80233a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80233a6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80233aa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80233ae:	44de      	add	lr, fp
 80233b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80233b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80233b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80233bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80233c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80233c4:	ea4e 040a 	orr.w	r4, lr, sl
 80233c8:	940e      	str	r4, [sp, #56]	; 0x38
 80233ca:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80233cc:	2cff      	cmp	r4, #255	; 0xff
 80233ce:	d021      	beq.n	8023414 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 80233d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80233d2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80233d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80233d8:	fb04 fb0b 	mul.w	fp, r4, fp
 80233dc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80233de:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80233e2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80233e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80233e8:	fb04 fa0a 	mul.w	sl, r4, sl
 80233ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80233f0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80233f4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80233f8:	44de      	add	lr, fp
 80233fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80233fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023402:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023406:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802340a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802340e:	ea4e 040a 	orr.w	r4, lr, sl
 8023412:	940a      	str	r4, [sp, #40]	; 0x28
 8023414:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8023416:	2cff      	cmp	r4, #255	; 0xff
 8023418:	d021      	beq.n	802345e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 802341a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802341c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023420:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8023422:	fb04 fb0b 	mul.w	fp, r4, fp
 8023426:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023428:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802342c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802342e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023432:	fb04 fa0a 	mul.w	sl, r4, sl
 8023436:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802343a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802343e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023442:	44de      	add	lr, fp
 8023444:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023448:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802344c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023450:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023454:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023458:	ea4e 040a 	orr.w	r4, lr, sl
 802345c:	940f      	str	r4, [sp, #60]	; 0x3c
 802345e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023460:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023464:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023466:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802346a:	fb08 fc0c 	mul.w	ip, r8, ip
 802346e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023472:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023476:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023478:	fb01 cc0e 	mla	ip, r1, lr, ip
 802347c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023480:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023482:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023486:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802348a:	fb08 f80e 	mul.w	r8, r8, lr
 802348e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023492:	fb02 8303 	mla	r3, r2, r3, r8
 8023496:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023498:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802349a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802349e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80234a0:	fb01 330a 	mla	r3, r1, sl, r3
 80234a4:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80234a8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80234aa:	fb09 3901 	mla	r9, r9, r1, r3
 80234ae:	4342      	muls	r2, r0
 80234b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80234b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80234b8:	883b      	ldrh	r3, [r7, #0]
 80234ba:	1c50      	adds	r0, r2, #1
 80234bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80234c0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80234c4:	ea4c 0c09 	orr.w	ip, ip, r9
 80234c8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80234cc:	1219      	asrs	r1, r3, #8
 80234ce:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80234d2:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80234d6:	b2c0      	uxtb	r0, r0
 80234d8:	fb12 f204 	smulbb	r2, r2, r4
 80234dc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80234e0:	fb01 2100 	mla	r1, r1, r0, r2
 80234e4:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80234e8:	10da      	asrs	r2, r3, #3
 80234ea:	fa5f fc8c 	uxtb.w	ip, ip
 80234ee:	00db      	lsls	r3, r3, #3
 80234f0:	fb1c fc04 	smulbb	ip, ip, r4
 80234f4:	b2db      	uxtb	r3, r3
 80234f6:	b289      	uxth	r1, r1
 80234f8:	fb03 c300 	mla	r3, r3, r0, ip
 80234fc:	fa1f fc83 	uxth.w	ip, r3
 8023500:	1c4b      	adds	r3, r1, #1
 8023502:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023506:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802350a:	fb1e fe04 	smulbb	lr, lr, r4
 802350e:	f10c 0301 	add.w	r3, ip, #1
 8023512:	fb02 e200 	mla	r2, r2, r0, lr
 8023516:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802351a:	b292      	uxth	r2, r2
 802351c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023520:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023524:	430b      	orrs	r3, r1
 8023526:	1c51      	adds	r1, r2, #1
 8023528:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802352c:	0952      	lsrs	r2, r2, #5
 802352e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023532:	4313      	orrs	r3, r2
 8023534:	803b      	strh	r3, [r7, #0]
 8023536:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8023538:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 802353a:	441a      	add	r2, r3
 802353c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 802353e:	9231      	str	r2, [sp, #196]	; 0xc4
 8023540:	441d      	add	r5, r3
 8023542:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8023544:	3b01      	subs	r3, #1
 8023546:	3702      	adds	r7, #2
 8023548:	931a      	str	r3, [sp, #104]	; 0x68
 802354a:	e694      	b.n	8023276 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802354c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 802354e:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8023550:	441c      	add	r4, r3
 8023552:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023554:	9431      	str	r4, [sp, #196]	; 0xc4
 8023556:	441d      	add	r5, r3
 8023558:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802355a:	3b01      	subs	r3, #1
 802355c:	9309      	str	r3, [sp, #36]	; 0x24
 802355e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023560:	3302      	adds	r3, #2
 8023562:	930c      	str	r3, [sp, #48]	; 0x30
 8023564:	e666      	b.n	8023234 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023566:	d024      	beq.n	80235b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8023568:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802356a:	9833      	ldr	r0, [sp, #204]	; 0xcc
 802356c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 802356e:	3b01      	subs	r3, #1
 8023570:	fb00 4003 	mla	r0, r0, r3, r4
 8023574:	1400      	asrs	r0, r0, #16
 8023576:	f53f ae7b 	bmi.w	8023270 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802357a:	3901      	subs	r1, #1
 802357c:	4288      	cmp	r0, r1
 802357e:	f6bf ae77 	bge.w	8023270 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8023582:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8023584:	fb01 5303 	mla	r3, r1, r3, r5
 8023588:	141b      	asrs	r3, r3, #16
 802358a:	f53f ae71 	bmi.w	8023270 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802358e:	3a01      	subs	r2, #1
 8023590:	4293      	cmp	r3, r2
 8023592:	f6bf ae6d 	bge.w	8023270 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8023596:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802359a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 802359e:	f1bb 0f00 	cmp.w	fp, #0
 80235a2:	dc70      	bgt.n	8023686 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 80235a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80235a6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80235aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80235ac:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80235b0:	930c      	str	r3, [sp, #48]	; 0x30
 80235b2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80235b4:	2b00      	cmp	r3, #0
 80235b6:	f340 81be 	ble.w	8023936 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80235ba:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80235be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80235c2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80235c6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80235c8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80235cc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80235d0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80235d4:	eef0 6a48 	vmov.f32	s13, s16
 80235d8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80235dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235e0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80235e4:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 80235e8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80235ec:	eef0 6a68 	vmov.f32	s13, s17
 80235f0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80235f4:	ee18 2a10 	vmov	r2, s16
 80235f8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80235fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8023600:	ee18 2a90 	vmov	r2, s17
 8023604:	9333      	str	r3, [sp, #204]	; 0xcc
 8023606:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023608:	fb92 f3f3 	sdiv	r3, r2, r3
 802360c:	9334      	str	r3, [sp, #208]	; 0xd0
 802360e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023610:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8023612:	3b01      	subs	r3, #1
 8023614:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023618:	9319      	str	r3, [sp, #100]	; 0x64
 802361a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802361c:	bf08      	it	eq
 802361e:	4613      	moveq	r3, r2
 8023620:	ee16 5a90 	vmov	r5, s13
 8023624:	9309      	str	r3, [sp, #36]	; 0x24
 8023626:	eef0 8a67 	vmov.f32	s17, s15
 802362a:	eeb0 8a47 	vmov.f32	s16, s14
 802362e:	e5f3      	b.n	8023218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8023630:	2900      	cmp	r1, #0
 8023632:	f43f ae66 	beq.w	8023302 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023636:	f818 0000 	ldrb.w	r0, [r8, r0]
 802363a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802363e:	900a      	str	r0, [sp, #40]	; 0x28
 8023640:	0e00      	lsrs	r0, r0, #24
 8023642:	9013      	str	r0, [sp, #76]	; 0x4c
 8023644:	e65d      	b.n	8023302 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8023646:	f113 0801 	adds.w	r8, r3, #1
 802364a:	f53f af74 	bmi.w	8023536 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802364e:	4540      	cmp	r0, r8
 8023650:	f6ff af71 	blt.w	8023536 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023654:	f11c 0801 	adds.w	r8, ip, #1
 8023658:	f53f af6d 	bmi.w	8023536 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802365c:	45c6      	cmp	lr, r8
 802365e:	f6ff af6a 	blt.w	8023536 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023662:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8023664:	9302      	str	r3, [sp, #8]
 8023666:	b200      	sxth	r0, r0
 8023668:	fa0f f38e 	sxth.w	r3, lr
 802366c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8023670:	e9cd c203 	strd	ip, r2, [sp, #12]
 8023674:	9301      	str	r3, [sp, #4]
 8023676:	9000      	str	r0, [sp, #0]
 8023678:	4633      	mov	r3, r6
 802367a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802367c:	981d      	ldr	r0, [sp, #116]	; 0x74
 802367e:	4639      	mov	r1, r7
 8023680:	f7ff fc32 	bl	8022ee8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8023684:	e757      	b.n	8023536 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023686:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8023688:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 802368a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802368e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8023690:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023694:	1427      	asrs	r7, r4, #16
 8023696:	142b      	asrs	r3, r5, #16
 8023698:	fb01 7303 	mla	r3, r1, r3, r7
 802369c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802369e:	18e7      	adds	r7, r4, r3
 80236a0:	5ce3      	ldrb	r3, [r4, r3]
 80236a2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80236a6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80236aa:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80236ae:	2a00      	cmp	r2, #0
 80236b0:	f000 8137 	beq.w	8023922 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80236b4:	f897 e001 	ldrb.w	lr, [r7, #1]
 80236b8:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80236bc:	9410      	str	r4, [sp, #64]	; 0x40
 80236be:	0e24      	lsrs	r4, r4, #24
 80236c0:	9417      	str	r4, [sp, #92]	; 0x5c
 80236c2:	b170      	cbz	r0, 80236e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80236c4:	eb07 0e01 	add.w	lr, r7, r1
 80236c8:	5c79      	ldrb	r1, [r7, r1]
 80236ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80236ce:	910b      	str	r1, [sp, #44]	; 0x2c
 80236d0:	0e09      	lsrs	r1, r1, #24
 80236d2:	9114      	str	r1, [sp, #80]	; 0x50
 80236d4:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80236d8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80236dc:	9111      	str	r1, [sp, #68]	; 0x44
 80236de:	0e09      	lsrs	r1, r1, #24
 80236e0:	9118      	str	r1, [sp, #96]	; 0x60
 80236e2:	b292      	uxth	r2, r2
 80236e4:	b280      	uxth	r0, r0
 80236e6:	fb02 f800 	mul.w	r8, r2, r0
 80236ea:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80236ee:	0112      	lsls	r2, r2, #4
 80236f0:	eba2 0e08 	sub.w	lr, r2, r8
 80236f4:	b280      	uxth	r0, r0
 80236f6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80236fa:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80236fc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80236fe:	fa1f fe8e 	uxth.w	lr, lr
 8023702:	1a12      	subs	r2, r2, r0
 8023704:	b292      	uxth	r2, r2
 8023706:	fb0e f101 	mul.w	r1, lr, r1
 802370a:	fb02 110c 	mla	r1, r2, ip, r1
 802370e:	fb00 1104 	mla	r1, r0, r4, r1
 8023712:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8023714:	fb08 1104 	mla	r1, r8, r4, r1
 8023718:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802371c:	2900      	cmp	r1, #0
 802371e:	f000 80f5 	beq.w	802390c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8023722:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023726:	d019      	beq.n	802375c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023728:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802372c:	fb0c fa0a 	mul.w	sl, ip, sl
 8023730:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023734:	fb0c fc03 	mul.w	ip, ip, r3
 8023738:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802373c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023740:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023744:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023748:	4453      	add	r3, sl
 802374a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802374e:	0a1b      	lsrs	r3, r3, #8
 8023750:	0a3f      	lsrs	r7, r7, #8
 8023752:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023756:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802375a:	433b      	orrs	r3, r7
 802375c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802375e:	2cff      	cmp	r4, #255	; 0xff
 8023760:	d020      	beq.n	80237a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023762:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023764:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023768:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802376a:	4367      	muls	r7, r4
 802376c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802376e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023772:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8023774:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023778:	fb04 fa0a 	mul.w	sl, r4, sl
 802377c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023780:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023784:	44bc      	add	ip, r7
 8023786:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802378a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802378e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023792:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023796:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802379a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802379e:	ea4c 040a 	orr.w	r4, ip, sl
 80237a2:	9410      	str	r4, [sp, #64]	; 0x40
 80237a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80237a6:	2cff      	cmp	r4, #255	; 0xff
 80237a8:	d020      	beq.n	80237ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80237aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80237ac:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80237b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80237b2:	4367      	muls	r7, r4
 80237b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80237b6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80237ba:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80237bc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80237c0:	fb04 fa0a 	mul.w	sl, r4, sl
 80237c4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80237c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80237cc:	44bc      	add	ip, r7
 80237ce:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80237d2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80237d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80237da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80237de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80237e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80237e6:	ea4c 040a 	orr.w	r4, ip, sl
 80237ea:	940b      	str	r4, [sp, #44]	; 0x2c
 80237ec:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80237ee:	2cff      	cmp	r4, #255	; 0xff
 80237f0:	d020      	beq.n	8023834 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 80237f2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80237f4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80237f8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80237fa:	4367      	muls	r7, r4
 80237fc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80237fe:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023802:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8023804:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023808:	fb04 fa0a 	mul.w	sl, r4, sl
 802380c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023810:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023814:	44bc      	add	ip, r7
 8023816:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802381a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802381e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023822:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023826:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802382a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802382e:	ea4c 040a 	orr.w	r4, ip, sl
 8023832:	9411      	str	r4, [sp, #68]	; 0x44
 8023834:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023836:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802383a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802383c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023840:	fb0e f707 	mul.w	r7, lr, r7
 8023844:	fb02 770c 	mla	r7, r2, ip, r7
 8023848:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802384c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802384e:	fb00 770c 	mla	r7, r0, ip, r7
 8023852:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023856:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023858:	fb08 770c 	mla	r7, r8, ip, r7
 802385c:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8023860:	fb0e fe0c 	mul.w	lr, lr, ip
 8023864:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023868:	fb02 e303 	mla	r3, r2, r3, lr
 802386c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802386e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023870:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023874:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8023876:	fb00 330a 	mla	r3, r0, sl, r3
 802387a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802387e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023882:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023884:	f8b9 0000 	ldrh.w	r0, [r9]
 8023888:	434b      	muls	r3, r1
 802388a:	0a3f      	lsrs	r7, r7, #8
 802388c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023890:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023894:	1c59      	adds	r1, r3, #1
 8023896:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802389a:	ea47 070c 	orr.w	r7, r7, ip
 802389e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80238a2:	1202      	asrs	r2, r0, #8
 80238a4:	0c3b      	lsrs	r3, r7, #16
 80238a6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80238aa:	b2c9      	uxtb	r1, r1
 80238ac:	fb13 f304 	smulbb	r3, r3, r4
 80238b0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80238b4:	fb02 3201 	mla	r2, r2, r1, r3
 80238b8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80238bc:	10c3      	asrs	r3, r0, #3
 80238be:	b2ff      	uxtb	r7, r7
 80238c0:	00c0      	lsls	r0, r0, #3
 80238c2:	b292      	uxth	r2, r2
 80238c4:	fb1c fc04 	smulbb	ip, ip, r4
 80238c8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80238cc:	b2c0      	uxtb	r0, r0
 80238ce:	fb17 f704 	smulbb	r7, r7, r4
 80238d2:	fb03 c301 	mla	r3, r3, r1, ip
 80238d6:	fb00 7001 	mla	r0, r0, r1, r7
 80238da:	f102 0c01 	add.w	ip, r2, #1
 80238de:	b280      	uxth	r0, r0
 80238e0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80238e4:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80238e8:	1c42      	adds	r2, r0, #1
 80238ea:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80238ee:	b29b      	uxth	r3, r3
 80238f0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80238f4:	ea42 020c 	orr.w	r2, r2, ip
 80238f8:	f103 0c01 	add.w	ip, r3, #1
 80238fc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023900:	095b      	lsrs	r3, r3, #5
 8023902:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023906:	431a      	orrs	r2, r3
 8023908:	f8a9 2000 	strh.w	r2, [r9]
 802390c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 802390e:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8023910:	441a      	add	r2, r3
 8023912:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023914:	9231      	str	r2, [sp, #196]	; 0xc4
 8023916:	f109 0902 	add.w	r9, r9, #2
 802391a:	441d      	add	r5, r3
 802391c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023920:	e63d      	b.n	802359e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023922:	2800      	cmp	r0, #0
 8023924:	f43f aedd 	beq.w	80236e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8023928:	5c79      	ldrb	r1, [r7, r1]
 802392a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802392e:	910b      	str	r1, [sp, #44]	; 0x2c
 8023930:	0e09      	lsrs	r1, r1, #24
 8023932:	9114      	str	r1, [sp, #80]	; 0x50
 8023934:	e6d5      	b.n	80236e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8023936:	b01f      	add	sp, #124	; 0x7c
 8023938:	ecbd 8b08 	vpop	{d8-d11}
 802393c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023940 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8023940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023944:	880e      	ldrh	r6, [r1, #0]
 8023946:	b085      	sub	sp, #20
 8023948:	ea4f 2826 	mov.w	r8, r6, asr #8
 802394c:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8023950:	4691      	mov	r9, r2
 8023952:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8023956:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 802395a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802395e:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8023962:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8023966:	ea4f 08e6 	mov.w	r8, r6, asr #3
 802396a:	9200      	str	r2, [sp, #0]
 802396c:	00f6      	lsls	r6, r6, #3
 802396e:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8023972:	9201      	str	r2, [sp, #4]
 8023974:	2c00      	cmp	r4, #0
 8023976:	b2f2      	uxtb	r2, r6
 8023978:	fb04 560c 	mla	r6, r4, ip, r5
 802397c:	9202      	str	r2, [sp, #8]
 802397e:	eb09 0806 	add.w	r8, r9, r6
 8023982:	db3f      	blt.n	8023a04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8023984:	45a6      	cmp	lr, r4
 8023986:	dd3d      	ble.n	8023a04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8023988:	2d00      	cmp	r5, #0
 802398a:	db39      	blt.n	8023a00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 802398c:	45ac      	cmp	ip, r5
 802398e:	dd37      	ble.n	8023a00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8023990:	f819 2006 	ldrb.w	r2, [r9, r6]
 8023994:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8023998:	1c6e      	adds	r6, r5, #1
 802399a:	d436      	bmi.n	8023a0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 802399c:	45b4      	cmp	ip, r6
 802399e:	dd34      	ble.n	8023a0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 80239a0:	b3a8      	cbz	r0, 8023a0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 80239a2:	f898 6001 	ldrb.w	r6, [r8, #1]
 80239a6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 80239aa:	3401      	adds	r4, #1
 80239ac:	d433      	bmi.n	8023a16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80239ae:	45a6      	cmp	lr, r4
 80239b0:	dd31      	ble.n	8023a16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80239b2:	b39f      	cbz	r7, 8023a1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 80239b4:	2d00      	cmp	r5, #0
 80239b6:	eb08 0e0c 	add.w	lr, r8, ip
 80239ba:	db2a      	blt.n	8023a12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 80239bc:	45ac      	cmp	ip, r5
 80239be:	dd28      	ble.n	8023a12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 80239c0:	f818 400c 	ldrb.w	r4, [r8, ip]
 80239c4:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 80239c8:	3501      	adds	r5, #1
 80239ca:	d42a      	bmi.n	8023a22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 80239cc:	45ac      	cmp	ip, r5
 80239ce:	dd28      	ble.n	8023a22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 80239d0:	b348      	cbz	r0, 8023a26 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 80239d2:	f89e 5001 	ldrb.w	r5, [lr, #1]
 80239d6:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80239da:	280f      	cmp	r0, #15
 80239dc:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80239e0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80239e4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80239e8:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80239ec:	d801      	bhi.n	80239f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 80239ee:	2f0f      	cmp	r7, #15
 80239f0:	d91b      	bls.n	8023a2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 80239f2:	4b7d      	ldr	r3, [pc, #500]	; (8023be8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 80239f4:	4a7d      	ldr	r2, [pc, #500]	; (8023bec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 80239f6:	487e      	ldr	r0, [pc, #504]	; (8023bf0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 80239f8:	f240 11f9 	movw	r1, #505	; 0x1f9
 80239fc:	f008 fafa 	bl	802bff4 <__assert_func>
 8023a00:	2200      	movs	r2, #0
 8023a02:	e7c9      	b.n	8023998 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8023a04:	2600      	movs	r6, #0
 8023a06:	4632      	mov	r2, r6
 8023a08:	e7cf      	b.n	80239aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8023a0a:	2600      	movs	r6, #0
 8023a0c:	e7cd      	b.n	80239aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8023a0e:	4606      	mov	r6, r0
 8023a10:	e7cb      	b.n	80239aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8023a12:	2400      	movs	r4, #0
 8023a14:	e7d8      	b.n	80239c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8023a16:	2300      	movs	r3, #0
 8023a18:	461c      	mov	r4, r3
 8023a1a:	e7de      	b.n	80239da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8023a1c:	463b      	mov	r3, r7
 8023a1e:	463c      	mov	r4, r7
 8023a20:	e7db      	b.n	80239da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8023a22:	2300      	movs	r3, #0
 8023a24:	e7d9      	b.n	80239da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8023a26:	4603      	mov	r3, r0
 8023a28:	e7d7      	b.n	80239da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8023a2a:	b280      	uxth	r0, r0
 8023a2c:	b2bf      	uxth	r7, r7
 8023a2e:	fb00 fe07 	mul.w	lr, r0, r7
 8023a32:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8023a36:	0100      	lsls	r0, r0, #4
 8023a38:	eba0 0c0e 	sub.w	ip, r0, lr
 8023a3c:	b2bf      	uxth	r7, r7
 8023a3e:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8023a42:	fa1f fc8c 	uxth.w	ip, ip
 8023a46:	1bed      	subs	r5, r5, r7
 8023a48:	b2ad      	uxth	r5, r5
 8023a4a:	fb0c f00a 	mul.w	r0, ip, sl
 8023a4e:	fb05 000b 	mla	r0, r5, fp, r0
 8023a52:	fb07 0009 	mla	r0, r7, r9, r0
 8023a56:	fb0e 0008 	mla	r0, lr, r8, r0
 8023a5a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023a5e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8023a62:	9003      	str	r0, [sp, #12]
 8023a64:	d018      	beq.n	8023a98 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8023a66:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8023a6a:	fb0b f000 	mul.w	r0, fp, r0
 8023a6e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023a72:	fb0b fb02 	mul.w	fp, fp, r2
 8023a76:	0a02      	lsrs	r2, r0, #8
 8023a78:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023a7c:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8023a80:	4402      	add	r2, r0
 8023a82:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8023a86:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8023a8a:	0a12      	lsrs	r2, r2, #8
 8023a8c:	0a00      	lsrs	r0, r0, #8
 8023a8e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023a92:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8023a96:	4302      	orrs	r2, r0
 8023a98:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8023a9c:	d019      	beq.n	8023ad2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8023a9e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8023aa2:	fb0a fb0b 	mul.w	fp, sl, fp
 8023aa6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8023aaa:	fb0a fa06 	mul.w	sl, sl, r6
 8023aae:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8023ab2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8023ab6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023aba:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8023abe:	445e      	add	r6, fp
 8023ac0:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023ac4:	0a36      	lsrs	r6, r6, #8
 8023ac6:	0a00      	lsrs	r0, r0, #8
 8023ac8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8023acc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8023ad0:	4306      	orrs	r6, r0
 8023ad2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023ad6:	d019      	beq.n	8023b0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8023ad8:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8023adc:	fb09 fa0a 	mul.w	sl, r9, sl
 8023ae0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023ae4:	fb09 f904 	mul.w	r9, r9, r4
 8023ae8:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8023aec:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023af0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023af4:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8023af8:	4454      	add	r4, sl
 8023afa:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8023afe:	0a24      	lsrs	r4, r4, #8
 8023b00:	0a00      	lsrs	r0, r0, #8
 8023b02:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023b06:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8023b0a:	4304      	orrs	r4, r0
 8023b0c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023b10:	d019      	beq.n	8023b46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8023b12:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8023b16:	fb08 f909 	mul.w	r9, r8, r9
 8023b1a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023b1e:	fb08 f803 	mul.w	r8, r8, r3
 8023b22:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8023b26:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023b2a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8023b2e:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8023b32:	444b      	add	r3, r9
 8023b34:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023b38:	0a1b      	lsrs	r3, r3, #8
 8023b3a:	0a00      	lsrs	r0, r0, #8
 8023b3c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023b40:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8023b44:	4303      	orrs	r3, r0
 8023b46:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8023b4a:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8023b4e:	fb0c f808 	mul.w	r8, ip, r8
 8023b52:	fb05 8800 	mla	r8, r5, r0, r8
 8023b56:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8023b5a:	fb07 8800 	mla	r8, r7, r0, r8
 8023b5e:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8023b62:	fb0e 8000 	mla	r0, lr, r0, r8
 8023b66:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8023b6a:	fb0c f606 	mul.w	r6, ip, r6
 8023b6e:	0a00      	lsrs	r0, r0, #8
 8023b70:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023b74:	fb05 6202 	mla	r2, r5, r2, r6
 8023b78:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8023b7c:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8023b80:	fb07 2700 	mla	r7, r7, r0, r2
 8023b84:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8023b88:	9b03      	ldr	r3, [sp, #12]
 8023b8a:	9d00      	ldr	r5, [sp, #0]
 8023b8c:	9a02      	ldr	r2, [sp, #8]
 8023b8e:	fb0e 7000 	mla	r0, lr, r0, r7
 8023b92:	43dc      	mvns	r4, r3
 8023b94:	9b01      	ldr	r3, [sp, #4]
 8023b96:	b2e4      	uxtb	r4, r4
 8023b98:	0a00      	lsrs	r0, r0, #8
 8023b9a:	4363      	muls	r3, r4
 8023b9c:	4365      	muls	r5, r4
 8023b9e:	4362      	muls	r2, r4
 8023ba0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8023ba4:	ea48 0000 	orr.w	r0, r8, r0
 8023ba8:	4614      	mov	r4, r2
 8023baa:	1c5e      	adds	r6, r3, #1
 8023bac:	1c6a      	adds	r2, r5, #1
 8023bae:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8023bb2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8023bb6:	0a03      	lsrs	r3, r0, #8
 8023bb8:	0c02      	lsrs	r2, r0, #16
 8023bba:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8023bbe:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8023bc2:	00db      	lsls	r3, r3, #3
 8023bc4:	0212      	lsls	r2, r2, #8
 8023bc6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023bca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023bce:	4313      	orrs	r3, r2
 8023bd0:	1c62      	adds	r2, r4, #1
 8023bd2:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8023bd6:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8023bda:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8023bde:	4318      	orrs	r0, r3
 8023be0:	8008      	strh	r0, [r1, #0]
 8023be2:	b005      	add	sp, #20
 8023be4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023be8:	08035c27 	.word	0x08035c27
 8023bec:	08036156 	.word	0x08036156
 8023bf0:	08035bf4 	.word	0x08035bf4

08023bf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023bf8:	ed2d 8b08 	vpush	{d8-d11}
 8023bfc:	b09b      	sub	sp, #108	; 0x6c
 8023bfe:	eeb0 aa40 	vmov.f32	s20, s0
 8023c02:	9218      	str	r2, [sp, #96]	; 0x60
 8023c04:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8023c06:	9116      	str	r1, [sp, #88]	; 0x58
 8023c08:	9307      	str	r3, [sp, #28]
 8023c0a:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8023c0e:	9019      	str	r0, [sp, #100]	; 0x64
 8023c10:	6850      	ldr	r0, [r2, #4]
 8023c12:	6812      	ldr	r2, [r2, #0]
 8023c14:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8023c16:	fb00 1303 	mla	r3, r0, r3, r1
 8023c1a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023c1e:	930a      	str	r3, [sp, #40]	; 0x28
 8023c20:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023c22:	681b      	ldr	r3, [r3, #0]
 8023c24:	930f      	str	r3, [sp, #60]	; 0x3c
 8023c26:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023c28:	685e      	ldr	r6, [r3, #4]
 8023c2a:	eef0 9a60 	vmov.f32	s19, s1
 8023c2e:	eeb0 9a41 	vmov.f32	s18, s2
 8023c32:	eeb0 8a62 	vmov.f32	s16, s5
 8023c36:	eef0 8a43 	vmov.f32	s17, s6
 8023c3a:	eef0 ba44 	vmov.f32	s23, s8
 8023c3e:	eeb0 ba64 	vmov.f32	s22, s9
 8023c42:	eef0 aa45 	vmov.f32	s21, s10
 8023c46:	3604      	adds	r6, #4
 8023c48:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023c4a:	2b00      	cmp	r3, #0
 8023c4c:	dc03      	bgt.n	8023c56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8023c4e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023c50:	2b00      	cmp	r3, #0
 8023c52:	f340 8373 	ble.w	802433c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8023c56:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023c58:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023c5c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023c60:	1e48      	subs	r0, r1, #1
 8023c62:	1e57      	subs	r7, r2, #1
 8023c64:	9b07      	ldr	r3, [sp, #28]
 8023c66:	2b00      	cmp	r3, #0
 8023c68:	f340 8190 	ble.w	8023f8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8023c6c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8023c6e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023c72:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023c76:	d406      	bmi.n	8023c86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023c78:	4584      	cmp	ip, r0
 8023c7a:	da04      	bge.n	8023c86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023c7c:	2b00      	cmp	r3, #0
 8023c7e:	db02      	blt.n	8023c86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023c80:	42bb      	cmp	r3, r7
 8023c82:	f2c0 8184 	blt.w	8023f8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8023c86:	f11c 0c01 	adds.w	ip, ip, #1
 8023c8a:	f100 8172 	bmi.w	8023f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023c8e:	4561      	cmp	r1, ip
 8023c90:	f2c0 816f 	blt.w	8023f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023c94:	3301      	adds	r3, #1
 8023c96:	f100 816c 	bmi.w	8023f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023c9a:	429a      	cmp	r2, r3
 8023c9c:	f2c0 8169 	blt.w	8023f72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8023ca0:	9b07      	ldr	r3, [sp, #28]
 8023ca2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023ca4:	9317      	str	r3, [sp, #92]	; 0x5c
 8023ca6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023ca8:	2b00      	cmp	r3, #0
 8023caa:	f340 818e 	ble.w	8023fca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8023cae:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8023cb0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023cb4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023cb6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8023cba:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8023cbc:	141b      	asrs	r3, r3, #16
 8023cbe:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8023cc2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8023cc6:	f100 81d1 	bmi.w	802406c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8023cca:	f101 38ff 	add.w	r8, r1, #4294967295
 8023cce:	4543      	cmp	r3, r8
 8023cd0:	f280 81cc 	bge.w	802406c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8023cd4:	f1bc 0f00 	cmp.w	ip, #0
 8023cd8:	f2c0 81c8 	blt.w	802406c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8023cdc:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023ce0:	45c4      	cmp	ip, r8
 8023ce2:	f280 81c3 	bge.w	802406c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8023ce6:	b209      	sxth	r1, r1
 8023ce8:	fb0c 3301 	mla	r3, ip, r1, r3
 8023cec:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023cee:	eb04 0803 	add.w	r8, r4, r3
 8023cf2:	5ce3      	ldrb	r3, [r4, r3]
 8023cf4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023cf8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8023cfc:	2a00      	cmp	r2, #0
 8023cfe:	f000 81aa 	beq.w	8024056 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8023d02:	f898 c001 	ldrb.w	ip, [r8, #1]
 8023d06:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8023d0a:	940b      	str	r4, [sp, #44]	; 0x2c
 8023d0c:	0e24      	lsrs	r4, r4, #24
 8023d0e:	9412      	str	r4, [sp, #72]	; 0x48
 8023d10:	b178      	cbz	r0, 8023d32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8023d12:	eb08 0c01 	add.w	ip, r8, r1
 8023d16:	f818 1001 	ldrb.w	r1, [r8, r1]
 8023d1a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023d1e:	9108      	str	r1, [sp, #32]
 8023d20:	0e09      	lsrs	r1, r1, #24
 8023d22:	9110      	str	r1, [sp, #64]	; 0x40
 8023d24:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8023d28:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023d2c:	910c      	str	r1, [sp, #48]	; 0x30
 8023d2e:	0e09      	lsrs	r1, r1, #24
 8023d30:	9113      	str	r1, [sp, #76]	; 0x4c
 8023d32:	b292      	uxth	r2, r2
 8023d34:	b280      	uxth	r0, r0
 8023d36:	fb02 f900 	mul.w	r9, r2, r0
 8023d3a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023d3e:	0112      	lsls	r2, r2, #4
 8023d40:	eba2 0809 	sub.w	r8, r2, r9
 8023d44:	b280      	uxth	r0, r0
 8023d46:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023d4a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023d4c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023d4e:	fa1f f888 	uxth.w	r8, r8
 8023d52:	1a12      	subs	r2, r2, r0
 8023d54:	b292      	uxth	r2, r2
 8023d56:	fb08 f101 	mul.w	r1, r8, r1
 8023d5a:	fb02 110e 	mla	r1, r2, lr, r1
 8023d5e:	fb00 1104 	mla	r1, r0, r4, r1
 8023d62:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023d64:	fb09 1104 	mla	r1, r9, r4, r1
 8023d68:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023d6c:	2900      	cmp	r1, #0
 8023d6e:	f000 80f5 	beq.w	8023f5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023d72:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023d76:	d01b      	beq.n	8023db0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8023d78:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023d7c:	fb0e fa0a 	mul.w	sl, lr, sl
 8023d80:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023d84:	fb0e fe03 	mul.w	lr, lr, r3
 8023d88:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023d8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023d90:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023d94:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023d98:	4453      	add	r3, sl
 8023d9a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023d9e:	0a1b      	lsrs	r3, r3, #8
 8023da0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023da4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023da8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023dac:	ea43 030c 	orr.w	r3, r3, ip
 8023db0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023db2:	2cff      	cmp	r4, #255	; 0xff
 8023db4:	d021      	beq.n	8023dfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8023db6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023db8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023dbc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023dbe:	fb04 fb0b 	mul.w	fp, r4, fp
 8023dc2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023dc4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023dc8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023dca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023dce:	fb04 fa0a 	mul.w	sl, r4, sl
 8023dd2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023dd6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023dda:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023dde:	44de      	add	lr, fp
 8023de0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023de4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023de8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023dec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023df0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023df4:	ea4e 040a 	orr.w	r4, lr, sl
 8023df8:	940b      	str	r4, [sp, #44]	; 0x2c
 8023dfa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023dfc:	2cff      	cmp	r4, #255	; 0xff
 8023dfe:	d021      	beq.n	8023e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8023e00:	9c08      	ldr	r4, [sp, #32]
 8023e02:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023e06:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023e08:	fb04 fb0b 	mul.w	fp, r4, fp
 8023e0c:	9c08      	ldr	r4, [sp, #32]
 8023e0e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023e12:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023e14:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023e18:	fb04 fa0a 	mul.w	sl, r4, sl
 8023e1c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e20:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023e24:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023e28:	44de      	add	lr, fp
 8023e2a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023e2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e3a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e3e:	ea4e 040a 	orr.w	r4, lr, sl
 8023e42:	9408      	str	r4, [sp, #32]
 8023e44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023e46:	2cff      	cmp	r4, #255	; 0xff
 8023e48:	d021      	beq.n	8023e8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8023e4a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023e4c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023e50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023e52:	fb04 fb0b 	mul.w	fp, r4, fp
 8023e56:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023e58:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023e5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023e5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023e62:	fb04 fa0a 	mul.w	sl, r4, sl
 8023e66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e6a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023e6e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023e72:	44de      	add	lr, fp
 8023e74:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023e78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e88:	ea4e 040a 	orr.w	r4, lr, sl
 8023e8c:	940c      	str	r4, [sp, #48]	; 0x30
 8023e8e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023e90:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023e94:	9c08      	ldr	r4, [sp, #32]
 8023e96:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8023e9a:	fb08 fc0c 	mul.w	ip, r8, ip
 8023e9e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023ea2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023ea6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023ea8:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023eac:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023eb0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023eb2:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023eb6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8023eba:	fb08 f80e 	mul.w	r8, r8, lr
 8023ebe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023ec2:	fb02 8303 	mla	r3, r2, r3, r8
 8023ec6:	9a08      	ldr	r2, [sp, #32]
 8023ec8:	f8b7 8000 	ldrh.w	r8, [r7]
 8023ecc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023ed0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023ed2:	fb00 330a 	mla	r3, r0, sl, r3
 8023ed6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8023eda:	fb09 3900 	mla	r9, r9, r0, r3
 8023ede:	43c9      	mvns	r1, r1
 8023ee0:	ea4f 2228 	mov.w	r2, r8, asr #8
 8023ee4:	fa5f fe81 	uxtb.w	lr, r1
 8023ee8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023eec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023ef0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023ef4:	fb02 f20e 	mul.w	r2, r2, lr
 8023ef8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023efc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023f00:	ea4c 0c09 	orr.w	ip, ip, r9
 8023f04:	1c53      	adds	r3, r2, #1
 8023f06:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8023f0a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8023f0e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8023f12:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023f16:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023f1a:	4a63      	ldr	r2, [pc, #396]	; (80240a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8023f1c:	fb00 f00e 	mul.w	r0, r0, lr
 8023f20:	b2db      	uxtb	r3, r3
 8023f22:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8023f26:	1c43      	adds	r3, r0, #1
 8023f28:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023f2c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8023f30:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8023f34:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023f38:	b2c9      	uxtb	r1, r1
 8023f3a:	00db      	lsls	r3, r3, #3
 8023f3c:	fb01 f10e 	mul.w	r1, r1, lr
 8023f40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023f44:	4313      	orrs	r3, r2
 8023f46:	1c4a      	adds	r2, r1, #1
 8023f48:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023f4c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023f50:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023f54:	ea4c 0c03 	orr.w	ip, ip, r3
 8023f58:	f8a7 c000 	strh.w	ip, [r7]
 8023f5c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8023f5e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8023f60:	441a      	add	r2, r3
 8023f62:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f64:	922d      	str	r2, [sp, #180]	; 0xb4
 8023f66:	441d      	add	r5, r3
 8023f68:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023f6a:	3b01      	subs	r3, #1
 8023f6c:	3702      	adds	r7, #2
 8023f6e:	9317      	str	r3, [sp, #92]	; 0x5c
 8023f70:	e699      	b.n	8023ca6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8023f72:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8023f74:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8023f76:	441c      	add	r4, r3
 8023f78:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f7a:	942d      	str	r4, [sp, #180]	; 0xb4
 8023f7c:	441d      	add	r5, r3
 8023f7e:	9b07      	ldr	r3, [sp, #28]
 8023f80:	3b01      	subs	r3, #1
 8023f82:	9307      	str	r3, [sp, #28]
 8023f84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023f86:	3302      	adds	r3, #2
 8023f88:	930a      	str	r3, [sp, #40]	; 0x28
 8023f8a:	e66b      	b.n	8023c64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023f8c:	d024      	beq.n	8023fd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8023f8e:	9b07      	ldr	r3, [sp, #28]
 8023f90:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8023f92:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8023f94:	3b01      	subs	r3, #1
 8023f96:	fb00 4003 	mla	r0, r0, r3, r4
 8023f9a:	1400      	asrs	r0, r0, #16
 8023f9c:	f53f ae80 	bmi.w	8023ca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8023fa0:	3901      	subs	r1, #1
 8023fa2:	4288      	cmp	r0, r1
 8023fa4:	f6bf ae7c 	bge.w	8023ca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8023fa8:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8023faa:	fb01 5303 	mla	r3, r1, r3, r5
 8023fae:	141b      	asrs	r3, r3, #16
 8023fb0:	f53f ae76 	bmi.w	8023ca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8023fb4:	3a01      	subs	r2, #1
 8023fb6:	4293      	cmp	r3, r2
 8023fb8:	f6bf ae72 	bge.w	8023ca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8023fbc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023fc0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023fc4:	f1bb 0f00 	cmp.w	fp, #0
 8023fc8:	dc70      	bgt.n	80240ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8023fca:	9b07      	ldr	r3, [sp, #28]
 8023fcc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023fd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023fd2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023fd6:	930a      	str	r3, [sp, #40]	; 0x28
 8023fd8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023fda:	2b00      	cmp	r3, #0
 8023fdc:	f340 81ae 	ble.w	802433c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8023fe0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8023fe4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023fe8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8023fec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023fee:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8023ff2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8023ff6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8023ffa:	eef0 6a48 	vmov.f32	s13, s16
 8023ffe:	ee69 7a27 	vmul.f32	s15, s18, s15
 8024002:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024006:	ee37 8a48 	vsub.f32	s16, s14, s16
 802400a:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 802400e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8024012:	eef0 6a68 	vmov.f32	s13, s17
 8024016:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802401a:	ee18 2a10 	vmov	r2, s16
 802401e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8024022:	fb92 f3f3 	sdiv	r3, r2, r3
 8024026:	ee18 2a90 	vmov	r2, s17
 802402a:	932f      	str	r3, [sp, #188]	; 0xbc
 802402c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802402e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024032:	9330      	str	r3, [sp, #192]	; 0xc0
 8024034:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024036:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024038:	3b01      	subs	r3, #1
 802403a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802403e:	9316      	str	r3, [sp, #88]	; 0x58
 8024040:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024042:	bf08      	it	eq
 8024044:	4613      	moveq	r3, r2
 8024046:	ee16 5a90 	vmov	r5, s13
 802404a:	9307      	str	r3, [sp, #28]
 802404c:	eef0 8a67 	vmov.f32	s17, s15
 8024050:	eeb0 8a47 	vmov.f32	s16, s14
 8024054:	e5f8      	b.n	8023c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8024056:	2800      	cmp	r0, #0
 8024058:	f43f ae6b 	beq.w	8023d32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802405c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024060:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024064:	9108      	str	r1, [sp, #32]
 8024066:	0e09      	lsrs	r1, r1, #24
 8024068:	9110      	str	r1, [sp, #64]	; 0x40
 802406a:	e662      	b.n	8023d32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802406c:	f113 0801 	adds.w	r8, r3, #1
 8024070:	f53f af74 	bmi.w	8023f5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8024074:	4541      	cmp	r1, r8
 8024076:	f6ff af71 	blt.w	8023f5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802407a:	f11c 0801 	adds.w	r8, ip, #1
 802407e:	f53f af6d 	bmi.w	8023f5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8024082:	45c6      	cmp	lr, r8
 8024084:	f6ff af6a 	blt.w	8023f5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8024088:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 802408c:	b209      	sxth	r1, r1
 802408e:	fa0f f38e 	sxth.w	r3, lr
 8024092:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8024096:	9301      	str	r3, [sp, #4]
 8024098:	9100      	str	r1, [sp, #0]
 802409a:	4633      	mov	r3, r6
 802409c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802409e:	9819      	ldr	r0, [sp, #100]	; 0x64
 80240a0:	4639      	mov	r1, r7
 80240a2:	f7ff fc4d 	bl	8023940 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80240a6:	e759      	b.n	8023f5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80240a8:	fffff800 	.word	0xfffff800
 80240ac:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80240ae:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80240b0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80240b4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80240b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80240ba:	1427      	asrs	r7, r4, #16
 80240bc:	142b      	asrs	r3, r5, #16
 80240be:	fb01 7303 	mla	r3, r1, r3, r7
 80240c2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80240c4:	18e7      	adds	r7, r4, r3
 80240c6:	5ce3      	ldrb	r3, [r4, r3]
 80240c8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80240cc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80240d0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80240d4:	2a00      	cmp	r2, #0
 80240d6:	f000 8127 	beq.w	8024328 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80240da:	f897 e001 	ldrb.w	lr, [r7, #1]
 80240de:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80240e2:	940d      	str	r4, [sp, #52]	; 0x34
 80240e4:	0e24      	lsrs	r4, r4, #24
 80240e6:	9414      	str	r4, [sp, #80]	; 0x50
 80240e8:	b170      	cbz	r0, 8024108 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80240ea:	eb07 0e01 	add.w	lr, r7, r1
 80240ee:	5c79      	ldrb	r1, [r7, r1]
 80240f0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80240f4:	9109      	str	r1, [sp, #36]	; 0x24
 80240f6:	0e09      	lsrs	r1, r1, #24
 80240f8:	9111      	str	r1, [sp, #68]	; 0x44
 80240fa:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80240fe:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024102:	910e      	str	r1, [sp, #56]	; 0x38
 8024104:	0e09      	lsrs	r1, r1, #24
 8024106:	9115      	str	r1, [sp, #84]	; 0x54
 8024108:	b292      	uxth	r2, r2
 802410a:	b280      	uxth	r0, r0
 802410c:	fb02 f800 	mul.w	r8, r2, r0
 8024110:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024114:	0112      	lsls	r2, r2, #4
 8024116:	eba2 0e08 	sub.w	lr, r2, r8
 802411a:	b280      	uxth	r0, r0
 802411c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024120:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024122:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024124:	fa1f fe8e 	uxth.w	lr, lr
 8024128:	1a09      	subs	r1, r1, r0
 802412a:	b289      	uxth	r1, r1
 802412c:	fb0e f202 	mul.w	r2, lr, r2
 8024130:	fb01 220c 	mla	r2, r1, ip, r2
 8024134:	fb00 2204 	mla	r2, r0, r4, r2
 8024138:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802413a:	fb08 2204 	mla	r2, r8, r4, r2
 802413e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024142:	2a00      	cmp	r2, #0
 8024144:	f000 80e5 	beq.w	8024312 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8024148:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802414c:	d019      	beq.n	8024182 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 802414e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024152:	fb0c fa0a 	mul.w	sl, ip, sl
 8024156:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802415a:	fb0c fc03 	mul.w	ip, ip, r3
 802415e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024162:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024166:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802416a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802416e:	4453      	add	r3, sl
 8024170:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024174:	0a1b      	lsrs	r3, r3, #8
 8024176:	0a3f      	lsrs	r7, r7, #8
 8024178:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802417c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024180:	433b      	orrs	r3, r7
 8024182:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024184:	2cff      	cmp	r4, #255	; 0xff
 8024186:	d020      	beq.n	80241ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8024188:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802418a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802418e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024190:	4367      	muls	r7, r4
 8024192:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024194:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024198:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802419a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802419e:	fb04 fa0a 	mul.w	sl, r4, sl
 80241a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80241a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241aa:	44bc      	add	ip, r7
 80241ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80241b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80241b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241c4:	ea4c 040a 	orr.w	r4, ip, sl
 80241c8:	940d      	str	r4, [sp, #52]	; 0x34
 80241ca:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80241cc:	2cff      	cmp	r4, #255	; 0xff
 80241ce:	d020      	beq.n	8024212 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 80241d0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80241d2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80241d6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80241d8:	4367      	muls	r7, r4
 80241da:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80241dc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80241e0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80241e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80241e6:	fb04 fa0a 	mul.w	sl, r4, sl
 80241ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80241ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241f2:	44bc      	add	ip, r7
 80241f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80241f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80241fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024200:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024204:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024208:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802420c:	ea4c 040a 	orr.w	r4, ip, sl
 8024210:	9409      	str	r4, [sp, #36]	; 0x24
 8024212:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024214:	2cff      	cmp	r4, #255	; 0xff
 8024216:	d020      	beq.n	802425a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 8024218:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802421a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802421e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024220:	4367      	muls	r7, r4
 8024222:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024224:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024228:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802422a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802422e:	fb04 fa0a 	mul.w	sl, r4, sl
 8024232:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024236:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802423a:	44bc      	add	ip, r7
 802423c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024240:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024244:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024248:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802424c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024250:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024254:	ea4c 040a 	orr.w	r4, ip, sl
 8024258:	940e      	str	r4, [sp, #56]	; 0x38
 802425a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802425c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024260:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024262:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024266:	fb0e f707 	mul.w	r7, lr, r7
 802426a:	fb01 770c 	mla	r7, r1, ip, r7
 802426e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024272:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024274:	fb00 770c 	mla	r7, r0, ip, r7
 8024278:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802427c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802427e:	fb08 770c 	mla	r7, r8, ip, r7
 8024282:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024286:	fb0e fe0c 	mul.w	lr, lr, ip
 802428a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802428e:	fb01 e303 	mla	r3, r1, r3, lr
 8024292:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024294:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024298:	990e      	ldr	r1, [sp, #56]	; 0x38
 802429a:	fb00 330a 	mla	r3, r0, sl, r3
 802429e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80242a2:	fb08 3c0c 	mla	ip, r8, ip, r3
 80242a6:	f8b9 3000 	ldrh.w	r3, [r9]
 80242aa:	43d2      	mvns	r2, r2
 80242ac:	1218      	asrs	r0, r3, #8
 80242ae:	b2d2      	uxtb	r2, r2
 80242b0:	10d9      	asrs	r1, r3, #3
 80242b2:	0a3f      	lsrs	r7, r7, #8
 80242b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80242b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80242bc:	00db      	lsls	r3, r3, #3
 80242be:	4350      	muls	r0, r2
 80242c0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80242c4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80242c8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80242cc:	b2db      	uxtb	r3, r3
 80242ce:	ea47 070c 	orr.w	r7, r7, ip
 80242d2:	4351      	muls	r1, r2
 80242d4:	4353      	muls	r3, r2
 80242d6:	1c42      	adds	r2, r0, #1
 80242d8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80242dc:	0c3a      	lsrs	r2, r7, #16
 80242de:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80242e2:	4a19      	ldr	r2, [pc, #100]	; (8024348 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 80242e4:	b2c0      	uxtb	r0, r0
 80242e6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80242ea:	1c4a      	adds	r2, r1, #1
 80242ec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80242f0:	0a3a      	lsrs	r2, r7, #8
 80242f2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80242f6:	00c9      	lsls	r1, r1, #3
 80242f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80242fc:	4301      	orrs	r1, r0
 80242fe:	1c58      	adds	r0, r3, #1
 8024300:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024304:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8024308:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 802430c:	4308      	orrs	r0, r1
 802430e:	f8a9 0000 	strh.w	r0, [r9]
 8024312:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8024314:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8024316:	441a      	add	r2, r3
 8024318:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802431a:	922d      	str	r2, [sp, #180]	; 0xb4
 802431c:	f109 0902 	add.w	r9, r9, #2
 8024320:	441d      	add	r5, r3
 8024322:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024326:	e64d      	b.n	8023fc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8024328:	2800      	cmp	r0, #0
 802432a:	f43f aeed 	beq.w	8024108 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 802432e:	5c79      	ldrb	r1, [r7, r1]
 8024330:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024334:	9109      	str	r1, [sp, #36]	; 0x24
 8024336:	0e09      	lsrs	r1, r1, #24
 8024338:	9111      	str	r1, [sp, #68]	; 0x44
 802433a:	e6e5      	b.n	8024108 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 802433c:	b01b      	add	sp, #108	; 0x6c
 802433e:	ecbd 8b08 	vpop	{d8-d11}
 8024342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024346:	bf00      	nop
 8024348:	fffff800 	.word	0xfffff800

0802434c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 802434c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024350:	b085      	sub	sp, #20
 8024352:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8024356:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802435a:	9103      	str	r1, [sp, #12]
 802435c:	fb05 7106 	mla	r1, r5, r6, r7
 8024360:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8024364:	2d00      	cmp	r5, #0
 8024366:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 802436a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802436e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8024372:	9401      	str	r4, [sp, #4]
 8024374:	eb03 0901 	add.w	r9, r3, r1
 8024378:	f2c0 80c0 	blt.w	80244fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 802437c:	45a8      	cmp	r8, r5
 802437e:	f340 80bd 	ble.w	80244fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8024382:	2f00      	cmp	r7, #0
 8024384:	f2c0 80b6 	blt.w	80244f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8024388:	42be      	cmp	r6, r7
 802438a:	f340 80b3 	ble.w	80244f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 802438e:	f813 c001 	ldrb.w	ip, [r3, r1]
 8024392:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8024396:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802439a:	d019      	beq.n	80243d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 802439c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80243a0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80243a4:	435a      	muls	r2, r3
 80243a6:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80243aa:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80243ae:	fb0c f403 	mul.w	r4, ip, r3
 80243b2:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80243b6:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80243ba:	441a      	add	r2, r3
 80243bc:	f104 0320 	add.w	r3, r4, #32
 80243c0:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80243c4:	0a1b      	lsrs	r3, r3, #8
 80243c6:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80243ca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80243ce:	4319      	orrs	r1, r3
 80243d0:	b289      	uxth	r1, r1
 80243d2:	1c7b      	adds	r3, r7, #1
 80243d4:	f100 8097 	bmi.w	8024506 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80243d8:	429e      	cmp	r6, r3
 80243da:	f340 8094 	ble.w	8024506 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80243de:	2800      	cmp	r0, #0
 80243e0:	f000 8094 	beq.w	802450c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 80243e4:	f899 4001 	ldrb.w	r4, [r9, #1]
 80243e8:	9b01      	ldr	r3, [sp, #4]
 80243ea:	2cff      	cmp	r4, #255	; 0xff
 80243ec:	885b      	ldrh	r3, [r3, #2]
 80243ee:	d01b      	beq.n	8024428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 80243f0:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80243f4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80243f8:	fb0a f202 	mul.w	r2, sl, r2
 80243fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024400:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8024404:	fb04 fa03 	mul.w	sl, r4, r3
 8024408:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 802440c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8024410:	441a      	add	r2, r3
 8024412:	f10a 0320 	add.w	r3, sl, #32
 8024416:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 802441a:	0a1b      	lsrs	r3, r3, #8
 802441c:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8024420:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024424:	ea4b 0303 	orr.w	r3, fp, r3
 8024428:	b29b      	uxth	r3, r3
 802442a:	3501      	adds	r5, #1
 802442c:	d474      	bmi.n	8024518 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 802442e:	45a8      	cmp	r8, r5
 8024430:	dd72      	ble.n	8024518 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8024432:	f1be 0f00 	cmp.w	lr, #0
 8024436:	f000 8120 	beq.w	802467a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 802443a:	2f00      	cmp	r7, #0
 802443c:	db69      	blt.n	8024512 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 802443e:	42be      	cmp	r6, r7
 8024440:	dd67      	ble.n	8024512 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8024442:	f819 5006 	ldrb.w	r5, [r9, r6]
 8024446:	9a01      	ldr	r2, [sp, #4]
 8024448:	2dff      	cmp	r5, #255	; 0xff
 802444a:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 802444e:	d01c      	beq.n	802448a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8024450:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8024454:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8024458:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802445c:	fb05 fa0b 	mul.w	sl, r5, fp
 8024460:	fb08 f802 	mul.w	r8, r8, r2
 8024464:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8024468:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 802446c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024470:	4490      	add	r8, r2
 8024472:	f10a 0220 	add.w	r2, sl, #32
 8024476:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 802447a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802447e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8024482:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8024486:	ea4b 0b0a 	orr.w	fp, fp, sl
 802448a:	fa1f fb8b 	uxth.w	fp, fp
 802448e:	3701      	adds	r7, #1
 8024490:	d447      	bmi.n	8024522 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8024492:	42be      	cmp	r6, r7
 8024494:	dd45      	ble.n	8024522 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8024496:	2800      	cmp	r0, #0
 8024498:	d046      	beq.n	8024528 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 802449a:	3601      	adds	r6, #1
 802449c:	9a01      	ldr	r2, [sp, #4]
 802449e:	f819 7006 	ldrb.w	r7, [r9, r6]
 80244a2:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 80244a6:	2fff      	cmp	r7, #255	; 0xff
 80244a8:	d01a      	beq.n	80244e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 80244aa:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80244ae:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80244b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80244b6:	fb07 f902 	mul.w	r9, r7, r2
 80244ba:	fb08 f806 	mul.w	r8, r8, r6
 80244be:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80244c2:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80244c6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80244ca:	44b0      	add	r8, r6
 80244cc:	f109 0620 	add.w	r6, r9, #32
 80244d0:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80244d4:	0a36      	lsrs	r6, r6, #8
 80244d6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80244da:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80244de:	4332      	orrs	r2, r6
 80244e0:	b292      	uxth	r2, r2
 80244e2:	280f      	cmp	r0, #15
 80244e4:	d922      	bls.n	802452c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80244e6:	4b69      	ldr	r3, [pc, #420]	; (802468c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 80244e8:	4a69      	ldr	r2, [pc, #420]	; (8024690 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 80244ea:	486a      	ldr	r0, [pc, #424]	; (8024694 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 80244ec:	f240 11f9 	movw	r1, #505	; 0x1f9
 80244f0:	f007 fd80 	bl	802bff4 <__assert_func>
 80244f4:	f04f 0c00 	mov.w	ip, #0
 80244f8:	4661      	mov	r1, ip
 80244fa:	e76a      	b.n	80243d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 80244fc:	2400      	movs	r4, #0
 80244fe:	46a4      	mov	ip, r4
 8024500:	4623      	mov	r3, r4
 8024502:	4621      	mov	r1, r4
 8024504:	e791      	b.n	802442a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8024506:	2400      	movs	r4, #0
 8024508:	4623      	mov	r3, r4
 802450a:	e78e      	b.n	802442a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 802450c:	4604      	mov	r4, r0
 802450e:	4603      	mov	r3, r0
 8024510:	e78b      	b.n	802442a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8024512:	2500      	movs	r5, #0
 8024514:	46ab      	mov	fp, r5
 8024516:	e7ba      	b.n	802448e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8024518:	2700      	movs	r7, #0
 802451a:	463d      	mov	r5, r7
 802451c:	463a      	mov	r2, r7
 802451e:	46bb      	mov	fp, r7
 8024520:	e7df      	b.n	80244e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8024522:	2700      	movs	r7, #0
 8024524:	463a      	mov	r2, r7
 8024526:	e7dc      	b.n	80244e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8024528:	4607      	mov	r7, r0
 802452a:	4602      	mov	r2, r0
 802452c:	f1be 0f0f 	cmp.w	lr, #15
 8024530:	d8d9      	bhi.n	80244e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8024532:	b286      	uxth	r6, r0
 8024534:	fa1f f98e 	uxth.w	r9, lr
 8024538:	fb06 f809 	mul.w	r8, r6, r9
 802453c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024540:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8024544:	0136      	lsls	r6, r6, #4
 8024546:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802454a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802454e:	9601      	str	r6, [sp, #4]
 8024550:	ea4a 0101 	orr.w	r1, sl, r1
 8024554:	fa1f f689 	uxth.w	r6, r9
 8024558:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 802455c:	fb10 f90e 	smulbb	r9, r0, lr
 8024560:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8024564:	9602      	str	r6, [sp, #8]
 8024566:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802456a:	460e      	mov	r6, r1
 802456c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024570:	f1ce 0110 	rsb	r1, lr, #16
 8024574:	1a09      	subs	r1, r1, r0
 8024576:	ea4a 0303 	orr.w	r3, sl, r3
 802457a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 802457e:	4343      	muls	r3, r0
 8024580:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8024584:	9801      	ldr	r0, [sp, #4]
 8024586:	fb01 3106 	mla	r1, r1, r6, r3
 802458a:	9e02      	ldr	r6, [sp, #8]
 802458c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8024590:	1b80      	subs	r0, r0, r6
 8024592:	9e01      	ldr	r6, [sp, #4]
 8024594:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024598:	eba6 0608 	sub.w	r6, r6, r8
 802459c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80245a0:	b2b6      	uxth	r6, r6
 80245a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80245a6:	ea4a 0202 	orr.w	r2, sl, r2
 80245aa:	b280      	uxth	r0, r0
 80245ac:	4374      	muls	r4, r6
 80245ae:	fb09 1302 	mla	r3, r9, r2, r1
 80245b2:	fb0c 4400 	mla	r4, ip, r0, r4
 80245b6:	9a03      	ldr	r2, [sp, #12]
 80245b8:	9802      	ldr	r0, [sp, #8]
 80245ba:	8811      	ldrh	r1, [r2, #0]
 80245bc:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80245c0:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80245c4:	fb00 4505 	mla	r5, r0, r5, r4
 80245c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80245cc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80245d0:	fb08 5707 	mla	r7, r8, r7, r5
 80245d4:	ea4a 0b0b 	orr.w	fp, sl, fp
 80245d8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80245dc:	b292      	uxth	r2, r2
 80245de:	fb0e 3e0b 	mla	lr, lr, fp, r3
 80245e2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80245e6:	4357      	muls	r7, r2
 80245e8:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80245ec:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80245f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80245f4:	f107 0801 	add.w	r8, r7, #1
 80245f8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80245fc:	ea43 0e0e 	orr.w	lr, r3, lr
 8024600:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8024604:	fa1f f38e 	uxth.w	r3, lr
 8024608:	1208      	asrs	r0, r1, #8
 802460a:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 802460e:	b2ff      	uxtb	r7, r7
 8024610:	121c      	asrs	r4, r3, #8
 8024612:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024616:	fb10 f007 	smulbb	r0, r0, r7
 802461a:	10cd      	asrs	r5, r1, #3
 802461c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024620:	fb04 0402 	mla	r4, r4, r2, r0
 8024624:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8024628:	10d8      	asrs	r0, r3, #3
 802462a:	fb15 f507 	smulbb	r5, r5, r7
 802462e:	00db      	lsls	r3, r3, #3
 8024630:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024634:	fb00 5002 	mla	r0, r0, r2, r5
 8024638:	b2dd      	uxtb	r5, r3
 802463a:	00cb      	lsls	r3, r1, #3
 802463c:	b2db      	uxtb	r3, r3
 802463e:	fb13 f307 	smulbb	r3, r3, r7
 8024642:	fb05 3202 	mla	r2, r5, r2, r3
 8024646:	b2a4      	uxth	r4, r4
 8024648:	b292      	uxth	r2, r2
 802464a:	1c63      	adds	r3, r4, #1
 802464c:	b280      	uxth	r0, r0
 802464e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024652:	1c53      	adds	r3, r2, #1
 8024654:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024658:	1c42      	adds	r2, r0, #1
 802465a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802465e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024662:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024666:	0940      	lsrs	r0, r0, #5
 8024668:	4323      	orrs	r3, r4
 802466a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802466e:	9a03      	ldr	r2, [sp, #12]
 8024670:	4303      	orrs	r3, r0
 8024672:	8013      	strh	r3, [r2, #0]
 8024674:	b005      	add	sp, #20
 8024676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802467a:	280f      	cmp	r0, #15
 802467c:	f63f af33 	bhi.w	80244e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8024680:	4677      	mov	r7, lr
 8024682:	4675      	mov	r5, lr
 8024684:	4672      	mov	r2, lr
 8024686:	46f3      	mov	fp, lr
 8024688:	e753      	b.n	8024532 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 802468a:	bf00      	nop
 802468c:	08035c27 	.word	0x08035c27
 8024690:	08036156 	.word	0x08036156
 8024694:	08035bf4 	.word	0x08035bf4

08024698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802469c:	ed2d 8b08 	vpush	{d8-d11}
 80246a0:	b097      	sub	sp, #92	; 0x5c
 80246a2:	eeb0 aa40 	vmov.f32	s20, s0
 80246a6:	9214      	str	r2, [sp, #80]	; 0x50
 80246a8:	9308      	str	r3, [sp, #32]
 80246aa:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80246ac:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80246b0:	9312      	str	r3, [sp, #72]	; 0x48
 80246b2:	9111      	str	r1, [sp, #68]	; 0x44
 80246b4:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80246b8:	9015      	str	r0, [sp, #84]	; 0x54
 80246ba:	6850      	ldr	r0, [r2, #4]
 80246bc:	6812      	ldr	r2, [r2, #0]
 80246be:	fb00 1303 	mla	r3, r0, r3, r1
 80246c2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80246c6:	9309      	str	r3, [sp, #36]	; 0x24
 80246c8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80246ca:	681b      	ldr	r3, [r3, #0]
 80246cc:	930b      	str	r3, [sp, #44]	; 0x2c
 80246ce:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80246d0:	685b      	ldr	r3, [r3, #4]
 80246d2:	930c      	str	r3, [sp, #48]	; 0x30
 80246d4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80246d8:	930a      	str	r3, [sp, #40]	; 0x28
 80246da:	eef0 9a60 	vmov.f32	s19, s1
 80246de:	eeb0 9a41 	vmov.f32	s18, s2
 80246e2:	eeb0 8a62 	vmov.f32	s16, s5
 80246e6:	eef0 8a43 	vmov.f32	s17, s6
 80246ea:	eef0 ba44 	vmov.f32	s23, s8
 80246ee:	eeb0 ba64 	vmov.f32	s22, s9
 80246f2:	eef0 aa45 	vmov.f32	s21, s10
 80246f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80246f8:	2b00      	cmp	r3, #0
 80246fa:	dc03      	bgt.n	8024704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80246fc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80246fe:	2b00      	cmp	r3, #0
 8024700:	f340 83cb 	ble.w	8024e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8024704:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024706:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802470a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802470e:	1e48      	subs	r0, r1, #1
 8024710:	1e55      	subs	r5, r2, #1
 8024712:	9b08      	ldr	r3, [sp, #32]
 8024714:	2b00      	cmp	r3, #0
 8024716:	f340 81a3 	ble.w	8024a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 802471a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 802471c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802471e:	1436      	asrs	r6, r6, #16
 8024720:	ea4f 4323 	mov.w	r3, r3, asr #16
 8024724:	d406      	bmi.n	8024734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024726:	4286      	cmp	r6, r0
 8024728:	da04      	bge.n	8024734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802472a:	2b00      	cmp	r3, #0
 802472c:	db02      	blt.n	8024734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802472e:	42ab      	cmp	r3, r5
 8024730:	f2c0 8197 	blt.w	8024a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8024734:	3601      	adds	r6, #1
 8024736:	f100 8184 	bmi.w	8024a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802473a:	42b1      	cmp	r1, r6
 802473c:	f2c0 8181 	blt.w	8024a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8024740:	3301      	adds	r3, #1
 8024742:	f100 817e 	bmi.w	8024a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8024746:	429a      	cmp	r2, r3
 8024748:	f2c0 817b 	blt.w	8024a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802474c:	9b08      	ldr	r3, [sp, #32]
 802474e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8024750:	9313      	str	r3, [sp, #76]	; 0x4c
 8024752:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8024756:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024758:	2b00      	cmp	r3, #0
 802475a:	f340 81a4 	ble.w	8024aa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 802475e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024760:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8024762:	1418      	asrs	r0, r3, #16
 8024764:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024766:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802476a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802476c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8024770:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024772:	142d      	asrs	r5, r5, #16
 8024774:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8024778:	f100 81f8 	bmi.w	8024b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 802477c:	f102 3eff 	add.w	lr, r2, #4294967295
 8024780:	4575      	cmp	r5, lr
 8024782:	f280 81f3 	bge.w	8024b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8024786:	2800      	cmp	r0, #0
 8024788:	f2c0 81f0 	blt.w	8024b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 802478c:	f103 3eff 	add.w	lr, r3, #4294967295
 8024790:	4570      	cmp	r0, lr
 8024792:	f280 81eb 	bge.w	8024b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8024796:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024798:	b212      	sxth	r2, r2
 802479a:	fb00 5002 	mla	r0, r0, r2, r5
 802479e:	fa1f fe81 	uxth.w	lr, r1
 80247a2:	eb03 0a00 	add.w	sl, r3, r0
 80247a6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80247aa:	f813 9000 	ldrb.w	r9, [r3, r0]
 80247ae:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80247b2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80247b6:	b29b      	uxth	r3, r3
 80247b8:	f1bc 0f00 	cmp.w	ip, #0
 80247bc:	f000 81b9 	beq.w	8024b32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80247c0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80247c4:	940d      	str	r4, [sp, #52]	; 0x34
 80247c6:	eb0a 0b02 	add.w	fp, sl, r2
 80247ca:	fa1f fa8c 	uxth.w	sl, ip
 80247ce:	fb0a fe0e 	mul.w	lr, sl, lr
 80247d2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80247d6:	fa1f fa8a 	uxth.w	sl, sl
 80247da:	eba5 050e 	sub.w	r5, r5, lr
 80247de:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80247e2:	940e      	str	r4, [sp, #56]	; 0x38
 80247e4:	eba3 030a 	sub.w	r3, r3, sl
 80247e8:	b2ad      	uxth	r5, r5
 80247ea:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80247ec:	b29b      	uxth	r3, r3
 80247ee:	fb08 f505 	mul.w	r5, r8, r5
 80247f2:	fb09 5303 	mla	r3, r9, r3, r5
 80247f6:	fb0a 3304 	mla	r3, sl, r4, r3
 80247fa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80247fc:	fb0e 3304 	mla	r3, lr, r4, r3
 8024800:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024804:	2b00      	cmp	r3, #0
 8024806:	f000 810f 	beq.w	8024a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 802480a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802480c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024810:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8024814:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8024818:	f000 8190 	beq.w	8024b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 802481c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8024820:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8024824:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024828:	fb09 f000 	mul.w	r0, r9, r0
 802482c:	fb0a fe0e 	mul.w	lr, sl, lr
 8024830:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8024834:	f100 0b20 	add.w	fp, r0, #32
 8024838:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802483c:	44ce      	add	lr, r9
 802483e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8024842:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024846:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802484a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802484e:	ea4e 0909 	orr.w	r9, lr, r9
 8024852:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8024856:	8868      	ldrh	r0, [r5, #2]
 8024858:	d019      	beq.n	802488e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 802485a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802485e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024862:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024866:	fb08 f800 	mul.w	r8, r8, r0
 802486a:	fb0a fe0e 	mul.w	lr, sl, lr
 802486e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8024872:	f108 0b20 	add.w	fp, r8, #32
 8024876:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802487a:	4486      	add	lr, r0
 802487c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8024880:	0a00      	lsrs	r0, r0, #8
 8024882:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8024886:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802488a:	ea4e 0000 	orr.w	r0, lr, r0
 802488e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8024892:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8024896:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802489a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802489e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80248a2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80248a6:	ea4e 0909 	orr.w	r9, lr, r9
 80248aa:	ea4a 0000 	orr.w	r0, sl, r0
 80248ae:	f1bc 0f00 	cmp.w	ip, #0
 80248b2:	f000 8145 	beq.w	8024b40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 80248b6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80248ba:	3a01      	subs	r2, #1
 80248bc:	0052      	lsls	r2, r2, #1
 80248be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80248c0:	3202      	adds	r2, #2
 80248c2:	2cff      	cmp	r4, #255	; 0xff
 80248c4:	eb05 0e02 	add.w	lr, r5, r2
 80248c8:	5aaa      	ldrh	r2, [r5, r2]
 80248ca:	d018      	beq.n	80248fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80248cc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80248d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80248d4:	fb04 fa02 	mul.w	sl, r4, r2
 80248d8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80248dc:	fb08 f805 	mul.w	r8, r8, r5
 80248e0:	f10a 0520 	add.w	r5, sl, #32
 80248e4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80248e8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80248ec:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80248f0:	4442      	add	r2, r8
 80248f2:	0a2d      	lsrs	r5, r5, #8
 80248f4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80248f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80248fc:	432a      	orrs	r2, r5
 80248fe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024900:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8024904:	2cff      	cmp	r4, #255	; 0xff
 8024906:	d01a      	beq.n	802493e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8024908:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802490c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024910:	fb04 fa05 	mul.w	sl, r4, r5
 8024914:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024918:	fb08 f80e 	mul.w	r8, r8, lr
 802491c:	f10a 0e20 	add.w	lr, sl, #32
 8024920:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8024924:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8024928:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802492c:	4445      	add	r5, r8
 802492e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024932:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8024936:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802493a:	ea45 050e 	orr.w	r5, r5, lr
 802493e:	fb1c fe01 	smulbb	lr, ip, r1
 8024942:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8024946:	f1cc 0810 	rsb	r8, ip, #16
 802494a:	eba8 0801 	sub.w	r8, r8, r1
 802494e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024952:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8024956:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802495a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802495e:	4341      	muls	r1, r0
 8024960:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024964:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024968:	ea4a 0202 	orr.w	r2, sl, r2
 802496c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8024970:	fb09 1108 	mla	r1, r9, r8, r1
 8024974:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024978:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802497c:	fb0c 1102 	mla	r1, ip, r2, r1
 8024980:	ea4b 0505 	orr.w	r5, fp, r5
 8024984:	fb0e 1e05 	mla	lr, lr, r5, r1
 8024988:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802498c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024990:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024994:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024998:	ea42 0e0e 	orr.w	lr, r2, lr
 802499c:	fa1f f28e 	uxth.w	r2, lr
 80249a0:	2bff      	cmp	r3, #255	; 0xff
 80249a2:	d103      	bne.n	80249ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80249a4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80249a6:	29ff      	cmp	r1, #255	; 0xff
 80249a8:	f000 80de 	beq.w	8024b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 80249ac:	990a      	ldr	r1, [sp, #40]	; 0x28
 80249ae:	8838      	ldrh	r0, [r7, #0]
 80249b0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80249b2:	434b      	muls	r3, r1
 80249b4:	f103 0c01 	add.w	ip, r3, #1
 80249b8:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80249bc:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80249c0:	fa5f fc83 	uxtb.w	ip, r3
 80249c4:	1203      	asrs	r3, r0, #8
 80249c6:	1215      	asrs	r5, r2, #8
 80249c8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80249cc:	fb13 f30c 	smulbb	r3, r3, ip
 80249d0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80249d4:	fb05 3501 	mla	r5, r5, r1, r3
 80249d8:	10c3      	asrs	r3, r0, #3
 80249da:	10d1      	asrs	r1, r2, #3
 80249dc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80249e0:	fb13 f30c 	smulbb	r3, r3, ip
 80249e4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80249e8:	fb01 3104 	mla	r1, r1, r4, r3
 80249ec:	00c3      	lsls	r3, r0, #3
 80249ee:	00d2      	lsls	r2, r2, #3
 80249f0:	b2db      	uxtb	r3, r3
 80249f2:	b2d2      	uxtb	r2, r2
 80249f4:	fb13 f30c 	smulbb	r3, r3, ip
 80249f8:	b2ad      	uxth	r5, r5
 80249fa:	fb02 3304 	mla	r3, r2, r4, r3
 80249fe:	b29a      	uxth	r2, r3
 8024a00:	1c6b      	adds	r3, r5, #1
 8024a02:	b289      	uxth	r1, r1
 8024a04:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024a08:	1c53      	adds	r3, r2, #1
 8024a0a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024a0e:	1c4a      	adds	r2, r1, #1
 8024a10:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024a14:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024a18:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024a1c:	0949      	lsrs	r1, r1, #5
 8024a1e:	432b      	orrs	r3, r5
 8024a20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024a24:	430b      	orrs	r3, r1
 8024a26:	803b      	strh	r3, [r7, #0]
 8024a28:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024a2a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8024a2c:	4413      	add	r3, r2
 8024a2e:	9329      	str	r3, [sp, #164]	; 0xa4
 8024a30:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8024a32:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a34:	441a      	add	r2, r3
 8024a36:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024a38:	922a      	str	r2, [sp, #168]	; 0xa8
 8024a3a:	3b01      	subs	r3, #1
 8024a3c:	3702      	adds	r7, #2
 8024a3e:	9313      	str	r3, [sp, #76]	; 0x4c
 8024a40:	e689      	b.n	8024756 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8024a42:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024a44:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8024a46:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8024a48:	4433      	add	r3, r6
 8024a4a:	9329      	str	r3, [sp, #164]	; 0xa4
 8024a4c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a4e:	441c      	add	r4, r3
 8024a50:	9b08      	ldr	r3, [sp, #32]
 8024a52:	942a      	str	r4, [sp, #168]	; 0xa8
 8024a54:	3b01      	subs	r3, #1
 8024a56:	9308      	str	r3, [sp, #32]
 8024a58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a5a:	3302      	adds	r3, #2
 8024a5c:	9309      	str	r3, [sp, #36]	; 0x24
 8024a5e:	e658      	b.n	8024712 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8024a60:	d028      	beq.n	8024ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8024a62:	9b08      	ldr	r3, [sp, #32]
 8024a64:	982b      	ldr	r0, [sp, #172]	; 0xac
 8024a66:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8024a68:	3b01      	subs	r3, #1
 8024a6a:	fb00 5003 	mla	r0, r0, r3, r5
 8024a6e:	1400      	asrs	r0, r0, #16
 8024a70:	f53f ae6c 	bmi.w	802474c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8024a74:	3901      	subs	r1, #1
 8024a76:	4288      	cmp	r0, r1
 8024a78:	f6bf ae68 	bge.w	802474c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8024a7c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8024a7e:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8024a80:	fb01 0303 	mla	r3, r1, r3, r0
 8024a84:	141b      	asrs	r3, r3, #16
 8024a86:	f53f ae61 	bmi.w	802474c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8024a8a:	3a01      	subs	r2, #1
 8024a8c:	4293      	cmp	r3, r2
 8024a8e:	f6bf ae5d 	bge.w	802474c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8024a92:	9b08      	ldr	r3, [sp, #32]
 8024a94:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8024a98:	9313      	str	r3, [sp, #76]	; 0x4c
 8024a9a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8024a9e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024aa0:	2b00      	cmp	r3, #0
 8024aa2:	f300 8082 	bgt.w	8024baa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8024aa6:	9b08      	ldr	r3, [sp, #32]
 8024aa8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024aac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024aae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024ab2:	9309      	str	r3, [sp, #36]	; 0x24
 8024ab4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8024ab6:	2b00      	cmp	r3, #0
 8024ab8:	f340 81ef 	ble.w	8024e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8024abc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8024ac0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024ac4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8024ac8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024aca:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8024ace:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8024ad2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8024ad6:	eef0 6a48 	vmov.f32	s13, s16
 8024ada:	ee69 7a27 	vmul.f32	s15, s18, s15
 8024ade:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024ae2:	ee37 8a48 	vsub.f32	s16, s14, s16
 8024ae6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8024aea:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8024aee:	eef0 6a68 	vmov.f32	s13, s17
 8024af2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8024af6:	ee18 2a10 	vmov	r2, s16
 8024afa:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8024afe:	fb92 f3f3 	sdiv	r3, r2, r3
 8024b02:	ee18 2a90 	vmov	r2, s17
 8024b06:	932b      	str	r3, [sp, #172]	; 0xac
 8024b08:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024b0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8024b0e:	932c      	str	r3, [sp, #176]	; 0xb0
 8024b10:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8024b12:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024b14:	3b01      	subs	r3, #1
 8024b16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024b1a:	9311      	str	r3, [sp, #68]	; 0x44
 8024b1c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024b1e:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8024b22:	bf08      	it	eq
 8024b24:	4613      	moveq	r3, r2
 8024b26:	9308      	str	r3, [sp, #32]
 8024b28:	eef0 8a67 	vmov.f32	s17, s15
 8024b2c:	eeb0 8a47 	vmov.f32	s16, s14
 8024b30:	e5e1      	b.n	80246f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8024b32:	fb08 f505 	mul.w	r5, r8, r5
 8024b36:	fb09 5303 	mla	r3, r9, r3, r5
 8024b3a:	e661      	b.n	8024800 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8024b3c:	4681      	mov	r9, r0
 8024b3e:	e688      	b.n	8024852 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024b40:	f1c1 0210 	rsb	r2, r1, #16
 8024b44:	4341      	muls	r1, r0
 8024b46:	fb09 1902 	mla	r9, r9, r2, r1
 8024b4a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024b4e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8024b52:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8024b56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024b5a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8024b5e:	ea42 0909 	orr.w	r9, r2, r9
 8024b62:	fa1f f289 	uxth.w	r2, r9
 8024b66:	e71b      	b.n	80249a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8024b68:	803a      	strh	r2, [r7, #0]
 8024b6a:	e75d      	b.n	8024a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8024b6c:	f115 0e01 	adds.w	lr, r5, #1
 8024b70:	f53f af5a 	bmi.w	8024a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8024b74:	4572      	cmp	r2, lr
 8024b76:	f6ff af57 	blt.w	8024a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8024b7a:	f110 0e01 	adds.w	lr, r0, #1
 8024b7e:	f53f af53 	bmi.w	8024a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8024b82:	4573      	cmp	r3, lr
 8024b84:	f6ff af50 	blt.w	8024a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8024b88:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024b8a:	9502      	str	r5, [sp, #8]
 8024b8c:	b21b      	sxth	r3, r3
 8024b8e:	b212      	sxth	r2, r2
 8024b90:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8024b94:	9301      	str	r3, [sp, #4]
 8024b96:	9200      	str	r2, [sp, #0]
 8024b98:	e9cd c405 	strd	ip, r4, [sp, #20]
 8024b9c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8024ba0:	4639      	mov	r1, r7
 8024ba2:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024ba4:	f7ff fbd2 	bl	802434c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8024ba8:	e73e      	b.n	8024a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8024baa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024bac:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024bb0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024bb2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8024bb6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024bb8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024bbc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024bbe:	141f      	asrs	r7, r3, #16
 8024bc0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024bc2:	141b      	asrs	r3, r3, #16
 8024bc4:	fb01 3707 	mla	r7, r1, r7, r3
 8024bc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024bca:	fa1f fc82 	uxth.w	ip, r2
 8024bce:	eb03 0a07 	add.w	sl, r3, r7
 8024bd2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8024bd6:	f813 9007 	ldrb.w	r9, [r3, r7]
 8024bda:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024bde:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8024be2:	b29b      	uxth	r3, r3
 8024be4:	2d00      	cmp	r5, #0
 8024be6:	f000 813d 	beq.w	8024e64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8024bea:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8024bee:	940f      	str	r4, [sp, #60]	; 0x3c
 8024bf0:	eb0a 0b01 	add.w	fp, sl, r1
 8024bf4:	fa1f fa85 	uxth.w	sl, r5
 8024bf8:	fb0a fc0c 	mul.w	ip, sl, ip
 8024bfc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8024c00:	fa1f fa8a 	uxth.w	sl, sl
 8024c04:	eba0 000c 	sub.w	r0, r0, ip
 8024c08:	eba3 030a 	sub.w	r3, r3, sl
 8024c0c:	b280      	uxth	r0, r0
 8024c0e:	fb08 f000 	mul.w	r0, r8, r0
 8024c12:	b29b      	uxth	r3, r3
 8024c14:	fb09 0303 	mla	r3, r9, r3, r0
 8024c18:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8024c1a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8024c1e:	9410      	str	r4, [sp, #64]	; 0x40
 8024c20:	fb0a 3300 	mla	r3, sl, r0, r3
 8024c24:	fb0c 3304 	mla	r3, ip, r4, r3
 8024c28:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024c2c:	2b00      	cmp	r3, #0
 8024c2e:	f000 810b 	beq.w	8024e48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8024c32:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8024c34:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024c36:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024c3a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8024c3e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8024c42:	f000 8114 	beq.w	8024e6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8024c46:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024c4a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8024c4e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024c52:	fb09 f707 	mul.w	r7, r9, r7
 8024c56:	fb0a fc0c 	mul.w	ip, sl, ip
 8024c5a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8024c5e:	f107 0b20 	add.w	fp, r7, #32
 8024c62:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024c66:	44cc      	add	ip, r9
 8024c68:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8024c6c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024c70:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024c74:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024c78:	ea4c 0909 	orr.w	r9, ip, r9
 8024c7c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8024c80:	8847      	ldrh	r7, [r0, #2]
 8024c82:	d019      	beq.n	8024cb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8024c84:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024c88:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024c8c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024c90:	fb08 f807 	mul.w	r8, r8, r7
 8024c94:	fb0a fc0c 	mul.w	ip, sl, ip
 8024c98:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024c9c:	f108 0b20 	add.w	fp, r8, #32
 8024ca0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024ca4:	44bc      	add	ip, r7
 8024ca6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8024caa:	0a3f      	lsrs	r7, r7, #8
 8024cac:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024cb0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024cb4:	ea4c 0707 	orr.w	r7, ip, r7
 8024cb8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8024cbc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8024cc0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8024cc4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8024cc8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024ccc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8024cd0:	ea4c 0909 	orr.w	r9, ip, r9
 8024cd4:	ea4a 0707 	orr.w	r7, sl, r7
 8024cd8:	2d00      	cmp	r5, #0
 8024cda:	f000 80ca 	beq.w	8024e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8024cde:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8024ce2:	3901      	subs	r1, #1
 8024ce4:	0049      	lsls	r1, r1, #1
 8024ce6:	3102      	adds	r1, #2
 8024ce8:	eb00 0c01 	add.w	ip, r0, r1
 8024cec:	5a41      	ldrh	r1, [r0, r1]
 8024cee:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8024cf0:	28ff      	cmp	r0, #255	; 0xff
 8024cf2:	d019      	beq.n	8024d28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8024cf4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024cf6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8024cfa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024cfe:	fb04 fa01 	mul.w	sl, r4, r1
 8024d02:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024d06:	fb08 f800 	mul.w	r8, r8, r0
 8024d0a:	f10a 0020 	add.w	r0, sl, #32
 8024d0e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8024d12:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8024d16:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024d1a:	4441      	add	r1, r8
 8024d1c:	0a00      	lsrs	r0, r0, #8
 8024d1e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8024d22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024d26:	4301      	orrs	r1, r0
 8024d28:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024d2a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8024d2e:	2cff      	cmp	r4, #255	; 0xff
 8024d30:	d01a      	beq.n	8024d68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8024d32:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8024d36:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024d3a:	fb04 fa00 	mul.w	sl, r4, r0
 8024d3e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024d42:	fb08 f80c 	mul.w	r8, r8, ip
 8024d46:	f10a 0c20 	add.w	ip, sl, #32
 8024d4a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8024d4e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8024d52:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024d56:	4440      	add	r0, r8
 8024d58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024d5c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8024d60:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024d64:	ea40 000c 	orr.w	r0, r0, ip
 8024d68:	fb15 fc02 	smulbb	ip, r5, r2
 8024d6c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8024d70:	f1c5 0810 	rsb	r8, r5, #16
 8024d74:	eba8 0802 	sub.w	r8, r8, r2
 8024d78:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024d7c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8024d80:	437a      	muls	r2, r7
 8024d82:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024d86:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024d8a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024d8e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024d92:	fb09 2208 	mla	r2, r9, r8, r2
 8024d96:	ea4a 0101 	orr.w	r1, sl, r1
 8024d9a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8024d9e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024da2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024da6:	fb05 2201 	mla	r2, r5, r1, r2
 8024daa:	ea4b 0000 	orr.w	r0, fp, r0
 8024dae:	fb0c 2200 	mla	r2, ip, r0, r2
 8024db2:	0d57      	lsrs	r7, r2, #21
 8024db4:	0952      	lsrs	r2, r2, #5
 8024db6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024dba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024dbe:	433a      	orrs	r2, r7
 8024dc0:	2bff      	cmp	r3, #255	; 0xff
 8024dc2:	b292      	uxth	r2, r2
 8024dc4:	d102      	bne.n	8024dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8024dc6:	9912      	ldr	r1, [sp, #72]	; 0x48
 8024dc8:	29ff      	cmp	r1, #255	; 0xff
 8024dca:	d063      	beq.n	8024e94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8024dcc:	980a      	ldr	r0, [sp, #40]	; 0x28
 8024dce:	f8be 1000 	ldrh.w	r1, [lr]
 8024dd2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024dd4:	4343      	muls	r3, r0
 8024dd6:	1c58      	adds	r0, r3, #1
 8024dd8:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8024ddc:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8024de0:	1208      	asrs	r0, r1, #8
 8024de2:	b2db      	uxtb	r3, r3
 8024de4:	1215      	asrs	r5, r2, #8
 8024de6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024dea:	fb10 f003 	smulbb	r0, r0, r3
 8024dee:	10cf      	asrs	r7, r1, #3
 8024df0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024df4:	00c9      	lsls	r1, r1, #3
 8024df6:	fb05 0504 	mla	r5, r5, r4, r0
 8024dfa:	b2c9      	uxtb	r1, r1
 8024dfc:	10d0      	asrs	r0, r2, #3
 8024dfe:	00d2      	lsls	r2, r2, #3
 8024e00:	fb11 f103 	smulbb	r1, r1, r3
 8024e04:	b2d2      	uxtb	r2, r2
 8024e06:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8024e0a:	fb02 1204 	mla	r2, r2, r4, r1
 8024e0e:	fb17 f703 	smulbb	r7, r7, r3
 8024e12:	b2ad      	uxth	r5, r5
 8024e14:	b292      	uxth	r2, r2
 8024e16:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024e1a:	fb00 7004 	mla	r0, r0, r4, r7
 8024e1e:	1c6b      	adds	r3, r5, #1
 8024e20:	1c57      	adds	r7, r2, #1
 8024e22:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024e26:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024e2a:	b280      	uxth	r0, r0
 8024e2c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8024e30:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024e34:	433d      	orrs	r5, r7
 8024e36:	1c47      	adds	r7, r0, #1
 8024e38:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8024e3c:	097f      	lsrs	r7, r7, #5
 8024e3e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024e42:	433d      	orrs	r5, r7
 8024e44:	f8ae 5000 	strh.w	r5, [lr]
 8024e48:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024e4a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8024e4c:	4413      	add	r3, r2
 8024e4e:	9329      	str	r3, [sp, #164]	; 0xa4
 8024e50:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8024e52:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024e54:	441a      	add	r2, r3
 8024e56:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024e58:	922a      	str	r2, [sp, #168]	; 0xa8
 8024e5a:	3b01      	subs	r3, #1
 8024e5c:	f10e 0e02 	add.w	lr, lr, #2
 8024e60:	9313      	str	r3, [sp, #76]	; 0x4c
 8024e62:	e61c      	b.n	8024a9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8024e64:	fb08 f000 	mul.w	r0, r8, r0
 8024e68:	fb09 0303 	mla	r3, r9, r3, r0
 8024e6c:	e6dc      	b.n	8024c28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8024e6e:	46b9      	mov	r9, r7
 8024e70:	e704      	b.n	8024c7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8024e72:	f1c2 0110 	rsb	r1, r2, #16
 8024e76:	437a      	muls	r2, r7
 8024e78:	fb09 2901 	mla	r9, r9, r1, r2
 8024e7c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024e80:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8024e84:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8024e88:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024e8c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024e90:	4302      	orrs	r2, r0
 8024e92:	e795      	b.n	8024dc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8024e94:	f8ae 2000 	strh.w	r2, [lr]
 8024e98:	e7d6      	b.n	8024e48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8024e9a:	b017      	add	sp, #92	; 0x5c
 8024e9c:	ecbd 8b08 	vpop	{d8-d11}
 8024ea0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024ea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8024ea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024ea8:	b085      	sub	sp, #20
 8024eaa:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8024eae:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8024eb2:	9103      	str	r1, [sp, #12]
 8024eb4:	fb05 7106 	mla	r1, r5, r6, r7
 8024eb8:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8024ebc:	2d00      	cmp	r5, #0
 8024ebe:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8024ec2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024ec6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8024eca:	9401      	str	r4, [sp, #4]
 8024ecc:	eb02 0901 	add.w	r9, r2, r1
 8024ed0:	f2c0 80c0 	blt.w	8025054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8024ed4:	45a8      	cmp	r8, r5
 8024ed6:	f340 80bd 	ble.w	8025054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8024eda:	2f00      	cmp	r7, #0
 8024edc:	f2c0 80b6 	blt.w	802504c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8024ee0:	42be      	cmp	r6, r7
 8024ee2:	f340 80b3 	ble.w	802504c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8024ee6:	f812 c001 	ldrb.w	ip, [r2, r1]
 8024eea:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8024eee:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024ef2:	d019      	beq.n	8024f28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8024ef4:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8024ef8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024efc:	435a      	muls	r2, r3
 8024efe:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8024f02:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8024f06:	fb0c f403 	mul.w	r4, ip, r3
 8024f0a:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8024f0e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8024f12:	441a      	add	r2, r3
 8024f14:	f104 0320 	add.w	r3, r4, #32
 8024f18:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8024f1c:	0a1b      	lsrs	r3, r3, #8
 8024f1e:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8024f22:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024f26:	4319      	orrs	r1, r3
 8024f28:	b289      	uxth	r1, r1
 8024f2a:	1c7b      	adds	r3, r7, #1
 8024f2c:	f100 8097 	bmi.w	802505e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8024f30:	429e      	cmp	r6, r3
 8024f32:	f340 8094 	ble.w	802505e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8024f36:	2800      	cmp	r0, #0
 8024f38:	f000 8094 	beq.w	8025064 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8024f3c:	f899 4001 	ldrb.w	r4, [r9, #1]
 8024f40:	9b01      	ldr	r3, [sp, #4]
 8024f42:	2cff      	cmp	r4, #255	; 0xff
 8024f44:	885b      	ldrh	r3, [r3, #2]
 8024f46:	d01b      	beq.n	8024f80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8024f48:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8024f4c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8024f50:	fb0a f202 	mul.w	r2, sl, r2
 8024f54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024f58:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8024f5c:	fb04 fa03 	mul.w	sl, r4, r3
 8024f60:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8024f64:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8024f68:	441a      	add	r2, r3
 8024f6a:	f10a 0320 	add.w	r3, sl, #32
 8024f6e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8024f72:	0a1b      	lsrs	r3, r3, #8
 8024f74:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8024f78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024f7c:	ea4b 0303 	orr.w	r3, fp, r3
 8024f80:	b29b      	uxth	r3, r3
 8024f82:	3501      	adds	r5, #1
 8024f84:	d474      	bmi.n	8025070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8024f86:	45a8      	cmp	r8, r5
 8024f88:	dd72      	ble.n	8025070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8024f8a:	f1be 0f00 	cmp.w	lr, #0
 8024f8e:	f000 8110 	beq.w	80251b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8024f92:	2f00      	cmp	r7, #0
 8024f94:	db69      	blt.n	802506a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8024f96:	42be      	cmp	r6, r7
 8024f98:	dd67      	ble.n	802506a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8024f9a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8024f9e:	9a01      	ldr	r2, [sp, #4]
 8024fa0:	2dff      	cmp	r5, #255	; 0xff
 8024fa2:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8024fa6:	d01c      	beq.n	8024fe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8024fa8:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8024fac:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8024fb0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8024fb4:	fb05 fa0b 	mul.w	sl, r5, fp
 8024fb8:	fb08 f802 	mul.w	r8, r8, r2
 8024fbc:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8024fc0:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8024fc4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024fc8:	4490      	add	r8, r2
 8024fca:	f10a 0220 	add.w	r2, sl, #32
 8024fce:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8024fd2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024fd6:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8024fda:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8024fde:	ea4b 0b0a 	orr.w	fp, fp, sl
 8024fe2:	fa1f fb8b 	uxth.w	fp, fp
 8024fe6:	3701      	adds	r7, #1
 8024fe8:	d447      	bmi.n	802507a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8024fea:	42be      	cmp	r6, r7
 8024fec:	dd45      	ble.n	802507a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8024fee:	2800      	cmp	r0, #0
 8024ff0:	d046      	beq.n	8025080 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8024ff2:	3601      	adds	r6, #1
 8024ff4:	9a01      	ldr	r2, [sp, #4]
 8024ff6:	f819 7006 	ldrb.w	r7, [r9, r6]
 8024ffa:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8024ffe:	2fff      	cmp	r7, #255	; 0xff
 8025000:	d01a      	beq.n	8025038 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8025002:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8025006:	ea4f 08e7 	mov.w	r8, r7, asr #3
 802500a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802500e:	fb07 f902 	mul.w	r9, r7, r2
 8025012:	fb08 f806 	mul.w	r8, r8, r6
 8025016:	f64f 021f 	movw	r2, #63519	; 0xf81f
 802501a:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 802501e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025022:	44b0      	add	r8, r6
 8025024:	f109 0620 	add.w	r6, r9, #32
 8025028:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 802502c:	0a36      	lsrs	r6, r6, #8
 802502e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025032:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8025036:	4332      	orrs	r2, r6
 8025038:	b292      	uxth	r2, r2
 802503a:	280f      	cmp	r0, #15
 802503c:	d922      	bls.n	8025084 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 802503e:	4b61      	ldr	r3, [pc, #388]	; (80251c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8025040:	4a61      	ldr	r2, [pc, #388]	; (80251c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8025042:	4862      	ldr	r0, [pc, #392]	; (80251cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8025044:	f240 11f9 	movw	r1, #505	; 0x1f9
 8025048:	f006 ffd4 	bl	802bff4 <__assert_func>
 802504c:	f04f 0c00 	mov.w	ip, #0
 8025050:	4661      	mov	r1, ip
 8025052:	e76a      	b.n	8024f2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8025054:	2400      	movs	r4, #0
 8025056:	46a4      	mov	ip, r4
 8025058:	4623      	mov	r3, r4
 802505a:	4621      	mov	r1, r4
 802505c:	e791      	b.n	8024f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 802505e:	2400      	movs	r4, #0
 8025060:	4623      	mov	r3, r4
 8025062:	e78e      	b.n	8024f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8025064:	4604      	mov	r4, r0
 8025066:	4603      	mov	r3, r0
 8025068:	e78b      	b.n	8024f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 802506a:	2500      	movs	r5, #0
 802506c:	46ab      	mov	fp, r5
 802506e:	e7ba      	b.n	8024fe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8025070:	2700      	movs	r7, #0
 8025072:	463d      	mov	r5, r7
 8025074:	463a      	mov	r2, r7
 8025076:	46bb      	mov	fp, r7
 8025078:	e7df      	b.n	802503a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 802507a:	2700      	movs	r7, #0
 802507c:	463a      	mov	r2, r7
 802507e:	e7dc      	b.n	802503a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8025080:	4607      	mov	r7, r0
 8025082:	4602      	mov	r2, r0
 8025084:	f1be 0f0f 	cmp.w	lr, #15
 8025088:	d8d9      	bhi.n	802503e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 802508a:	b286      	uxth	r6, r0
 802508c:	fa1f f98e 	uxth.w	r9, lr
 8025090:	fb06 f809 	mul.w	r8, r6, r9
 8025094:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025098:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802509c:	0136      	lsls	r6, r6, #4
 802509e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80250a2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80250a6:	9601      	str	r6, [sp, #4]
 80250a8:	ea4a 0101 	orr.w	r1, sl, r1
 80250ac:	fa1f f689 	uxth.w	r6, r9
 80250b0:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80250b4:	fb10 f90e 	smulbb	r9, r0, lr
 80250b8:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80250bc:	9602      	str	r6, [sp, #8]
 80250be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80250c2:	460e      	mov	r6, r1
 80250c4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80250c8:	f1ce 0110 	rsb	r1, lr, #16
 80250cc:	1a09      	subs	r1, r1, r0
 80250ce:	ea4a 0303 	orr.w	r3, sl, r3
 80250d2:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80250d6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80250da:	4343      	muls	r3, r0
 80250dc:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80250e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80250e4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80250e8:	fb01 3106 	mla	r1, r1, r6, r3
 80250ec:	ea4a 0202 	orr.w	r2, sl, r2
 80250f0:	fb09 1302 	mla	r3, r9, r2, r1
 80250f4:	9a03      	ldr	r2, [sp, #12]
 80250f6:	9802      	ldr	r0, [sp, #8]
 80250f8:	8811      	ldrh	r1, [r2, #0]
 80250fa:	9a01      	ldr	r2, [sp, #4]
 80250fc:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8025100:	1a12      	subs	r2, r2, r0
 8025102:	9801      	ldr	r0, [sp, #4]
 8025104:	eba0 0608 	sub.w	r6, r0, r8
 8025108:	b2b6      	uxth	r6, r6
 802510a:	b292      	uxth	r2, r2
 802510c:	4374      	muls	r4, r6
 802510e:	fb0c 4402 	mla	r4, ip, r2, r4
 8025112:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8025116:	9a02      	ldr	r2, [sp, #8]
 8025118:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802511c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025120:	fb02 4505 	mla	r5, r2, r5, r4
 8025124:	ea4a 0b0b 	orr.w	fp, sl, fp
 8025128:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802512c:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8025130:	fb08 5707 	mla	r7, r8, r7, r5
 8025134:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8025138:	120a      	asrs	r2, r1, #8
 802513a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802513e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8025142:	b2ff      	uxtb	r7, r7
 8025144:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025148:	10c8      	asrs	r0, r1, #3
 802514a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802514e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025152:	00c9      	lsls	r1, r1, #3
 8025154:	437a      	muls	r2, r7
 8025156:	ea43 0e0e 	orr.w	lr, r3, lr
 802515a:	b2c9      	uxtb	r1, r1
 802515c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025160:	fa1f f38e 	uxth.w	r3, lr
 8025164:	4378      	muls	r0, r7
 8025166:	434f      	muls	r7, r1
 8025168:	1c51      	adds	r1, r2, #1
 802516a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802516e:	121a      	asrs	r2, r3, #8
 8025170:	f022 0207 	bic.w	r2, r2, #7
 8025174:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8025178:	1c41      	adds	r1, r0, #1
 802517a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802517e:	10d9      	asrs	r1, r3, #3
 8025180:	f021 0103 	bic.w	r1, r1, #3
 8025184:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025188:	0212      	lsls	r2, r2, #8
 802518a:	00c9      	lsls	r1, r1, #3
 802518c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025190:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8025194:	430a      	orrs	r2, r1
 8025196:	1c79      	adds	r1, r7, #1
 8025198:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 802519c:	00db      	lsls	r3, r3, #3
 802519e:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80251a2:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80251a6:	4313      	orrs	r3, r2
 80251a8:	9a03      	ldr	r2, [sp, #12]
 80251aa:	8013      	strh	r3, [r2, #0]
 80251ac:	b005      	add	sp, #20
 80251ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80251b2:	280f      	cmp	r0, #15
 80251b4:	f63f af43 	bhi.w	802503e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 80251b8:	4677      	mov	r7, lr
 80251ba:	4675      	mov	r5, lr
 80251bc:	4672      	mov	r2, lr
 80251be:	46f3      	mov	fp, lr
 80251c0:	e763      	b.n	802508a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 80251c2:	bf00      	nop
 80251c4:	08035c27 	.word	0x08035c27
 80251c8:	08036156 	.word	0x08036156
 80251cc:	08035bf4 	.word	0x08035bf4

080251d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80251d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80251d4:	ed2d 8b08 	vpush	{d8-d11}
 80251d8:	b093      	sub	sp, #76	; 0x4c
 80251da:	eeb0 aa40 	vmov.f32	s20, s0
 80251de:	9210      	str	r2, [sp, #64]	; 0x40
 80251e0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80251e2:	910e      	str	r1, [sp, #56]	; 0x38
 80251e4:	9306      	str	r3, [sp, #24]
 80251e6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80251ea:	9011      	str	r0, [sp, #68]	; 0x44
 80251ec:	6850      	ldr	r0, [r2, #4]
 80251ee:	6812      	ldr	r2, [r2, #0]
 80251f0:	fb00 1303 	mla	r3, r0, r3, r1
 80251f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80251f8:	9307      	str	r3, [sp, #28]
 80251fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80251fc:	681b      	ldr	r3, [r3, #0]
 80251fe:	9308      	str	r3, [sp, #32]
 8025200:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025202:	685b      	ldr	r3, [r3, #4]
 8025204:	9309      	str	r3, [sp, #36]	; 0x24
 8025206:	eef0 9a60 	vmov.f32	s19, s1
 802520a:	eeb0 9a41 	vmov.f32	s18, s2
 802520e:	eeb0 8a62 	vmov.f32	s16, s5
 8025212:	eef0 8a43 	vmov.f32	s17, s6
 8025216:	eef0 ba44 	vmov.f32	s23, s8
 802521a:	eeb0 ba64 	vmov.f32	s22, s9
 802521e:	eef0 aa45 	vmov.f32	s21, s10
 8025222:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025224:	2b00      	cmp	r3, #0
 8025226:	dc03      	bgt.n	8025230 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8025228:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802522a:	2b00      	cmp	r3, #0
 802522c:	f340 83b4 	ble.w	8025998 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8025230:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025232:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025236:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802523a:	1e48      	subs	r0, r1, #1
 802523c:	1e55      	subs	r5, r2, #1
 802523e:	9b06      	ldr	r3, [sp, #24]
 8025240:	2b00      	cmp	r3, #0
 8025242:	f340 8163 	ble.w	802550c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8025246:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8025248:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802524a:	1436      	asrs	r6, r6, #16
 802524c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025250:	d406      	bmi.n	8025260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025252:	4286      	cmp	r6, r0
 8025254:	da04      	bge.n	8025260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025256:	2b00      	cmp	r3, #0
 8025258:	db02      	blt.n	8025260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802525a:	42ab      	cmp	r3, r5
 802525c:	f2c0 8157 	blt.w	802550e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8025260:	3601      	adds	r6, #1
 8025262:	f100 8144 	bmi.w	80254ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025266:	42b1      	cmp	r1, r6
 8025268:	f2c0 8141 	blt.w	80254ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802526c:	3301      	adds	r3, #1
 802526e:	f100 813e 	bmi.w	80254ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025272:	429a      	cmp	r2, r3
 8025274:	f2c0 813b 	blt.w	80254ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025278:	9b06      	ldr	r3, [sp, #24]
 802527a:	9f07      	ldr	r7, [sp, #28]
 802527c:	930f      	str	r3, [sp, #60]	; 0x3c
 802527e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025282:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025284:	2b00      	cmp	r3, #0
 8025286:	f340 8164 	ble.w	8025552 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 802528a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802528c:	9d25      	ldr	r5, [sp, #148]	; 0x94
 802528e:	1418      	asrs	r0, r3, #16
 8025290:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8025292:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025296:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025298:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802529c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802529e:	142d      	asrs	r5, r5, #16
 80252a0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80252a4:	f100 81ee 	bmi.w	8025684 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80252a8:	f102 3eff 	add.w	lr, r2, #4294967295
 80252ac:	4575      	cmp	r5, lr
 80252ae:	f280 81e9 	bge.w	8025684 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80252b2:	2800      	cmp	r0, #0
 80252b4:	f2c0 81e6 	blt.w	8025684 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80252b8:	f103 3eff 	add.w	lr, r3, #4294967295
 80252bc:	4570      	cmp	r0, lr
 80252be:	f280 81e1 	bge.w	8025684 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80252c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80252c4:	b212      	sxth	r2, r2
 80252c6:	fb00 5002 	mla	r0, r0, r2, r5
 80252ca:	fa1f fe81 	uxth.w	lr, r1
 80252ce:	eb03 0a00 	add.w	sl, r3, r0
 80252d2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80252d6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80252da:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80252de:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80252e2:	b29b      	uxth	r3, r3
 80252e4:	f1bc 0f00 	cmp.w	ip, #0
 80252e8:	f000 8179 	beq.w	80255de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80252ec:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80252f0:	940a      	str	r4, [sp, #40]	; 0x28
 80252f2:	eb0a 0b02 	add.w	fp, sl, r2
 80252f6:	fa1f fa8c 	uxth.w	sl, ip
 80252fa:	fb0a fe0e 	mul.w	lr, sl, lr
 80252fe:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025302:	fa1f fa8a 	uxth.w	sl, sl
 8025306:	eba5 050e 	sub.w	r5, r5, lr
 802530a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802530e:	940b      	str	r4, [sp, #44]	; 0x2c
 8025310:	eba3 030a 	sub.w	r3, r3, sl
 8025314:	b2ad      	uxth	r5, r5
 8025316:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025318:	b29b      	uxth	r3, r3
 802531a:	fb08 f505 	mul.w	r5, r8, r5
 802531e:	fb09 5303 	mla	r3, r9, r3, r5
 8025322:	fb0a 3304 	mla	r3, sl, r4, r3
 8025326:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025328:	fb0e 3304 	mla	r3, lr, r4, r3
 802532c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025330:	2b00      	cmp	r3, #0
 8025332:	f000 80cf 	beq.w	80254d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8025336:	9c08      	ldr	r4, [sp, #32]
 8025338:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802533c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025340:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025344:	f000 8150 	beq.w	80255e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8025348:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802534c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025350:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025354:	fb09 f000 	mul.w	r0, r9, r0
 8025358:	fb0a fe0e 	mul.w	lr, sl, lr
 802535c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025360:	f100 0b20 	add.w	fp, r0, #32
 8025364:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025368:	44ce      	add	lr, r9
 802536a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802536e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025372:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025376:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802537a:	ea4e 0909 	orr.w	r9, lr, r9
 802537e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025382:	8868      	ldrh	r0, [r5, #2]
 8025384:	d019      	beq.n	80253ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8025386:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802538a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802538e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025392:	fb08 f800 	mul.w	r8, r8, r0
 8025396:	fb0a fe0e 	mul.w	lr, sl, lr
 802539a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802539e:	f108 0b20 	add.w	fp, r8, #32
 80253a2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80253a6:	4486      	add	lr, r0
 80253a8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80253ac:	0a00      	lsrs	r0, r0, #8
 80253ae:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80253b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80253b6:	ea4e 0000 	orr.w	r0, lr, r0
 80253ba:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80253be:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80253c2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80253c6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80253ca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80253ce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80253d2:	ea4e 0909 	orr.w	r9, lr, r9
 80253d6:	ea4a 0000 	orr.w	r0, sl, r0
 80253da:	f1bc 0f00 	cmp.w	ip, #0
 80253de:	f000 8105 	beq.w	80255ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80253e2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80253e6:	3a01      	subs	r2, #1
 80253e8:	0052      	lsls	r2, r2, #1
 80253ea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80253ec:	3202      	adds	r2, #2
 80253ee:	2cff      	cmp	r4, #255	; 0xff
 80253f0:	eb05 0e02 	add.w	lr, r5, r2
 80253f4:	5aaa      	ldrh	r2, [r5, r2]
 80253f6:	d018      	beq.n	802542a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80253f8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80253fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025400:	fb04 fa02 	mul.w	sl, r4, r2
 8025404:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025408:	fb08 f805 	mul.w	r8, r8, r5
 802540c:	f10a 0520 	add.w	r5, sl, #32
 8025410:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025414:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025418:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802541c:	4442      	add	r2, r8
 802541e:	0a2d      	lsrs	r5, r5, #8
 8025420:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025424:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025428:	432a      	orrs	r2, r5
 802542a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802542c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025430:	2cff      	cmp	r4, #255	; 0xff
 8025432:	d01a      	beq.n	802546a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8025434:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025438:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802543c:	fb04 fa05 	mul.w	sl, r4, r5
 8025440:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025444:	fb08 f80e 	mul.w	r8, r8, lr
 8025448:	f10a 0e20 	add.w	lr, sl, #32
 802544c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025450:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025454:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025458:	4445      	add	r5, r8
 802545a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802545e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8025462:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025466:	ea45 050e 	orr.w	r5, r5, lr
 802546a:	fb1c fe01 	smulbb	lr, ip, r1
 802546e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8025472:	f1cc 0810 	rsb	r8, ip, #16
 8025476:	eba8 0801 	sub.w	r8, r8, r1
 802547a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802547e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8025482:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8025486:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802548a:	4341      	muls	r1, r0
 802548c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025490:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025494:	ea4a 0202 	orr.w	r2, sl, r2
 8025498:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802549c:	fb09 1108 	mla	r1, r9, r8, r1
 80254a0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80254a4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80254a8:	fb0c 1102 	mla	r1, ip, r2, r1
 80254ac:	ea4b 0505 	orr.w	r5, fp, r5
 80254b0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80254b4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80254b8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80254bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80254c0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80254c4:	ea42 0e0e 	orr.w	lr, r2, lr
 80254c8:	fa1f f28e 	uxth.w	r2, lr
 80254cc:	2bff      	cmp	r3, #255	; 0xff
 80254ce:	f040 80a1 	bne.w	8025614 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 80254d2:	803a      	strh	r2, [r7, #0]
 80254d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80254d6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80254d8:	4413      	add	r3, r2
 80254da:	9325      	str	r3, [sp, #148]	; 0x94
 80254dc:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80254de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80254e0:	441a      	add	r2, r3
 80254e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80254e4:	9226      	str	r2, [sp, #152]	; 0x98
 80254e6:	3b01      	subs	r3, #1
 80254e8:	3702      	adds	r7, #2
 80254ea:	930f      	str	r3, [sp, #60]	; 0x3c
 80254ec:	e6c9      	b.n	8025282 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80254ee:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80254f0:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80254f2:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80254f4:	4433      	add	r3, r6
 80254f6:	9325      	str	r3, [sp, #148]	; 0x94
 80254f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80254fa:	441c      	add	r4, r3
 80254fc:	9b06      	ldr	r3, [sp, #24]
 80254fe:	9426      	str	r4, [sp, #152]	; 0x98
 8025500:	3b01      	subs	r3, #1
 8025502:	9306      	str	r3, [sp, #24]
 8025504:	9b07      	ldr	r3, [sp, #28]
 8025506:	3302      	adds	r3, #2
 8025508:	9307      	str	r3, [sp, #28]
 802550a:	e698      	b.n	802523e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802550c:	d028      	beq.n	8025560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 802550e:	9b06      	ldr	r3, [sp, #24]
 8025510:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8025512:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8025514:	3b01      	subs	r3, #1
 8025516:	fb00 5003 	mla	r0, r0, r3, r5
 802551a:	1400      	asrs	r0, r0, #16
 802551c:	f53f aeac 	bmi.w	8025278 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8025520:	3901      	subs	r1, #1
 8025522:	4288      	cmp	r0, r1
 8025524:	f6bf aea8 	bge.w	8025278 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8025528:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802552a:	9826      	ldr	r0, [sp, #152]	; 0x98
 802552c:	fb01 0303 	mla	r3, r1, r3, r0
 8025530:	141b      	asrs	r3, r3, #16
 8025532:	f53f aea1 	bmi.w	8025278 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8025536:	3a01      	subs	r2, #1
 8025538:	4293      	cmp	r3, r2
 802553a:	f6bf ae9d 	bge.w	8025278 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802553e:	9b06      	ldr	r3, [sp, #24]
 8025540:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8025544:	930f      	str	r3, [sp, #60]	; 0x3c
 8025546:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802554a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802554c:	2b00      	cmp	r3, #0
 802554e:	f300 80b6 	bgt.w	80256be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8025552:	9b06      	ldr	r3, [sp, #24]
 8025554:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025558:	9b07      	ldr	r3, [sp, #28]
 802555a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802555e:	9307      	str	r3, [sp, #28]
 8025560:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025562:	2b00      	cmp	r3, #0
 8025564:	f340 8218 	ble.w	8025998 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8025568:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802556c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025570:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8025574:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025576:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802557a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802557e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8025582:	eef0 6a48 	vmov.f32	s13, s16
 8025586:	ee69 7a27 	vmul.f32	s15, s18, s15
 802558a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802558e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8025592:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8025596:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 802559a:	eef0 6a68 	vmov.f32	s13, s17
 802559e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80255a2:	ee18 2a10 	vmov	r2, s16
 80255a6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80255aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80255ae:	ee18 2a90 	vmov	r2, s17
 80255b2:	9327      	str	r3, [sp, #156]	; 0x9c
 80255b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80255b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80255ba:	9328      	str	r3, [sp, #160]	; 0xa0
 80255bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80255be:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80255c0:	3b01      	subs	r3, #1
 80255c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80255c6:	930e      	str	r3, [sp, #56]	; 0x38
 80255c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80255ca:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80255ce:	bf08      	it	eq
 80255d0:	4613      	moveq	r3, r2
 80255d2:	9306      	str	r3, [sp, #24]
 80255d4:	eef0 8a67 	vmov.f32	s17, s15
 80255d8:	eeb0 8a47 	vmov.f32	s16, s14
 80255dc:	e621      	b.n	8025222 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80255de:	fb08 f505 	mul.w	r5, r8, r5
 80255e2:	fb09 5303 	mla	r3, r9, r3, r5
 80255e6:	e6a1      	b.n	802532c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80255e8:	4681      	mov	r9, r0
 80255ea:	e6c8      	b.n	802537e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80255ec:	f1c1 0210 	rsb	r2, r1, #16
 80255f0:	4341      	muls	r1, r0
 80255f2:	fb09 1902 	mla	r9, r9, r2, r1
 80255f6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80255fa:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80255fe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8025602:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025606:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802560a:	ea42 0909 	orr.w	r9, r2, r9
 802560e:	fa1f f289 	uxth.w	r2, r9
 8025612:	e75b      	b.n	80254cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8025614:	f8b7 c000 	ldrh.w	ip, [r7]
 8025618:	43db      	mvns	r3, r3
 802561a:	ea4f 202c 	mov.w	r0, ip, asr #8
 802561e:	fa5f fe83 	uxtb.w	lr, r3
 8025622:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025626:	fb00 f00e 	mul.w	r0, r0, lr
 802562a:	1c41      	adds	r1, r0, #1
 802562c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025630:	1211      	asrs	r1, r2, #8
 8025632:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8025636:	f021 0107 	bic.w	r1, r1, #7
 802563a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802563e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8025642:	48d8      	ldr	r0, [pc, #864]	; (80259a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8025644:	fb05 f50e 	mul.w	r5, r5, lr
 8025648:	b2c9      	uxtb	r1, r1
 802564a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802564e:	1c69      	adds	r1, r5, #1
 8025650:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8025654:	10d1      	asrs	r1, r2, #3
 8025656:	f021 0103 	bic.w	r1, r1, #3
 802565a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802565e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8025662:	b2db      	uxtb	r3, r3
 8025664:	00c9      	lsls	r1, r1, #3
 8025666:	fb03 f30e 	mul.w	r3, r3, lr
 802566a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802566e:	4301      	orrs	r1, r0
 8025670:	1c58      	adds	r0, r3, #1
 8025672:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8025676:	00d2      	lsls	r2, r2, #3
 8025678:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802567c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025680:	430a      	orrs	r2, r1
 8025682:	e726      	b.n	80254d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8025684:	f115 0e01 	adds.w	lr, r5, #1
 8025688:	f53f af24 	bmi.w	80254d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802568c:	4572      	cmp	r2, lr
 802568e:	f6ff af21 	blt.w	80254d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8025692:	f110 0e01 	adds.w	lr, r0, #1
 8025696:	f53f af1d 	bmi.w	80254d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802569a:	4573      	cmp	r3, lr
 802569c:	f6ff af1a 	blt.w	80254d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80256a0:	b21b      	sxth	r3, r3
 80256a2:	b212      	sxth	r2, r2
 80256a4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80256a8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80256ac:	9301      	str	r3, [sp, #4]
 80256ae:	9200      	str	r2, [sp, #0]
 80256b0:	4639      	mov	r1, r7
 80256b2:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80256b6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80256b8:	f7ff fbf4 	bl	8024ea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80256bc:	e70a      	b.n	80254d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80256be:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80256c0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80256c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80256c6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80256ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80256cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80256d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80256d2:	141f      	asrs	r7, r3, #16
 80256d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80256d6:	141b      	asrs	r3, r3, #16
 80256d8:	fb01 3707 	mla	r7, r1, r7, r3
 80256dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80256de:	fa1f fc82 	uxth.w	ip, r2
 80256e2:	eb03 0a07 	add.w	sl, r3, r7
 80256e6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80256ea:	f813 9007 	ldrb.w	r9, [r3, r7]
 80256ee:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80256f2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80256f6:	b29b      	uxth	r3, r3
 80256f8:	2d00      	cmp	r5, #0
 80256fa:	f000 80fe 	beq.w	80258fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 80256fe:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8025702:	940c      	str	r4, [sp, #48]	; 0x30
 8025704:	eb0a 0b01 	add.w	fp, sl, r1
 8025708:	fa1f fa85 	uxth.w	sl, r5
 802570c:	fb0a fc0c 	mul.w	ip, sl, ip
 8025710:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8025714:	fa1f fa8a 	uxth.w	sl, sl
 8025718:	eba0 000c 	sub.w	r0, r0, ip
 802571c:	eba3 030a 	sub.w	r3, r3, sl
 8025720:	b280      	uxth	r0, r0
 8025722:	fb08 f000 	mul.w	r0, r8, r0
 8025726:	b29b      	uxth	r3, r3
 8025728:	fb09 0303 	mla	r3, r9, r3, r0
 802572c:	980c      	ldr	r0, [sp, #48]	; 0x30
 802572e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025732:	940d      	str	r4, [sp, #52]	; 0x34
 8025734:	fb0a 3300 	mla	r3, sl, r0, r3
 8025738:	fb0c 3304 	mla	r3, ip, r4, r3
 802573c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025740:	2b00      	cmp	r3, #0
 8025742:	f000 80cc 	beq.w	80258de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8025746:	9808      	ldr	r0, [sp, #32]
 8025748:	9c08      	ldr	r4, [sp, #32]
 802574a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802574e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8025752:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8025756:	f000 80d5 	beq.w	8025904 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 802575a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802575e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025762:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025766:	fb09 f707 	mul.w	r7, r9, r7
 802576a:	fb0a fc0c 	mul.w	ip, sl, ip
 802576e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8025772:	f107 0b20 	add.w	fp, r7, #32
 8025776:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802577a:	44cc      	add	ip, r9
 802577c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025780:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025784:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025788:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802578c:	ea4c 0909 	orr.w	r9, ip, r9
 8025790:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025794:	8847      	ldrh	r7, [r0, #2]
 8025796:	d019      	beq.n	80257cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8025798:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802579c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80257a0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80257a4:	fb08 f807 	mul.w	r8, r8, r7
 80257a8:	fb0a fc0c 	mul.w	ip, sl, ip
 80257ac:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80257b0:	f108 0b20 	add.w	fp, r8, #32
 80257b4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80257b8:	44bc      	add	ip, r7
 80257ba:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80257be:	0a3f      	lsrs	r7, r7, #8
 80257c0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80257c4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80257c8:	ea4c 0707 	orr.w	r7, ip, r7
 80257cc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80257d0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80257d4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80257d8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80257dc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80257e0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80257e4:	ea4c 0909 	orr.w	r9, ip, r9
 80257e8:	ea4a 0707 	orr.w	r7, sl, r7
 80257ec:	2d00      	cmp	r5, #0
 80257ee:	f000 808b 	beq.w	8025908 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 80257f2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80257f6:	3901      	subs	r1, #1
 80257f8:	0049      	lsls	r1, r1, #1
 80257fa:	3102      	adds	r1, #2
 80257fc:	eb00 0c01 	add.w	ip, r0, r1
 8025800:	5a41      	ldrh	r1, [r0, r1]
 8025802:	980c      	ldr	r0, [sp, #48]	; 0x30
 8025804:	28ff      	cmp	r0, #255	; 0xff
 8025806:	d019      	beq.n	802583c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8025808:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802580a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802580e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025812:	fb04 fa01 	mul.w	sl, r4, r1
 8025816:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802581a:	fb08 f800 	mul.w	r8, r8, r0
 802581e:	f10a 0020 	add.w	r0, sl, #32
 8025822:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8025826:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802582a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802582e:	4441      	add	r1, r8
 8025830:	0a00      	lsrs	r0, r0, #8
 8025832:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8025836:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802583a:	4301      	orrs	r1, r0
 802583c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802583e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8025842:	2cff      	cmp	r4, #255	; 0xff
 8025844:	d01a      	beq.n	802587c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8025846:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802584a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802584e:	fb04 fa00 	mul.w	sl, r4, r0
 8025852:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025856:	fb08 f80c 	mul.w	r8, r8, ip
 802585a:	f10a 0c20 	add.w	ip, sl, #32
 802585e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8025862:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8025866:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802586a:	4440      	add	r0, r8
 802586c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025870:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8025874:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025878:	ea40 000c 	orr.w	r0, r0, ip
 802587c:	fb15 fc02 	smulbb	ip, r5, r2
 8025880:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8025884:	f1c5 0810 	rsb	r8, r5, #16
 8025888:	eba8 0802 	sub.w	r8, r8, r2
 802588c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025890:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8025894:	437a      	muls	r2, r7
 8025896:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802589a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802589e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80258a2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80258a6:	fb09 2208 	mla	r2, r9, r8, r2
 80258aa:	ea4a 0101 	orr.w	r1, sl, r1
 80258ae:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80258b2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80258b6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80258ba:	fb05 2201 	mla	r2, r5, r1, r2
 80258be:	ea4b 0000 	orr.w	r0, fp, r0
 80258c2:	fb0c 2200 	mla	r2, ip, r0, r2
 80258c6:	0d57      	lsrs	r7, r2, #21
 80258c8:	0952      	lsrs	r2, r2, #5
 80258ca:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80258ce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80258d2:	433a      	orrs	r2, r7
 80258d4:	2bff      	cmp	r3, #255	; 0xff
 80258d6:	b292      	uxth	r2, r2
 80258d8:	d127      	bne.n	802592a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80258da:	f8ae 2000 	strh.w	r2, [lr]
 80258de:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80258e0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80258e2:	4413      	add	r3, r2
 80258e4:	9325      	str	r3, [sp, #148]	; 0x94
 80258e6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80258e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80258ea:	441a      	add	r2, r3
 80258ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80258ee:	9226      	str	r2, [sp, #152]	; 0x98
 80258f0:	3b01      	subs	r3, #1
 80258f2:	f10e 0e02 	add.w	lr, lr, #2
 80258f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80258f8:	e627      	b.n	802554a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80258fa:	fb08 f000 	mul.w	r0, r8, r0
 80258fe:	fb09 0303 	mla	r3, r9, r3, r0
 8025902:	e71b      	b.n	802573c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8025904:	46b9      	mov	r9, r7
 8025906:	e743      	b.n	8025790 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8025908:	f1c2 0110 	rsb	r1, r2, #16
 802590c:	437a      	muls	r2, r7
 802590e:	fb09 2901 	mla	r9, r9, r1, r2
 8025912:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025916:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802591a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802591e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025922:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025926:	4302      	orrs	r2, r0
 8025928:	e7d4      	b.n	80258d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802592a:	f8be 7000 	ldrh.w	r7, [lr]
 802592e:	4c1d      	ldr	r4, [pc, #116]	; (80259a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8025930:	43db      	mvns	r3, r3
 8025932:	1238      	asrs	r0, r7, #8
 8025934:	fa5f fc83 	uxtb.w	ip, r3
 8025938:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802593c:	10fd      	asrs	r5, r7, #3
 802593e:	fb00 f00c 	mul.w	r0, r0, ip
 8025942:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8025946:	fb05 f10c 	mul.w	r1, r5, ip
 802594a:	1c45      	adds	r5, r0, #1
 802594c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8025950:	1215      	asrs	r5, r2, #8
 8025952:	f025 0507 	bic.w	r5, r5, #7
 8025956:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802595a:	1c4d      	adds	r5, r1, #1
 802595c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8025960:	10d1      	asrs	r1, r2, #3
 8025962:	f021 0103 	bic.w	r1, r1, #3
 8025966:	00fb      	lsls	r3, r7, #3
 8025968:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802596c:	b2db      	uxtb	r3, r3
 802596e:	b2c0      	uxtb	r0, r0
 8025970:	00c9      	lsls	r1, r1, #3
 8025972:	fb03 f30c 	mul.w	r3, r3, ip
 8025976:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802597a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802597e:	4308      	orrs	r0, r1
 8025980:	1c59      	adds	r1, r3, #1
 8025982:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025986:	00d2      	lsls	r2, r2, #3
 8025988:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802598c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8025990:	4318      	orrs	r0, r3
 8025992:	f8ae 0000 	strh.w	r0, [lr]
 8025996:	e7a2      	b.n	80258de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8025998:	b013      	add	sp, #76	; 0x4c
 802599a:	ecbd 8b08 	vpop	{d8-d11}
 802599e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80259a2:	bf00      	nop
 80259a4:	fffff800 	.word	0xfffff800

080259a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80259a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80259ac:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 80259b0:	fb0c 4e03 	mla	lr, ip, r3, r4
 80259b4:	f1bc 0f00 	cmp.w	ip, #0
 80259b8:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80259bc:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 80259c0:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 80259c4:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80259c8:	8808      	ldrh	r0, [r1, #0]
 80259ca:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 80259ce:	db2f      	blt.n	8025a30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 80259d0:	45e2      	cmp	sl, ip
 80259d2:	dd2d      	ble.n	8025a30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 80259d4:	2c00      	cmp	r4, #0
 80259d6:	db29      	blt.n	8025a2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80259d8:	42a3      	cmp	r3, r4
 80259da:	dd27      	ble.n	8025a2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80259dc:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 80259e0:	1c62      	adds	r2, r4, #1
 80259e2:	d428      	bmi.n	8025a36 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80259e4:	4293      	cmp	r3, r2
 80259e6:	dd26      	ble.n	8025a36 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80259e8:	b32f      	cbz	r7, 8025a36 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80259ea:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 80259ee:	f11c 0c01 	adds.w	ip, ip, #1
 80259f2:	d424      	bmi.n	8025a3e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80259f4:	45e2      	cmp	sl, ip
 80259f6:	dd22      	ble.n	8025a3e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80259f8:	2e00      	cmp	r6, #0
 80259fa:	f000 809d 	beq.w	8025b38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 80259fe:	2c00      	cmp	r4, #0
 8025a00:	db1b      	blt.n	8025a3a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8025a02:	42a3      	cmp	r3, r4
 8025a04:	dd19      	ble.n	8025a3a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8025a06:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8025a0a:	3401      	adds	r4, #1
 8025a0c:	d41a      	bmi.n	8025a44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8025a0e:	42a3      	cmp	r3, r4
 8025a10:	dd18      	ble.n	8025a44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8025a12:	b1cf      	cbz	r7, 8025a48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8025a14:	3301      	adds	r3, #1
 8025a16:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8025a1a:	2f0f      	cmp	r7, #15
 8025a1c:	d915      	bls.n	8025a4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8025a1e:	4b49      	ldr	r3, [pc, #292]	; (8025b44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8025a20:	4a49      	ldr	r2, [pc, #292]	; (8025b48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8025a22:	484a      	ldr	r0, [pc, #296]	; (8025b4c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8025a24:	f240 11db 	movw	r1, #475	; 0x1db
 8025a28:	f006 fae4 	bl	802bff4 <__assert_func>
 8025a2c:	4681      	mov	r9, r0
 8025a2e:	e7d7      	b.n	80259e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8025a30:	4686      	mov	lr, r0
 8025a32:	4681      	mov	r9, r0
 8025a34:	e7db      	b.n	80259ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8025a36:	4686      	mov	lr, r0
 8025a38:	e7d9      	b.n	80259ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8025a3a:	4684      	mov	ip, r0
 8025a3c:	e7e5      	b.n	8025a0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8025a3e:	4603      	mov	r3, r0
 8025a40:	4684      	mov	ip, r0
 8025a42:	e7ea      	b.n	8025a1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8025a44:	4603      	mov	r3, r0
 8025a46:	e7e8      	b.n	8025a1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8025a48:	4603      	mov	r3, r0
 8025a4a:	2e0f      	cmp	r6, #15
 8025a4c:	d8e7      	bhi.n	8025a1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8025a4e:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8025a52:	fb17 f806 	smulbb	r8, r7, r6
 8025a56:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025a5a:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8025a5e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025a62:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8025a66:	ea44 0909 	orr.w	r9, r4, r9
 8025a6a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025a6e:	f1c6 0410 	rsb	r4, r6, #16
 8025a72:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025a76:	1be4      	subs	r4, r4, r7
 8025a78:	041a      	lsls	r2, r3, #16
 8025a7a:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8025a7e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8025a82:	fb07 fe0e 	mul.w	lr, r7, lr
 8025a86:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025a8a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8025a8e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8025a92:	fb04 e409 	mla	r4, r4, r9, lr
 8025a96:	4313      	orrs	r3, r2
 8025a98:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8025a9c:	fb08 4303 	mla	r3, r8, r3, r4
 8025aa0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025aa4:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8025aa8:	4322      	orrs	r2, r4
 8025aaa:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8025aae:	fb06 3202 	mla	r2, r6, r2, r3
 8025ab2:	0d53      	lsrs	r3, r2, #21
 8025ab4:	0952      	lsrs	r2, r2, #5
 8025ab6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025aba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025abe:	431a      	orrs	r2, r3
 8025ac0:	b293      	uxth	r3, r2
 8025ac2:	b2af      	uxth	r7, r5
 8025ac4:	1202      	asrs	r2, r0, #8
 8025ac6:	43ed      	mvns	r5, r5
 8025ac8:	b2ed      	uxtb	r5, r5
 8025aca:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8025ace:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025ad2:	fb12 f205 	smulbb	r2, r2, r5
 8025ad6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025ada:	fb0c 2c07 	mla	ip, ip, r7, r2
 8025ade:	00dc      	lsls	r4, r3, #3
 8025ae0:	10da      	asrs	r2, r3, #3
 8025ae2:	10c6      	asrs	r6, r0, #3
 8025ae4:	00c3      	lsls	r3, r0, #3
 8025ae6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8025aea:	b2db      	uxtb	r3, r3
 8025aec:	fb16 f605 	smulbb	r6, r6, r5
 8025af0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025af4:	b2e4      	uxtb	r4, r4
 8025af6:	fb13 f305 	smulbb	r3, r3, r5
 8025afa:	fa1f fc8c 	uxth.w	ip, ip
 8025afe:	fb02 6207 	mla	r2, r2, r7, r6
 8025b02:	fb04 3307 	mla	r3, r4, r7, r3
 8025b06:	b296      	uxth	r6, r2
 8025b08:	b29a      	uxth	r2, r3
 8025b0a:	f10c 0301 	add.w	r3, ip, #1
 8025b0e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8025b12:	1c53      	adds	r3, r2, #1
 8025b14:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025b18:	1c72      	adds	r2, r6, #1
 8025b1a:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8025b1e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8025b22:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025b26:	0952      	lsrs	r2, r2, #5
 8025b28:	ea43 030c 	orr.w	r3, r3, ip
 8025b2c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025b30:	4313      	orrs	r3, r2
 8025b32:	800b      	strh	r3, [r1, #0]
 8025b34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025b38:	2f0f      	cmp	r7, #15
 8025b3a:	f63f af70 	bhi.w	8025a1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8025b3e:	4603      	mov	r3, r0
 8025b40:	4684      	mov	ip, r0
 8025b42:	e784      	b.n	8025a4e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8025b44:	08035c27 	.word	0x08035c27
 8025b48:	080361ff 	.word	0x080361ff
 8025b4c:	08035bf4 	.word	0x08035bf4

08025b50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025b50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025b54:	ed2d 8b08 	vpush	{d8-d11}
 8025b58:	b093      	sub	sp, #76	; 0x4c
 8025b5a:	461d      	mov	r5, r3
 8025b5c:	9210      	str	r2, [sp, #64]	; 0x40
 8025b5e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8025b60:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8025b64:	920b      	str	r2, [sp, #44]	; 0x2c
 8025b66:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8025b6a:	910a      	str	r1, [sp, #40]	; 0x28
 8025b6c:	6859      	ldr	r1, [r3, #4]
 8025b6e:	681b      	ldr	r3, [r3, #0]
 8025b70:	9011      	str	r0, [sp, #68]	; 0x44
 8025b72:	fb01 2707 	mla	r7, r1, r7, r2
 8025b76:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8025b7a:	9307      	str	r3, [sp, #28]
 8025b7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025b7e:	681b      	ldr	r3, [r3, #0]
 8025b80:	9309      	str	r3, [sp, #36]	; 0x24
 8025b82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8025b84:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8025b88:	43db      	mvns	r3, r3
 8025b8a:	b2db      	uxtb	r3, r3
 8025b8c:	eeb0 aa40 	vmov.f32	s20, s0
 8025b90:	eef0 9a60 	vmov.f32	s19, s1
 8025b94:	eeb0 9a41 	vmov.f32	s18, s2
 8025b98:	eeb0 8a62 	vmov.f32	s16, s5
 8025b9c:	eef0 8a43 	vmov.f32	s17, s6
 8025ba0:	eef0 ba44 	vmov.f32	s23, s8
 8025ba4:	eeb0 ba64 	vmov.f32	s22, s9
 8025ba8:	eef0 aa45 	vmov.f32	s21, s10
 8025bac:	9308      	str	r3, [sp, #32]
 8025bae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025bb0:	2b00      	cmp	r3, #0
 8025bb2:	dc03      	bgt.n	8025bbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025bb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8025bb6:	2b00      	cmp	r3, #0
 8025bb8:	f340 8203 	ble.w	8025fc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8025bbc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025bbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025bc2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025bc6:	1e48      	subs	r0, r1, #1
 8025bc8:	f102 3cff 	add.w	ip, r2, #4294967295
 8025bcc:	2d00      	cmp	r5, #0
 8025bce:	f340 80da 	ble.w	8025d86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8025bd2:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025bd6:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025bda:	d406      	bmi.n	8025bea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8025bdc:	4586      	cmp	lr, r0
 8025bde:	da04      	bge.n	8025bea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8025be0:	2b00      	cmp	r3, #0
 8025be2:	db02      	blt.n	8025bea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8025be4:	4563      	cmp	r3, ip
 8025be6:	f2c0 80cf 	blt.w	8025d88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8025bea:	f11e 0e01 	adds.w	lr, lr, #1
 8025bee:	f100 80c1 	bmi.w	8025d74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8025bf2:	4571      	cmp	r1, lr
 8025bf4:	f2c0 80be 	blt.w	8025d74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8025bf8:	3301      	adds	r3, #1
 8025bfa:	f100 80bb 	bmi.w	8025d74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8025bfe:	429a      	cmp	r2, r3
 8025c00:	f2c0 80b8 	blt.w	8025d74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8025c04:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8025c08:	46a9      	mov	r9, r5
 8025c0a:	f1b9 0f00 	cmp.w	r9, #0
 8025c0e:	f340 80d8 	ble.w	8025dc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8025c12:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025c14:	1421      	asrs	r1, r4, #16
 8025c16:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025c1a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025c1e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8025c22:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8025c26:	f100 8111 	bmi.w	8025e4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8025c2a:	f10e 3aff 	add.w	sl, lr, #4294967295
 8025c2e:	4551      	cmp	r1, sl
 8025c30:	f280 810c 	bge.w	8025e4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8025c34:	2800      	cmp	r0, #0
 8025c36:	f2c0 8109 	blt.w	8025e4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8025c3a:	f103 3aff 	add.w	sl, r3, #4294967295
 8025c3e:	4550      	cmp	r0, sl
 8025c40:	f280 8104 	bge.w	8025e4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8025c44:	fa0f f38e 	sxth.w	r3, lr
 8025c48:	fb00 1103 	mla	r1, r0, r3, r1
 8025c4c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8025c4e:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8025c52:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8025c56:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8025c5a:	f1bc 0f00 	cmp.w	ip, #0
 8025c5e:	d007      	beq.n	8025c70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8025c60:	005b      	lsls	r3, r3, #1
 8025c62:	eb0a 0003 	add.w	r0, sl, r3
 8025c66:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8025c6a:	930c      	str	r3, [sp, #48]	; 0x30
 8025c6c:	8843      	ldrh	r3, [r0, #2]
 8025c6e:	930d      	str	r3, [sp, #52]	; 0x34
 8025c70:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8025c74:	fb12 f30c 	smulbb	r3, r2, ip
 8025c78:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025c7c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025c80:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025c84:	10db      	asrs	r3, r3, #3
 8025c86:	ea40 000e 	orr.w	r0, r0, lr
 8025c8a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c8e:	f1cc 0e10 	rsb	lr, ip, #16
 8025c92:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025c96:	ebae 0e02 	sub.w	lr, lr, r2
 8025c9a:	ea4a 0101 	orr.w	r1, sl, r1
 8025c9e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025ca2:	4351      	muls	r1, r2
 8025ca4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8025ca6:	9f08      	ldr	r7, [sp, #32]
 8025ca8:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8025cac:	fb0e 1e00 	mla	lr, lr, r0, r1
 8025cb0:	0410      	lsls	r0, r2, #16
 8025cb2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025cb6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025cba:	4310      	orrs	r0, r2
 8025cbc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025cbe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025cc0:	0412      	lsls	r2, r2, #16
 8025cc2:	fb03 e000 	mla	r0, r3, r0, lr
 8025cc6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025cca:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8025cce:	ea42 020e 	orr.w	r2, r2, lr
 8025cd2:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8025cd6:	fb03 0302 	mla	r3, r3, r2, r0
 8025cda:	0d5a      	lsrs	r2, r3, #21
 8025cdc:	095b      	lsrs	r3, r3, #5
 8025cde:	f8b8 0000 	ldrh.w	r0, [r8]
 8025ce2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025ce6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8025cea:	4313      	orrs	r3, r2
 8025cec:	b29b      	uxth	r3, r3
 8025cee:	1201      	asrs	r1, r0, #8
 8025cf0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8025cf4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8025cf8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025cfc:	fb11 f107 	smulbb	r1, r1, r7
 8025d00:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8025d04:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025d08:	00c0      	lsls	r0, r0, #3
 8025d0a:	fb0c 1c02 	mla	ip, ip, r2, r1
 8025d0e:	b2c0      	uxtb	r0, r0
 8025d10:	10d9      	asrs	r1, r3, #3
 8025d12:	00db      	lsls	r3, r3, #3
 8025d14:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8025d18:	b2db      	uxtb	r3, r3
 8025d1a:	fb10 f007 	smulbb	r0, r0, r7
 8025d1e:	fa1f fc8c 	uxth.w	ip, ip
 8025d22:	fb03 0302 	mla	r3, r3, r2, r0
 8025d26:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025d2a:	fb1e fe07 	smulbb	lr, lr, r7
 8025d2e:	fb01 e102 	mla	r1, r1, r2, lr
 8025d32:	b29a      	uxth	r2, r3
 8025d34:	f10c 0301 	add.w	r3, ip, #1
 8025d38:	b289      	uxth	r1, r1
 8025d3a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8025d3e:	1c53      	adds	r3, r2, #1
 8025d40:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025d44:	1c4a      	adds	r2, r1, #1
 8025d46:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025d4a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8025d4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025d52:	0949      	lsrs	r1, r1, #5
 8025d54:	ea43 030c 	orr.w	r3, r3, ip
 8025d58:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025d5c:	430b      	orrs	r3, r1
 8025d5e:	f8a8 3000 	strh.w	r3, [r8]
 8025d62:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025d64:	441c      	add	r4, r3
 8025d66:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025d68:	f108 0802 	add.w	r8, r8, #2
 8025d6c:	441e      	add	r6, r3
 8025d6e:	f109 39ff 	add.w	r9, r9, #4294967295
 8025d72:	e74a      	b.n	8025c0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8025d74:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025d76:	441c      	add	r4, r3
 8025d78:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025d7a:	441e      	add	r6, r3
 8025d7c:	9b07      	ldr	r3, [sp, #28]
 8025d7e:	3302      	adds	r3, #2
 8025d80:	3d01      	subs	r5, #1
 8025d82:	9307      	str	r3, [sp, #28]
 8025d84:	e722      	b.n	8025bcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025d86:	d022      	beq.n	8025dce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8025d88:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8025d8a:	1e6b      	subs	r3, r5, #1
 8025d8c:	fb00 4003 	mla	r0, r0, r3, r4
 8025d90:	1400      	asrs	r0, r0, #16
 8025d92:	f53f af37 	bmi.w	8025c04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8025d96:	3901      	subs	r1, #1
 8025d98:	4288      	cmp	r0, r1
 8025d9a:	f6bf af33 	bge.w	8025c04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8025d9e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8025da0:	fb01 6303 	mla	r3, r1, r3, r6
 8025da4:	141b      	asrs	r3, r3, #16
 8025da6:	f53f af2d 	bmi.w	8025c04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8025daa:	3a01      	subs	r2, #1
 8025dac:	4293      	cmp	r3, r2
 8025dae:	f6bf af29 	bge.w	8025c04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8025db2:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8025db6:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8025dba:	46a8      	mov	r8, r5
 8025dbc:	f1b8 0f00 	cmp.w	r8, #0
 8025dc0:	dc5e      	bgt.n	8025e80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025dc2:	9b07      	ldr	r3, [sp, #28]
 8025dc4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025dc8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025dcc:	9307      	str	r3, [sp, #28]
 8025dce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025dd0:	2b00      	cmp	r3, #0
 8025dd2:	f340 80f6 	ble.w	8025fc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8025dd6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8025dda:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025dde:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8025de2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025de4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8025de8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8025dec:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8025df0:	eef0 6a48 	vmov.f32	s13, s16
 8025df4:	ee69 7a27 	vmul.f32	s15, s18, s15
 8025df8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025dfc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8025e00:	ee16 4a90 	vmov	r4, s13
 8025e04:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8025e08:	eef0 6a68 	vmov.f32	s13, s17
 8025e0c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8025e10:	ee18 2a10 	vmov	r2, s16
 8025e14:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8025e18:	fb92 f3f3 	sdiv	r3, r2, r3
 8025e1c:	ee18 2a90 	vmov	r2, s17
 8025e20:	9327      	str	r3, [sp, #156]	; 0x9c
 8025e22:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e24:	fb92 f3f3 	sdiv	r3, r2, r3
 8025e28:	9328      	str	r3, [sp, #160]	; 0xa0
 8025e2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025e2c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025e2e:	3b01      	subs	r3, #1
 8025e30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025e34:	930a      	str	r3, [sp, #40]	; 0x28
 8025e36:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e38:	ee16 6a90 	vmov	r6, s13
 8025e3c:	bf14      	ite	ne
 8025e3e:	461d      	movne	r5, r3
 8025e40:	4615      	moveq	r5, r2
 8025e42:	eef0 8a67 	vmov.f32	s17, s15
 8025e46:	eeb0 8a47 	vmov.f32	s16, s14
 8025e4a:	e6b0      	b.n	8025bae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8025e4c:	f111 0a01 	adds.w	sl, r1, #1
 8025e50:	d487      	bmi.n	8025d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8025e52:	45d6      	cmp	lr, sl
 8025e54:	db85      	blt.n	8025d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8025e56:	f110 0a01 	adds.w	sl, r0, #1
 8025e5a:	d482      	bmi.n	8025d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8025e5c:	4553      	cmp	r3, sl
 8025e5e:	db80      	blt.n	8025d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8025e60:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8025e62:	9101      	str	r1, [sp, #4]
 8025e64:	b21b      	sxth	r3, r3
 8025e66:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8025e6a:	9300      	str	r3, [sp, #0]
 8025e6c:	e9cd c704 	strd	ip, r7, [sp, #16]
 8025e70:	fa0f f38e 	sxth.w	r3, lr
 8025e74:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025e76:	9811      	ldr	r0, [sp, #68]	; 0x44
 8025e78:	4641      	mov	r1, r8
 8025e7a:	f7ff fd95 	bl	80259a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8025e7e:	e770      	b.n	8025d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8025e80:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025e82:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8025e84:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025e88:	1430      	asrs	r0, r6, #16
 8025e8a:	1423      	asrs	r3, r4, #16
 8025e8c:	fb01 3000 	mla	r0, r1, r0, r3
 8025e90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e92:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8025e96:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8025e9a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8025e9e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025ea2:	8858      	ldrh	r0, [r3, #2]
 8025ea4:	f1be 0f00 	cmp.w	lr, #0
 8025ea8:	d00b      	beq.n	8025ec2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8025eaa:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8025eae:	3901      	subs	r1, #1
 8025eb0:	0049      	lsls	r1, r1, #1
 8025eb2:	3102      	adds	r1, #2
 8025eb4:	eb03 0b01 	add.w	fp, r3, r1
 8025eb8:	5a5b      	ldrh	r3, [r3, r1]
 8025eba:	930e      	str	r3, [sp, #56]	; 0x38
 8025ebc:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8025ec0:	930f      	str	r3, [sp, #60]	; 0x3c
 8025ec2:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8025ec6:	fb12 f30e 	smulbb	r3, r2, lr
 8025eca:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8025ece:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025ed2:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8025ed6:	10db      	asrs	r3, r3, #3
 8025ed8:	ea41 010c 	orr.w	r1, r1, ip
 8025edc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025ee0:	f1ce 0c10 	rsb	ip, lr, #16
 8025ee4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025ee8:	ebac 0c02 	sub.w	ip, ip, r2
 8025eec:	ea4b 0000 	orr.w	r0, fp, r0
 8025ef0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025ef4:	4350      	muls	r0, r2
 8025ef6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025ef8:	9f08      	ldr	r7, [sp, #32]
 8025efa:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8025efe:	fb0c 0c01 	mla	ip, ip, r1, r0
 8025f02:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8025f06:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8025f0a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8025f0c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8025f0e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025f12:	0412      	lsls	r2, r2, #16
 8025f14:	ea4b 0101 	orr.w	r1, fp, r1
 8025f18:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025f1c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025f20:	fb03 c101 	mla	r1, r3, r1, ip
 8025f24:	4302      	orrs	r2, r0
 8025f26:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8025f2a:	fb03 1202 	mla	r2, r3, r2, r1
 8025f2e:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8025f32:	0952      	lsrs	r2, r2, #5
 8025f34:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8025f38:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8025f3c:	f8b9 2000 	ldrh.w	r2, [r9]
 8025f40:	ea4b 0303 	orr.w	r3, fp, r3
 8025f44:	b29b      	uxth	r3, r3
 8025f46:	1211      	asrs	r1, r2, #8
 8025f48:	1218      	asrs	r0, r3, #8
 8025f4a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025f4e:	fb11 f107 	smulbb	r1, r1, r7
 8025f52:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8025f56:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025f5a:	00d2      	lsls	r2, r2, #3
 8025f5c:	fb00 100a 	mla	r0, r0, sl, r1
 8025f60:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8025f64:	10d9      	asrs	r1, r3, #3
 8025f66:	b2d2      	uxtb	r2, r2
 8025f68:	00db      	lsls	r3, r3, #3
 8025f6a:	fb1c fc07 	smulbb	ip, ip, r7
 8025f6e:	fb12 f207 	smulbb	r2, r2, r7
 8025f72:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025f76:	b2db      	uxtb	r3, r3
 8025f78:	b280      	uxth	r0, r0
 8025f7a:	fb01 c10a 	mla	r1, r1, sl, ip
 8025f7e:	fb03 230a 	mla	r3, r3, sl, r2
 8025f82:	b29b      	uxth	r3, r3
 8025f84:	b289      	uxth	r1, r1
 8025f86:	1c42      	adds	r2, r0, #1
 8025f88:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025f8c:	f101 0c01 	add.w	ip, r1, #1
 8025f90:	1c5a      	adds	r2, r3, #1
 8025f92:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025f96:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8025f9a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025f9c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025fa0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8025fa4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025fa8:	4310      	orrs	r0, r2
 8025faa:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025fae:	441c      	add	r4, r3
 8025fb0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025fb2:	ea40 000c 	orr.w	r0, r0, ip
 8025fb6:	f829 0b02 	strh.w	r0, [r9], #2
 8025fba:	441e      	add	r6, r3
 8025fbc:	f108 38ff 	add.w	r8, r8, #4294967295
 8025fc0:	e6fc      	b.n	8025dbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8025fc2:	b013      	add	sp, #76	; 0x4c
 8025fc4:	ecbd 8b08 	vpop	{d8-d11}
 8025fc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025fcc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8025fcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025fd0:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8025fd4:	fb06 5c03 	mla	ip, r6, r3, r5
 8025fd8:	2e00      	cmp	r6, #0
 8025fda:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8025fde:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8025fe2:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8025fe6:	8808      	ldrh	r0, [r1, #0]
 8025fe8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8025fec:	db2e      	blt.n	802604c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8025fee:	45b0      	cmp	r8, r6
 8025ff0:	dd2c      	ble.n	802604c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8025ff2:	2d00      	cmp	r5, #0
 8025ff4:	db28      	blt.n	8026048 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8025ff6:	42ab      	cmp	r3, r5
 8025ff8:	dd26      	ble.n	8026048 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8025ffa:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8025ffe:	1c6a      	adds	r2, r5, #1
 8026000:	d427      	bmi.n	8026052 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8026002:	4293      	cmp	r3, r2
 8026004:	dd25      	ble.n	8026052 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8026006:	b324      	cbz	r4, 8026052 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8026008:	f8be 2002 	ldrh.w	r2, [lr, #2]
 802600c:	3601      	adds	r6, #1
 802600e:	d424      	bmi.n	802605a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8026010:	45b0      	cmp	r8, r6
 8026012:	dd22      	ble.n	802605a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8026014:	b31f      	cbz	r7, 802605e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8026016:	2d00      	cmp	r5, #0
 8026018:	db1d      	blt.n	8026056 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 802601a:	42ab      	cmp	r3, r5
 802601c:	dd1b      	ble.n	8026056 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 802601e:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8026022:	3501      	adds	r5, #1
 8026024:	d405      	bmi.n	8026032 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8026026:	42ab      	cmp	r3, r5
 8026028:	dd03      	ble.n	8026032 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 802602a:	b124      	cbz	r4, 8026036 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 802602c:	3301      	adds	r3, #1
 802602e:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8026032:	2c0f      	cmp	r4, #15
 8026034:	d801      	bhi.n	802603a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026036:	2f0f      	cmp	r7, #15
 8026038:	d914      	bls.n	8026064 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 802603a:	4b27      	ldr	r3, [pc, #156]	; (80260d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 802603c:	4a27      	ldr	r2, [pc, #156]	; (80260dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 802603e:	4828      	ldr	r0, [pc, #160]	; (80260e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8026040:	f240 11db 	movw	r1, #475	; 0x1db
 8026044:	f005 ffd6 	bl	802bff4 <__assert_func>
 8026048:	4684      	mov	ip, r0
 802604a:	e7d8      	b.n	8025ffe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 802604c:	4602      	mov	r2, r0
 802604e:	4684      	mov	ip, r0
 8026050:	e7dc      	b.n	802600c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8026052:	4602      	mov	r2, r0
 8026054:	e7da      	b.n	802600c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8026056:	4606      	mov	r6, r0
 8026058:	e7e3      	b.n	8026022 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 802605a:	4606      	mov	r6, r0
 802605c:	e7e9      	b.n	8026032 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 802605e:	2c0f      	cmp	r4, #15
 8026060:	d8eb      	bhi.n	802603a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026062:	4606      	mov	r6, r0
 8026064:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8026068:	fb14 f307 	smulbb	r3, r4, r7
 802606c:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8026070:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8026074:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026078:	10db      	asrs	r3, r3, #3
 802607a:	ea45 0c0c 	orr.w	ip, r5, ip
 802607e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026082:	f1c7 0510 	rsb	r5, r7, #16
 8026086:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802608a:	1b2d      	subs	r5, r5, r4
 802608c:	ea4e 0202 	orr.w	r2, lr, r2
 8026090:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8026094:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8026098:	4354      	muls	r4, r2
 802609a:	fb05 450c 	mla	r5, r5, ip, r4
 802609e:	0404      	lsls	r4, r0, #16
 80260a0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80260a4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80260a8:	4320      	orrs	r0, r4
 80260aa:	fb03 5400 	mla	r4, r3, r0, r5
 80260ae:	0430      	lsls	r0, r6, #16
 80260b0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80260b4:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80260b8:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 80260bc:	4330      	orrs	r0, r6
 80260be:	fb07 4000 	mla	r0, r7, r0, r4
 80260c2:	0d43      	lsrs	r3, r0, #21
 80260c4:	0940      	lsrs	r0, r0, #5
 80260c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80260ca:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80260ce:	4318      	orrs	r0, r3
 80260d0:	8008      	strh	r0, [r1, #0]
 80260d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80260d6:	bf00      	nop
 80260d8:	08035c27 	.word	0x08035c27
 80260dc:	080361ff 	.word	0x080361ff
 80260e0:	08035bf4 	.word	0x08035bf4

080260e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80260e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80260e8:	ed2d 8b08 	vpush	{d8-d11}
 80260ec:	b08f      	sub	sp, #60	; 0x3c
 80260ee:	461d      	mov	r5, r3
 80260f0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80260f2:	920c      	str	r2, [sp, #48]	; 0x30
 80260f4:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 80260f8:	9107      	str	r1, [sp, #28]
 80260fa:	6859      	ldr	r1, [r3, #4]
 80260fc:	681b      	ldr	r3, [r3, #0]
 80260fe:	900d      	str	r0, [sp, #52]	; 0x34
 8026100:	fb01 2707 	mla	r7, r1, r7, r2
 8026104:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8026108:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802610a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802610e:	f8d3 8000 	ldr.w	r8, [r3]
 8026112:	eeb0 aa40 	vmov.f32	s20, s0
 8026116:	eef0 9a60 	vmov.f32	s19, s1
 802611a:	eeb0 9a41 	vmov.f32	s18, s2
 802611e:	eeb0 8a62 	vmov.f32	s16, s5
 8026122:	eef0 8a43 	vmov.f32	s17, s6
 8026126:	eef0 ba44 	vmov.f32	s23, s8
 802612a:	eeb0 ba64 	vmov.f32	s22, s9
 802612e:	eef0 aa45 	vmov.f32	s21, s10
 8026132:	9b07      	ldr	r3, [sp, #28]
 8026134:	2b00      	cmp	r3, #0
 8026136:	dc03      	bgt.n	8026140 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8026138:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802613a:	2b00      	cmp	r3, #0
 802613c:	f340 8181 	ble.w	8026442 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8026140:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026142:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026146:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802614a:	1e48      	subs	r0, r1, #1
 802614c:	f102 3cff 	add.w	ip, r2, #4294967295
 8026150:	2d00      	cmp	r5, #0
 8026152:	f340 809b 	ble.w	802628c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8026156:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802615a:	ea4f 4326 	mov.w	r3, r6, asr #16
 802615e:	d406      	bmi.n	802616e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026160:	4586      	cmp	lr, r0
 8026162:	da04      	bge.n	802616e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026164:	2b00      	cmp	r3, #0
 8026166:	db02      	blt.n	802616e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026168:	4563      	cmp	r3, ip
 802616a:	f2c0 8090 	blt.w	802628e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 802616e:	f11e 0e01 	adds.w	lr, lr, #1
 8026172:	f100 8084 	bmi.w	802627e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8026176:	4571      	cmp	r1, lr
 8026178:	f2c0 8081 	blt.w	802627e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802617c:	3301      	adds	r3, #1
 802617e:	d47e      	bmi.n	802627e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8026180:	429a      	cmp	r2, r3
 8026182:	db7c      	blt.n	802627e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8026184:	46aa      	mov	sl, r5
 8026186:	46b9      	mov	r9, r7
 8026188:	f1ba 0f00 	cmp.w	sl, #0
 802618c:	f340 8099 	ble.w	80262c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8026190:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026192:	1421      	asrs	r1, r4, #16
 8026194:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026198:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802619c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80261a0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80261a4:	f100 80d0 	bmi.w	8026348 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80261a8:	f10e 3bff 	add.w	fp, lr, #4294967295
 80261ac:	4559      	cmp	r1, fp
 80261ae:	f280 80cb 	bge.w	8026348 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80261b2:	2800      	cmp	r0, #0
 80261b4:	f2c0 80c8 	blt.w	8026348 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80261b8:	f103 3bff 	add.w	fp, r3, #4294967295
 80261bc:	4558      	cmp	r0, fp
 80261be:	f280 80c3 	bge.w	8026348 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80261c2:	fa0f fe8e 	sxth.w	lr, lr
 80261c6:	fb00 110e 	mla	r1, r0, lr, r1
 80261ca:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80261ce:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80261d2:	8841      	ldrh	r1, [r0, #2]
 80261d4:	f1bc 0f00 	cmp.w	ip, #0
 80261d8:	d00b      	beq.n	80261f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80261da:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80261de:	3b01      	subs	r3, #1
 80261e0:	005b      	lsls	r3, r3, #1
 80261e2:	3302      	adds	r3, #2
 80261e4:	eb00 0e03 	add.w	lr, r0, r3
 80261e8:	5ac3      	ldrh	r3, [r0, r3]
 80261ea:	9308      	str	r3, [sp, #32]
 80261ec:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80261f0:	9309      	str	r3, [sp, #36]	; 0x24
 80261f2:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80261f6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80261fa:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80261fe:	ea40 000b 	orr.w	r0, r0, fp
 8026202:	fb12 f30c 	smulbb	r3, r2, ip
 8026206:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802620a:	10db      	asrs	r3, r3, #3
 802620c:	f1cc 0e10 	rsb	lr, ip, #16
 8026210:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026214:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026218:	ebae 0e02 	sub.w	lr, lr, r2
 802621c:	ea4b 0101 	orr.w	r1, fp, r1
 8026220:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026224:	4351      	muls	r1, r2
 8026226:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026228:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802622c:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026230:	0410      	lsls	r0, r2, #16
 8026232:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026236:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802623a:	4310      	orrs	r0, r2
 802623c:	9a08      	ldr	r2, [sp, #32]
 802623e:	9908      	ldr	r1, [sp, #32]
 8026240:	0412      	lsls	r2, r2, #16
 8026242:	fb03 e000 	mla	r0, r3, r0, lr
 8026246:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802624a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802624e:	ea42 020e 	orr.w	r2, r2, lr
 8026252:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026256:	fb03 0302 	mla	r3, r3, r2, r0
 802625a:	0d5a      	lsrs	r2, r3, #21
 802625c:	095b      	lsrs	r3, r3, #5
 802625e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026262:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026266:	4313      	orrs	r3, r2
 8026268:	f8a9 3000 	strh.w	r3, [r9]
 802626c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802626e:	441c      	add	r4, r3
 8026270:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026272:	f109 0902 	add.w	r9, r9, #2
 8026276:	441e      	add	r6, r3
 8026278:	f10a 3aff 	add.w	sl, sl, #4294967295
 802627c:	e784      	b.n	8026188 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 802627e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026280:	441c      	add	r4, r3
 8026282:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026284:	3d01      	subs	r5, #1
 8026286:	441e      	add	r6, r3
 8026288:	3702      	adds	r7, #2
 802628a:	e761      	b.n	8026150 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802628c:	d01d      	beq.n	80262ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 802628e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8026290:	1e6b      	subs	r3, r5, #1
 8026292:	fb00 4003 	mla	r0, r0, r3, r4
 8026296:	1400      	asrs	r0, r0, #16
 8026298:	f53f af74 	bmi.w	8026184 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802629c:	3901      	subs	r1, #1
 802629e:	4288      	cmp	r0, r1
 80262a0:	f6bf af70 	bge.w	8026184 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80262a4:	9924      	ldr	r1, [sp, #144]	; 0x90
 80262a6:	fb01 6303 	mla	r3, r1, r3, r6
 80262aa:	141b      	asrs	r3, r3, #16
 80262ac:	f53f af6a 	bmi.w	8026184 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80262b0:	3a01      	subs	r2, #1
 80262b2:	4293      	cmp	r3, r2
 80262b4:	f6bf af66 	bge.w	8026184 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80262b8:	46a9      	mov	r9, r5
 80262ba:	46ba      	mov	sl, r7
 80262bc:	f1b9 0f00 	cmp.w	r9, #0
 80262c0:	dc5a      	bgt.n	8026378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80262c2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80262c6:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80262ca:	9b07      	ldr	r3, [sp, #28]
 80262cc:	2b00      	cmp	r3, #0
 80262ce:	f340 80b8 	ble.w	8026442 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80262d2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80262d6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80262da:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80262de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80262e0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80262e4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80262e8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80262ec:	eef0 6a48 	vmov.f32	s13, s16
 80262f0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80262f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80262f8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80262fc:	ee16 4a90 	vmov	r4, s13
 8026300:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8026304:	eef0 6a68 	vmov.f32	s13, s17
 8026308:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802630c:	ee18 2a10 	vmov	r2, s16
 8026310:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8026314:	fb92 f3f3 	sdiv	r3, r2, r3
 8026318:	ee18 2a90 	vmov	r2, s17
 802631c:	9323      	str	r3, [sp, #140]	; 0x8c
 802631e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026320:	fb92 f3f3 	sdiv	r3, r2, r3
 8026324:	9324      	str	r3, [sp, #144]	; 0x90
 8026326:	9b07      	ldr	r3, [sp, #28]
 8026328:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802632a:	3b01      	subs	r3, #1
 802632c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026330:	9307      	str	r3, [sp, #28]
 8026332:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026334:	ee16 6a90 	vmov	r6, s13
 8026338:	bf14      	ite	ne
 802633a:	461d      	movne	r5, r3
 802633c:	4615      	moveq	r5, r2
 802633e:	eef0 8a67 	vmov.f32	s17, s15
 8026342:	eeb0 8a47 	vmov.f32	s16, s14
 8026346:	e6f4      	b.n	8026132 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8026348:	f111 0b01 	adds.w	fp, r1, #1
 802634c:	d48e      	bmi.n	802626c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802634e:	45de      	cmp	lr, fp
 8026350:	db8c      	blt.n	802626c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8026352:	f110 0b01 	adds.w	fp, r0, #1
 8026356:	d489      	bmi.n	802626c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8026358:	455b      	cmp	r3, fp
 802635a:	db87      	blt.n	802626c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802635c:	b21b      	sxth	r3, r3
 802635e:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8026362:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8026366:	9300      	str	r3, [sp, #0]
 8026368:	4642      	mov	r2, r8
 802636a:	fa0f f38e 	sxth.w	r3, lr
 802636e:	4649      	mov	r1, r9
 8026370:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026372:	f7ff fe2b 	bl	8025fcc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8026376:	e779      	b.n	802626c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8026378:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802637a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802637e:	1420      	asrs	r0, r4, #16
 8026380:	1431      	asrs	r1, r6, #16
 8026382:	fb03 0101 	mla	r1, r3, r1, r0
 8026386:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802638a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802638e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8026392:	8841      	ldrh	r1, [r0, #2]
 8026394:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026398:	f1be 0f00 	cmp.w	lr, #0
 802639c:	d00b      	beq.n	80263b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 802639e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80263a2:	3b01      	subs	r3, #1
 80263a4:	005b      	lsls	r3, r3, #1
 80263a6:	3302      	adds	r3, #2
 80263a8:	eb00 0b03 	add.w	fp, r0, r3
 80263ac:	5ac3      	ldrh	r3, [r0, r3]
 80263ae:	930a      	str	r3, [sp, #40]	; 0x28
 80263b0:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80263b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80263b6:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80263ba:	fb12 f30e 	smulbb	r3, r2, lr
 80263be:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80263c2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80263c6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80263ca:	10db      	asrs	r3, r3, #3
 80263cc:	ea40 000c 	orr.w	r0, r0, ip
 80263d0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80263d4:	f1ce 0c10 	rsb	ip, lr, #16
 80263d8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80263dc:	ebac 0c02 	sub.w	ip, ip, r2
 80263e0:	ea4b 0101 	orr.w	r1, fp, r1
 80263e4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80263e8:	4351      	muls	r1, r2
 80263ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80263ec:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80263f0:	fb0c 1c00 	mla	ip, ip, r0, r1
 80263f4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80263f8:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80263fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80263fe:	990a      	ldr	r1, [sp, #40]	; 0x28
 8026400:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026404:	0412      	lsls	r2, r2, #16
 8026406:	ea4b 0000 	orr.w	r0, fp, r0
 802640a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802640e:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8026412:	fb03 c000 	mla	r0, r3, r0, ip
 8026416:	ea42 0b0b 	orr.w	fp, r2, fp
 802641a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802641e:	fb03 000b 	mla	r0, r3, fp, r0
 8026422:	0d43      	lsrs	r3, r0, #21
 8026424:	0940      	lsrs	r0, r0, #5
 8026426:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802642a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802642e:	4318      	orrs	r0, r3
 8026430:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026432:	f82a 0b02 	strh.w	r0, [sl], #2
 8026436:	441c      	add	r4, r3
 8026438:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802643a:	f109 39ff 	add.w	r9, r9, #4294967295
 802643e:	441e      	add	r6, r3
 8026440:	e73c      	b.n	80262bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8026442:	b00f      	add	sp, #60	; 0x3c
 8026444:	ecbd 8b08 	vpop	{d8-d11}
 8026448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802644c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802644c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026450:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8026454:	fb04 5603 	mla	r6, r4, r3, r5
 8026458:	2c00      	cmp	r4, #0
 802645a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 802645e:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8026462:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8026466:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 802646a:	db36      	blt.n	80264da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 802646c:	45a6      	cmp	lr, r4
 802646e:	dd34      	ble.n	80264da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8026470:	2d00      	cmp	r5, #0
 8026472:	db30      	blt.n	80264d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8026474:	42ab      	cmp	r3, r5
 8026476:	dd2e      	ble.n	80264d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8026478:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 802647c:	1c6e      	adds	r6, r5, #1
 802647e:	d42f      	bmi.n	80264e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8026480:	42b3      	cmp	r3, r6
 8026482:	dd2d      	ble.n	80264e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8026484:	b370      	cbz	r0, 80264e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8026486:	f8dc 6004 	ldr.w	r6, [ip, #4]
 802648a:	3401      	adds	r4, #1
 802648c:	d42e      	bmi.n	80264ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 802648e:	45a6      	cmp	lr, r4
 8026490:	dd2c      	ble.n	80264ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8026492:	b377      	cbz	r7, 80264f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 8026494:	2d00      	cmp	r5, #0
 8026496:	db27      	blt.n	80264e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8026498:	42ab      	cmp	r3, r5
 802649a:	dd25      	ble.n	80264e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 802649c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80264a0:	3501      	adds	r5, #1
 80264a2:	d429      	bmi.n	80264f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 80264a4:	42ab      	cmp	r3, r5
 80264a6:	dd27      	ble.n	80264f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 80264a8:	b340      	cbz	r0, 80264fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 80264aa:	3301      	adds	r3, #1
 80264ac:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 80264b0:	280f      	cmp	r0, #15
 80264b2:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80264b6:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80264ba:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80264be:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80264c2:	d801      	bhi.n	80264c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 80264c4:	2f0f      	cmp	r7, #15
 80264c6:	d91b      	bls.n	8026500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 80264c8:	4b8d      	ldr	r3, [pc, #564]	; (8026700 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 80264ca:	4a8e      	ldr	r2, [pc, #568]	; (8026704 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 80264cc:	488e      	ldr	r0, [pc, #568]	; (8026708 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 80264ce:	f240 11f9 	movw	r1, #505	; 0x1f9
 80264d2:	f005 fd8f 	bl	802bff4 <__assert_func>
 80264d6:	2200      	movs	r2, #0
 80264d8:	e7d0      	b.n	802647c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 80264da:	2600      	movs	r6, #0
 80264dc:	4632      	mov	r2, r6
 80264de:	e7d4      	b.n	802648a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80264e0:	2600      	movs	r6, #0
 80264e2:	e7d2      	b.n	802648a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80264e4:	4606      	mov	r6, r0
 80264e6:	e7d0      	b.n	802648a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80264e8:	2400      	movs	r4, #0
 80264ea:	e7d9      	b.n	80264a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 80264ec:	2300      	movs	r3, #0
 80264ee:	461c      	mov	r4, r3
 80264f0:	e7de      	b.n	80264b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80264f2:	463b      	mov	r3, r7
 80264f4:	463c      	mov	r4, r7
 80264f6:	e7db      	b.n	80264b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80264f8:	2300      	movs	r3, #0
 80264fa:	e7d9      	b.n	80264b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80264fc:	4603      	mov	r3, r0
 80264fe:	e7d7      	b.n	80264b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8026500:	b280      	uxth	r0, r0
 8026502:	b2bf      	uxth	r7, r7
 8026504:	fb07 fe00 	mul.w	lr, r7, r0
 8026508:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 802650c:	0100      	lsls	r0, r0, #4
 802650e:	eba0 0c0e 	sub.w	ip, r0, lr
 8026512:	b2bf      	uxth	r7, r7
 8026514:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8026518:	fa1f fc8c 	uxth.w	ip, ip
 802651c:	1bed      	subs	r5, r5, r7
 802651e:	b2ad      	uxth	r5, r5
 8026520:	fb0a f00c 	mul.w	r0, sl, ip
 8026524:	fb0b 0005 	mla	r0, fp, r5, r0
 8026528:	fb07 0009 	mla	r0, r7, r9, r0
 802652c:	fb0e 0008 	mla	r0, lr, r8, r0
 8026530:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8026534:	9001      	str	r0, [sp, #4]
 8026536:	2800      	cmp	r0, #0
 8026538:	f000 80de 	beq.w	80266f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 802653c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8026540:	d018      	beq.n	8026574 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 8026542:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8026546:	fb0b f000 	mul.w	r0, fp, r0
 802654a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802654e:	fb0b fb02 	mul.w	fp, fp, r2
 8026552:	0a02      	lsrs	r2, r0, #8
 8026554:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026558:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 802655c:	4402      	add	r2, r0
 802655e:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8026562:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8026566:	0a12      	lsrs	r2, r2, #8
 8026568:	0a00      	lsrs	r0, r0, #8
 802656a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802656e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8026572:	4302      	orrs	r2, r0
 8026574:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8026578:	d01a      	beq.n	80265b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 802657a:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 802657e:	fb0a f000 	mul.w	r0, sl, r0
 8026582:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8026586:	fb0a fa06 	mul.w	sl, sl, r6
 802658a:	0a06      	lsrs	r6, r0, #8
 802658c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8026590:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8026594:	4406      	add	r6, r0
 8026596:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 802659a:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802659e:	0a36      	lsrs	r6, r6, #8
 80265a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80265a4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80265a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80265ac:	ea46 060a 	orr.w	r6, r6, sl
 80265b0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80265b4:	d01b      	beq.n	80265ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 80265b6:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80265ba:	fb09 fa0a 	mul.w	sl, r9, sl
 80265be:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80265c2:	fb09 f004 	mul.w	r0, r9, r4
 80265c6:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80265ca:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80265ce:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80265d2:	f500 7980 	add.w	r9, r0, #256	; 0x100
 80265d6:	4454      	add	r4, sl
 80265d8:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 80265dc:	0a24      	lsrs	r4, r4, #8
 80265de:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80265e2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80265e6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80265ea:	ea44 0409 	orr.w	r4, r4, r9
 80265ee:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80265f2:	d01b      	beq.n	802662c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 80265f4:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80265f8:	fb08 f909 	mul.w	r9, r8, r9
 80265fc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8026600:	fb08 f003 	mul.w	r0, r8, r3
 8026604:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8026608:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802660c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8026610:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8026614:	444b      	add	r3, r9
 8026616:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 802661a:	0a1b      	lsrs	r3, r3, #8
 802661c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8026620:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8026624:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8026628:	ea43 0308 	orr.w	r3, r3, r8
 802662c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8026630:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8026634:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8026638:	fb0c f808 	mul.w	r8, ip, r8
 802663c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026640:	fb0c f606 	mul.w	r6, ip, r6
 8026644:	fb05 8909 	mla	r9, r5, r9, r8
 8026648:	fb05 6502 	mla	r5, r5, r2, r6
 802664c:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8026650:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8026654:	9a01      	ldr	r2, [sp, #4]
 8026656:	8808      	ldrh	r0, [r1, #0]
 8026658:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802665c:	fb07 9908 	mla	r9, r7, r8, r9
 8026660:	fb07 5704 	mla	r7, r7, r4, r5
 8026664:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8026668:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802666c:	b2b6      	uxth	r6, r6
 802666e:	fb0e 9808 	mla	r8, lr, r8, r9
 8026672:	fb0e 7e03 	mla	lr, lr, r3, r7
 8026676:	4372      	muls	r2, r6
 8026678:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802667c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026680:	1c53      	adds	r3, r2, #1
 8026682:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8026686:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 802668a:	ea48 0e0e 	orr.w	lr, r8, lr
 802668e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026692:	1205      	asrs	r5, r0, #8
 8026694:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8026698:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802669c:	b2db      	uxtb	r3, r3
 802669e:	fb12 f206 	smulbb	r2, r2, r6
 80266a2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80266a6:	fb05 2503 	mla	r5, r5, r3, r2
 80266aa:	f3ce 2407 	ubfx	r4, lr, #8, #8
 80266ae:	10c2      	asrs	r2, r0, #3
 80266b0:	fa5f fe8e 	uxtb.w	lr, lr
 80266b4:	00c0      	lsls	r0, r0, #3
 80266b6:	fb14 f406 	smulbb	r4, r4, r6
 80266ba:	b2c0      	uxtb	r0, r0
 80266bc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80266c0:	fb1e fe06 	smulbb	lr, lr, r6
 80266c4:	fb02 4203 	mla	r2, r2, r3, r4
 80266c8:	b2ad      	uxth	r5, r5
 80266ca:	fb00 e303 	mla	r3, r0, r3, lr
 80266ce:	b298      	uxth	r0, r3
 80266d0:	b294      	uxth	r4, r2
 80266d2:	1c6b      	adds	r3, r5, #1
 80266d4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80266d8:	1c62      	adds	r2, r4, #1
 80266da:	1c43      	adds	r3, r0, #1
 80266dc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80266e0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80266e4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80266e8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80266ec:	0952      	lsrs	r2, r2, #5
 80266ee:	432b      	orrs	r3, r5
 80266f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80266f4:	4313      	orrs	r3, r2
 80266f6:	800b      	strh	r3, [r1, #0]
 80266f8:	b003      	add	sp, #12
 80266fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80266fe:	bf00      	nop
 8026700:	08035c27 	.word	0x08035c27
 8026704:	08036156 	.word	0x08036156
 8026708:	08035bf4 	.word	0x08035bf4

0802670c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802670c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026710:	ed2d 8b08 	vpush	{d8-d11}
 8026714:	b09d      	sub	sp, #116	; 0x74
 8026716:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 802671a:	9219      	str	r2, [sp, #100]	; 0x64
 802671c:	9307      	str	r3, [sp, #28]
 802671e:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8026720:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8026724:	931a      	str	r3, [sp, #104]	; 0x68
 8026726:	9117      	str	r1, [sp, #92]	; 0x5c
 8026728:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 802672c:	901b      	str	r0, [sp, #108]	; 0x6c
 802672e:	6850      	ldr	r0, [r2, #4]
 8026730:	6812      	ldr	r2, [r2, #0]
 8026732:	fb00 1303 	mla	r3, r0, r3, r1
 8026736:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802673a:	930a      	str	r3, [sp, #40]	; 0x28
 802673c:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 802673e:	681b      	ldr	r3, [r3, #0]
 8026740:	9310      	str	r3, [sp, #64]	; 0x40
 8026742:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8026746:	930b      	str	r3, [sp, #44]	; 0x2c
 8026748:	eeb0 aa40 	vmov.f32	s20, s0
 802674c:	eef0 9a60 	vmov.f32	s19, s1
 8026750:	eeb0 9a41 	vmov.f32	s18, s2
 8026754:	eeb0 8a62 	vmov.f32	s16, s5
 8026758:	eef0 8a43 	vmov.f32	s17, s6
 802675c:	eef0 ba44 	vmov.f32	s23, s8
 8026760:	eeb0 ba64 	vmov.f32	s22, s9
 8026764:	eef0 aa45 	vmov.f32	s21, s10
 8026768:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802676a:	2b00      	cmp	r3, #0
 802676c:	dc03      	bgt.n	8026776 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802676e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8026770:	2b00      	cmp	r3, #0
 8026772:	f340 8375 	ble.w	8026e60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8026776:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8026778:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802677c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026780:	1e48      	subs	r0, r1, #1
 8026782:	1e57      	subs	r7, r2, #1
 8026784:	9b07      	ldr	r3, [sp, #28]
 8026786:	2b00      	cmp	r3, #0
 8026788:	f340 818e 	ble.w	8026aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 802678c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8026790:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026794:	d406      	bmi.n	80267a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8026796:	4584      	cmp	ip, r0
 8026798:	da04      	bge.n	80267a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802679a:	2b00      	cmp	r3, #0
 802679c:	db02      	blt.n	80267a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802679e:	42bb      	cmp	r3, r7
 80267a0:	f2c0 8183 	blt.w	8026aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 80267a4:	f11c 0c01 	adds.w	ip, ip, #1
 80267a8:	f100 8173 	bmi.w	8026a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80267ac:	4561      	cmp	r1, ip
 80267ae:	f2c0 8170 	blt.w	8026a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80267b2:	3301      	adds	r3, #1
 80267b4:	f100 816d 	bmi.w	8026a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80267b8:	429a      	cmp	r2, r3
 80267ba:	f2c0 816a 	blt.w	8026a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80267be:	9b07      	ldr	r3, [sp, #28]
 80267c0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80267c2:	9318      	str	r3, [sp, #96]	; 0x60
 80267c4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80267c6:	2b00      	cmp	r3, #0
 80267c8:	f340 818c 	ble.w	8026ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 80267cc:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 80267ce:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80267d0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80267d4:	689b      	ldr	r3, [r3, #8]
 80267d6:	1422      	asrs	r2, r4, #16
 80267d8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80267dc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80267e0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80267e4:	f100 81cd 	bmi.w	8026b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80267e8:	f103 38ff 	add.w	r8, r3, #4294967295
 80267ec:	4542      	cmp	r2, r8
 80267ee:	f280 81c8 	bge.w	8026b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80267f2:	f1bc 0f00 	cmp.w	ip, #0
 80267f6:	f2c0 81c4 	blt.w	8026b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80267fa:	f10e 38ff 	add.w	r8, lr, #4294967295
 80267fe:	45c4      	cmp	ip, r8
 8026800:	f280 81bf 	bge.w	8026b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8026804:	b21b      	sxth	r3, r3
 8026806:	fb0c 2203 	mla	r2, ip, r3, r2
 802680a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802680c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8026810:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8026814:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8026818:	2800      	cmp	r0, #0
 802681a:	f000 81a9 	beq.w	8026b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 802681e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8026822:	950c      	str	r5, [sp, #48]	; 0x30
 8026824:	0e2d      	lsrs	r5, r5, #24
 8026826:	9513      	str	r5, [sp, #76]	; 0x4c
 8026828:	b181      	cbz	r1, 802684c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802682a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802682e:	3b01      	subs	r3, #1
 8026830:	009b      	lsls	r3, r3, #2
 8026832:	3304      	adds	r3, #4
 8026834:	eb08 0c03 	add.w	ip, r8, r3
 8026838:	f858 3003 	ldr.w	r3, [r8, r3]
 802683c:	9308      	str	r3, [sp, #32]
 802683e:	0e1b      	lsrs	r3, r3, #24
 8026840:	9311      	str	r3, [sp, #68]	; 0x44
 8026842:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8026846:	930d      	str	r3, [sp, #52]	; 0x34
 8026848:	0e1b      	lsrs	r3, r3, #24
 802684a:	9314      	str	r3, [sp, #80]	; 0x50
 802684c:	b280      	uxth	r0, r0
 802684e:	b289      	uxth	r1, r1
 8026850:	fb00 f901 	mul.w	r9, r0, r1
 8026854:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8026858:	0100      	lsls	r0, r0, #4
 802685a:	eba0 0809 	sub.w	r8, r0, r9
 802685e:	b289      	uxth	r1, r1
 8026860:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8026864:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8026866:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026868:	fa1f f888 	uxth.w	r8, r8
 802686c:	1a5b      	subs	r3, r3, r1
 802686e:	b29b      	uxth	r3, r3
 8026870:	fb08 f000 	mul.w	r0, r8, r0
 8026874:	fb03 000e 	mla	r0, r3, lr, r0
 8026878:	fb01 0005 	mla	r0, r1, r5, r0
 802687c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802687e:	fb09 0005 	mla	r0, r9, r5, r0
 8026882:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8026886:	2800      	cmp	r0, #0
 8026888:	f000 80fa 	beq.w	8026a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802688c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8026890:	d01b      	beq.n	80268ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8026892:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8026896:	fb0e fa0a 	mul.w	sl, lr, sl
 802689a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802689e:	fb0e fe02 	mul.w	lr, lr, r2
 80268a2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80268a6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80268aa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80268ae:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80268b2:	4452      	add	r2, sl
 80268b4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80268b8:	0a12      	lsrs	r2, r2, #8
 80268ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80268be:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80268c2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80268c6:	ea42 020c 	orr.w	r2, r2, ip
 80268ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80268cc:	2dff      	cmp	r5, #255	; 0xff
 80268ce:	d021      	beq.n	8026914 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80268d0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80268d2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80268d6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80268d8:	fb05 fb0b 	mul.w	fp, r5, fp
 80268dc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80268de:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80268e2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80268e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80268e8:	fb05 fa0a 	mul.w	sl, r5, sl
 80268ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80268f0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80268f4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80268f8:	44de      	add	lr, fp
 80268fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80268fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026902:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026906:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802690a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802690e:	ea4e 050a 	orr.w	r5, lr, sl
 8026912:	950c      	str	r5, [sp, #48]	; 0x30
 8026914:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026916:	2dff      	cmp	r5, #255	; 0xff
 8026918:	d021      	beq.n	802695e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802691a:	9d08      	ldr	r5, [sp, #32]
 802691c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8026920:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026922:	fb05 fb0b 	mul.w	fp, r5, fp
 8026926:	9d08      	ldr	r5, [sp, #32]
 8026928:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802692c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802692e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026932:	fb05 fa0a 	mul.w	sl, r5, sl
 8026936:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802693a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802693e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026942:	44de      	add	lr, fp
 8026944:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026948:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802694c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026950:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026954:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026958:	ea4e 050a 	orr.w	r5, lr, sl
 802695c:	9508      	str	r5, [sp, #32]
 802695e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026960:	2dff      	cmp	r5, #255	; 0xff
 8026962:	d021      	beq.n	80269a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8026964:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026966:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802696a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802696c:	fb05 fb0b 	mul.w	fp, r5, fp
 8026970:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026972:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026976:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026978:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802697c:	fb05 fa0a 	mul.w	sl, r5, sl
 8026980:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026984:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026988:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802698c:	44de      	add	lr, fp
 802698e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026992:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026996:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802699a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802699e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80269a2:	ea4e 050a 	orr.w	r5, lr, sl
 80269a6:	950d      	str	r5, [sp, #52]	; 0x34
 80269a8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80269aa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80269ae:	9d08      	ldr	r5, [sp, #32]
 80269b0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80269b4:	fb08 fc0c 	mul.w	ip, r8, ip
 80269b8:	fb03 cc0e 	mla	ip, r3, lr, ip
 80269bc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80269c0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80269c2:	fb01 cc0e 	mla	ip, r1, lr, ip
 80269c6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80269ca:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80269cc:	fb09 cc0e 	mla	ip, r9, lr, ip
 80269d0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80269d4:	fb08 f80e 	mul.w	r8, r8, lr
 80269d8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80269dc:	fb03 8202 	mla	r2, r3, r2, r8
 80269e0:	9b08      	ldr	r3, [sp, #32]
 80269e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80269e4:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80269e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80269ea:	fb01 220a 	mla	r2, r1, sl, r2
 80269ee:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80269f2:	fb09 2901 	mla	r9, r9, r1, r2
 80269f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80269f8:	883b      	ldrh	r3, [r7, #0]
 80269fa:	4342      	muls	r2, r0
 80269fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026a00:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026a04:	1c50      	adds	r0, r2, #1
 8026a06:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026a0a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8026a0e:	ea4c 0c09 	orr.w	ip, ip, r9
 8026a12:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8026a16:	1219      	asrs	r1, r3, #8
 8026a18:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8026a1c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8026a20:	b2c0      	uxtb	r0, r0
 8026a22:	fb12 f205 	smulbb	r2, r2, r5
 8026a26:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026a2a:	fb01 2100 	mla	r1, r1, r0, r2
 8026a2e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8026a32:	10da      	asrs	r2, r3, #3
 8026a34:	fa5f fc8c 	uxtb.w	ip, ip
 8026a38:	00db      	lsls	r3, r3, #3
 8026a3a:	fb1c fc05 	smulbb	ip, ip, r5
 8026a3e:	b2db      	uxtb	r3, r3
 8026a40:	b289      	uxth	r1, r1
 8026a42:	fb03 c300 	mla	r3, r3, r0, ip
 8026a46:	fa1f fc83 	uxth.w	ip, r3
 8026a4a:	1c4b      	adds	r3, r1, #1
 8026a4c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026a50:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026a54:	fb1e fe05 	smulbb	lr, lr, r5
 8026a58:	f10c 0301 	add.w	r3, ip, #1
 8026a5c:	fb02 e200 	mla	r2, r2, r0, lr
 8026a60:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8026a64:	b292      	uxth	r2, r2
 8026a66:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026a6a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026a6e:	430b      	orrs	r3, r1
 8026a70:	1c51      	adds	r1, r2, #1
 8026a72:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8026a76:	0952      	lsrs	r2, r2, #5
 8026a78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026a7c:	4313      	orrs	r3, r2
 8026a7e:	803b      	strh	r3, [r7, #0]
 8026a80:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8026a82:	441c      	add	r4, r3
 8026a84:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8026a86:	441e      	add	r6, r3
 8026a88:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026a8a:	3b01      	subs	r3, #1
 8026a8c:	3702      	adds	r7, #2
 8026a8e:	9318      	str	r3, [sp, #96]	; 0x60
 8026a90:	e698      	b.n	80267c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8026a92:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8026a94:	441c      	add	r4, r3
 8026a96:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8026a98:	441e      	add	r6, r3
 8026a9a:	9b07      	ldr	r3, [sp, #28]
 8026a9c:	3b01      	subs	r3, #1
 8026a9e:	9307      	str	r3, [sp, #28]
 8026aa0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026aa2:	3302      	adds	r3, #2
 8026aa4:	930a      	str	r3, [sp, #40]	; 0x28
 8026aa6:	e66d      	b.n	8026784 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026aa8:	d023      	beq.n	8026af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8026aaa:	9b07      	ldr	r3, [sp, #28]
 8026aac:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8026aae:	3b01      	subs	r3, #1
 8026ab0:	fb00 4003 	mla	r0, r0, r3, r4
 8026ab4:	1400      	asrs	r0, r0, #16
 8026ab6:	f53f ae82 	bmi.w	80267be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8026aba:	3901      	subs	r1, #1
 8026abc:	4288      	cmp	r0, r1
 8026abe:	f6bf ae7e 	bge.w	80267be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8026ac2:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8026ac4:	fb01 6303 	mla	r3, r1, r3, r6
 8026ac8:	141b      	asrs	r3, r3, #16
 8026aca:	f53f ae78 	bmi.w	80267be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8026ace:	3a01      	subs	r2, #1
 8026ad0:	4293      	cmp	r3, r2
 8026ad2:	f6bf ae74 	bge.w	80267be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8026ad6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8026ada:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8026ade:	f1bb 0f00 	cmp.w	fp, #0
 8026ae2:	dc6c      	bgt.n	8026bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8026ae4:	9b07      	ldr	r3, [sp, #28]
 8026ae6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026aea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026aec:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026af0:	930a      	str	r3, [sp, #40]	; 0x28
 8026af2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8026af4:	2b00      	cmp	r3, #0
 8026af6:	f340 81b3 	ble.w	8026e60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8026afa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8026afe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026b02:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8026b06:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8026b08:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8026b0c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8026b10:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8026b14:	eef0 6a48 	vmov.f32	s13, s16
 8026b18:	ee69 7a27 	vmul.f32	s15, s18, s15
 8026b1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026b20:	ee37 8a48 	vsub.f32	s16, s14, s16
 8026b24:	ee16 4a90 	vmov	r4, s13
 8026b28:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8026b2c:	eef0 6a68 	vmov.f32	s13, s17
 8026b30:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8026b34:	ee18 2a10 	vmov	r2, s16
 8026b38:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8026b3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8026b40:	ee18 2a90 	vmov	r2, s17
 8026b44:	9331      	str	r3, [sp, #196]	; 0xc4
 8026b46:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8026b48:	fb92 f3f3 	sdiv	r3, r2, r3
 8026b4c:	9332      	str	r3, [sp, #200]	; 0xc8
 8026b4e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8026b50:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8026b52:	3b01      	subs	r3, #1
 8026b54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026b58:	9317      	str	r3, [sp, #92]	; 0x5c
 8026b5a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8026b5c:	bf08      	it	eq
 8026b5e:	4613      	moveq	r3, r2
 8026b60:	ee16 6a90 	vmov	r6, s13
 8026b64:	9307      	str	r3, [sp, #28]
 8026b66:	eef0 8a67 	vmov.f32	s17, s15
 8026b6a:	eeb0 8a47 	vmov.f32	s16, s14
 8026b6e:	e5fb      	b.n	8026768 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8026b70:	2900      	cmp	r1, #0
 8026b72:	f43f ae6b 	beq.w	802684c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8026b76:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8026b7a:	9308      	str	r3, [sp, #32]
 8026b7c:	0e1b      	lsrs	r3, r3, #24
 8026b7e:	9311      	str	r3, [sp, #68]	; 0x44
 8026b80:	e664      	b.n	802684c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8026b82:	f112 0801 	adds.w	r8, r2, #1
 8026b86:	f53f af7b 	bmi.w	8026a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8026b8a:	4543      	cmp	r3, r8
 8026b8c:	f6ff af78 	blt.w	8026a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8026b90:	f11c 0801 	adds.w	r8, ip, #1
 8026b94:	f53f af74 	bmi.w	8026a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8026b98:	45c6      	cmp	lr, r8
 8026b9a:	f6ff af71 	blt.w	8026a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8026b9e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8026ba0:	9201      	str	r2, [sp, #4]
 8026ba2:	fa0f f28e 	sxth.w	r2, lr
 8026ba6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8026baa:	e9cd c002 	strd	ip, r0, [sp, #8]
 8026bae:	9200      	str	r2, [sp, #0]
 8026bb0:	b21b      	sxth	r3, r3
 8026bb2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026bb4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8026bb6:	4639      	mov	r1, r7
 8026bb8:	f7ff fc48 	bl	802644c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8026bbc:	e760      	b.n	8026a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8026bbe:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8026bc0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026bc2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026bc6:	1427      	asrs	r7, r4, #16
 8026bc8:	1433      	asrs	r3, r6, #16
 8026bca:	fb01 7303 	mla	r3, r1, r3, r7
 8026bce:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8026bd2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8026bd6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026bda:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026bde:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8026be2:	2a00      	cmp	r2, #0
 8026be4:	f000 8133 	beq.w	8026e4e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8026be8:	687d      	ldr	r5, [r7, #4]
 8026bea:	950e      	str	r5, [sp, #56]	; 0x38
 8026bec:	0e2d      	lsrs	r5, r5, #24
 8026bee:	9515      	str	r5, [sp, #84]	; 0x54
 8026bf0:	b178      	cbz	r0, 8026c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8026bf2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8026bf6:	3901      	subs	r1, #1
 8026bf8:	0089      	lsls	r1, r1, #2
 8026bfa:	3104      	adds	r1, #4
 8026bfc:	eb07 0e01 	add.w	lr, r7, r1
 8026c00:	5879      	ldr	r1, [r7, r1]
 8026c02:	9109      	str	r1, [sp, #36]	; 0x24
 8026c04:	0e09      	lsrs	r1, r1, #24
 8026c06:	9112      	str	r1, [sp, #72]	; 0x48
 8026c08:	f8de 1004 	ldr.w	r1, [lr, #4]
 8026c0c:	910f      	str	r1, [sp, #60]	; 0x3c
 8026c0e:	0e09      	lsrs	r1, r1, #24
 8026c10:	9116      	str	r1, [sp, #88]	; 0x58
 8026c12:	b292      	uxth	r2, r2
 8026c14:	b280      	uxth	r0, r0
 8026c16:	fb02 f800 	mul.w	r8, r2, r0
 8026c1a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8026c1e:	0112      	lsls	r2, r2, #4
 8026c20:	eba2 0e08 	sub.w	lr, r2, r8
 8026c24:	b280      	uxth	r0, r0
 8026c26:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8026c2a:	9915      	ldr	r1, [sp, #84]	; 0x54
 8026c2c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026c2e:	fa1f fe8e 	uxth.w	lr, lr
 8026c32:	1a12      	subs	r2, r2, r0
 8026c34:	b292      	uxth	r2, r2
 8026c36:	fb0e f101 	mul.w	r1, lr, r1
 8026c3a:	fb02 110c 	mla	r1, r2, ip, r1
 8026c3e:	fb00 1105 	mla	r1, r0, r5, r1
 8026c42:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8026c44:	fb08 1105 	mla	r1, r8, r5, r1
 8026c48:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8026c4c:	2900      	cmp	r1, #0
 8026c4e:	f000 80f5 	beq.w	8026e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8026c52:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8026c56:	d019      	beq.n	8026c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8026c58:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8026c5c:	fb0c fa0a 	mul.w	sl, ip, sl
 8026c60:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8026c64:	fb0c fc03 	mul.w	ip, ip, r3
 8026c68:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8026c6c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8026c70:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8026c74:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8026c78:	4453      	add	r3, sl
 8026c7a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8026c7e:	0a1b      	lsrs	r3, r3, #8
 8026c80:	0a3f      	lsrs	r7, r7, #8
 8026c82:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8026c86:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8026c8a:	433b      	orrs	r3, r7
 8026c8c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026c8e:	2dff      	cmp	r5, #255	; 0xff
 8026c90:	d020      	beq.n	8026cd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8026c92:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026c94:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026c98:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026c9a:	436f      	muls	r7, r5
 8026c9c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026c9e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026ca2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026ca4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026ca8:	fb05 fa0a 	mul.w	sl, r5, sl
 8026cac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026cb0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026cb4:	44bc      	add	ip, r7
 8026cb6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026cba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026cbe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026cc2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026cc6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026cca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026cce:	ea4c 050a 	orr.w	r5, ip, sl
 8026cd2:	950e      	str	r5, [sp, #56]	; 0x38
 8026cd4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026cd6:	2dff      	cmp	r5, #255	; 0xff
 8026cd8:	d020      	beq.n	8026d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8026cda:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026cdc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026ce0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026ce2:	436f      	muls	r7, r5
 8026ce4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026ce6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026cea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026cec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026cf0:	fb05 fa0a 	mul.w	sl, r5, sl
 8026cf4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026cf8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026cfc:	44bc      	add	ip, r7
 8026cfe:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026d02:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026d06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026d0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026d0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026d12:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026d16:	ea4c 050a 	orr.w	r5, ip, sl
 8026d1a:	9509      	str	r5, [sp, #36]	; 0x24
 8026d1c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8026d1e:	2dff      	cmp	r5, #255	; 0xff
 8026d20:	d020      	beq.n	8026d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8026d22:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026d24:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026d28:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8026d2a:	436f      	muls	r7, r5
 8026d2c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026d2e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026d32:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8026d34:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026d38:	fb05 fa0a 	mul.w	sl, r5, sl
 8026d3c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026d40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026d44:	44bc      	add	ip, r7
 8026d46:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026d4a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026d4e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026d52:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026d56:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026d5a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026d5e:	ea4c 050a 	orr.w	r5, ip, sl
 8026d62:	950f      	str	r5, [sp, #60]	; 0x3c
 8026d64:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026d66:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026d6a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026d6c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8026d70:	fb0e f707 	mul.w	r7, lr, r7
 8026d74:	fb02 770c 	mla	r7, r2, ip, r7
 8026d78:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026d7c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026d7e:	fb00 770c 	mla	r7, r0, ip, r7
 8026d82:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026d86:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026d88:	fb08 770c 	mla	r7, r8, ip, r7
 8026d8c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026d90:	fb0e fe0c 	mul.w	lr, lr, ip
 8026d94:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8026d98:	fb02 e303 	mla	r3, r2, r3, lr
 8026d9c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026d9e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026da0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8026da4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026da6:	fb00 330a 	mla	r3, r0, sl, r3
 8026daa:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8026dae:	fb08 3c0c 	mla	ip, r8, ip, r3
 8026db2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8026db4:	f8b9 0000 	ldrh.w	r0, [r9]
 8026db8:	4359      	muls	r1, r3
 8026dba:	0a3f      	lsrs	r7, r7, #8
 8026dbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026dc0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8026dc4:	1c4b      	adds	r3, r1, #1
 8026dc6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8026dca:	ea47 070c 	orr.w	r7, r7, ip
 8026dce:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026dd2:	1202      	asrs	r2, r0, #8
 8026dd4:	0c3b      	lsrs	r3, r7, #16
 8026dd6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8026dda:	b2c9      	uxtb	r1, r1
 8026ddc:	fb13 f305 	smulbb	r3, r3, r5
 8026de0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8026de4:	fb02 3201 	mla	r2, r2, r1, r3
 8026de8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8026dec:	10c3      	asrs	r3, r0, #3
 8026dee:	b2ff      	uxtb	r7, r7
 8026df0:	00c0      	lsls	r0, r0, #3
 8026df2:	b2c0      	uxtb	r0, r0
 8026df4:	fb17 f705 	smulbb	r7, r7, r5
 8026df8:	fb00 7001 	mla	r0, r0, r1, r7
 8026dfc:	b292      	uxth	r2, r2
 8026dfe:	fb1c fc05 	smulbb	ip, ip, r5
 8026e02:	b280      	uxth	r0, r0
 8026e04:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026e08:	fb03 c301 	mla	r3, r3, r1, ip
 8026e0c:	1c51      	adds	r1, r2, #1
 8026e0e:	f100 0c01 	add.w	ip, r0, #1
 8026e12:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8026e16:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8026e1a:	b29b      	uxth	r3, r3
 8026e1c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8026e20:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8026e24:	ea4c 0202 	orr.w	r2, ip, r2
 8026e28:	f103 0c01 	add.w	ip, r3, #1
 8026e2c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8026e30:	095b      	lsrs	r3, r3, #5
 8026e32:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026e36:	431a      	orrs	r2, r3
 8026e38:	f8a9 2000 	strh.w	r2, [r9]
 8026e3c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8026e3e:	441c      	add	r4, r3
 8026e40:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8026e42:	f109 0902 	add.w	r9, r9, #2
 8026e46:	441e      	add	r6, r3
 8026e48:	f10b 3bff 	add.w	fp, fp, #4294967295
 8026e4c:	e647      	b.n	8026ade <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 8026e4e:	2800      	cmp	r0, #0
 8026e50:	f43f aedf 	beq.w	8026c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8026e54:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8026e58:	9109      	str	r1, [sp, #36]	; 0x24
 8026e5a:	0e09      	lsrs	r1, r1, #24
 8026e5c:	9112      	str	r1, [sp, #72]	; 0x48
 8026e5e:	e6d8      	b.n	8026c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8026e60:	b01d      	add	sp, #116	; 0x74
 8026e62:	ecbd 8b08 	vpop	{d8-d11}
 8026e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08026e6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8026e6c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026e70:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8026e74:	fb04 5603 	mla	r6, r4, r3, r5
 8026e78:	2c00      	cmp	r4, #0
 8026e7a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8026e7e:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8026e82:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8026e86:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8026e8a:	db37      	blt.n	8026efc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8026e8c:	45a6      	cmp	lr, r4
 8026e8e:	dd35      	ble.n	8026efc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8026e90:	2d00      	cmp	r5, #0
 8026e92:	db31      	blt.n	8026ef8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026e94:	42ab      	cmp	r3, r5
 8026e96:	dd2f      	ble.n	8026ef8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026e98:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8026e9c:	1c6e      	adds	r6, r5, #1
 8026e9e:	d430      	bmi.n	8026f02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8026ea0:	42b3      	cmp	r3, r6
 8026ea2:	dd2e      	ble.n	8026f02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8026ea4:	b378      	cbz	r0, 8026f06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 8026ea6:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8026eaa:	3401      	adds	r4, #1
 8026eac:	d42f      	bmi.n	8026f0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8026eae:	45a6      	cmp	lr, r4
 8026eb0:	dd2d      	ble.n	8026f0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8026eb2:	b37f      	cbz	r7, 8026f14 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 8026eb4:	2d00      	cmp	r5, #0
 8026eb6:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 8026eba:	db26      	blt.n	8026f0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8026ebc:	42ab      	cmp	r3, r5
 8026ebe:	dd24      	ble.n	8026f0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8026ec0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8026ec4:	3501      	adds	r5, #1
 8026ec6:	d428      	bmi.n	8026f1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8026ec8:	42ab      	cmp	r3, r5
 8026eca:	dd26      	ble.n	8026f1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8026ecc:	b338      	cbz	r0, 8026f1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 8026ece:	f8de 3004 	ldr.w	r3, [lr, #4]
 8026ed2:	280f      	cmp	r0, #15
 8026ed4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8026ed8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8026edc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8026ee0:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8026ee4:	d801      	bhi.n	8026eea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 8026ee6:	2f0f      	cmp	r7, #15
 8026ee8:	d91b      	bls.n	8026f22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 8026eea:	4b87      	ldr	r3, [pc, #540]	; (8027108 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 8026eec:	4a87      	ldr	r2, [pc, #540]	; (802710c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8026eee:	4888      	ldr	r0, [pc, #544]	; (8027110 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8026ef0:	f240 11f9 	movw	r1, #505	; 0x1f9
 8026ef4:	f005 f87e 	bl	802bff4 <__assert_func>
 8026ef8:	2200      	movs	r2, #0
 8026efa:	e7cf      	b.n	8026e9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 8026efc:	2600      	movs	r6, #0
 8026efe:	4632      	mov	r2, r6
 8026f00:	e7d3      	b.n	8026eaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8026f02:	2600      	movs	r6, #0
 8026f04:	e7d1      	b.n	8026eaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8026f06:	4606      	mov	r6, r0
 8026f08:	e7cf      	b.n	8026eaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8026f0a:	2400      	movs	r4, #0
 8026f0c:	e7da      	b.n	8026ec4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 8026f0e:	2300      	movs	r3, #0
 8026f10:	461c      	mov	r4, r3
 8026f12:	e7de      	b.n	8026ed2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8026f14:	463b      	mov	r3, r7
 8026f16:	463c      	mov	r4, r7
 8026f18:	e7db      	b.n	8026ed2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8026f1a:	2300      	movs	r3, #0
 8026f1c:	e7d9      	b.n	8026ed2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8026f1e:	4603      	mov	r3, r0
 8026f20:	e7d7      	b.n	8026ed2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8026f22:	b280      	uxth	r0, r0
 8026f24:	b2bf      	uxth	r7, r7
 8026f26:	fb07 fe00 	mul.w	lr, r7, r0
 8026f2a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8026f2e:	0100      	lsls	r0, r0, #4
 8026f30:	eba0 0c0e 	sub.w	ip, r0, lr
 8026f34:	b2bf      	uxth	r7, r7
 8026f36:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8026f3a:	fa1f fc8c 	uxth.w	ip, ip
 8026f3e:	1bed      	subs	r5, r5, r7
 8026f40:	b2ad      	uxth	r5, r5
 8026f42:	fb0c f00a 	mul.w	r0, ip, sl
 8026f46:	fb0b 0005 	mla	r0, fp, r5, r0
 8026f4a:	fb07 0009 	mla	r0, r7, r9, r0
 8026f4e:	fb0e 0008 	mla	r0, lr, r8, r0
 8026f52:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8026f56:	9001      	str	r0, [sp, #4]
 8026f58:	2800      	cmp	r0, #0
 8026f5a:	f000 80d1 	beq.w	8027100 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 8026f5e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8026f62:	d018      	beq.n	8026f96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 8026f64:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8026f68:	fb0b f000 	mul.w	r0, fp, r0
 8026f6c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026f70:	fb0b fb02 	mul.w	fp, fp, r2
 8026f74:	0a02      	lsrs	r2, r0, #8
 8026f76:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026f7a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8026f7e:	4402      	add	r2, r0
 8026f80:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8026f84:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8026f88:	0a12      	lsrs	r2, r2, #8
 8026f8a:	0a00      	lsrs	r0, r0, #8
 8026f8c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026f90:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8026f94:	4302      	orrs	r2, r0
 8026f96:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8026f9a:	d01a      	beq.n	8026fd2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 8026f9c:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8026fa0:	fb0a f000 	mul.w	r0, sl, r0
 8026fa4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8026fa8:	fb0a fa06 	mul.w	sl, sl, r6
 8026fac:	0a06      	lsrs	r6, r0, #8
 8026fae:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8026fb2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8026fb6:	4406      	add	r6, r0
 8026fb8:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8026fbc:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8026fc0:	0a36      	lsrs	r6, r6, #8
 8026fc2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026fc6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8026fca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026fce:	ea46 060a 	orr.w	r6, r6, sl
 8026fd2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8026fd6:	d01b      	beq.n	8027010 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 8026fd8:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8026fdc:	fb09 fa0a 	mul.w	sl, r9, sl
 8026fe0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8026fe4:	fb09 f004 	mul.w	r0, r9, r4
 8026fe8:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8026fec:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8026ff0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8026ff4:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8026ff8:	4454      	add	r4, sl
 8026ffa:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8026ffe:	0a24      	lsrs	r4, r4, #8
 8027000:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027004:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027008:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802700c:	ea44 0409 	orr.w	r4, r4, r9
 8027010:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8027014:	d01b      	beq.n	802704e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 8027016:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 802701a:	fb08 f909 	mul.w	r9, r8, r9
 802701e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027022:	fb08 f003 	mul.w	r0, r8, r3
 8027026:	ea4f 2319 	mov.w	r3, r9, lsr #8
 802702a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802702e:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8027032:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8027036:	444b      	add	r3, r9
 8027038:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 802703c:	0a1b      	lsrs	r3, r3, #8
 802703e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027042:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027046:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802704a:	ea43 0308 	orr.w	r3, r3, r8
 802704e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8027052:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8027056:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 802705a:	fb0c f808 	mul.w	r8, ip, r8
 802705e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027062:	fb0c f606 	mul.w	r6, ip, r6
 8027066:	fb05 8909 	mla	r9, r5, r9, r8
 802706a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 802706e:	fb05 6502 	mla	r5, r5, r2, r6
 8027072:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027076:	fb07 9908 	mla	r9, r7, r8, r9
 802707a:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 802707e:	fb07 5704 	mla	r7, r7, r4, r5
 8027082:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027086:	8808      	ldrh	r0, [r1, #0]
 8027088:	fb0e 9808 	mla	r8, lr, r8, r9
 802708c:	fb0e 7e03 	mla	lr, lr, r3, r7
 8027090:	9b01      	ldr	r3, [sp, #4]
 8027092:	43da      	mvns	r2, r3
 8027094:	1203      	asrs	r3, r0, #8
 8027096:	b2d2      	uxtb	r2, r2
 8027098:	10c4      	asrs	r4, r0, #3
 802709a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802709e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80270a2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80270a6:	00c0      	lsls	r0, r0, #3
 80270a8:	4353      	muls	r3, r2
 80270aa:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 80270ae:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80270b2:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80270b6:	b2c0      	uxtb	r0, r0
 80270b8:	ea48 0e0e 	orr.w	lr, r8, lr
 80270bc:	4354      	muls	r4, r2
 80270be:	4350      	muls	r0, r2
 80270c0:	1c5a      	adds	r2, r3, #1
 80270c2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80270c6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80270ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80270ce:	1c62      	adds	r2, r4, #1
 80270d0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80270d4:	ea4f 221e 	mov.w	r2, lr, lsr #8
 80270d8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80270dc:	021b      	lsls	r3, r3, #8
 80270de:	00d2      	lsls	r2, r2, #3
 80270e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80270e4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80270e8:	4313      	orrs	r3, r2
 80270ea:	1c42      	adds	r2, r0, #1
 80270ec:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80270f0:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 80270f4:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 80270f8:	ea4e 0e03 	orr.w	lr, lr, r3
 80270fc:	f8a1 e000 	strh.w	lr, [r1]
 8027100:	b003      	add	sp, #12
 8027102:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027106:	bf00      	nop
 8027108:	08035c27 	.word	0x08035c27
 802710c:	08036156 	.word	0x08036156
 8027110:	08035bf4 	.word	0x08035bf4

08027114 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027118:	ed2d 8b08 	vpush	{d8-d11}
 802711c:	b09b      	sub	sp, #108	; 0x6c
 802711e:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 8027122:	9218      	str	r2, [sp, #96]	; 0x60
 8027124:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8027126:	9116      	str	r1, [sp, #88]	; 0x58
 8027128:	9307      	str	r3, [sp, #28]
 802712a:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 802712e:	9019      	str	r0, [sp, #100]	; 0x64
 8027130:	6850      	ldr	r0, [r2, #4]
 8027132:	6812      	ldr	r2, [r2, #0]
 8027134:	fb00 1303 	mla	r3, r0, r3, r1
 8027138:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802713c:	930a      	str	r3, [sp, #40]	; 0x28
 802713e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8027140:	681b      	ldr	r3, [r3, #0]
 8027142:	930f      	str	r3, [sp, #60]	; 0x3c
 8027144:	eeb0 aa40 	vmov.f32	s20, s0
 8027148:	eef0 9a60 	vmov.f32	s19, s1
 802714c:	eeb0 9a41 	vmov.f32	s18, s2
 8027150:	eeb0 8a62 	vmov.f32	s16, s5
 8027154:	eef0 8a43 	vmov.f32	s17, s6
 8027158:	eef0 ba44 	vmov.f32	s23, s8
 802715c:	eeb0 ba64 	vmov.f32	s22, s9
 8027160:	eef0 aa45 	vmov.f32	s21, s10
 8027164:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027166:	2b00      	cmp	r3, #0
 8027168:	dc03      	bgt.n	8027172 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 802716a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802716c:	2b00      	cmp	r3, #0
 802716e:	f340 8386 	ble.w	802787e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8027172:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8027174:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027178:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802717c:	1e48      	subs	r0, r1, #1
 802717e:	1e57      	subs	r7, r2, #1
 8027180:	9b07      	ldr	r3, [sp, #28]
 8027182:	2b00      	cmp	r3, #0
 8027184:	f340 8166 	ble.w	8027454 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 8027188:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802718c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027190:	d406      	bmi.n	80271a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8027192:	4584      	cmp	ip, r0
 8027194:	da04      	bge.n	80271a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8027196:	2b00      	cmp	r3, #0
 8027198:	db02      	blt.n	80271a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802719a:	42bb      	cmp	r3, r7
 802719c:	f2c0 815b 	blt.w	8027456 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80271a0:	f11c 0c01 	adds.w	ip, ip, #1
 80271a4:	f100 814b 	bmi.w	802743e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80271a8:	4561      	cmp	r1, ip
 80271aa:	f2c0 8148 	blt.w	802743e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80271ae:	3301      	adds	r3, #1
 80271b0:	f100 8145 	bmi.w	802743e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80271b4:	429a      	cmp	r2, r3
 80271b6:	f2c0 8142 	blt.w	802743e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80271ba:	9b07      	ldr	r3, [sp, #28]
 80271bc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80271be:	9317      	str	r3, [sp, #92]	; 0x5c
 80271c0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80271c2:	2b00      	cmp	r3, #0
 80271c4:	f340 8165 	ble.w	8027492 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80271c8:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 80271ca:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80271cc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80271d0:	689b      	ldr	r3, [r3, #8]
 80271d2:	1422      	asrs	r2, r4, #16
 80271d4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80271d8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80271dc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80271e0:	f100 81d5 	bmi.w	802758e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80271e4:	f103 38ff 	add.w	r8, r3, #4294967295
 80271e8:	4542      	cmp	r2, r8
 80271ea:	f280 81d0 	bge.w	802758e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80271ee:	f1bc 0f00 	cmp.w	ip, #0
 80271f2:	f2c0 81cc 	blt.w	802758e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80271f6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80271fa:	45c4      	cmp	ip, r8
 80271fc:	f280 81c7 	bge.w	802758e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8027200:	b21b      	sxth	r3, r3
 8027202:	fb0c 2203 	mla	r2, ip, r3, r2
 8027206:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027208:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802720c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8027210:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027214:	2900      	cmp	r1, #0
 8027216:	f000 8182 	beq.w	802751e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 802721a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802721e:	950b      	str	r5, [sp, #44]	; 0x2c
 8027220:	0e2d      	lsrs	r5, r5, #24
 8027222:	9512      	str	r5, [sp, #72]	; 0x48
 8027224:	b180      	cbz	r0, 8027248 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8027226:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802722a:	3b01      	subs	r3, #1
 802722c:	009b      	lsls	r3, r3, #2
 802722e:	3304      	adds	r3, #4
 8027230:	eb08 0c03 	add.w	ip, r8, r3
 8027234:	f858 3003 	ldr.w	r3, [r8, r3]
 8027238:	9308      	str	r3, [sp, #32]
 802723a:	0e1b      	lsrs	r3, r3, #24
 802723c:	9310      	str	r3, [sp, #64]	; 0x40
 802723e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8027242:	930c      	str	r3, [sp, #48]	; 0x30
 8027244:	0e1b      	lsrs	r3, r3, #24
 8027246:	9313      	str	r3, [sp, #76]	; 0x4c
 8027248:	b289      	uxth	r1, r1
 802724a:	b280      	uxth	r0, r0
 802724c:	fb01 f900 	mul.w	r9, r1, r0
 8027250:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027254:	0109      	lsls	r1, r1, #4
 8027256:	eba1 0809 	sub.w	r8, r1, r9
 802725a:	b280      	uxth	r0, r0
 802725c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8027260:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027262:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027264:	fa1f f888 	uxth.w	r8, r8
 8027268:	1a09      	subs	r1, r1, r0
 802726a:	b289      	uxth	r1, r1
 802726c:	fb08 f303 	mul.w	r3, r8, r3
 8027270:	fb01 330e 	mla	r3, r1, lr, r3
 8027274:	fb00 3305 	mla	r3, r0, r5, r3
 8027278:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802727a:	fb09 3305 	mla	r3, r9, r5, r3
 802727e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027282:	2b00      	cmp	r3, #0
 8027284:	f000 80d2 	beq.w	802742c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8027288:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802728c:	d01b      	beq.n	80272c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 802728e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027292:	fb0e fa0a 	mul.w	sl, lr, sl
 8027296:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802729a:	fb0e fe02 	mul.w	lr, lr, r2
 802729e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80272a2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80272a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80272aa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80272ae:	4452      	add	r2, sl
 80272b0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80272b4:	0a12      	lsrs	r2, r2, #8
 80272b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80272ba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80272be:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80272c2:	ea42 020c 	orr.w	r2, r2, ip
 80272c6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80272c8:	2dff      	cmp	r5, #255	; 0xff
 80272ca:	d021      	beq.n	8027310 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80272cc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80272ce:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80272d2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80272d4:	fb05 fb0b 	mul.w	fp, r5, fp
 80272d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80272da:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80272de:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80272e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80272e4:	fb05 fa0a 	mul.w	sl, r5, sl
 80272e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80272ec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80272f0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80272f4:	44de      	add	lr, fp
 80272f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80272fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80272fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027302:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027306:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802730a:	ea4e 050a 	orr.w	r5, lr, sl
 802730e:	950b      	str	r5, [sp, #44]	; 0x2c
 8027310:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027312:	2dff      	cmp	r5, #255	; 0xff
 8027314:	d021      	beq.n	802735a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8027316:	9d08      	ldr	r5, [sp, #32]
 8027318:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802731c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802731e:	fb05 fb0b 	mul.w	fp, r5, fp
 8027322:	9d08      	ldr	r5, [sp, #32]
 8027324:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027328:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802732a:	fb05 fa0e 	mul.w	sl, r5, lr
 802732e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027332:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027336:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802733a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802733e:	44de      	add	lr, fp
 8027340:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027344:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027348:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802734c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027350:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027354:	ea4e 050a 	orr.w	r5, lr, sl
 8027358:	9508      	str	r5, [sp, #32]
 802735a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802735c:	2dff      	cmp	r5, #255	; 0xff
 802735e:	d021      	beq.n	80273a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8027360:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027362:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027366:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027368:	fb05 fb0b 	mul.w	fp, r5, fp
 802736c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802736e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027372:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027374:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027378:	fb05 fa0a 	mul.w	sl, r5, sl
 802737c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027380:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027384:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027388:	44de      	add	lr, fp
 802738a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802738e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027392:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027396:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802739a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802739e:	ea4e 050a 	orr.w	r5, lr, sl
 80273a2:	950c      	str	r5, [sp, #48]	; 0x30
 80273a4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80273a6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80273aa:	9d08      	ldr	r5, [sp, #32]
 80273ac:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80273b0:	fb08 fc0c 	mul.w	ip, r8, ip
 80273b4:	fb01 cc0e 	mla	ip, r1, lr, ip
 80273b8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80273bc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80273be:	fb00 cc0e 	mla	ip, r0, lr, ip
 80273c2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80273c6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80273c8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80273cc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80273d0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80273d4:	fb08 f80e 	mul.w	r8, r8, lr
 80273d8:	fb01 8202 	mla	r2, r1, r2, r8
 80273dc:	9908      	ldr	r1, [sp, #32]
 80273de:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80273e2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80273e4:	fb00 220a 	mla	r2, r0, sl, r2
 80273e8:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80273ec:	fb09 2900 	mla	r9, r9, r0, r2
 80273f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80273f4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80273f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80273fc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027400:	ea4c 0c09 	orr.w	ip, ip, r9
 8027404:	2bff      	cmp	r3, #255	; 0xff
 8027406:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802740a:	f040 8091 	bne.w	8027530 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 802740e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8027412:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8027416:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802741a:	f022 0207 	bic.w	r2, r2, #7
 802741e:	431a      	orrs	r2, r3
 8027420:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8027424:	ea4c 0c02 	orr.w	ip, ip, r2
 8027428:	f8a7 c000 	strh.w	ip, [r7]
 802742c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 802742e:	441c      	add	r4, r3
 8027430:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8027432:	441e      	add	r6, r3
 8027434:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027436:	3b01      	subs	r3, #1
 8027438:	3702      	adds	r7, #2
 802743a:	9317      	str	r3, [sp, #92]	; 0x5c
 802743c:	e6c0      	b.n	80271c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 802743e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8027440:	441c      	add	r4, r3
 8027442:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8027444:	441e      	add	r6, r3
 8027446:	9b07      	ldr	r3, [sp, #28]
 8027448:	3b01      	subs	r3, #1
 802744a:	9307      	str	r3, [sp, #28]
 802744c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802744e:	3302      	adds	r3, #2
 8027450:	930a      	str	r3, [sp, #40]	; 0x28
 8027452:	e695      	b.n	8027180 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8027454:	d024      	beq.n	80274a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8027456:	9b07      	ldr	r3, [sp, #28]
 8027458:	982f      	ldr	r0, [sp, #188]	; 0xbc
 802745a:	3b01      	subs	r3, #1
 802745c:	fb00 4003 	mla	r0, r0, r3, r4
 8027460:	1400      	asrs	r0, r0, #16
 8027462:	f53f aeaa 	bmi.w	80271ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8027466:	3901      	subs	r1, #1
 8027468:	4288      	cmp	r0, r1
 802746a:	f6bf aea6 	bge.w	80271ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802746e:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8027470:	fb01 6303 	mla	r3, r1, r3, r6
 8027474:	141b      	asrs	r3, r3, #16
 8027476:	f53f aea0 	bmi.w	80271ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802747a:	3a01      	subs	r2, #1
 802747c:	4293      	cmp	r3, r2
 802747e:	f6bf ae9c 	bge.w	80271ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8027482:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027486:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802748a:	f1bb 0f00 	cmp.w	fp, #0
 802748e:	f300 809a 	bgt.w	80275c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8027492:	9b07      	ldr	r3, [sp, #28]
 8027494:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027498:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802749a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802749e:	930a      	str	r3, [sp, #40]	; 0x28
 80274a0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80274a2:	2b00      	cmp	r3, #0
 80274a4:	f340 81eb 	ble.w	802787e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80274a8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80274ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80274b0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80274b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80274b6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80274ba:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80274be:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80274c2:	eef0 6a48 	vmov.f32	s13, s16
 80274c6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80274ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80274ce:	ee37 8a48 	vsub.f32	s16, s14, s16
 80274d2:	ee16 4a90 	vmov	r4, s13
 80274d6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80274da:	eef0 6a68 	vmov.f32	s13, s17
 80274de:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80274e2:	ee18 2a10 	vmov	r2, s16
 80274e6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80274ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80274ee:	ee18 2a90 	vmov	r2, s17
 80274f2:	932f      	str	r3, [sp, #188]	; 0xbc
 80274f4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80274f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80274fa:	9330      	str	r3, [sp, #192]	; 0xc0
 80274fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80274fe:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8027500:	3b01      	subs	r3, #1
 8027502:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027506:	9316      	str	r3, [sp, #88]	; 0x58
 8027508:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802750a:	bf08      	it	eq
 802750c:	4613      	moveq	r3, r2
 802750e:	ee16 6a90 	vmov	r6, s13
 8027512:	9307      	str	r3, [sp, #28]
 8027514:	eef0 8a67 	vmov.f32	s17, s15
 8027518:	eeb0 8a47 	vmov.f32	s16, s14
 802751c:	e622      	b.n	8027164 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 802751e:	2800      	cmp	r0, #0
 8027520:	f43f ae92 	beq.w	8027248 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8027524:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027528:	9308      	str	r3, [sp, #32]
 802752a:	0e1b      	lsrs	r3, r3, #24
 802752c:	9310      	str	r3, [sp, #64]	; 0x40
 802752e:	e68b      	b.n	8027248 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8027530:	8839      	ldrh	r1, [r7, #0]
 8027532:	4dd5      	ldr	r5, [pc, #852]	; (8027888 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 8027534:	43db      	mvns	r3, r3
 8027536:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802753a:	fa5f f883 	uxtb.w	r8, r3
 802753e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8027542:	fb0e fe08 	mul.w	lr, lr, r8
 8027546:	10c8      	asrs	r0, r1, #3
 8027548:	00cb      	lsls	r3, r1, #3
 802754a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802754e:	f10e 0101 	add.w	r1, lr, #1
 8027552:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8027556:	fb00 f008 	mul.w	r0, r0, r8
 802755a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802755e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8027562:	f100 0e01 	add.w	lr, r0, #1
 8027566:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802756a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802756e:	b2db      	uxtb	r3, r3
 8027570:	b2c9      	uxtb	r1, r1
 8027572:	00d2      	lsls	r2, r2, #3
 8027574:	fb03 f308 	mul.w	r3, r3, r8
 8027578:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802757c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027580:	430a      	orrs	r2, r1
 8027582:	1c59      	adds	r1, r3, #1
 8027584:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027588:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802758c:	e748      	b.n	8027420 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802758e:	f112 0801 	adds.w	r8, r2, #1
 8027592:	f53f af4b 	bmi.w	802742c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8027596:	4543      	cmp	r3, r8
 8027598:	f6ff af48 	blt.w	802742c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802759c:	f11c 0801 	adds.w	r8, ip, #1
 80275a0:	f53f af44 	bmi.w	802742c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80275a4:	45c6      	cmp	lr, r8
 80275a6:	f6ff af41 	blt.w	802742c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80275aa:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80275ae:	fa0f f28e 	sxth.w	r2, lr
 80275b2:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80275b6:	9200      	str	r2, [sp, #0]
 80275b8:	b21b      	sxth	r3, r3
 80275ba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80275bc:	9819      	ldr	r0, [sp, #100]	; 0x64
 80275be:	4639      	mov	r1, r7
 80275c0:	f7ff fc54 	bl	8026e6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80275c4:	e732      	b.n	802742c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80275c6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80275c8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80275ca:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80275ce:	1421      	asrs	r1, r4, #16
 80275d0:	1433      	asrs	r3, r6, #16
 80275d2:	fb07 1303 	mla	r3, r7, r3, r1
 80275d6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80275d8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80275dc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80275e0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80275e4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80275e8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80275ec:	2a00      	cmp	r2, #0
 80275ee:	f000 8107 	beq.w	8027800 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 80275f2:	684d      	ldr	r5, [r1, #4]
 80275f4:	950d      	str	r5, [sp, #52]	; 0x34
 80275f6:	0e2d      	lsrs	r5, r5, #24
 80275f8:	9514      	str	r5, [sp, #80]	; 0x50
 80275fa:	b178      	cbz	r0, 802761c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80275fc:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8027600:	3f01      	subs	r7, #1
 8027602:	00bf      	lsls	r7, r7, #2
 8027604:	3704      	adds	r7, #4
 8027606:	eb01 0e07 	add.w	lr, r1, r7
 802760a:	59c9      	ldr	r1, [r1, r7]
 802760c:	9109      	str	r1, [sp, #36]	; 0x24
 802760e:	0e09      	lsrs	r1, r1, #24
 8027610:	9111      	str	r1, [sp, #68]	; 0x44
 8027612:	f8de 1004 	ldr.w	r1, [lr, #4]
 8027616:	910e      	str	r1, [sp, #56]	; 0x38
 8027618:	0e09      	lsrs	r1, r1, #24
 802761a:	9115      	str	r1, [sp, #84]	; 0x54
 802761c:	b292      	uxth	r2, r2
 802761e:	b280      	uxth	r0, r0
 8027620:	fb02 f900 	mul.w	r9, r2, r0
 8027624:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027628:	0112      	lsls	r2, r2, #4
 802762a:	eba2 0e09 	sub.w	lr, r2, r9
 802762e:	b280      	uxth	r0, r0
 8027630:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8027634:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8027636:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027638:	fa1f fe8e 	uxth.w	lr, lr
 802763c:	1a09      	subs	r1, r1, r0
 802763e:	b289      	uxth	r1, r1
 8027640:	fb0e f202 	mul.w	r2, lr, r2
 8027644:	fb01 220c 	mla	r2, r1, ip, r2
 8027648:	fb00 2205 	mla	r2, r0, r5, r2
 802764c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802764e:	fb09 2205 	mla	r2, r9, r5, r2
 8027652:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8027656:	2a00      	cmp	r2, #0
 8027658:	f000 80c9 	beq.w	80277ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802765c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8027660:	d019      	beq.n	8027696 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 8027662:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8027666:	fb0c fa0a 	mul.w	sl, ip, sl
 802766a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802766e:	fb0c fc03 	mul.w	ip, ip, r3
 8027672:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027676:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802767a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802767e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8027682:	4453      	add	r3, sl
 8027684:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027688:	0a1b      	lsrs	r3, r3, #8
 802768a:	0a3f      	lsrs	r7, r7, #8
 802768c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027690:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8027694:	433b      	orrs	r3, r7
 8027696:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027698:	2dff      	cmp	r5, #255	; 0xff
 802769a:	d020      	beq.n	80276de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 802769c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802769e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80276a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80276a4:	436f      	muls	r7, r5
 80276a6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80276a8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80276ac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80276ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80276b2:	fb05 fa0a 	mul.w	sl, r5, sl
 80276b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80276ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80276be:	44bc      	add	ip, r7
 80276c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80276c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80276c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80276cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80276d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80276d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80276d8:	ea4c 050a 	orr.w	r5, ip, sl
 80276dc:	950d      	str	r5, [sp, #52]	; 0x34
 80276de:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80276e0:	2dff      	cmp	r5, #255	; 0xff
 80276e2:	d020      	beq.n	8027726 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 80276e4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80276e6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80276ea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80276ec:	436f      	muls	r7, r5
 80276ee:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80276f0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80276f4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80276f6:	fb05 fa0c 	mul.w	sl, r5, ip
 80276fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80276fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027702:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027706:	44bc      	add	ip, r7
 8027708:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802770c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027710:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027714:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027718:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802771c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027720:	ea4c 050a 	orr.w	r5, ip, sl
 8027724:	9509      	str	r5, [sp, #36]	; 0x24
 8027726:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027728:	2dff      	cmp	r5, #255	; 0xff
 802772a:	d020      	beq.n	802776e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 802772c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802772e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027732:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027734:	436f      	muls	r7, r5
 8027736:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027738:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802773c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802773e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027742:	fb05 fa0a 	mul.w	sl, r5, sl
 8027746:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802774a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802774e:	44bc      	add	ip, r7
 8027750:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027754:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027758:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802775c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027760:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027764:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027768:	ea4c 050a 	orr.w	r5, ip, sl
 802776c:	950e      	str	r5, [sp, #56]	; 0x38
 802776e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027770:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027774:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027776:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802777a:	fb0e f707 	mul.w	r7, lr, r7
 802777e:	fb01 770c 	mla	r7, r1, ip, r7
 8027782:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027786:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027788:	fb00 770c 	mla	r7, r0, ip, r7
 802778c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027790:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027792:	fb09 770c 	mla	r7, r9, ip, r7
 8027796:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802779a:	fb0e fe0c 	mul.w	lr, lr, ip
 802779e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80277a2:	fb01 e303 	mla	r3, r1, r3, lr
 80277a6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80277a8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80277ac:	990e      	ldr	r1, [sp, #56]	; 0x38
 80277ae:	fb00 330a 	mla	r3, r0, sl, r3
 80277b2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80277b6:	fb09 3c0c 	mla	ip, r9, ip, r3
 80277ba:	0a3f      	lsrs	r7, r7, #8
 80277bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80277c0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80277c4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80277c8:	ea47 070c 	orr.w	r7, r7, ip
 80277cc:	2aff      	cmp	r2, #255	; 0xff
 80277ce:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80277d2:	d11e      	bne.n	8027812 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 80277d4:	097a      	lsrs	r2, r7, #5
 80277d6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80277da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80277de:	f023 0307 	bic.w	r3, r3, #7
 80277e2:	4313      	orrs	r3, r2
 80277e4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80277e8:	431f      	orrs	r7, r3
 80277ea:	f8a8 7000 	strh.w	r7, [r8]
 80277ee:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80277f0:	441c      	add	r4, r3
 80277f2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80277f4:	f108 0802 	add.w	r8, r8, #2
 80277f8:	441e      	add	r6, r3
 80277fa:	f10b 3bff 	add.w	fp, fp, #4294967295
 80277fe:	e644      	b.n	802748a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8027800:	2800      	cmp	r0, #0
 8027802:	f43f af0b 	beq.w	802761c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8027806:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802780a:	9109      	str	r1, [sp, #36]	; 0x24
 802780c:	0e09      	lsrs	r1, r1, #24
 802780e:	9111      	str	r1, [sp, #68]	; 0x44
 8027810:	e704      	b.n	802761c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8027812:	f8b8 1000 	ldrh.w	r1, [r8]
 8027816:	43d2      	mvns	r2, r2
 8027818:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802781c:	fa5f fe82 	uxtb.w	lr, r2
 8027820:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8027824:	fb0c fc0e 	mul.w	ip, ip, lr
 8027828:	10c8      	asrs	r0, r1, #3
 802782a:	00ca      	lsls	r2, r1, #3
 802782c:	f10c 0101 	add.w	r1, ip, #1
 8027830:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8027834:	0c39      	lsrs	r1, r7, #16
 8027836:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802783a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802783e:	4912      	ldr	r1, [pc, #72]	; (8027888 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 8027840:	fb00 f00e 	mul.w	r0, r0, lr
 8027844:	fa5f fc8c 	uxtb.w	ip, ip
 8027848:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802784c:	b2d2      	uxtb	r2, r2
 802784e:	1c41      	adds	r1, r0, #1
 8027850:	fb02 f20e 	mul.w	r2, r2, lr
 8027854:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8027858:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802785c:	1c51      	adds	r1, r2, #1
 802785e:	00c0      	lsls	r0, r0, #3
 8027860:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8027864:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8027868:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802786c:	ea4c 0c00 	orr.w	ip, ip, r0
 8027870:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8027874:	ea47 0c0c 	orr.w	ip, r7, ip
 8027878:	f8a8 c000 	strh.w	ip, [r8]
 802787c:	e7b7      	b.n	80277ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802787e:	b01b      	add	sp, #108	; 0x6c
 8027880:	ecbd 8b08 	vpop	{d8-d11}
 8027884:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027888:	fffff800 	.word	0xfffff800

0802788c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 802788c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027890:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8027894:	2c00      	cmp	r4, #0
 8027896:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802789a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802789e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80278a2:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 80278a6:	fb04 ce03 	mla	lr, r4, r3, ip
 80278aa:	db60      	blt.n	802796e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80278ac:	45a1      	cmp	r9, r4
 80278ae:	dd5e      	ble.n	802796e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80278b0:	f1bc 0f00 	cmp.w	ip, #0
 80278b4:	db59      	blt.n	802796a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80278b6:	45e0      	cmp	r8, ip
 80278b8:	dd57      	ble.n	802796a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80278ba:	ea4f 005e 	mov.w	r0, lr, lsr #1
 80278be:	f01e 0f01 	tst.w	lr, #1
 80278c2:	5c16      	ldrb	r6, [r2, r0]
 80278c4:	bf0c      	ite	eq
 80278c6:	f006 060f 	andeq.w	r6, r6, #15
 80278ca:	1136      	asrne	r6, r6, #4
 80278cc:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80278d0:	b2f6      	uxtb	r6, r6
 80278d2:	f11c 0001 	adds.w	r0, ip, #1
 80278d6:	d44d      	bmi.n	8027974 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80278d8:	4580      	cmp	r8, r0
 80278da:	dd4b      	ble.n	8027974 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80278dc:	2d00      	cmp	r5, #0
 80278de:	d04b      	beq.n	8027978 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 80278e0:	f10e 0a01 	add.w	sl, lr, #1
 80278e4:	ea4f 005a 	mov.w	r0, sl, lsr #1
 80278e8:	f01a 0f01 	tst.w	sl, #1
 80278ec:	5c10      	ldrb	r0, [r2, r0]
 80278ee:	bf0c      	ite	eq
 80278f0:	f000 000f 	andeq.w	r0, r0, #15
 80278f4:	1100      	asrne	r0, r0, #4
 80278f6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80278fa:	b2c0      	uxtb	r0, r0
 80278fc:	3401      	adds	r4, #1
 80278fe:	d43f      	bmi.n	8027980 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8027900:	45a1      	cmp	r9, r4
 8027902:	dd3d      	ble.n	8027980 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8027904:	2f00      	cmp	r7, #0
 8027906:	f000 80a8 	beq.w	8027a5a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 802790a:	f1bc 0f00 	cmp.w	ip, #0
 802790e:	db35      	blt.n	802797c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8027910:	45e0      	cmp	r8, ip
 8027912:	dd33      	ble.n	802797c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8027914:	eb03 090e 	add.w	r9, r3, lr
 8027918:	ea4f 0459 	mov.w	r4, r9, lsr #1
 802791c:	f019 0f01 	tst.w	r9, #1
 8027920:	5d14      	ldrb	r4, [r2, r4]
 8027922:	bf0c      	ite	eq
 8027924:	f004 040f 	andeq.w	r4, r4, #15
 8027928:	1124      	asrne	r4, r4, #4
 802792a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802792e:	b2e4      	uxtb	r4, r4
 8027930:	f11c 0c01 	adds.w	ip, ip, #1
 8027934:	d427      	bmi.n	8027986 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8027936:	45e0      	cmp	r8, ip
 8027938:	dd25      	ble.n	8027986 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 802793a:	b335      	cbz	r5, 802798a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 802793c:	3301      	adds	r3, #1
 802793e:	449e      	add	lr, r3
 8027940:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8027944:	f01e 0f01 	tst.w	lr, #1
 8027948:	5cd2      	ldrb	r2, [r2, r3]
 802794a:	bf0c      	ite	eq
 802794c:	f002 020f 	andeq.w	r2, r2, #15
 8027950:	1112      	asrne	r2, r2, #4
 8027952:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8027956:	b2d3      	uxtb	r3, r2
 8027958:	2d0f      	cmp	r5, #15
 802795a:	d917      	bls.n	802798c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 802795c:	4b42      	ldr	r3, [pc, #264]	; (8027a68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 802795e:	4a43      	ldr	r2, [pc, #268]	; (8027a6c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 8027960:	4843      	ldr	r0, [pc, #268]	; (8027a70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 8027962:	f240 11f9 	movw	r1, #505	; 0x1f9
 8027966:	f004 fb45 	bl	802bff4 <__assert_func>
 802796a:	2600      	movs	r6, #0
 802796c:	e7b1      	b.n	80278d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 802796e:	2000      	movs	r0, #0
 8027970:	4606      	mov	r6, r0
 8027972:	e7c3      	b.n	80278fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8027974:	2000      	movs	r0, #0
 8027976:	e7c1      	b.n	80278fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8027978:	4628      	mov	r0, r5
 802797a:	e7bf      	b.n	80278fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 802797c:	2400      	movs	r4, #0
 802797e:	e7d7      	b.n	8027930 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8027980:	2300      	movs	r3, #0
 8027982:	461c      	mov	r4, r3
 8027984:	e7e8      	b.n	8027958 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8027986:	2300      	movs	r3, #0
 8027988:	e7e6      	b.n	8027958 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 802798a:	462b      	mov	r3, r5
 802798c:	2f0f      	cmp	r7, #15
 802798e:	d8e5      	bhi.n	802795c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8027990:	b2ad      	uxth	r5, r5
 8027992:	b2bf      	uxth	r7, r7
 8027994:	fb05 fc07 	mul.w	ip, r5, r7
 8027998:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 802799c:	012d      	lsls	r5, r5, #4
 802799e:	b2bf      	uxth	r7, r7
 80279a0:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 80279a4:	eba5 050c 	sub.w	r5, r5, ip
 80279a8:	1bd2      	subs	r2, r2, r7
 80279aa:	b2ad      	uxth	r5, r5
 80279ac:	b292      	uxth	r2, r2
 80279ae:	4368      	muls	r0, r5
 80279b0:	fb06 0002 	mla	r0, r6, r2, r0
 80279b4:	fb07 0404 	mla	r4, r7, r4, r0
 80279b8:	fb0c 4303 	mla	r3, ip, r3, r4
 80279bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80279c0:	b1b3      	cbz	r3, 80279f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 80279c2:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80279c6:	435a      	muls	r2, r3
 80279c8:	1c53      	adds	r3, r2, #1
 80279ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80279ce:	4a29      	ldr	r2, [pc, #164]	; (8027a74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 80279d0:	121b      	asrs	r3, r3, #8
 80279d2:	6812      	ldr	r2, [r2, #0]
 80279d4:	2bff      	cmp	r3, #255	; 0xff
 80279d6:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80279da:	d10b      	bne.n	80279f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 80279dc:	4b26      	ldr	r3, [pc, #152]	; (8027a78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 80279de:	0950      	lsrs	r0, r2, #5
 80279e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80279e4:	4033      	ands	r3, r6
 80279e6:	4318      	orrs	r0, r3
 80279e8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80279ec:	4302      	orrs	r2, r0
 80279ee:	800a      	strh	r2, [r1, #0]
 80279f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80279f4:	880d      	ldrh	r5, [r1, #0]
 80279f6:	b29f      	uxth	r7, r3
 80279f8:	122c      	asrs	r4, r5, #8
 80279fa:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80279fe:	43db      	mvns	r3, r3
 8027a00:	b2db      	uxtb	r3, r3
 8027a02:	fb10 f007 	smulbb	r0, r0, r7
 8027a06:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8027a0a:	fb04 0403 	mla	r4, r4, r3, r0
 8027a0e:	b2f6      	uxtb	r6, r6
 8027a10:	10e8      	asrs	r0, r5, #3
 8027a12:	b2d2      	uxtb	r2, r2
 8027a14:	00ed      	lsls	r5, r5, #3
 8027a16:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027a1a:	fb12 f207 	smulbb	r2, r2, r7
 8027a1e:	fb16 f607 	smulbb	r6, r6, r7
 8027a22:	b2ed      	uxtb	r5, r5
 8027a24:	b2a4      	uxth	r4, r4
 8027a26:	fb00 6603 	mla	r6, r0, r3, r6
 8027a2a:	fb05 2303 	mla	r3, r5, r3, r2
 8027a2e:	b29a      	uxth	r2, r3
 8027a30:	1c63      	adds	r3, r4, #1
 8027a32:	b2b0      	uxth	r0, r6
 8027a34:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8027a38:	1c53      	adds	r3, r2, #1
 8027a3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027a3e:	1c42      	adds	r2, r0, #1
 8027a40:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027a44:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8027a48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027a4c:	0940      	lsrs	r0, r0, #5
 8027a4e:	4323      	orrs	r3, r4
 8027a50:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8027a54:	4303      	orrs	r3, r0
 8027a56:	800b      	strh	r3, [r1, #0]
 8027a58:	e7ca      	b.n	80279f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8027a5a:	2d0f      	cmp	r5, #15
 8027a5c:	f63f af7e 	bhi.w	802795c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8027a60:	463b      	mov	r3, r7
 8027a62:	463c      	mov	r4, r7
 8027a64:	e794      	b.n	8027990 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8027a66:	bf00      	nop
 8027a68:	08035c27 	.word	0x08035c27
 8027a6c:	08036156 	.word	0x08036156
 8027a70:	08035bf4 	.word	0x08035bf4
 8027a74:	2001e1e8 	.word	0x2001e1e8
 8027a78:	00fff800 	.word	0x00fff800

08027a7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027a80:	ed2d 8b08 	vpush	{d8-d11}
 8027a84:	b097      	sub	sp, #92	; 0x5c
 8027a86:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 8027a8a:	9214      	str	r2, [sp, #80]	; 0x50
 8027a8c:	9309      	str	r3, [sp, #36]	; 0x24
 8027a8e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8027a90:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8027a94:	910d      	str	r1, [sp, #52]	; 0x34
 8027a96:	930f      	str	r3, [sp, #60]	; 0x3c
 8027a98:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8027a9c:	9015      	str	r0, [sp, #84]	; 0x54
 8027a9e:	6850      	ldr	r0, [r2, #4]
 8027aa0:	6812      	ldr	r2, [r2, #0]
 8027aa2:	fb00 1303 	mla	r3, r0, r3, r1
 8027aa6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8027aaa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8027aac:	689b      	ldr	r3, [r3, #8]
 8027aae:	3301      	adds	r3, #1
 8027ab0:	f023 0301 	bic.w	r3, r3, #1
 8027ab4:	930a      	str	r3, [sp, #40]	; 0x28
 8027ab6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8027ab8:	681f      	ldr	r7, [r3, #0]
 8027aba:	eeb0 aa40 	vmov.f32	s20, s0
 8027abe:	eef0 9a60 	vmov.f32	s19, s1
 8027ac2:	eeb0 9a41 	vmov.f32	s18, s2
 8027ac6:	eeb0 8a62 	vmov.f32	s16, s5
 8027aca:	eef0 8a43 	vmov.f32	s17, s6
 8027ace:	eef0 ba44 	vmov.f32	s23, s8
 8027ad2:	eeb0 ba64 	vmov.f32	s22, s9
 8027ad6:	eef0 aa45 	vmov.f32	s21, s10
 8027ada:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027adc:	2b00      	cmp	r3, #0
 8027ade:	dc03      	bgt.n	8027ae8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8027ae0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8027ae2:	2b00      	cmp	r3, #0
 8027ae4:	f340 8287 	ble.w	8027ff6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8027ae8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8027aea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027aee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027af2:	1e48      	subs	r0, r1, #1
 8027af4:	f102 3cff 	add.w	ip, r2, #4294967295
 8027af8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027afa:	2b00      	cmp	r3, #0
 8027afc:	f340 80c4 	ble.w	8027c88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8027b00:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8027b04:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027b08:	d406      	bmi.n	8027b18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8027b0a:	4586      	cmp	lr, r0
 8027b0c:	da04      	bge.n	8027b18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8027b0e:	2b00      	cmp	r3, #0
 8027b10:	db02      	blt.n	8027b18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8027b12:	4563      	cmp	r3, ip
 8027b14:	f2c0 80b9 	blt.w	8027c8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8027b18:	f11e 0e01 	adds.w	lr, lr, #1
 8027b1c:	f100 80aa 	bmi.w	8027c74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8027b20:	4571      	cmp	r1, lr
 8027b22:	f2c0 80a7 	blt.w	8027c74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8027b26:	3301      	adds	r3, #1
 8027b28:	f100 80a4 	bmi.w	8027c74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8027b2c:	429a      	cmp	r2, r3
 8027b2e:	f2c0 80a1 	blt.w	8027c74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8027b32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027b34:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8027b38:	930e      	str	r3, [sp, #56]	; 0x38
 8027b3a:	46c8      	mov	r8, r9
 8027b3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8027b3e:	2b00      	cmp	r3, #0
 8027b40:	f340 80c3 	ble.w	8027cca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8027b44:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8027b46:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8027b4a:	1423      	asrs	r3, r4, #16
 8027b4c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8027b50:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027b54:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8027b58:	f100 814d 	bmi.w	8027df6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8027b5c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8027b60:	455b      	cmp	r3, fp
 8027b62:	f280 8148 	bge.w	8027df6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8027b66:	2800      	cmp	r0, #0
 8027b68:	f2c0 8145 	blt.w	8027df6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8027b6c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8027b70:	4558      	cmp	r0, fp
 8027b72:	f280 8140 	bge.w	8027df6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8027b76:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8027b78:	fb00 3305 	mla	r3, r0, r5, r3
 8027b7c:	0858      	lsrs	r0, r3, #1
 8027b7e:	07dd      	lsls	r5, r3, #31
 8027b80:	f817 c000 	ldrb.w	ip, [r7, r0]
 8027b84:	bf54      	ite	pl
 8027b86:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027b8a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027b8e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027b92:	fa5f fc8c 	uxtb.w	ip, ip
 8027b96:	2a00      	cmp	r2, #0
 8027b98:	f000 80db 	beq.w	8027d52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8027b9c:	1c58      	adds	r0, r3, #1
 8027b9e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8027ba2:	07c0      	lsls	r0, r0, #31
 8027ba4:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8027ba8:	bf54      	ite	pl
 8027baa:	f00e 0e0f 	andpl.w	lr, lr, #15
 8027bae:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8027bb2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8027bb6:	fa5f f08e 	uxtb.w	r0, lr
 8027bba:	9010      	str	r0, [sp, #64]	; 0x40
 8027bbc:	b1c9      	cbz	r1, 8027bf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8027bbe:	4453      	add	r3, sl
 8027bc0:	0858      	lsrs	r0, r3, #1
 8027bc2:	07dd      	lsls	r5, r3, #31
 8027bc4:	5c38      	ldrb	r0, [r7, r0]
 8027bc6:	bf54      	ite	pl
 8027bc8:	f000 000f 	andpl.w	r0, r0, #15
 8027bcc:	1100      	asrmi	r0, r0, #4
 8027bce:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8027bd2:	3301      	adds	r3, #1
 8027bd4:	b2c0      	uxtb	r0, r0
 8027bd6:	900b      	str	r0, [sp, #44]	; 0x2c
 8027bd8:	0858      	lsrs	r0, r3, #1
 8027bda:	07dd      	lsls	r5, r3, #31
 8027bdc:	f817 e000 	ldrb.w	lr, [r7, r0]
 8027be0:	bf54      	ite	pl
 8027be2:	f00e 030f 	andpl.w	r3, lr, #15
 8027be6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8027bea:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027bee:	b2db      	uxtb	r3, r3
 8027bf0:	9311      	str	r3, [sp, #68]	; 0x44
 8027bf2:	b292      	uxth	r2, r2
 8027bf4:	b289      	uxth	r1, r1
 8027bf6:	fb02 f301 	mul.w	r3, r2, r1
 8027bfa:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8027bfe:	0112      	lsls	r2, r2, #4
 8027c00:	b289      	uxth	r1, r1
 8027c02:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8027c06:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027c08:	1ad2      	subs	r2, r2, r3
 8027c0a:	1a40      	subs	r0, r0, r1
 8027c0c:	b292      	uxth	r2, r2
 8027c0e:	436a      	muls	r2, r5
 8027c10:	b280      	uxth	r0, r0
 8027c12:	fb0c 2c00 	mla	ip, ip, r0, r2
 8027c16:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8027c18:	fb01 c102 	mla	r1, r1, r2, ip
 8027c1c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8027c1e:	fb03 1302 	mla	r3, r3, r2, r1
 8027c22:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027c26:	b1db      	cbz	r3, 8027c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027c28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8027c2a:	4353      	muls	r3, r2
 8027c2c:	1c5a      	adds	r2, r3, #1
 8027c2e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8027c32:	4ac6      	ldr	r2, [pc, #792]	; (8027f4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 8027c34:	121b      	asrs	r3, r3, #8
 8027c36:	6812      	ldr	r2, [r2, #0]
 8027c38:	2bff      	cmp	r3, #255	; 0xff
 8027c3a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8027c3e:	f040 8099 	bne.w	8027d74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 8027c42:	0953      	lsrs	r3, r2, #5
 8027c44:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8027c48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027c4c:	f02c 0c07 	bic.w	ip, ip, #7
 8027c50:	ea43 0c0c 	orr.w	ip, r3, ip
 8027c54:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027c58:	ea4c 0202 	orr.w	r2, ip, r2
 8027c5c:	f8a8 2000 	strh.w	r2, [r8]
 8027c60:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8027c62:	441c      	add	r4, r3
 8027c64:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027c66:	441e      	add	r6, r3
 8027c68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8027c6a:	3b01      	subs	r3, #1
 8027c6c:	f108 0802 	add.w	r8, r8, #2
 8027c70:	930e      	str	r3, [sp, #56]	; 0x38
 8027c72:	e763      	b.n	8027b3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 8027c74:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8027c76:	441c      	add	r4, r3
 8027c78:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027c7a:	441e      	add	r6, r3
 8027c7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027c7e:	3b01      	subs	r3, #1
 8027c80:	9309      	str	r3, [sp, #36]	; 0x24
 8027c82:	f109 0902 	add.w	r9, r9, #2
 8027c86:	e737      	b.n	8027af8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8027c88:	d024      	beq.n	8027cd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8027c8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027c8c:	982b      	ldr	r0, [sp, #172]	; 0xac
 8027c8e:	3b01      	subs	r3, #1
 8027c90:	fb00 4003 	mla	r0, r0, r3, r4
 8027c94:	1400      	asrs	r0, r0, #16
 8027c96:	f53f af4c 	bmi.w	8027b32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8027c9a:	3901      	subs	r1, #1
 8027c9c:	4288      	cmp	r0, r1
 8027c9e:	f6bf af48 	bge.w	8027b32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8027ca2:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8027ca4:	fb01 6303 	mla	r3, r1, r3, r6
 8027ca8:	141b      	asrs	r3, r3, #16
 8027caa:	f53f af42 	bmi.w	8027b32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8027cae:	3a01      	subs	r2, #1
 8027cb0:	4293      	cmp	r3, r2
 8027cb2:	f6bf af3e 	bge.w	8027b32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8027cb6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8027cba:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8027cbe:	930e      	str	r3, [sp, #56]	; 0x38
 8027cc0:	46c8      	mov	r8, r9
 8027cc2:	f1bb 0f00 	cmp.w	fp, #0
 8027cc6:	f300 80b7 	bgt.w	8027e38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8027cca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027ccc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027cd0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8027cd4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027cd6:	2b00      	cmp	r3, #0
 8027cd8:	f340 818d 	ble.w	8027ff6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8027cdc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8027ce0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027ce4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8027ce8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027cea:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8027cee:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8027cf2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8027cf6:	eef0 6a48 	vmov.f32	s13, s16
 8027cfa:	ee69 7a27 	vmul.f32	s15, s18, s15
 8027cfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027d02:	ee37 8a48 	vsub.f32	s16, s14, s16
 8027d06:	ee16 4a90 	vmov	r4, s13
 8027d0a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8027d0e:	eef0 6a68 	vmov.f32	s13, s17
 8027d12:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8027d16:	ee18 2a10 	vmov	r2, s16
 8027d1a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8027d1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8027d22:	ee18 2a90 	vmov	r2, s17
 8027d26:	932b      	str	r3, [sp, #172]	; 0xac
 8027d28:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027d2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8027d2e:	932c      	str	r3, [sp, #176]	; 0xb0
 8027d30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027d32:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8027d34:	3b01      	subs	r3, #1
 8027d36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027d3a:	930d      	str	r3, [sp, #52]	; 0x34
 8027d3c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027d3e:	bf08      	it	eq
 8027d40:	4613      	moveq	r3, r2
 8027d42:	ee16 6a90 	vmov	r6, s13
 8027d46:	9309      	str	r3, [sp, #36]	; 0x24
 8027d48:	eef0 8a67 	vmov.f32	s17, s15
 8027d4c:	eeb0 8a47 	vmov.f32	s16, s14
 8027d50:	e6c3      	b.n	8027ada <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8027d52:	2900      	cmp	r1, #0
 8027d54:	f43f af4d 	beq.w	8027bf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8027d58:	eb0a 0003 	add.w	r0, sl, r3
 8027d5c:	0843      	lsrs	r3, r0, #1
 8027d5e:	07c0      	lsls	r0, r0, #31
 8027d60:	5cfb      	ldrb	r3, [r7, r3]
 8027d62:	bf54      	ite	pl
 8027d64:	f003 030f 	andpl.w	r3, r3, #15
 8027d68:	111b      	asrmi	r3, r3, #4
 8027d6a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027d6e:	b2db      	uxtb	r3, r3
 8027d70:	930b      	str	r3, [sp, #44]	; 0x2c
 8027d72:	e73e      	b.n	8027bf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8027d74:	f8b8 e000 	ldrh.w	lr, [r8]
 8027d78:	fa1f fb83 	uxth.w	fp, r3
 8027d7c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8027d80:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8027d84:	43db      	mvns	r3, r3
 8027d86:	b2db      	uxtb	r3, r3
 8027d88:	fb11 f10b 	smulbb	r1, r1, fp
 8027d8c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8027d90:	fb00 1003 	mla	r0, r0, r3, r1
 8027d94:	fa5f fc8c 	uxtb.w	ip, ip
 8027d98:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8027d9c:	b2d2      	uxtb	r2, r2
 8027d9e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027da2:	b280      	uxth	r0, r0
 8027da4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8027da8:	fb1c fc0b 	smulbb	ip, ip, fp
 8027dac:	fa5f fe8e 	uxtb.w	lr, lr
 8027db0:	fb12 fb0b 	smulbb	fp, r2, fp
 8027db4:	fb01 cc03 	mla	ip, r1, r3, ip
 8027db8:	fb0e bb03 	mla	fp, lr, r3, fp
 8027dbc:	1c43      	adds	r3, r0, #1
 8027dbe:	fa1f fc8c 	uxth.w	ip, ip
 8027dc2:	fa1f fb8b 	uxth.w	fp, fp
 8027dc6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8027dca:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8027dce:	f10c 0101 	add.w	r1, ip, #1
 8027dd2:	f10b 0001 	add.w	r0, fp, #1
 8027dd6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8027dda:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8027dde:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027de2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8027de6:	4318      	orrs	r0, r3
 8027de8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8027dec:	ea40 000c 	orr.w	r0, r0, ip
 8027df0:	f8a8 0000 	strh.w	r0, [r8]
 8027df4:	e734      	b.n	8027c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027df6:	f113 0b01 	adds.w	fp, r3, #1
 8027dfa:	f53f af31 	bmi.w	8027c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027dfe:	45dc      	cmp	ip, fp
 8027e00:	f6ff af2e 	blt.w	8027c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027e04:	f110 0b01 	adds.w	fp, r0, #1
 8027e08:	f53f af2a 	bmi.w	8027c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027e0c:	45de      	cmp	lr, fp
 8027e0e:	f6ff af27 	blt.w	8027c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027e12:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027e14:	9302      	str	r3, [sp, #8]
 8027e16:	fa0f f38e 	sxth.w	r3, lr
 8027e1a:	9301      	str	r3, [sp, #4]
 8027e1c:	fa0f f38c 	sxth.w	r3, ip
 8027e20:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8027e24:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8027e28:	9300      	str	r3, [sp, #0]
 8027e2a:	463a      	mov	r2, r7
 8027e2c:	4653      	mov	r3, sl
 8027e2e:	4641      	mov	r1, r8
 8027e30:	9815      	ldr	r0, [sp, #84]	; 0x54
 8027e32:	f7ff fd2b 	bl	802788c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8027e36:	e713      	b.n	8027c60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027e38:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8027e3a:	1422      	asrs	r2, r4, #16
 8027e3c:	1433      	asrs	r3, r6, #16
 8027e3e:	fb05 2303 	mla	r3, r5, r3, r2
 8027e42:	085a      	lsrs	r2, r3, #1
 8027e44:	07dd      	lsls	r5, r3, #31
 8027e46:	5cba      	ldrb	r2, [r7, r2]
 8027e48:	bf54      	ite	pl
 8027e4a:	f002 020f 	andpl.w	r2, r2, #15
 8027e4e:	1112      	asrmi	r2, r2, #4
 8027e50:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8027e54:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027e58:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027e5c:	b2d2      	uxtb	r2, r2
 8027e5e:	2900      	cmp	r1, #0
 8027e60:	d076      	beq.n	8027f50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8027e62:	f103 0e01 	add.w	lr, r3, #1
 8027e66:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8027e6a:	f01e 0f01 	tst.w	lr, #1
 8027e6e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027e72:	bf0c      	ite	eq
 8027e74:	f00c 0c0f 	andeq.w	ip, ip, #15
 8027e78:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8027e7c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027e80:	fa5f f58c 	uxtb.w	r5, ip
 8027e84:	9512      	str	r5, [sp, #72]	; 0x48
 8027e86:	b300      	cbz	r0, 8027eca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8027e88:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027e8a:	442b      	add	r3, r5
 8027e8c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027e90:	07dd      	lsls	r5, r3, #31
 8027e92:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027e96:	bf54      	ite	pl
 8027e98:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027e9c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027ea0:	3301      	adds	r3, #1
 8027ea2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027ea6:	fa5f f58c 	uxtb.w	r5, ip
 8027eaa:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027eae:	950c      	str	r5, [sp, #48]	; 0x30
 8027eb0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027eb4:	07dd      	lsls	r5, r3, #31
 8027eb6:	bf54      	ite	pl
 8027eb8:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027ebc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027ec0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027ec4:	fa5f f38c 	uxtb.w	r3, ip
 8027ec8:	9313      	str	r3, [sp, #76]	; 0x4c
 8027eca:	b289      	uxth	r1, r1
 8027ecc:	b280      	uxth	r0, r0
 8027ece:	fb01 f300 	mul.w	r3, r1, r0
 8027ed2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8027ed6:	0109      	lsls	r1, r1, #4
 8027ed8:	b280      	uxth	r0, r0
 8027eda:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8027ede:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027ee0:	1ac9      	subs	r1, r1, r3
 8027ee2:	ebac 0c00 	sub.w	ip, ip, r0
 8027ee6:	b289      	uxth	r1, r1
 8027ee8:	4369      	muls	r1, r5
 8027eea:	fa1f fc8c 	uxth.w	ip, ip
 8027eee:	fb02 120c 	mla	r2, r2, ip, r1
 8027ef2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8027ef4:	fb00 2001 	mla	r0, r0, r1, r2
 8027ef8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8027efa:	fb03 0302 	mla	r3, r3, r2, r0
 8027efe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027f02:	b1d3      	cbz	r3, 8027f3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8027f04:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8027f06:	4353      	muls	r3, r2
 8027f08:	1c5a      	adds	r2, r3, #1
 8027f0a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8027f0e:	4a0f      	ldr	r2, [pc, #60]	; (8027f4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 8027f10:	121b      	asrs	r3, r3, #8
 8027f12:	6812      	ldr	r2, [r2, #0]
 8027f14:	2bff      	cmp	r3, #255	; 0xff
 8027f16:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8027f1a:	d12d      	bne.n	8027f78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8027f1c:	0953      	lsrs	r3, r2, #5
 8027f1e:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8027f22:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027f26:	f02c 0c07 	bic.w	ip, ip, #7
 8027f2a:	ea43 0c0c 	orr.w	ip, r3, ip
 8027f2e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027f32:	ea4c 0202 	orr.w	r2, ip, r2
 8027f36:	f8a8 2000 	strh.w	r2, [r8]
 8027f3a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8027f3c:	441c      	add	r4, r3
 8027f3e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027f40:	f108 0802 	add.w	r8, r8, #2
 8027f44:	441e      	add	r6, r3
 8027f46:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027f4a:	e6ba      	b.n	8027cc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8027f4c:	2001e1e8 	.word	0x2001e1e8
 8027f50:	2800      	cmp	r0, #0
 8027f52:	d0ba      	beq.n	8027eca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8027f54:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027f56:	442b      	add	r3, r5
 8027f58:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027f5c:	07db      	lsls	r3, r3, #31
 8027f5e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027f62:	bf54      	ite	pl
 8027f64:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027f68:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027f6c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027f70:	fa5f f38c 	uxtb.w	r3, ip
 8027f74:	930c      	str	r3, [sp, #48]	; 0x30
 8027f76:	e7a8      	b.n	8027eca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8027f78:	f8b8 e000 	ldrh.w	lr, [r8]
 8027f7c:	fa1f fa83 	uxth.w	sl, r3
 8027f80:	ea4f 202e 	mov.w	r0, lr, asr #8
 8027f84:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8027f88:	43db      	mvns	r3, r3
 8027f8a:	b2db      	uxtb	r3, r3
 8027f8c:	fb11 f10a 	smulbb	r1, r1, sl
 8027f90:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8027f94:	fb00 1003 	mla	r0, r0, r3, r1
 8027f98:	b2d2      	uxtb	r2, r2
 8027f9a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8027f9e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027fa2:	fa5f fe8e 	uxtb.w	lr, lr
 8027fa6:	fb12 f20a 	smulbb	r2, r2, sl
 8027faa:	fb0e 2203 	mla	r2, lr, r3, r2
 8027fae:	fa5f fc8c 	uxtb.w	ip, ip
 8027fb2:	b280      	uxth	r0, r0
 8027fb4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8027fb8:	b292      	uxth	r2, r2
 8027fba:	fb1c fc0a 	smulbb	ip, ip, sl
 8027fbe:	fb01 cc03 	mla	ip, r1, r3, ip
 8027fc2:	1c43      	adds	r3, r0, #1
 8027fc4:	1c51      	adds	r1, r2, #1
 8027fc6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8027fca:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8027fce:	fa1f fc8c 	uxth.w	ip, ip
 8027fd2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8027fd6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8027fda:	4308      	orrs	r0, r1
 8027fdc:	f10c 0101 	add.w	r1, ip, #1
 8027fe0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8027fe4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8027fe8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8027fec:	ea40 000c 	orr.w	r0, r0, ip
 8027ff0:	f8a8 0000 	strh.w	r0, [r8]
 8027ff4:	e7a1      	b.n	8027f3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8027ff6:	b017      	add	sp, #92	; 0x5c
 8027ff8:	ecbd 8b08 	vpop	{d8-d11}
 8027ffc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028000 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8028000:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028004:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8028008:	2c00      	cmp	r4, #0
 802800a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802800e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028012:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8028016:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 802801a:	fb04 ce03 	mla	lr, r4, r3, ip
 802801e:	db60      	blt.n	80280e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8028020:	45a1      	cmp	r9, r4
 8028022:	dd5e      	ble.n	80280e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8028024:	f1bc 0f00 	cmp.w	ip, #0
 8028028:	db59      	blt.n	80280de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 802802a:	45e0      	cmp	r8, ip
 802802c:	dd57      	ble.n	80280de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 802802e:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8028032:	f01e 0f01 	tst.w	lr, #1
 8028036:	5c16      	ldrb	r6, [r2, r0]
 8028038:	bf0c      	ite	eq
 802803a:	f006 060f 	andeq.w	r6, r6, #15
 802803e:	1136      	asrne	r6, r6, #4
 8028040:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8028044:	b2f6      	uxtb	r6, r6
 8028046:	f11c 0001 	adds.w	r0, ip, #1
 802804a:	d44d      	bmi.n	80280e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 802804c:	4580      	cmp	r8, r0
 802804e:	dd4b      	ble.n	80280e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8028050:	2d00      	cmp	r5, #0
 8028052:	d04b      	beq.n	80280ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8028054:	f10e 0a01 	add.w	sl, lr, #1
 8028058:	ea4f 005a 	mov.w	r0, sl, lsr #1
 802805c:	f01a 0f01 	tst.w	sl, #1
 8028060:	5c10      	ldrb	r0, [r2, r0]
 8028062:	bf0c      	ite	eq
 8028064:	f000 000f 	andeq.w	r0, r0, #15
 8028068:	1100      	asrne	r0, r0, #4
 802806a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802806e:	b2c0      	uxtb	r0, r0
 8028070:	3401      	adds	r4, #1
 8028072:	d43f      	bmi.n	80280f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8028074:	45a1      	cmp	r9, r4
 8028076:	dd3d      	ble.n	80280f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8028078:	2f00      	cmp	r7, #0
 802807a:	f000 8093 	beq.w	80281a4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802807e:	f1bc 0f00 	cmp.w	ip, #0
 8028082:	db35      	blt.n	80280f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8028084:	45e0      	cmp	r8, ip
 8028086:	dd33      	ble.n	80280f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8028088:	eb03 090e 	add.w	r9, r3, lr
 802808c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8028090:	f019 0f01 	tst.w	r9, #1
 8028094:	5d14      	ldrb	r4, [r2, r4]
 8028096:	bf0c      	ite	eq
 8028098:	f004 040f 	andeq.w	r4, r4, #15
 802809c:	1124      	asrne	r4, r4, #4
 802809e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80280a2:	b2e4      	uxtb	r4, r4
 80280a4:	f11c 0c01 	adds.w	ip, ip, #1
 80280a8:	d427      	bmi.n	80280fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 80280aa:	45e0      	cmp	r8, ip
 80280ac:	dd25      	ble.n	80280fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 80280ae:	b335      	cbz	r5, 80280fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 80280b0:	3301      	adds	r3, #1
 80280b2:	449e      	add	lr, r3
 80280b4:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80280b8:	f01e 0f01 	tst.w	lr, #1
 80280bc:	5cd2      	ldrb	r2, [r2, r3]
 80280be:	bf0c      	ite	eq
 80280c0:	f002 020f 	andeq.w	r2, r2, #15
 80280c4:	1112      	asrne	r2, r2, #4
 80280c6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80280ca:	b2d3      	uxtb	r3, r2
 80280cc:	2d0f      	cmp	r5, #15
 80280ce:	d917      	bls.n	8028100 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 80280d0:	4b37      	ldr	r3, [pc, #220]	; (80281b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 80280d2:	4a38      	ldr	r2, [pc, #224]	; (80281b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 80280d4:	4838      	ldr	r0, [pc, #224]	; (80281b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 80280d6:	f240 11f9 	movw	r1, #505	; 0x1f9
 80280da:	f003 ff8b 	bl	802bff4 <__assert_func>
 80280de:	2600      	movs	r6, #0
 80280e0:	e7b1      	b.n	8028046 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 80280e2:	2000      	movs	r0, #0
 80280e4:	4606      	mov	r6, r0
 80280e6:	e7c3      	b.n	8028070 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80280e8:	2000      	movs	r0, #0
 80280ea:	e7c1      	b.n	8028070 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80280ec:	4628      	mov	r0, r5
 80280ee:	e7bf      	b.n	8028070 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80280f0:	2400      	movs	r4, #0
 80280f2:	e7d7      	b.n	80280a4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 80280f4:	2300      	movs	r3, #0
 80280f6:	461c      	mov	r4, r3
 80280f8:	e7e8      	b.n	80280cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80280fa:	2300      	movs	r3, #0
 80280fc:	e7e6      	b.n	80280cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80280fe:	462b      	mov	r3, r5
 8028100:	2f0f      	cmp	r7, #15
 8028102:	d8e5      	bhi.n	80280d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8028104:	b2ad      	uxth	r5, r5
 8028106:	b2bf      	uxth	r7, r7
 8028108:	fb05 fc07 	mul.w	ip, r5, r7
 802810c:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8028110:	012d      	lsls	r5, r5, #4
 8028112:	b2bf      	uxth	r7, r7
 8028114:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8028118:	eba5 050c 	sub.w	r5, r5, ip
 802811c:	1bd2      	subs	r2, r2, r7
 802811e:	b2ad      	uxth	r5, r5
 8028120:	b292      	uxth	r2, r2
 8028122:	4368      	muls	r0, r5
 8028124:	fb06 0002 	mla	r0, r6, r2, r0
 8028128:	fb07 0404 	mla	r4, r7, r4, r0
 802812c:	fb0c 4303 	mla	r3, ip, r3, r4
 8028130:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028134:	b3a3      	cbz	r3, 80281a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028136:	4a21      	ldr	r2, [pc, #132]	; (80281bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8028138:	880e      	ldrh	r6, [r1, #0]
 802813a:	6815      	ldr	r5, [r2, #0]
 802813c:	1234      	asrs	r4, r6, #8
 802813e:	b29a      	uxth	r2, r3
 8028140:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8028144:	43db      	mvns	r3, r3
 8028146:	b2db      	uxtb	r3, r3
 8028148:	fb10 f002 	smulbb	r0, r0, r2
 802814c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028150:	fb04 0403 	mla	r4, r4, r3, r0
 8028154:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8028158:	10f0      	asrs	r0, r6, #3
 802815a:	b2ed      	uxtb	r5, r5
 802815c:	00f6      	lsls	r6, r6, #3
 802815e:	fb17 f702 	smulbb	r7, r7, r2
 8028162:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028166:	fb15 f202 	smulbb	r2, r5, r2
 802816a:	b2f6      	uxtb	r6, r6
 802816c:	b2a4      	uxth	r4, r4
 802816e:	fb00 7003 	mla	r0, r0, r3, r7
 8028172:	fb06 2303 	mla	r3, r6, r3, r2
 8028176:	b29a      	uxth	r2, r3
 8028178:	1c63      	adds	r3, r4, #1
 802817a:	b280      	uxth	r0, r0
 802817c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028180:	1c53      	adds	r3, r2, #1
 8028182:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028186:	1c42      	adds	r2, r0, #1
 8028188:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802818c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028190:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028194:	0940      	lsrs	r0, r0, #5
 8028196:	4323      	orrs	r3, r4
 8028198:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802819c:	4303      	orrs	r3, r0
 802819e:	800b      	strh	r3, [r1, #0]
 80281a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80281a4:	2d0f      	cmp	r5, #15
 80281a6:	d893      	bhi.n	80280d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 80281a8:	463b      	mov	r3, r7
 80281aa:	463c      	mov	r4, r7
 80281ac:	e7aa      	b.n	8028104 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 80281ae:	bf00      	nop
 80281b0:	08035c27 	.word	0x08035c27
 80281b4:	08036156 	.word	0x08036156
 80281b8:	08035bf4 	.word	0x08035bf4
 80281bc:	2001e1e8 	.word	0x2001e1e8

080281c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80281c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80281c4:	ed2d 8b08 	vpush	{d8-d11}
 80281c8:	b093      	sub	sp, #76	; 0x4c
 80281ca:	461d      	mov	r5, r3
 80281cc:	920c      	str	r2, [sp, #48]	; 0x30
 80281ce:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80281d0:	9107      	str	r1, [sp, #28]
 80281d2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80281d6:	9011      	str	r0, [sp, #68]	; 0x44
 80281d8:	6850      	ldr	r0, [r2, #4]
 80281da:	6812      	ldr	r2, [r2, #0]
 80281dc:	fb00 1303 	mla	r3, r0, r3, r1
 80281e0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80281e4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80281e6:	689b      	ldr	r3, [r3, #8]
 80281e8:	3301      	adds	r3, #1
 80281ea:	f023 0301 	bic.w	r3, r3, #1
 80281ee:	9306      	str	r3, [sp, #24]
 80281f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80281f2:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80281f6:	681f      	ldr	r7, [r3, #0]
 80281f8:	eeb0 aa40 	vmov.f32	s20, s0
 80281fc:	eef0 9a60 	vmov.f32	s19, s1
 8028200:	eeb0 9a41 	vmov.f32	s18, s2
 8028204:	eeb0 8a62 	vmov.f32	s16, s5
 8028208:	eef0 8a43 	vmov.f32	s17, s6
 802820c:	eef0 ba44 	vmov.f32	s23, s8
 8028210:	eeb0 ba64 	vmov.f32	s22, s9
 8028214:	eef0 aa45 	vmov.f32	s21, s10
 8028218:	9b07      	ldr	r3, [sp, #28]
 802821a:	2b00      	cmp	r3, #0
 802821c:	dc03      	bgt.n	8028226 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802821e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8028220:	2b00      	cmp	r3, #0
 8028222:	f340 8267 	ble.w	80286f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 8028226:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028228:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802822c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028230:	1e48      	subs	r0, r1, #1
 8028232:	f102 3cff 	add.w	ip, r2, #4294967295
 8028236:	2d00      	cmp	r5, #0
 8028238:	f340 80b8 	ble.w	80283ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 802823c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028240:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028244:	d406      	bmi.n	8028254 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8028246:	4586      	cmp	lr, r0
 8028248:	da04      	bge.n	8028254 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802824a:	2b00      	cmp	r3, #0
 802824c:	db02      	blt.n	8028254 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802824e:	4563      	cmp	r3, ip
 8028250:	f2c0 80ad 	blt.w	80283ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8028254:	f11e 0e01 	adds.w	lr, lr, #1
 8028258:	f100 80a0 	bmi.w	802839c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 802825c:	4571      	cmp	r1, lr
 802825e:	f2c0 809d 	blt.w	802839c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8028262:	3301      	adds	r3, #1
 8028264:	f100 809a 	bmi.w	802839c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8028268:	429a      	cmp	r2, r3
 802826a:	f2c0 8097 	blt.w	802839c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 802826e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8028272:	9509      	str	r5, [sp, #36]	; 0x24
 8028274:	46c8      	mov	r8, r9
 8028276:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028278:	2b00      	cmp	r3, #0
 802827a:	f340 80b6 	ble.w	80283ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802827e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8028282:	9308      	str	r3, [sp, #32]
 8028284:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028286:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802828a:	1423      	asrs	r3, r4, #16
 802828c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028290:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028294:	f100 813e 	bmi.w	8028514 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8028298:	f10c 3bff 	add.w	fp, ip, #4294967295
 802829c:	455b      	cmp	r3, fp
 802829e:	f280 8139 	bge.w	8028514 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 80282a2:	2800      	cmp	r0, #0
 80282a4:	f2c0 8136 	blt.w	8028514 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 80282a8:	f10e 3bff 	add.w	fp, lr, #4294967295
 80282ac:	4558      	cmp	r0, fp
 80282ae:	f280 8131 	bge.w	8028514 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 80282b2:	9a06      	ldr	r2, [sp, #24]
 80282b4:	fb00 3302 	mla	r3, r0, r2, r3
 80282b8:	0858      	lsrs	r0, r3, #1
 80282ba:	07da      	lsls	r2, r3, #31
 80282bc:	f817 c000 	ldrb.w	ip, [r7, r0]
 80282c0:	9a08      	ldr	r2, [sp, #32]
 80282c2:	bf54      	ite	pl
 80282c4:	f00c 0c0f 	andpl.w	ip, ip, #15
 80282c8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80282cc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80282d0:	fa5f fc8c 	uxtb.w	ip, ip
 80282d4:	2a00      	cmp	r2, #0
 80282d6:	f000 80cb 	beq.w	8028470 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80282da:	1c58      	adds	r0, r3, #1
 80282dc:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80282e0:	07c0      	lsls	r0, r0, #31
 80282e2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80282e6:	bf54      	ite	pl
 80282e8:	f00e 0e0f 	andpl.w	lr, lr, #15
 80282ec:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80282f0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80282f4:	fa5f fe8e 	uxtb.w	lr, lr
 80282f8:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80282fc:	b1b9      	cbz	r1, 802832e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80282fe:	4453      	add	r3, sl
 8028300:	0858      	lsrs	r0, r3, #1
 8028302:	07da      	lsls	r2, r3, #31
 8028304:	5c38      	ldrb	r0, [r7, r0]
 8028306:	bf54      	ite	pl
 8028308:	f000 000f 	andpl.w	r0, r0, #15
 802830c:	1100      	asrmi	r0, r0, #4
 802830e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028312:	b2c0      	uxtb	r0, r0
 8028314:	900a      	str	r0, [sp, #40]	; 0x28
 8028316:	1c58      	adds	r0, r3, #1
 8028318:	0843      	lsrs	r3, r0, #1
 802831a:	07c2      	lsls	r2, r0, #31
 802831c:	5cfb      	ldrb	r3, [r7, r3]
 802831e:	bf54      	ite	pl
 8028320:	f003 030f 	andpl.w	r3, r3, #15
 8028324:	111b      	asrmi	r3, r3, #4
 8028326:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802832a:	b2db      	uxtb	r3, r3
 802832c:	930e      	str	r3, [sp, #56]	; 0x38
 802832e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8028332:	b289      	uxth	r1, r1
 8028334:	fb02 f301 	mul.w	r3, r2, r1
 8028338:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802833c:	0112      	lsls	r2, r2, #4
 802833e:	b289      	uxth	r1, r1
 8028340:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028344:	1a40      	subs	r0, r0, r1
 8028346:	fa1f fe80 	uxth.w	lr, r0
 802834a:	1ad2      	subs	r2, r2, r3
 802834c:	980d      	ldr	r0, [sp, #52]	; 0x34
 802834e:	b292      	uxth	r2, r2
 8028350:	4342      	muls	r2, r0
 8028352:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8028356:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028358:	fb01 c102 	mla	r1, r1, r2, ip
 802835c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802835e:	fb03 1302 	mla	r3, r3, r2, r1
 8028362:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028366:	2bff      	cmp	r3, #255	; 0xff
 8028368:	f040 8093 	bne.w	8028492 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 802836c:	4bbe      	ldr	r3, [pc, #760]	; (8028668 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 802836e:	681a      	ldr	r2, [r3, #0]
 8028370:	4bbe      	ldr	r3, [pc, #760]	; (802866c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028372:	0951      	lsrs	r1, r2, #5
 8028374:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028378:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802837c:	430b      	orrs	r3, r1
 802837e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028382:	4313      	orrs	r3, r2
 8028384:	f8a8 3000 	strh.w	r3, [r8]
 8028388:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802838a:	441c      	add	r4, r3
 802838c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802838e:	441e      	add	r6, r3
 8028390:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028392:	3b01      	subs	r3, #1
 8028394:	f108 0802 	add.w	r8, r8, #2
 8028398:	9309      	str	r3, [sp, #36]	; 0x24
 802839a:	e76c      	b.n	8028276 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802839c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802839e:	441c      	add	r4, r3
 80283a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80283a2:	3d01      	subs	r5, #1
 80283a4:	441e      	add	r6, r3
 80283a6:	f109 0902 	add.w	r9, r9, #2
 80283aa:	e744      	b.n	8028236 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80283ac:	d021      	beq.n	80283f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80283ae:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80283b0:	1e6b      	subs	r3, r5, #1
 80283b2:	fb00 4003 	mla	r0, r0, r3, r4
 80283b6:	1400      	asrs	r0, r0, #16
 80283b8:	f53f af59 	bmi.w	802826e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80283bc:	3901      	subs	r1, #1
 80283be:	4288      	cmp	r0, r1
 80283c0:	f6bf af55 	bge.w	802826e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80283c4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80283c6:	fb01 6303 	mla	r3, r1, r3, r6
 80283ca:	141b      	asrs	r3, r3, #16
 80283cc:	f53f af4f 	bmi.w	802826e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80283d0:	3a01      	subs	r2, #1
 80283d2:	4293      	cmp	r3, r2
 80283d4:	f6bf af4b 	bge.w	802826e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80283d8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80283dc:	9308      	str	r3, [sp, #32]
 80283de:	46a8      	mov	r8, r5
 80283e0:	46ce      	mov	lr, r9
 80283e2:	f1b8 0f00 	cmp.w	r8, #0
 80283e6:	f300 80b5 	bgt.w	8028554 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80283ea:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80283ee:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80283f2:	9b07      	ldr	r3, [sp, #28]
 80283f4:	2b00      	cmp	r3, #0
 80283f6:	f340 817d 	ble.w	80286f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 80283fa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80283fe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028402:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8028406:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028408:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802840c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8028410:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8028414:	eef0 6a48 	vmov.f32	s13, s16
 8028418:	ee69 7a27 	vmul.f32	s15, s18, s15
 802841c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028420:	ee37 8a48 	vsub.f32	s16, s14, s16
 8028424:	ee16 4a90 	vmov	r4, s13
 8028428:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 802842c:	eef0 6a68 	vmov.f32	s13, s17
 8028430:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8028434:	ee18 2a10 	vmov	r2, s16
 8028438:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 802843c:	fb92 f3f3 	sdiv	r3, r2, r3
 8028440:	ee18 2a90 	vmov	r2, s17
 8028444:	9327      	str	r3, [sp, #156]	; 0x9c
 8028446:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028448:	fb92 f3f3 	sdiv	r3, r2, r3
 802844c:	9328      	str	r3, [sp, #160]	; 0xa0
 802844e:	9b07      	ldr	r3, [sp, #28]
 8028450:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8028452:	3b01      	subs	r3, #1
 8028454:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028458:	9307      	str	r3, [sp, #28]
 802845a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802845c:	ee16 6a90 	vmov	r6, s13
 8028460:	bf14      	ite	ne
 8028462:	461d      	movne	r5, r3
 8028464:	4615      	moveq	r5, r2
 8028466:	eef0 8a67 	vmov.f32	s17, s15
 802846a:	eeb0 8a47 	vmov.f32	s16, s14
 802846e:	e6d3      	b.n	8028218 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8028470:	2900      	cmp	r1, #0
 8028472:	f43f af5c 	beq.w	802832e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8028476:	eb0a 0003 	add.w	r0, sl, r3
 802847a:	0843      	lsrs	r3, r0, #1
 802847c:	07c0      	lsls	r0, r0, #31
 802847e:	5cfb      	ldrb	r3, [r7, r3]
 8028480:	bf54      	ite	pl
 8028482:	f003 030f 	andpl.w	r3, r3, #15
 8028486:	111b      	asrmi	r3, r3, #4
 8028488:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802848c:	b2db      	uxtb	r3, r3
 802848e:	930a      	str	r3, [sp, #40]	; 0x28
 8028490:	e74d      	b.n	802832e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8028492:	2b00      	cmp	r3, #0
 8028494:	f43f af78 	beq.w	8028388 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028498:	4a73      	ldr	r2, [pc, #460]	; (8028668 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 802849a:	f8b8 c000 	ldrh.w	ip, [r8]
 802849e:	6810      	ldr	r0, [r2, #0]
 80284a0:	fa1f fe83 	uxth.w	lr, r3
 80284a4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80284a8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80284ac:	43db      	mvns	r3, r3
 80284ae:	b2db      	uxtb	r3, r3
 80284b0:	fb12 f20e 	smulbb	r2, r2, lr
 80284b4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80284b8:	fb01 2103 	mla	r1, r1, r3, r2
 80284bc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80284c0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80284c4:	b2c0      	uxtb	r0, r0
 80284c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80284ca:	fb1b fb0e 	smulbb	fp, fp, lr
 80284ce:	b289      	uxth	r1, r1
 80284d0:	fb10 fe0e 	smulbb	lr, r0, lr
 80284d4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80284d8:	fa5f fc8c 	uxtb.w	ip, ip
 80284dc:	fb02 b203 	mla	r2, r2, r3, fp
 80284e0:	1c48      	adds	r0, r1, #1
 80284e2:	fb0c e303 	mla	r3, ip, r3, lr
 80284e6:	b292      	uxth	r2, r2
 80284e8:	b29b      	uxth	r3, r3
 80284ea:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80284ee:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80284f2:	f102 0b01 	add.w	fp, r2, #1
 80284f6:	1c59      	adds	r1, r3, #1
 80284f8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80284fc:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028500:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028504:	0952      	lsrs	r2, r2, #5
 8028506:	4301      	orrs	r1, r0
 8028508:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802850c:	4311      	orrs	r1, r2
 802850e:	f8a8 1000 	strh.w	r1, [r8]
 8028512:	e739      	b.n	8028388 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028514:	f113 0b01 	adds.w	fp, r3, #1
 8028518:	f53f af36 	bmi.w	8028388 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802851c:	45dc      	cmp	ip, fp
 802851e:	f6ff af33 	blt.w	8028388 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028522:	f110 0b01 	adds.w	fp, r0, #1
 8028526:	f53f af2f 	bmi.w	8028388 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802852a:	45de      	cmp	lr, fp
 802852c:	f6ff af2c 	blt.w	8028388 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028530:	9a08      	ldr	r2, [sp, #32]
 8028532:	9302      	str	r3, [sp, #8]
 8028534:	fa0f f38e 	sxth.w	r3, lr
 8028538:	9301      	str	r3, [sp, #4]
 802853a:	fa0f f38c 	sxth.w	r3, ip
 802853e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028542:	9105      	str	r1, [sp, #20]
 8028544:	9300      	str	r3, [sp, #0]
 8028546:	463a      	mov	r2, r7
 8028548:	4653      	mov	r3, sl
 802854a:	4641      	mov	r1, r8
 802854c:	9811      	ldr	r0, [sp, #68]	; 0x44
 802854e:	f7ff fd57 	bl	8028000 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8028552:	e719      	b.n	8028388 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028554:	9906      	ldr	r1, [sp, #24]
 8028556:	1422      	asrs	r2, r4, #16
 8028558:	1433      	asrs	r3, r6, #16
 802855a:	fb01 2303 	mla	r3, r1, r3, r2
 802855e:	085a      	lsrs	r2, r3, #1
 8028560:	07d9      	lsls	r1, r3, #31
 8028562:	5cba      	ldrb	r2, [r7, r2]
 8028564:	bf54      	ite	pl
 8028566:	f002 020f 	andpl.w	r2, r2, #15
 802856a:	1112      	asrmi	r2, r2, #4
 802856c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028570:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8028574:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8028578:	b2d2      	uxtb	r2, r2
 802857a:	2800      	cmp	r0, #0
 802857c:	d062      	beq.n	8028644 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802857e:	f103 0a01 	add.w	sl, r3, #1
 8028582:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8028586:	f01a 0f01 	tst.w	sl, #1
 802858a:	5c79      	ldrb	r1, [r7, r1]
 802858c:	bf0c      	ite	eq
 802858e:	f001 010f 	andeq.w	r1, r1, #15
 8028592:	1109      	asrne	r1, r1, #4
 8028594:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028598:	b2c9      	uxtb	r1, r1
 802859a:	910f      	str	r1, [sp, #60]	; 0x3c
 802859c:	f1bc 0f00 	cmp.w	ip, #0
 80285a0:	d019      	beq.n	80285d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 80285a2:	9908      	ldr	r1, [sp, #32]
 80285a4:	440b      	add	r3, r1
 80285a6:	0859      	lsrs	r1, r3, #1
 80285a8:	f013 0f01 	tst.w	r3, #1
 80285ac:	5c79      	ldrb	r1, [r7, r1]
 80285ae:	bf0c      	ite	eq
 80285b0:	f001 010f 	andeq.w	r1, r1, #15
 80285b4:	1109      	asrne	r1, r1, #4
 80285b6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80285ba:	b2c9      	uxtb	r1, r1
 80285bc:	3301      	adds	r3, #1
 80285be:	910b      	str	r1, [sp, #44]	; 0x2c
 80285c0:	0859      	lsrs	r1, r3, #1
 80285c2:	07db      	lsls	r3, r3, #31
 80285c4:	5c79      	ldrb	r1, [r7, r1]
 80285c6:	bf54      	ite	pl
 80285c8:	f001 010f 	andpl.w	r1, r1, #15
 80285cc:	1109      	asrmi	r1, r1, #4
 80285ce:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80285d2:	b2c9      	uxtb	r1, r1
 80285d4:	9110      	str	r1, [sp, #64]	; 0x40
 80285d6:	b280      	uxth	r0, r0
 80285d8:	fa1f fc8c 	uxth.w	ip, ip
 80285dc:	fb00 f30c 	mul.w	r3, r0, ip
 80285e0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80285e4:	0100      	lsls	r0, r0, #4
 80285e6:	fa1f fc8c 	uxth.w	ip, ip
 80285ea:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80285ee:	eba1 010c 	sub.w	r1, r1, ip
 80285f2:	fa1f fa81 	uxth.w	sl, r1
 80285f6:	1ac0      	subs	r0, r0, r3
 80285f8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80285fa:	b280      	uxth	r0, r0
 80285fc:	4348      	muls	r0, r1
 80285fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8028600:	fb02 020a 	mla	r2, r2, sl, r0
 8028604:	fb0c 2c01 	mla	ip, ip, r1, r2
 8028608:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802860a:	fb03 c302 	mla	r3, r3, r2, ip
 802860e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028612:	2bff      	cmp	r3, #255	; 0xff
 8028614:	d12c      	bne.n	8028670 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028616:	4b14      	ldr	r3, [pc, #80]	; (8028668 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8028618:	681a      	ldr	r2, [r3, #0]
 802861a:	4b14      	ldr	r3, [pc, #80]	; (802866c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802861c:	0951      	lsrs	r1, r2, #5
 802861e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028622:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8028626:	430b      	orrs	r3, r1
 8028628:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802862c:	4313      	orrs	r3, r2
 802862e:	f8ae 3000 	strh.w	r3, [lr]
 8028632:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8028634:	441c      	add	r4, r3
 8028636:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028638:	f10e 0e02 	add.w	lr, lr, #2
 802863c:	441e      	add	r6, r3
 802863e:	f108 38ff 	add.w	r8, r8, #4294967295
 8028642:	e6ce      	b.n	80283e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8028644:	f1bc 0f00 	cmp.w	ip, #0
 8028648:	d0c5      	beq.n	80285d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 802864a:	9908      	ldr	r1, [sp, #32]
 802864c:	440b      	add	r3, r1
 802864e:	0859      	lsrs	r1, r3, #1
 8028650:	07db      	lsls	r3, r3, #31
 8028652:	5c79      	ldrb	r1, [r7, r1]
 8028654:	bf54      	ite	pl
 8028656:	f001 010f 	andpl.w	r1, r1, #15
 802865a:	1109      	asrmi	r1, r1, #4
 802865c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028660:	b2c9      	uxtb	r1, r1
 8028662:	910b      	str	r1, [sp, #44]	; 0x2c
 8028664:	e7b7      	b.n	80285d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8028666:	bf00      	nop
 8028668:	2001e1e8 	.word	0x2001e1e8
 802866c:	fffff800 	.word	0xfffff800
 8028670:	2b00      	cmp	r3, #0
 8028672:	d0de      	beq.n	8028632 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8028674:	4a22      	ldr	r2, [pc, #136]	; (8028700 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 8028676:	f8be c000 	ldrh.w	ip, [lr]
 802867a:	6810      	ldr	r0, [r2, #0]
 802867c:	fa1f fa83 	uxth.w	sl, r3
 8028680:	ea4f 212c 	mov.w	r1, ip, asr #8
 8028684:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028688:	43db      	mvns	r3, r3
 802868a:	b2db      	uxtb	r3, r3
 802868c:	fb12 f20a 	smulbb	r2, r2, sl
 8028690:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8028694:	fb01 2103 	mla	r1, r1, r3, r2
 8028698:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802869c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80286a0:	b2c0      	uxtb	r0, r0
 80286a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80286a6:	fa5f fc8c 	uxtb.w	ip, ip
 80286aa:	fb10 f00a 	smulbb	r0, r0, sl
 80286ae:	fb0c 0003 	mla	r0, ip, r3, r0
 80286b2:	b289      	uxth	r1, r1
 80286b4:	fb1b fb0a 	smulbb	fp, fp, sl
 80286b8:	b280      	uxth	r0, r0
 80286ba:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80286be:	fb02 b203 	mla	r2, r2, r3, fp
 80286c2:	1c4b      	adds	r3, r1, #1
 80286c4:	f100 0b01 	add.w	fp, r0, #1
 80286c8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80286cc:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80286d0:	b292      	uxth	r2, r2
 80286d2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80286d6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80286da:	ea4b 0101 	orr.w	r1, fp, r1
 80286de:	f102 0b01 	add.w	fp, r2, #1
 80286e2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80286e6:	0952      	lsrs	r2, r2, #5
 80286e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80286ec:	4311      	orrs	r1, r2
 80286ee:	f8ae 1000 	strh.w	r1, [lr]
 80286f2:	e79e      	b.n	8028632 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80286f4:	b013      	add	sp, #76	; 0x4c
 80286f6:	ecbd 8b08 	vpop	{d8-d11}
 80286fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80286fe:	bf00      	nop
 8028700:	2001e1e8 	.word	0x2001e1e8

08028704 <CRC_Lock>:
 8028704:	b530      	push	{r4, r5, lr}
 8028706:	4a20      	ldr	r2, [pc, #128]	; (8028788 <CRC_Lock+0x84>)
 8028708:	6813      	ldr	r3, [r2, #0]
 802870a:	f023 0301 	bic.w	r3, r3, #1
 802870e:	6013      	str	r3, [r2, #0]
 8028710:	4b1e      	ldr	r3, [pc, #120]	; (802878c <CRC_Lock+0x88>)
 8028712:	681a      	ldr	r2, [r3, #0]
 8028714:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8028718:	4022      	ands	r2, r4
 802871a:	f24c 2540 	movw	r5, #49728	; 0xc240
 802871e:	42aa      	cmp	r2, r5
 8028720:	d005      	beq.n	802872e <CRC_Lock+0x2a>
 8028722:	681b      	ldr	r3, [r3, #0]
 8028724:	f24c 2270 	movw	r2, #49776	; 0xc270
 8028728:	4023      	ands	r3, r4
 802872a:	4293      	cmp	r3, r2
 802872c:	d124      	bne.n	8028778 <CRC_Lock+0x74>
 802872e:	4b18      	ldr	r3, [pc, #96]	; (8028790 <CRC_Lock+0x8c>)
 8028730:	681b      	ldr	r3, [r3, #0]
 8028732:	bb0b      	cbnz	r3, 8028778 <CRC_Lock+0x74>
 8028734:	4b17      	ldr	r3, [pc, #92]	; (8028794 <CRC_Lock+0x90>)
 8028736:	681a      	ldr	r2, [r3, #0]
 8028738:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802873c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8028740:	d00d      	beq.n	802875e <CRC_Lock+0x5a>
 8028742:	681a      	ldr	r2, [r3, #0]
 8028744:	f240 4483 	movw	r4, #1155	; 0x483
 8028748:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802874c:	42a2      	cmp	r2, r4
 802874e:	d006      	beq.n	802875e <CRC_Lock+0x5a>
 8028750:	681b      	ldr	r3, [r3, #0]
 8028752:	f240 4285 	movw	r2, #1157	; 0x485
 8028756:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802875a:	4293      	cmp	r3, r2
 802875c:	d10c      	bne.n	8028778 <CRC_Lock+0x74>
 802875e:	4b0e      	ldr	r3, [pc, #56]	; (8028798 <CRC_Lock+0x94>)
 8028760:	2201      	movs	r2, #1
 8028762:	601a      	str	r2, [r3, #0]
 8028764:	681a      	ldr	r2, [r3, #0]
 8028766:	2a00      	cmp	r2, #0
 8028768:	d1fc      	bne.n	8028764 <CRC_Lock+0x60>
 802876a:	4b0c      	ldr	r3, [pc, #48]	; (802879c <CRC_Lock+0x98>)
 802876c:	6018      	str	r0, [r3, #0]
 802876e:	6818      	ldr	r0, [r3, #0]
 8028770:	1a43      	subs	r3, r0, r1
 8028772:	4258      	negs	r0, r3
 8028774:	4158      	adcs	r0, r3
 8028776:	bd30      	pop	{r4, r5, pc}
 8028778:	4b09      	ldr	r3, [pc, #36]	; (80287a0 <CRC_Lock+0x9c>)
 802877a:	2201      	movs	r2, #1
 802877c:	601a      	str	r2, [r3, #0]
 802877e:	681a      	ldr	r2, [r3, #0]
 8028780:	2a00      	cmp	r2, #0
 8028782:	d1fc      	bne.n	802877e <CRC_Lock+0x7a>
 8028784:	4b07      	ldr	r3, [pc, #28]	; (80287a4 <CRC_Lock+0xa0>)
 8028786:	e7f1      	b.n	802876c <CRC_Lock+0x68>
 8028788:	e0002000 	.word	0xe0002000
 802878c:	e000ed00 	.word	0xe000ed00
 8028790:	e0042000 	.word	0xe0042000
 8028794:	5c001000 	.word	0x5c001000
 8028798:	58024c08 	.word	0x58024c08
 802879c:	58024c00 	.word	0x58024c00
 80287a0:	40023008 	.word	0x40023008
 80287a4:	40023000 	.word	0x40023000

080287a8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80287a8:	6101      	str	r1, [r0, #16]
 80287aa:	4770      	bx	lr

080287ac <_ZN8touchgfx8Gestures4tickEv>:
 80287ac:	7b83      	ldrb	r3, [r0, #14]
 80287ae:	b14b      	cbz	r3, 80287c4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80287b0:	8903      	ldrh	r3, [r0, #8]
 80287b2:	3301      	adds	r3, #1
 80287b4:	b29b      	uxth	r3, r3
 80287b6:	2b07      	cmp	r3, #7
 80287b8:	8103      	strh	r3, [r0, #8]
 80287ba:	bf81      	itttt	hi
 80287bc:	2300      	movhi	r3, #0
 80287be:	8143      	strhhi	r3, [r0, #10]
 80287c0:	8183      	strhhi	r3, [r0, #12]
 80287c2:	7383      	strbhi	r3, [r0, #14]
 80287c4:	4770      	bx	lr
	...

080287c8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80287c8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80287cc:	4698      	mov	r8, r3
 80287ce:	8883      	ldrh	r3, [r0, #4]
 80287d0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80287d4:	eba8 0303 	sub.w	r3, r8, r3
 80287d8:	b21b      	sxth	r3, r3
 80287da:	4604      	mov	r4, r0
 80287dc:	2b00      	cmp	r3, #0
 80287de:	4617      	mov	r7, r2
 80287e0:	4a18      	ldr	r2, [pc, #96]	; (8028844 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80287e2:	9200      	str	r2, [sp, #0]
 80287e4:	bfb8      	it	lt
 80287e6:	425b      	neglt	r3, r3
 80287e8:	8aa2      	ldrh	r2, [r4, #20]
 80287ea:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80287ee:	f8ad 800a 	strh.w	r8, [sp, #10]
 80287f2:	b21b      	sxth	r3, r3
 80287f4:	460e      	mov	r6, r1
 80287f6:	4293      	cmp	r3, r2
 80287f8:	88c1      	ldrh	r1, [r0, #6]
 80287fa:	f8ad 1008 	strh.w	r1, [sp, #8]
 80287fe:	f04f 0000 	mov.w	r0, #0
 8028802:	f88d 0004 	strb.w	r0, [sp, #4]
 8028806:	f8ad 500c 	strh.w	r5, [sp, #12]
 802880a:	dc07      	bgt.n	802881c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 802880c:	1a69      	subs	r1, r5, r1
 802880e:	b209      	sxth	r1, r1
 8028810:	2900      	cmp	r1, #0
 8028812:	bfb8      	it	lt
 8028814:	4249      	neglt	r1, r1
 8028816:	b209      	sxth	r1, r1
 8028818:	428a      	cmp	r2, r1
 802881a:	da10      	bge.n	802883e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 802881c:	6920      	ldr	r0, [r4, #16]
 802881e:	6803      	ldr	r3, [r0, #0]
 8028820:	4669      	mov	r1, sp
 8028822:	685b      	ldr	r3, [r3, #4]
 8028824:	4798      	blx	r3
 8028826:	eba8 0606 	sub.w	r6, r8, r6
 802882a:	2300      	movs	r3, #0
 802882c:	1bef      	subs	r7, r5, r7
 802882e:	2001      	movs	r0, #1
 8028830:	8123      	strh	r3, [r4, #8]
 8028832:	8166      	strh	r6, [r4, #10]
 8028834:	81a7      	strh	r7, [r4, #12]
 8028836:	f8a4 8004 	strh.w	r8, [r4, #4]
 802883a:	80e5      	strh	r5, [r4, #6]
 802883c:	73a0      	strb	r0, [r4, #14]
 802883e:	b004      	add	sp, #16
 8028840:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028844:	08035054 	.word	0x08035054

08028848 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8028848:	b5f0      	push	{r4, r5, r6, r7, lr}
 802884a:	461e      	mov	r6, r3
 802884c:	1e4b      	subs	r3, r1, #1
 802884e:	2b01      	cmp	r3, #1
 8028850:	b085      	sub	sp, #20
 8028852:	4604      	mov	r4, r0
 8028854:	460d      	mov	r5, r1
 8028856:	4617      	mov	r7, r2
 8028858:	d84b      	bhi.n	80288f2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802885a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802885e:	1cd3      	adds	r3, r2, #3
 8028860:	b29b      	uxth	r3, r3
 8028862:	2b06      	cmp	r3, #6
 8028864:	d916      	bls.n	8028894 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8028866:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8028908 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802886a:	f8cd c004 	str.w	ip, [sp, #4]
 802886e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8028872:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8028876:	6900      	ldr	r0, [r0, #16]
 8028878:	f8ad 100c 	strh.w	r1, [sp, #12]
 802887c:	f04f 0c00 	mov.w	ip, #0
 8028880:	f88d c008 	strb.w	ip, [sp, #8]
 8028884:	f8ad 200a 	strh.w	r2, [sp, #10]
 8028888:	f8ad 300e 	strh.w	r3, [sp, #14]
 802888c:	6803      	ldr	r3, [r0, #0]
 802888e:	a901      	add	r1, sp, #4
 8028890:	689b      	ldr	r3, [r3, #8]
 8028892:	4798      	blx	r3
 8028894:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028898:	1cd3      	adds	r3, r2, #3
 802889a:	b29b      	uxth	r3, r3
 802889c:	2b06      	cmp	r3, #6
 802889e:	d916      	bls.n	80288ce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80288a0:	f8df c064 	ldr.w	ip, [pc, #100]	; 8028908 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80288a4:	f8cd c004 	str.w	ip, [sp, #4]
 80288a8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80288ac:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80288b0:	6920      	ldr	r0, [r4, #16]
 80288b2:	f8ad 100c 	strh.w	r1, [sp, #12]
 80288b6:	f04f 0c01 	mov.w	ip, #1
 80288ba:	f88d c008 	strb.w	ip, [sp, #8]
 80288be:	f8ad 200a 	strh.w	r2, [sp, #10]
 80288c2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80288c6:	6803      	ldr	r3, [r0, #0]
 80288c8:	a901      	add	r1, sp, #4
 80288ca:	689b      	ldr	r3, [r3, #8]
 80288cc:	4798      	blx	r3
 80288ce:	4b0d      	ldr	r3, [pc, #52]	; (8028904 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80288d0:	9301      	str	r3, [sp, #4]
 80288d2:	6920      	ldr	r0, [r4, #16]
 80288d4:	f88d 5008 	strb.w	r5, [sp, #8]
 80288d8:	2300      	movs	r3, #0
 80288da:	f8ad 700a 	strh.w	r7, [sp, #10]
 80288de:	f8ad 600c 	strh.w	r6, [sp, #12]
 80288e2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80288e6:	6803      	ldr	r3, [r0, #0]
 80288e8:	a901      	add	r1, sp, #4
 80288ea:	681b      	ldr	r3, [r3, #0]
 80288ec:	4798      	blx	r3
 80288ee:	b005      	add	sp, #20
 80288f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80288f2:	2900      	cmp	r1, #0
 80288f4:	d1eb      	bne.n	80288ce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80288f6:	80a2      	strh	r2, [r4, #4]
 80288f8:	80c6      	strh	r6, [r0, #6]
 80288fa:	60a1      	str	r1, [r4, #8]
 80288fc:	81a1      	strh	r1, [r4, #12]
 80288fe:	73a1      	strb	r1, [r4, #14]
 8028900:	e7e5      	b.n	80288ce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8028902:	bf00      	nop
 8028904:	08035040 	.word	0x08035040
 8028908:	08035068 	.word	0x08035068

0802890c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>:
 802890c:	10c9      	asrs	r1, r1, #3
 802890e:	2900      	cmp	r1, #0
 8028910:	bfb8      	it	lt
 8028912:	4249      	neglt	r1, r1
 8028914:	2801      	cmp	r0, #1
 8028916:	d108      	bne.n	802892a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14+0x1e>
 8028918:	f3c1 0008 	ubfx	r0, r1, #0, #9
 802891c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8028920:	4601      	mov	r1, r0
 8028922:	dd02      	ble.n	802892a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14+0x1e>
 8028924:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8028928:	4770      	bx	lr
 802892a:	29ff      	cmp	r1, #255	; 0xff
 802892c:	bfa8      	it	ge
 802892e:	21ff      	movge	r1, #255	; 0xff
 8028930:	4608      	mov	r0, r1
 8028932:	4770      	bx	lr

08028934 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>:
 8028934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028938:	688c      	ldr	r4, [r1, #8]
 802893a:	2c00      	cmp	r4, #0
 802893c:	b087      	sub	sp, #28
 802893e:	4607      	mov	r7, r0
 8028940:	db2b      	blt.n	802899a <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 8028942:	6803      	ldr	r3, [r0, #0]
 8028944:	691a      	ldr	r2, [r3, #16]
 8028946:	42a2      	cmp	r2, r4
 8028948:	dd27      	ble.n	802899a <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 802894a:	685a      	ldr	r2, [r3, #4]
 802894c:	695e      	ldr	r6, [r3, #20]
 802894e:	68cd      	ldr	r5, [r1, #12]
 8028950:	f8d1 901c 	ldr.w	r9, [r1, #28]
 8028954:	f893 a008 	ldrb.w	sl, [r3, #8]
 8028958:	f8d1 8020 	ldr.w	r8, [r1, #32]
 802895c:	fb06 2604 	mla	r6, r6, r4, r2
 8028960:	698a      	ldr	r2, [r1, #24]
 8028962:	9205      	str	r2, [sp, #20]
 8028964:	f839 2f02 	ldrh.w	r2, [r9, #2]!
 8028968:	9b05      	ldr	r3, [sp, #20]
 802896a:	6839      	ldr	r1, [r7, #0]
 802896c:	eb03 0c02 	add.w	ip, r3, r2
 8028970:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 8028974:	68c9      	ldr	r1, [r1, #12]
 8028976:	1898      	adds	r0, r3, r2
 8028978:	4288      	cmp	r0, r1
 802897a:	db02      	blt.n	8028982 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x4e>
 802897c:	1a8b      	subs	r3, r1, r2
 802897e:	2b00      	cmp	r3, #0
 8028980:	dd09      	ble.n	8028996 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x62>
 8028982:	6878      	ldr	r0, [r7, #4]
 8028984:	6801      	ldr	r1, [r0, #0]
 8028986:	9400      	str	r4, [sp, #0]
 8028988:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 802898c:	4653      	mov	r3, sl
 802898e:	f8d1 b008 	ldr.w	fp, [r1, #8]
 8028992:	4631      	mov	r1, r6
 8028994:	47d8      	blx	fp
 8028996:	3d01      	subs	r5, #1
 8028998:	d1e4      	bne.n	8028964 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x30>
 802899a:	b007      	add	sp, #28
 802899c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080289a0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80289a0:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
 80289a4:	b90b      	cbnz	r3, 80289aa <_ZN8touchgfx10Rasterizer6lineToEii+0xa>
 80289a6:	f001 b9b9 	b.w	8029d1c <_ZN8touchgfx7Outline6lineToEii>
 80289aa:	4770      	bx	lr

080289ac <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 80289ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80289b0:	4b90      	ldr	r3, [pc, #576]	; (8028bf4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x248>)
 80289b2:	4604      	mov	r4, r0
 80289b4:	2600      	movs	r6, #0
 80289b6:	f100 0518 	add.w	r5, r0, #24
 80289ba:	e9c0 3100 	strd	r3, r1, [r0]
 80289be:	b086      	sub	sp, #24
 80289c0:	e9c0 6602 	strd	r6, r6, [r0, #8]
 80289c4:	e9c0 6604 	strd	r6, r6, [r0, #16]
 80289c8:	f104 0730 	add.w	r7, r4, #48	; 0x30
 80289cc:	4628      	mov	r0, r5
 80289ce:	4690      	mov	r8, r2
 80289d0:	f001 fbca 	bl	802a168 <_ZN8touchgfx15RenderingBufferC1Ev>
 80289d4:	4638      	mov	r0, r7
 80289d6:	f000 fb65 	bl	80290a4 <_ZN8touchgfx7OutlineC1Ev>
 80289da:	f104 0078 	add.w	r0, r4, #120	; 0x78
 80289de:	f001 fb6b 	bl	802a0b8 <_ZN8touchgfx8ScanlineC1Ev>
 80289e2:	2301      	movs	r3, #1
 80289e4:	f884 609c 	strb.w	r6, [r4, #156]	; 0x9c
 80289e8:	f8c4 60a0 	str.w	r6, [r4, #160]	; 0xa0
 80289ec:	f884 60a4 	strb.w	r6, [r4, #164]	; 0xa4
 80289f0:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 80289f4:	f884 60a6 	strb.w	r6, [r4, #166]	; 0xa6
 80289f8:	e9c4 662a 	strd	r6, r6, [r4, #168]	; 0xa8
 80289fc:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8028a00:	e9c4 662d 	strd	r6, r6, [r4, #180]	; 0xb4
 8028a04:	f7ee fff6 	bl	80179f4 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>
 8028a08:	b928      	cbnz	r0, 8028a16 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x6a>
 8028a0a:	4b7b      	ldr	r3, [pc, #492]	; (8028bf8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 8028a0c:	4a7b      	ldr	r2, [pc, #492]	; (8028bfc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 8028a0e:	212a      	movs	r1, #42	; 0x2a
 8028a10:	487b      	ldr	r0, [pc, #492]	; (8028c00 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x254>)
 8028a12:	f003 faef 	bl	802bff4 <__assert_func>
 8028a16:	f9b8 2000 	ldrsh.w	r2, [r8]
 8028a1a:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8028a1e:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8028a22:	9602      	str	r6, [sp, #8]
 8028a24:	4410      	add	r0, r2
 8028a26:	b280      	uxth	r0, r0
 8028a28:	fa0f fa80 	sxth.w	sl, r0
 8028a2c:	f1ba 0f00 	cmp.w	sl, #0
 8028a30:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8028a34:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8028a38:	dd70      	ble.n	8028b1c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 8028a3a:	4591      	cmp	r9, r2
 8028a3c:	dd6e      	ble.n	8028b1c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 8028a3e:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8028a42:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8028a46:	440b      	add	r3, r1
 8028a48:	b29b      	uxth	r3, r3
 8028a4a:	b21e      	sxth	r6, r3
 8028a4c:	2e00      	cmp	r6, #0
 8028a4e:	dd65      	ble.n	8028b1c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 8028a50:	458e      	cmp	lr, r1
 8028a52:	dd63      	ble.n	8028b1c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 8028a54:	45d1      	cmp	r9, sl
 8028a56:	bfb8      	it	lt
 8028a58:	fa1f f089 	uxthlt.w	r0, r9
 8028a5c:	45b6      	cmp	lr, r6
 8028a5e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8028a62:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8028a66:	bfb8      	it	lt
 8028a68:	fa1f f38e 	uxthlt.w	r3, lr
 8028a6c:	1a80      	subs	r0, r0, r2
 8028a6e:	1a5b      	subs	r3, r3, r1
 8028a70:	f8ad 000c 	strh.w	r0, [sp, #12]
 8028a74:	f8ad 300e 	strh.w	r3, [sp, #14]
 8028a78:	f8ad 2008 	strh.w	r2, [sp, #8]
 8028a7c:	f8ad 100a 	strh.w	r1, [sp, #10]
 8028a80:	f10d 0808 	add.w	r8, sp, #8
 8028a84:	e898 0003 	ldmia.w	r8, {r0, r1}
 8028a88:	ae04      	add	r6, sp, #16
 8028a8a:	e886 0003 	stmia.w	r6, {r0, r1}
 8028a8e:	f8dc 3000 	ldr.w	r3, [ip]
 8028a92:	4660      	mov	r0, ip
 8028a94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028a96:	4631      	mov	r1, r6
 8028a98:	4798      	blx	r3
 8028a9a:	6861      	ldr	r1, [r4, #4]
 8028a9c:	4640      	mov	r0, r8
 8028a9e:	3104      	adds	r1, #4
 8028aa0:	f7f0 fae0 	bl	8019064 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028aa4:	4630      	mov	r0, r6
 8028aa6:	f7f0 fab5 	bl	8019014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028aaa:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 8028aae:	f7ee ff31 	bl	8017914 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>
 8028ab2:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 8028ab6:	4638      	mov	r0, r7
 8028ab8:	f000 facf 	bl	802905a <_ZN8touchgfx7Outline5resetEv>
 8028abc:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8028ac0:	f8a4 30a2 	strh.w	r3, [r4, #162]	; 0xa2
 8028ac4:	015b      	lsls	r3, r3, #5
 8028ac6:	60e3      	str	r3, [r4, #12]
 8028ac8:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8028acc:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8028ad0:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
 8028ad4:	015b      	lsls	r3, r3, #5
 8028ad6:	6123      	str	r3, [r4, #16]
 8028ad8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8028adc:	015b      	lsls	r3, r3, #5
 8028ade:	6163      	str	r3, [r4, #20]
 8028ae0:	4b48      	ldr	r3, [pc, #288]	; (8028c04 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x258>)
 8028ae2:	0152      	lsls	r2, r2, #5
 8028ae4:	6818      	ldr	r0, [r3, #0]
 8028ae6:	60a2      	str	r2, [r4, #8]
 8028ae8:	6803      	ldr	r3, [r0, #0]
 8028aea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8028aec:	4798      	blx	r3
 8028aee:	4606      	mov	r6, r0
 8028af0:	f7e9 fdde 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 8028af4:	6803      	ldr	r3, [r0, #0]
 8028af6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8028af8:	4798      	blx	r3
 8028afa:	4607      	mov	r7, r0
 8028afc:	f7e9 fdd8 	bl	80126b0 <_ZN8touchgfx3HAL3lcdEv>
 8028b00:	6803      	ldr	r3, [r0, #0]
 8028b02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028b04:	4798      	blx	r3
 8028b06:	280d      	cmp	r0, #13
 8028b08:	d855      	bhi.n	8028bb6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x20a>
 8028b0a:	e8df f000 	tbb	[pc, r0]
 8028b0e:	564c      	.short	0x564c
 8028b10:	2b6f0a67 	.word	0x2b6f0a67
 8028b14:	6060603b 	.word	0x6060603b
 8028b18:	6f6f6060 	.word	0x6f6f6060
 8028b1c:	2300      	movs	r3, #0
 8028b1e:	9303      	str	r3, [sp, #12]
 8028b20:	e7ae      	b.n	8028a80 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xd4>
 8028b22:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028b26:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8028b2a:	2108      	movs	r1, #8
 8028b2c:	fb92 f1f1 	sdiv	r1, r2, r1
 8028b30:	fb07 1303 	mla	r3, r7, r3, r1
 8028b34:	441e      	add	r6, r3
 8028b36:	4253      	negs	r3, r2
 8028b38:	f003 0307 	and.w	r3, r3, #7
 8028b3c:	f002 0207 	and.w	r2, r2, #7
 8028b40:	bf58      	it	pl
 8028b42:	425a      	negpl	r2, r3
 8028b44:	b2d2      	uxtb	r2, r2
 8028b46:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8028b4a:	6721      	str	r1, [r4, #112]	; 0x70
 8028b4c:	e9cd 1700 	strd	r1, r7, [sp]
 8028b50:	4628      	mov	r0, r5
 8028b52:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8028b56:	4631      	mov	r1, r6
 8028b58:	f001 fb12 	bl	802a180 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>
 8028b5c:	4620      	mov	r0, r4
 8028b5e:	b006      	add	sp, #24
 8028b60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028b64:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028b68:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8028b6c:	2104      	movs	r1, #4
 8028b6e:	fb92 f1f1 	sdiv	r1, r2, r1
 8028b72:	fb07 1303 	mla	r3, r7, r3, r1
 8028b76:	441e      	add	r6, r3
 8028b78:	4253      	negs	r3, r2
 8028b7a:	f003 0303 	and.w	r3, r3, #3
 8028b7e:	f002 0203 	and.w	r2, r2, #3
 8028b82:	e7dd      	b.n	8028b40 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x194>
 8028b84:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8028b88:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028b8c:	2a00      	cmp	r2, #0
 8028b8e:	f04f 0102 	mov.w	r1, #2
 8028b92:	fb92 f1f1 	sdiv	r1, r2, r1
 8028b96:	f002 0201 	and.w	r2, r2, #1
 8028b9a:	fb07 1303 	mla	r3, r7, r3, r1
 8028b9e:	441e      	add	r6, r3
 8028ba0:	bfb8      	it	lt
 8028ba2:	4252      	neglt	r2, r2
 8028ba4:	e7ce      	b.n	8028b44 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x198>
 8028ba6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028baa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8028bae:	437b      	muls	r3, r7
 8028bb0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028bb4:	441e      	add	r6, r3
 8028bb6:	2200      	movs	r2, #0
 8028bb8:	e7c5      	b.n	8028b46 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x19a>
 8028bba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028bbe:	fb07 f203 	mul.w	r2, r7, r3
 8028bc2:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8028bc6:	2103      	movs	r1, #3
 8028bc8:	fb13 2301 	smlabb	r3, r3, r1, r2
 8028bcc:	e7f2      	b.n	8028bb4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 8028bce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028bd2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8028bd6:	fb07 2303 	mla	r3, r7, r3, r2
 8028bda:	e7eb      	b.n	8028bb4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 8028bdc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8028be0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8028be4:	437b      	muls	r3, r7
 8028be6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8028bea:	e7e3      	b.n	8028bb4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 8028bec:	4b06      	ldr	r3, [pc, #24]	; (8028c08 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x25c>)
 8028bee:	4a03      	ldr	r2, [pc, #12]	; (8028bfc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 8028bf0:	2169      	movs	r1, #105	; 0x69
 8028bf2:	e70d      	b.n	8028a10 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x64>
 8028bf4:	080364dc 	.word	0x080364dc
 8028bf8:	08036424 	.word	0x08036424
 8028bfc:	080364e4 	.word	0x080364e4
 8028c00:	08036480 	.word	0x08036480
 8028c04:	2001e1c0 	.word	0x2001e1c0
 8028c08:	080364b4 	.word	0x080364b4

08028c0c <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>:
 8028c0c:	6812      	ldr	r2, [r2, #0]
 8028c0e:	2a00      	cmp	r2, #0
 8028c10:	db0b      	blt.n	8028c2a <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x1e>
 8028c12:	9800      	ldr	r0, [sp, #0]
 8028c14:	6800      	ldr	r0, [r0, #0]
 8028c16:	4290      	cmp	r0, r2
 8028c18:	bfd4      	ite	le
 8028c1a:	2002      	movle	r0, #2
 8028c1c:	2000      	movgt	r0, #0
 8028c1e:	680a      	ldr	r2, [r1, #0]
 8028c20:	2a00      	cmp	r2, #0
 8028c22:	da04      	bge.n	8028c2e <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x22>
 8028c24:	f040 0004 	orr.w	r0, r0, #4
 8028c28:	4770      	bx	lr
 8028c2a:	2001      	movs	r0, #1
 8028c2c:	e7f7      	b.n	8028c1e <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x12>
 8028c2e:	681b      	ldr	r3, [r3, #0]
 8028c30:	4293      	cmp	r3, r2
 8028c32:	bfd8      	it	le
 8028c34:	f040 0008 	orrle.w	r0, r0, #8
 8028c38:	4770      	bx	lr
	...

08028c3c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8028c3c:	b510      	push	{r4, lr}
 8028c3e:	4b07      	ldr	r3, [pc, #28]	; (8028c5c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8028c40:	781b      	ldrb	r3, [r3, #0]
 8028c42:	2b01      	cmp	r3, #1
 8028c44:	d108      	bne.n	8028c58 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8028c46:	6843      	ldr	r3, [r0, #4]
 8028c48:	6814      	ldr	r4, [r2, #0]
 8028c4a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8028c4e:	680b      	ldr	r3, [r1, #0]
 8028c50:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8028c54:	6013      	str	r3, [r2, #0]
 8028c56:	600c      	str	r4, [r1, #0]
 8028c58:	bd10      	pop	{r4, pc}
 8028c5a:	bf00      	nop
 8028c5c:	2001e1b8 	.word	0x2001e1b8

08028c60 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8028c60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028c62:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 8028c66:	b085      	sub	sp, #20
 8028c68:	4604      	mov	r4, r0
 8028c6a:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8028c6e:	b33b      	cbz	r3, 8028cc0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x60>
 8028c70:	aa02      	add	r2, sp, #8
 8028c72:	a903      	add	r1, sp, #12
 8028c74:	f7ff ffe2 	bl	8028c3c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8028c78:	68a3      	ldr	r3, [r4, #8]
 8028c7a:	9e03      	ldr	r6, [sp, #12]
 8028c7c:	9f02      	ldr	r7, [sp, #8]
 8028c7e:	1af6      	subs	r6, r6, r3
 8028c80:	68e3      	ldr	r3, [r4, #12]
 8028c82:	9603      	str	r6, [sp, #12]
 8028c84:	1aff      	subs	r7, r7, r3
 8028c86:	f104 0314 	add.w	r3, r4, #20
 8028c8a:	9300      	str	r3, [sp, #0]
 8028c8c:	aa02      	add	r2, sp, #8
 8028c8e:	f104 0310 	add.w	r3, r4, #16
 8028c92:	a903      	add	r1, sp, #12
 8028c94:	4620      	mov	r0, r4
 8028c96:	9702      	str	r7, [sp, #8]
 8028c98:	f7ff ffb8 	bl	8028c0c <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 8028c9c:	f894 30b0 	ldrb.w	r3, [r4, #176]	; 0xb0
 8028ca0:	4605      	mov	r5, r0
 8028ca2:	b97b      	cbnz	r3, 8028cc4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x64>
 8028ca4:	463a      	mov	r2, r7
 8028ca6:	4631      	mov	r1, r6
 8028ca8:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8028cac:	f7ff fe78 	bl	80289a0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028cb0:	9b03      	ldr	r3, [sp, #12]
 8028cb2:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8028cb6:	9b02      	ldr	r3, [sp, #8]
 8028cb8:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 8028cbc:	f884 50b0 	strb.w	r5, [r4, #176]	; 0xb0
 8028cc0:	b005      	add	sp, #20
 8028cc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028cc4:	b110      	cbz	r0, 8028ccc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6c>
 8028cc6:	ea13 0200 	ands.w	r2, r3, r0
 8028cca:	d11c      	bne.n	8028d06 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8028ccc:	f894 00a5 	ldrb.w	r0, [r4, #165]	; 0xa5
 8028cd0:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8028cd4:	e9d4 122a 	ldrd	r1, r2, [r4, #168]	; 0xa8
 8028cd8:	b188      	cbz	r0, 8028cfe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 8028cda:	f884 30b1 	strb.w	r3, [r4, #177]	; 0xb1
 8028cde:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 8028ce2:	b913      	cbnz	r3, 8028cea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x8a>
 8028ce4:	4630      	mov	r0, r6
 8028ce6:	f001 f849 	bl	8029d7c <_ZN8touchgfx7Outline6moveToEii>
 8028cea:	2300      	movs	r3, #0
 8028cec:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 8028cf0:	2301      	movs	r3, #1
 8028cf2:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 8028cf6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8028cfa:	4630      	mov	r0, r6
 8028cfc:	e7d6      	b.n	8028cac <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4c>
 8028cfe:	4630      	mov	r0, r6
 8028d00:	f7ff fe4e 	bl	80289a0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028d04:	e7f7      	b.n	8028cf6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x96>
 8028d06:	4615      	mov	r5, r2
 8028d08:	e7d2      	b.n	8028cb0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x50>

08028d0a <_ZN8touchgfx6Canvas5closeEv>:
 8028d0a:	b538      	push	{r3, r4, r5, lr}
 8028d0c:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 8028d10:	4604      	mov	r4, r0
 8028d12:	b993      	cbnz	r3, 8028d3a <_ZN8touchgfx6Canvas5closeEv+0x30>
 8028d14:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 8028d18:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 8028d1c:	4213      	tst	r3, r2
 8028d1e:	d10c      	bne.n	8028d3a <_ZN8touchgfx6Canvas5closeEv+0x30>
 8028d20:	f100 0530 	add.w	r5, r0, #48	; 0x30
 8028d24:	b123      	cbz	r3, 8028d30 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8028d26:	e9d0 122a 	ldrd	r1, r2, [r0, #168]	; 0xa8
 8028d2a:	4628      	mov	r0, r5
 8028d2c:	f7ff fe38 	bl	80289a0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028d30:	e9d4 122d 	ldrd	r1, r2, [r4, #180]	; 0xb4
 8028d34:	4628      	mov	r0, r5
 8028d36:	f7ff fe33 	bl	80289a0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028d3a:	2300      	movs	r3, #0
 8028d3c:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 8028d40:	bd38      	pop	{r3, r4, r5, pc}

08028d42 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8028d42:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028d44:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 8028d48:	b085      	sub	sp, #20
 8028d4a:	4604      	mov	r4, r0
 8028d4c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8028d50:	b353      	cbz	r3, 8028da8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>
 8028d52:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 8028d56:	b90b      	cbnz	r3, 8028d5c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x1a>
 8028d58:	f7ff ffd7 	bl	8028d0a <_ZN8touchgfx6Canvas5closeEv>
 8028d5c:	aa02      	add	r2, sp, #8
 8028d5e:	a903      	add	r1, sp, #12
 8028d60:	4620      	mov	r0, r4
 8028d62:	f7ff ff6b 	bl	8028c3c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8028d66:	68a3      	ldr	r3, [r4, #8]
 8028d68:	9d03      	ldr	r5, [sp, #12]
 8028d6a:	9e02      	ldr	r6, [sp, #8]
 8028d6c:	1aed      	subs	r5, r5, r3
 8028d6e:	68e3      	ldr	r3, [r4, #12]
 8028d70:	9503      	str	r5, [sp, #12]
 8028d72:	1af6      	subs	r6, r6, r3
 8028d74:	f104 0314 	add.w	r3, r4, #20
 8028d78:	9300      	str	r3, [sp, #0]
 8028d7a:	aa02      	add	r2, sp, #8
 8028d7c:	f104 0310 	add.w	r3, r4, #16
 8028d80:	a903      	add	r1, sp, #12
 8028d82:	4620      	mov	r0, r4
 8028d84:	9602      	str	r6, [sp, #8]
 8028d86:	f7ff ff41 	bl	8028c0c <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 8028d8a:	4607      	mov	r7, r0
 8028d8c:	b170      	cbz	r0, 8028dac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x6a>
 8028d8e:	2301      	movs	r3, #1
 8028d90:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 8028d94:	9a03      	ldr	r2, [sp, #12]
 8028d96:	9b02      	ldr	r3, [sp, #8]
 8028d98:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 8028d9c:	e9c4 232a 	strd	r2, r3, [r4, #168]	; 0xa8
 8028da0:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 8028da4:	f884 70b0 	strb.w	r7, [r4, #176]	; 0xb0
 8028da8:	b005      	add	sp, #20
 8028daa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028dac:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 8028db0:	f884 00b1 	strb.w	r0, [r4, #177]	; 0xb1
 8028db4:	b92b      	cbnz	r3, 8028dc2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x80>
 8028db6:	4632      	mov	r2, r6
 8028db8:	4629      	mov	r1, r5
 8028dba:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8028dbe:	f000 ffdd 	bl	8029d7c <_ZN8touchgfx7Outline6moveToEii>
 8028dc2:	2300      	movs	r3, #0
 8028dc4:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 8028dc8:	2301      	movs	r3, #1
 8028dca:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 8028dce:	e7e1      	b.n	8028d94 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x52>

08028dd0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>:
 8028dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028dd4:	b087      	sub	sp, #28
 8028dd6:	4604      	mov	r4, r0
 8028dd8:	9105      	str	r1, [sp, #20]
 8028dda:	f001 f916 	bl	802a00a <_ZN8touchgfx7Outline8getCellsEv>
 8028dde:	f8d4 9008 	ldr.w	r9, [r4, #8]
 8028de2:	4605      	mov	r5, r0
 8028de4:	f1b9 0f00 	cmp.w	r9, #0
 8028de8:	d103      	bne.n	8028df2 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x22>
 8028dea:	2001      	movs	r0, #1
 8028dec:	b007      	add	sp, #28
 8028dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028df2:	f894 6044 	ldrb.w	r6, [r4, #68]	; 0x44
 8028df6:	2e00      	cmp	r6, #0
 8028df8:	d139      	bne.n	8028e6e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x9e>
 8028dfa:	f104 0848 	add.w	r8, r4, #72	; 0x48
 8028dfe:	4640      	mov	r0, r8
 8028e00:	f001 f945 	bl	802a08e <_ZN8touchgfx8Scanline5resetEv>
 8028e04:	f109 33ff 	add.w	r3, r9, #4294967295
 8028e08:	f105 0708 	add.w	r7, r5, #8
 8028e0c:	9303      	str	r3, [sp, #12]
 8028e0e:	f9b5 b000 	ldrsh.w	fp, [r5]
 8028e12:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 8028e16:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8028e1a:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8028e1e:	46da      	mov	sl, fp
 8028e20:	eb0b 4009 	add.w	r0, fp, r9, lsl #16
 8028e24:	9b03      	ldr	r3, [sp, #12]
 8028e26:	9504      	str	r5, [sp, #16]
 8028e28:	3b01      	subs	r3, #1
 8028e2a:	9303      	str	r3, [sp, #12]
 8028e2c:	3301      	adds	r3, #1
 8028e2e:	4416      	add	r6, r2
 8028e30:	463d      	mov	r5, r7
 8028e32:	d01e      	beq.n	8028e72 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa2>
 8028e34:	3708      	adds	r7, #8
 8028e36:	f937 cc06 	ldrsh.w	ip, [r7, #-6]
 8028e3a:	f937 2c08 	ldrsh.w	r2, [r7, #-8]
 8028e3e:	eb02 420c 	add.w	r2, r2, ip, lsl #16
 8028e42:	4290      	cmp	r0, r2
 8028e44:	d11e      	bne.n	8028e84 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xb4>
 8028e46:	f937 2c02 	ldrsh.w	r2, [r7, #-2]
 8028e4a:	4411      	add	r1, r2
 8028e4c:	f937 2c04 	ldrsh.w	r2, [r7, #-4]
 8028e50:	e7e8      	b.n	8028e24 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x54>
 8028e52:	1c91      	adds	r1, r2, #2
 8028e54:	f04f 0301 	mov.w	r3, #1
 8028e58:	65e1      	str	r1, [r4, #92]	; 0x5c
 8028e5a:	8053      	strh	r3, [r2, #2]
 8028e5c:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8028e5e:	1c91      	adds	r1, r2, #2
 8028e60:	65a1      	str	r1, [r4, #88]	; 0x58
 8028e62:	f8a2 b002 	strh.w	fp, [r2, #2]
 8028e66:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8028e68:	3201      	adds	r2, #1
 8028e6a:	6562      	str	r2, [r4, #84]	; 0x54
 8028e6c:	e03a      	b.n	8028ee4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x114>
 8028e6e:	2000      	movs	r0, #0
 8028e70:	e7bc      	b.n	8028dec <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1c>
 8028e72:	b951      	cbnz	r1, 8028e8a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xba>
 8028e74:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8028e76:	2b00      	cmp	r3, #0
 8028e78:	d0b7      	beq.n	8028dea <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 8028e7a:	4641      	mov	r1, r8
 8028e7c:	9805      	ldr	r0, [sp, #20]
 8028e7e:	f7ff fd59 	bl	8028934 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 8028e82:	e7b2      	b.n	8028dea <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 8028e84:	2900      	cmp	r1, #0
 8028e86:	d035      	beq.n	8028ef4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x124>
 8028e88:	9504      	str	r5, [sp, #16]
 8028e8a:	ebc1 1186 	rsb	r1, r1, r6, lsl #6
 8028e8e:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 8028e92:	f7ff fd3b 	bl	802890c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>
 8028e96:	4605      	mov	r5, r0
 8028e98:	b330      	cbz	r0, 8028ee8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 8028e9a:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8028e9c:	b182      	cbz	r2, 8028ec0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 8028e9e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8028ea0:	4591      	cmp	r9, r2
 8028ea2:	d00d      	beq.n	8028ec0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 8028ea4:	4641      	mov	r1, r8
 8028ea6:	9805      	ldr	r0, [sp, #20]
 8028ea8:	f7ff fd44 	bl	8028934 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 8028eac:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8028eb0:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 8028eb2:	65e2      	str	r2, [r4, #92]	; 0x5c
 8028eb4:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8028eb8:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8028eba:	65a2      	str	r2, [r4, #88]	; 0x58
 8028ebc:	2300      	movs	r3, #0
 8028ebe:	6563      	str	r3, [r4, #84]	; 0x54
 8028ec0:	f1bb 0f00 	cmp.w	fp, #0
 8028ec4:	db10      	blt.n	8028ee8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 8028ec6:	f7ee fda3 	bl	8017a10 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 8028eca:	4583      	cmp	fp, r0
 8028ecc:	da0c      	bge.n	8028ee8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 8028ece:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8028ed0:	f802 500b 	strb.w	r5, [r2, fp]
 8028ed4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 8028ed6:	3201      	adds	r2, #1
 8028ed8:	4593      	cmp	fp, r2
 8028eda:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8028edc:	d1b9      	bne.n	8028e52 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x82>
 8028ede:	8811      	ldrh	r1, [r2, #0]
 8028ee0:	3101      	adds	r1, #1
 8028ee2:	8011      	strh	r1, [r2, #0]
 8028ee4:	e9c4 b913 	strd	fp, r9, [r4, #76]	; 0x4c
 8028ee8:	9b03      	ldr	r3, [sp, #12]
 8028eea:	3301      	adds	r3, #1
 8028eec:	d0c2      	beq.n	8028e74 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa4>
 8028eee:	9d04      	ldr	r5, [sp, #16]
 8028ef0:	f10b 0a01 	add.w	sl, fp, #1
 8028ef4:	f9b5 3000 	ldrsh.w	r3, [r5]
 8028ef8:	4553      	cmp	r3, sl
 8028efa:	dd88      	ble.n	8028e0e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 8028efc:	01b1      	lsls	r1, r6, #6
 8028efe:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 8028f02:	f7ff fd03 	bl	802890c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>
 8028f06:	4683      	mov	fp, r0
 8028f08:	2800      	cmp	r0, #0
 8028f0a:	d080      	beq.n	8028e0e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 8028f0c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8028f0e:	b183      	cbz	r3, 8028f32 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 8028f10:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8028f12:	4599      	cmp	r9, r3
 8028f14:	d00d      	beq.n	8028f32 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 8028f16:	4641      	mov	r1, r8
 8028f18:	9805      	ldr	r0, [sp, #20]
 8028f1a:	f7ff fd0b 	bl	8028934 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 8028f1e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8028f22:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8028f26:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8028f28:	65e3      	str	r3, [r4, #92]	; 0x5c
 8028f2a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8028f2c:	65a3      	str	r3, [r4, #88]	; 0x58
 8028f2e:	2300      	movs	r3, #0
 8028f30:	6563      	str	r3, [r4, #84]	; 0x54
 8028f32:	f9b5 3000 	ldrsh.w	r3, [r5]
 8028f36:	f8cd b000 	str.w	fp, [sp]
 8028f3a:	eba3 030a 	sub.w	r3, r3, sl
 8028f3e:	464a      	mov	r2, r9
 8028f40:	4651      	mov	r1, sl
 8028f42:	4640      	mov	r0, r8
 8028f44:	f001 f8ce 	bl	802a0e4 <_ZN8touchgfx8Scanline7addSpanEiijj>
 8028f48:	e761      	b.n	8028e0e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>

08028f4a <_ZN8touchgfx6Canvas6renderEh>:
 8028f4a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8028f4c:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 8028f50:	4604      	mov	r4, r0
 8028f52:	460d      	mov	r5, r1
 8028f54:	b913      	cbnz	r3, 8028f5c <_ZN8touchgfx6Canvas6renderEh+0x12>
 8028f56:	2001      	movs	r0, #1
 8028f58:	b003      	add	sp, #12
 8028f5a:	bd30      	pop	{r4, r5, pc}
 8028f5c:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 8028f60:	2b00      	cmp	r3, #0
 8028f62:	d12f      	bne.n	8028fc4 <_ZN8touchgfx6Canvas6renderEh+0x7a>
 8028f64:	f890 30a6 	ldrb.w	r3, [r0, #166]	; 0xa6
 8028f68:	2b00      	cmp	r3, #0
 8028f6a:	d0f4      	beq.n	8028f56 <_ZN8touchgfx6Canvas6renderEh+0xc>
 8028f6c:	6840      	ldr	r0, [r0, #4]
 8028f6e:	6803      	ldr	r3, [r0, #0]
 8028f70:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8028f72:	4798      	blx	r3
 8028f74:	fb10 f105 	smulbb	r1, r0, r5
 8028f78:	b288      	uxth	r0, r1
 8028f7a:	1c41      	adds	r1, r0, #1
 8028f7c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8028f80:	120d      	asrs	r5, r1, #8
 8028f82:	d0e8      	beq.n	8028f56 <_ZN8touchgfx6Canvas6renderEh+0xc>
 8028f84:	4620      	mov	r0, r4
 8028f86:	f7ff fec0 	bl	8028d0a <_ZN8touchgfx6Canvas5closeEv>
 8028f8a:	6860      	ldr	r0, [r4, #4]
 8028f8c:	6803      	ldr	r3, [r0, #0]
 8028f8e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8028f90:	4798      	blx	r3
 8028f92:	f9b4 20a0 	ldrsh.w	r2, [r4, #160]	; 0xa0
 8028f96:	f9b4 30a2 	ldrsh.w	r3, [r4, #162]	; 0xa2
 8028f9a:	80c3      	strh	r3, [r0, #6]
 8028f9c:	8082      	strh	r2, [r0, #4]
 8028f9e:	6860      	ldr	r0, [r4, #4]
 8028fa0:	6803      	ldr	r3, [r0, #0]
 8028fa2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8028fa4:	4798      	blx	r3
 8028fa6:	7205      	strb	r5, [r0, #8]
 8028fa8:	6860      	ldr	r0, [r4, #4]
 8028faa:	6803      	ldr	r3, [r0, #0]
 8028fac:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8028fae:	4798      	blx	r3
 8028fb0:	f104 0318 	add.w	r3, r4, #24
 8028fb4:	e9cd 3000 	strd	r3, r0, [sp]
 8028fb8:	4669      	mov	r1, sp
 8028fba:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8028fbe:	f7ff ff07 	bl	8028dd0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>
 8028fc2:	e7c9      	b.n	8028f58 <_ZN8touchgfx6Canvas6renderEh+0xe>
 8028fc4:	2000      	movs	r0, #0
 8028fc6:	e7c7      	b.n	8028f58 <_ZN8touchgfx6Canvas6renderEh+0xe>

08028fc8 <_ZN8touchgfx6CanvasD1Ev>:
 8028fc8:	b538      	push	{r3, r4, r5, lr}
 8028fca:	4605      	mov	r5, r0
 8028fcc:	4b08      	ldr	r3, [pc, #32]	; (8028ff0 <_ZN8touchgfx6CanvasD1Ev+0x28>)
 8028fce:	f845 3b30 	str.w	r3, [r5], #48
 8028fd2:	4b08      	ldr	r3, [pc, #32]	; (8028ff4 <_ZN8touchgfx6CanvasD1Ev+0x2c>)
 8028fd4:	4604      	mov	r4, r0
 8028fd6:	6818      	ldr	r0, [r3, #0]
 8028fd8:	6803      	ldr	r3, [r0, #0]
 8028fda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028fdc:	4798      	blx	r3
 8028fde:	4628      	mov	r0, r5
 8028fe0:	f000 f833 	bl	802904a <_ZN8touchgfx7OutlineD1Ev>
 8028fe4:	f104 0018 	add.w	r0, r4, #24
 8028fe8:	f001 f8b5 	bl	802a156 <_ZN8touchgfx15RenderingBufferD1Ev>
 8028fec:	4620      	mov	r0, r4
 8028fee:	bd38      	pop	{r3, r4, r5, pc}
 8028ff0:	080364dc 	.word	0x080364dc
 8028ff4:	2001e1c0 	.word	0x2001e1c0

08028ff8 <_ZN8touchgfx6CanvasD0Ev>:
 8028ff8:	b510      	push	{r4, lr}
 8028ffa:	4604      	mov	r4, r0
 8028ffc:	f7ff ffe4 	bl	8028fc8 <_ZN8touchgfx6CanvasD1Ev>
 8029000:	4620      	mov	r0, r4
 8029002:	21bc      	movs	r1, #188	; 0xbc
 8029004:	f002 f8a9 	bl	802b15a <_ZdlPvj>
 8029008:	4620      	mov	r0, r4
 802900a:	bd10      	pop	{r4, pc}

0802900c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 802900c:	b570      	push	{r4, r5, r6, lr}
 802900e:	790b      	ldrb	r3, [r1, #4]
 8029010:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8029014:	2b00      	cmp	r3, #0
 8029016:	bf0c      	ite	eq
 8029018:	2301      	moveq	r3, #1
 802901a:	2300      	movne	r3, #0
 802901c:	4604      	mov	r4, r0
 802901e:	460e      	mov	r6, r1
 8029020:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8029024:	d109      	bne.n	802903a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8029026:	b14d      	cbz	r5, 802903c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8029028:	7933      	ldrb	r3, [r6, #4]
 802902a:	2b01      	cmp	r3, #1
 802902c:	d10c      	bne.n	8029048 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802902e:	6823      	ldr	r3, [r4, #0]
 8029030:	4620      	mov	r0, r4
 8029032:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8029034:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8029038:	4718      	bx	r3
 802903a:	b12d      	cbz	r5, 8029048 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802903c:	6823      	ldr	r3, [r4, #0]
 802903e:	4620      	mov	r0, r4
 8029040:	695b      	ldr	r3, [r3, #20]
 8029042:	4798      	blx	r3
 8029044:	2d00      	cmp	r5, #0
 8029046:	d1ef      	bne.n	8029028 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8029048:	bd70      	pop	{r4, r5, r6, pc}

0802904a <_ZN8touchgfx7OutlineD1Ev>:
 802904a:	4770      	bx	lr

0802904c <_ZN8touchgfx7OutlineD0Ev>:
 802904c:	b510      	push	{r4, lr}
 802904e:	2148      	movs	r1, #72	; 0x48
 8029050:	4604      	mov	r4, r0
 8029052:	f002 f882 	bl	802b15a <_ZdlPvj>
 8029056:	4620      	mov	r0, r4
 8029058:	bd10      	pop	{r4, pc}

0802905a <_ZN8touchgfx7Outline5resetEv>:
 802905a:	b510      	push	{r4, lr}
 802905c:	4604      	mov	r4, r0
 802905e:	f7ee fcef 	bl	8017a40 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8029062:	60e0      	str	r0, [r4, #12]
 8029064:	f7ee fcf2 	bl	8017a4c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8029068:	68e3      	ldr	r3, [r4, #12]
 802906a:	6123      	str	r3, [r4, #16]
 802906c:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8029070:	82a3      	strh	r3, [r4, #20]
 8029072:	82e3      	strh	r3, [r4, #22]
 8029074:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8029076:	f023 0301 	bic.w	r3, r3, #1
 802907a:	f043 0302 	orr.w	r3, r3, #2
 802907e:	63e3      	str	r3, [r4, #60]	; 0x3c
 8029080:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8029084:	2200      	movs	r2, #0
 8029086:	08c0      	lsrs	r0, r0, #3
 8029088:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802908c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8029090:	6060      	str	r0, [r4, #4]
 8029092:	60a2      	str	r2, [r4, #8]
 8029094:	8322      	strh	r2, [r4, #24]
 8029096:	8362      	strh	r2, [r4, #26]
 8029098:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802909c:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 80290a0:	bd10      	pop	{r4, pc}
	...

080290a4 <_ZN8touchgfx7OutlineC1Ev>:
 80290a4:	b510      	push	{r4, lr}
 80290a6:	4b0f      	ldr	r3, [pc, #60]	; (80290e4 <_ZN8touchgfx7OutlineC1Ev+0x40>)
 80290a8:	6003      	str	r3, [r0, #0]
 80290aa:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 80290ae:	2300      	movs	r3, #0
 80290b0:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 80290b4:	4604      	mov	r4, r0
 80290b6:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80290ba:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80290be:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80290c2:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80290c6:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
 80290ca:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 80290ce:	e9c0 110d 	strd	r1, r1, [r0, #52]	; 0x34
 80290d2:	e9c0 320f 	strd	r3, r2, [r0, #60]	; 0x3c
 80290d6:	f880 3044 	strb.w	r3, [r0, #68]	; 0x44
 80290da:	f7ff ffbe 	bl	802905a <_ZN8touchgfx7Outline5resetEv>
 80290de:	4620      	mov	r0, r4
 80290e0:	bd10      	pop	{r4, pc}
 80290e2:	bf00      	nop
 80290e4:	080365ac 	.word	0x080365ac

080290e8 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80290e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80290ec:	b095      	sub	sp, #84	; 0x54
 80290ee:	4604      	mov	r4, r0
 80290f0:	981e      	ldr	r0, [sp, #120]	; 0x78
 80290f2:	9304      	str	r3, [sp, #16]
 80290f4:	1153      	asrs	r3, r2, #5
 80290f6:	9300      	str	r3, [sp, #0]
 80290f8:	1143      	asrs	r3, r0, #5
 80290fa:	930c      	str	r3, [sp, #48]	; 0x30
 80290fc:	f000 031f 	and.w	r3, r0, #31
 8029100:	9303      	str	r3, [sp, #12]
 8029102:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8029104:	1155      	asrs	r5, r2, #5
 8029106:	42ab      	cmp	r3, r5
 8029108:	bfc4      	itt	gt
 802910a:	462b      	movgt	r3, r5
 802910c:	6323      	strgt	r3, [r4, #48]	; 0x30
 802910e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8029110:	1155      	asrs	r5, r2, #5
 8029112:	42ab      	cmp	r3, r5
 8029114:	bfde      	ittt	le
 8029116:	462b      	movle	r3, r5
 8029118:	3301      	addle	r3, #1
 802911a:	63a3      	strle	r3, [r4, #56]	; 0x38
 802911c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802911e:	1145      	asrs	r5, r0, #5
 8029120:	42ab      	cmp	r3, r5
 8029122:	bfc4      	itt	gt
 8029124:	462b      	movgt	r3, r5
 8029126:	6323      	strgt	r3, [r4, #48]	; 0x30
 8029128:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 802912a:	1145      	asrs	r5, r0, #5
 802912c:	42ab      	cmp	r3, r5
 802912e:	bfde      	ittt	le
 8029130:	462b      	movle	r3, r5
 8029132:	3301      	addle	r3, #1
 8029134:	63a3      	strle	r3, [r4, #56]	; 0x38
 8029136:	9b04      	ldr	r3, [sp, #16]
 8029138:	1157      	asrs	r7, r2, #5
 802913a:	eba3 0a01 	sub.w	sl, r3, r1
 802913e:	1143      	asrs	r3, r0, #5
 8029140:	429f      	cmp	r7, r3
 8029142:	f002 061f 	and.w	r6, r2, #31
 8029146:	ea4f 1561 	mov.w	r5, r1, asr #5
 802914a:	f040 8122 	bne.w	8029392 <_ZN8touchgfx7Outline10renderLineEiiii+0x2aa>
 802914e:	9b04      	ldr	r3, [sp, #16]
 8029150:	ea4f 1b63 	mov.w	fp, r3, asr #5
 8029154:	9b03      	ldr	r3, [sp, #12]
 8029156:	429e      	cmp	r6, r3
 8029158:	d131      	bne.n	80291be <_ZN8touchgfx7Outline10renderLineEiiii+0xd6>
 802915a:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 802915e:	f9bd 2000 	ldrsh.w	r2, [sp]
 8029162:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 8029166:	fa0f fb8b 	sxth.w	fp, fp
 802916a:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 802916e:	eb0b 4002 	add.w	r0, fp, r2, lsl #16
 8029172:	4281      	cmp	r1, r0
 8029174:	f000 80eb 	beq.w	802934e <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 8029178:	8b60      	ldrh	r0, [r4, #26]
 802917a:	8b21      	ldrh	r1, [r4, #24]
 802917c:	4301      	orrs	r1, r0
 802917e:	d00b      	beq.n	8029198 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 8029180:	2b00      	cmp	r3, #0
 8029182:	db09      	blt.n	8029198 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 8029184:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029186:	428b      	cmp	r3, r1
 8029188:	da06      	bge.n	8029198 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 802918a:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802918e:	4299      	cmp	r1, r3
 8029190:	d308      	bcc.n	80291a4 <_ZN8touchgfx7Outline10renderLineEiiii+0xbc>
 8029192:	2301      	movs	r3, #1
 8029194:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8029198:	f8a4 b014 	strh.w	fp, [r4, #20]
 802919c:	2300      	movs	r3, #0
 802919e:	82e2      	strh	r2, [r4, #22]
 80291a0:	8323      	strh	r3, [r4, #24]
 80291a2:	e01f      	b.n	80291e4 <_ZN8touchgfx7Outline10renderLineEiiii+0xfc>
 80291a4:	f104 0314 	add.w	r3, r4, #20
 80291a8:	cb03      	ldmia	r3!, {r0, r1}
 80291aa:	6925      	ldr	r5, [r4, #16]
 80291ac:	6028      	str	r0, [r5, #0]
 80291ae:	6069      	str	r1, [r5, #4]
 80291b0:	6923      	ldr	r3, [r4, #16]
 80291b2:	3308      	adds	r3, #8
 80291b4:	6123      	str	r3, [r4, #16]
 80291b6:	68a3      	ldr	r3, [r4, #8]
 80291b8:	3301      	adds	r3, #1
 80291ba:	60a3      	str	r3, [r4, #8]
 80291bc:	e7ec      	b.n	8029198 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 80291be:	9b04      	ldr	r3, [sp, #16]
 80291c0:	8b20      	ldrh	r0, [r4, #24]
 80291c2:	8b62      	ldrh	r2, [r4, #26]
 80291c4:	f003 031f 	and.w	r3, r3, #31
 80291c8:	9305      	str	r3, [sp, #20]
 80291ca:	9b03      	ldr	r3, [sp, #12]
 80291cc:	45ab      	cmp	fp, r5
 80291ce:	f001 011f 	and.w	r1, r1, #31
 80291d2:	eba3 0306 	sub.w	r3, r3, r6
 80291d6:	d107      	bne.n	80291e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x100>
 80291d8:	4418      	add	r0, r3
 80291da:	8320      	strh	r0, [r4, #24]
 80291dc:	9805      	ldr	r0, [sp, #20]
 80291de:	4401      	add	r1, r0
 80291e0:	fb03 2301 	mla	r3, r3, r1, r2
 80291e4:	8363      	strh	r3, [r4, #26]
 80291e6:	e0b2      	b.n	802934e <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 80291e8:	f1ba 0f00 	cmp.w	sl, #0
 80291ec:	db35      	blt.n	802925a <_ZN8touchgfx7Outline10renderLineEiiii+0x172>
 80291ee:	2701      	movs	r7, #1
 80291f0:	f1c1 0c20 	rsb	ip, r1, #32
 80291f4:	9702      	str	r7, [sp, #8]
 80291f6:	fb03 f30c 	mul.w	r3, r3, ip
 80291fa:	2720      	movs	r7, #32
 80291fc:	9701      	str	r7, [sp, #4]
 80291fe:	fb93 fcfa 	sdiv	ip, r3, sl
 8029202:	9f01      	ldr	r7, [sp, #4]
 8029204:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 8029208:	fb0a 331c 	mls	r3, sl, ip, r3
 802920c:	2b00      	cmp	r3, #0
 802920e:	bfb8      	it	lt
 8029210:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8029214:	4439      	add	r1, r7
 8029216:	fb0c 2101 	mla	r1, ip, r1, r2
 802921a:	9a02      	ldr	r2, [sp, #8]
 802921c:	4415      	add	r5, r2
 802921e:	f9bd 2000 	ldrsh.w	r2, [sp]
 8029222:	9200      	str	r2, [sp, #0]
 8029224:	ea4f 4702 	mov.w	r7, r2, lsl #16
 8029228:	9704      	str	r7, [sp, #16]
 802922a:	9a04      	ldr	r2, [sp, #16]
 802922c:	f9b4 7014 	ldrsh.w	r7, [r4, #20]
 8029230:	fa0f fe85 	sxth.w	lr, r5
 8029234:	4460      	add	r0, ip
 8029236:	eb07 4708 	add.w	r7, r7, r8, lsl #16
 802923a:	eb0e 0902 	add.w	r9, lr, r2
 802923e:	bfb8      	it	lt
 8029240:	4453      	addlt	r3, sl
 8029242:	b200      	sxth	r0, r0
 8029244:	b209      	sxth	r1, r1
 8029246:	454f      	cmp	r7, r9
 8029248:	8320      	strh	r0, [r4, #24]
 802924a:	8361      	strh	r1, [r4, #26]
 802924c:	d10d      	bne.n	802926a <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 802924e:	4ba1      	ldr	r3, [pc, #644]	; (80294d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ec>)
 8029250:	4aa1      	ldr	r2, [pc, #644]	; (80294d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f0>)
 8029252:	48a2      	ldr	r0, [pc, #648]	; (80294dc <_ZN8touchgfx7Outline10renderLineEiiii+0x3f4>)
 8029254:	2176      	movs	r1, #118	; 0x76
 8029256:	f002 fecd 	bl	802bff4 <__assert_func>
 802925a:	f04f 37ff 	mov.w	r7, #4294967295
 802925e:	9702      	str	r7, [sp, #8]
 8029260:	434b      	muls	r3, r1
 8029262:	f1ca 0a00 	rsb	sl, sl, #0
 8029266:	2700      	movs	r7, #0
 8029268:	e7c8      	b.n	80291fc <_ZN8touchgfx7Outline10renderLineEiiii+0x114>
 802926a:	ea50 0201 	orrs.w	r2, r0, r1
 802926e:	d00c      	beq.n	802928a <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 8029270:	f1b8 0f00 	cmp.w	r8, #0
 8029274:	db09      	blt.n	802928a <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 8029276:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029278:	4588      	cmp	r8, r1
 802927a:	da06      	bge.n	802928a <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 802927c:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029280:	4288      	cmp	r0, r1
 8029282:	d367      	bcc.n	8029354 <_ZN8touchgfx7Outline10renderLineEiiii+0x26c>
 8029284:	2101      	movs	r1, #1
 8029286:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 802928a:	2100      	movs	r1, #0
 802928c:	9a00      	ldr	r2, [sp, #0]
 802928e:	f8a4 e014 	strh.w	lr, [r4, #20]
 8029292:	45ab      	cmp	fp, r5
 8029294:	82e2      	strh	r2, [r4, #22]
 8029296:	8321      	strh	r1, [r4, #24]
 8029298:	8361      	strh	r1, [r4, #26]
 802929a:	4466      	add	r6, ip
 802929c:	d04e      	beq.n	802933c <_ZN8touchgfx7Outline10renderLineEiiii+0x254>
 802929e:	9a03      	ldr	r2, [sp, #12]
 80292a0:	1b91      	subs	r1, r2, r6
 80292a2:	448c      	add	ip, r1
 80292a4:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
 80292a8:	fb9c f7fa 	sdiv	r7, ip, sl
 80292ac:	fb0a cc17 	mls	ip, sl, r7, ip
 80292b0:	f1bc 0f00 	cmp.w	ip, #0
 80292b4:	bfb8      	it	lt
 80292b6:	f107 37ff 	addlt.w	r7, r7, #4294967295
 80292ba:	f107 0201 	add.w	r2, r7, #1
 80292be:	bfb8      	it	lt
 80292c0:	44d4      	addlt	ip, sl
 80292c2:	eba3 030a 	sub.w	r3, r3, sl
 80292c6:	9207      	str	r2, [sp, #28]
 80292c8:	f04f 0800 	mov.w	r8, #0
 80292cc:	eb13 030c 	adds.w	r3, r3, ip
 80292d0:	bf58      	it	pl
 80292d2:	9807      	ldrpl	r0, [sp, #28]
 80292d4:	9a02      	ldr	r2, [sp, #8]
 80292d6:	bf48      	it	mi
 80292d8:	4638      	movmi	r0, r7
 80292da:	fa0f fe80 	sxth.w	lr, r0
 80292de:	ea4f 1140 	mov.w	r1, r0, lsl #5
 80292e2:	4415      	add	r5, r2
 80292e4:	4406      	add	r6, r0
 80292e6:	9a04      	ldr	r2, [sp, #16]
 80292e8:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 80292ec:	f8a4 e018 	strh.w	lr, [r4, #24]
 80292f0:	fa0f f985 	sxth.w	r9, r5
 80292f4:	4410      	add	r0, r2
 80292f6:	444a      	add	r2, r9
 80292f8:	bf58      	it	pl
 80292fa:	eba3 030a 	subpl.w	r3, r3, sl
 80292fe:	b209      	sxth	r1, r1
 8029300:	4290      	cmp	r0, r2
 8029302:	8361      	strh	r1, [r4, #26]
 8029304:	d0a3      	beq.n	802924e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8029306:	ea5e 0201 	orrs.w	r2, lr, r1
 802930a:	d00d      	beq.n	8029328 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 802930c:	9a00      	ldr	r2, [sp, #0]
 802930e:	2a00      	cmp	r2, #0
 8029310:	db0a      	blt.n	8029328 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 8029312:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029314:	428a      	cmp	r2, r1
 8029316:	da07      	bge.n	8029328 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 8029318:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802931c:	4288      	cmp	r0, r1
 802931e:	d329      	bcc.n	8029374 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8029320:	f04f 0201 	mov.w	r2, #1
 8029324:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8029328:	9a00      	ldr	r2, [sp, #0]
 802932a:	f8a4 9014 	strh.w	r9, [r4, #20]
 802932e:	45ab      	cmp	fp, r5
 8029330:	82e2      	strh	r2, [r4, #22]
 8029332:	f8a4 8018 	strh.w	r8, [r4, #24]
 8029336:	f8a4 801a 	strh.w	r8, [r4, #26]
 802933a:	d1c7      	bne.n	80292cc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 802933c:	9b03      	ldr	r3, [sp, #12]
 802933e:	9a01      	ldr	r2, [sp, #4]
 8029340:	1b9e      	subs	r6, r3, r6
 8029342:	9b05      	ldr	r3, [sp, #20]
 8029344:	8326      	strh	r6, [r4, #24]
 8029346:	3320      	adds	r3, #32
 8029348:	1a9b      	subs	r3, r3, r2
 802934a:	435e      	muls	r6, r3
 802934c:	8366      	strh	r6, [r4, #26]
 802934e:	b015      	add	sp, #84	; 0x54
 8029350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029354:	f104 0714 	add.w	r7, r4, #20
 8029358:	cf03      	ldmia	r7!, {r0, r1}
 802935a:	f8d4 8010 	ldr.w	r8, [r4, #16]
 802935e:	f8c8 0000 	str.w	r0, [r8]
 8029362:	f8c8 1004 	str.w	r1, [r8, #4]
 8029366:	6921      	ldr	r1, [r4, #16]
 8029368:	3108      	adds	r1, #8
 802936a:	6121      	str	r1, [r4, #16]
 802936c:	68a1      	ldr	r1, [r4, #8]
 802936e:	3101      	adds	r1, #1
 8029370:	60a1      	str	r1, [r4, #8]
 8029372:	e78a      	b.n	802928a <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 8029374:	f104 0e14 	add.w	lr, r4, #20
 8029378:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 802937c:	6922      	ldr	r2, [r4, #16]
 802937e:	9206      	str	r2, [sp, #24]
 8029380:	6010      	str	r0, [r2, #0]
 8029382:	6051      	str	r1, [r2, #4]
 8029384:	6921      	ldr	r1, [r4, #16]
 8029386:	3108      	adds	r1, #8
 8029388:	6121      	str	r1, [r4, #16]
 802938a:	68a1      	ldr	r1, [r4, #8]
 802938c:	3101      	adds	r1, #1
 802938e:	60a1      	str	r1, [r4, #8]
 8029390:	e7ca      	b.n	8029328 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 8029392:	eba0 0b02 	sub.w	fp, r0, r2
 8029396:	f1ba 0f00 	cmp.w	sl, #0
 802939a:	f040 80a1 	bne.w	80294e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f8>
 802939e:	f1bb 0f00 	cmp.w	fp, #0
 80293a2:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80293a6:	8b62      	ldrh	r2, [r4, #26]
 80293a8:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 80293ac:	f9b4 c014 	ldrsh.w	ip, [r4, #20]
 80293b0:	f001 033e 	and.w	r3, r1, #62	; 0x3e
 80293b4:	bfa8      	it	ge
 80293b6:	f04f 0a20 	movge.w	sl, #32
 80293ba:	8b21      	ldrh	r1, [r4, #24]
 80293bc:	ebaa 0606 	sub.w	r6, sl, r6
 80293c0:	4431      	add	r1, r6
 80293c2:	fb06 2603 	mla	r6, r6, r3, r2
 80293c6:	9a00      	ldr	r2, [sp, #0]
 80293c8:	bfb4      	ite	lt
 80293ca:	f04f 39ff 	movlt.w	r9, #4294967295
 80293ce:	f04f 0901 	movge.w	r9, #1
 80293d2:	444a      	add	r2, r9
 80293d4:	b22d      	sxth	r5, r5
 80293d6:	b217      	sxth	r7, r2
 80293d8:	eb0c 4c00 	add.w	ip, ip, r0, lsl #16
 80293dc:	eb05 4e07 	add.w	lr, r5, r7, lsl #16
 80293e0:	b209      	sxth	r1, r1
 80293e2:	b236      	sxth	r6, r6
 80293e4:	45f4      	cmp	ip, lr
 80293e6:	8321      	strh	r1, [r4, #24]
 80293e8:	8366      	strh	r6, [r4, #26]
 80293ea:	f43f af30 	beq.w	802924e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80293ee:	4331      	orrs	r1, r6
 80293f0:	d00b      	beq.n	802940a <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 80293f2:	2800      	cmp	r0, #0
 80293f4:	db09      	blt.n	802940a <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 80293f6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80293f8:	4288      	cmp	r0, r1
 80293fa:	da06      	bge.n	802940a <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 80293fc:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029400:	4288      	cmp	r0, r1
 8029402:	d33b      	bcc.n	802947c <_ZN8touchgfx7Outline10renderLineEiiii+0x394>
 8029404:	2101      	movs	r1, #1
 8029406:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 802940a:	f1aa 0610 	sub.w	r6, sl, #16
 802940e:	0076      	lsls	r6, r6, #1
 8029410:	fb06 fc03 	mul.w	ip, r6, r3
 8029414:	fa0f fc8c 	sxth.w	ip, ip
 8029418:	b236      	sxth	r6, r6
 802941a:	82e7      	strh	r7, [r4, #22]
 802941c:	ea46 010c 	orr.w	r1, r6, ip
 8029420:	2700      	movs	r7, #0
 8029422:	82a5      	strh	r5, [r4, #20]
 8029424:	8327      	strh	r7, [r4, #24]
 8029426:	8367      	strh	r7, [r4, #26]
 8029428:	9100      	str	r1, [sp, #0]
 802942a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802942c:	428a      	cmp	r2, r1
 802942e:	d046      	beq.n	80294be <_ZN8touchgfx7Outline10renderLineEiiii+0x3d6>
 8029430:	444a      	add	r2, r9
 8029432:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 8029436:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 802943a:	8326      	strh	r6, [r4, #24]
 802943c:	fa0f f882 	sxth.w	r8, r2
 8029440:	eb00 4001 	add.w	r0, r0, r1, lsl #16
 8029444:	eb05 4e08 	add.w	lr, r5, r8, lsl #16
 8029448:	4570      	cmp	r0, lr
 802944a:	f8a4 c01a 	strh.w	ip, [r4, #26]
 802944e:	f43f aefe 	beq.w	802924e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8029452:	9800      	ldr	r0, [sp, #0]
 8029454:	b160      	cbz	r0, 8029470 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 8029456:	2900      	cmp	r1, #0
 8029458:	db0a      	blt.n	8029470 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 802945a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 802945c:	4281      	cmp	r1, r0
 802945e:	da07      	bge.n	8029470 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 8029460:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029464:	4288      	cmp	r0, r1
 8029466:	d319      	bcc.n	802949c <_ZN8touchgfx7Outline10renderLineEiiii+0x3b4>
 8029468:	f04f 0101 	mov.w	r1, #1
 802946c:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8029470:	82a5      	strh	r5, [r4, #20]
 8029472:	f8a4 8016 	strh.w	r8, [r4, #22]
 8029476:	8327      	strh	r7, [r4, #24]
 8029478:	8367      	strh	r7, [r4, #26]
 802947a:	e7d6      	b.n	802942a <_ZN8touchgfx7Outline10renderLineEiiii+0x342>
 802947c:	f104 0614 	add.w	r6, r4, #20
 8029480:	ce03      	ldmia	r6!, {r0, r1}
 8029482:	f8d4 c010 	ldr.w	ip, [r4, #16]
 8029486:	f8cc 0000 	str.w	r0, [ip]
 802948a:	f8cc 1004 	str.w	r1, [ip, #4]
 802948e:	6921      	ldr	r1, [r4, #16]
 8029490:	3108      	adds	r1, #8
 8029492:	6121      	str	r1, [r4, #16]
 8029494:	68a1      	ldr	r1, [r4, #8]
 8029496:	3101      	adds	r1, #1
 8029498:	60a1      	str	r1, [r4, #8]
 802949a:	e7b6      	b.n	802940a <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 802949c:	f104 0e14 	add.w	lr, r4, #20
 80294a0:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 80294a4:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80294a8:	f8cb 0000 	str.w	r0, [fp]
 80294ac:	f8cb 1004 	str.w	r1, [fp, #4]
 80294b0:	6921      	ldr	r1, [r4, #16]
 80294b2:	3108      	adds	r1, #8
 80294b4:	6121      	str	r1, [r4, #16]
 80294b6:	68a1      	ldr	r1, [r4, #8]
 80294b8:	3101      	adds	r1, #1
 80294ba:	60a1      	str	r1, [r4, #8]
 80294bc:	e7d8      	b.n	8029470 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 80294be:	9a03      	ldr	r2, [sp, #12]
 80294c0:	8b61      	ldrh	r1, [r4, #26]
 80294c2:	f1a2 0e20 	sub.w	lr, r2, #32
 80294c6:	8b22      	ldrh	r2, [r4, #24]
 80294c8:	44d6      	add	lr, sl
 80294ca:	4472      	add	r2, lr
 80294cc:	8322      	strh	r2, [r4, #24]
 80294ce:	fb0e 1303 	mla	r3, lr, r3, r1
 80294d2:	e687      	b.n	80291e4 <_ZN8touchgfx7Outline10renderLineEiiii+0xfc>
 80294d4:	08036533 	.word	0x08036533
 80294d8:	080365b4 	.word	0x080365b4
 80294dc:	08036564 	.word	0x08036564
 80294e0:	f1bb 0f00 	cmp.w	fp, #0
 80294e4:	f2c0 8124 	blt.w	8029730 <_ZN8touchgfx7Outline10renderLineEiiii+0x648>
 80294e8:	2201      	movs	r2, #1
 80294ea:	f1c6 0320 	rsb	r3, r6, #32
 80294ee:	920b      	str	r2, [sp, #44]	; 0x2c
 80294f0:	fb0a f303 	mul.w	r3, sl, r3
 80294f4:	2220      	movs	r2, #32
 80294f6:	fb93 fcfb 	sdiv	ip, r3, fp
 80294fa:	fb0b 331c 	mls	r3, fp, ip, r3
 80294fe:	2b00      	cmp	r3, #0
 8029500:	9308      	str	r3, [sp, #32]
 8029502:	bfbe      	ittt	lt
 8029504:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8029508:	445b      	addlt	r3, fp
 802950a:	9308      	strlt	r3, [sp, #32]
 802950c:	eb0c 0301 	add.w	r3, ip, r1
 8029510:	9301      	str	r3, [sp, #4]
 8029512:	115b      	asrs	r3, r3, #5
 8029514:	9305      	str	r3, [sp, #20]
 8029516:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 802951a:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 802951e:	9202      	str	r2, [sp, #8]
 8029520:	eb03 4308 	add.w	r3, r3, r8, lsl #16
 8029524:	461f      	mov	r7, r3
 8029526:	9b02      	ldr	r3, [sp, #8]
 8029528:	42b3      	cmp	r3, r6
 802952a:	f040 8117 	bne.w	802975c <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 802952e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8029532:	f9bd 3000 	ldrsh.w	r3, [sp]
 8029536:	eb02 4103 	add.w	r1, r2, r3, lsl #16
 802953a:	42b9      	cmp	r1, r7
 802953c:	d016      	beq.n	802956c <_ZN8touchgfx7Outline10renderLineEiiii+0x484>
 802953e:	8b60      	ldrh	r0, [r4, #26]
 8029540:	8b21      	ldrh	r1, [r4, #24]
 8029542:	4301      	orrs	r1, r0
 8029544:	d00d      	beq.n	8029562 <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 8029546:	f1b8 0f00 	cmp.w	r8, #0
 802954a:	db0a      	blt.n	8029562 <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 802954c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802954e:	4541      	cmp	r1, r8
 8029550:	dd07      	ble.n	8029562 <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 8029552:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029556:	4288      	cmp	r0, r1
 8029558:	f0c0 80f3 	bcc.w	8029742 <_ZN8touchgfx7Outline10renderLineEiiii+0x65a>
 802955c:	2101      	movs	r1, #1
 802955e:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8029562:	82e3      	strh	r3, [r4, #22]
 8029564:	2300      	movs	r3, #0
 8029566:	82a2      	strh	r2, [r4, #20]
 8029568:	8323      	strh	r3, [r4, #24]
 802956a:	8363      	strh	r3, [r4, #26]
 802956c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802956e:	9a00      	ldr	r2, [sp, #0]
 8029570:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 8029574:	441a      	add	r2, r3
 8029576:	4691      	mov	r9, r2
 8029578:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 802957c:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
 8029580:	fa0f f589 	sxth.w	r5, r9
 8029584:	eb01 4102 	add.w	r1, r1, r2, lsl #16
 8029588:	eb03 4005 	add.w	r0, r3, r5, lsl #16
 802958c:	4281      	cmp	r1, r0
 802958e:	d015      	beq.n	80295bc <_ZN8touchgfx7Outline10renderLineEiiii+0x4d4>
 8029590:	8b60      	ldrh	r0, [r4, #26]
 8029592:	8b21      	ldrh	r1, [r4, #24]
 8029594:	4301      	orrs	r1, r0
 8029596:	d00c      	beq.n	80295b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 8029598:	2a00      	cmp	r2, #0
 802959a:	db0a      	blt.n	80295b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 802959c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802959e:	428a      	cmp	r2, r1
 80295a0:	da07      	bge.n	80295b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 80295a2:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 80295a6:	4291      	cmp	r1, r2
 80295a8:	f0c0 81b4 	bcc.w	8029914 <_ZN8touchgfx7Outline10renderLineEiiii+0x82c>
 80295ac:	2201      	movs	r2, #1
 80295ae:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 80295b2:	82a3      	strh	r3, [r4, #20]
 80295b4:	2300      	movs	r3, #0
 80295b6:	82e5      	strh	r5, [r4, #22]
 80295b8:	8323      	strh	r3, [r4, #24]
 80295ba:	8363      	strh	r3, [r4, #26]
 80295bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80295be:	454b      	cmp	r3, r9
 80295c0:	f000 808a 	beq.w	80296d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x5f0>
 80295c4:	ea4f 134a 	mov.w	r3, sl, lsl #5
 80295c8:	fb93 f2fb 	sdiv	r2, r3, fp
 80295cc:	fb0b 3312 	mls	r3, fp, r2, r3
 80295d0:	2b00      	cmp	r3, #0
 80295d2:	9205      	str	r2, [sp, #20]
 80295d4:	9307      	str	r3, [sp, #28]
 80295d6:	da04      	bge.n	80295e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x4fa>
 80295d8:	1e53      	subs	r3, r2, #1
 80295da:	9305      	str	r3, [sp, #20]
 80295dc:	9b07      	ldr	r3, [sp, #28]
 80295de:	445b      	add	r3, fp
 80295e0:	9307      	str	r3, [sp, #28]
 80295e2:	9b08      	ldr	r3, [sp, #32]
 80295e4:	eba3 030b 	sub.w	r3, r3, fp
 80295e8:	9308      	str	r3, [sp, #32]
 80295ea:	e9dd c301 	ldrd	ip, r3, [sp, #4]
 80295ee:	f1c3 0320 	rsb	r3, r3, #32
 80295f2:	930a      	str	r3, [sp, #40]	; 0x28
 80295f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80295f6:	9b02      	ldr	r3, [sp, #8]
 80295f8:	1a9b      	subs	r3, r3, r2
 80295fa:	9309      	str	r3, [sp, #36]	; 0x24
 80295fc:	f04f 0a00 	mov.w	sl, #0
 8029600:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8029604:	189b      	adds	r3, r3, r2
 8029606:	9308      	str	r3, [sp, #32]
 8029608:	bf5d      	ittte	pl
 802960a:	eba3 030b 	subpl.w	r3, r3, fp
 802960e:	9308      	strpl	r3, [sp, #32]
 8029610:	9b05      	ldrpl	r3, [sp, #20]
 8029612:	9b05      	ldrmi	r3, [sp, #20]
 8029614:	9902      	ldr	r1, [sp, #8]
 8029616:	f9b4 6016 	ldrsh.w	r6, [r4, #22]
 802961a:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 802961e:	bf58      	it	pl
 8029620:	3301      	addpl	r3, #1
 8029622:	9300      	str	r3, [sp, #0]
 8029624:	e9dd 2300 	ldrd	r2, r3, [sp]
 8029628:	4413      	add	r3, r2
 802962a:	9301      	str	r3, [sp, #4]
 802962c:	115b      	asrs	r3, r3, #5
 802962e:	9306      	str	r3, [sp, #24]
 8029630:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8029632:	428b      	cmp	r3, r1
 8029634:	eb08 4806 	add.w	r8, r8, r6, lsl #16
 8029638:	f040 8186 	bne.w	8029948 <_ZN8touchgfx7Outline10renderLineEiiii+0x860>
 802963c:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8029640:	fa0f f389 	sxth.w	r3, r9
 8029644:	eb02 4103 	add.w	r1, r2, r3, lsl #16
 8029648:	4541      	cmp	r1, r8
 802964a:	d017      	beq.n	802967c <_ZN8touchgfx7Outline10renderLineEiiii+0x594>
 802964c:	8b60      	ldrh	r0, [r4, #26]
 802964e:	8b21      	ldrh	r1, [r4, #24]
 8029650:	4301      	orrs	r1, r0
 8029652:	d00d      	beq.n	8029670 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 8029654:	2e00      	cmp	r6, #0
 8029656:	db0b      	blt.n	8029670 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 8029658:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802965a:	42b1      	cmp	r1, r6
 802965c:	dd08      	ble.n	8029670 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 802965e:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029662:	4288      	cmp	r0, r1
 8029664:	f0c0 8163 	bcc.w	802992e <_ZN8touchgfx7Outline10renderLineEiiii+0x846>
 8029668:	f04f 0101 	mov.w	r1, #1
 802966c:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8029670:	82a2      	strh	r2, [r4, #20]
 8029672:	82e3      	strh	r3, [r4, #22]
 8029674:	f8a4 a018 	strh.w	sl, [r4, #24]
 8029678:	f8a4 a01a 	strh.w	sl, [r4, #26]
 802967c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802967e:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
 8029682:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 8029686:	4499      	add	r9, r3
 8029688:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802968c:	fa0f f589 	sxth.w	r5, r9
 8029690:	eb01 4102 	add.w	r1, r1, r2, lsl #16
 8029694:	eb03 4005 	add.w	r0, r3, r5, lsl #16
 8029698:	4281      	cmp	r1, r0
 802969a:	f43f add8 	beq.w	802924e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 802969e:	8b60      	ldrh	r0, [r4, #26]
 80296a0:	8b21      	ldrh	r1, [r4, #24]
 80296a2:	4301      	orrs	r1, r0
 80296a4:	d00d      	beq.n	80296c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 80296a6:	2a00      	cmp	r2, #0
 80296a8:	db0b      	blt.n	80296c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 80296aa:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80296ac:	428a      	cmp	r2, r1
 80296ae:	da08      	bge.n	80296c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 80296b0:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 80296b4:	4291      	cmp	r1, r2
 80296b6:	f0c0 8230 	bcc.w	8029b1a <_ZN8touchgfx7Outline10renderLineEiiii+0xa32>
 80296ba:	f04f 0201 	mov.w	r2, #1
 80296be:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 80296c2:	82a3      	strh	r3, [r4, #20]
 80296c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80296c6:	82e5      	strh	r5, [r4, #22]
 80296c8:	454b      	cmp	r3, r9
 80296ca:	f8a4 a018 	strh.w	sl, [r4, #24]
 80296ce:	f8a4 a01a 	strh.w	sl, [r4, #26]
 80296d2:	f8dd c004 	ldr.w	ip, [sp, #4]
 80296d6:	d193      	bne.n	8029600 <_ZN8touchgfx7Outline10renderLineEiiii+0x518>
 80296d8:	9b02      	ldr	r3, [sp, #8]
 80296da:	f1c3 0e20 	rsb	lr, r3, #32
 80296de:	9b04      	ldr	r3, [sp, #16]
 80296e0:	ea4f 1b63 	mov.w	fp, r3, asr #5
 80296e4:	9b03      	ldr	r3, [sp, #12]
 80296e6:	459e      	cmp	lr, r3
 80296e8:	f040 8231 	bne.w	8029b4e <_ZN8touchgfx7Outline10renderLineEiiii+0xa66>
 80296ec:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 80296f0:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 80296f4:	fa0f f58b 	sxth.w	r5, fp
 80296f8:	fa0f f289 	sxth.w	r2, r9
 80296fc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8029700:	eb05 4002 	add.w	r0, r5, r2, lsl #16
 8029704:	4281      	cmp	r1, r0
 8029706:	f43f ae22 	beq.w	802934e <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 802970a:	8b60      	ldrh	r0, [r4, #26]
 802970c:	8b21      	ldrh	r1, [r4, #24]
 802970e:	4301      	orrs	r1, r0
 8029710:	d00c      	beq.n	802972c <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 8029712:	2b00      	cmp	r3, #0
 8029714:	db0a      	blt.n	802972c <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 8029716:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029718:	428b      	cmp	r3, r1
 802971a:	da07      	bge.n	802972c <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 802971c:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8029720:	4299      	cmp	r1, r3
 8029722:	f0c0 8207 	bcc.w	8029b34 <_ZN8touchgfx7Outline10renderLineEiiii+0xa4c>
 8029726:	2301      	movs	r3, #1
 8029728:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802972c:	82a5      	strh	r5, [r4, #20]
 802972e:	e535      	b.n	802919c <_ZN8touchgfx7Outline10renderLineEiiii+0xb4>
 8029730:	f04f 32ff 	mov.w	r2, #4294967295
 8029734:	920b      	str	r2, [sp, #44]	; 0x2c
 8029736:	fb0a f306 	mul.w	r3, sl, r6
 802973a:	f1cb 0b00 	rsb	fp, fp, #0
 802973e:	2200      	movs	r2, #0
 8029740:	e6d9      	b.n	80294f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40e>
 8029742:	f104 0514 	add.w	r5, r4, #20
 8029746:	cd03      	ldmia	r5!, {r0, r1}
 8029748:	6926      	ldr	r6, [r4, #16]
 802974a:	6030      	str	r0, [r6, #0]
 802974c:	6071      	str	r1, [r6, #4]
 802974e:	6921      	ldr	r1, [r4, #16]
 8029750:	3108      	adds	r1, #8
 8029752:	6121      	str	r1, [r4, #16]
 8029754:	68a1      	ldr	r1, [r4, #8]
 8029756:	3101      	adds	r1, #1
 8029758:	60a1      	str	r1, [r4, #8]
 802975a:	e702      	b.n	8029562 <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 802975c:	9b01      	ldr	r3, [sp, #4]
 802975e:	8b20      	ldrh	r0, [r4, #24]
 8029760:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 8029764:	f003 031f 	and.w	r3, r3, #31
 8029768:	930d      	str	r3, [sp, #52]	; 0x34
 802976a:	9b02      	ldr	r3, [sp, #8]
 802976c:	1b9a      	subs	r2, r3, r6
 802976e:	9b05      	ldr	r3, [sp, #20]
 8029770:	42ab      	cmp	r3, r5
 8029772:	f001 011f 	and.w	r1, r1, #31
 8029776:	d107      	bne.n	8029788 <_ZN8touchgfx7Outline10renderLineEiiii+0x6a0>
 8029778:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802977a:	4419      	add	r1, r3
 802977c:	4410      	add	r0, r2
 802977e:	fb02 9201 	mla	r2, r2, r1, r9
 8029782:	8320      	strh	r0, [r4, #24]
 8029784:	8362      	strh	r2, [r4, #26]
 8029786:	e6f1      	b.n	802956c <_ZN8touchgfx7Outline10renderLineEiiii+0x484>
 8029788:	f1bc 0f00 	cmp.w	ip, #0
 802978c:	f2c0 8099 	blt.w	80298c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x7da>
 8029790:	f1c1 0320 	rsb	r3, r1, #32
 8029794:	435a      	muls	r2, r3
 8029796:	2301      	movs	r3, #1
 8029798:	9309      	str	r3, [sp, #36]	; 0x24
 802979a:	2320      	movs	r3, #32
 802979c:	9307      	str	r3, [sp, #28]
 802979e:	fb92 fefc 	sdiv	lr, r2, ip
 80297a2:	9b07      	ldr	r3, [sp, #28]
 80297a4:	fb0c 221e 	mls	r2, ip, lr, r2
 80297a8:	2a00      	cmp	r2, #0
 80297aa:	bfb8      	it	lt
 80297ac:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 80297b0:	4419      	add	r1, r3
 80297b2:	fb0e 9101 	mla	r1, lr, r1, r9
 80297b6:	b20b      	sxth	r3, r1
 80297b8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80297ba:	8363      	strh	r3, [r4, #26]
 80297bc:	440d      	add	r5, r1
 80297be:	f9bd 1000 	ldrsh.w	r1, [sp]
 80297c2:	9106      	str	r1, [sp, #24]
 80297c4:	fa0f f985 	sxth.w	r9, r5
 80297c8:	ea4f 4101 	mov.w	r1, r1, lsl #16
 80297cc:	4470      	add	r0, lr
 80297ce:	910a      	str	r1, [sp, #40]	; 0x28
 80297d0:	4449      	add	r1, r9
 80297d2:	bfb8      	it	lt
 80297d4:	4462      	addlt	r2, ip
 80297d6:	b200      	sxth	r0, r0
 80297d8:	42b9      	cmp	r1, r7
 80297da:	8320      	strh	r0, [r4, #24]
 80297dc:	f43f ad37 	beq.w	802924e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80297e0:	4303      	orrs	r3, r0
 80297e2:	d00c      	beq.n	80297fe <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 80297e4:	f1b8 0f00 	cmp.w	r8, #0
 80297e8:	db09      	blt.n	80297fe <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 80297ea:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80297ec:	4543      	cmp	r3, r8
 80297ee:	dd06      	ble.n	80297fe <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 80297f0:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 80297f4:	4299      	cmp	r1, r3
 80297f6:	d36c      	bcc.n	80298d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ea>
 80297f8:	2301      	movs	r3, #1
 80297fa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80297fe:	9b06      	ldr	r3, [sp, #24]
 8029800:	82e3      	strh	r3, [r4, #22]
 8029802:	2300      	movs	r3, #0
 8029804:	8323      	strh	r3, [r4, #24]
 8029806:	8363      	strh	r3, [r4, #26]
 8029808:	9b05      	ldr	r3, [sp, #20]
 802980a:	f8a4 9014 	strh.w	r9, [r4, #20]
 802980e:	42ab      	cmp	r3, r5
 8029810:	4476      	add	r6, lr
 8029812:	d04c      	beq.n	80298ae <_ZN8touchgfx7Outline10renderLineEiiii+0x7c6>
 8029814:	9b02      	ldr	r3, [sp, #8]
 8029816:	1b9b      	subs	r3, r3, r6
 8029818:	4473      	add	r3, lr
 802981a:	015b      	lsls	r3, r3, #5
 802981c:	fb93 f8fc 	sdiv	r8, r3, ip
 8029820:	fb0c 3318 	mls	r3, ip, r8, r3
 8029824:	2b00      	cmp	r3, #0
 8029826:	bfb8      	it	lt
 8029828:	f108 38ff 	addlt.w	r8, r8, #4294967295
 802982c:	f108 0101 	add.w	r1, r8, #1
 8029830:	bfb8      	it	lt
 8029832:	4463      	addlt	r3, ip
 8029834:	eba2 020c 	sub.w	r2, r2, ip
 8029838:	910f      	str	r1, [sp, #60]	; 0x3c
 802983a:	18d2      	adds	r2, r2, r3
 802983c:	bf58      	it	pl
 802983e:	980f      	ldrpl	r0, [sp, #60]	; 0x3c
 8029840:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8029842:	bf48      	it	mi
 8029844:	4640      	movmi	r0, r8
 8029846:	fa0f fe80 	sxth.w	lr, r0
 802984a:	ea4f 1140 	mov.w	r1, r0, lsl #5
 802984e:	4406      	add	r6, r0
 8029850:	9809      	ldr	r0, [sp, #36]	; 0x24
 8029852:	f8a4 e018 	strh.w	lr, [r4, #24]
 8029856:	4405      	add	r5, r0
 8029858:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 802985c:	fa0f f985 	sxth.w	r9, r5
 8029860:	4438      	add	r0, r7
 8029862:	444f      	add	r7, r9
 8029864:	bf58      	it	pl
 8029866:	eba2 020c 	subpl.w	r2, r2, ip
 802986a:	b209      	sxth	r1, r1
 802986c:	42b8      	cmp	r0, r7
 802986e:	8361      	strh	r1, [r4, #26]
 8029870:	f43f aced 	beq.w	802924e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8029874:	ea5e 0101 	orrs.w	r1, lr, r1
 8029878:	d00e      	beq.n	8029898 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 802987a:	9906      	ldr	r1, [sp, #24]
 802987c:	2900      	cmp	r1, #0
 802987e:	db0b      	blt.n	8029898 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 8029880:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029882:	9806      	ldr	r0, [sp, #24]
 8029884:	4288      	cmp	r0, r1
 8029886:	da07      	bge.n	8029898 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 8029888:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802988c:	4288      	cmp	r0, r1
 802988e:	d330      	bcc.n	80298f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x80a>
 8029890:	f04f 0101 	mov.w	r1, #1
 8029894:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8029898:	9906      	ldr	r1, [sp, #24]
 802989a:	82e1      	strh	r1, [r4, #22]
 802989c:	f04f 0100 	mov.w	r1, #0
 80298a0:	8321      	strh	r1, [r4, #24]
 80298a2:	8361      	strh	r1, [r4, #26]
 80298a4:	9905      	ldr	r1, [sp, #20]
 80298a6:	f8a4 9014 	strh.w	r9, [r4, #20]
 80298aa:	42a9      	cmp	r1, r5
 80298ac:	d1c5      	bne.n	802983a <_ZN8touchgfx7Outline10renderLineEiiii+0x752>
 80298ae:	9b02      	ldr	r3, [sp, #8]
 80298b0:	990d      	ldr	r1, [sp, #52]	; 0x34
 80298b2:	1b9e      	subs	r6, r3, r6
 80298b4:	9b07      	ldr	r3, [sp, #28]
 80298b6:	8326      	strh	r6, [r4, #24]
 80298b8:	3120      	adds	r1, #32
 80298ba:	1ac9      	subs	r1, r1, r3
 80298bc:	434e      	muls	r6, r1
 80298be:	8366      	strh	r6, [r4, #26]
 80298c0:	e654      	b.n	802956c <_ZN8touchgfx7Outline10renderLineEiiii+0x484>
 80298c2:	f04f 33ff 	mov.w	r3, #4294967295
 80298c6:	9309      	str	r3, [sp, #36]	; 0x24
 80298c8:	434a      	muls	r2, r1
 80298ca:	f1cc 0c00 	rsb	ip, ip, #0
 80298ce:	2300      	movs	r3, #0
 80298d0:	e764      	b.n	802979c <_ZN8touchgfx7Outline10renderLineEiiii+0x6b4>
 80298d2:	f104 0314 	add.w	r3, r4, #20
 80298d6:	cb03      	ldmia	r3!, {r0, r1}
 80298d8:	f8d4 8010 	ldr.w	r8, [r4, #16]
 80298dc:	f8c8 0000 	str.w	r0, [r8]
 80298e0:	f8c8 1004 	str.w	r1, [r8, #4]
 80298e4:	6923      	ldr	r3, [r4, #16]
 80298e6:	3308      	adds	r3, #8
 80298e8:	6123      	str	r3, [r4, #16]
 80298ea:	68a3      	ldr	r3, [r4, #8]
 80298ec:	3301      	adds	r3, #1
 80298ee:	60a3      	str	r3, [r4, #8]
 80298f0:	e785      	b.n	80297fe <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 80298f2:	6921      	ldr	r1, [r4, #16]
 80298f4:	910e      	str	r1, [sp, #56]	; 0x38
 80298f6:	f104 0e14 	add.w	lr, r4, #20
 80298fa:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 80298fe:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8029900:	6038      	str	r0, [r7, #0]
 8029902:	6079      	str	r1, [r7, #4]
 8029904:	6921      	ldr	r1, [r4, #16]
 8029906:	3108      	adds	r1, #8
 8029908:	6121      	str	r1, [r4, #16]
 802990a:	68a1      	ldr	r1, [r4, #8]
 802990c:	3101      	adds	r1, #1
 802990e:	4638      	mov	r0, r7
 8029910:	60a1      	str	r1, [r4, #8]
 8029912:	e7c1      	b.n	8029898 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 8029914:	f104 0214 	add.w	r2, r4, #20
 8029918:	ca03      	ldmia	r2!, {r0, r1}
 802991a:	6926      	ldr	r6, [r4, #16]
 802991c:	6030      	str	r0, [r6, #0]
 802991e:	6071      	str	r1, [r6, #4]
 8029920:	6922      	ldr	r2, [r4, #16]
 8029922:	3208      	adds	r2, #8
 8029924:	6122      	str	r2, [r4, #16]
 8029926:	68a2      	ldr	r2, [r4, #8]
 8029928:	3201      	adds	r2, #1
 802992a:	60a2      	str	r2, [r4, #8]
 802992c:	e641      	b.n	80295b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 802992e:	f104 0514 	add.w	r5, r4, #20
 8029932:	cd03      	ldmia	r5!, {r0, r1}
 8029934:	6926      	ldr	r6, [r4, #16]
 8029936:	6030      	str	r0, [r6, #0]
 8029938:	6071      	str	r1, [r6, #4]
 802993a:	6921      	ldr	r1, [r4, #16]
 802993c:	3108      	adds	r1, #8
 802993e:	6121      	str	r1, [r4, #16]
 8029940:	68a1      	ldr	r1, [r4, #8]
 8029942:	3101      	adds	r1, #1
 8029944:	60a1      	str	r1, [r4, #8]
 8029946:	e693      	b.n	8029670 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 8029948:	9b01      	ldr	r3, [sp, #4]
 802994a:	8b20      	ldrh	r0, [r4, #24]
 802994c:	f8b4 e01a 	ldrh.w	lr, [r4, #26]
 8029950:	f003 031f 	and.w	r3, r3, #31
 8029954:	9310      	str	r3, [sp, #64]	; 0x40
 8029956:	9b06      	ldr	r3, [sp, #24]
 8029958:	ea4f 176c 	mov.w	r7, ip, asr #5
 802995c:	429f      	cmp	r7, r3
 802995e:	f00c 0c1f 	and.w	ip, ip, #31
 8029962:	d10a      	bne.n	802997a <_ZN8touchgfx7Outline10renderLineEiiii+0x892>
 8029964:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029966:	4418      	add	r0, r3
 8029968:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802996a:	8320      	strh	r0, [r4, #24]
 802996c:	449c      	add	ip, r3
 802996e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029970:	fb03 ee0c 	mla	lr, r3, ip, lr
 8029974:	f8a4 e01a 	strh.w	lr, [r4, #26]
 8029978:	e680      	b.n	802967c <_ZN8touchgfx7Outline10renderLineEiiii+0x594>
 802997a:	9b00      	ldr	r3, [sp, #0]
 802997c:	2b00      	cmp	r3, #0
 802997e:	f2c0 80a2 	blt.w	8029ac6 <_ZN8touchgfx7Outline10renderLineEiiii+0x9de>
 8029982:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029984:	f1cc 0320 	rsb	r3, ip, #32
 8029988:	434b      	muls	r3, r1
 802998a:	2101      	movs	r1, #1
 802998c:	910e      	str	r1, [sp, #56]	; 0x38
 802998e:	2120      	movs	r1, #32
 8029990:	9a00      	ldr	r2, [sp, #0]
 8029992:	910d      	str	r1, [sp, #52]	; 0x34
 8029994:	fb93 f5f2 	sdiv	r5, r3, r2
 8029998:	990d      	ldr	r1, [sp, #52]	; 0x34
 802999a:	fb02 3315 	mls	r3, r2, r5, r3
 802999e:	2b00      	cmp	r3, #0
 80299a0:	bfbc      	itt	lt
 80299a2:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80299a6:	189b      	addlt	r3, r3, r2
 80299a8:	448c      	add	ip, r1
 80299aa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80299ac:	fb05 ec0c 	mla	ip, r5, ip, lr
 80299b0:	fa0f f18c 	sxth.w	r1, ip
 80299b4:	4417      	add	r7, r2
 80299b6:	fa0f fc89 	sxth.w	ip, r9
 80299ba:	ea4f 420c 	mov.w	r2, ip, lsl #16
 80299be:	fa0f fe87 	sxth.w	lr, r7
 80299c2:	4428      	add	r0, r5
 80299c4:	920f      	str	r2, [sp, #60]	; 0x3c
 80299c6:	4472      	add	r2, lr
 80299c8:	b200      	sxth	r0, r0
 80299ca:	4542      	cmp	r2, r8
 80299cc:	8320      	strh	r0, [r4, #24]
 80299ce:	8361      	strh	r1, [r4, #26]
 80299d0:	f43f ac3d 	beq.w	802924e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80299d4:	ea50 0201 	orrs.w	r2, r0, r1
 80299d8:	d00c      	beq.n	80299f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 80299da:	2e00      	cmp	r6, #0
 80299dc:	db0a      	blt.n	80299f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 80299de:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80299e0:	42b1      	cmp	r1, r6
 80299e2:	dd07      	ble.n	80299f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 80299e4:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80299e8:	4288      	cmp	r0, r1
 80299ea:	d377      	bcc.n	8029adc <_ZN8touchgfx7Outline10renderLineEiiii+0x9f4>
 80299ec:	f04f 0201 	mov.w	r2, #1
 80299f0:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 80299f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80299f6:	f8a4 e014 	strh.w	lr, [r4, #20]
 80299fa:	1956      	adds	r6, r2, r5
 80299fc:	9a06      	ldr	r2, [sp, #24]
 80299fe:	f8a4 c016 	strh.w	ip, [r4, #22]
 8029a02:	42ba      	cmp	r2, r7
 8029a04:	f8a4 a018 	strh.w	sl, [r4, #24]
 8029a08:	f8a4 a01a 	strh.w	sl, [r4, #26]
 8029a0c:	d04e      	beq.n	8029aac <_ZN8touchgfx7Outline10renderLineEiiii+0x9c4>
 8029a0e:	9a02      	ldr	r2, [sp, #8]
 8029a10:	1b91      	subs	r1, r2, r6
 8029a12:	440d      	add	r5, r1
 8029a14:	9a00      	ldr	r2, [sp, #0]
 8029a16:	016d      	lsls	r5, r5, #5
 8029a18:	fb95 fef2 	sdiv	lr, r5, r2
 8029a1c:	fb02 551e 	mls	r5, r2, lr, r5
 8029a20:	2d00      	cmp	r5, #0
 8029a22:	bfb8      	it	lt
 8029a24:	18ad      	addlt	r5, r5, r2
 8029a26:	9a00      	ldr	r2, [sp, #0]
 8029a28:	bfb8      	it	lt
 8029a2a:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8029a2e:	1a9b      	subs	r3, r3, r2
 8029a30:	f10e 0201 	add.w	r2, lr, #1
 8029a34:	9213      	str	r2, [sp, #76]	; 0x4c
 8029a36:	195b      	adds	r3, r3, r5
 8029a38:	bf5e      	ittt	pl
 8029a3a:	9a00      	ldrpl	r2, [sp, #0]
 8029a3c:	9813      	ldrpl	r0, [sp, #76]	; 0x4c
 8029a3e:	1a9b      	subpl	r3, r3, r2
 8029a40:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029a42:	4417      	add	r7, r2
 8029a44:	bf48      	it	mi
 8029a46:	4670      	movmi	r0, lr
 8029a48:	b23a      	sxth	r2, r7
 8029a4a:	fa0f f880 	sxth.w	r8, r0
 8029a4e:	0141      	lsls	r1, r0, #5
 8029a50:	9211      	str	r2, [sp, #68]	; 0x44
 8029a52:	4406      	add	r6, r0
 8029a54:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029a56:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 8029a5a:	f8a4 8018 	strh.w	r8, [r4, #24]
 8029a5e:	1882      	adds	r2, r0, r2
 8029a60:	9212      	str	r2, [sp, #72]	; 0x48
 8029a62:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8029a64:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029a66:	4402      	add	r2, r0
 8029a68:	9812      	ldr	r0, [sp, #72]	; 0x48
 8029a6a:	b209      	sxth	r1, r1
 8029a6c:	4290      	cmp	r0, r2
 8029a6e:	8361      	strh	r1, [r4, #26]
 8029a70:	f43f abed 	beq.w	802924e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8029a74:	ea58 0201 	orrs.w	r2, r8, r1
 8029a78:	d00d      	beq.n	8029a96 <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8029a7a:	f1bc 0f00 	cmp.w	ip, #0
 8029a7e:	db0a      	blt.n	8029a96 <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8029a80:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029a82:	458c      	cmp	ip, r1
 8029a84:	da07      	bge.n	8029a96 <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8029a86:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029a8a:	4288      	cmp	r0, r1
 8029a8c:	d336      	bcc.n	8029afc <_ZN8touchgfx7Outline10renderLineEiiii+0xa14>
 8029a8e:	f04f 0201 	mov.w	r2, #1
 8029a92:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8029a96:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029a98:	82a2      	strh	r2, [r4, #20]
 8029a9a:	9a06      	ldr	r2, [sp, #24]
 8029a9c:	f8a4 c016 	strh.w	ip, [r4, #22]
 8029aa0:	42ba      	cmp	r2, r7
 8029aa2:	f8a4 a018 	strh.w	sl, [r4, #24]
 8029aa6:	f8a4 a01a 	strh.w	sl, [r4, #26]
 8029aaa:	d1c4      	bne.n	8029a36 <_ZN8touchgfx7Outline10renderLineEiiii+0x94e>
 8029aac:	9b02      	ldr	r3, [sp, #8]
 8029aae:	1b9e      	subs	r6, r3, r6
 8029ab0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8029ab2:	8326      	strh	r6, [r4, #24]
 8029ab4:	f103 0c20 	add.w	ip, r3, #32
 8029ab8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8029aba:	ebac 0c03 	sub.w	ip, ip, r3
 8029abe:	fb06 f60c 	mul.w	r6, r6, ip
 8029ac2:	8366      	strh	r6, [r4, #26]
 8029ac4:	e5da      	b.n	802967c <_ZN8touchgfx7Outline10renderLineEiiii+0x594>
 8029ac6:	9a00      	ldr	r2, [sp, #0]
 8029ac8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029aca:	f04f 31ff 	mov.w	r1, #4294967295
 8029ace:	4252      	negs	r2, r2
 8029ad0:	910e      	str	r1, [sp, #56]	; 0x38
 8029ad2:	fb03 f30c 	mul.w	r3, r3, ip
 8029ad6:	9200      	str	r2, [sp, #0]
 8029ad8:	2100      	movs	r1, #0
 8029ada:	e759      	b.n	8029990 <_ZN8touchgfx7Outline10renderLineEiiii+0x8a8>
 8029adc:	f104 0614 	add.w	r6, r4, #20
 8029ae0:	ce03      	ldmia	r6!, {r0, r1}
 8029ae2:	f8d4 8010 	ldr.w	r8, [r4, #16]
 8029ae6:	f8c8 0000 	str.w	r0, [r8]
 8029aea:	f8c8 1004 	str.w	r1, [r8, #4]
 8029aee:	6921      	ldr	r1, [r4, #16]
 8029af0:	3108      	adds	r1, #8
 8029af2:	6121      	str	r1, [r4, #16]
 8029af4:	68a1      	ldr	r1, [r4, #8]
 8029af6:	3101      	adds	r1, #1
 8029af8:	60a1      	str	r1, [r4, #8]
 8029afa:	e77b      	b.n	80299f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 8029afc:	f104 0814 	add.w	r8, r4, #20
 8029b00:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 8029b04:	6922      	ldr	r2, [r4, #16]
 8029b06:	9212      	str	r2, [sp, #72]	; 0x48
 8029b08:	6010      	str	r0, [r2, #0]
 8029b0a:	6051      	str	r1, [r2, #4]
 8029b0c:	6921      	ldr	r1, [r4, #16]
 8029b0e:	3108      	adds	r1, #8
 8029b10:	6121      	str	r1, [r4, #16]
 8029b12:	68a1      	ldr	r1, [r4, #8]
 8029b14:	3101      	adds	r1, #1
 8029b16:	60a1      	str	r1, [r4, #8]
 8029b18:	e7bd      	b.n	8029a96 <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8029b1a:	f104 0214 	add.w	r2, r4, #20
 8029b1e:	ca03      	ldmia	r2!, {r0, r1}
 8029b20:	6926      	ldr	r6, [r4, #16]
 8029b22:	6030      	str	r0, [r6, #0]
 8029b24:	6071      	str	r1, [r6, #4]
 8029b26:	6922      	ldr	r2, [r4, #16]
 8029b28:	3208      	adds	r2, #8
 8029b2a:	6122      	str	r2, [r4, #16]
 8029b2c:	68a2      	ldr	r2, [r4, #8]
 8029b2e:	3201      	adds	r2, #1
 8029b30:	60a2      	str	r2, [r4, #8]
 8029b32:	e5c6      	b.n	80296c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 8029b34:	f104 0314 	add.w	r3, r4, #20
 8029b38:	cb03      	ldmia	r3!, {r0, r1}
 8029b3a:	6926      	ldr	r6, [r4, #16]
 8029b3c:	6030      	str	r0, [r6, #0]
 8029b3e:	6071      	str	r1, [r6, #4]
 8029b40:	6923      	ldr	r3, [r4, #16]
 8029b42:	3308      	adds	r3, #8
 8029b44:	6123      	str	r3, [r4, #16]
 8029b46:	68a3      	ldr	r3, [r4, #8]
 8029b48:	3301      	adds	r3, #1
 8029b4a:	60a3      	str	r3, [r4, #8]
 8029b4c:	e5ee      	b.n	802972c <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 8029b4e:	9b01      	ldr	r3, [sp, #4]
 8029b50:	8b20      	ldrh	r0, [r4, #24]
 8029b52:	8b66      	ldrh	r6, [r4, #26]
 8029b54:	ea4f 1c63 	mov.w	ip, r3, asr #5
 8029b58:	f003 021f 	and.w	r2, r3, #31
 8029b5c:	9b04      	ldr	r3, [sp, #16]
 8029b5e:	f003 031f 	and.w	r3, r3, #31
 8029b62:	9305      	str	r3, [sp, #20]
 8029b64:	9b03      	ldr	r3, [sp, #12]
 8029b66:	45dc      	cmp	ip, fp
 8029b68:	eba3 050e 	sub.w	r5, r3, lr
 8029b6c:	d108      	bne.n	8029b80 <_ZN8touchgfx7Outline10renderLineEiiii+0xa98>
 8029b6e:	9b05      	ldr	r3, [sp, #20]
 8029b70:	441a      	add	r2, r3
 8029b72:	4428      	add	r0, r5
 8029b74:	fb05 6502 	mla	r5, r5, r2, r6
 8029b78:	8320      	strh	r0, [r4, #24]
 8029b7a:	8365      	strh	r5, [r4, #26]
 8029b7c:	f7ff bbe7 	b.w	802934e <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 8029b80:	9b04      	ldr	r3, [sp, #16]
 8029b82:	9901      	ldr	r1, [sp, #4]
 8029b84:	1a5b      	subs	r3, r3, r1
 8029b86:	9300      	str	r3, [sp, #0]
 8029b88:	f100 809f 	bmi.w	8029cca <_ZN8touchgfx7Outline10renderLineEiiii+0xbe2>
 8029b8c:	f1c2 0120 	rsb	r1, r2, #32
 8029b90:	434d      	muls	r5, r1
 8029b92:	2101      	movs	r1, #1
 8029b94:	9102      	str	r1, [sp, #8]
 8029b96:	2120      	movs	r1, #32
 8029b98:	9b00      	ldr	r3, [sp, #0]
 8029b9a:	9101      	str	r1, [sp, #4]
 8029b9c:	fb95 f7f3 	sdiv	r7, r5, r3
 8029ba0:	9901      	ldr	r1, [sp, #4]
 8029ba2:	fb03 5517 	mls	r5, r3, r7, r5
 8029ba6:	2d00      	cmp	r5, #0
 8029ba8:	bfb8      	it	lt
 8029baa:	f107 37ff 	addlt.w	r7, r7, #4294967295
 8029bae:	440a      	add	r2, r1
 8029bb0:	fb07 6202 	mla	r2, r7, r2, r6
 8029bb4:	b211      	sxth	r1, r2
 8029bb6:	9a02      	ldr	r2, [sp, #8]
 8029bb8:	f9b4 6016 	ldrsh.w	r6, [r4, #22]
 8029bbc:	8361      	strh	r1, [r4, #26]
 8029bbe:	4494      	add	ip, r2
 8029bc0:	fa0f f289 	sxth.w	r2, r9
 8029bc4:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 8029bc8:	bfb8      	it	lt
 8029bca:	18ed      	addlt	r5, r5, r3
 8029bcc:	fa0f f88c 	sxth.w	r8, ip
 8029bd0:	0413      	lsls	r3, r2, #16
 8029bd2:	4438      	add	r0, r7
 8029bd4:	eb09 4906 	add.w	r9, r9, r6, lsl #16
 8029bd8:	eb08 0a03 	add.w	sl, r8, r3
 8029bdc:	b200      	sxth	r0, r0
 8029bde:	45d1      	cmp	r9, sl
 8029be0:	8320      	strh	r0, [r4, #24]
 8029be2:	9304      	str	r3, [sp, #16]
 8029be4:	f43f ab33 	beq.w	802924e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8029be8:	ea50 0301 	orrs.w	r3, r0, r1
 8029bec:	d00b      	beq.n	8029c06 <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8029bee:	2e00      	cmp	r6, #0
 8029bf0:	db09      	blt.n	8029c06 <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8029bf2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029bf4:	428e      	cmp	r6, r1
 8029bf6:	da06      	bge.n	8029c06 <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8029bf8:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029bfc:	4288      	cmp	r0, r1
 8029bfe:	d36d      	bcc.n	8029cdc <_ZN8touchgfx7Outline10renderLineEiiii+0xbf4>
 8029c00:	2101      	movs	r1, #1
 8029c02:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8029c06:	2100      	movs	r1, #0
 8029c08:	45e3      	cmp	fp, ip
 8029c0a:	f8a4 8014 	strh.w	r8, [r4, #20]
 8029c0e:	82e2      	strh	r2, [r4, #22]
 8029c10:	8321      	strh	r1, [r4, #24]
 8029c12:	8361      	strh	r1, [r4, #26]
 8029c14:	44be      	add	lr, r7
 8029c16:	d049      	beq.n	8029cac <_ZN8touchgfx7Outline10renderLineEiiii+0xbc4>
 8029c18:	9b03      	ldr	r3, [sp, #12]
 8029c1a:	eba3 060e 	sub.w	r6, r3, lr
 8029c1e:	443e      	add	r6, r7
 8029c20:	9b00      	ldr	r3, [sp, #0]
 8029c22:	0176      	lsls	r6, r6, #5
 8029c24:	fb96 f7f3 	sdiv	r7, r6, r3
 8029c28:	fb03 6617 	mls	r6, r3, r7, r6
 8029c2c:	428e      	cmp	r6, r1
 8029c2e:	bfb8      	it	lt
 8029c30:	18f6      	addlt	r6, r6, r3
 8029c32:	9b00      	ldr	r3, [sp, #0]
 8029c34:	bfb8      	it	lt
 8029c36:	f107 37ff 	addlt.w	r7, r7, #4294967295
 8029c3a:	1aed      	subs	r5, r5, r3
 8029c3c:	1c7b      	adds	r3, r7, #1
 8029c3e:	9307      	str	r3, [sp, #28]
 8029c40:	f04f 0900 	mov.w	r9, #0
 8029c44:	19ad      	adds	r5, r5, r6
 8029c46:	bf5e      	ittt	pl
 8029c48:	9b00      	ldrpl	r3, [sp, #0]
 8029c4a:	9807      	ldrpl	r0, [sp, #28]
 8029c4c:	1aed      	subpl	r5, r5, r3
 8029c4e:	9b02      	ldr	r3, [sp, #8]
 8029c50:	bf48      	it	mi
 8029c52:	4638      	movmi	r0, r7
 8029c54:	fa0f f880 	sxth.w	r8, r0
 8029c58:	0141      	lsls	r1, r0, #5
 8029c5a:	449c      	add	ip, r3
 8029c5c:	4486      	add	lr, r0
 8029c5e:	9b04      	ldr	r3, [sp, #16]
 8029c60:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 8029c64:	f8a4 8018 	strh.w	r8, [r4, #24]
 8029c68:	fa0f fa8c 	sxth.w	sl, ip
 8029c6c:	4418      	add	r0, r3
 8029c6e:	4453      	add	r3, sl
 8029c70:	b209      	sxth	r1, r1
 8029c72:	4298      	cmp	r0, r3
 8029c74:	8361      	strh	r1, [r4, #26]
 8029c76:	f43f aaea 	beq.w	802924e <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8029c7a:	ea58 0301 	orrs.w	r3, r8, r1
 8029c7e:	d00c      	beq.n	8029c9a <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8029c80:	2a00      	cmp	r2, #0
 8029c82:	db0a      	blt.n	8029c9a <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8029c84:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8029c86:	428a      	cmp	r2, r1
 8029c88:	da07      	bge.n	8029c9a <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8029c8a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8029c8e:	4288      	cmp	r0, r1
 8029c90:	d334      	bcc.n	8029cfc <_ZN8touchgfx7Outline10renderLineEiiii+0xc14>
 8029c92:	f04f 0301 	mov.w	r3, #1
 8029c96:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8029c9a:	45e3      	cmp	fp, ip
 8029c9c:	f8a4 a014 	strh.w	sl, [r4, #20]
 8029ca0:	82e2      	strh	r2, [r4, #22]
 8029ca2:	f8a4 9018 	strh.w	r9, [r4, #24]
 8029ca6:	f8a4 901a 	strh.w	r9, [r4, #26]
 8029caa:	d1cb      	bne.n	8029c44 <_ZN8touchgfx7Outline10renderLineEiiii+0xb5c>
 8029cac:	9b03      	ldr	r3, [sp, #12]
 8029cae:	9e05      	ldr	r6, [sp, #20]
 8029cb0:	eba3 0e0e 	sub.w	lr, r3, lr
 8029cb4:	9b01      	ldr	r3, [sp, #4]
 8029cb6:	f8a4 e018 	strh.w	lr, [r4, #24]
 8029cba:	3620      	adds	r6, #32
 8029cbc:	1af6      	subs	r6, r6, r3
 8029cbe:	fb0e fe06 	mul.w	lr, lr, r6
 8029cc2:	f8a4 e01a 	strh.w	lr, [r4, #26]
 8029cc6:	f7ff bb42 	b.w	802934e <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 8029cca:	9b00      	ldr	r3, [sp, #0]
 8029ccc:	f04f 31ff 	mov.w	r1, #4294967295
 8029cd0:	425b      	negs	r3, r3
 8029cd2:	9102      	str	r1, [sp, #8]
 8029cd4:	4355      	muls	r5, r2
 8029cd6:	9300      	str	r3, [sp, #0]
 8029cd8:	2100      	movs	r1, #0
 8029cda:	e75d      	b.n	8029b98 <_ZN8touchgfx7Outline10renderLineEiiii+0xab0>
 8029cdc:	f104 0614 	add.w	r6, r4, #20
 8029ce0:	ce03      	ldmia	r6!, {r0, r1}
 8029ce2:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8029ce6:	f8c9 0000 	str.w	r0, [r9]
 8029cea:	f8c9 1004 	str.w	r1, [r9, #4]
 8029cee:	6921      	ldr	r1, [r4, #16]
 8029cf0:	3108      	adds	r1, #8
 8029cf2:	6121      	str	r1, [r4, #16]
 8029cf4:	68a1      	ldr	r1, [r4, #8]
 8029cf6:	3101      	adds	r1, #1
 8029cf8:	60a1      	str	r1, [r4, #8]
 8029cfa:	e784      	b.n	8029c06 <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8029cfc:	f104 0814 	add.w	r8, r4, #20
 8029d00:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 8029d04:	6923      	ldr	r3, [r4, #16]
 8029d06:	9306      	str	r3, [sp, #24]
 8029d08:	6018      	str	r0, [r3, #0]
 8029d0a:	6059      	str	r1, [r3, #4]
 8029d0c:	6921      	ldr	r1, [r4, #16]
 8029d0e:	3108      	adds	r1, #8
 8029d10:	6121      	str	r1, [r4, #16]
 8029d12:	68a1      	ldr	r1, [r4, #8]
 8029d14:	3101      	adds	r1, #1
 8029d16:	60a1      	str	r1, [r4, #8]
 8029d18:	e7bf      	b.n	8029c9a <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8029d1a:	bf00      	nop

08029d1c <_ZN8touchgfx7Outline6lineToEii>:
 8029d1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8029d1e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8029d20:	079b      	lsls	r3, r3, #30
 8029d22:	4604      	mov	r4, r0
 8029d24:	460d      	mov	r5, r1
 8029d26:	4616      	mov	r6, r2
 8029d28:	d526      	bpl.n	8029d78 <_ZN8touchgfx7Outline6lineToEii+0x5c>
 8029d2a:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8029d2e:	ea85 0001 	eor.w	r0, r5, r1
 8029d32:	ea86 0302 	eor.w	r3, r6, r2
 8029d36:	4303      	orrs	r3, r0
 8029d38:	d01e      	beq.n	8029d78 <_ZN8touchgfx7Outline6lineToEii+0x5c>
 8029d3a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8029d3c:	9600      	str	r6, [sp, #0]
 8029d3e:	114b      	asrs	r3, r1, #5
 8029d40:	4283      	cmp	r3, r0
 8029d42:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8029d44:	bfb8      	it	lt
 8029d46:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 8029d48:	3301      	adds	r3, #1
 8029d4a:	4283      	cmp	r3, r0
 8029d4c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8029d4e:	bfc8      	it	gt
 8029d50:	6363      	strgt	r3, [r4, #52]	; 0x34
 8029d52:	116b      	asrs	r3, r5, #5
 8029d54:	4283      	cmp	r3, r0
 8029d56:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8029d58:	bfb8      	it	lt
 8029d5a:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 8029d5c:	3301      	adds	r3, #1
 8029d5e:	4283      	cmp	r3, r0
 8029d60:	bfc8      	it	gt
 8029d62:	6363      	strgt	r3, [r4, #52]	; 0x34
 8029d64:	4620      	mov	r0, r4
 8029d66:	462b      	mov	r3, r5
 8029d68:	f7ff f9be 	bl	80290e8 <_ZN8touchgfx7Outline10renderLineEiiii>
 8029d6c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8029d6e:	e9c4 5607 	strd	r5, r6, [r4, #28]
 8029d72:	f043 0301 	orr.w	r3, r3, #1
 8029d76:	63e3      	str	r3, [r4, #60]	; 0x3c
 8029d78:	b002      	add	sp, #8
 8029d7a:	bd70      	pop	{r4, r5, r6, pc}

08029d7c <_ZN8touchgfx7Outline6moveToEii>:
 8029d7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029d7e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8029d80:	4615      	mov	r5, r2
 8029d82:	079a      	lsls	r2, r3, #30
 8029d84:	4604      	mov	r4, r0
 8029d86:	460e      	mov	r6, r1
 8029d88:	d401      	bmi.n	8029d8e <_ZN8touchgfx7Outline6moveToEii+0x12>
 8029d8a:	f7ff f966 	bl	802905a <_ZN8touchgfx7Outline5resetEv>
 8029d8e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8029d90:	07db      	lsls	r3, r3, #31
 8029d92:	d504      	bpl.n	8029d9e <_ZN8touchgfx7Outline6moveToEii+0x22>
 8029d94:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	; 0x24
 8029d98:	4620      	mov	r0, r4
 8029d9a:	f7ff ffbf 	bl	8029d1c <_ZN8touchgfx7Outline6lineToEii>
 8029d9e:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 8029da2:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 8029da6:	f346 1c4f 	sbfx	ip, r6, #5, #16
 8029daa:	f345 174f 	sbfx	r7, r5, #5, #16
 8029dae:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 8029db2:	eb0c 4107 	add.w	r1, ip, r7, lsl #16
 8029db6:	428a      	cmp	r2, r1
 8029db8:	d015      	beq.n	8029de6 <_ZN8touchgfx7Outline6moveToEii+0x6a>
 8029dba:	8b61      	ldrh	r1, [r4, #26]
 8029dbc:	8b22      	ldrh	r2, [r4, #24]
 8029dbe:	430a      	orrs	r2, r1
 8029dc0:	d00b      	beq.n	8029dda <_ZN8touchgfx7Outline6moveToEii+0x5e>
 8029dc2:	2b00      	cmp	r3, #0
 8029dc4:	db09      	blt.n	8029dda <_ZN8touchgfx7Outline6moveToEii+0x5e>
 8029dc6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8029dc8:	4293      	cmp	r3, r2
 8029dca:	da06      	bge.n	8029dda <_ZN8touchgfx7Outline6moveToEii+0x5e>
 8029dcc:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 8029dd0:	429a      	cmp	r2, r3
 8029dd2:	d30d      	bcc.n	8029df0 <_ZN8touchgfx7Outline6moveToEii+0x74>
 8029dd4:	2301      	movs	r3, #1
 8029dd6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8029dda:	2300      	movs	r3, #0
 8029ddc:	f8a4 c014 	strh.w	ip, [r4, #20]
 8029de0:	82e7      	strh	r7, [r4, #22]
 8029de2:	8323      	strh	r3, [r4, #24]
 8029de4:	8363      	strh	r3, [r4, #26]
 8029de6:	61e6      	str	r6, [r4, #28]
 8029de8:	e9c4 5608 	strd	r5, r6, [r4, #32]
 8029dec:	62a5      	str	r5, [r4, #40]	; 0x28
 8029dee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8029df0:	f104 0314 	add.w	r3, r4, #20
 8029df4:	cb03      	ldmia	r3!, {r0, r1}
 8029df6:	6922      	ldr	r2, [r4, #16]
 8029df8:	6010      	str	r0, [r2, #0]
 8029dfa:	6051      	str	r1, [r2, #4]
 8029dfc:	6923      	ldr	r3, [r4, #16]
 8029dfe:	3308      	adds	r3, #8
 8029e00:	6123      	str	r3, [r4, #16]
 8029e02:	68a3      	ldr	r3, [r4, #8]
 8029e04:	3301      	adds	r3, #1
 8029e06:	60a3      	str	r3, [r4, #8]
 8029e08:	e7e7      	b.n	8029dda <_ZN8touchgfx7Outline6moveToEii+0x5e>

08029e0a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8029e0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029e0e:	b0d1      	sub	sp, #324	; 0x144
 8029e10:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8029e14:	466c      	mov	r4, sp
 8029e16:	1a0d      	subs	r5, r1, r0
 8029e18:	2d48      	cmp	r5, #72	; 0x48
 8029e1a:	f100 0208 	add.w	r2, r0, #8
 8029e1e:	f340 80bb 	ble.w	8029f98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 8029e22:	112d      	asrs	r5, r5, #4
 8029e24:	eb00 03c5 	add.w	r3, r0, r5, lsl #3
 8029e28:	f9b0 8000 	ldrsh.w	r8, [r0]
 8029e2c:	681e      	ldr	r6, [r3, #0]
 8029e2e:	f9b0 e002 	ldrsh.w	lr, [r0, #2]
 8029e32:	6006      	str	r6, [r0, #0]
 8029e34:	685e      	ldr	r6, [r3, #4]
 8029e36:	f9b0 c004 	ldrsh.w	ip, [r0, #4]
 8029e3a:	f9b0 7006 	ldrsh.w	r7, [r0, #6]
 8029e3e:	6046      	str	r6, [r0, #4]
 8029e40:	f820 8035 	strh.w	r8, [r0, r5, lsl #3]
 8029e44:	f8a3 e002 	strh.w	lr, [r3, #2]
 8029e48:	f8a3 c004 	strh.w	ip, [r3, #4]
 8029e4c:	80df      	strh	r7, [r3, #6]
 8029e4e:	f931 cc06 	ldrsh.w	ip, [r1, #-6]
 8029e52:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 8029e56:	f9b0 600a 	ldrsh.w	r6, [r0, #10]
 8029e5a:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8029e5e:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 8029e62:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8029e66:	4565      	cmp	r5, ip
 8029e68:	f1a1 0308 	sub.w	r3, r1, #8
 8029e6c:	da0f      	bge.n	8029e8e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x84>
 8029e6e:	681d      	ldr	r5, [r3, #0]
 8029e70:	f9b0 e00c 	ldrsh.w	lr, [r0, #12]
 8029e74:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
 8029e78:	6015      	str	r5, [r2, #0]
 8029e7a:	685d      	ldr	r5, [r3, #4]
 8029e7c:	6055      	str	r5, [r2, #4]
 8029e7e:	f821 7c08 	strh.w	r7, [r1, #-8]
 8029e82:	f821 6c06 	strh.w	r6, [r1, #-6]
 8029e86:	f821 ec04 	strh.w	lr, [r1, #-4]
 8029e8a:	f821 cc02 	strh.w	ip, [r1, #-2]
 8029e8e:	f9b0 7000 	ldrsh.w	r7, [r0]
 8029e92:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8029e96:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8029e9a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8029e9e:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8029ea2:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 8029ea6:	45ac      	cmp	ip, r5
 8029ea8:	da0d      	bge.n	8029ec6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xbc>
 8029eaa:	6815      	ldr	r5, [r2, #0]
 8029eac:	6005      	str	r5, [r0, #0]
 8029eae:	6855      	ldr	r5, [r2, #4]
 8029eb0:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8029eb4:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8029eb8:	8107      	strh	r7, [r0, #8]
 8029eba:	6045      	str	r5, [r0, #4]
 8029ebc:	8146      	strh	r6, [r0, #10]
 8029ebe:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8029ec2:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8029ec6:	f931 cc06 	ldrsh.w	ip, [r1, #-6]
 8029eca:	f9b0 7000 	ldrsh.w	r7, [r0]
 8029ece:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8029ed2:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8029ed6:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 8029eda:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8029ede:	4565      	cmp	r5, ip
 8029ee0:	da0f      	bge.n	8029f02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 8029ee2:	681d      	ldr	r5, [r3, #0]
 8029ee4:	6005      	str	r5, [r0, #0]
 8029ee6:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8029eea:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8029eee:	685d      	ldr	r5, [r3, #4]
 8029ef0:	6045      	str	r5, [r0, #4]
 8029ef2:	f821 7c08 	strh.w	r7, [r1, #-8]
 8029ef6:	f821 6c06 	strh.w	r6, [r1, #-6]
 8029efa:	f821 ec04 	strh.w	lr, [r1, #-4]
 8029efe:	f821 cc02 	strh.w	ip, [r1, #-2]
 8029f02:	f9b2 9008 	ldrsh.w	r9, [r2, #8]
 8029f06:	f9b2 800a 	ldrsh.w	r8, [r2, #10]
 8029f0a:	f9b0 e000 	ldrsh.w	lr, [r0]
 8029f0e:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8029f12:	eb09 4608 	add.w	r6, r9, r8, lsl #16
 8029f16:	eb0e 4a0c 	add.w	sl, lr, ip, lsl #16
 8029f1a:	f102 0508 	add.w	r5, r2, #8
 8029f1e:	4556      	cmp	r6, sl
 8029f20:	462f      	mov	r7, r5
 8029f22:	db18      	blt.n	8029f56 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x14c>
 8029f24:	3b08      	subs	r3, #8
 8029f26:	f9b3 b002 	ldrsh.w	fp, [r3, #2]
 8029f2a:	f9b3 6000 	ldrsh.w	r6, [r3]
 8029f2e:	eb06 460b 	add.w	r6, r6, fp, lsl #16
 8029f32:	45b2      	cmp	sl, r6
 8029f34:	dbf6      	blt.n	8029f24 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x11a>
 8029f36:	42ab      	cmp	r3, r5
 8029f38:	681e      	ldr	r6, [r3, #0]
 8029f3a:	d30e      	bcc.n	8029f5a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x150>
 8029f3c:	f9b2 700c 	ldrsh.w	r7, [r2, #12]
 8029f40:	f9b2 200e 	ldrsh.w	r2, [r2, #14]
 8029f44:	602e      	str	r6, [r5, #0]
 8029f46:	685e      	ldr	r6, [r3, #4]
 8029f48:	606e      	str	r6, [r5, #4]
 8029f4a:	f8a3 9000 	strh.w	r9, [r3]
 8029f4e:	f8a3 8002 	strh.w	r8, [r3, #2]
 8029f52:	809f      	strh	r7, [r3, #4]
 8029f54:	80da      	strh	r2, [r3, #6]
 8029f56:	462a      	mov	r2, r5
 8029f58:	e7d3      	b.n	8029f02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 8029f5a:	6006      	str	r6, [r0, #0]
 8029f5c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8029f60:	685e      	ldr	r6, [r3, #4]
 8029f62:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8029f66:	6046      	str	r6, [r0, #4]
 8029f68:	80da      	strh	r2, [r3, #6]
 8029f6a:	1b4a      	subs	r2, r1, r5
 8029f6c:	1a1e      	subs	r6, r3, r0
 8029f6e:	10d2      	asrs	r2, r2, #3
 8029f70:	ebb2 0fe6 	cmp.w	r2, r6, asr #3
 8029f74:	bfb8      	it	lt
 8029f76:	e9c4 0300 	strdlt	r0, r3, [r4]
 8029f7a:	f8a3 e000 	strh.w	lr, [r3]
 8029f7e:	f8a3 c002 	strh.w	ip, [r3, #2]
 8029f82:	f8a3 8004 	strh.w	r8, [r3, #4]
 8029f86:	bfaa      	itet	ge
 8029f88:	4607      	movge	r7, r0
 8029f8a:	460b      	movlt	r3, r1
 8029f8c:	e9c4 5100 	strdge	r5, r1, [r4]
 8029f90:	4638      	mov	r0, r7
 8029f92:	3408      	adds	r4, #8
 8029f94:	4619      	mov	r1, r3
 8029f96:	e73e      	b.n	8029e16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 8029f98:	4291      	cmp	r1, r2
 8029f9a:	d926      	bls.n	8029fea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e0>
 8029f9c:	f1a2 0310 	sub.w	r3, r2, #16
 8029fa0:	f9b3 c010 	ldrsh.w	ip, [r3, #16]
 8029fa4:	f9b3 7012 	ldrsh.w	r7, [r3, #18]
 8029fa8:	f9b3 e00a 	ldrsh.w	lr, [r3, #10]
 8029fac:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 8029fb0:	eb0c 4607 	add.w	r6, ip, r7, lsl #16
 8029fb4:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 8029fb8:	42ae      	cmp	r6, r5
 8029fba:	da14      	bge.n	8029fe6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1dc>
 8029fbc:	461d      	mov	r5, r3
 8029fbe:	f9b3 8014 	ldrsh.w	r8, [r3, #20]
 8029fc2:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8029fc6:	611e      	str	r6, [r3, #16]
 8029fc8:	686e      	ldr	r6, [r5, #4]
 8029fca:	f9b3 e016 	ldrsh.w	lr, [r3, #22]
 8029fce:	f8a3 c008 	strh.w	ip, [r3, #8]
 8029fd2:	42a8      	cmp	r0, r5
 8029fd4:	615e      	str	r6, [r3, #20]
 8029fd6:	815f      	strh	r7, [r3, #10]
 8029fd8:	f8a3 800c 	strh.w	r8, [r3, #12]
 8029fdc:	f8a3 e00e 	strh.w	lr, [r3, #14]
 8029fe0:	f1a3 0308 	sub.w	r3, r3, #8
 8029fe4:	d1dc      	bne.n	8029fa0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x196>
 8029fe6:	3208      	adds	r2, #8
 8029fe8:	e7d6      	b.n	8029f98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 8029fea:	466b      	mov	r3, sp
 8029fec:	429c      	cmp	r4, r3
 8029fee:	d903      	bls.n	8029ff8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1ee>
 8029ff0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8029ff4:	3c08      	subs	r4, #8
 8029ff6:	e70e      	b.n	8029e16 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 8029ff8:	b051      	add	sp, #324	; 0x144
 8029ffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029ffe <_ZN8touchgfx7Outline9sortCellsEv>:
 8029ffe:	6881      	ldr	r1, [r0, #8]
 802a000:	b111      	cbz	r1, 802a008 <_ZN8touchgfx7Outline9sortCellsEv+0xa>
 802a002:	68c0      	ldr	r0, [r0, #12]
 802a004:	f7ff bf01 	b.w	8029e0a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 802a008:	4770      	bx	lr

0802a00a <_ZN8touchgfx7Outline8getCellsEv>:
 802a00a:	b510      	push	{r4, lr}
 802a00c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 802a00e:	07da      	lsls	r2, r3, #31
 802a010:	4604      	mov	r4, r0
 802a012:	d507      	bpl.n	802a024 <_ZN8touchgfx7Outline8getCellsEv+0x1a>
 802a014:	e9d0 1209 	ldrd	r1, r2, [r0, #36]	; 0x24
 802a018:	f7ff fe80 	bl	8029d1c <_ZN8touchgfx7Outline6lineToEii>
 802a01c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802a01e:	f023 0301 	bic.w	r3, r3, #1
 802a022:	63e3      	str	r3, [r4, #60]	; 0x3c
 802a024:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802a026:	079b      	lsls	r3, r3, #30
 802a028:	d51a      	bpl.n	802a060 <_ZN8touchgfx7Outline8getCellsEv+0x56>
 802a02a:	8b62      	ldrh	r2, [r4, #26]
 802a02c:	8b23      	ldrh	r3, [r4, #24]
 802a02e:	4313      	orrs	r3, r2
 802a030:	d00d      	beq.n	802a04e <_ZN8touchgfx7Outline8getCellsEv+0x44>
 802a032:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 802a036:	2b00      	cmp	r3, #0
 802a038:	db09      	blt.n	802a04e <_ZN8touchgfx7Outline8getCellsEv+0x44>
 802a03a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 802a03c:	4293      	cmp	r3, r2
 802a03e:	da06      	bge.n	802a04e <_ZN8touchgfx7Outline8getCellsEv+0x44>
 802a040:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 802a044:	429a      	cmp	r2, r3
 802a046:	d80d      	bhi.n	802a064 <_ZN8touchgfx7Outline8getCellsEv+0x5a>
 802a048:	2301      	movs	r3, #1
 802a04a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802a04e:	68a0      	ldr	r0, [r4, #8]
 802a050:	b138      	cbz	r0, 802a062 <_ZN8touchgfx7Outline8getCellsEv+0x58>
 802a052:	4620      	mov	r0, r4
 802a054:	f7ff ffd3 	bl	8029ffe <_ZN8touchgfx7Outline9sortCellsEv>
 802a058:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802a05a:	f023 0302 	bic.w	r3, r3, #2
 802a05e:	63e3      	str	r3, [r4, #60]	; 0x3c
 802a060:	68e0      	ldr	r0, [r4, #12]
 802a062:	bd10      	pop	{r4, pc}
 802a064:	f104 0314 	add.w	r3, r4, #20
 802a068:	cb03      	ldmia	r3!, {r0, r1}
 802a06a:	6922      	ldr	r2, [r4, #16]
 802a06c:	6010      	str	r0, [r2, #0]
 802a06e:	6051      	str	r1, [r2, #4]
 802a070:	6923      	ldr	r3, [r4, #16]
 802a072:	3308      	adds	r3, #8
 802a074:	6123      	str	r3, [r4, #16]
 802a076:	68a3      	ldr	r3, [r4, #8]
 802a078:	3301      	adds	r3, #1
 802a07a:	60a3      	str	r3, [r4, #8]
 802a07c:	e7e7      	b.n	802a04e <_ZN8touchgfx7Outline8getCellsEv+0x44>

0802a07e <_ZN8touchgfx8ScanlineD1Ev>:
 802a07e:	4770      	bx	lr

0802a080 <_ZN8touchgfx8ScanlineD0Ev>:
 802a080:	b510      	push	{r4, lr}
 802a082:	2124      	movs	r1, #36	; 0x24
 802a084:	4604      	mov	r4, r0
 802a086:	f001 f868 	bl	802b15a <_ZdlPvj>
 802a08a:	4620      	mov	r0, r4
 802a08c:	bd10      	pop	{r4, pc}

0802a08e <_ZN8touchgfx8Scanline5resetEv>:
 802a08e:	b510      	push	{r4, lr}
 802a090:	4604      	mov	r4, r0
 802a092:	f7ed fcc3 	bl	8017a1c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>
 802a096:	61a0      	str	r0, [r4, #24]
 802a098:	f7ed fcc6 	bl	8017a28 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>
 802a09c:	61e0      	str	r0, [r4, #28]
 802a09e:	f7ed fcc9 	bl	8017a34 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>
 802a0a2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802a0a6:	e9c4 3301 	strd	r3, r3, [r4, #4]
 802a0aa:	69e3      	ldr	r3, [r4, #28]
 802a0ac:	6123      	str	r3, [r4, #16]
 802a0ae:	2300      	movs	r3, #0
 802a0b0:	6220      	str	r0, [r4, #32]
 802a0b2:	6160      	str	r0, [r4, #20]
 802a0b4:	60e3      	str	r3, [r4, #12]
 802a0b6:	bd10      	pop	{r4, pc}

0802a0b8 <_ZN8touchgfx8ScanlineC1Ev>:
 802a0b8:	b510      	push	{r4, lr}
 802a0ba:	4b09      	ldr	r3, [pc, #36]	; (802a0e0 <_ZN8touchgfx8ScanlineC1Ev+0x28>)
 802a0bc:	6003      	str	r3, [r0, #0]
 802a0be:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802a0c2:	e9c0 3301 	strd	r3, r3, [r0, #4]
 802a0c6:	2300      	movs	r3, #0
 802a0c8:	4604      	mov	r4, r0
 802a0ca:	e9c0 3303 	strd	r3, r3, [r0, #12]
 802a0ce:	e9c0 3305 	strd	r3, r3, [r0, #20]
 802a0d2:	e9c0 3307 	strd	r3, r3, [r0, #28]
 802a0d6:	f7ff ffda 	bl	802a08e <_ZN8touchgfx8Scanline5resetEv>
 802a0da:	4620      	mov	r0, r4
 802a0dc:	bd10      	pop	{r4, pc}
 802a0de:	bf00      	nop
 802a0e0:	080365ec 	.word	0x080365ec

0802a0e4 <_ZN8touchgfx8Scanline7addSpanEiijj>:
 802a0e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a0e8:	1e0c      	subs	r4, r1, #0
 802a0ea:	4605      	mov	r5, r0
 802a0ec:	4617      	mov	r7, r2
 802a0ee:	461e      	mov	r6, r3
 802a0f0:	da03      	bge.n	802a0fa <_ZN8touchgfx8Scanline7addSpanEiijj+0x16>
 802a0f2:	4426      	add	r6, r4
 802a0f4:	2e01      	cmp	r6, #1
 802a0f6:	d421      	bmi.n	802a13c <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 802a0f8:	2400      	movs	r4, #0
 802a0fa:	f7ed fc89 	bl	8017a10 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 802a0fe:	42a0      	cmp	r0, r4
 802a100:	dd1c      	ble.n	802a13c <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 802a102:	f7ed fc85 	bl	8017a10 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 802a106:	eb04 0806 	add.w	r8, r4, r6
 802a10a:	4580      	cmp	r8, r0
 802a10c:	d902      	bls.n	802a114 <_ZN8touchgfx8Scanline7addSpanEiijj+0x30>
 802a10e:	f7ed fc7f 	bl	8017a10 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 802a112:	1b06      	subs	r6, r0, r4
 802a114:	69a8      	ldr	r0, [r5, #24]
 802a116:	f89d 1018 	ldrb.w	r1, [sp, #24]
 802a11a:	4632      	mov	r2, r6
 802a11c:	4420      	add	r0, r4
 802a11e:	f7f0 fa69 	bl	801a5f4 <_ZN8touchgfx6memsetEPvhm>
 802a122:	686b      	ldr	r3, [r5, #4]
 802a124:	3301      	adds	r3, #1
 802a126:	42a3      	cmp	r3, r4
 802a128:	b2b2      	uxth	r2, r6
 802a12a:	696b      	ldr	r3, [r5, #20]
 802a12c:	d108      	bne.n	802a140 <_ZN8touchgfx8Scanline7addSpanEiijj+0x5c>
 802a12e:	8819      	ldrh	r1, [r3, #0]
 802a130:	440a      	add	r2, r1
 802a132:	801a      	strh	r2, [r3, #0]
 802a134:	3c01      	subs	r4, #1
 802a136:	4434      	add	r4, r6
 802a138:	e9c5 4701 	strd	r4, r7, [r5, #4]
 802a13c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a140:	1c99      	adds	r1, r3, #2
 802a142:	6169      	str	r1, [r5, #20]
 802a144:	805a      	strh	r2, [r3, #2]
 802a146:	692b      	ldr	r3, [r5, #16]
 802a148:	1c9a      	adds	r2, r3, #2
 802a14a:	612a      	str	r2, [r5, #16]
 802a14c:	805c      	strh	r4, [r3, #2]
 802a14e:	68eb      	ldr	r3, [r5, #12]
 802a150:	3301      	adds	r3, #1
 802a152:	60eb      	str	r3, [r5, #12]
 802a154:	e7ee      	b.n	802a134 <_ZN8touchgfx8Scanline7addSpanEiijj+0x50>

0802a156 <_ZN8touchgfx15RenderingBufferD1Ev>:
 802a156:	4770      	bx	lr

0802a158 <_ZN8touchgfx15RenderingBufferD0Ev>:
 802a158:	b510      	push	{r4, lr}
 802a15a:	2118      	movs	r1, #24
 802a15c:	4604      	mov	r4, r0
 802a15e:	f000 fffc 	bl	802b15a <_ZdlPvj>
 802a162:	4620      	mov	r0, r4
 802a164:	bd10      	pop	{r4, pc}
	...

0802a168 <_ZN8touchgfx15RenderingBufferC1Ev>:
 802a168:	4a04      	ldr	r2, [pc, #16]	; (802a17c <_ZN8touchgfx15RenderingBufferC1Ev+0x14>)
 802a16a:	6002      	str	r2, [r0, #0]
 802a16c:	2200      	movs	r2, #0
 802a16e:	6042      	str	r2, [r0, #4]
 802a170:	7202      	strb	r2, [r0, #8]
 802a172:	e9c0 2203 	strd	r2, r2, [r0, #12]
 802a176:	6142      	str	r2, [r0, #20]
 802a178:	4770      	bx	lr
 802a17a:	bf00      	nop
 802a17c:	080365fc 	.word	0x080365fc

0802a180 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>:
 802a180:	60c3      	str	r3, [r0, #12]
 802a182:	9b00      	ldr	r3, [sp, #0]
 802a184:	6103      	str	r3, [r0, #16]
 802a186:	9b01      	ldr	r3, [sp, #4]
 802a188:	6041      	str	r1, [r0, #4]
 802a18a:	7202      	strb	r2, [r0, #8]
 802a18c:	6143      	str	r3, [r0, #20]
 802a18e:	4770      	bx	lr

0802a190 <arm_rfft_fast_init_f32>:
 802a190:	084b      	lsrs	r3, r1, #1
 802a192:	2b80      	cmp	r3, #128	; 0x80
 802a194:	b410      	push	{r4}
 802a196:	8201      	strh	r1, [r0, #16]
 802a198:	8003      	strh	r3, [r0, #0]
 802a19a:	d046      	beq.n	802a22a <arm_rfft_fast_init_f32+0x9a>
 802a19c:	d916      	bls.n	802a1cc <arm_rfft_fast_init_f32+0x3c>
 802a19e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802a1a2:	d03c      	beq.n	802a21e <arm_rfft_fast_init_f32+0x8e>
 802a1a4:	d928      	bls.n	802a1f8 <arm_rfft_fast_init_f32+0x68>
 802a1a6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802a1aa:	d01f      	beq.n	802a1ec <arm_rfft_fast_init_f32+0x5c>
 802a1ac:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802a1b0:	d112      	bne.n	802a1d8 <arm_rfft_fast_init_f32+0x48>
 802a1b2:	4920      	ldr	r1, [pc, #128]	; (802a234 <arm_rfft_fast_init_f32+0xa4>)
 802a1b4:	4a20      	ldr	r2, [pc, #128]	; (802a238 <arm_rfft_fast_init_f32+0xa8>)
 802a1b6:	4b21      	ldr	r3, [pc, #132]	; (802a23c <arm_rfft_fast_init_f32+0xac>)
 802a1b8:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 802a1bc:	8184      	strh	r4, [r0, #12]
 802a1be:	6081      	str	r1, [r0, #8]
 802a1c0:	6042      	str	r2, [r0, #4]
 802a1c2:	6143      	str	r3, [r0, #20]
 802a1c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a1c8:	2000      	movs	r0, #0
 802a1ca:	4770      	bx	lr
 802a1cc:	2b20      	cmp	r3, #32
 802a1ce:	d01c      	beq.n	802a20a <arm_rfft_fast_init_f32+0x7a>
 802a1d0:	2b40      	cmp	r3, #64	; 0x40
 802a1d2:	d006      	beq.n	802a1e2 <arm_rfft_fast_init_f32+0x52>
 802a1d4:	2b10      	cmp	r3, #16
 802a1d6:	d01d      	beq.n	802a214 <arm_rfft_fast_init_f32+0x84>
 802a1d8:	f04f 30ff 	mov.w	r0, #4294967295
 802a1dc:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a1e0:	4770      	bx	lr
 802a1e2:	2438      	movs	r4, #56	; 0x38
 802a1e4:	4916      	ldr	r1, [pc, #88]	; (802a240 <arm_rfft_fast_init_f32+0xb0>)
 802a1e6:	4a17      	ldr	r2, [pc, #92]	; (802a244 <arm_rfft_fast_init_f32+0xb4>)
 802a1e8:	4b17      	ldr	r3, [pc, #92]	; (802a248 <arm_rfft_fast_init_f32+0xb8>)
 802a1ea:	e7e7      	b.n	802a1bc <arm_rfft_fast_init_f32+0x2c>
 802a1ec:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802a1f0:	4916      	ldr	r1, [pc, #88]	; (802a24c <arm_rfft_fast_init_f32+0xbc>)
 802a1f2:	4a17      	ldr	r2, [pc, #92]	; (802a250 <arm_rfft_fast_init_f32+0xc0>)
 802a1f4:	4b17      	ldr	r3, [pc, #92]	; (802a254 <arm_rfft_fast_init_f32+0xc4>)
 802a1f6:	e7e1      	b.n	802a1bc <arm_rfft_fast_init_f32+0x2c>
 802a1f8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802a1fc:	d1ec      	bne.n	802a1d8 <arm_rfft_fast_init_f32+0x48>
 802a1fe:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802a202:	4915      	ldr	r1, [pc, #84]	; (802a258 <arm_rfft_fast_init_f32+0xc8>)
 802a204:	4a15      	ldr	r2, [pc, #84]	; (802a25c <arm_rfft_fast_init_f32+0xcc>)
 802a206:	4b16      	ldr	r3, [pc, #88]	; (802a260 <arm_rfft_fast_init_f32+0xd0>)
 802a208:	e7d8      	b.n	802a1bc <arm_rfft_fast_init_f32+0x2c>
 802a20a:	2430      	movs	r4, #48	; 0x30
 802a20c:	4915      	ldr	r1, [pc, #84]	; (802a264 <arm_rfft_fast_init_f32+0xd4>)
 802a20e:	4a16      	ldr	r2, [pc, #88]	; (802a268 <arm_rfft_fast_init_f32+0xd8>)
 802a210:	4b16      	ldr	r3, [pc, #88]	; (802a26c <arm_rfft_fast_init_f32+0xdc>)
 802a212:	e7d3      	b.n	802a1bc <arm_rfft_fast_init_f32+0x2c>
 802a214:	2414      	movs	r4, #20
 802a216:	4916      	ldr	r1, [pc, #88]	; (802a270 <arm_rfft_fast_init_f32+0xe0>)
 802a218:	4a16      	ldr	r2, [pc, #88]	; (802a274 <arm_rfft_fast_init_f32+0xe4>)
 802a21a:	4b17      	ldr	r3, [pc, #92]	; (802a278 <arm_rfft_fast_init_f32+0xe8>)
 802a21c:	e7ce      	b.n	802a1bc <arm_rfft_fast_init_f32+0x2c>
 802a21e:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802a222:	4916      	ldr	r1, [pc, #88]	; (802a27c <arm_rfft_fast_init_f32+0xec>)
 802a224:	4a16      	ldr	r2, [pc, #88]	; (802a280 <arm_rfft_fast_init_f32+0xf0>)
 802a226:	4b17      	ldr	r3, [pc, #92]	; (802a284 <arm_rfft_fast_init_f32+0xf4>)
 802a228:	e7c8      	b.n	802a1bc <arm_rfft_fast_init_f32+0x2c>
 802a22a:	24d0      	movs	r4, #208	; 0xd0
 802a22c:	4916      	ldr	r1, [pc, #88]	; (802a288 <arm_rfft_fast_init_f32+0xf8>)
 802a22e:	4a17      	ldr	r2, [pc, #92]	; (802a28c <arm_rfft_fast_init_f32+0xfc>)
 802a230:	4b17      	ldr	r3, [pc, #92]	; (802a290 <arm_rfft_fast_init_f32+0x100>)
 802a232:	e7c3      	b.n	802a1bc <arm_rfft_fast_init_f32+0x2c>
 802a234:	0804540c 	.word	0x0804540c
 802a238:	08036604 	.word	0x08036604
 802a23c:	0803c774 	.word	0x0803c774
 802a240:	0803a704 	.word	0x0803a704
 802a244:	080471cc 	.word	0x080471cc
 802a248:	080496bc 	.word	0x080496bc
 802a24c:	080430f4 	.word	0x080430f4
 802a250:	08040ff4 	.word	0x08040ff4
 802a254:	0803a774 	.word	0x0803a774
 802a258:	0804934c 	.word	0x0804934c
 802a25c:	08040774 	.word	0x08040774
 802a260:	080473cc 	.word	0x080473cc
 802a264:	08043fac 	.word	0x08043fac
 802a268:	08042ff4 	.word	0x08042ff4
 802a26c:	0803a604 	.word	0x0803a604
 802a270:	08043f04 	.word	0x08043f04
 802a274:	08040f74 	.word	0x08040f74
 802a278:	08043f2c 	.word	0x08043f2c
 802a27c:	08047bcc 	.word	0x08047bcc
 802a280:	0804440c 	.word	0x0804440c
 802a284:	08047f4c 	.word	0x08047f4c
 802a288:	080498bc 	.word	0x080498bc
 802a28c:	0804400c 	.word	0x0804400c
 802a290:	08048f4c 	.word	0x08048f4c

0802a294 <arm_rfft_fast_f32>:
 802a294:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a298:	8a06      	ldrh	r6, [r0, #16]
 802a29a:	0876      	lsrs	r6, r6, #1
 802a29c:	4607      	mov	r7, r0
 802a29e:	4615      	mov	r5, r2
 802a2a0:	8006      	strh	r6, [r0, #0]
 802a2a2:	460c      	mov	r4, r1
 802a2a4:	2b00      	cmp	r3, #0
 802a2a6:	d15c      	bne.n	802a362 <arm_rfft_fast_f32+0xce>
 802a2a8:	461a      	mov	r2, r3
 802a2aa:	2301      	movs	r3, #1
 802a2ac:	f000 fbe4 	bl	802aa78 <arm_cfft_f32>
 802a2b0:	edd4 7a00 	vldr	s15, [r4]
 802a2b4:	ed94 7a01 	vldr	s14, [r4, #4]
 802a2b8:	883e      	ldrh	r6, [r7, #0]
 802a2ba:	6978      	ldr	r0, [r7, #20]
 802a2bc:	ee37 7a07 	vadd.f32	s14, s14, s14
 802a2c0:	ee77 7aa7 	vadd.f32	s15, s15, s15
 802a2c4:	eeb6 3a00 	vmov.f32	s6, #96	; 0x3f000000  0.5
 802a2c8:	ee77 6a87 	vadd.f32	s13, s15, s14
 802a2cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a2d0:	3e01      	subs	r6, #1
 802a2d2:	ee26 7a83 	vmul.f32	s14, s13, s6
 802a2d6:	ee67 7a83 	vmul.f32	s15, s15, s6
 802a2da:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802a2de:	ed85 7a00 	vstr	s14, [r5]
 802a2e2:	edc5 7a01 	vstr	s15, [r5, #4]
 802a2e6:	3010      	adds	r0, #16
 802a2e8:	f105 0210 	add.w	r2, r5, #16
 802a2ec:	3b08      	subs	r3, #8
 802a2ee:	f104 0110 	add.w	r1, r4, #16
 802a2f2:	ed93 7a02 	vldr	s14, [r3, #8]
 802a2f6:	ed51 6a02 	vldr	s13, [r1, #-8]
 802a2fa:	ed10 6a02 	vldr	s12, [r0, #-8]
 802a2fe:	edd3 3a03 	vldr	s7, [r3, #12]
 802a302:	ed11 5a01 	vldr	s10, [r1, #-4]
 802a306:	ed50 5a01 	vldr	s11, [r0, #-4]
 802a30a:	ee77 7a66 	vsub.f32	s15, s14, s13
 802a30e:	ee77 4a26 	vadd.f32	s9, s14, s13
 802a312:	ee33 4a85 	vadd.f32	s8, s7, s10
 802a316:	ee66 6a27 	vmul.f32	s13, s12, s15
 802a31a:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802a31e:	ee35 5a63 	vsub.f32	s10, s10, s7
 802a322:	ee76 6aa4 	vadd.f32	s13, s13, s9
 802a326:	ee77 7a05 	vadd.f32	s15, s14, s10
 802a32a:	ee26 6a04 	vmul.f32	s12, s12, s8
 802a32e:	ee65 5a84 	vmul.f32	s11, s11, s8
 802a332:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802a336:	ee36 7aa5 	vadd.f32	s14, s13, s11
 802a33a:	ee67 7a83 	vmul.f32	s15, s15, s6
 802a33e:	ee27 7a03 	vmul.f32	s14, s14, s6
 802a342:	3e01      	subs	r6, #1
 802a344:	ed02 7a02 	vstr	s14, [r2, #-8]
 802a348:	ed42 7a01 	vstr	s15, [r2, #-4]
 802a34c:	f1a3 0308 	sub.w	r3, r3, #8
 802a350:	f101 0108 	add.w	r1, r1, #8
 802a354:	f100 0008 	add.w	r0, r0, #8
 802a358:	f102 0208 	add.w	r2, r2, #8
 802a35c:	d1c9      	bne.n	802a2f2 <arm_rfft_fast_f32+0x5e>
 802a35e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a362:	edd1 7a00 	vldr	s15, [r1]
 802a366:	edd1 6a01 	vldr	s13, [r1, #4]
 802a36a:	6941      	ldr	r1, [r0, #20]
 802a36c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a370:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a374:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802a378:	ee27 7a23 	vmul.f32	s14, s14, s7
 802a37c:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802a380:	3e01      	subs	r6, #1
 802a382:	ed82 7a00 	vstr	s14, [r2]
 802a386:	edc2 7a01 	vstr	s15, [r2, #4]
 802a38a:	00f0      	lsls	r0, r6, #3
 802a38c:	b3ee      	cbz	r6, 802a40a <arm_rfft_fast_f32+0x176>
 802a38e:	3808      	subs	r0, #8
 802a390:	f101 0e10 	add.w	lr, r1, #16
 802a394:	4420      	add	r0, r4
 802a396:	f104 0110 	add.w	r1, r4, #16
 802a39a:	f102 0c10 	add.w	ip, r2, #16
 802a39e:	ed90 7a02 	vldr	s14, [r0, #8]
 802a3a2:	ed51 6a02 	vldr	s13, [r1, #-8]
 802a3a6:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802a3aa:	ed90 4a03 	vldr	s8, [r0, #12]
 802a3ae:	ed11 5a01 	vldr	s10, [r1, #-4]
 802a3b2:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802a3b6:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802a3ba:	ee74 4a05 	vadd.f32	s9, s8, s10
 802a3be:	ee26 3a27 	vmul.f32	s6, s12, s15
 802a3c2:	ee77 6a26 	vadd.f32	s13, s14, s13
 802a3c6:	ee35 5a44 	vsub.f32	s10, s10, s8
 802a3ca:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802a3ce:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a3d2:	ee77 7a05 	vadd.f32	s15, s14, s10
 802a3d6:	ee26 6a24 	vmul.f32	s12, s12, s9
 802a3da:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802a3de:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802a3e2:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802a3e6:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802a3ea:	ee27 7a23 	vmul.f32	s14, s14, s7
 802a3ee:	3e01      	subs	r6, #1
 802a3f0:	ed0c 7a02 	vstr	s14, [ip, #-8]
 802a3f4:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802a3f8:	f1a0 0008 	sub.w	r0, r0, #8
 802a3fc:	f101 0108 	add.w	r1, r1, #8
 802a400:	f10e 0e08 	add.w	lr, lr, #8
 802a404:	f10c 0c08 	add.w	ip, ip, #8
 802a408:	d1c9      	bne.n	802a39e <arm_rfft_fast_f32+0x10a>
 802a40a:	461a      	mov	r2, r3
 802a40c:	4629      	mov	r1, r5
 802a40e:	4638      	mov	r0, r7
 802a410:	2301      	movs	r3, #1
 802a412:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a416:	f000 bb2f 	b.w	802aa78 <arm_cfft_f32>
 802a41a:	bf00      	nop

0802a41c <arm_cfft_radix8by2_f32>:
 802a41c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a420:	ed2d 8b08 	vpush	{d8-d11}
 802a424:	4607      	mov	r7, r0
 802a426:	4608      	mov	r0, r1
 802a428:	f8b7 e000 	ldrh.w	lr, [r7]
 802a42c:	687a      	ldr	r2, [r7, #4]
 802a42e:	ea4f 015e 	mov.w	r1, lr, lsr #1
 802a432:	eb00 088e 	add.w	r8, r0, lr, lsl #2
 802a436:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802a43a:	f000 80b0 	beq.w	802a59e <arm_cfft_radix8by2_f32+0x182>
 802a43e:	008b      	lsls	r3, r1, #2
 802a440:	3310      	adds	r3, #16
 802a442:	18c6      	adds	r6, r0, r3
 802a444:	3210      	adds	r2, #16
 802a446:	4443      	add	r3, r8
 802a448:	f100 0510 	add.w	r5, r0, #16
 802a44c:	f108 0410 	add.w	r4, r8, #16
 802a450:	ed54 1a04 	vldr	s3, [r4, #-16]
 802a454:	ed54 6a03 	vldr	s13, [r4, #-12]
 802a458:	ed13 4a04 	vldr	s8, [r3, #-16]
 802a45c:	ed53 3a03 	vldr	s7, [r3, #-12]
 802a460:	ed53 5a02 	vldr	s11, [r3, #-8]
 802a464:	ed13 5a01 	vldr	s10, [r3, #-4]
 802a468:	ed14 0a02 	vldr	s0, [r4, #-8]
 802a46c:	ed54 7a01 	vldr	s15, [r4, #-4]
 802a470:	ed16 2a04 	vldr	s4, [r6, #-16]
 802a474:	ed56 2a03 	vldr	s5, [r6, #-12]
 802a478:	ed15 6a03 	vldr	s12, [r5, #-12]
 802a47c:	ed15 7a01 	vldr	s14, [r5, #-4]
 802a480:	ed15 3a04 	vldr	s6, [r5, #-16]
 802a484:	ed56 0a02 	vldr	s1, [r6, #-8]
 802a488:	ed16 1a01 	vldr	s2, [r6, #-4]
 802a48c:	ed55 4a02 	vldr	s9, [r5, #-8]
 802a490:	ee73 ba21 	vadd.f32	s23, s6, s3
 802a494:	ee36 ba26 	vadd.f32	s22, s12, s13
 802a498:	ee37 aa27 	vadd.f32	s20, s14, s15
 802a49c:	ee72 9a04 	vadd.f32	s19, s4, s8
 802a4a0:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802a4a4:	ee31 8a05 	vadd.f32	s16, s2, s10
 802a4a8:	ee74 aa80 	vadd.f32	s21, s9, s0
 802a4ac:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802a4b0:	ed45 ba04 	vstr	s23, [r5, #-16]
 802a4b4:	ed05 ba03 	vstr	s22, [r5, #-12]
 802a4b8:	ed45 aa02 	vstr	s21, [r5, #-8]
 802a4bc:	ed05 aa01 	vstr	s20, [r5, #-4]
 802a4c0:	ed06 8a01 	vstr	s16, [r6, #-4]
 802a4c4:	ed46 9a04 	vstr	s19, [r6, #-16]
 802a4c8:	ed06 9a03 	vstr	s18, [r6, #-12]
 802a4cc:	ed46 8a02 	vstr	s17, [r6, #-8]
 802a4d0:	ee76 6a66 	vsub.f32	s13, s12, s13
 802a4d4:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802a4d8:	ed12 6a03 	vldr	s12, [r2, #-12]
 802a4dc:	ed52 2a04 	vldr	s5, [r2, #-16]
 802a4e0:	ee33 3a61 	vsub.f32	s6, s6, s3
 802a4e4:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a4e8:	ee26 8a86 	vmul.f32	s16, s13, s12
 802a4ec:	ee24 2a06 	vmul.f32	s4, s8, s12
 802a4f0:	ee63 1a22 	vmul.f32	s3, s6, s5
 802a4f4:	ee24 4a22 	vmul.f32	s8, s8, s5
 802a4f8:	ee23 3a06 	vmul.f32	s6, s6, s12
 802a4fc:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802a500:	ee23 6a86 	vmul.f32	s12, s7, s12
 802a504:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802a508:	ee36 6a04 	vadd.f32	s12, s12, s8
 802a50c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a510:	ee72 3a63 	vsub.f32	s7, s4, s7
 802a514:	ee71 2a88 	vadd.f32	s5, s3, s16
 802a518:	ed44 6a03 	vstr	s13, [r4, #-12]
 802a51c:	ed44 2a04 	vstr	s5, [r4, #-16]
 802a520:	ed43 3a04 	vstr	s7, [r3, #-16]
 802a524:	ed03 6a03 	vstr	s12, [r3, #-12]
 802a528:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a52c:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802a530:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a534:	ed52 5a02 	vldr	s11, [r2, #-8]
 802a538:	ee35 6a41 	vsub.f32	s12, s10, s2
 802a53c:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802a540:	ee67 3a87 	vmul.f32	s7, s15, s14
 802a544:	ee26 5a87 	vmul.f32	s10, s13, s14
 802a548:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802a54c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802a550:	ee64 4a87 	vmul.f32	s9, s9, s14
 802a554:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802a558:	ee26 7a07 	vmul.f32	s14, s12, s14
 802a55c:	ee26 6a25 	vmul.f32	s12, s12, s11
 802a560:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802a564:	ee74 5a23 	vadd.f32	s11, s8, s7
 802a568:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a56c:	ee37 7a26 	vadd.f32	s14, s14, s13
 802a570:	f1be 0e01 	subs.w	lr, lr, #1
 802a574:	ed44 5a02 	vstr	s11, [r4, #-8]
 802a578:	f105 0510 	add.w	r5, r5, #16
 802a57c:	ed44 7a01 	vstr	s15, [r4, #-4]
 802a580:	f106 0610 	add.w	r6, r6, #16
 802a584:	ed03 6a02 	vstr	s12, [r3, #-8]
 802a588:	ed03 7a01 	vstr	s14, [r3, #-4]
 802a58c:	f102 0210 	add.w	r2, r2, #16
 802a590:	f104 0410 	add.w	r4, r4, #16
 802a594:	f103 0310 	add.w	r3, r3, #16
 802a598:	f47f af5a 	bne.w	802a450 <arm_cfft_radix8by2_f32+0x34>
 802a59c:	687a      	ldr	r2, [r7, #4]
 802a59e:	b28c      	uxth	r4, r1
 802a5a0:	4621      	mov	r1, r4
 802a5a2:	2302      	movs	r3, #2
 802a5a4:	f000 fae2 	bl	802ab6c <arm_radix8_butterfly_f32>
 802a5a8:	ecbd 8b08 	vpop	{d8-d11}
 802a5ac:	4621      	mov	r1, r4
 802a5ae:	687a      	ldr	r2, [r7, #4]
 802a5b0:	4640      	mov	r0, r8
 802a5b2:	2302      	movs	r3, #2
 802a5b4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a5b8:	f000 bad8 	b.w	802ab6c <arm_radix8_butterfly_f32>

0802a5bc <arm_cfft_radix8by4_f32>:
 802a5bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a5c0:	ed2d 8b0a 	vpush	{d8-d12}
 802a5c4:	8802      	ldrh	r2, [r0, #0]
 802a5c6:	ed91 6a00 	vldr	s12, [r1]
 802a5ca:	b08f      	sub	sp, #60	; 0x3c
 802a5cc:	460f      	mov	r7, r1
 802a5ce:	0852      	lsrs	r2, r2, #1
 802a5d0:	6841      	ldr	r1, [r0, #4]
 802a5d2:	900c      	str	r0, [sp, #48]	; 0x30
 802a5d4:	0093      	lsls	r3, r2, #2
 802a5d6:	4638      	mov	r0, r7
 802a5d8:	4418      	add	r0, r3
 802a5da:	4606      	mov	r6, r0
 802a5dc:	9009      	str	r0, [sp, #36]	; 0x24
 802a5de:	4418      	add	r0, r3
 802a5e0:	edd0 6a00 	vldr	s13, [r0]
 802a5e4:	ed96 4a00 	vldr	s8, [r6]
 802a5e8:	edd6 2a01 	vldr	s5, [r6, #4]
 802a5ec:	edd0 7a01 	vldr	s15, [r0, #4]
 802a5f0:	900a      	str	r0, [sp, #40]	; 0x28
 802a5f2:	ee76 5a26 	vadd.f32	s11, s12, s13
 802a5f6:	4604      	mov	r4, r0
 802a5f8:	4625      	mov	r5, r4
 802a5fa:	441c      	add	r4, r3
 802a5fc:	edd4 4a00 	vldr	s9, [r4]
 802a600:	ed97 7a01 	vldr	s14, [r7, #4]
 802a604:	ed94 3a01 	vldr	s6, [r4, #4]
 802a608:	9401      	str	r4, [sp, #4]
 802a60a:	ee35 5a84 	vadd.f32	s10, s11, s8
 802a60e:	4630      	mov	r0, r6
 802a610:	ee35 5a24 	vadd.f32	s10, s10, s9
 802a614:	463e      	mov	r6, r7
 802a616:	ee15 ea10 	vmov	lr, s10
 802a61a:	ee76 6a66 	vsub.f32	s13, s12, s13
 802a61e:	f846 eb08 	str.w	lr, [r6], #8
 802a622:	ee37 6a27 	vadd.f32	s12, s14, s15
 802a626:	ed90 5a01 	vldr	s10, [r0, #4]
 802a62a:	9605      	str	r6, [sp, #20]
 802a62c:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a630:	9e01      	ldr	r6, [sp, #4]
 802a632:	9707      	str	r7, [sp, #28]
 802a634:	ee76 3aa2 	vadd.f32	s7, s13, s5
 802a638:	ed96 2a01 	vldr	s4, [r6, #4]
 802a63c:	ee36 7a05 	vadd.f32	s14, s12, s10
 802a640:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802a644:	ee37 5ac4 	vsub.f32	s10, s15, s8
 802a648:	ee77 7a84 	vadd.f32	s15, s15, s8
 802a64c:	ee33 4ac3 	vsub.f32	s8, s7, s6
 802a650:	4604      	mov	r4, r0
 802a652:	46a3      	mov	fp, r4
 802a654:	ee37 7a02 	vadd.f32	s14, s14, s4
 802a658:	ee35 5a24 	vadd.f32	s10, s10, s9
 802a65c:	ee14 8a10 	vmov	r8, s8
 802a660:	46a4      	mov	ip, r4
 802a662:	ee75 5ae4 	vsub.f32	s11, s11, s9
 802a666:	ed87 7a01 	vstr	s14, [r7, #4]
 802a66a:	f84b 8b08 	str.w	r8, [fp], #8
 802a66e:	f1ac 0704 	sub.w	r7, ip, #4
 802a672:	ed8c 5a01 	vstr	s10, [ip, #4]
 802a676:	f101 0c08 	add.w	ip, r1, #8
 802a67a:	462c      	mov	r4, r5
 802a67c:	f8cd c010 	str.w	ip, [sp, #16]
 802a680:	ee15 ca90 	vmov	ip, s11
 802a684:	ee36 6a62 	vsub.f32	s12, s12, s5
 802a688:	f844 cb08 	str.w	ip, [r4], #8
 802a68c:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802a690:	ee36 6a43 	vsub.f32	s12, s12, s6
 802a694:	9406      	str	r4, [sp, #24]
 802a696:	ee76 6a83 	vadd.f32	s13, s13, s6
 802a69a:	f101 0410 	add.w	r4, r1, #16
 802a69e:	0852      	lsrs	r2, r2, #1
 802a6a0:	9402      	str	r4, [sp, #8]
 802a6a2:	ed85 6a01 	vstr	s12, [r5, #4]
 802a6a6:	462c      	mov	r4, r5
 802a6a8:	f101 0518 	add.w	r5, r1, #24
 802a6ac:	920b      	str	r2, [sp, #44]	; 0x2c
 802a6ae:	46b2      	mov	sl, r6
 802a6b0:	9503      	str	r5, [sp, #12]
 802a6b2:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802a6b6:	3a02      	subs	r2, #2
 802a6b8:	ee16 5a90 	vmov	r5, s13
 802a6bc:	46b6      	mov	lr, r6
 802a6be:	4630      	mov	r0, r6
 802a6c0:	0852      	lsrs	r2, r2, #1
 802a6c2:	f84a 5b08 	str.w	r5, [sl], #8
 802a6c6:	f1a0 0604 	sub.w	r6, r0, #4
 802a6ca:	edce 7a01 	vstr	s15, [lr, #4]
 802a6ce:	9208      	str	r2, [sp, #32]
 802a6d0:	f000 8130 	beq.w	802a934 <arm_cfft_radix8by4_f32+0x378>
 802a6d4:	4691      	mov	r9, r2
 802a6d6:	9a07      	ldr	r2, [sp, #28]
 802a6d8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802a6dc:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802a6e0:	3b08      	subs	r3, #8
 802a6e2:	f102 0510 	add.w	r5, r2, #16
 802a6e6:	f101 0c20 	add.w	ip, r1, #32
 802a6ea:	f1a4 020c 	sub.w	r2, r4, #12
 802a6ee:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802a6f2:	4433      	add	r3, r6
 802a6f4:	3410      	adds	r4, #16
 802a6f6:	4650      	mov	r0, sl
 802a6f8:	4659      	mov	r1, fp
 802a6fa:	ed55 3a02 	vldr	s7, [r5, #-8]
 802a6fe:	ed14 5a02 	vldr	s10, [r4, #-8]
 802a702:	ed91 7a00 	vldr	s14, [r1]
 802a706:	edd0 7a00 	vldr	s15, [r0]
 802a70a:	ed54 5a01 	vldr	s11, [r4, #-4]
 802a70e:	ed15 4a01 	vldr	s8, [r5, #-4]
 802a712:	edd0 6a01 	vldr	s13, [r0, #4]
 802a716:	ed91 6a01 	vldr	s12, [r1, #4]
 802a71a:	ee33 8a85 	vadd.f32	s16, s7, s10
 802a71e:	ee34 0a25 	vadd.f32	s0, s8, s11
 802a722:	ee78 4a07 	vadd.f32	s9, s16, s14
 802a726:	ee74 5a65 	vsub.f32	s11, s8, s11
 802a72a:	ee74 4aa7 	vadd.f32	s9, s9, s15
 802a72e:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802a732:	ed45 4a02 	vstr	s9, [r5, #-8]
 802a736:	edd1 4a01 	vldr	s9, [r1, #4]
 802a73a:	ed90 4a01 	vldr	s8, [r0, #4]
 802a73e:	ee70 4a24 	vadd.f32	s9, s0, s9
 802a742:	ee75 aa06 	vadd.f32	s21, s10, s12
 802a746:	ee74 4a84 	vadd.f32	s9, s9, s8
 802a74a:	ee35 aac7 	vsub.f32	s20, s11, s14
 802a74e:	ed45 4a01 	vstr	s9, [r5, #-4]
 802a752:	edd6 1a00 	vldr	s3, [r6]
 802a756:	edd7 0a00 	vldr	s1, [r7]
 802a75a:	ed92 4a02 	vldr	s8, [r2, #8]
 802a75e:	edd3 3a02 	vldr	s7, [r3, #8]
 802a762:	ed93 2a01 	vldr	s4, [r3, #4]
 802a766:	ed16 1a01 	vldr	s2, [r6, #-4]
 802a76a:	edd2 2a01 	vldr	s5, [r2, #4]
 802a76e:	ed57 9a01 	vldr	s19, [r7, #-4]
 802a772:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802a776:	ee39 3a81 	vadd.f32	s6, s19, s2
 802a77a:	ee74 8a84 	vadd.f32	s17, s9, s8
 802a77e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802a782:	ee78 8aa3 	vadd.f32	s17, s17, s7
 802a786:	ee7a aae6 	vsub.f32	s21, s21, s13
 802a78a:	ee18 aa90 	vmov	sl, s17
 802a78e:	f847 a908 	str.w	sl, [r7], #-8
 802a792:	edd2 8a01 	vldr	s17, [r2, #4]
 802a796:	ed93 9a01 	vldr	s18, [r3, #4]
 802a79a:	ee73 8a28 	vadd.f32	s17, s6, s17
 802a79e:	ee3a aa27 	vadd.f32	s20, s20, s15
 802a7a2:	ee78 8a89 	vadd.f32	s17, s17, s18
 802a7a6:	ee74 0a63 	vsub.f32	s1, s8, s7
 802a7aa:	edc7 8a01 	vstr	s17, [r7, #4]
 802a7ae:	ed18 ba02 	vldr	s22, [r8, #-8]
 802a7b2:	ed58 8a01 	vldr	s17, [r8, #-4]
 802a7b6:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802a7ba:	ee6a ba28 	vmul.f32	s23, s20, s17
 802a7be:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802a7c2:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802a7c6:	ee31 9a20 	vadd.f32	s18, s2, s1
 802a7ca:	ee79 9a82 	vadd.f32	s19, s19, s4
 802a7ce:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802a7d2:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802a7d6:	ee69 baa8 	vmul.f32	s23, s19, s17
 802a7da:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802a7de:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802a7e2:	ee69 8a28 	vmul.f32	s17, s18, s17
 802a7e6:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802a7ea:	ee1c aa10 	vmov	sl, s24
 802a7ee:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802a7f2:	f841 ab08 	str.w	sl, [r1], #8
 802a7f6:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802a7fa:	ee3b bacb 	vsub.f32	s22, s23, s22
 802a7fe:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802a802:	ee33 3a62 	vsub.f32	s6, s6, s5
 802a806:	ed01 aa01 	vstr	s20, [r1, #-4]
 802a80a:	edc2 8a01 	vstr	s17, [r2, #4]
 802a80e:	ed82 ba02 	vstr	s22, [r2, #8]
 802a812:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802a816:	ee74 3a63 	vsub.f32	s7, s8, s7
 802a81a:	ee38 8a47 	vsub.f32	s16, s16, s14
 802a81e:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802a822:	ee30 0a46 	vsub.f32	s0, s0, s12
 802a826:	ee33 3a42 	vsub.f32	s6, s6, s4
 802a82a:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a82e:	ee30 0a66 	vsub.f32	s0, s0, s13
 802a832:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802a836:	ee63 8a04 	vmul.f32	s17, s6, s8
 802a83a:	ee28 aa24 	vmul.f32	s20, s16, s9
 802a83e:	ee60 9a04 	vmul.f32	s19, s0, s8
 802a842:	ee28 8a04 	vmul.f32	s16, s16, s8
 802a846:	ee20 0a24 	vmul.f32	s0, s0, s9
 802a84a:	ee63 3a84 	vmul.f32	s7, s7, s8
 802a84e:	ee39 4a68 	vsub.f32	s8, s18, s17
 802a852:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802a856:	ee14 aa10 	vmov	sl, s8
 802a85a:	ee30 0a48 	vsub.f32	s0, s0, s16
 802a85e:	ee63 4a24 	vmul.f32	s9, s6, s9
 802a862:	ed44 9a02 	vstr	s19, [r4, #-8]
 802a866:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802a86a:	ed04 0a01 	vstr	s0, [r4, #-4]
 802a86e:	f846 a908 	str.w	sl, [r6], #-8
 802a872:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a876:	ee35 7a87 	vadd.f32	s14, s11, s14
 802a87a:	edc6 3a01 	vstr	s7, [r6, #4]
 802a87e:	ee76 6a26 	vadd.f32	s13, s12, s13
 802a882:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a886:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802a88a:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802a88e:	ee67 5a86 	vmul.f32	s11, s15, s12
 802a892:	ee26 5a87 	vmul.f32	s10, s13, s14
 802a896:	ee72 2a62 	vsub.f32	s5, s4, s5
 802a89a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802a89e:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802a8a2:	ee75 5a25 	vadd.f32	s11, s10, s11
 802a8a6:	ee62 0a86 	vmul.f32	s1, s5, s12
 802a8aa:	ee66 6a86 	vmul.f32	s13, s13, s12
 802a8ae:	ee67 7a87 	vmul.f32	s15, s15, s14
 802a8b2:	ee21 6a06 	vmul.f32	s12, s2, s12
 802a8b6:	ee62 2a87 	vmul.f32	s5, s5, s14
 802a8ba:	ee21 1a07 	vmul.f32	s2, s2, s14
 802a8be:	ee15 aa90 	vmov	sl, s11
 802a8c2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a8c6:	f840 ab08 	str.w	sl, [r0], #8
 802a8ca:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802a8ce:	ee76 2a22 	vadd.f32	s5, s12, s5
 802a8d2:	f1b9 0901 	subs.w	r9, r9, #1
 802a8d6:	ed40 7a01 	vstr	s15, [r0, #-4]
 802a8da:	f105 0508 	add.w	r5, r5, #8
 802a8de:	ed83 1a02 	vstr	s2, [r3, #8]
 802a8e2:	edc3 2a01 	vstr	s5, [r3, #4]
 802a8e6:	f108 0808 	add.w	r8, r8, #8
 802a8ea:	f1a2 0208 	sub.w	r2, r2, #8
 802a8ee:	f10c 0c10 	add.w	ip, ip, #16
 802a8f2:	f104 0408 	add.w	r4, r4, #8
 802a8f6:	f10e 0e18 	add.w	lr, lr, #24
 802a8fa:	f1a3 0308 	sub.w	r3, r3, #8
 802a8fe:	f47f aefc 	bne.w	802a6fa <arm_cfft_radix8by4_f32+0x13e>
 802a902:	9908      	ldr	r1, [sp, #32]
 802a904:	9802      	ldr	r0, [sp, #8]
 802a906:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802a90a:	00cb      	lsls	r3, r1, #3
 802a90c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802a910:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802a914:	9102      	str	r1, [sp, #8]
 802a916:	9905      	ldr	r1, [sp, #20]
 802a918:	4419      	add	r1, r3
 802a91a:	9105      	str	r1, [sp, #20]
 802a91c:	9904      	ldr	r1, [sp, #16]
 802a91e:	4419      	add	r1, r3
 802a920:	9104      	str	r1, [sp, #16]
 802a922:	9906      	ldr	r1, [sp, #24]
 802a924:	449b      	add	fp, r3
 802a926:	4419      	add	r1, r3
 802a928:	449a      	add	sl, r3
 802a92a:	9b03      	ldr	r3, [sp, #12]
 802a92c:	9106      	str	r1, [sp, #24]
 802a92e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802a932:	9303      	str	r3, [sp, #12]
 802a934:	9a05      	ldr	r2, [sp, #20]
 802a936:	9806      	ldr	r0, [sp, #24]
 802a938:	ed92 4a00 	vldr	s8, [r2]
 802a93c:	ed90 7a00 	vldr	s14, [r0]
 802a940:	ed9b 3a00 	vldr	s6, [fp]
 802a944:	edda 3a00 	vldr	s7, [sl]
 802a948:	edd2 4a01 	vldr	s9, [r2, #4]
 802a94c:	edd0 6a01 	vldr	s13, [r0, #4]
 802a950:	ed9a 2a01 	vldr	s4, [sl, #4]
 802a954:	eddb 7a01 	vldr	s15, [fp, #4]
 802a958:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802a95c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802a95e:	ee34 6a07 	vadd.f32	s12, s8, s14
 802a962:	ee74 5aa6 	vadd.f32	s11, s9, s13
 802a966:	ee36 5a03 	vadd.f32	s10, s12, s6
 802a96a:	ee74 6ae6 	vsub.f32	s13, s9, s13
 802a96e:	ee35 5a23 	vadd.f32	s10, s10, s7
 802a972:	ee34 7a47 	vsub.f32	s14, s8, s14
 802a976:	ed82 5a00 	vstr	s10, [r2]
 802a97a:	ed9b 5a01 	vldr	s10, [fp, #4]
 802a97e:	edda 4a01 	vldr	s9, [sl, #4]
 802a982:	ee35 5a85 	vadd.f32	s10, s11, s10
 802a986:	ee37 4a27 	vadd.f32	s8, s14, s15
 802a98a:	ee35 5a24 	vadd.f32	s10, s10, s9
 802a98e:	ee76 4ac3 	vsub.f32	s9, s13, s6
 802a992:	ed82 5a01 	vstr	s10, [r2, #4]
 802a996:	9a04      	ldr	r2, [sp, #16]
 802a998:	ee34 5aa3 	vadd.f32	s10, s9, s7
 802a99c:	edd2 1a00 	vldr	s3, [r2]
 802a9a0:	edd2 2a01 	vldr	s5, [r2, #4]
 802a9a4:	9a02      	ldr	r2, [sp, #8]
 802a9a6:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a9aa:	ee36 6a43 	vsub.f32	s12, s12, s6
 802a9ae:	ee64 4a21 	vmul.f32	s9, s8, s3
 802a9b2:	ee24 4a22 	vmul.f32	s8, s8, s5
 802a9b6:	ee65 2a22 	vmul.f32	s5, s10, s5
 802a9ba:	ee25 5a21 	vmul.f32	s10, s10, s3
 802a9be:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802a9c2:	ee35 5a44 	vsub.f32	s10, s10, s8
 802a9c6:	ee75 5ae7 	vsub.f32	s11, s11, s15
 802a9ca:	edcb 2a00 	vstr	s5, [fp]
 802a9ce:	ed8b 5a01 	vstr	s10, [fp, #4]
 802a9d2:	ed92 4a01 	vldr	s8, [r2, #4]
 802a9d6:	ed92 5a00 	vldr	s10, [r2]
 802a9da:	9a03      	ldr	r2, [sp, #12]
 802a9dc:	ee36 6a63 	vsub.f32	s12, s12, s7
 802a9e0:	ee75 5ac2 	vsub.f32	s11, s11, s4
 802a9e4:	ee66 4a05 	vmul.f32	s9, s12, s10
 802a9e8:	ee25 5a85 	vmul.f32	s10, s11, s10
 802a9ec:	ee26 6a04 	vmul.f32	s12, s12, s8
 802a9f0:	ee65 5a84 	vmul.f32	s11, s11, s8
 802a9f4:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a9f8:	ee74 5aa5 	vadd.f32	s11, s9, s11
 802a9fc:	ee76 6a83 	vadd.f32	s13, s13, s6
 802aa00:	ee37 7a67 	vsub.f32	s14, s14, s15
 802aa04:	ed80 6a01 	vstr	s12, [r0, #4]
 802aa08:	edc0 5a00 	vstr	s11, [r0]
 802aa0c:	edd2 5a01 	vldr	s11, [r2, #4]
 802aa10:	9807      	ldr	r0, [sp, #28]
 802aa12:	ee77 7a02 	vadd.f32	s15, s14, s4
 802aa16:	ee36 7ae3 	vsub.f32	s14, s13, s7
 802aa1a:	edd2 6a00 	vldr	s13, [r2]
 802aa1e:	ee27 6aa6 	vmul.f32	s12, s15, s13
 802aa22:	ee67 6a26 	vmul.f32	s13, s14, s13
 802aa26:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802aa2a:	ee27 7a25 	vmul.f32	s14, s14, s11
 802aa2e:	ee76 7ae7 	vsub.f32	s15, s13, s15
 802aa32:	ee36 7a07 	vadd.f32	s14, s12, s14
 802aa36:	edca 7a01 	vstr	s15, [sl, #4]
 802aa3a:	ed8a 7a00 	vstr	s14, [sl]
 802aa3e:	6872      	ldr	r2, [r6, #4]
 802aa40:	4621      	mov	r1, r4
 802aa42:	2304      	movs	r3, #4
 802aa44:	f000 f892 	bl	802ab6c <arm_radix8_butterfly_f32>
 802aa48:	9809      	ldr	r0, [sp, #36]	; 0x24
 802aa4a:	6872      	ldr	r2, [r6, #4]
 802aa4c:	4621      	mov	r1, r4
 802aa4e:	2304      	movs	r3, #4
 802aa50:	f000 f88c 	bl	802ab6c <arm_radix8_butterfly_f32>
 802aa54:	980a      	ldr	r0, [sp, #40]	; 0x28
 802aa56:	6872      	ldr	r2, [r6, #4]
 802aa58:	4621      	mov	r1, r4
 802aa5a:	2304      	movs	r3, #4
 802aa5c:	f000 f886 	bl	802ab6c <arm_radix8_butterfly_f32>
 802aa60:	6872      	ldr	r2, [r6, #4]
 802aa62:	9801      	ldr	r0, [sp, #4]
 802aa64:	4621      	mov	r1, r4
 802aa66:	2304      	movs	r3, #4
 802aa68:	b00f      	add	sp, #60	; 0x3c
 802aa6a:	ecbd 8b0a 	vpop	{d8-d12}
 802aa6e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802aa72:	f000 b87b 	b.w	802ab6c <arm_radix8_butterfly_f32>
 802aa76:	bf00      	nop

0802aa78 <arm_cfft_f32>:
 802aa78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802aa7c:	2a01      	cmp	r2, #1
 802aa7e:	4606      	mov	r6, r0
 802aa80:	4617      	mov	r7, r2
 802aa82:	460c      	mov	r4, r1
 802aa84:	4698      	mov	r8, r3
 802aa86:	8805      	ldrh	r5, [r0, #0]
 802aa88:	d054      	beq.n	802ab34 <arm_cfft_f32+0xbc>
 802aa8a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802aa8e:	d04c      	beq.n	802ab2a <arm_cfft_f32+0xb2>
 802aa90:	d916      	bls.n	802aac0 <arm_cfft_f32+0x48>
 802aa92:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802aa96:	d01a      	beq.n	802aace <arm_cfft_f32+0x56>
 802aa98:	d95c      	bls.n	802ab54 <arm_cfft_f32+0xdc>
 802aa9a:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802aa9e:	d044      	beq.n	802ab2a <arm_cfft_f32+0xb2>
 802aaa0:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802aaa4:	d105      	bne.n	802aab2 <arm_cfft_f32+0x3a>
 802aaa6:	2301      	movs	r3, #1
 802aaa8:	6872      	ldr	r2, [r6, #4]
 802aaaa:	4629      	mov	r1, r5
 802aaac:	4620      	mov	r0, r4
 802aaae:	f000 f85d 	bl	802ab6c <arm_radix8_butterfly_f32>
 802aab2:	f1b8 0f00 	cmp.w	r8, #0
 802aab6:	d111      	bne.n	802aadc <arm_cfft_f32+0x64>
 802aab8:	2f01      	cmp	r7, #1
 802aaba:	d016      	beq.n	802aaea <arm_cfft_f32+0x72>
 802aabc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802aac0:	2d20      	cmp	r5, #32
 802aac2:	d032      	beq.n	802ab2a <arm_cfft_f32+0xb2>
 802aac4:	d94a      	bls.n	802ab5c <arm_cfft_f32+0xe4>
 802aac6:	2d40      	cmp	r5, #64	; 0x40
 802aac8:	d0ed      	beq.n	802aaa6 <arm_cfft_f32+0x2e>
 802aaca:	2d80      	cmp	r5, #128	; 0x80
 802aacc:	d1f1      	bne.n	802aab2 <arm_cfft_f32+0x3a>
 802aace:	4621      	mov	r1, r4
 802aad0:	4630      	mov	r0, r6
 802aad2:	f7ff fca3 	bl	802a41c <arm_cfft_radix8by2_f32>
 802aad6:	f1b8 0f00 	cmp.w	r8, #0
 802aada:	d0ed      	beq.n	802aab8 <arm_cfft_f32+0x40>
 802aadc:	68b2      	ldr	r2, [r6, #8]
 802aade:	89b1      	ldrh	r1, [r6, #12]
 802aae0:	4620      	mov	r0, r4
 802aae2:	f7d5 fb85 	bl	80001f0 <arm_bitreversal_32>
 802aae6:	2f01      	cmp	r7, #1
 802aae8:	d1e8      	bne.n	802aabc <arm_cfft_f32+0x44>
 802aaea:	ee07 5a90 	vmov	s15, r5
 802aaee:	eef8 7a67 	vcvt.f32.u32	s15, s15
 802aaf2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802aaf6:	eec7 6a27 	vdiv.f32	s13, s14, s15
 802aafa:	2d00      	cmp	r5, #0
 802aafc:	d0de      	beq.n	802aabc <arm_cfft_f32+0x44>
 802aafe:	f104 0108 	add.w	r1, r4, #8
 802ab02:	2300      	movs	r3, #0
 802ab04:	3301      	adds	r3, #1
 802ab06:	429d      	cmp	r5, r3
 802ab08:	f101 0108 	add.w	r1, r1, #8
 802ab0c:	ed11 7a04 	vldr	s14, [r1, #-16]
 802ab10:	ed51 7a03 	vldr	s15, [r1, #-12]
 802ab14:	ee27 7a26 	vmul.f32	s14, s14, s13
 802ab18:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802ab1c:	ed01 7a04 	vstr	s14, [r1, #-16]
 802ab20:	ed41 7a03 	vstr	s15, [r1, #-12]
 802ab24:	d1ee      	bne.n	802ab04 <arm_cfft_f32+0x8c>
 802ab26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ab2a:	4621      	mov	r1, r4
 802ab2c:	4630      	mov	r0, r6
 802ab2e:	f7ff fd45 	bl	802a5bc <arm_cfft_radix8by4_f32>
 802ab32:	e7be      	b.n	802aab2 <arm_cfft_f32+0x3a>
 802ab34:	b1ad      	cbz	r5, 802ab62 <arm_cfft_f32+0xea>
 802ab36:	f101 030c 	add.w	r3, r1, #12
 802ab3a:	2200      	movs	r2, #0
 802ab3c:	ed53 7a02 	vldr	s15, [r3, #-8]
 802ab40:	3201      	adds	r2, #1
 802ab42:	eef1 7a67 	vneg.f32	s15, s15
 802ab46:	4295      	cmp	r5, r2
 802ab48:	ed43 7a02 	vstr	s15, [r3, #-8]
 802ab4c:	f103 0308 	add.w	r3, r3, #8
 802ab50:	d1f4      	bne.n	802ab3c <arm_cfft_f32+0xc4>
 802ab52:	e79a      	b.n	802aa8a <arm_cfft_f32+0x12>
 802ab54:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802ab58:	d0a5      	beq.n	802aaa6 <arm_cfft_f32+0x2e>
 802ab5a:	e7aa      	b.n	802aab2 <arm_cfft_f32+0x3a>
 802ab5c:	2d10      	cmp	r5, #16
 802ab5e:	d0b6      	beq.n	802aace <arm_cfft_f32+0x56>
 802ab60:	e7a7      	b.n	802aab2 <arm_cfft_f32+0x3a>
 802ab62:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802ab66:	d894      	bhi.n	802aa92 <arm_cfft_f32+0x1a>
 802ab68:	e7aa      	b.n	802aac0 <arm_cfft_f32+0x48>
 802ab6a:	bf00      	nop

0802ab6c <arm_radix8_butterfly_f32>:
 802ab6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ab70:	ed2d 8b10 	vpush	{d8-d15}
 802ab74:	461c      	mov	r4, r3
 802ab76:	b09d      	sub	sp, #116	; 0x74
 802ab78:	4603      	mov	r3, r0
 802ab7a:	3304      	adds	r3, #4
 802ab7c:	ed9f bac4 	vldr	s22, [pc, #784]	; 802ae90 <arm_radix8_butterfly_f32+0x324>
 802ab80:	9019      	str	r0, [sp, #100]	; 0x64
 802ab82:	921a      	str	r2, [sp, #104]	; 0x68
 802ab84:	468b      	mov	fp, r1
 802ab86:	931b      	str	r3, [sp, #108]	; 0x6c
 802ab88:	468a      	mov	sl, r1
 802ab8a:	46a1      	mov	r9, r4
 802ab8c:	4607      	mov	r7, r0
 802ab8e:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802ab92:	ea4f 0843 	mov.w	r8, r3, lsl #1
 802ab96:	eb03 0508 	add.w	r5, r3, r8
 802ab9a:	195c      	adds	r4, r3, r5
 802ab9c:	00de      	lsls	r6, r3, #3
 802ab9e:	191a      	adds	r2, r3, r4
 802aba0:	9600      	str	r6, [sp, #0]
 802aba2:	1898      	adds	r0, r3, r2
 802aba4:	4619      	mov	r1, r3
 802aba6:	9e00      	ldr	r6, [sp, #0]
 802aba8:	9311      	str	r3, [sp, #68]	; 0x44
 802abaa:	4401      	add	r1, r0
 802abac:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 802abb0:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
 802abb4:	19be      	adds	r6, r7, r6
 802abb6:	eb07 05c5 	add.w	r5, r7, r5, lsl #3
 802abba:	eb07 04c4 	add.w	r4, r7, r4, lsl #3
 802abbe:	eb07 00c0 	add.w	r0, r7, r0, lsl #3
 802abc2:	9f00      	ldr	r7, [sp, #0]
 802abc4:	011b      	lsls	r3, r3, #4
 802abc6:	eb06 0e07 	add.w	lr, r6, r7
 802abca:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 802abcc:	9302      	str	r3, [sp, #8]
 802abce:	3204      	adds	r2, #4
 802abd0:	3104      	adds	r1, #4
 802abd2:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802abd6:	f04f 0c00 	mov.w	ip, #0
 802abda:	edde 7a00 	vldr	s15, [lr]
 802abde:	edd6 6a00 	vldr	s13, [r6]
 802abe2:	ed95 2a00 	vldr	s4, [r5]
 802abe6:	ed17 aa01 	vldr	s20, [r7, #-4]
 802abea:	edd4 4a00 	vldr	s9, [r4]
 802abee:	ed90 5a00 	vldr	s10, [r0]
 802abf2:	ed12 7a01 	vldr	s14, [r2, #-4]
 802abf6:	ed51 0a01 	vldr	s1, [r1, #-4]
 802abfa:	ee77 8a85 	vadd.f32	s17, s15, s10
 802abfe:	ee76 3a87 	vadd.f32	s7, s13, s14
 802ac02:	ee32 4a20 	vadd.f32	s8, s4, s1
 802ac06:	ee3a 3a24 	vadd.f32	s6, s20, s9
 802ac0a:	ee33 6a84 	vadd.f32	s12, s7, s8
 802ac0e:	ee73 5a28 	vadd.f32	s11, s6, s17
 802ac12:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802ac16:	ee75 6a86 	vadd.f32	s13, s11, s12
 802ac1a:	ee75 5ac6 	vsub.f32	s11, s11, s12
 802ac1e:	ed47 6a01 	vstr	s13, [r7, #-4]
 802ac22:	edc4 5a00 	vstr	s11, [r4]
 802ac26:	ed92 9a00 	vldr	s18, [r2]
 802ac2a:	ed95 1a01 	vldr	s2, [r5, #4]
 802ac2e:	edd6 5a01 	vldr	s11, [r6, #4]
 802ac32:	ed91 6a00 	vldr	s12, [r1]
 802ac36:	edd7 2a00 	vldr	s5, [r7]
 802ac3a:	edd4 1a01 	vldr	s3, [r4, #4]
 802ac3e:	edde 6a01 	vldr	s13, [lr, #4]
 802ac42:	edd0 9a01 	vldr	s19, [r0, #4]
 802ac46:	ee72 0a60 	vsub.f32	s1, s4, s1
 802ac4a:	ee71 aa46 	vsub.f32	s21, s2, s12
 802ac4e:	ee35 2ac9 	vsub.f32	s4, s11, s18
 802ac52:	ee37 0a60 	vsub.f32	s0, s14, s1
 802ac56:	ee32 8a2a 	vadd.f32	s16, s4, s21
 802ac5a:	ee37 7a20 	vadd.f32	s14, s14, s1
 802ac5e:	ee32 2a6a 	vsub.f32	s4, s4, s21
 802ac62:	ee37 5ac5 	vsub.f32	s10, s15, s10
 802ac66:	ee75 5a89 	vadd.f32	s11, s11, s18
 802ac6a:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802ac6e:	ee7a 4a64 	vsub.f32	s9, s20, s9
 802ac72:	ee31 6a06 	vadd.f32	s12, s2, s12
 802ac76:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802ac7a:	ee32 1aa1 	vadd.f32	s2, s5, s3
 802ac7e:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802ac82:	ee72 1ae1 	vsub.f32	s3, s5, s3
 802ac86:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802ac8a:	ee62 2a0b 	vmul.f32	s5, s4, s22
 802ac8e:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802ac92:	ee33 3a68 	vsub.f32	s6, s6, s17
 802ac96:	ee36 0a88 	vadd.f32	s0, s13, s16
 802ac9a:	ee75 8a86 	vadd.f32	s17, s11, s12
 802ac9e:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802aca2:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802aca6:	ee74 6ae0 	vsub.f32	s13, s9, s1
 802acaa:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802acae:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802acb2:	ee75 4a27 	vadd.f32	s9, s10, s15
 802acb6:	ee71 5a49 	vsub.f32	s11, s2, s18
 802acba:	ee31 2a09 	vadd.f32	s4, s2, s18
 802acbe:	ee75 7a67 	vsub.f32	s15, s10, s15
 802acc2:	ee31 1aa2 	vadd.f32	s2, s3, s5
 802acc6:	ee71 2ae2 	vsub.f32	s5, s3, s5
 802acca:	ee73 0a06 	vadd.f32	s1, s6, s12
 802acce:	ee75 1ac4 	vsub.f32	s3, s11, s8
 802acd2:	ee36 5a87 	vadd.f32	s10, s13, s14
 802acd6:	ee32 8a28 	vadd.f32	s16, s4, s17
 802acda:	ee33 6a46 	vsub.f32	s12, s6, s12
 802acde:	ee34 4a25 	vadd.f32	s8, s8, s11
 802ace2:	ee33 3a80 	vadd.f32	s6, s7, s0
 802ace6:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802acea:	ee71 5a64 	vsub.f32	s11, s2, s9
 802acee:	ee72 6ae7 	vsub.f32	s13, s5, s15
 802acf2:	ee32 2a68 	vsub.f32	s4, s4, s17
 802acf6:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802acfa:	ee74 4a81 	vadd.f32	s9, s9, s2
 802acfe:	ee77 7aa2 	vadd.f32	s15, s15, s5
 802ad02:	44dc      	add	ip, fp
 802ad04:	45e2      	cmp	sl, ip
 802ad06:	ed87 8a00 	vstr	s16, [r7]
 802ad0a:	ed84 2a01 	vstr	s4, [r4, #4]
 802ad0e:	441f      	add	r7, r3
 802ad10:	edce 0a00 	vstr	s1, [lr]
 802ad14:	441c      	add	r4, r3
 802ad16:	ed80 6a00 	vstr	s12, [r0]
 802ad1a:	edce 1a01 	vstr	s3, [lr, #4]
 802ad1e:	ed80 4a01 	vstr	s8, [r0, #4]
 802ad22:	449e      	add	lr, r3
 802ad24:	ed86 3a00 	vstr	s6, [r6]
 802ad28:	4418      	add	r0, r3
 802ad2a:	ed41 3a01 	vstr	s7, [r1, #-4]
 802ad2e:	ed02 5a01 	vstr	s10, [r2, #-4]
 802ad32:	ed85 7a00 	vstr	s14, [r5]
 802ad36:	edc6 5a01 	vstr	s11, [r6, #4]
 802ad3a:	edc1 4a00 	vstr	s9, [r1]
 802ad3e:	441e      	add	r6, r3
 802ad40:	edc2 6a00 	vstr	s13, [r2]
 802ad44:	4419      	add	r1, r3
 802ad46:	edc5 7a01 	vstr	s15, [r5, #4]
 802ad4a:	441a      	add	r2, r3
 802ad4c:	441d      	add	r5, r3
 802ad4e:	f63f af44 	bhi.w	802abda <arm_radix8_butterfly_f32+0x6e>
 802ad52:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802ad54:	2a07      	cmp	r2, #7
 802ad56:	f240 81f5 	bls.w	802b144 <arm_radix8_butterfly_f32+0x5d8>
 802ad5a:	f108 0101 	add.w	r1, r8, #1
 802ad5e:	188f      	adds	r7, r1, r2
 802ad60:	eb09 0849 	add.w	r8, r9, r9, lsl #1
 802ad64:	19d6      	adds	r6, r2, r7
 802ad66:	eb08 0c09 	add.w	ip, r8, r9
 802ad6a:	1994      	adds	r4, r2, r6
 802ad6c:	eb0c 0e09 	add.w	lr, ip, r9
 802ad70:	4610      	mov	r0, r2
 802ad72:	9701      	str	r7, [sp, #4]
 802ad74:	4420      	add	r0, r4
 802ad76:	eb0e 0709 	add.w	r7, lr, r9
 802ad7a:	1815      	adds	r5, r2, r0
 802ad7c:	eb07 0209 	add.w	r2, r7, r9
 802ad80:	9203      	str	r2, [sp, #12]
 802ad82:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 802ad84:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 802ad88:	9117      	str	r1, [sp, #92]	; 0x5c
 802ad8a:	440a      	add	r2, r1
 802ad8c:	9900      	ldr	r1, [sp, #0]
 802ad8e:	3108      	adds	r1, #8
 802ad90:	9100      	str	r1, [sp, #0]
 802ad92:	9902      	ldr	r1, [sp, #8]
 802ad94:	3108      	adds	r1, #8
 802ad96:	9102      	str	r1, [sp, #8]
 802ad98:	9919      	ldr	r1, [sp, #100]	; 0x64
 802ad9a:	00ff      	lsls	r7, r7, #3
 802ad9c:	9715      	str	r7, [sp, #84]	; 0x54
 802ad9e:	eb01 04c4 	add.w	r4, r1, r4, lsl #3
 802ada2:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 802ada6:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 802adaa:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 802adac:	9903      	ldr	r1, [sp, #12]
 802adae:	19d7      	adds	r7, r2, r7
 802adb0:	00c9      	lsls	r1, r1, #3
 802adb2:	9114      	str	r1, [sp, #80]	; 0x50
 802adb4:	9710      	str	r7, [sp, #64]	; 0x40
 802adb6:	9919      	ldr	r1, [sp, #100]	; 0x64
 802adb8:	9f00      	ldr	r7, [sp, #0]
 802adba:	19cf      	adds	r7, r1, r7
 802adbc:	970d      	str	r7, [sp, #52]	; 0x34
 802adbe:	9f02      	ldr	r7, [sp, #8]
 802adc0:	19cf      	adds	r7, r1, r7
 802adc2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802adc6:	970c      	str	r7, [sp, #48]	; 0x30
 802adc8:	9f01      	ldr	r7, [sp, #4]
 802adca:	f8cd e058 	str.w	lr, [sp, #88]	; 0x58
 802adce:	3504      	adds	r5, #4
 802add0:	3004      	adds	r0, #4
 802add2:	eb01 0ec7 	add.w	lr, r1, r7, lsl #3
 802add6:	9508      	str	r5, [sp, #32]
 802add8:	9009      	str	r0, [sp, #36]	; 0x24
 802adda:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802addc:	981a      	ldr	r0, [sp, #104]	; 0x68
 802adde:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
 802ade2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 802ade6:	eb01 0ec6 	add.w	lr, r1, r6, lsl #3
 802adea:	9e14      	ldr	r6, [sp, #80]	; 0x50
 802adec:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
 802adf0:	1945      	adds	r5, r0, r5
 802adf2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802adf6:	460f      	mov	r7, r1
 802adf8:	3404      	adds	r4, #4
 802adfa:	4641      	mov	r1, r8
 802adfc:	1841      	adds	r1, r0, r1
 802adfe:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 802ae02:	940a      	str	r4, [sp, #40]	; 0x28
 802ae04:	eb00 0c06 	add.w	ip, r0, r6
 802ae08:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 802ae0c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 802ae0e:	9506      	str	r5, [sp, #24]
 802ae10:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802ae12:	9105      	str	r1, [sp, #20]
 802ae14:	4639      	mov	r1, r7
 802ae16:	1905      	adds	r5, r0, r4
 802ae18:	3108      	adds	r1, #8
 802ae1a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802ae1c:	9507      	str	r5, [sp, #28]
 802ae1e:	910f      	str	r1, [sp, #60]	; 0x3c
 802ae20:	ea4f 1509 	mov.w	r5, r9, lsl #4
 802ae24:	2101      	movs	r1, #1
 802ae26:	eb00 0e06 	add.w	lr, r0, r6
 802ae2a:	9518      	str	r5, [sp, #96]	; 0x60
 802ae2c:	9404      	str	r4, [sp, #16]
 802ae2e:	9103      	str	r1, [sp, #12]
 802ae30:	4620      	mov	r0, r4
 802ae32:	4689      	mov	r9, r1
 802ae34:	9e06      	ldr	r6, [sp, #24]
 802ae36:	ed90 fa00 	vldr	s30, [r0]
 802ae3a:	edd6 7a01 	vldr	s15, [r6, #4]
 802ae3e:	edd0 ba01 	vldr	s23, [r0, #4]
 802ae42:	edcd 7a00 	vstr	s15, [sp]
 802ae46:	a80d      	add	r0, sp, #52	; 0x34
 802ae48:	edde 7a01 	vldr	s15, [lr, #4]
 802ae4c:	9c05      	ldr	r4, [sp, #20]
 802ae4e:	9d07      	ldr	r5, [sp, #28]
 802ae50:	edd2 fa00 	vldr	s31, [r2]
 802ae54:	ed92 ca01 	vldr	s24, [r2, #4]
 802ae58:	edcd 7a01 	vstr	s15, [sp, #4]
 802ae5c:	c807      	ldmia	r0, {r0, r1, r2}
 802ae5e:	eddc 7a01 	vldr	s15, [ip, #4]
 802ae62:	edd4 ea00 	vldr	s29, [r4]
 802ae66:	ed95 ea00 	vldr	s28, [r5]
 802ae6a:	edd6 da00 	vldr	s27, [r6]
 802ae6e:	edd4 aa01 	vldr	s21, [r4, #4]
 802ae72:	ed95 aa01 	vldr	s20, [r5, #4]
 802ae76:	ed9e da00 	vldr	s26, [lr]
 802ae7a:	eddc ca00 	vldr	s25, [ip]
 802ae7e:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802ae82:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802ae84:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 802ae86:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802ae88:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802ae8a:	edcd 7a02 	vstr	s15, [sp, #8]
 802ae8e:	e001      	b.n	802ae94 <arm_radix8_butterfly_f32+0x328>
 802ae90:	3f3504f3 	.word	0x3f3504f3
 802ae94:	ed16 6a01 	vldr	s12, [r6, #-4]
 802ae98:	ed91 5a00 	vldr	s10, [r1]
 802ae9c:	ed57 9a01 	vldr	s19, [r7, #-4]
 802aea0:	edd5 7a00 	vldr	s15, [r5]
 802aea4:	ed18 7a01 	vldr	s14, [r8, #-4]
 802aea8:	edd2 3a00 	vldr	s7, [r2]
 802aeac:	ed94 3a00 	vldr	s6, [r4]
 802aeb0:	ed90 2a00 	vldr	s4, [r0]
 802aeb4:	ed92 0a01 	vldr	s0, [r2, #4]
 802aeb8:	ee33 8a85 	vadd.f32	s16, s7, s10
 802aebc:	ee32 1a06 	vadd.f32	s2, s4, s12
 802aec0:	ee33 4a29 	vadd.f32	s8, s6, s19
 802aec4:	ee77 4a87 	vadd.f32	s9, s15, s14
 802aec8:	ee78 1a04 	vadd.f32	s3, s16, s8
 802aecc:	ee71 6a24 	vadd.f32	s13, s2, s9
 802aed0:	ee32 2a46 	vsub.f32	s4, s4, s12
 802aed4:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802aed8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aedc:	ed82 6a00 	vstr	s12, [r2]
 802aee0:	edd5 8a01 	vldr	s17, [r5, #4]
 802aee4:	ed90 9a01 	vldr	s18, [r0, #4]
 802aee8:	edd6 2a00 	vldr	s5, [r6]
 802aeec:	ed98 7a00 	vldr	s14, [r8]
 802aef0:	edd4 0a01 	vldr	s1, [r4, #4]
 802aef4:	ed91 6a01 	vldr	s12, [r1, #4]
 802aef8:	edd7 5a00 	vldr	s11, [r7]
 802aefc:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802af00:	ee33 3a69 	vsub.f32	s6, s6, s19
 802af04:	ee39 5a62 	vsub.f32	s10, s18, s5
 802af08:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802af0c:	ee38 4a44 	vsub.f32	s8, s16, s8
 802af10:	ee38 7a87 	vadd.f32	s14, s17, s14
 802af14:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802af18:	ee79 2a22 	vadd.f32	s5, s18, s5
 802af1c:	ee75 8a69 	vsub.f32	s17, s10, s19
 802af20:	ee32 9a27 	vadd.f32	s18, s4, s15
 802af24:	ee35 5a29 	vadd.f32	s10, s10, s19
 802af28:	ee72 7a67 	vsub.f32	s15, s4, s15
 802af2c:	ee30 2a06 	vadd.f32	s4, s0, s12
 802af30:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802af34:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802af38:	ee32 9a08 	vadd.f32	s18, s4, s16
 802af3c:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802af40:	ee32 2a48 	vsub.f32	s4, s4, s16
 802af44:	ee71 4a64 	vsub.f32	s9, s2, s9
 802af48:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802af4c:	ee32 1a87 	vadd.f32	s2, s5, s14
 802af50:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802af54:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802af58:	ee30 6a46 	vsub.f32	s12, s0, s12
 802af5c:	ee73 0a29 	vadd.f32	s1, s6, s19
 802af60:	ee36 0a28 	vadd.f32	s0, s12, s17
 802af64:	ee33 3a69 	vsub.f32	s6, s6, s19
 802af68:	ee32 7a64 	vsub.f32	s14, s4, s9
 802af6c:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802af70:	ee36 6a68 	vsub.f32	s12, s12, s17
 802af74:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802af78:	ee75 8a85 	vadd.f32	s17, s11, s10
 802af7c:	ee74 3a22 	vadd.f32	s7, s8, s5
 802af80:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802af84:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802af88:	ee79 1a41 	vsub.f32	s3, s18, s2
 802af8c:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802af90:	ee76 5a43 	vsub.f32	s11, s12, s6
 802af94:	ee74 2a62 	vsub.f32	s5, s8, s5
 802af98:	ee74 4a82 	vadd.f32	s9, s9, s4
 802af9c:	ee30 4a60 	vsub.f32	s8, s0, s1
 802afa0:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802afa4:	ee30 0a80 	vadd.f32	s0, s1, s0
 802afa8:	ee77 9a85 	vadd.f32	s19, s15, s10
 802afac:	ee33 6a06 	vadd.f32	s12, s6, s12
 802afb0:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802afb4:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802afb8:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802afbc:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802afc0:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802afc4:	ee39 1a01 	vadd.f32	s2, s18, s2
 802afc8:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802afcc:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802afd0:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802afd4:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802afd8:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802afdc:	ee35 3a03 	vadd.f32	s6, s10, s6
 802afe0:	ee72 6a66 	vsub.f32	s13, s4, s13
 802afe4:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802afe8:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802afec:	ed9d 4a02 	vldr	s8, [sp, #8]
 802aff0:	ed82 1a01 	vstr	s2, [r2, #4]
 802aff4:	ee77 3a63 	vsub.f32	s7, s14, s7
 802aff8:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802affc:	ed9d 7a01 	vldr	s14, [sp, #4]
 802b000:	ed81 3a00 	vstr	s6, [r1]
 802b004:	ee30 9a89 	vadd.f32	s18, s1, s18
 802b008:	ee32 2a05 	vadd.f32	s4, s4, s10
 802b00c:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802b010:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802b014:	ee67 2a22 	vmul.f32	s5, s14, s5
 802b018:	ee64 1a00 	vmul.f32	s3, s8, s0
 802b01c:	ee27 7a24 	vmul.f32	s14, s14, s9
 802b020:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802b024:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802b028:	ee64 8a28 	vmul.f32	s17, s8, s17
 802b02c:	ed9d 4a00 	vldr	s8, [sp]
 802b030:	edc1 6a01 	vstr	s13, [r1, #4]
 802b034:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802b038:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802b03c:	ee64 9a29 	vmul.f32	s19, s8, s19
 802b040:	ee24 4a25 	vmul.f32	s8, s8, s11
 802b044:	ee30 7a87 	vadd.f32	s14, s1, s14
 802b048:	ee74 4a84 	vadd.f32	s9, s9, s8
 802b04c:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802b050:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802b054:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802b058:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802b05c:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802b060:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802b064:	ee75 1a21 	vadd.f32	s3, s10, s3
 802b068:	ee30 0a68 	vsub.f32	s0, s0, s17
 802b06c:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802b070:	ee70 0a84 	vadd.f32	s1, s1, s8
 802b074:	ee36 6a67 	vsub.f32	s12, s12, s15
 802b078:	44d9      	add	r9, fp
 802b07a:	45ca      	cmp	sl, r9
 802b07c:	ed84 9a00 	vstr	s18, [r4]
 802b080:	edc4 3a01 	vstr	s7, [r4, #4]
 802b084:	441a      	add	r2, r3
 802b086:	ed07 7a01 	vstr	s14, [r7, #-4]
 802b08a:	edc7 2a00 	vstr	s5, [r7]
 802b08e:	4419      	add	r1, r3
 802b090:	ed80 2a00 	vstr	s4, [r0]
 802b094:	ed80 8a01 	vstr	s16, [r0, #4]
 802b098:	441c      	add	r4, r3
 802b09a:	ed48 1a01 	vstr	s3, [r8, #-4]
 802b09e:	ed88 0a00 	vstr	s0, [r8]
 802b0a2:	441f      	add	r7, r3
 802b0a4:	ed46 4a01 	vstr	s9, [r6, #-4]
 802b0a8:	4418      	add	r0, r3
 802b0aa:	edc6 9a00 	vstr	s19, [r6]
 802b0ae:	4498      	add	r8, r3
 802b0b0:	edc5 0a00 	vstr	s1, [r5]
 802b0b4:	ed85 6a01 	vstr	s12, [r5, #4]
 802b0b8:	441e      	add	r6, r3
 802b0ba:	441d      	add	r5, r3
 802b0bc:	f63f aeea 	bhi.w	802ae94 <arm_radix8_butterfly_f32+0x328>
 802b0c0:	9a03      	ldr	r2, [sp, #12]
 802b0c2:	9818      	ldr	r0, [sp, #96]	; 0x60
 802b0c4:	3201      	adds	r2, #1
 802b0c6:	4611      	mov	r1, r2
 802b0c8:	9203      	str	r2, [sp, #12]
 802b0ca:	9a04      	ldr	r2, [sp, #16]
 802b0cc:	4402      	add	r2, r0
 802b0ce:	9204      	str	r2, [sp, #16]
 802b0d0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802b0d2:	9a05      	ldr	r2, [sp, #20]
 802b0d4:	4402      	add	r2, r0
 802b0d6:	9205      	str	r2, [sp, #20]
 802b0d8:	9812      	ldr	r0, [sp, #72]	; 0x48
 802b0da:	9a07      	ldr	r2, [sp, #28]
 802b0dc:	4402      	add	r2, r0
 802b0de:	9207      	str	r2, [sp, #28]
 802b0e0:	9816      	ldr	r0, [sp, #88]	; 0x58
 802b0e2:	9a06      	ldr	r2, [sp, #24]
 802b0e4:	4402      	add	r2, r0
 802b0e6:	9206      	str	r2, [sp, #24]
 802b0e8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 802b0ea:	4496      	add	lr, r2
 802b0ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802b0ee:	4494      	add	ip, r2
 802b0f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802b0f2:	3208      	adds	r2, #8
 802b0f4:	920f      	str	r2, [sp, #60]	; 0x3c
 802b0f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802b0f8:	3208      	adds	r2, #8
 802b0fa:	920e      	str	r2, [sp, #56]	; 0x38
 802b0fc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802b0fe:	3208      	adds	r2, #8
 802b100:	920d      	str	r2, [sp, #52]	; 0x34
 802b102:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802b104:	3208      	adds	r2, #8
 802b106:	920c      	str	r2, [sp, #48]	; 0x30
 802b108:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802b10a:	3208      	adds	r2, #8
 802b10c:	920b      	str	r2, [sp, #44]	; 0x2c
 802b10e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802b110:	3208      	adds	r2, #8
 802b112:	920a      	str	r2, [sp, #40]	; 0x28
 802b114:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b116:	3208      	adds	r2, #8
 802b118:	9209      	str	r2, [sp, #36]	; 0x24
 802b11a:	9a08      	ldr	r2, [sp, #32]
 802b11c:	3208      	adds	r2, #8
 802b11e:	9208      	str	r2, [sp, #32]
 802b120:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802b122:	9811      	ldr	r0, [sp, #68]	; 0x44
 802b124:	4288      	cmp	r0, r1
 802b126:	4622      	mov	r2, r4
 802b128:	d007      	beq.n	802b13a <arm_radix8_butterfly_f32+0x5ce>
 802b12a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 802b12c:	f8dd 900c 	ldr.w	r9, [sp, #12]
 802b130:	4621      	mov	r1, r4
 802b132:	4401      	add	r1, r0
 802b134:	9110      	str	r1, [sp, #64]	; 0x40
 802b136:	9804      	ldr	r0, [sp, #16]
 802b138:	e67c      	b.n	802ae34 <arm_radix8_butterfly_f32+0x2c8>
 802b13a:	4683      	mov	fp, r0
 802b13c:	f8bd 905c 	ldrh.w	r9, [sp, #92]	; 0x5c
 802b140:	9f19      	ldr	r7, [sp, #100]	; 0x64
 802b142:	e524      	b.n	802ab8e <arm_radix8_butterfly_f32+0x22>
 802b144:	b01d      	add	sp, #116	; 0x74
 802b146:	ecbd 8b10 	vpop	{d8-d15}
 802b14a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b14e:	bf00      	nop

0802b150 <__aeabi_atexit>:
 802b150:	460b      	mov	r3, r1
 802b152:	4601      	mov	r1, r0
 802b154:	4618      	mov	r0, r3
 802b156:	f000 bf71 	b.w	802c03c <__cxa_atexit>

0802b15a <_ZdlPvj>:
 802b15a:	f000 b812 	b.w	802b182 <_ZdlPv>

0802b15e <__cxa_guard_acquire>:
 802b15e:	6803      	ldr	r3, [r0, #0]
 802b160:	07db      	lsls	r3, r3, #31
 802b162:	d406      	bmi.n	802b172 <__cxa_guard_acquire+0x14>
 802b164:	7843      	ldrb	r3, [r0, #1]
 802b166:	b103      	cbz	r3, 802b16a <__cxa_guard_acquire+0xc>
 802b168:	deff      	udf	#255	; 0xff
 802b16a:	2301      	movs	r3, #1
 802b16c:	7043      	strb	r3, [r0, #1]
 802b16e:	4618      	mov	r0, r3
 802b170:	4770      	bx	lr
 802b172:	2000      	movs	r0, #0
 802b174:	4770      	bx	lr

0802b176 <__cxa_guard_release>:
 802b176:	2301      	movs	r3, #1
 802b178:	6003      	str	r3, [r0, #0]
 802b17a:	4770      	bx	lr

0802b17c <__cxa_pure_virtual>:
 802b17c:	b508      	push	{r3, lr}
 802b17e:	f000 f80f 	bl	802b1a0 <_ZSt9terminatev>

0802b182 <_ZdlPv>:
 802b182:	f001 b8a7 	b.w	802c2d4 <free>

0802b186 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802b186:	b508      	push	{r3, lr}
 802b188:	4780      	blx	r0
 802b18a:	f000 ff2b 	bl	802bfe4 <abort>
	...

0802b190 <_ZSt13get_terminatev>:
 802b190:	4b02      	ldr	r3, [pc, #8]	; (802b19c <_ZSt13get_terminatev+0xc>)
 802b192:	6818      	ldr	r0, [r3, #0]
 802b194:	f3bf 8f5b 	dmb	ish
 802b198:	4770      	bx	lr
 802b19a:	bf00      	nop
 802b19c:	20000110 	.word	0x20000110

0802b1a0 <_ZSt9terminatev>:
 802b1a0:	b508      	push	{r3, lr}
 802b1a2:	f7ff fff5 	bl	802b190 <_ZSt13get_terminatev>
 802b1a6:	f7ff ffee 	bl	802b186 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802b1ac <pow>:
 802b1ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b1ae:	ed2d 8b02 	vpush	{d8}
 802b1b2:	eeb0 8a40 	vmov.f32	s16, s0
 802b1b6:	eef0 8a60 	vmov.f32	s17, s1
 802b1ba:	ec55 4b11 	vmov	r4, r5, d1
 802b1be:	f000 f867 	bl	802b290 <__ieee754_pow>
 802b1c2:	4622      	mov	r2, r4
 802b1c4:	462b      	mov	r3, r5
 802b1c6:	4620      	mov	r0, r4
 802b1c8:	4629      	mov	r1, r5
 802b1ca:	ec57 6b10 	vmov	r6, r7, d0
 802b1ce:	f7d5 fd1d 	bl	8000c0c <__aeabi_dcmpun>
 802b1d2:	2800      	cmp	r0, #0
 802b1d4:	d13b      	bne.n	802b24e <pow+0xa2>
 802b1d6:	ec51 0b18 	vmov	r0, r1, d8
 802b1da:	2200      	movs	r2, #0
 802b1dc:	2300      	movs	r3, #0
 802b1de:	f7d5 fce3 	bl	8000ba8 <__aeabi_dcmpeq>
 802b1e2:	b1b8      	cbz	r0, 802b214 <pow+0x68>
 802b1e4:	2200      	movs	r2, #0
 802b1e6:	2300      	movs	r3, #0
 802b1e8:	4620      	mov	r0, r4
 802b1ea:	4629      	mov	r1, r5
 802b1ec:	f7d5 fcdc 	bl	8000ba8 <__aeabi_dcmpeq>
 802b1f0:	2800      	cmp	r0, #0
 802b1f2:	d146      	bne.n	802b282 <pow+0xd6>
 802b1f4:	ec45 4b10 	vmov	d0, r4, r5
 802b1f8:	f000 fe63 	bl	802bec2 <finite>
 802b1fc:	b338      	cbz	r0, 802b24e <pow+0xa2>
 802b1fe:	2200      	movs	r2, #0
 802b200:	2300      	movs	r3, #0
 802b202:	4620      	mov	r0, r4
 802b204:	4629      	mov	r1, r5
 802b206:	f7d5 fcd9 	bl	8000bbc <__aeabi_dcmplt>
 802b20a:	b300      	cbz	r0, 802b24e <pow+0xa2>
 802b20c:	f000 ff24 	bl	802c058 <__errno>
 802b210:	2322      	movs	r3, #34	; 0x22
 802b212:	e01b      	b.n	802b24c <pow+0xa0>
 802b214:	ec47 6b10 	vmov	d0, r6, r7
 802b218:	f000 fe53 	bl	802bec2 <finite>
 802b21c:	b9e0      	cbnz	r0, 802b258 <pow+0xac>
 802b21e:	eeb0 0a48 	vmov.f32	s0, s16
 802b222:	eef0 0a68 	vmov.f32	s1, s17
 802b226:	f000 fe4c 	bl	802bec2 <finite>
 802b22a:	b1a8      	cbz	r0, 802b258 <pow+0xac>
 802b22c:	ec45 4b10 	vmov	d0, r4, r5
 802b230:	f000 fe47 	bl	802bec2 <finite>
 802b234:	b180      	cbz	r0, 802b258 <pow+0xac>
 802b236:	4632      	mov	r2, r6
 802b238:	463b      	mov	r3, r7
 802b23a:	4630      	mov	r0, r6
 802b23c:	4639      	mov	r1, r7
 802b23e:	f7d5 fce5 	bl	8000c0c <__aeabi_dcmpun>
 802b242:	2800      	cmp	r0, #0
 802b244:	d0e2      	beq.n	802b20c <pow+0x60>
 802b246:	f000 ff07 	bl	802c058 <__errno>
 802b24a:	2321      	movs	r3, #33	; 0x21
 802b24c:	6003      	str	r3, [r0, #0]
 802b24e:	ecbd 8b02 	vpop	{d8}
 802b252:	ec47 6b10 	vmov	d0, r6, r7
 802b256:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802b258:	2200      	movs	r2, #0
 802b25a:	2300      	movs	r3, #0
 802b25c:	4630      	mov	r0, r6
 802b25e:	4639      	mov	r1, r7
 802b260:	f7d5 fca2 	bl	8000ba8 <__aeabi_dcmpeq>
 802b264:	2800      	cmp	r0, #0
 802b266:	d0f2      	beq.n	802b24e <pow+0xa2>
 802b268:	eeb0 0a48 	vmov.f32	s0, s16
 802b26c:	eef0 0a68 	vmov.f32	s1, s17
 802b270:	f000 fe27 	bl	802bec2 <finite>
 802b274:	2800      	cmp	r0, #0
 802b276:	d0ea      	beq.n	802b24e <pow+0xa2>
 802b278:	ec45 4b10 	vmov	d0, r4, r5
 802b27c:	f000 fe21 	bl	802bec2 <finite>
 802b280:	e7c3      	b.n	802b20a <pow+0x5e>
 802b282:	4f01      	ldr	r7, [pc, #4]	; (802b288 <pow+0xdc>)
 802b284:	2600      	movs	r6, #0
 802b286:	e7e2      	b.n	802b24e <pow+0xa2>
 802b288:	3ff00000 	.word	0x3ff00000
 802b28c:	00000000 	.word	0x00000000

0802b290 <__ieee754_pow>:
 802b290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b294:	ed2d 8b06 	vpush	{d8-d10}
 802b298:	b089      	sub	sp, #36	; 0x24
 802b29a:	ed8d 1b00 	vstr	d1, [sp]
 802b29e:	e9dd 2900 	ldrd	r2, r9, [sp]
 802b2a2:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 802b2a6:	ea58 0102 	orrs.w	r1, r8, r2
 802b2aa:	ec57 6b10 	vmov	r6, r7, d0
 802b2ae:	d115      	bne.n	802b2dc <__ieee754_pow+0x4c>
 802b2b0:	19b3      	adds	r3, r6, r6
 802b2b2:	f487 2200 	eor.w	r2, r7, #524288	; 0x80000
 802b2b6:	4152      	adcs	r2, r2
 802b2b8:	4299      	cmp	r1, r3
 802b2ba:	4b89      	ldr	r3, [pc, #548]	; (802b4e0 <__ieee754_pow+0x250>)
 802b2bc:	4193      	sbcs	r3, r2
 802b2be:	f080 84d2 	bcs.w	802bc66 <__ieee754_pow+0x9d6>
 802b2c2:	e9dd 2300 	ldrd	r2, r3, [sp]
 802b2c6:	4630      	mov	r0, r6
 802b2c8:	4639      	mov	r1, r7
 802b2ca:	f7d5 f84f 	bl	800036c <__adddf3>
 802b2ce:	ec41 0b10 	vmov	d0, r0, r1
 802b2d2:	b009      	add	sp, #36	; 0x24
 802b2d4:	ecbd 8b06 	vpop	{d8-d10}
 802b2d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b2dc:	4b81      	ldr	r3, [pc, #516]	; (802b4e4 <__ieee754_pow+0x254>)
 802b2de:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 802b2e2:	429c      	cmp	r4, r3
 802b2e4:	ee10 aa10 	vmov	sl, s0
 802b2e8:	463d      	mov	r5, r7
 802b2ea:	dc06      	bgt.n	802b2fa <__ieee754_pow+0x6a>
 802b2ec:	d101      	bne.n	802b2f2 <__ieee754_pow+0x62>
 802b2ee:	2e00      	cmp	r6, #0
 802b2f0:	d1e7      	bne.n	802b2c2 <__ieee754_pow+0x32>
 802b2f2:	4598      	cmp	r8, r3
 802b2f4:	dc01      	bgt.n	802b2fa <__ieee754_pow+0x6a>
 802b2f6:	d10f      	bne.n	802b318 <__ieee754_pow+0x88>
 802b2f8:	b172      	cbz	r2, 802b318 <__ieee754_pow+0x88>
 802b2fa:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 802b2fe:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 802b302:	ea55 050a 	orrs.w	r5, r5, sl
 802b306:	d1dc      	bne.n	802b2c2 <__ieee754_pow+0x32>
 802b308:	e9dd 3200 	ldrd	r3, r2, [sp]
 802b30c:	18db      	adds	r3, r3, r3
 802b30e:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 802b312:	4152      	adcs	r2, r2
 802b314:	429d      	cmp	r5, r3
 802b316:	e7d0      	b.n	802b2ba <__ieee754_pow+0x2a>
 802b318:	2d00      	cmp	r5, #0
 802b31a:	da3b      	bge.n	802b394 <__ieee754_pow+0x104>
 802b31c:	4b72      	ldr	r3, [pc, #456]	; (802b4e8 <__ieee754_pow+0x258>)
 802b31e:	4598      	cmp	r8, r3
 802b320:	dc51      	bgt.n	802b3c6 <__ieee754_pow+0x136>
 802b322:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 802b326:	4598      	cmp	r8, r3
 802b328:	f340 84ac 	ble.w	802bc84 <__ieee754_pow+0x9f4>
 802b32c:	ea4f 5328 	mov.w	r3, r8, asr #20
 802b330:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 802b334:	2b14      	cmp	r3, #20
 802b336:	dd0f      	ble.n	802b358 <__ieee754_pow+0xc8>
 802b338:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 802b33c:	fa22 f103 	lsr.w	r1, r2, r3
 802b340:	fa01 f303 	lsl.w	r3, r1, r3
 802b344:	4293      	cmp	r3, r2
 802b346:	f040 849d 	bne.w	802bc84 <__ieee754_pow+0x9f4>
 802b34a:	f001 0101 	and.w	r1, r1, #1
 802b34e:	f1c1 0302 	rsb	r3, r1, #2
 802b352:	9304      	str	r3, [sp, #16]
 802b354:	b182      	cbz	r2, 802b378 <__ieee754_pow+0xe8>
 802b356:	e05f      	b.n	802b418 <__ieee754_pow+0x188>
 802b358:	2a00      	cmp	r2, #0
 802b35a:	d15b      	bne.n	802b414 <__ieee754_pow+0x184>
 802b35c:	f1c3 0314 	rsb	r3, r3, #20
 802b360:	fa48 f103 	asr.w	r1, r8, r3
 802b364:	fa01 f303 	lsl.w	r3, r1, r3
 802b368:	4543      	cmp	r3, r8
 802b36a:	f040 8488 	bne.w	802bc7e <__ieee754_pow+0x9ee>
 802b36e:	f001 0101 	and.w	r1, r1, #1
 802b372:	f1c1 0302 	rsb	r3, r1, #2
 802b376:	9304      	str	r3, [sp, #16]
 802b378:	4b5c      	ldr	r3, [pc, #368]	; (802b4ec <__ieee754_pow+0x25c>)
 802b37a:	4598      	cmp	r8, r3
 802b37c:	d132      	bne.n	802b3e4 <__ieee754_pow+0x154>
 802b37e:	f1b9 0f00 	cmp.w	r9, #0
 802b382:	f280 8478 	bge.w	802bc76 <__ieee754_pow+0x9e6>
 802b386:	4959      	ldr	r1, [pc, #356]	; (802b4ec <__ieee754_pow+0x25c>)
 802b388:	4632      	mov	r2, r6
 802b38a:	463b      	mov	r3, r7
 802b38c:	2000      	movs	r0, #0
 802b38e:	f7d5 facd 	bl	800092c <__aeabi_ddiv>
 802b392:	e79c      	b.n	802b2ce <__ieee754_pow+0x3e>
 802b394:	2300      	movs	r3, #0
 802b396:	9304      	str	r3, [sp, #16]
 802b398:	2a00      	cmp	r2, #0
 802b39a:	d13d      	bne.n	802b418 <__ieee754_pow+0x188>
 802b39c:	4b51      	ldr	r3, [pc, #324]	; (802b4e4 <__ieee754_pow+0x254>)
 802b39e:	4598      	cmp	r8, r3
 802b3a0:	d1ea      	bne.n	802b378 <__ieee754_pow+0xe8>
 802b3a2:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 802b3a6:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 802b3aa:	ea53 030a 	orrs.w	r3, r3, sl
 802b3ae:	f000 845a 	beq.w	802bc66 <__ieee754_pow+0x9d6>
 802b3b2:	4b4f      	ldr	r3, [pc, #316]	; (802b4f0 <__ieee754_pow+0x260>)
 802b3b4:	429c      	cmp	r4, r3
 802b3b6:	dd08      	ble.n	802b3ca <__ieee754_pow+0x13a>
 802b3b8:	f1b9 0f00 	cmp.w	r9, #0
 802b3bc:	f2c0 8457 	blt.w	802bc6e <__ieee754_pow+0x9de>
 802b3c0:	e9dd 0100 	ldrd	r0, r1, [sp]
 802b3c4:	e783      	b.n	802b2ce <__ieee754_pow+0x3e>
 802b3c6:	2302      	movs	r3, #2
 802b3c8:	e7e5      	b.n	802b396 <__ieee754_pow+0x106>
 802b3ca:	f1b9 0f00 	cmp.w	r9, #0
 802b3ce:	f04f 0000 	mov.w	r0, #0
 802b3d2:	f04f 0100 	mov.w	r1, #0
 802b3d6:	f6bf af7a 	bge.w	802b2ce <__ieee754_pow+0x3e>
 802b3da:	e9dd 0300 	ldrd	r0, r3, [sp]
 802b3de:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 802b3e2:	e774      	b.n	802b2ce <__ieee754_pow+0x3e>
 802b3e4:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 802b3e8:	d106      	bne.n	802b3f8 <__ieee754_pow+0x168>
 802b3ea:	4632      	mov	r2, r6
 802b3ec:	463b      	mov	r3, r7
 802b3ee:	4630      	mov	r0, r6
 802b3f0:	4639      	mov	r1, r7
 802b3f2:	f7d5 f971 	bl	80006d8 <__aeabi_dmul>
 802b3f6:	e76a      	b.n	802b2ce <__ieee754_pow+0x3e>
 802b3f8:	4b3e      	ldr	r3, [pc, #248]	; (802b4f4 <__ieee754_pow+0x264>)
 802b3fa:	4599      	cmp	r9, r3
 802b3fc:	d10c      	bne.n	802b418 <__ieee754_pow+0x188>
 802b3fe:	2d00      	cmp	r5, #0
 802b400:	db0a      	blt.n	802b418 <__ieee754_pow+0x188>
 802b402:	ec47 6b10 	vmov	d0, r6, r7
 802b406:	b009      	add	sp, #36	; 0x24
 802b408:	ecbd 8b06 	vpop	{d8-d10}
 802b40c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b410:	f000 bc6c 	b.w	802bcec <__ieee754_sqrt>
 802b414:	2300      	movs	r3, #0
 802b416:	9304      	str	r3, [sp, #16]
 802b418:	ec47 6b10 	vmov	d0, r6, r7
 802b41c:	f000 fd48 	bl	802beb0 <fabs>
 802b420:	ec51 0b10 	vmov	r0, r1, d0
 802b424:	f1ba 0f00 	cmp.w	sl, #0
 802b428:	d129      	bne.n	802b47e <__ieee754_pow+0x1ee>
 802b42a:	b124      	cbz	r4, 802b436 <__ieee754_pow+0x1a6>
 802b42c:	4b2f      	ldr	r3, [pc, #188]	; (802b4ec <__ieee754_pow+0x25c>)
 802b42e:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 802b432:	429a      	cmp	r2, r3
 802b434:	d123      	bne.n	802b47e <__ieee754_pow+0x1ee>
 802b436:	f1b9 0f00 	cmp.w	r9, #0
 802b43a:	da05      	bge.n	802b448 <__ieee754_pow+0x1b8>
 802b43c:	4602      	mov	r2, r0
 802b43e:	460b      	mov	r3, r1
 802b440:	2000      	movs	r0, #0
 802b442:	492a      	ldr	r1, [pc, #168]	; (802b4ec <__ieee754_pow+0x25c>)
 802b444:	f7d5 fa72 	bl	800092c <__aeabi_ddiv>
 802b448:	2d00      	cmp	r5, #0
 802b44a:	f6bf af40 	bge.w	802b2ce <__ieee754_pow+0x3e>
 802b44e:	9b04      	ldr	r3, [sp, #16]
 802b450:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 802b454:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 802b458:	4323      	orrs	r3, r4
 802b45a:	d108      	bne.n	802b46e <__ieee754_pow+0x1de>
 802b45c:	4602      	mov	r2, r0
 802b45e:	460b      	mov	r3, r1
 802b460:	4610      	mov	r0, r2
 802b462:	4619      	mov	r1, r3
 802b464:	f7d4 ff80 	bl	8000368 <__aeabi_dsub>
 802b468:	4602      	mov	r2, r0
 802b46a:	460b      	mov	r3, r1
 802b46c:	e78f      	b.n	802b38e <__ieee754_pow+0xfe>
 802b46e:	9b04      	ldr	r3, [sp, #16]
 802b470:	2b01      	cmp	r3, #1
 802b472:	f47f af2c 	bne.w	802b2ce <__ieee754_pow+0x3e>
 802b476:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 802b47a:	4619      	mov	r1, r3
 802b47c:	e727      	b.n	802b2ce <__ieee754_pow+0x3e>
 802b47e:	0feb      	lsrs	r3, r5, #31
 802b480:	3b01      	subs	r3, #1
 802b482:	9306      	str	r3, [sp, #24]
 802b484:	9a06      	ldr	r2, [sp, #24]
 802b486:	9b04      	ldr	r3, [sp, #16]
 802b488:	4313      	orrs	r3, r2
 802b48a:	d102      	bne.n	802b492 <__ieee754_pow+0x202>
 802b48c:	4632      	mov	r2, r6
 802b48e:	463b      	mov	r3, r7
 802b490:	e7e6      	b.n	802b460 <__ieee754_pow+0x1d0>
 802b492:	4b19      	ldr	r3, [pc, #100]	; (802b4f8 <__ieee754_pow+0x268>)
 802b494:	4598      	cmp	r8, r3
 802b496:	f340 80fb 	ble.w	802b690 <__ieee754_pow+0x400>
 802b49a:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 802b49e:	4598      	cmp	r8, r3
 802b4a0:	4b13      	ldr	r3, [pc, #76]	; (802b4f0 <__ieee754_pow+0x260>)
 802b4a2:	dd0c      	ble.n	802b4be <__ieee754_pow+0x22e>
 802b4a4:	429c      	cmp	r4, r3
 802b4a6:	dc0f      	bgt.n	802b4c8 <__ieee754_pow+0x238>
 802b4a8:	f1b9 0f00 	cmp.w	r9, #0
 802b4ac:	da0f      	bge.n	802b4ce <__ieee754_pow+0x23e>
 802b4ae:	2000      	movs	r0, #0
 802b4b0:	b009      	add	sp, #36	; 0x24
 802b4b2:	ecbd 8b06 	vpop	{d8-d10}
 802b4b6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b4ba:	f000 bcf0 	b.w	802be9e <__math_oflow>
 802b4be:	429c      	cmp	r4, r3
 802b4c0:	dbf2      	blt.n	802b4a8 <__ieee754_pow+0x218>
 802b4c2:	4b0a      	ldr	r3, [pc, #40]	; (802b4ec <__ieee754_pow+0x25c>)
 802b4c4:	429c      	cmp	r4, r3
 802b4c6:	dd19      	ble.n	802b4fc <__ieee754_pow+0x26c>
 802b4c8:	f1b9 0f00 	cmp.w	r9, #0
 802b4cc:	dcef      	bgt.n	802b4ae <__ieee754_pow+0x21e>
 802b4ce:	2000      	movs	r0, #0
 802b4d0:	b009      	add	sp, #36	; 0x24
 802b4d2:	ecbd 8b06 	vpop	{d8-d10}
 802b4d6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b4da:	f000 bcd7 	b.w	802be8c <__math_uflow>
 802b4de:	bf00      	nop
 802b4e0:	fff00000 	.word	0xfff00000
 802b4e4:	7ff00000 	.word	0x7ff00000
 802b4e8:	433fffff 	.word	0x433fffff
 802b4ec:	3ff00000 	.word	0x3ff00000
 802b4f0:	3fefffff 	.word	0x3fefffff
 802b4f4:	3fe00000 	.word	0x3fe00000
 802b4f8:	41e00000 	.word	0x41e00000
 802b4fc:	4b60      	ldr	r3, [pc, #384]	; (802b680 <__ieee754_pow+0x3f0>)
 802b4fe:	2200      	movs	r2, #0
 802b500:	f7d4 ff32 	bl	8000368 <__aeabi_dsub>
 802b504:	a354      	add	r3, pc, #336	; (adr r3, 802b658 <__ieee754_pow+0x3c8>)
 802b506:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b50a:	4604      	mov	r4, r0
 802b50c:	460d      	mov	r5, r1
 802b50e:	f7d5 f8e3 	bl	80006d8 <__aeabi_dmul>
 802b512:	a353      	add	r3, pc, #332	; (adr r3, 802b660 <__ieee754_pow+0x3d0>)
 802b514:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b518:	4606      	mov	r6, r0
 802b51a:	460f      	mov	r7, r1
 802b51c:	4620      	mov	r0, r4
 802b51e:	4629      	mov	r1, r5
 802b520:	f7d5 f8da 	bl	80006d8 <__aeabi_dmul>
 802b524:	4b57      	ldr	r3, [pc, #348]	; (802b684 <__ieee754_pow+0x3f4>)
 802b526:	4682      	mov	sl, r0
 802b528:	468b      	mov	fp, r1
 802b52a:	2200      	movs	r2, #0
 802b52c:	4620      	mov	r0, r4
 802b52e:	4629      	mov	r1, r5
 802b530:	f7d5 f8d2 	bl	80006d8 <__aeabi_dmul>
 802b534:	4602      	mov	r2, r0
 802b536:	460b      	mov	r3, r1
 802b538:	a14b      	add	r1, pc, #300	; (adr r1, 802b668 <__ieee754_pow+0x3d8>)
 802b53a:	e9d1 0100 	ldrd	r0, r1, [r1]
 802b53e:	f7d4 ff13 	bl	8000368 <__aeabi_dsub>
 802b542:	4622      	mov	r2, r4
 802b544:	462b      	mov	r3, r5
 802b546:	f7d5 f8c7 	bl	80006d8 <__aeabi_dmul>
 802b54a:	4602      	mov	r2, r0
 802b54c:	460b      	mov	r3, r1
 802b54e:	2000      	movs	r0, #0
 802b550:	494d      	ldr	r1, [pc, #308]	; (802b688 <__ieee754_pow+0x3f8>)
 802b552:	f7d4 ff09 	bl	8000368 <__aeabi_dsub>
 802b556:	4622      	mov	r2, r4
 802b558:	4680      	mov	r8, r0
 802b55a:	4689      	mov	r9, r1
 802b55c:	462b      	mov	r3, r5
 802b55e:	4620      	mov	r0, r4
 802b560:	4629      	mov	r1, r5
 802b562:	f7d5 f8b9 	bl	80006d8 <__aeabi_dmul>
 802b566:	4602      	mov	r2, r0
 802b568:	460b      	mov	r3, r1
 802b56a:	4640      	mov	r0, r8
 802b56c:	4649      	mov	r1, r9
 802b56e:	f7d5 f8b3 	bl	80006d8 <__aeabi_dmul>
 802b572:	a33f      	add	r3, pc, #252	; (adr r3, 802b670 <__ieee754_pow+0x3e0>)
 802b574:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b578:	f7d5 f8ae 	bl	80006d8 <__aeabi_dmul>
 802b57c:	4602      	mov	r2, r0
 802b57e:	460b      	mov	r3, r1
 802b580:	4650      	mov	r0, sl
 802b582:	4659      	mov	r1, fp
 802b584:	f7d4 fef0 	bl	8000368 <__aeabi_dsub>
 802b588:	4602      	mov	r2, r0
 802b58a:	460b      	mov	r3, r1
 802b58c:	4680      	mov	r8, r0
 802b58e:	4689      	mov	r9, r1
 802b590:	4630      	mov	r0, r6
 802b592:	4639      	mov	r1, r7
 802b594:	f7d4 feea 	bl	800036c <__adddf3>
 802b598:	2000      	movs	r0, #0
 802b59a:	4632      	mov	r2, r6
 802b59c:	463b      	mov	r3, r7
 802b59e:	4604      	mov	r4, r0
 802b5a0:	460d      	mov	r5, r1
 802b5a2:	f7d4 fee1 	bl	8000368 <__aeabi_dsub>
 802b5a6:	4602      	mov	r2, r0
 802b5a8:	460b      	mov	r3, r1
 802b5aa:	4640      	mov	r0, r8
 802b5ac:	4649      	mov	r1, r9
 802b5ae:	f7d4 fedb 	bl	8000368 <__aeabi_dsub>
 802b5b2:	9b04      	ldr	r3, [sp, #16]
 802b5b4:	9a06      	ldr	r2, [sp, #24]
 802b5b6:	3b01      	subs	r3, #1
 802b5b8:	4313      	orrs	r3, r2
 802b5ba:	4682      	mov	sl, r0
 802b5bc:	468b      	mov	fp, r1
 802b5be:	f040 81e7 	bne.w	802b990 <__ieee754_pow+0x700>
 802b5c2:	ed9f 7b2d 	vldr	d7, [pc, #180]	; 802b678 <__ieee754_pow+0x3e8>
 802b5c6:	eeb0 8a47 	vmov.f32	s16, s14
 802b5ca:	eef0 8a67 	vmov.f32	s17, s15
 802b5ce:	e9dd 6700 	ldrd	r6, r7, [sp]
 802b5d2:	2600      	movs	r6, #0
 802b5d4:	4632      	mov	r2, r6
 802b5d6:	463b      	mov	r3, r7
 802b5d8:	e9dd 0100 	ldrd	r0, r1, [sp]
 802b5dc:	f7d4 fec4 	bl	8000368 <__aeabi_dsub>
 802b5e0:	4622      	mov	r2, r4
 802b5e2:	462b      	mov	r3, r5
 802b5e4:	f7d5 f878 	bl	80006d8 <__aeabi_dmul>
 802b5e8:	e9dd 2300 	ldrd	r2, r3, [sp]
 802b5ec:	4680      	mov	r8, r0
 802b5ee:	4689      	mov	r9, r1
 802b5f0:	4650      	mov	r0, sl
 802b5f2:	4659      	mov	r1, fp
 802b5f4:	f7d5 f870 	bl	80006d8 <__aeabi_dmul>
 802b5f8:	4602      	mov	r2, r0
 802b5fa:	460b      	mov	r3, r1
 802b5fc:	4640      	mov	r0, r8
 802b5fe:	4649      	mov	r1, r9
 802b600:	f7d4 feb4 	bl	800036c <__adddf3>
 802b604:	4632      	mov	r2, r6
 802b606:	463b      	mov	r3, r7
 802b608:	4680      	mov	r8, r0
 802b60a:	4689      	mov	r9, r1
 802b60c:	4620      	mov	r0, r4
 802b60e:	4629      	mov	r1, r5
 802b610:	f7d5 f862 	bl	80006d8 <__aeabi_dmul>
 802b614:	460b      	mov	r3, r1
 802b616:	4604      	mov	r4, r0
 802b618:	460d      	mov	r5, r1
 802b61a:	4602      	mov	r2, r0
 802b61c:	4649      	mov	r1, r9
 802b61e:	4640      	mov	r0, r8
 802b620:	f7d4 fea4 	bl	800036c <__adddf3>
 802b624:	4b19      	ldr	r3, [pc, #100]	; (802b68c <__ieee754_pow+0x3fc>)
 802b626:	4299      	cmp	r1, r3
 802b628:	ec45 4b19 	vmov	d9, r4, r5
 802b62c:	4606      	mov	r6, r0
 802b62e:	460f      	mov	r7, r1
 802b630:	468b      	mov	fp, r1
 802b632:	f340 82f1 	ble.w	802bc18 <__ieee754_pow+0x988>
 802b636:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 802b63a:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 802b63e:	4303      	orrs	r3, r0
 802b640:	f000 81e4 	beq.w	802ba0c <__ieee754_pow+0x77c>
 802b644:	ec51 0b18 	vmov	r0, r1, d8
 802b648:	2200      	movs	r2, #0
 802b64a:	2300      	movs	r3, #0
 802b64c:	f7d5 fab6 	bl	8000bbc <__aeabi_dcmplt>
 802b650:	3800      	subs	r0, #0
 802b652:	bf18      	it	ne
 802b654:	2001      	movne	r0, #1
 802b656:	e72b      	b.n	802b4b0 <__ieee754_pow+0x220>
 802b658:	60000000 	.word	0x60000000
 802b65c:	3ff71547 	.word	0x3ff71547
 802b660:	f85ddf44 	.word	0xf85ddf44
 802b664:	3e54ae0b 	.word	0x3e54ae0b
 802b668:	55555555 	.word	0x55555555
 802b66c:	3fd55555 	.word	0x3fd55555
 802b670:	652b82fe 	.word	0x652b82fe
 802b674:	3ff71547 	.word	0x3ff71547
 802b678:	00000000 	.word	0x00000000
 802b67c:	bff00000 	.word	0xbff00000
 802b680:	3ff00000 	.word	0x3ff00000
 802b684:	3fd00000 	.word	0x3fd00000
 802b688:	3fe00000 	.word	0x3fe00000
 802b68c:	408fffff 	.word	0x408fffff
 802b690:	4bd5      	ldr	r3, [pc, #852]	; (802b9e8 <__ieee754_pow+0x758>)
 802b692:	402b      	ands	r3, r5
 802b694:	2200      	movs	r2, #0
 802b696:	b92b      	cbnz	r3, 802b6a4 <__ieee754_pow+0x414>
 802b698:	4bd4      	ldr	r3, [pc, #848]	; (802b9ec <__ieee754_pow+0x75c>)
 802b69a:	f7d5 f81d 	bl	80006d8 <__aeabi_dmul>
 802b69e:	f06f 0234 	mvn.w	r2, #52	; 0x34
 802b6a2:	460c      	mov	r4, r1
 802b6a4:	1523      	asrs	r3, r4, #20
 802b6a6:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 802b6aa:	4413      	add	r3, r2
 802b6ac:	9305      	str	r3, [sp, #20]
 802b6ae:	4bd0      	ldr	r3, [pc, #832]	; (802b9f0 <__ieee754_pow+0x760>)
 802b6b0:	f3c4 0413 	ubfx	r4, r4, #0, #20
 802b6b4:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 802b6b8:	429c      	cmp	r4, r3
 802b6ba:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 802b6be:	dd08      	ble.n	802b6d2 <__ieee754_pow+0x442>
 802b6c0:	4bcc      	ldr	r3, [pc, #816]	; (802b9f4 <__ieee754_pow+0x764>)
 802b6c2:	429c      	cmp	r4, r3
 802b6c4:	f340 8162 	ble.w	802b98c <__ieee754_pow+0x6fc>
 802b6c8:	9b05      	ldr	r3, [sp, #20]
 802b6ca:	3301      	adds	r3, #1
 802b6cc:	9305      	str	r3, [sp, #20]
 802b6ce:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 802b6d2:	2400      	movs	r4, #0
 802b6d4:	00e3      	lsls	r3, r4, #3
 802b6d6:	9307      	str	r3, [sp, #28]
 802b6d8:	4bc7      	ldr	r3, [pc, #796]	; (802b9f8 <__ieee754_pow+0x768>)
 802b6da:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 802b6de:	ed93 7b00 	vldr	d7, [r3]
 802b6e2:	4629      	mov	r1, r5
 802b6e4:	ec53 2b17 	vmov	r2, r3, d7
 802b6e8:	eeb0 9a47 	vmov.f32	s18, s14
 802b6ec:	eef0 9a67 	vmov.f32	s19, s15
 802b6f0:	4682      	mov	sl, r0
 802b6f2:	f7d4 fe39 	bl	8000368 <__aeabi_dsub>
 802b6f6:	4652      	mov	r2, sl
 802b6f8:	4606      	mov	r6, r0
 802b6fa:	460f      	mov	r7, r1
 802b6fc:	462b      	mov	r3, r5
 802b6fe:	ec51 0b19 	vmov	r0, r1, d9
 802b702:	f7d4 fe33 	bl	800036c <__adddf3>
 802b706:	4602      	mov	r2, r0
 802b708:	460b      	mov	r3, r1
 802b70a:	2000      	movs	r0, #0
 802b70c:	49bb      	ldr	r1, [pc, #748]	; (802b9fc <__ieee754_pow+0x76c>)
 802b70e:	f7d5 f90d 	bl	800092c <__aeabi_ddiv>
 802b712:	ec41 0b1a 	vmov	d10, r0, r1
 802b716:	4602      	mov	r2, r0
 802b718:	460b      	mov	r3, r1
 802b71a:	4630      	mov	r0, r6
 802b71c:	4639      	mov	r1, r7
 802b71e:	f7d4 ffdb 	bl	80006d8 <__aeabi_dmul>
 802b722:	2300      	movs	r3, #0
 802b724:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802b728:	9302      	str	r3, [sp, #8]
 802b72a:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 802b72e:	46ab      	mov	fp, r5
 802b730:	106d      	asrs	r5, r5, #1
 802b732:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 802b736:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 802b73a:	ec41 0b18 	vmov	d8, r0, r1
 802b73e:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 802b742:	2200      	movs	r2, #0
 802b744:	4640      	mov	r0, r8
 802b746:	4649      	mov	r1, r9
 802b748:	4614      	mov	r4, r2
 802b74a:	461d      	mov	r5, r3
 802b74c:	f7d4 ffc4 	bl	80006d8 <__aeabi_dmul>
 802b750:	4602      	mov	r2, r0
 802b752:	460b      	mov	r3, r1
 802b754:	4630      	mov	r0, r6
 802b756:	4639      	mov	r1, r7
 802b758:	f7d4 fe06 	bl	8000368 <__aeabi_dsub>
 802b75c:	ec53 2b19 	vmov	r2, r3, d9
 802b760:	4606      	mov	r6, r0
 802b762:	460f      	mov	r7, r1
 802b764:	4620      	mov	r0, r4
 802b766:	4629      	mov	r1, r5
 802b768:	f7d4 fdfe 	bl	8000368 <__aeabi_dsub>
 802b76c:	4602      	mov	r2, r0
 802b76e:	460b      	mov	r3, r1
 802b770:	4650      	mov	r0, sl
 802b772:	4659      	mov	r1, fp
 802b774:	f7d4 fdf8 	bl	8000368 <__aeabi_dsub>
 802b778:	4642      	mov	r2, r8
 802b77a:	464b      	mov	r3, r9
 802b77c:	f7d4 ffac 	bl	80006d8 <__aeabi_dmul>
 802b780:	4602      	mov	r2, r0
 802b782:	460b      	mov	r3, r1
 802b784:	4630      	mov	r0, r6
 802b786:	4639      	mov	r1, r7
 802b788:	f7d4 fdee 	bl	8000368 <__aeabi_dsub>
 802b78c:	ec53 2b1a 	vmov	r2, r3, d10
 802b790:	f7d4 ffa2 	bl	80006d8 <__aeabi_dmul>
 802b794:	ec53 2b18 	vmov	r2, r3, d8
 802b798:	ec41 0b19 	vmov	d9, r0, r1
 802b79c:	ec51 0b18 	vmov	r0, r1, d8
 802b7a0:	f7d4 ff9a 	bl	80006d8 <__aeabi_dmul>
 802b7a4:	a37c      	add	r3, pc, #496	; (adr r3, 802b998 <__ieee754_pow+0x708>)
 802b7a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b7aa:	4604      	mov	r4, r0
 802b7ac:	460d      	mov	r5, r1
 802b7ae:	f7d4 ff93 	bl	80006d8 <__aeabi_dmul>
 802b7b2:	a37b      	add	r3, pc, #492	; (adr r3, 802b9a0 <__ieee754_pow+0x710>)
 802b7b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b7b8:	f7d4 fdd8 	bl	800036c <__adddf3>
 802b7bc:	4622      	mov	r2, r4
 802b7be:	462b      	mov	r3, r5
 802b7c0:	f7d4 ff8a 	bl	80006d8 <__aeabi_dmul>
 802b7c4:	a378      	add	r3, pc, #480	; (adr r3, 802b9a8 <__ieee754_pow+0x718>)
 802b7c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b7ca:	f7d4 fdcf 	bl	800036c <__adddf3>
 802b7ce:	4622      	mov	r2, r4
 802b7d0:	462b      	mov	r3, r5
 802b7d2:	f7d4 ff81 	bl	80006d8 <__aeabi_dmul>
 802b7d6:	a376      	add	r3, pc, #472	; (adr r3, 802b9b0 <__ieee754_pow+0x720>)
 802b7d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b7dc:	f7d4 fdc6 	bl	800036c <__adddf3>
 802b7e0:	4622      	mov	r2, r4
 802b7e2:	462b      	mov	r3, r5
 802b7e4:	f7d4 ff78 	bl	80006d8 <__aeabi_dmul>
 802b7e8:	a373      	add	r3, pc, #460	; (adr r3, 802b9b8 <__ieee754_pow+0x728>)
 802b7ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b7ee:	f7d4 fdbd 	bl	800036c <__adddf3>
 802b7f2:	4622      	mov	r2, r4
 802b7f4:	462b      	mov	r3, r5
 802b7f6:	f7d4 ff6f 	bl	80006d8 <__aeabi_dmul>
 802b7fa:	a371      	add	r3, pc, #452	; (adr r3, 802b9c0 <__ieee754_pow+0x730>)
 802b7fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b800:	f7d4 fdb4 	bl	800036c <__adddf3>
 802b804:	4622      	mov	r2, r4
 802b806:	4606      	mov	r6, r0
 802b808:	460f      	mov	r7, r1
 802b80a:	462b      	mov	r3, r5
 802b80c:	4620      	mov	r0, r4
 802b80e:	4629      	mov	r1, r5
 802b810:	f7d4 ff62 	bl	80006d8 <__aeabi_dmul>
 802b814:	4602      	mov	r2, r0
 802b816:	460b      	mov	r3, r1
 802b818:	4630      	mov	r0, r6
 802b81a:	4639      	mov	r1, r7
 802b81c:	f7d4 ff5c 	bl	80006d8 <__aeabi_dmul>
 802b820:	4642      	mov	r2, r8
 802b822:	4604      	mov	r4, r0
 802b824:	460d      	mov	r5, r1
 802b826:	464b      	mov	r3, r9
 802b828:	ec51 0b18 	vmov	r0, r1, d8
 802b82c:	f7d4 fd9e 	bl	800036c <__adddf3>
 802b830:	ec53 2b19 	vmov	r2, r3, d9
 802b834:	f7d4 ff50 	bl	80006d8 <__aeabi_dmul>
 802b838:	4622      	mov	r2, r4
 802b83a:	462b      	mov	r3, r5
 802b83c:	f7d4 fd96 	bl	800036c <__adddf3>
 802b840:	4642      	mov	r2, r8
 802b842:	4682      	mov	sl, r0
 802b844:	468b      	mov	fp, r1
 802b846:	464b      	mov	r3, r9
 802b848:	4640      	mov	r0, r8
 802b84a:	4649      	mov	r1, r9
 802b84c:	f7d4 ff44 	bl	80006d8 <__aeabi_dmul>
 802b850:	4b6b      	ldr	r3, [pc, #428]	; (802ba00 <__ieee754_pow+0x770>)
 802b852:	2200      	movs	r2, #0
 802b854:	4606      	mov	r6, r0
 802b856:	460f      	mov	r7, r1
 802b858:	f7d4 fd88 	bl	800036c <__adddf3>
 802b85c:	4652      	mov	r2, sl
 802b85e:	465b      	mov	r3, fp
 802b860:	f7d4 fd84 	bl	800036c <__adddf3>
 802b864:	2000      	movs	r0, #0
 802b866:	4604      	mov	r4, r0
 802b868:	460d      	mov	r5, r1
 802b86a:	4602      	mov	r2, r0
 802b86c:	460b      	mov	r3, r1
 802b86e:	4640      	mov	r0, r8
 802b870:	4649      	mov	r1, r9
 802b872:	f7d4 ff31 	bl	80006d8 <__aeabi_dmul>
 802b876:	4b62      	ldr	r3, [pc, #392]	; (802ba00 <__ieee754_pow+0x770>)
 802b878:	4680      	mov	r8, r0
 802b87a:	4689      	mov	r9, r1
 802b87c:	2200      	movs	r2, #0
 802b87e:	4620      	mov	r0, r4
 802b880:	4629      	mov	r1, r5
 802b882:	f7d4 fd71 	bl	8000368 <__aeabi_dsub>
 802b886:	4632      	mov	r2, r6
 802b888:	463b      	mov	r3, r7
 802b88a:	f7d4 fd6d 	bl	8000368 <__aeabi_dsub>
 802b88e:	4602      	mov	r2, r0
 802b890:	460b      	mov	r3, r1
 802b892:	4650      	mov	r0, sl
 802b894:	4659      	mov	r1, fp
 802b896:	f7d4 fd67 	bl	8000368 <__aeabi_dsub>
 802b89a:	ec53 2b18 	vmov	r2, r3, d8
 802b89e:	f7d4 ff1b 	bl	80006d8 <__aeabi_dmul>
 802b8a2:	4622      	mov	r2, r4
 802b8a4:	4606      	mov	r6, r0
 802b8a6:	460f      	mov	r7, r1
 802b8a8:	462b      	mov	r3, r5
 802b8aa:	ec51 0b19 	vmov	r0, r1, d9
 802b8ae:	f7d4 ff13 	bl	80006d8 <__aeabi_dmul>
 802b8b2:	4602      	mov	r2, r0
 802b8b4:	460b      	mov	r3, r1
 802b8b6:	4630      	mov	r0, r6
 802b8b8:	4639      	mov	r1, r7
 802b8ba:	f7d4 fd57 	bl	800036c <__adddf3>
 802b8be:	4606      	mov	r6, r0
 802b8c0:	460f      	mov	r7, r1
 802b8c2:	4602      	mov	r2, r0
 802b8c4:	460b      	mov	r3, r1
 802b8c6:	4640      	mov	r0, r8
 802b8c8:	4649      	mov	r1, r9
 802b8ca:	f7d4 fd4f 	bl	800036c <__adddf3>
 802b8ce:	a33e      	add	r3, pc, #248	; (adr r3, 802b9c8 <__ieee754_pow+0x738>)
 802b8d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b8d4:	2000      	movs	r0, #0
 802b8d6:	4604      	mov	r4, r0
 802b8d8:	460d      	mov	r5, r1
 802b8da:	f7d4 fefd 	bl	80006d8 <__aeabi_dmul>
 802b8de:	4642      	mov	r2, r8
 802b8e0:	ec41 0b18 	vmov	d8, r0, r1
 802b8e4:	464b      	mov	r3, r9
 802b8e6:	4620      	mov	r0, r4
 802b8e8:	4629      	mov	r1, r5
 802b8ea:	f7d4 fd3d 	bl	8000368 <__aeabi_dsub>
 802b8ee:	4602      	mov	r2, r0
 802b8f0:	460b      	mov	r3, r1
 802b8f2:	4630      	mov	r0, r6
 802b8f4:	4639      	mov	r1, r7
 802b8f6:	f7d4 fd37 	bl	8000368 <__aeabi_dsub>
 802b8fa:	a335      	add	r3, pc, #212	; (adr r3, 802b9d0 <__ieee754_pow+0x740>)
 802b8fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b900:	f7d4 feea 	bl	80006d8 <__aeabi_dmul>
 802b904:	a334      	add	r3, pc, #208	; (adr r3, 802b9d8 <__ieee754_pow+0x748>)
 802b906:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b90a:	4606      	mov	r6, r0
 802b90c:	460f      	mov	r7, r1
 802b90e:	4620      	mov	r0, r4
 802b910:	4629      	mov	r1, r5
 802b912:	f7d4 fee1 	bl	80006d8 <__aeabi_dmul>
 802b916:	4602      	mov	r2, r0
 802b918:	460b      	mov	r3, r1
 802b91a:	4630      	mov	r0, r6
 802b91c:	4639      	mov	r1, r7
 802b91e:	f7d4 fd25 	bl	800036c <__adddf3>
 802b922:	9a07      	ldr	r2, [sp, #28]
 802b924:	4b37      	ldr	r3, [pc, #220]	; (802ba04 <__ieee754_pow+0x774>)
 802b926:	4413      	add	r3, r2
 802b928:	e9d3 2300 	ldrd	r2, r3, [r3]
 802b92c:	f7d4 fd1e 	bl	800036c <__adddf3>
 802b930:	4682      	mov	sl, r0
 802b932:	9805      	ldr	r0, [sp, #20]
 802b934:	468b      	mov	fp, r1
 802b936:	f7d4 fe65 	bl	8000604 <__aeabi_i2d>
 802b93a:	9a07      	ldr	r2, [sp, #28]
 802b93c:	4b32      	ldr	r3, [pc, #200]	; (802ba08 <__ieee754_pow+0x778>)
 802b93e:	4413      	add	r3, r2
 802b940:	e9d3 8900 	ldrd	r8, r9, [r3]
 802b944:	4606      	mov	r6, r0
 802b946:	460f      	mov	r7, r1
 802b948:	4652      	mov	r2, sl
 802b94a:	465b      	mov	r3, fp
 802b94c:	ec51 0b18 	vmov	r0, r1, d8
 802b950:	f7d4 fd0c 	bl	800036c <__adddf3>
 802b954:	4642      	mov	r2, r8
 802b956:	464b      	mov	r3, r9
 802b958:	f7d4 fd08 	bl	800036c <__adddf3>
 802b95c:	4632      	mov	r2, r6
 802b95e:	463b      	mov	r3, r7
 802b960:	f7d4 fd04 	bl	800036c <__adddf3>
 802b964:	2000      	movs	r0, #0
 802b966:	4632      	mov	r2, r6
 802b968:	463b      	mov	r3, r7
 802b96a:	4604      	mov	r4, r0
 802b96c:	460d      	mov	r5, r1
 802b96e:	f7d4 fcfb 	bl	8000368 <__aeabi_dsub>
 802b972:	4642      	mov	r2, r8
 802b974:	464b      	mov	r3, r9
 802b976:	f7d4 fcf7 	bl	8000368 <__aeabi_dsub>
 802b97a:	ec53 2b18 	vmov	r2, r3, d8
 802b97e:	f7d4 fcf3 	bl	8000368 <__aeabi_dsub>
 802b982:	4602      	mov	r2, r0
 802b984:	460b      	mov	r3, r1
 802b986:	4650      	mov	r0, sl
 802b988:	4659      	mov	r1, fp
 802b98a:	e610      	b.n	802b5ae <__ieee754_pow+0x31e>
 802b98c:	2401      	movs	r4, #1
 802b98e:	e6a1      	b.n	802b6d4 <__ieee754_pow+0x444>
 802b990:	ed9f 7b13 	vldr	d7, [pc, #76]	; 802b9e0 <__ieee754_pow+0x750>
 802b994:	e617      	b.n	802b5c6 <__ieee754_pow+0x336>
 802b996:	bf00      	nop
 802b998:	4a454eef 	.word	0x4a454eef
 802b99c:	3fca7e28 	.word	0x3fca7e28
 802b9a0:	93c9db65 	.word	0x93c9db65
 802b9a4:	3fcd864a 	.word	0x3fcd864a
 802b9a8:	a91d4101 	.word	0xa91d4101
 802b9ac:	3fd17460 	.word	0x3fd17460
 802b9b0:	518f264d 	.word	0x518f264d
 802b9b4:	3fd55555 	.word	0x3fd55555
 802b9b8:	db6fabff 	.word	0xdb6fabff
 802b9bc:	3fdb6db6 	.word	0x3fdb6db6
 802b9c0:	33333303 	.word	0x33333303
 802b9c4:	3fe33333 	.word	0x3fe33333
 802b9c8:	e0000000 	.word	0xe0000000
 802b9cc:	3feec709 	.word	0x3feec709
 802b9d0:	dc3a03fd 	.word	0xdc3a03fd
 802b9d4:	3feec709 	.word	0x3feec709
 802b9d8:	145b01f5 	.word	0x145b01f5
 802b9dc:	be3e2fe0 	.word	0xbe3e2fe0
 802b9e0:	00000000 	.word	0x00000000
 802b9e4:	3ff00000 	.word	0x3ff00000
 802b9e8:	7ff00000 	.word	0x7ff00000
 802b9ec:	43400000 	.word	0x43400000
 802b9f0:	0003988e 	.word	0x0003988e
 802b9f4:	000bb679 	.word	0x000bb679
 802b9f8:	08049a60 	.word	0x08049a60
 802b9fc:	3ff00000 	.word	0x3ff00000
 802ba00:	40080000 	.word	0x40080000
 802ba04:	08049a80 	.word	0x08049a80
 802ba08:	08049a70 	.word	0x08049a70
 802ba0c:	a3b5      	add	r3, pc, #724	; (adr r3, 802bce4 <__ieee754_pow+0xa54>)
 802ba0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802ba12:	4640      	mov	r0, r8
 802ba14:	4649      	mov	r1, r9
 802ba16:	f7d4 fca9 	bl	800036c <__adddf3>
 802ba1a:	4622      	mov	r2, r4
 802ba1c:	ec41 0b1a 	vmov	d10, r0, r1
 802ba20:	462b      	mov	r3, r5
 802ba22:	4630      	mov	r0, r6
 802ba24:	4639      	mov	r1, r7
 802ba26:	f7d4 fc9f 	bl	8000368 <__aeabi_dsub>
 802ba2a:	4602      	mov	r2, r0
 802ba2c:	460b      	mov	r3, r1
 802ba2e:	ec51 0b1a 	vmov	r0, r1, d10
 802ba32:	f7d5 f8e1 	bl	8000bf8 <__aeabi_dcmpgt>
 802ba36:	2800      	cmp	r0, #0
 802ba38:	f47f ae04 	bne.w	802b644 <__ieee754_pow+0x3b4>
 802ba3c:	4aa4      	ldr	r2, [pc, #656]	; (802bcd0 <__ieee754_pow+0xa40>)
 802ba3e:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 802ba42:	4293      	cmp	r3, r2
 802ba44:	f340 8108 	ble.w	802bc58 <__ieee754_pow+0x9c8>
 802ba48:	151b      	asrs	r3, r3, #20
 802ba4a:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 802ba4e:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 802ba52:	fa4a f303 	asr.w	r3, sl, r3
 802ba56:	445b      	add	r3, fp
 802ba58:	f3c3 520a 	ubfx	r2, r3, #20, #11
 802ba5c:	4e9d      	ldr	r6, [pc, #628]	; (802bcd4 <__ieee754_pow+0xa44>)
 802ba5e:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 802ba62:	4116      	asrs	r6, r2
 802ba64:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 802ba68:	2000      	movs	r0, #0
 802ba6a:	ea23 0106 	bic.w	r1, r3, r6
 802ba6e:	f1c2 0214 	rsb	r2, r2, #20
 802ba72:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 802ba76:	fa4a fa02 	asr.w	sl, sl, r2
 802ba7a:	f1bb 0f00 	cmp.w	fp, #0
 802ba7e:	4602      	mov	r2, r0
 802ba80:	460b      	mov	r3, r1
 802ba82:	4620      	mov	r0, r4
 802ba84:	4629      	mov	r1, r5
 802ba86:	bfb8      	it	lt
 802ba88:	f1ca 0a00 	rsblt	sl, sl, #0
 802ba8c:	f7d4 fc6c 	bl	8000368 <__aeabi_dsub>
 802ba90:	ec41 0b19 	vmov	d9, r0, r1
 802ba94:	4642      	mov	r2, r8
 802ba96:	464b      	mov	r3, r9
 802ba98:	ec51 0b19 	vmov	r0, r1, d9
 802ba9c:	f7d4 fc66 	bl	800036c <__adddf3>
 802baa0:	a37b      	add	r3, pc, #492	; (adr r3, 802bc90 <__ieee754_pow+0xa00>)
 802baa2:	e9d3 2300 	ldrd	r2, r3, [r3]
 802baa6:	2000      	movs	r0, #0
 802baa8:	4604      	mov	r4, r0
 802baaa:	460d      	mov	r5, r1
 802baac:	f7d4 fe14 	bl	80006d8 <__aeabi_dmul>
 802bab0:	ec53 2b19 	vmov	r2, r3, d9
 802bab4:	4606      	mov	r6, r0
 802bab6:	460f      	mov	r7, r1
 802bab8:	4620      	mov	r0, r4
 802baba:	4629      	mov	r1, r5
 802babc:	f7d4 fc54 	bl	8000368 <__aeabi_dsub>
 802bac0:	4602      	mov	r2, r0
 802bac2:	460b      	mov	r3, r1
 802bac4:	4640      	mov	r0, r8
 802bac6:	4649      	mov	r1, r9
 802bac8:	f7d4 fc4e 	bl	8000368 <__aeabi_dsub>
 802bacc:	a372      	add	r3, pc, #456	; (adr r3, 802bc98 <__ieee754_pow+0xa08>)
 802bace:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bad2:	f7d4 fe01 	bl	80006d8 <__aeabi_dmul>
 802bad6:	a372      	add	r3, pc, #456	; (adr r3, 802bca0 <__ieee754_pow+0xa10>)
 802bad8:	e9d3 2300 	ldrd	r2, r3, [r3]
 802badc:	4680      	mov	r8, r0
 802bade:	4689      	mov	r9, r1
 802bae0:	4620      	mov	r0, r4
 802bae2:	4629      	mov	r1, r5
 802bae4:	f7d4 fdf8 	bl	80006d8 <__aeabi_dmul>
 802bae8:	4602      	mov	r2, r0
 802baea:	460b      	mov	r3, r1
 802baec:	4640      	mov	r0, r8
 802baee:	4649      	mov	r1, r9
 802baf0:	f7d4 fc3c 	bl	800036c <__adddf3>
 802baf4:	4604      	mov	r4, r0
 802baf6:	460d      	mov	r5, r1
 802baf8:	4602      	mov	r2, r0
 802bafa:	460b      	mov	r3, r1
 802bafc:	4630      	mov	r0, r6
 802bafe:	4639      	mov	r1, r7
 802bb00:	f7d4 fc34 	bl	800036c <__adddf3>
 802bb04:	4632      	mov	r2, r6
 802bb06:	463b      	mov	r3, r7
 802bb08:	4680      	mov	r8, r0
 802bb0a:	4689      	mov	r9, r1
 802bb0c:	f7d4 fc2c 	bl	8000368 <__aeabi_dsub>
 802bb10:	4602      	mov	r2, r0
 802bb12:	460b      	mov	r3, r1
 802bb14:	4620      	mov	r0, r4
 802bb16:	4629      	mov	r1, r5
 802bb18:	f7d4 fc26 	bl	8000368 <__aeabi_dsub>
 802bb1c:	4642      	mov	r2, r8
 802bb1e:	4606      	mov	r6, r0
 802bb20:	460f      	mov	r7, r1
 802bb22:	464b      	mov	r3, r9
 802bb24:	4640      	mov	r0, r8
 802bb26:	4649      	mov	r1, r9
 802bb28:	f7d4 fdd6 	bl	80006d8 <__aeabi_dmul>
 802bb2c:	a35e      	add	r3, pc, #376	; (adr r3, 802bca8 <__ieee754_pow+0xa18>)
 802bb2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bb32:	4604      	mov	r4, r0
 802bb34:	460d      	mov	r5, r1
 802bb36:	f7d4 fdcf 	bl	80006d8 <__aeabi_dmul>
 802bb3a:	a35d      	add	r3, pc, #372	; (adr r3, 802bcb0 <__ieee754_pow+0xa20>)
 802bb3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bb40:	f7d4 fc12 	bl	8000368 <__aeabi_dsub>
 802bb44:	4622      	mov	r2, r4
 802bb46:	462b      	mov	r3, r5
 802bb48:	f7d4 fdc6 	bl	80006d8 <__aeabi_dmul>
 802bb4c:	a35a      	add	r3, pc, #360	; (adr r3, 802bcb8 <__ieee754_pow+0xa28>)
 802bb4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bb52:	f7d4 fc0b 	bl	800036c <__adddf3>
 802bb56:	4622      	mov	r2, r4
 802bb58:	462b      	mov	r3, r5
 802bb5a:	f7d4 fdbd 	bl	80006d8 <__aeabi_dmul>
 802bb5e:	a358      	add	r3, pc, #352	; (adr r3, 802bcc0 <__ieee754_pow+0xa30>)
 802bb60:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bb64:	f7d4 fc00 	bl	8000368 <__aeabi_dsub>
 802bb68:	4622      	mov	r2, r4
 802bb6a:	462b      	mov	r3, r5
 802bb6c:	f7d4 fdb4 	bl	80006d8 <__aeabi_dmul>
 802bb70:	a355      	add	r3, pc, #340	; (adr r3, 802bcc8 <__ieee754_pow+0xa38>)
 802bb72:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bb76:	f7d4 fbf9 	bl	800036c <__adddf3>
 802bb7a:	4622      	mov	r2, r4
 802bb7c:	462b      	mov	r3, r5
 802bb7e:	f7d4 fdab 	bl	80006d8 <__aeabi_dmul>
 802bb82:	4602      	mov	r2, r0
 802bb84:	460b      	mov	r3, r1
 802bb86:	4640      	mov	r0, r8
 802bb88:	4649      	mov	r1, r9
 802bb8a:	f7d4 fbed 	bl	8000368 <__aeabi_dsub>
 802bb8e:	4604      	mov	r4, r0
 802bb90:	460d      	mov	r5, r1
 802bb92:	4602      	mov	r2, r0
 802bb94:	460b      	mov	r3, r1
 802bb96:	4640      	mov	r0, r8
 802bb98:	4649      	mov	r1, r9
 802bb9a:	f7d4 fd9d 	bl	80006d8 <__aeabi_dmul>
 802bb9e:	2200      	movs	r2, #0
 802bba0:	ec41 0b19 	vmov	d9, r0, r1
 802bba4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 802bba8:	4620      	mov	r0, r4
 802bbaa:	4629      	mov	r1, r5
 802bbac:	f7d4 fbdc 	bl	8000368 <__aeabi_dsub>
 802bbb0:	4602      	mov	r2, r0
 802bbb2:	460b      	mov	r3, r1
 802bbb4:	ec51 0b19 	vmov	r0, r1, d9
 802bbb8:	f7d4 feb8 	bl	800092c <__aeabi_ddiv>
 802bbbc:	4632      	mov	r2, r6
 802bbbe:	4604      	mov	r4, r0
 802bbc0:	460d      	mov	r5, r1
 802bbc2:	463b      	mov	r3, r7
 802bbc4:	4640      	mov	r0, r8
 802bbc6:	4649      	mov	r1, r9
 802bbc8:	f7d4 fd86 	bl	80006d8 <__aeabi_dmul>
 802bbcc:	4632      	mov	r2, r6
 802bbce:	463b      	mov	r3, r7
 802bbd0:	f7d4 fbcc 	bl	800036c <__adddf3>
 802bbd4:	4602      	mov	r2, r0
 802bbd6:	460b      	mov	r3, r1
 802bbd8:	4620      	mov	r0, r4
 802bbda:	4629      	mov	r1, r5
 802bbdc:	f7d4 fbc4 	bl	8000368 <__aeabi_dsub>
 802bbe0:	4642      	mov	r2, r8
 802bbe2:	464b      	mov	r3, r9
 802bbe4:	f7d4 fbc0 	bl	8000368 <__aeabi_dsub>
 802bbe8:	460b      	mov	r3, r1
 802bbea:	4602      	mov	r2, r0
 802bbec:	493a      	ldr	r1, [pc, #232]	; (802bcd8 <__ieee754_pow+0xa48>)
 802bbee:	2000      	movs	r0, #0
 802bbf0:	f7d4 fbba 	bl	8000368 <__aeabi_dsub>
 802bbf4:	ec41 0b10 	vmov	d0, r0, r1
 802bbf8:	ee10 3a90 	vmov	r3, s1
 802bbfc:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 802bc00:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 802bc04:	da2b      	bge.n	802bc5e <__ieee754_pow+0x9ce>
 802bc06:	4650      	mov	r0, sl
 802bc08:	f000 f966 	bl	802bed8 <scalbn>
 802bc0c:	ec51 0b10 	vmov	r0, r1, d0
 802bc10:	ec53 2b18 	vmov	r2, r3, d8
 802bc14:	f7ff bbed 	b.w	802b3f2 <__ieee754_pow+0x162>
 802bc18:	4b30      	ldr	r3, [pc, #192]	; (802bcdc <__ieee754_pow+0xa4c>)
 802bc1a:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 802bc1e:	429e      	cmp	r6, r3
 802bc20:	f77f af0c 	ble.w	802ba3c <__ieee754_pow+0x7ac>
 802bc24:	4b2e      	ldr	r3, [pc, #184]	; (802bce0 <__ieee754_pow+0xa50>)
 802bc26:	440b      	add	r3, r1
 802bc28:	4303      	orrs	r3, r0
 802bc2a:	d009      	beq.n	802bc40 <__ieee754_pow+0x9b0>
 802bc2c:	ec51 0b18 	vmov	r0, r1, d8
 802bc30:	2200      	movs	r2, #0
 802bc32:	2300      	movs	r3, #0
 802bc34:	f7d4 ffc2 	bl	8000bbc <__aeabi_dcmplt>
 802bc38:	3800      	subs	r0, #0
 802bc3a:	bf18      	it	ne
 802bc3c:	2001      	movne	r0, #1
 802bc3e:	e447      	b.n	802b4d0 <__ieee754_pow+0x240>
 802bc40:	4622      	mov	r2, r4
 802bc42:	462b      	mov	r3, r5
 802bc44:	f7d4 fb90 	bl	8000368 <__aeabi_dsub>
 802bc48:	4642      	mov	r2, r8
 802bc4a:	464b      	mov	r3, r9
 802bc4c:	f7d4 ffca 	bl	8000be4 <__aeabi_dcmpge>
 802bc50:	2800      	cmp	r0, #0
 802bc52:	f43f aef3 	beq.w	802ba3c <__ieee754_pow+0x7ac>
 802bc56:	e7e9      	b.n	802bc2c <__ieee754_pow+0x99c>
 802bc58:	f04f 0a00 	mov.w	sl, #0
 802bc5c:	e71a      	b.n	802ba94 <__ieee754_pow+0x804>
 802bc5e:	ec51 0b10 	vmov	r0, r1, d0
 802bc62:	4619      	mov	r1, r3
 802bc64:	e7d4      	b.n	802bc10 <__ieee754_pow+0x980>
 802bc66:	491c      	ldr	r1, [pc, #112]	; (802bcd8 <__ieee754_pow+0xa48>)
 802bc68:	2000      	movs	r0, #0
 802bc6a:	f7ff bb30 	b.w	802b2ce <__ieee754_pow+0x3e>
 802bc6e:	2000      	movs	r0, #0
 802bc70:	2100      	movs	r1, #0
 802bc72:	f7ff bb2c 	b.w	802b2ce <__ieee754_pow+0x3e>
 802bc76:	4630      	mov	r0, r6
 802bc78:	4639      	mov	r1, r7
 802bc7a:	f7ff bb28 	b.w	802b2ce <__ieee754_pow+0x3e>
 802bc7e:	9204      	str	r2, [sp, #16]
 802bc80:	f7ff bb7a 	b.w	802b378 <__ieee754_pow+0xe8>
 802bc84:	2300      	movs	r3, #0
 802bc86:	f7ff bb64 	b.w	802b352 <__ieee754_pow+0xc2>
 802bc8a:	bf00      	nop
 802bc8c:	f3af 8000 	nop.w
 802bc90:	00000000 	.word	0x00000000
 802bc94:	3fe62e43 	.word	0x3fe62e43
 802bc98:	fefa39ef 	.word	0xfefa39ef
 802bc9c:	3fe62e42 	.word	0x3fe62e42
 802bca0:	0ca86c39 	.word	0x0ca86c39
 802bca4:	be205c61 	.word	0xbe205c61
 802bca8:	72bea4d0 	.word	0x72bea4d0
 802bcac:	3e663769 	.word	0x3e663769
 802bcb0:	c5d26bf1 	.word	0xc5d26bf1
 802bcb4:	3ebbbd41 	.word	0x3ebbbd41
 802bcb8:	af25de2c 	.word	0xaf25de2c
 802bcbc:	3f11566a 	.word	0x3f11566a
 802bcc0:	16bebd93 	.word	0x16bebd93
 802bcc4:	3f66c16c 	.word	0x3f66c16c
 802bcc8:	5555553e 	.word	0x5555553e
 802bccc:	3fc55555 	.word	0x3fc55555
 802bcd0:	3fe00000 	.word	0x3fe00000
 802bcd4:	000fffff 	.word	0x000fffff
 802bcd8:	3ff00000 	.word	0x3ff00000
 802bcdc:	4090cbff 	.word	0x4090cbff
 802bce0:	3f6f3400 	.word	0x3f6f3400
 802bce4:	652b82fe 	.word	0x652b82fe
 802bce8:	3c971547 	.word	0x3c971547

0802bcec <__ieee754_sqrt>:
 802bcec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bcf0:	ec55 4b10 	vmov	r4, r5, d0
 802bcf4:	4e55      	ldr	r6, [pc, #340]	; (802be4c <__ieee754_sqrt+0x160>)
 802bcf6:	43ae      	bics	r6, r5
 802bcf8:	ee10 0a10 	vmov	r0, s0
 802bcfc:	ee10 3a10 	vmov	r3, s0
 802bd00:	462a      	mov	r2, r5
 802bd02:	4629      	mov	r1, r5
 802bd04:	d110      	bne.n	802bd28 <__ieee754_sqrt+0x3c>
 802bd06:	ee10 2a10 	vmov	r2, s0
 802bd0a:	462b      	mov	r3, r5
 802bd0c:	f7d4 fce4 	bl	80006d8 <__aeabi_dmul>
 802bd10:	4602      	mov	r2, r0
 802bd12:	460b      	mov	r3, r1
 802bd14:	4620      	mov	r0, r4
 802bd16:	4629      	mov	r1, r5
 802bd18:	f7d4 fb28 	bl	800036c <__adddf3>
 802bd1c:	4604      	mov	r4, r0
 802bd1e:	460d      	mov	r5, r1
 802bd20:	ec45 4b10 	vmov	d0, r4, r5
 802bd24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bd28:	2d00      	cmp	r5, #0
 802bd2a:	dc10      	bgt.n	802bd4e <__ieee754_sqrt+0x62>
 802bd2c:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 802bd30:	4330      	orrs	r0, r6
 802bd32:	d0f5      	beq.n	802bd20 <__ieee754_sqrt+0x34>
 802bd34:	b15d      	cbz	r5, 802bd4e <__ieee754_sqrt+0x62>
 802bd36:	ee10 2a10 	vmov	r2, s0
 802bd3a:	462b      	mov	r3, r5
 802bd3c:	ee10 0a10 	vmov	r0, s0
 802bd40:	f7d4 fb12 	bl	8000368 <__aeabi_dsub>
 802bd44:	4602      	mov	r2, r0
 802bd46:	460b      	mov	r3, r1
 802bd48:	f7d4 fdf0 	bl	800092c <__aeabi_ddiv>
 802bd4c:	e7e6      	b.n	802bd1c <__ieee754_sqrt+0x30>
 802bd4e:	1512      	asrs	r2, r2, #20
 802bd50:	d074      	beq.n	802be3c <__ieee754_sqrt+0x150>
 802bd52:	07d4      	lsls	r4, r2, #31
 802bd54:	f3c1 0113 	ubfx	r1, r1, #0, #20
 802bd58:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 802bd5c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 802bd60:	bf5e      	ittt	pl
 802bd62:	0fda      	lsrpl	r2, r3, #31
 802bd64:	005b      	lslpl	r3, r3, #1
 802bd66:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 802bd6a:	2400      	movs	r4, #0
 802bd6c:	0fda      	lsrs	r2, r3, #31
 802bd6e:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 802bd72:	107f      	asrs	r7, r7, #1
 802bd74:	005b      	lsls	r3, r3, #1
 802bd76:	2516      	movs	r5, #22
 802bd78:	4620      	mov	r0, r4
 802bd7a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 802bd7e:	1886      	adds	r6, r0, r2
 802bd80:	428e      	cmp	r6, r1
 802bd82:	bfde      	ittt	le
 802bd84:	1b89      	suble	r1, r1, r6
 802bd86:	18b0      	addle	r0, r6, r2
 802bd88:	18a4      	addle	r4, r4, r2
 802bd8a:	0049      	lsls	r1, r1, #1
 802bd8c:	3d01      	subs	r5, #1
 802bd8e:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 802bd92:	ea4f 0252 	mov.w	r2, r2, lsr #1
 802bd96:	ea4f 0343 	mov.w	r3, r3, lsl #1
 802bd9a:	d1f0      	bne.n	802bd7e <__ieee754_sqrt+0x92>
 802bd9c:	462a      	mov	r2, r5
 802bd9e:	f04f 0e20 	mov.w	lr, #32
 802bda2:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 802bda6:	4281      	cmp	r1, r0
 802bda8:	eb06 0c05 	add.w	ip, r6, r5
 802bdac:	dc02      	bgt.n	802bdb4 <__ieee754_sqrt+0xc8>
 802bdae:	d113      	bne.n	802bdd8 <__ieee754_sqrt+0xec>
 802bdb0:	459c      	cmp	ip, r3
 802bdb2:	d811      	bhi.n	802bdd8 <__ieee754_sqrt+0xec>
 802bdb4:	f1bc 0f00 	cmp.w	ip, #0
 802bdb8:	eb0c 0506 	add.w	r5, ip, r6
 802bdbc:	da43      	bge.n	802be46 <__ieee754_sqrt+0x15a>
 802bdbe:	2d00      	cmp	r5, #0
 802bdc0:	db41      	blt.n	802be46 <__ieee754_sqrt+0x15a>
 802bdc2:	f100 0801 	add.w	r8, r0, #1
 802bdc6:	1a09      	subs	r1, r1, r0
 802bdc8:	459c      	cmp	ip, r3
 802bdca:	bf88      	it	hi
 802bdcc:	f101 31ff 	addhi.w	r1, r1, #4294967295
 802bdd0:	eba3 030c 	sub.w	r3, r3, ip
 802bdd4:	4432      	add	r2, r6
 802bdd6:	4640      	mov	r0, r8
 802bdd8:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 802bddc:	f1be 0e01 	subs.w	lr, lr, #1
 802bde0:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 802bde4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 802bde8:	ea4f 0656 	mov.w	r6, r6, lsr #1
 802bdec:	d1db      	bne.n	802bda6 <__ieee754_sqrt+0xba>
 802bdee:	430b      	orrs	r3, r1
 802bdf0:	d006      	beq.n	802be00 <__ieee754_sqrt+0x114>
 802bdf2:	1c50      	adds	r0, r2, #1
 802bdf4:	bf13      	iteet	ne
 802bdf6:	3201      	addne	r2, #1
 802bdf8:	3401      	addeq	r4, #1
 802bdfa:	4672      	moveq	r2, lr
 802bdfc:	f022 0201 	bicne.w	r2, r2, #1
 802be00:	1063      	asrs	r3, r4, #1
 802be02:	0852      	lsrs	r2, r2, #1
 802be04:	07e1      	lsls	r1, r4, #31
 802be06:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 802be0a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 802be0e:	bf48      	it	mi
 802be10:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 802be14:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 802be18:	4614      	mov	r4, r2
 802be1a:	e781      	b.n	802bd20 <__ieee754_sqrt+0x34>
 802be1c:	0ad9      	lsrs	r1, r3, #11
 802be1e:	3815      	subs	r0, #21
 802be20:	055b      	lsls	r3, r3, #21
 802be22:	2900      	cmp	r1, #0
 802be24:	d0fa      	beq.n	802be1c <__ieee754_sqrt+0x130>
 802be26:	02cd      	lsls	r5, r1, #11
 802be28:	d50a      	bpl.n	802be40 <__ieee754_sqrt+0x154>
 802be2a:	f1c2 0420 	rsb	r4, r2, #32
 802be2e:	fa23 f404 	lsr.w	r4, r3, r4
 802be32:	1e55      	subs	r5, r2, #1
 802be34:	4093      	lsls	r3, r2
 802be36:	4321      	orrs	r1, r4
 802be38:	1b42      	subs	r2, r0, r5
 802be3a:	e78a      	b.n	802bd52 <__ieee754_sqrt+0x66>
 802be3c:	4610      	mov	r0, r2
 802be3e:	e7f0      	b.n	802be22 <__ieee754_sqrt+0x136>
 802be40:	0049      	lsls	r1, r1, #1
 802be42:	3201      	adds	r2, #1
 802be44:	e7ef      	b.n	802be26 <__ieee754_sqrt+0x13a>
 802be46:	4680      	mov	r8, r0
 802be48:	e7bd      	b.n	802bdc6 <__ieee754_sqrt+0xda>
 802be4a:	bf00      	nop
 802be4c:	7ff00000 	.word	0x7ff00000

0802be50 <with_errno>:
 802be50:	b570      	push	{r4, r5, r6, lr}
 802be52:	4604      	mov	r4, r0
 802be54:	460d      	mov	r5, r1
 802be56:	4616      	mov	r6, r2
 802be58:	f000 f8fe 	bl	802c058 <__errno>
 802be5c:	4629      	mov	r1, r5
 802be5e:	6006      	str	r6, [r0, #0]
 802be60:	4620      	mov	r0, r4
 802be62:	bd70      	pop	{r4, r5, r6, pc}

0802be64 <xflow>:
 802be64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802be66:	4614      	mov	r4, r2
 802be68:	461d      	mov	r5, r3
 802be6a:	b108      	cbz	r0, 802be70 <xflow+0xc>
 802be6c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802be70:	e9cd 2300 	strd	r2, r3, [sp]
 802be74:	e9dd 2300 	ldrd	r2, r3, [sp]
 802be78:	4620      	mov	r0, r4
 802be7a:	4629      	mov	r1, r5
 802be7c:	f7d4 fc2c 	bl	80006d8 <__aeabi_dmul>
 802be80:	2222      	movs	r2, #34	; 0x22
 802be82:	b003      	add	sp, #12
 802be84:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802be88:	f7ff bfe2 	b.w	802be50 <with_errno>

0802be8c <__math_uflow>:
 802be8c:	b508      	push	{r3, lr}
 802be8e:	2200      	movs	r2, #0
 802be90:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 802be94:	f7ff ffe6 	bl	802be64 <xflow>
 802be98:	ec41 0b10 	vmov	d0, r0, r1
 802be9c:	bd08      	pop	{r3, pc}

0802be9e <__math_oflow>:
 802be9e:	b508      	push	{r3, lr}
 802bea0:	2200      	movs	r2, #0
 802bea2:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 802bea6:	f7ff ffdd 	bl	802be64 <xflow>
 802beaa:	ec41 0b10 	vmov	d0, r0, r1
 802beae:	bd08      	pop	{r3, pc}

0802beb0 <fabs>:
 802beb0:	ec51 0b10 	vmov	r0, r1, d0
 802beb4:	ee10 2a10 	vmov	r2, s0
 802beb8:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 802bebc:	ec43 2b10 	vmov	d0, r2, r3
 802bec0:	4770      	bx	lr

0802bec2 <finite>:
 802bec2:	b082      	sub	sp, #8
 802bec4:	ed8d 0b00 	vstr	d0, [sp]
 802bec8:	9801      	ldr	r0, [sp, #4]
 802beca:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 802bece:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 802bed2:	0fc0      	lsrs	r0, r0, #31
 802bed4:	b002      	add	sp, #8
 802bed6:	4770      	bx	lr

0802bed8 <scalbn>:
 802bed8:	b570      	push	{r4, r5, r6, lr}
 802beda:	ec55 4b10 	vmov	r4, r5, d0
 802bede:	f3c5 520a 	ubfx	r2, r5, #20, #11
 802bee2:	4606      	mov	r6, r0
 802bee4:	462b      	mov	r3, r5
 802bee6:	b99a      	cbnz	r2, 802bf10 <scalbn+0x38>
 802bee8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 802beec:	4323      	orrs	r3, r4
 802beee:	d036      	beq.n	802bf5e <scalbn+0x86>
 802bef0:	4b39      	ldr	r3, [pc, #228]	; (802bfd8 <scalbn+0x100>)
 802bef2:	4629      	mov	r1, r5
 802bef4:	ee10 0a10 	vmov	r0, s0
 802bef8:	2200      	movs	r2, #0
 802befa:	f7d4 fbed 	bl	80006d8 <__aeabi_dmul>
 802befe:	4b37      	ldr	r3, [pc, #220]	; (802bfdc <scalbn+0x104>)
 802bf00:	429e      	cmp	r6, r3
 802bf02:	4604      	mov	r4, r0
 802bf04:	460d      	mov	r5, r1
 802bf06:	da10      	bge.n	802bf2a <scalbn+0x52>
 802bf08:	a32b      	add	r3, pc, #172	; (adr r3, 802bfb8 <scalbn+0xe0>)
 802bf0a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bf0e:	e03a      	b.n	802bf86 <scalbn+0xae>
 802bf10:	f240 71ff 	movw	r1, #2047	; 0x7ff
 802bf14:	428a      	cmp	r2, r1
 802bf16:	d10c      	bne.n	802bf32 <scalbn+0x5a>
 802bf18:	ee10 2a10 	vmov	r2, s0
 802bf1c:	4620      	mov	r0, r4
 802bf1e:	4629      	mov	r1, r5
 802bf20:	f7d4 fa24 	bl	800036c <__adddf3>
 802bf24:	4604      	mov	r4, r0
 802bf26:	460d      	mov	r5, r1
 802bf28:	e019      	b.n	802bf5e <scalbn+0x86>
 802bf2a:	f3c1 520a 	ubfx	r2, r1, #20, #11
 802bf2e:	460b      	mov	r3, r1
 802bf30:	3a36      	subs	r2, #54	; 0x36
 802bf32:	4432      	add	r2, r6
 802bf34:	f240 71fe 	movw	r1, #2046	; 0x7fe
 802bf38:	428a      	cmp	r2, r1
 802bf3a:	dd08      	ble.n	802bf4e <scalbn+0x76>
 802bf3c:	2d00      	cmp	r5, #0
 802bf3e:	a120      	add	r1, pc, #128	; (adr r1, 802bfc0 <scalbn+0xe8>)
 802bf40:	e9d1 0100 	ldrd	r0, r1, [r1]
 802bf44:	da1c      	bge.n	802bf80 <scalbn+0xa8>
 802bf46:	a120      	add	r1, pc, #128	; (adr r1, 802bfc8 <scalbn+0xf0>)
 802bf48:	e9d1 0100 	ldrd	r0, r1, [r1]
 802bf4c:	e018      	b.n	802bf80 <scalbn+0xa8>
 802bf4e:	2a00      	cmp	r2, #0
 802bf50:	dd08      	ble.n	802bf64 <scalbn+0x8c>
 802bf52:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802bf56:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 802bf5a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 802bf5e:	ec45 4b10 	vmov	d0, r4, r5
 802bf62:	bd70      	pop	{r4, r5, r6, pc}
 802bf64:	f112 0f35 	cmn.w	r2, #53	; 0x35
 802bf68:	da19      	bge.n	802bf9e <scalbn+0xc6>
 802bf6a:	f24c 3350 	movw	r3, #50000	; 0xc350
 802bf6e:	429e      	cmp	r6, r3
 802bf70:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 802bf74:	dd0a      	ble.n	802bf8c <scalbn+0xb4>
 802bf76:	a112      	add	r1, pc, #72	; (adr r1, 802bfc0 <scalbn+0xe8>)
 802bf78:	e9d1 0100 	ldrd	r0, r1, [r1]
 802bf7c:	2b00      	cmp	r3, #0
 802bf7e:	d1e2      	bne.n	802bf46 <scalbn+0x6e>
 802bf80:	a30f      	add	r3, pc, #60	; (adr r3, 802bfc0 <scalbn+0xe8>)
 802bf82:	e9d3 2300 	ldrd	r2, r3, [r3]
 802bf86:	f7d4 fba7 	bl	80006d8 <__aeabi_dmul>
 802bf8a:	e7cb      	b.n	802bf24 <scalbn+0x4c>
 802bf8c:	a10a      	add	r1, pc, #40	; (adr r1, 802bfb8 <scalbn+0xe0>)
 802bf8e:	e9d1 0100 	ldrd	r0, r1, [r1]
 802bf92:	2b00      	cmp	r3, #0
 802bf94:	d0b8      	beq.n	802bf08 <scalbn+0x30>
 802bf96:	a10e      	add	r1, pc, #56	; (adr r1, 802bfd0 <scalbn+0xf8>)
 802bf98:	e9d1 0100 	ldrd	r0, r1, [r1]
 802bf9c:	e7b4      	b.n	802bf08 <scalbn+0x30>
 802bf9e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802bfa2:	3236      	adds	r2, #54	; 0x36
 802bfa4:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 802bfa8:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 802bfac:	4620      	mov	r0, r4
 802bfae:	4b0c      	ldr	r3, [pc, #48]	; (802bfe0 <scalbn+0x108>)
 802bfb0:	2200      	movs	r2, #0
 802bfb2:	e7e8      	b.n	802bf86 <scalbn+0xae>
 802bfb4:	f3af 8000 	nop.w
 802bfb8:	c2f8f359 	.word	0xc2f8f359
 802bfbc:	01a56e1f 	.word	0x01a56e1f
 802bfc0:	8800759c 	.word	0x8800759c
 802bfc4:	7e37e43c 	.word	0x7e37e43c
 802bfc8:	8800759c 	.word	0x8800759c
 802bfcc:	fe37e43c 	.word	0xfe37e43c
 802bfd0:	c2f8f359 	.word	0xc2f8f359
 802bfd4:	81a56e1f 	.word	0x81a56e1f
 802bfd8:	43500000 	.word	0x43500000
 802bfdc:	ffff3cb0 	.word	0xffff3cb0
 802bfe0:	3c900000 	.word	0x3c900000

0802bfe4 <abort>:
 802bfe4:	b508      	push	{r3, lr}
 802bfe6:	2006      	movs	r0, #6
 802bfe8:	f001 f8d8 	bl	802d19c <raise>
 802bfec:	2001      	movs	r0, #1
 802bfee:	f7d7 fb11 	bl	8003614 <_exit>
	...

0802bff4 <__assert_func>:
 802bff4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802bff6:	4614      	mov	r4, r2
 802bff8:	461a      	mov	r2, r3
 802bffa:	4b09      	ldr	r3, [pc, #36]	; (802c020 <__assert_func+0x2c>)
 802bffc:	681b      	ldr	r3, [r3, #0]
 802bffe:	4605      	mov	r5, r0
 802c000:	68d8      	ldr	r0, [r3, #12]
 802c002:	b14c      	cbz	r4, 802c018 <__assert_func+0x24>
 802c004:	4b07      	ldr	r3, [pc, #28]	; (802c024 <__assert_func+0x30>)
 802c006:	9100      	str	r1, [sp, #0]
 802c008:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802c00c:	4906      	ldr	r1, [pc, #24]	; (802c028 <__assert_func+0x34>)
 802c00e:	462b      	mov	r3, r5
 802c010:	f000 f8fe 	bl	802c210 <fiprintf>
 802c014:	f7ff ffe6 	bl	802bfe4 <abort>
 802c018:	4b04      	ldr	r3, [pc, #16]	; (802c02c <__assert_func+0x38>)
 802c01a:	461c      	mov	r4, r3
 802c01c:	e7f3      	b.n	802c006 <__assert_func+0x12>
 802c01e:	bf00      	nop
 802c020:	20000114 	.word	0x20000114
 802c024:	08049a90 	.word	0x08049a90
 802c028:	08049a9d 	.word	0x08049a9d
 802c02c:	0802f3da 	.word	0x0802f3da

0802c030 <atexit>:
 802c030:	2300      	movs	r3, #0
 802c032:	4601      	mov	r1, r0
 802c034:	461a      	mov	r2, r3
 802c036:	4618      	mov	r0, r3
 802c038:	f001 b9e2 	b.w	802d400 <__register_exitproc>

0802c03c <__cxa_atexit>:
 802c03c:	b510      	push	{r4, lr}
 802c03e:	4c05      	ldr	r4, [pc, #20]	; (802c054 <__cxa_atexit+0x18>)
 802c040:	4613      	mov	r3, r2
 802c042:	b12c      	cbz	r4, 802c050 <__cxa_atexit+0x14>
 802c044:	460a      	mov	r2, r1
 802c046:	4601      	mov	r1, r0
 802c048:	2002      	movs	r0, #2
 802c04a:	f001 f9d9 	bl	802d400 <__register_exitproc>
 802c04e:	bd10      	pop	{r4, pc}
 802c050:	4620      	mov	r0, r4
 802c052:	e7fc      	b.n	802c04e <__cxa_atexit+0x12>
 802c054:	0802d401 	.word	0x0802d401

0802c058 <__errno>:
 802c058:	4b01      	ldr	r3, [pc, #4]	; (802c060 <__errno+0x8>)
 802c05a:	6818      	ldr	r0, [r3, #0]
 802c05c:	4770      	bx	lr
 802c05e:	bf00      	nop
 802c060:	20000114 	.word	0x20000114

0802c064 <std>:
 802c064:	2300      	movs	r3, #0
 802c066:	b510      	push	{r4, lr}
 802c068:	4604      	mov	r4, r0
 802c06a:	e9c0 3300 	strd	r3, r3, [r0]
 802c06e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802c072:	6083      	str	r3, [r0, #8]
 802c074:	8181      	strh	r1, [r0, #12]
 802c076:	6643      	str	r3, [r0, #100]	; 0x64
 802c078:	81c2      	strh	r2, [r0, #14]
 802c07a:	6183      	str	r3, [r0, #24]
 802c07c:	4619      	mov	r1, r3
 802c07e:	2208      	movs	r2, #8
 802c080:	305c      	adds	r0, #92	; 0x5c
 802c082:	f000 f93d 	bl	802c300 <memset>
 802c086:	4b05      	ldr	r3, [pc, #20]	; (802c09c <std+0x38>)
 802c088:	6263      	str	r3, [r4, #36]	; 0x24
 802c08a:	4b05      	ldr	r3, [pc, #20]	; (802c0a0 <std+0x3c>)
 802c08c:	62a3      	str	r3, [r4, #40]	; 0x28
 802c08e:	4b05      	ldr	r3, [pc, #20]	; (802c0a4 <std+0x40>)
 802c090:	62e3      	str	r3, [r4, #44]	; 0x2c
 802c092:	4b05      	ldr	r3, [pc, #20]	; (802c0a8 <std+0x44>)
 802c094:	6224      	str	r4, [r4, #32]
 802c096:	6323      	str	r3, [r4, #48]	; 0x30
 802c098:	bd10      	pop	{r4, pc}
 802c09a:	bf00      	nop
 802c09c:	0802d1d5 	.word	0x0802d1d5
 802c0a0:	0802d1f7 	.word	0x0802d1f7
 802c0a4:	0802d22f 	.word	0x0802d22f
 802c0a8:	0802d253 	.word	0x0802d253

0802c0ac <_cleanup_r>:
 802c0ac:	4901      	ldr	r1, [pc, #4]	; (802c0b4 <_cleanup_r+0x8>)
 802c0ae:	f000 b8c1 	b.w	802c234 <_fwalk_reent>
 802c0b2:	bf00      	nop
 802c0b4:	0802e2e9 	.word	0x0802e2e9

0802c0b8 <__sfmoreglue>:
 802c0b8:	b570      	push	{r4, r5, r6, lr}
 802c0ba:	2268      	movs	r2, #104	; 0x68
 802c0bc:	1e4d      	subs	r5, r1, #1
 802c0be:	4355      	muls	r5, r2
 802c0c0:	460e      	mov	r6, r1
 802c0c2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 802c0c6:	f000 f98f 	bl	802c3e8 <_malloc_r>
 802c0ca:	4604      	mov	r4, r0
 802c0cc:	b140      	cbz	r0, 802c0e0 <__sfmoreglue+0x28>
 802c0ce:	2100      	movs	r1, #0
 802c0d0:	e9c0 1600 	strd	r1, r6, [r0]
 802c0d4:	300c      	adds	r0, #12
 802c0d6:	60a0      	str	r0, [r4, #8]
 802c0d8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 802c0dc:	f000 f910 	bl	802c300 <memset>
 802c0e0:	4620      	mov	r0, r4
 802c0e2:	bd70      	pop	{r4, r5, r6, pc}

0802c0e4 <__sfp_lock_acquire>:
 802c0e4:	4801      	ldr	r0, [pc, #4]	; (802c0ec <__sfp_lock_acquire+0x8>)
 802c0e6:	f000 b8ea 	b.w	802c2be <__retarget_lock_acquire_recursive>
 802c0ea:	bf00      	nop
 802c0ec:	2001e2de 	.word	0x2001e2de

0802c0f0 <__sfp_lock_release>:
 802c0f0:	4801      	ldr	r0, [pc, #4]	; (802c0f8 <__sfp_lock_release+0x8>)
 802c0f2:	f000 b8e6 	b.w	802c2c2 <__retarget_lock_release_recursive>
 802c0f6:	bf00      	nop
 802c0f8:	2001e2de 	.word	0x2001e2de

0802c0fc <__sinit_lock_acquire>:
 802c0fc:	4801      	ldr	r0, [pc, #4]	; (802c104 <__sinit_lock_acquire+0x8>)
 802c0fe:	f000 b8de 	b.w	802c2be <__retarget_lock_acquire_recursive>
 802c102:	bf00      	nop
 802c104:	2001e2df 	.word	0x2001e2df

0802c108 <__sinit_lock_release>:
 802c108:	4801      	ldr	r0, [pc, #4]	; (802c110 <__sinit_lock_release+0x8>)
 802c10a:	f000 b8da 	b.w	802c2c2 <__retarget_lock_release_recursive>
 802c10e:	bf00      	nop
 802c110:	2001e2df 	.word	0x2001e2df

0802c114 <__sinit>:
 802c114:	b510      	push	{r4, lr}
 802c116:	4604      	mov	r4, r0
 802c118:	f7ff fff0 	bl	802c0fc <__sinit_lock_acquire>
 802c11c:	69a3      	ldr	r3, [r4, #24]
 802c11e:	b11b      	cbz	r3, 802c128 <__sinit+0x14>
 802c120:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802c124:	f7ff bff0 	b.w	802c108 <__sinit_lock_release>
 802c128:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 802c12c:	6523      	str	r3, [r4, #80]	; 0x50
 802c12e:	4b13      	ldr	r3, [pc, #76]	; (802c17c <__sinit+0x68>)
 802c130:	4a13      	ldr	r2, [pc, #76]	; (802c180 <__sinit+0x6c>)
 802c132:	681b      	ldr	r3, [r3, #0]
 802c134:	62a2      	str	r2, [r4, #40]	; 0x28
 802c136:	42a3      	cmp	r3, r4
 802c138:	bf04      	itt	eq
 802c13a:	2301      	moveq	r3, #1
 802c13c:	61a3      	streq	r3, [r4, #24]
 802c13e:	4620      	mov	r0, r4
 802c140:	f000 f820 	bl	802c184 <__sfp>
 802c144:	6060      	str	r0, [r4, #4]
 802c146:	4620      	mov	r0, r4
 802c148:	f000 f81c 	bl	802c184 <__sfp>
 802c14c:	60a0      	str	r0, [r4, #8]
 802c14e:	4620      	mov	r0, r4
 802c150:	f000 f818 	bl	802c184 <__sfp>
 802c154:	2200      	movs	r2, #0
 802c156:	60e0      	str	r0, [r4, #12]
 802c158:	2104      	movs	r1, #4
 802c15a:	6860      	ldr	r0, [r4, #4]
 802c15c:	f7ff ff82 	bl	802c064 <std>
 802c160:	68a0      	ldr	r0, [r4, #8]
 802c162:	2201      	movs	r2, #1
 802c164:	2109      	movs	r1, #9
 802c166:	f7ff ff7d 	bl	802c064 <std>
 802c16a:	68e0      	ldr	r0, [r4, #12]
 802c16c:	2202      	movs	r2, #2
 802c16e:	2112      	movs	r1, #18
 802c170:	f7ff ff78 	bl	802c064 <std>
 802c174:	2301      	movs	r3, #1
 802c176:	61a3      	str	r3, [r4, #24]
 802c178:	e7d2      	b.n	802c120 <__sinit+0xc>
 802c17a:	bf00      	nop
 802c17c:	08049b2c 	.word	0x08049b2c
 802c180:	0802c0ad 	.word	0x0802c0ad

0802c184 <__sfp>:
 802c184:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c186:	4607      	mov	r7, r0
 802c188:	f7ff ffac 	bl	802c0e4 <__sfp_lock_acquire>
 802c18c:	4b1e      	ldr	r3, [pc, #120]	; (802c208 <__sfp+0x84>)
 802c18e:	681e      	ldr	r6, [r3, #0]
 802c190:	69b3      	ldr	r3, [r6, #24]
 802c192:	b913      	cbnz	r3, 802c19a <__sfp+0x16>
 802c194:	4630      	mov	r0, r6
 802c196:	f7ff ffbd 	bl	802c114 <__sinit>
 802c19a:	3648      	adds	r6, #72	; 0x48
 802c19c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 802c1a0:	3b01      	subs	r3, #1
 802c1a2:	d503      	bpl.n	802c1ac <__sfp+0x28>
 802c1a4:	6833      	ldr	r3, [r6, #0]
 802c1a6:	b30b      	cbz	r3, 802c1ec <__sfp+0x68>
 802c1a8:	6836      	ldr	r6, [r6, #0]
 802c1aa:	e7f7      	b.n	802c19c <__sfp+0x18>
 802c1ac:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 802c1b0:	b9d5      	cbnz	r5, 802c1e8 <__sfp+0x64>
 802c1b2:	4b16      	ldr	r3, [pc, #88]	; (802c20c <__sfp+0x88>)
 802c1b4:	60e3      	str	r3, [r4, #12]
 802c1b6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802c1ba:	6665      	str	r5, [r4, #100]	; 0x64
 802c1bc:	f000 f87e 	bl	802c2bc <__retarget_lock_init_recursive>
 802c1c0:	f7ff ff96 	bl	802c0f0 <__sfp_lock_release>
 802c1c4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 802c1c8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 802c1cc:	6025      	str	r5, [r4, #0]
 802c1ce:	61a5      	str	r5, [r4, #24]
 802c1d0:	2208      	movs	r2, #8
 802c1d2:	4629      	mov	r1, r5
 802c1d4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 802c1d8:	f000 f892 	bl	802c300 <memset>
 802c1dc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802c1e0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 802c1e4:	4620      	mov	r0, r4
 802c1e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c1e8:	3468      	adds	r4, #104	; 0x68
 802c1ea:	e7d9      	b.n	802c1a0 <__sfp+0x1c>
 802c1ec:	2104      	movs	r1, #4
 802c1ee:	4638      	mov	r0, r7
 802c1f0:	f7ff ff62 	bl	802c0b8 <__sfmoreglue>
 802c1f4:	4604      	mov	r4, r0
 802c1f6:	6030      	str	r0, [r6, #0]
 802c1f8:	2800      	cmp	r0, #0
 802c1fa:	d1d5      	bne.n	802c1a8 <__sfp+0x24>
 802c1fc:	f7ff ff78 	bl	802c0f0 <__sfp_lock_release>
 802c200:	230c      	movs	r3, #12
 802c202:	603b      	str	r3, [r7, #0]
 802c204:	e7ee      	b.n	802c1e4 <__sfp+0x60>
 802c206:	bf00      	nop
 802c208:	08049b2c 	.word	0x08049b2c
 802c20c:	ffff0001 	.word	0xffff0001

0802c210 <fiprintf>:
 802c210:	b40e      	push	{r1, r2, r3}
 802c212:	b503      	push	{r0, r1, lr}
 802c214:	4601      	mov	r1, r0
 802c216:	ab03      	add	r3, sp, #12
 802c218:	4805      	ldr	r0, [pc, #20]	; (802c230 <fiprintf+0x20>)
 802c21a:	f853 2b04 	ldr.w	r2, [r3], #4
 802c21e:	6800      	ldr	r0, [r0, #0]
 802c220:	9301      	str	r3, [sp, #4]
 802c222:	f000 f97f 	bl	802c524 <_vfiprintf_r>
 802c226:	b002      	add	sp, #8
 802c228:	f85d eb04 	ldr.w	lr, [sp], #4
 802c22c:	b003      	add	sp, #12
 802c22e:	4770      	bx	lr
 802c230:	20000114 	.word	0x20000114

0802c234 <_fwalk_reent>:
 802c234:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802c238:	4606      	mov	r6, r0
 802c23a:	4688      	mov	r8, r1
 802c23c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 802c240:	2700      	movs	r7, #0
 802c242:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802c246:	f1b9 0901 	subs.w	r9, r9, #1
 802c24a:	d505      	bpl.n	802c258 <_fwalk_reent+0x24>
 802c24c:	6824      	ldr	r4, [r4, #0]
 802c24e:	2c00      	cmp	r4, #0
 802c250:	d1f7      	bne.n	802c242 <_fwalk_reent+0xe>
 802c252:	4638      	mov	r0, r7
 802c254:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802c258:	89ab      	ldrh	r3, [r5, #12]
 802c25a:	2b01      	cmp	r3, #1
 802c25c:	d907      	bls.n	802c26e <_fwalk_reent+0x3a>
 802c25e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802c262:	3301      	adds	r3, #1
 802c264:	d003      	beq.n	802c26e <_fwalk_reent+0x3a>
 802c266:	4629      	mov	r1, r5
 802c268:	4630      	mov	r0, r6
 802c26a:	47c0      	blx	r8
 802c26c:	4307      	orrs	r7, r0
 802c26e:	3568      	adds	r5, #104	; 0x68
 802c270:	e7e9      	b.n	802c246 <_fwalk_reent+0x12>
	...

0802c274 <__libc_init_array>:
 802c274:	b570      	push	{r4, r5, r6, lr}
 802c276:	4d0d      	ldr	r5, [pc, #52]	; (802c2ac <__libc_init_array+0x38>)
 802c278:	4c0d      	ldr	r4, [pc, #52]	; (802c2b0 <__libc_init_array+0x3c>)
 802c27a:	1b64      	subs	r4, r4, r5
 802c27c:	10a4      	asrs	r4, r4, #2
 802c27e:	2600      	movs	r6, #0
 802c280:	42a6      	cmp	r6, r4
 802c282:	d109      	bne.n	802c298 <__libc_init_array+0x24>
 802c284:	4d0b      	ldr	r5, [pc, #44]	; (802c2b4 <__libc_init_array+0x40>)
 802c286:	4c0c      	ldr	r4, [pc, #48]	; (802c2b8 <__libc_init_array+0x44>)
 802c288:	f002 fce0 	bl	802ec4c <_init>
 802c28c:	1b64      	subs	r4, r4, r5
 802c28e:	10a4      	asrs	r4, r4, #2
 802c290:	2600      	movs	r6, #0
 802c292:	42a6      	cmp	r6, r4
 802c294:	d105      	bne.n	802c2a2 <__libc_init_array+0x2e>
 802c296:	bd70      	pop	{r4, r5, r6, pc}
 802c298:	f855 3b04 	ldr.w	r3, [r5], #4
 802c29c:	4798      	blx	r3
 802c29e:	3601      	adds	r6, #1
 802c2a0:	e7ee      	b.n	802c280 <__libc_init_array+0xc>
 802c2a2:	f855 3b04 	ldr.w	r3, [r5], #4
 802c2a6:	4798      	blx	r3
 802c2a8:	3601      	adds	r6, #1
 802c2aa:	e7f2      	b.n	802c292 <__libc_init_array+0x1e>
 802c2ac:	080dfd7c 	.word	0x080dfd7c
 802c2b0:	080dfd7c 	.word	0x080dfd7c
 802c2b4:	080dfd7c 	.word	0x080dfd7c
 802c2b8:	080dfd90 	.word	0x080dfd90

0802c2bc <__retarget_lock_init_recursive>:
 802c2bc:	4770      	bx	lr

0802c2be <__retarget_lock_acquire_recursive>:
 802c2be:	4770      	bx	lr

0802c2c0 <__retarget_lock_release>:
 802c2c0:	4770      	bx	lr

0802c2c2 <__retarget_lock_release_recursive>:
 802c2c2:	4770      	bx	lr

0802c2c4 <malloc>:
 802c2c4:	4b02      	ldr	r3, [pc, #8]	; (802c2d0 <malloc+0xc>)
 802c2c6:	4601      	mov	r1, r0
 802c2c8:	6818      	ldr	r0, [r3, #0]
 802c2ca:	f000 b88d 	b.w	802c3e8 <_malloc_r>
 802c2ce:	bf00      	nop
 802c2d0:	20000114 	.word	0x20000114

0802c2d4 <free>:
 802c2d4:	4b02      	ldr	r3, [pc, #8]	; (802c2e0 <free+0xc>)
 802c2d6:	4601      	mov	r1, r0
 802c2d8:	6818      	ldr	r0, [r3, #0]
 802c2da:	f000 b819 	b.w	802c310 <_free_r>
 802c2de:	bf00      	nop
 802c2e0:	20000114 	.word	0x20000114

0802c2e4 <memcpy>:
 802c2e4:	440a      	add	r2, r1
 802c2e6:	4291      	cmp	r1, r2
 802c2e8:	f100 33ff 	add.w	r3, r0, #4294967295
 802c2ec:	d100      	bne.n	802c2f0 <memcpy+0xc>
 802c2ee:	4770      	bx	lr
 802c2f0:	b510      	push	{r4, lr}
 802c2f2:	f811 4b01 	ldrb.w	r4, [r1], #1
 802c2f6:	f803 4f01 	strb.w	r4, [r3, #1]!
 802c2fa:	4291      	cmp	r1, r2
 802c2fc:	d1f9      	bne.n	802c2f2 <memcpy+0xe>
 802c2fe:	bd10      	pop	{r4, pc}

0802c300 <memset>:
 802c300:	4402      	add	r2, r0
 802c302:	4603      	mov	r3, r0
 802c304:	4293      	cmp	r3, r2
 802c306:	d100      	bne.n	802c30a <memset+0xa>
 802c308:	4770      	bx	lr
 802c30a:	f803 1b01 	strb.w	r1, [r3], #1
 802c30e:	e7f9      	b.n	802c304 <memset+0x4>

0802c310 <_free_r>:
 802c310:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802c312:	2900      	cmp	r1, #0
 802c314:	d044      	beq.n	802c3a0 <_free_r+0x90>
 802c316:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802c31a:	9001      	str	r0, [sp, #4]
 802c31c:	2b00      	cmp	r3, #0
 802c31e:	f1a1 0404 	sub.w	r4, r1, #4
 802c322:	bfb8      	it	lt
 802c324:	18e4      	addlt	r4, r4, r3
 802c326:	f002 f897 	bl	802e458 <__malloc_lock>
 802c32a:	4a1e      	ldr	r2, [pc, #120]	; (802c3a4 <_free_r+0x94>)
 802c32c:	9801      	ldr	r0, [sp, #4]
 802c32e:	6813      	ldr	r3, [r2, #0]
 802c330:	b933      	cbnz	r3, 802c340 <_free_r+0x30>
 802c332:	6063      	str	r3, [r4, #4]
 802c334:	6014      	str	r4, [r2, #0]
 802c336:	b003      	add	sp, #12
 802c338:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802c33c:	f002 b892 	b.w	802e464 <__malloc_unlock>
 802c340:	42a3      	cmp	r3, r4
 802c342:	d908      	bls.n	802c356 <_free_r+0x46>
 802c344:	6825      	ldr	r5, [r4, #0]
 802c346:	1961      	adds	r1, r4, r5
 802c348:	428b      	cmp	r3, r1
 802c34a:	bf01      	itttt	eq
 802c34c:	6819      	ldreq	r1, [r3, #0]
 802c34e:	685b      	ldreq	r3, [r3, #4]
 802c350:	1949      	addeq	r1, r1, r5
 802c352:	6021      	streq	r1, [r4, #0]
 802c354:	e7ed      	b.n	802c332 <_free_r+0x22>
 802c356:	461a      	mov	r2, r3
 802c358:	685b      	ldr	r3, [r3, #4]
 802c35a:	b10b      	cbz	r3, 802c360 <_free_r+0x50>
 802c35c:	42a3      	cmp	r3, r4
 802c35e:	d9fa      	bls.n	802c356 <_free_r+0x46>
 802c360:	6811      	ldr	r1, [r2, #0]
 802c362:	1855      	adds	r5, r2, r1
 802c364:	42a5      	cmp	r5, r4
 802c366:	d10b      	bne.n	802c380 <_free_r+0x70>
 802c368:	6824      	ldr	r4, [r4, #0]
 802c36a:	4421      	add	r1, r4
 802c36c:	1854      	adds	r4, r2, r1
 802c36e:	42a3      	cmp	r3, r4
 802c370:	6011      	str	r1, [r2, #0]
 802c372:	d1e0      	bne.n	802c336 <_free_r+0x26>
 802c374:	681c      	ldr	r4, [r3, #0]
 802c376:	685b      	ldr	r3, [r3, #4]
 802c378:	6053      	str	r3, [r2, #4]
 802c37a:	4421      	add	r1, r4
 802c37c:	6011      	str	r1, [r2, #0]
 802c37e:	e7da      	b.n	802c336 <_free_r+0x26>
 802c380:	d902      	bls.n	802c388 <_free_r+0x78>
 802c382:	230c      	movs	r3, #12
 802c384:	6003      	str	r3, [r0, #0]
 802c386:	e7d6      	b.n	802c336 <_free_r+0x26>
 802c388:	6825      	ldr	r5, [r4, #0]
 802c38a:	1961      	adds	r1, r4, r5
 802c38c:	428b      	cmp	r3, r1
 802c38e:	bf04      	itt	eq
 802c390:	6819      	ldreq	r1, [r3, #0]
 802c392:	685b      	ldreq	r3, [r3, #4]
 802c394:	6063      	str	r3, [r4, #4]
 802c396:	bf04      	itt	eq
 802c398:	1949      	addeq	r1, r1, r5
 802c39a:	6021      	streq	r1, [r4, #0]
 802c39c:	6054      	str	r4, [r2, #4]
 802c39e:	e7ca      	b.n	802c336 <_free_r+0x26>
 802c3a0:	b003      	add	sp, #12
 802c3a2:	bd30      	pop	{r4, r5, pc}
 802c3a4:	2001e2e0 	.word	0x2001e2e0

0802c3a8 <sbrk_aligned>:
 802c3a8:	b570      	push	{r4, r5, r6, lr}
 802c3aa:	4e0e      	ldr	r6, [pc, #56]	; (802c3e4 <sbrk_aligned+0x3c>)
 802c3ac:	460c      	mov	r4, r1
 802c3ae:	6831      	ldr	r1, [r6, #0]
 802c3b0:	4605      	mov	r5, r0
 802c3b2:	b911      	cbnz	r1, 802c3ba <sbrk_aligned+0x12>
 802c3b4:	f000 feba 	bl	802d12c <_sbrk_r>
 802c3b8:	6030      	str	r0, [r6, #0]
 802c3ba:	4621      	mov	r1, r4
 802c3bc:	4628      	mov	r0, r5
 802c3be:	f000 feb5 	bl	802d12c <_sbrk_r>
 802c3c2:	1c43      	adds	r3, r0, #1
 802c3c4:	d00a      	beq.n	802c3dc <sbrk_aligned+0x34>
 802c3c6:	1cc4      	adds	r4, r0, #3
 802c3c8:	f024 0403 	bic.w	r4, r4, #3
 802c3cc:	42a0      	cmp	r0, r4
 802c3ce:	d007      	beq.n	802c3e0 <sbrk_aligned+0x38>
 802c3d0:	1a21      	subs	r1, r4, r0
 802c3d2:	4628      	mov	r0, r5
 802c3d4:	f000 feaa 	bl	802d12c <_sbrk_r>
 802c3d8:	3001      	adds	r0, #1
 802c3da:	d101      	bne.n	802c3e0 <sbrk_aligned+0x38>
 802c3dc:	f04f 34ff 	mov.w	r4, #4294967295
 802c3e0:	4620      	mov	r0, r4
 802c3e2:	bd70      	pop	{r4, r5, r6, pc}
 802c3e4:	2001e2e4 	.word	0x2001e2e4

0802c3e8 <_malloc_r>:
 802c3e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c3ec:	1ccd      	adds	r5, r1, #3
 802c3ee:	f025 0503 	bic.w	r5, r5, #3
 802c3f2:	3508      	adds	r5, #8
 802c3f4:	2d0c      	cmp	r5, #12
 802c3f6:	bf38      	it	cc
 802c3f8:	250c      	movcc	r5, #12
 802c3fa:	2d00      	cmp	r5, #0
 802c3fc:	4607      	mov	r7, r0
 802c3fe:	db01      	blt.n	802c404 <_malloc_r+0x1c>
 802c400:	42a9      	cmp	r1, r5
 802c402:	d905      	bls.n	802c410 <_malloc_r+0x28>
 802c404:	230c      	movs	r3, #12
 802c406:	603b      	str	r3, [r7, #0]
 802c408:	2600      	movs	r6, #0
 802c40a:	4630      	mov	r0, r6
 802c40c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c410:	4e2e      	ldr	r6, [pc, #184]	; (802c4cc <_malloc_r+0xe4>)
 802c412:	f002 f821 	bl	802e458 <__malloc_lock>
 802c416:	6833      	ldr	r3, [r6, #0]
 802c418:	461c      	mov	r4, r3
 802c41a:	bb34      	cbnz	r4, 802c46a <_malloc_r+0x82>
 802c41c:	4629      	mov	r1, r5
 802c41e:	4638      	mov	r0, r7
 802c420:	f7ff ffc2 	bl	802c3a8 <sbrk_aligned>
 802c424:	1c43      	adds	r3, r0, #1
 802c426:	4604      	mov	r4, r0
 802c428:	d14d      	bne.n	802c4c6 <_malloc_r+0xde>
 802c42a:	6834      	ldr	r4, [r6, #0]
 802c42c:	4626      	mov	r6, r4
 802c42e:	2e00      	cmp	r6, #0
 802c430:	d140      	bne.n	802c4b4 <_malloc_r+0xcc>
 802c432:	6823      	ldr	r3, [r4, #0]
 802c434:	4631      	mov	r1, r6
 802c436:	4638      	mov	r0, r7
 802c438:	eb04 0803 	add.w	r8, r4, r3
 802c43c:	f000 fe76 	bl	802d12c <_sbrk_r>
 802c440:	4580      	cmp	r8, r0
 802c442:	d13a      	bne.n	802c4ba <_malloc_r+0xd2>
 802c444:	6821      	ldr	r1, [r4, #0]
 802c446:	3503      	adds	r5, #3
 802c448:	1a6d      	subs	r5, r5, r1
 802c44a:	f025 0503 	bic.w	r5, r5, #3
 802c44e:	3508      	adds	r5, #8
 802c450:	2d0c      	cmp	r5, #12
 802c452:	bf38      	it	cc
 802c454:	250c      	movcc	r5, #12
 802c456:	4629      	mov	r1, r5
 802c458:	4638      	mov	r0, r7
 802c45a:	f7ff ffa5 	bl	802c3a8 <sbrk_aligned>
 802c45e:	3001      	adds	r0, #1
 802c460:	d02b      	beq.n	802c4ba <_malloc_r+0xd2>
 802c462:	6823      	ldr	r3, [r4, #0]
 802c464:	442b      	add	r3, r5
 802c466:	6023      	str	r3, [r4, #0]
 802c468:	e00e      	b.n	802c488 <_malloc_r+0xa0>
 802c46a:	6822      	ldr	r2, [r4, #0]
 802c46c:	1b52      	subs	r2, r2, r5
 802c46e:	d41e      	bmi.n	802c4ae <_malloc_r+0xc6>
 802c470:	2a0b      	cmp	r2, #11
 802c472:	d916      	bls.n	802c4a2 <_malloc_r+0xba>
 802c474:	1961      	adds	r1, r4, r5
 802c476:	42a3      	cmp	r3, r4
 802c478:	6025      	str	r5, [r4, #0]
 802c47a:	bf18      	it	ne
 802c47c:	6059      	strne	r1, [r3, #4]
 802c47e:	6863      	ldr	r3, [r4, #4]
 802c480:	bf08      	it	eq
 802c482:	6031      	streq	r1, [r6, #0]
 802c484:	5162      	str	r2, [r4, r5]
 802c486:	604b      	str	r3, [r1, #4]
 802c488:	4638      	mov	r0, r7
 802c48a:	f104 060b 	add.w	r6, r4, #11
 802c48e:	f001 ffe9 	bl	802e464 <__malloc_unlock>
 802c492:	f026 0607 	bic.w	r6, r6, #7
 802c496:	1d23      	adds	r3, r4, #4
 802c498:	1af2      	subs	r2, r6, r3
 802c49a:	d0b6      	beq.n	802c40a <_malloc_r+0x22>
 802c49c:	1b9b      	subs	r3, r3, r6
 802c49e:	50a3      	str	r3, [r4, r2]
 802c4a0:	e7b3      	b.n	802c40a <_malloc_r+0x22>
 802c4a2:	6862      	ldr	r2, [r4, #4]
 802c4a4:	42a3      	cmp	r3, r4
 802c4a6:	bf0c      	ite	eq
 802c4a8:	6032      	streq	r2, [r6, #0]
 802c4aa:	605a      	strne	r2, [r3, #4]
 802c4ac:	e7ec      	b.n	802c488 <_malloc_r+0xa0>
 802c4ae:	4623      	mov	r3, r4
 802c4b0:	6864      	ldr	r4, [r4, #4]
 802c4b2:	e7b2      	b.n	802c41a <_malloc_r+0x32>
 802c4b4:	4634      	mov	r4, r6
 802c4b6:	6876      	ldr	r6, [r6, #4]
 802c4b8:	e7b9      	b.n	802c42e <_malloc_r+0x46>
 802c4ba:	230c      	movs	r3, #12
 802c4bc:	603b      	str	r3, [r7, #0]
 802c4be:	4638      	mov	r0, r7
 802c4c0:	f001 ffd0 	bl	802e464 <__malloc_unlock>
 802c4c4:	e7a1      	b.n	802c40a <_malloc_r+0x22>
 802c4c6:	6025      	str	r5, [r4, #0]
 802c4c8:	e7de      	b.n	802c488 <_malloc_r+0xa0>
 802c4ca:	bf00      	nop
 802c4cc:	2001e2e0 	.word	0x2001e2e0

0802c4d0 <__sfputc_r>:
 802c4d0:	6893      	ldr	r3, [r2, #8]
 802c4d2:	3b01      	subs	r3, #1
 802c4d4:	2b00      	cmp	r3, #0
 802c4d6:	b410      	push	{r4}
 802c4d8:	6093      	str	r3, [r2, #8]
 802c4da:	da08      	bge.n	802c4ee <__sfputc_r+0x1e>
 802c4dc:	6994      	ldr	r4, [r2, #24]
 802c4de:	42a3      	cmp	r3, r4
 802c4e0:	db01      	blt.n	802c4e6 <__sfputc_r+0x16>
 802c4e2:	290a      	cmp	r1, #10
 802c4e4:	d103      	bne.n	802c4ee <__sfputc_r+0x1e>
 802c4e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c4ea:	f000 beb7 	b.w	802d25c <__swbuf_r>
 802c4ee:	6813      	ldr	r3, [r2, #0]
 802c4f0:	1c58      	adds	r0, r3, #1
 802c4f2:	6010      	str	r0, [r2, #0]
 802c4f4:	7019      	strb	r1, [r3, #0]
 802c4f6:	4608      	mov	r0, r1
 802c4f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c4fc:	4770      	bx	lr

0802c4fe <__sfputs_r>:
 802c4fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c500:	4606      	mov	r6, r0
 802c502:	460f      	mov	r7, r1
 802c504:	4614      	mov	r4, r2
 802c506:	18d5      	adds	r5, r2, r3
 802c508:	42ac      	cmp	r4, r5
 802c50a:	d101      	bne.n	802c510 <__sfputs_r+0x12>
 802c50c:	2000      	movs	r0, #0
 802c50e:	e007      	b.n	802c520 <__sfputs_r+0x22>
 802c510:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c514:	463a      	mov	r2, r7
 802c516:	4630      	mov	r0, r6
 802c518:	f7ff ffda 	bl	802c4d0 <__sfputc_r>
 802c51c:	1c43      	adds	r3, r0, #1
 802c51e:	d1f3      	bne.n	802c508 <__sfputs_r+0xa>
 802c520:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802c524 <_vfiprintf_r>:
 802c524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c528:	460d      	mov	r5, r1
 802c52a:	b09d      	sub	sp, #116	; 0x74
 802c52c:	4614      	mov	r4, r2
 802c52e:	4698      	mov	r8, r3
 802c530:	4606      	mov	r6, r0
 802c532:	b118      	cbz	r0, 802c53c <_vfiprintf_r+0x18>
 802c534:	6983      	ldr	r3, [r0, #24]
 802c536:	b90b      	cbnz	r3, 802c53c <_vfiprintf_r+0x18>
 802c538:	f7ff fdec 	bl	802c114 <__sinit>
 802c53c:	4b89      	ldr	r3, [pc, #548]	; (802c764 <_vfiprintf_r+0x240>)
 802c53e:	429d      	cmp	r5, r3
 802c540:	d11b      	bne.n	802c57a <_vfiprintf_r+0x56>
 802c542:	6875      	ldr	r5, [r6, #4]
 802c544:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c546:	07d9      	lsls	r1, r3, #31
 802c548:	d405      	bmi.n	802c556 <_vfiprintf_r+0x32>
 802c54a:	89ab      	ldrh	r3, [r5, #12]
 802c54c:	059a      	lsls	r2, r3, #22
 802c54e:	d402      	bmi.n	802c556 <_vfiprintf_r+0x32>
 802c550:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c552:	f7ff feb4 	bl	802c2be <__retarget_lock_acquire_recursive>
 802c556:	89ab      	ldrh	r3, [r5, #12]
 802c558:	071b      	lsls	r3, r3, #28
 802c55a:	d501      	bpl.n	802c560 <_vfiprintf_r+0x3c>
 802c55c:	692b      	ldr	r3, [r5, #16]
 802c55e:	b9eb      	cbnz	r3, 802c59c <_vfiprintf_r+0x78>
 802c560:	4629      	mov	r1, r5
 802c562:	4630      	mov	r0, r6
 802c564:	f000 fede 	bl	802d324 <__swsetup_r>
 802c568:	b1c0      	cbz	r0, 802c59c <_vfiprintf_r+0x78>
 802c56a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c56c:	07dc      	lsls	r4, r3, #31
 802c56e:	d50e      	bpl.n	802c58e <_vfiprintf_r+0x6a>
 802c570:	f04f 30ff 	mov.w	r0, #4294967295
 802c574:	b01d      	add	sp, #116	; 0x74
 802c576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c57a:	4b7b      	ldr	r3, [pc, #492]	; (802c768 <_vfiprintf_r+0x244>)
 802c57c:	429d      	cmp	r5, r3
 802c57e:	d101      	bne.n	802c584 <_vfiprintf_r+0x60>
 802c580:	68b5      	ldr	r5, [r6, #8]
 802c582:	e7df      	b.n	802c544 <_vfiprintf_r+0x20>
 802c584:	4b79      	ldr	r3, [pc, #484]	; (802c76c <_vfiprintf_r+0x248>)
 802c586:	429d      	cmp	r5, r3
 802c588:	bf08      	it	eq
 802c58a:	68f5      	ldreq	r5, [r6, #12]
 802c58c:	e7da      	b.n	802c544 <_vfiprintf_r+0x20>
 802c58e:	89ab      	ldrh	r3, [r5, #12]
 802c590:	0598      	lsls	r0, r3, #22
 802c592:	d4ed      	bmi.n	802c570 <_vfiprintf_r+0x4c>
 802c594:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c596:	f7ff fe94 	bl	802c2c2 <__retarget_lock_release_recursive>
 802c59a:	e7e9      	b.n	802c570 <_vfiprintf_r+0x4c>
 802c59c:	2300      	movs	r3, #0
 802c59e:	9309      	str	r3, [sp, #36]	; 0x24
 802c5a0:	2320      	movs	r3, #32
 802c5a2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802c5a6:	f8cd 800c 	str.w	r8, [sp, #12]
 802c5aa:	2330      	movs	r3, #48	; 0x30
 802c5ac:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 802c770 <_vfiprintf_r+0x24c>
 802c5b0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802c5b4:	f04f 0901 	mov.w	r9, #1
 802c5b8:	4623      	mov	r3, r4
 802c5ba:	469a      	mov	sl, r3
 802c5bc:	f813 2b01 	ldrb.w	r2, [r3], #1
 802c5c0:	b10a      	cbz	r2, 802c5c6 <_vfiprintf_r+0xa2>
 802c5c2:	2a25      	cmp	r2, #37	; 0x25
 802c5c4:	d1f9      	bne.n	802c5ba <_vfiprintf_r+0x96>
 802c5c6:	ebba 0b04 	subs.w	fp, sl, r4
 802c5ca:	d00b      	beq.n	802c5e4 <_vfiprintf_r+0xc0>
 802c5cc:	465b      	mov	r3, fp
 802c5ce:	4622      	mov	r2, r4
 802c5d0:	4629      	mov	r1, r5
 802c5d2:	4630      	mov	r0, r6
 802c5d4:	f7ff ff93 	bl	802c4fe <__sfputs_r>
 802c5d8:	3001      	adds	r0, #1
 802c5da:	f000 80aa 	beq.w	802c732 <_vfiprintf_r+0x20e>
 802c5de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802c5e0:	445a      	add	r2, fp
 802c5e2:	9209      	str	r2, [sp, #36]	; 0x24
 802c5e4:	f89a 3000 	ldrb.w	r3, [sl]
 802c5e8:	2b00      	cmp	r3, #0
 802c5ea:	f000 80a2 	beq.w	802c732 <_vfiprintf_r+0x20e>
 802c5ee:	2300      	movs	r3, #0
 802c5f0:	f04f 32ff 	mov.w	r2, #4294967295
 802c5f4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802c5f8:	f10a 0a01 	add.w	sl, sl, #1
 802c5fc:	9304      	str	r3, [sp, #16]
 802c5fe:	9307      	str	r3, [sp, #28]
 802c600:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802c604:	931a      	str	r3, [sp, #104]	; 0x68
 802c606:	4654      	mov	r4, sl
 802c608:	2205      	movs	r2, #5
 802c60a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c60e:	4858      	ldr	r0, [pc, #352]	; (802c770 <_vfiprintf_r+0x24c>)
 802c610:	f7d3 fe56 	bl	80002c0 <memchr>
 802c614:	9a04      	ldr	r2, [sp, #16]
 802c616:	b9d8      	cbnz	r0, 802c650 <_vfiprintf_r+0x12c>
 802c618:	06d1      	lsls	r1, r2, #27
 802c61a:	bf44      	itt	mi
 802c61c:	2320      	movmi	r3, #32
 802c61e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c622:	0713      	lsls	r3, r2, #28
 802c624:	bf44      	itt	mi
 802c626:	232b      	movmi	r3, #43	; 0x2b
 802c628:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c62c:	f89a 3000 	ldrb.w	r3, [sl]
 802c630:	2b2a      	cmp	r3, #42	; 0x2a
 802c632:	d015      	beq.n	802c660 <_vfiprintf_r+0x13c>
 802c634:	9a07      	ldr	r2, [sp, #28]
 802c636:	4654      	mov	r4, sl
 802c638:	2000      	movs	r0, #0
 802c63a:	f04f 0c0a 	mov.w	ip, #10
 802c63e:	4621      	mov	r1, r4
 802c640:	f811 3b01 	ldrb.w	r3, [r1], #1
 802c644:	3b30      	subs	r3, #48	; 0x30
 802c646:	2b09      	cmp	r3, #9
 802c648:	d94e      	bls.n	802c6e8 <_vfiprintf_r+0x1c4>
 802c64a:	b1b0      	cbz	r0, 802c67a <_vfiprintf_r+0x156>
 802c64c:	9207      	str	r2, [sp, #28]
 802c64e:	e014      	b.n	802c67a <_vfiprintf_r+0x156>
 802c650:	eba0 0308 	sub.w	r3, r0, r8
 802c654:	fa09 f303 	lsl.w	r3, r9, r3
 802c658:	4313      	orrs	r3, r2
 802c65a:	9304      	str	r3, [sp, #16]
 802c65c:	46a2      	mov	sl, r4
 802c65e:	e7d2      	b.n	802c606 <_vfiprintf_r+0xe2>
 802c660:	9b03      	ldr	r3, [sp, #12]
 802c662:	1d19      	adds	r1, r3, #4
 802c664:	681b      	ldr	r3, [r3, #0]
 802c666:	9103      	str	r1, [sp, #12]
 802c668:	2b00      	cmp	r3, #0
 802c66a:	bfbb      	ittet	lt
 802c66c:	425b      	neglt	r3, r3
 802c66e:	f042 0202 	orrlt.w	r2, r2, #2
 802c672:	9307      	strge	r3, [sp, #28]
 802c674:	9307      	strlt	r3, [sp, #28]
 802c676:	bfb8      	it	lt
 802c678:	9204      	strlt	r2, [sp, #16]
 802c67a:	7823      	ldrb	r3, [r4, #0]
 802c67c:	2b2e      	cmp	r3, #46	; 0x2e
 802c67e:	d10c      	bne.n	802c69a <_vfiprintf_r+0x176>
 802c680:	7863      	ldrb	r3, [r4, #1]
 802c682:	2b2a      	cmp	r3, #42	; 0x2a
 802c684:	d135      	bne.n	802c6f2 <_vfiprintf_r+0x1ce>
 802c686:	9b03      	ldr	r3, [sp, #12]
 802c688:	1d1a      	adds	r2, r3, #4
 802c68a:	681b      	ldr	r3, [r3, #0]
 802c68c:	9203      	str	r2, [sp, #12]
 802c68e:	2b00      	cmp	r3, #0
 802c690:	bfb8      	it	lt
 802c692:	f04f 33ff 	movlt.w	r3, #4294967295
 802c696:	3402      	adds	r4, #2
 802c698:	9305      	str	r3, [sp, #20]
 802c69a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 802c780 <_vfiprintf_r+0x25c>
 802c69e:	7821      	ldrb	r1, [r4, #0]
 802c6a0:	2203      	movs	r2, #3
 802c6a2:	4650      	mov	r0, sl
 802c6a4:	f7d3 fe0c 	bl	80002c0 <memchr>
 802c6a8:	b140      	cbz	r0, 802c6bc <_vfiprintf_r+0x198>
 802c6aa:	2340      	movs	r3, #64	; 0x40
 802c6ac:	eba0 000a 	sub.w	r0, r0, sl
 802c6b0:	fa03 f000 	lsl.w	r0, r3, r0
 802c6b4:	9b04      	ldr	r3, [sp, #16]
 802c6b6:	4303      	orrs	r3, r0
 802c6b8:	3401      	adds	r4, #1
 802c6ba:	9304      	str	r3, [sp, #16]
 802c6bc:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c6c0:	482c      	ldr	r0, [pc, #176]	; (802c774 <_vfiprintf_r+0x250>)
 802c6c2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802c6c6:	2206      	movs	r2, #6
 802c6c8:	f7d3 fdfa 	bl	80002c0 <memchr>
 802c6cc:	2800      	cmp	r0, #0
 802c6ce:	d03f      	beq.n	802c750 <_vfiprintf_r+0x22c>
 802c6d0:	4b29      	ldr	r3, [pc, #164]	; (802c778 <_vfiprintf_r+0x254>)
 802c6d2:	bb1b      	cbnz	r3, 802c71c <_vfiprintf_r+0x1f8>
 802c6d4:	9b03      	ldr	r3, [sp, #12]
 802c6d6:	3307      	adds	r3, #7
 802c6d8:	f023 0307 	bic.w	r3, r3, #7
 802c6dc:	3308      	adds	r3, #8
 802c6de:	9303      	str	r3, [sp, #12]
 802c6e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802c6e2:	443b      	add	r3, r7
 802c6e4:	9309      	str	r3, [sp, #36]	; 0x24
 802c6e6:	e767      	b.n	802c5b8 <_vfiprintf_r+0x94>
 802c6e8:	fb0c 3202 	mla	r2, ip, r2, r3
 802c6ec:	460c      	mov	r4, r1
 802c6ee:	2001      	movs	r0, #1
 802c6f0:	e7a5      	b.n	802c63e <_vfiprintf_r+0x11a>
 802c6f2:	2300      	movs	r3, #0
 802c6f4:	3401      	adds	r4, #1
 802c6f6:	9305      	str	r3, [sp, #20]
 802c6f8:	4619      	mov	r1, r3
 802c6fa:	f04f 0c0a 	mov.w	ip, #10
 802c6fe:	4620      	mov	r0, r4
 802c700:	f810 2b01 	ldrb.w	r2, [r0], #1
 802c704:	3a30      	subs	r2, #48	; 0x30
 802c706:	2a09      	cmp	r2, #9
 802c708:	d903      	bls.n	802c712 <_vfiprintf_r+0x1ee>
 802c70a:	2b00      	cmp	r3, #0
 802c70c:	d0c5      	beq.n	802c69a <_vfiprintf_r+0x176>
 802c70e:	9105      	str	r1, [sp, #20]
 802c710:	e7c3      	b.n	802c69a <_vfiprintf_r+0x176>
 802c712:	fb0c 2101 	mla	r1, ip, r1, r2
 802c716:	4604      	mov	r4, r0
 802c718:	2301      	movs	r3, #1
 802c71a:	e7f0      	b.n	802c6fe <_vfiprintf_r+0x1da>
 802c71c:	ab03      	add	r3, sp, #12
 802c71e:	9300      	str	r3, [sp, #0]
 802c720:	462a      	mov	r2, r5
 802c722:	4b16      	ldr	r3, [pc, #88]	; (802c77c <_vfiprintf_r+0x258>)
 802c724:	a904      	add	r1, sp, #16
 802c726:	4630      	mov	r0, r6
 802c728:	f000 f8cc 	bl	802c8c4 <_printf_float>
 802c72c:	4607      	mov	r7, r0
 802c72e:	1c78      	adds	r0, r7, #1
 802c730:	d1d6      	bne.n	802c6e0 <_vfiprintf_r+0x1bc>
 802c732:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c734:	07d9      	lsls	r1, r3, #31
 802c736:	d405      	bmi.n	802c744 <_vfiprintf_r+0x220>
 802c738:	89ab      	ldrh	r3, [r5, #12]
 802c73a:	059a      	lsls	r2, r3, #22
 802c73c:	d402      	bmi.n	802c744 <_vfiprintf_r+0x220>
 802c73e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c740:	f7ff fdbf 	bl	802c2c2 <__retarget_lock_release_recursive>
 802c744:	89ab      	ldrh	r3, [r5, #12]
 802c746:	065b      	lsls	r3, r3, #25
 802c748:	f53f af12 	bmi.w	802c570 <_vfiprintf_r+0x4c>
 802c74c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c74e:	e711      	b.n	802c574 <_vfiprintf_r+0x50>
 802c750:	ab03      	add	r3, sp, #12
 802c752:	9300      	str	r3, [sp, #0]
 802c754:	462a      	mov	r2, r5
 802c756:	4b09      	ldr	r3, [pc, #36]	; (802c77c <_vfiprintf_r+0x258>)
 802c758:	a904      	add	r1, sp, #16
 802c75a:	4630      	mov	r0, r6
 802c75c:	f000 fb56 	bl	802ce0c <_printf_i>
 802c760:	e7e4      	b.n	802c72c <_vfiprintf_r+0x208>
 802c762:	bf00      	nop
 802c764:	08049aec 	.word	0x08049aec
 802c768:	08049b0c 	.word	0x08049b0c
 802c76c:	08049acc 	.word	0x08049acc
 802c770:	08049b30 	.word	0x08049b30
 802c774:	08049b3a 	.word	0x08049b3a
 802c778:	0802c8c5 	.word	0x0802c8c5
 802c77c:	0802c4ff 	.word	0x0802c4ff
 802c780:	08049b36 	.word	0x08049b36

0802c784 <__cvt>:
 802c784:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802c788:	ec55 4b10 	vmov	r4, r5, d0
 802c78c:	2d00      	cmp	r5, #0
 802c78e:	460e      	mov	r6, r1
 802c790:	4619      	mov	r1, r3
 802c792:	462b      	mov	r3, r5
 802c794:	bfbb      	ittet	lt
 802c796:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 802c79a:	461d      	movlt	r5, r3
 802c79c:	2300      	movge	r3, #0
 802c79e:	232d      	movlt	r3, #45	; 0x2d
 802c7a0:	700b      	strb	r3, [r1, #0]
 802c7a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802c7a4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 802c7a8:	4691      	mov	r9, r2
 802c7aa:	f023 0820 	bic.w	r8, r3, #32
 802c7ae:	bfbc      	itt	lt
 802c7b0:	4622      	movlt	r2, r4
 802c7b2:	4614      	movlt	r4, r2
 802c7b4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 802c7b8:	d005      	beq.n	802c7c6 <__cvt+0x42>
 802c7ba:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 802c7be:	d100      	bne.n	802c7c2 <__cvt+0x3e>
 802c7c0:	3601      	adds	r6, #1
 802c7c2:	2102      	movs	r1, #2
 802c7c4:	e000      	b.n	802c7c8 <__cvt+0x44>
 802c7c6:	2103      	movs	r1, #3
 802c7c8:	ab03      	add	r3, sp, #12
 802c7ca:	9301      	str	r3, [sp, #4]
 802c7cc:	ab02      	add	r3, sp, #8
 802c7ce:	9300      	str	r3, [sp, #0]
 802c7d0:	ec45 4b10 	vmov	d0, r4, r5
 802c7d4:	4653      	mov	r3, sl
 802c7d6:	4632      	mov	r2, r6
 802c7d8:	f000 ff12 	bl	802d600 <_dtoa_r>
 802c7dc:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 802c7e0:	4607      	mov	r7, r0
 802c7e2:	d102      	bne.n	802c7ea <__cvt+0x66>
 802c7e4:	f019 0f01 	tst.w	r9, #1
 802c7e8:	d022      	beq.n	802c830 <__cvt+0xac>
 802c7ea:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 802c7ee:	eb07 0906 	add.w	r9, r7, r6
 802c7f2:	d110      	bne.n	802c816 <__cvt+0x92>
 802c7f4:	783b      	ldrb	r3, [r7, #0]
 802c7f6:	2b30      	cmp	r3, #48	; 0x30
 802c7f8:	d10a      	bne.n	802c810 <__cvt+0x8c>
 802c7fa:	2200      	movs	r2, #0
 802c7fc:	2300      	movs	r3, #0
 802c7fe:	4620      	mov	r0, r4
 802c800:	4629      	mov	r1, r5
 802c802:	f7d4 f9d1 	bl	8000ba8 <__aeabi_dcmpeq>
 802c806:	b918      	cbnz	r0, 802c810 <__cvt+0x8c>
 802c808:	f1c6 0601 	rsb	r6, r6, #1
 802c80c:	f8ca 6000 	str.w	r6, [sl]
 802c810:	f8da 3000 	ldr.w	r3, [sl]
 802c814:	4499      	add	r9, r3
 802c816:	2200      	movs	r2, #0
 802c818:	2300      	movs	r3, #0
 802c81a:	4620      	mov	r0, r4
 802c81c:	4629      	mov	r1, r5
 802c81e:	f7d4 f9c3 	bl	8000ba8 <__aeabi_dcmpeq>
 802c822:	b108      	cbz	r0, 802c828 <__cvt+0xa4>
 802c824:	f8cd 900c 	str.w	r9, [sp, #12]
 802c828:	2230      	movs	r2, #48	; 0x30
 802c82a:	9b03      	ldr	r3, [sp, #12]
 802c82c:	454b      	cmp	r3, r9
 802c82e:	d307      	bcc.n	802c840 <__cvt+0xbc>
 802c830:	9b03      	ldr	r3, [sp, #12]
 802c832:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802c834:	1bdb      	subs	r3, r3, r7
 802c836:	4638      	mov	r0, r7
 802c838:	6013      	str	r3, [r2, #0]
 802c83a:	b004      	add	sp, #16
 802c83c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c840:	1c59      	adds	r1, r3, #1
 802c842:	9103      	str	r1, [sp, #12]
 802c844:	701a      	strb	r2, [r3, #0]
 802c846:	e7f0      	b.n	802c82a <__cvt+0xa6>

0802c848 <__exponent>:
 802c848:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802c84a:	4603      	mov	r3, r0
 802c84c:	2900      	cmp	r1, #0
 802c84e:	bfb8      	it	lt
 802c850:	4249      	neglt	r1, r1
 802c852:	f803 2b02 	strb.w	r2, [r3], #2
 802c856:	bfb4      	ite	lt
 802c858:	222d      	movlt	r2, #45	; 0x2d
 802c85a:	222b      	movge	r2, #43	; 0x2b
 802c85c:	2909      	cmp	r1, #9
 802c85e:	7042      	strb	r2, [r0, #1]
 802c860:	dd2a      	ble.n	802c8b8 <__exponent+0x70>
 802c862:	f10d 0407 	add.w	r4, sp, #7
 802c866:	46a4      	mov	ip, r4
 802c868:	270a      	movs	r7, #10
 802c86a:	46a6      	mov	lr, r4
 802c86c:	460a      	mov	r2, r1
 802c86e:	fb91 f6f7 	sdiv	r6, r1, r7
 802c872:	fb07 1516 	mls	r5, r7, r6, r1
 802c876:	3530      	adds	r5, #48	; 0x30
 802c878:	2a63      	cmp	r2, #99	; 0x63
 802c87a:	f104 34ff 	add.w	r4, r4, #4294967295
 802c87e:	f80e 5c01 	strb.w	r5, [lr, #-1]
 802c882:	4631      	mov	r1, r6
 802c884:	dcf1      	bgt.n	802c86a <__exponent+0x22>
 802c886:	3130      	adds	r1, #48	; 0x30
 802c888:	f1ae 0502 	sub.w	r5, lr, #2
 802c88c:	f804 1c01 	strb.w	r1, [r4, #-1]
 802c890:	1c44      	adds	r4, r0, #1
 802c892:	4629      	mov	r1, r5
 802c894:	4561      	cmp	r1, ip
 802c896:	d30a      	bcc.n	802c8ae <__exponent+0x66>
 802c898:	f10d 0209 	add.w	r2, sp, #9
 802c89c:	eba2 020e 	sub.w	r2, r2, lr
 802c8a0:	4565      	cmp	r5, ip
 802c8a2:	bf88      	it	hi
 802c8a4:	2200      	movhi	r2, #0
 802c8a6:	4413      	add	r3, r2
 802c8a8:	1a18      	subs	r0, r3, r0
 802c8aa:	b003      	add	sp, #12
 802c8ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c8ae:	f811 2b01 	ldrb.w	r2, [r1], #1
 802c8b2:	f804 2f01 	strb.w	r2, [r4, #1]!
 802c8b6:	e7ed      	b.n	802c894 <__exponent+0x4c>
 802c8b8:	2330      	movs	r3, #48	; 0x30
 802c8ba:	3130      	adds	r1, #48	; 0x30
 802c8bc:	7083      	strb	r3, [r0, #2]
 802c8be:	70c1      	strb	r1, [r0, #3]
 802c8c0:	1d03      	adds	r3, r0, #4
 802c8c2:	e7f1      	b.n	802c8a8 <__exponent+0x60>

0802c8c4 <_printf_float>:
 802c8c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c8c8:	ed2d 8b02 	vpush	{d8}
 802c8cc:	b08d      	sub	sp, #52	; 0x34
 802c8ce:	460c      	mov	r4, r1
 802c8d0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 802c8d4:	4616      	mov	r6, r2
 802c8d6:	461f      	mov	r7, r3
 802c8d8:	4605      	mov	r5, r0
 802c8da:	f001 fd41 	bl	802e360 <_localeconv_r>
 802c8de:	f8d0 a000 	ldr.w	sl, [r0]
 802c8e2:	4650      	mov	r0, sl
 802c8e4:	f7d3 fce4 	bl	80002b0 <strlen>
 802c8e8:	2300      	movs	r3, #0
 802c8ea:	930a      	str	r3, [sp, #40]	; 0x28
 802c8ec:	6823      	ldr	r3, [r4, #0]
 802c8ee:	9305      	str	r3, [sp, #20]
 802c8f0:	f8d8 3000 	ldr.w	r3, [r8]
 802c8f4:	f894 b018 	ldrb.w	fp, [r4, #24]
 802c8f8:	3307      	adds	r3, #7
 802c8fa:	f023 0307 	bic.w	r3, r3, #7
 802c8fe:	f103 0208 	add.w	r2, r3, #8
 802c902:	f8c8 2000 	str.w	r2, [r8]
 802c906:	e9d3 2300 	ldrd	r2, r3, [r3]
 802c90a:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 802c90e:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 802c912:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 802c916:	9307      	str	r3, [sp, #28]
 802c918:	f8cd 8018 	str.w	r8, [sp, #24]
 802c91c:	ee08 0a10 	vmov	s16, r0
 802c920:	4b9f      	ldr	r3, [pc, #636]	; (802cba0 <_printf_float+0x2dc>)
 802c922:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802c926:	f04f 32ff 	mov.w	r2, #4294967295
 802c92a:	f7d4 f96f 	bl	8000c0c <__aeabi_dcmpun>
 802c92e:	bb88      	cbnz	r0, 802c994 <_printf_float+0xd0>
 802c930:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802c934:	4b9a      	ldr	r3, [pc, #616]	; (802cba0 <_printf_float+0x2dc>)
 802c936:	f04f 32ff 	mov.w	r2, #4294967295
 802c93a:	f7d4 f949 	bl	8000bd0 <__aeabi_dcmple>
 802c93e:	bb48      	cbnz	r0, 802c994 <_printf_float+0xd0>
 802c940:	2200      	movs	r2, #0
 802c942:	2300      	movs	r3, #0
 802c944:	4640      	mov	r0, r8
 802c946:	4649      	mov	r1, r9
 802c948:	f7d4 f938 	bl	8000bbc <__aeabi_dcmplt>
 802c94c:	b110      	cbz	r0, 802c954 <_printf_float+0x90>
 802c94e:	232d      	movs	r3, #45	; 0x2d
 802c950:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c954:	4b93      	ldr	r3, [pc, #588]	; (802cba4 <_printf_float+0x2e0>)
 802c956:	4894      	ldr	r0, [pc, #592]	; (802cba8 <_printf_float+0x2e4>)
 802c958:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 802c95c:	bf94      	ite	ls
 802c95e:	4698      	movls	r8, r3
 802c960:	4680      	movhi	r8, r0
 802c962:	2303      	movs	r3, #3
 802c964:	6123      	str	r3, [r4, #16]
 802c966:	9b05      	ldr	r3, [sp, #20]
 802c968:	f023 0204 	bic.w	r2, r3, #4
 802c96c:	6022      	str	r2, [r4, #0]
 802c96e:	f04f 0900 	mov.w	r9, #0
 802c972:	9700      	str	r7, [sp, #0]
 802c974:	4633      	mov	r3, r6
 802c976:	aa0b      	add	r2, sp, #44	; 0x2c
 802c978:	4621      	mov	r1, r4
 802c97a:	4628      	mov	r0, r5
 802c97c:	f000 f9d8 	bl	802cd30 <_printf_common>
 802c980:	3001      	adds	r0, #1
 802c982:	f040 8090 	bne.w	802caa6 <_printf_float+0x1e2>
 802c986:	f04f 30ff 	mov.w	r0, #4294967295
 802c98a:	b00d      	add	sp, #52	; 0x34
 802c98c:	ecbd 8b02 	vpop	{d8}
 802c990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c994:	4642      	mov	r2, r8
 802c996:	464b      	mov	r3, r9
 802c998:	4640      	mov	r0, r8
 802c99a:	4649      	mov	r1, r9
 802c99c:	f7d4 f936 	bl	8000c0c <__aeabi_dcmpun>
 802c9a0:	b140      	cbz	r0, 802c9b4 <_printf_float+0xf0>
 802c9a2:	464b      	mov	r3, r9
 802c9a4:	2b00      	cmp	r3, #0
 802c9a6:	bfbc      	itt	lt
 802c9a8:	232d      	movlt	r3, #45	; 0x2d
 802c9aa:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 802c9ae:	487f      	ldr	r0, [pc, #508]	; (802cbac <_printf_float+0x2e8>)
 802c9b0:	4b7f      	ldr	r3, [pc, #508]	; (802cbb0 <_printf_float+0x2ec>)
 802c9b2:	e7d1      	b.n	802c958 <_printf_float+0x94>
 802c9b4:	6863      	ldr	r3, [r4, #4]
 802c9b6:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 802c9ba:	9206      	str	r2, [sp, #24]
 802c9bc:	1c5a      	adds	r2, r3, #1
 802c9be:	d13f      	bne.n	802ca40 <_printf_float+0x17c>
 802c9c0:	2306      	movs	r3, #6
 802c9c2:	6063      	str	r3, [r4, #4]
 802c9c4:	9b05      	ldr	r3, [sp, #20]
 802c9c6:	6861      	ldr	r1, [r4, #4]
 802c9c8:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 802c9cc:	2300      	movs	r3, #0
 802c9ce:	9303      	str	r3, [sp, #12]
 802c9d0:	ab0a      	add	r3, sp, #40	; 0x28
 802c9d2:	e9cd b301 	strd	fp, r3, [sp, #4]
 802c9d6:	ab09      	add	r3, sp, #36	; 0x24
 802c9d8:	ec49 8b10 	vmov	d0, r8, r9
 802c9dc:	9300      	str	r3, [sp, #0]
 802c9de:	6022      	str	r2, [r4, #0]
 802c9e0:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 802c9e4:	4628      	mov	r0, r5
 802c9e6:	f7ff fecd 	bl	802c784 <__cvt>
 802c9ea:	9b06      	ldr	r3, [sp, #24]
 802c9ec:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c9ee:	2b47      	cmp	r3, #71	; 0x47
 802c9f0:	4680      	mov	r8, r0
 802c9f2:	d108      	bne.n	802ca06 <_printf_float+0x142>
 802c9f4:	1cc8      	adds	r0, r1, #3
 802c9f6:	db02      	blt.n	802c9fe <_printf_float+0x13a>
 802c9f8:	6863      	ldr	r3, [r4, #4]
 802c9fa:	4299      	cmp	r1, r3
 802c9fc:	dd41      	ble.n	802ca82 <_printf_float+0x1be>
 802c9fe:	f1ab 0b02 	sub.w	fp, fp, #2
 802ca02:	fa5f fb8b 	uxtb.w	fp, fp
 802ca06:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 802ca0a:	d820      	bhi.n	802ca4e <_printf_float+0x18a>
 802ca0c:	3901      	subs	r1, #1
 802ca0e:	465a      	mov	r2, fp
 802ca10:	f104 0050 	add.w	r0, r4, #80	; 0x50
 802ca14:	9109      	str	r1, [sp, #36]	; 0x24
 802ca16:	f7ff ff17 	bl	802c848 <__exponent>
 802ca1a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802ca1c:	1813      	adds	r3, r2, r0
 802ca1e:	2a01      	cmp	r2, #1
 802ca20:	4681      	mov	r9, r0
 802ca22:	6123      	str	r3, [r4, #16]
 802ca24:	dc02      	bgt.n	802ca2c <_printf_float+0x168>
 802ca26:	6822      	ldr	r2, [r4, #0]
 802ca28:	07d2      	lsls	r2, r2, #31
 802ca2a:	d501      	bpl.n	802ca30 <_printf_float+0x16c>
 802ca2c:	3301      	adds	r3, #1
 802ca2e:	6123      	str	r3, [r4, #16]
 802ca30:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 802ca34:	2b00      	cmp	r3, #0
 802ca36:	d09c      	beq.n	802c972 <_printf_float+0xae>
 802ca38:	232d      	movs	r3, #45	; 0x2d
 802ca3a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802ca3e:	e798      	b.n	802c972 <_printf_float+0xae>
 802ca40:	9a06      	ldr	r2, [sp, #24]
 802ca42:	2a47      	cmp	r2, #71	; 0x47
 802ca44:	d1be      	bne.n	802c9c4 <_printf_float+0x100>
 802ca46:	2b00      	cmp	r3, #0
 802ca48:	d1bc      	bne.n	802c9c4 <_printf_float+0x100>
 802ca4a:	2301      	movs	r3, #1
 802ca4c:	e7b9      	b.n	802c9c2 <_printf_float+0xfe>
 802ca4e:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 802ca52:	d118      	bne.n	802ca86 <_printf_float+0x1c2>
 802ca54:	2900      	cmp	r1, #0
 802ca56:	6863      	ldr	r3, [r4, #4]
 802ca58:	dd0b      	ble.n	802ca72 <_printf_float+0x1ae>
 802ca5a:	6121      	str	r1, [r4, #16]
 802ca5c:	b913      	cbnz	r3, 802ca64 <_printf_float+0x1a0>
 802ca5e:	6822      	ldr	r2, [r4, #0]
 802ca60:	07d0      	lsls	r0, r2, #31
 802ca62:	d502      	bpl.n	802ca6a <_printf_float+0x1a6>
 802ca64:	3301      	adds	r3, #1
 802ca66:	440b      	add	r3, r1
 802ca68:	6123      	str	r3, [r4, #16]
 802ca6a:	65a1      	str	r1, [r4, #88]	; 0x58
 802ca6c:	f04f 0900 	mov.w	r9, #0
 802ca70:	e7de      	b.n	802ca30 <_printf_float+0x16c>
 802ca72:	b913      	cbnz	r3, 802ca7a <_printf_float+0x1b6>
 802ca74:	6822      	ldr	r2, [r4, #0]
 802ca76:	07d2      	lsls	r2, r2, #31
 802ca78:	d501      	bpl.n	802ca7e <_printf_float+0x1ba>
 802ca7a:	3302      	adds	r3, #2
 802ca7c:	e7f4      	b.n	802ca68 <_printf_float+0x1a4>
 802ca7e:	2301      	movs	r3, #1
 802ca80:	e7f2      	b.n	802ca68 <_printf_float+0x1a4>
 802ca82:	f04f 0b67 	mov.w	fp, #103	; 0x67
 802ca86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802ca88:	4299      	cmp	r1, r3
 802ca8a:	db05      	blt.n	802ca98 <_printf_float+0x1d4>
 802ca8c:	6823      	ldr	r3, [r4, #0]
 802ca8e:	6121      	str	r1, [r4, #16]
 802ca90:	07d8      	lsls	r0, r3, #31
 802ca92:	d5ea      	bpl.n	802ca6a <_printf_float+0x1a6>
 802ca94:	1c4b      	adds	r3, r1, #1
 802ca96:	e7e7      	b.n	802ca68 <_printf_float+0x1a4>
 802ca98:	2900      	cmp	r1, #0
 802ca9a:	bfd4      	ite	le
 802ca9c:	f1c1 0202 	rsble	r2, r1, #2
 802caa0:	2201      	movgt	r2, #1
 802caa2:	4413      	add	r3, r2
 802caa4:	e7e0      	b.n	802ca68 <_printf_float+0x1a4>
 802caa6:	6823      	ldr	r3, [r4, #0]
 802caa8:	055a      	lsls	r2, r3, #21
 802caaa:	d407      	bmi.n	802cabc <_printf_float+0x1f8>
 802caac:	6923      	ldr	r3, [r4, #16]
 802caae:	4642      	mov	r2, r8
 802cab0:	4631      	mov	r1, r6
 802cab2:	4628      	mov	r0, r5
 802cab4:	47b8      	blx	r7
 802cab6:	3001      	adds	r0, #1
 802cab8:	d12c      	bne.n	802cb14 <_printf_float+0x250>
 802caba:	e764      	b.n	802c986 <_printf_float+0xc2>
 802cabc:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 802cac0:	f240 80e0 	bls.w	802cc84 <_printf_float+0x3c0>
 802cac4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 802cac8:	2200      	movs	r2, #0
 802caca:	2300      	movs	r3, #0
 802cacc:	f7d4 f86c 	bl	8000ba8 <__aeabi_dcmpeq>
 802cad0:	2800      	cmp	r0, #0
 802cad2:	d034      	beq.n	802cb3e <_printf_float+0x27a>
 802cad4:	4a37      	ldr	r2, [pc, #220]	; (802cbb4 <_printf_float+0x2f0>)
 802cad6:	2301      	movs	r3, #1
 802cad8:	4631      	mov	r1, r6
 802cada:	4628      	mov	r0, r5
 802cadc:	47b8      	blx	r7
 802cade:	3001      	adds	r0, #1
 802cae0:	f43f af51 	beq.w	802c986 <_printf_float+0xc2>
 802cae4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802cae8:	429a      	cmp	r2, r3
 802caea:	db02      	blt.n	802caf2 <_printf_float+0x22e>
 802caec:	6823      	ldr	r3, [r4, #0]
 802caee:	07d8      	lsls	r0, r3, #31
 802caf0:	d510      	bpl.n	802cb14 <_printf_float+0x250>
 802caf2:	ee18 3a10 	vmov	r3, s16
 802caf6:	4652      	mov	r2, sl
 802caf8:	4631      	mov	r1, r6
 802cafa:	4628      	mov	r0, r5
 802cafc:	47b8      	blx	r7
 802cafe:	3001      	adds	r0, #1
 802cb00:	f43f af41 	beq.w	802c986 <_printf_float+0xc2>
 802cb04:	f04f 0800 	mov.w	r8, #0
 802cb08:	f104 091a 	add.w	r9, r4, #26
 802cb0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802cb0e:	3b01      	subs	r3, #1
 802cb10:	4543      	cmp	r3, r8
 802cb12:	dc09      	bgt.n	802cb28 <_printf_float+0x264>
 802cb14:	6823      	ldr	r3, [r4, #0]
 802cb16:	079b      	lsls	r3, r3, #30
 802cb18:	f100 8105 	bmi.w	802cd26 <_printf_float+0x462>
 802cb1c:	68e0      	ldr	r0, [r4, #12]
 802cb1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802cb20:	4298      	cmp	r0, r3
 802cb22:	bfb8      	it	lt
 802cb24:	4618      	movlt	r0, r3
 802cb26:	e730      	b.n	802c98a <_printf_float+0xc6>
 802cb28:	2301      	movs	r3, #1
 802cb2a:	464a      	mov	r2, r9
 802cb2c:	4631      	mov	r1, r6
 802cb2e:	4628      	mov	r0, r5
 802cb30:	47b8      	blx	r7
 802cb32:	3001      	adds	r0, #1
 802cb34:	f43f af27 	beq.w	802c986 <_printf_float+0xc2>
 802cb38:	f108 0801 	add.w	r8, r8, #1
 802cb3c:	e7e6      	b.n	802cb0c <_printf_float+0x248>
 802cb3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802cb40:	2b00      	cmp	r3, #0
 802cb42:	dc39      	bgt.n	802cbb8 <_printf_float+0x2f4>
 802cb44:	4a1b      	ldr	r2, [pc, #108]	; (802cbb4 <_printf_float+0x2f0>)
 802cb46:	2301      	movs	r3, #1
 802cb48:	4631      	mov	r1, r6
 802cb4a:	4628      	mov	r0, r5
 802cb4c:	47b8      	blx	r7
 802cb4e:	3001      	adds	r0, #1
 802cb50:	f43f af19 	beq.w	802c986 <_printf_float+0xc2>
 802cb54:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802cb58:	4313      	orrs	r3, r2
 802cb5a:	d102      	bne.n	802cb62 <_printf_float+0x29e>
 802cb5c:	6823      	ldr	r3, [r4, #0]
 802cb5e:	07d9      	lsls	r1, r3, #31
 802cb60:	d5d8      	bpl.n	802cb14 <_printf_float+0x250>
 802cb62:	ee18 3a10 	vmov	r3, s16
 802cb66:	4652      	mov	r2, sl
 802cb68:	4631      	mov	r1, r6
 802cb6a:	4628      	mov	r0, r5
 802cb6c:	47b8      	blx	r7
 802cb6e:	3001      	adds	r0, #1
 802cb70:	f43f af09 	beq.w	802c986 <_printf_float+0xc2>
 802cb74:	f04f 0900 	mov.w	r9, #0
 802cb78:	f104 0a1a 	add.w	sl, r4, #26
 802cb7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802cb7e:	425b      	negs	r3, r3
 802cb80:	454b      	cmp	r3, r9
 802cb82:	dc01      	bgt.n	802cb88 <_printf_float+0x2c4>
 802cb84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802cb86:	e792      	b.n	802caae <_printf_float+0x1ea>
 802cb88:	2301      	movs	r3, #1
 802cb8a:	4652      	mov	r2, sl
 802cb8c:	4631      	mov	r1, r6
 802cb8e:	4628      	mov	r0, r5
 802cb90:	47b8      	blx	r7
 802cb92:	3001      	adds	r0, #1
 802cb94:	f43f aef7 	beq.w	802c986 <_printf_float+0xc2>
 802cb98:	f109 0901 	add.w	r9, r9, #1
 802cb9c:	e7ee      	b.n	802cb7c <_printf_float+0x2b8>
 802cb9e:	bf00      	nop
 802cba0:	7fefffff 	.word	0x7fefffff
 802cba4:	08049b41 	.word	0x08049b41
 802cba8:	08049b45 	.word	0x08049b45
 802cbac:	08049b4d 	.word	0x08049b4d
 802cbb0:	08049b49 	.word	0x08049b49
 802cbb4:	08034008 	.word	0x08034008
 802cbb8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802cbba:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802cbbc:	429a      	cmp	r2, r3
 802cbbe:	bfa8      	it	ge
 802cbc0:	461a      	movge	r2, r3
 802cbc2:	2a00      	cmp	r2, #0
 802cbc4:	4691      	mov	r9, r2
 802cbc6:	dc37      	bgt.n	802cc38 <_printf_float+0x374>
 802cbc8:	f04f 0b00 	mov.w	fp, #0
 802cbcc:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 802cbd0:	f104 021a 	add.w	r2, r4, #26
 802cbd4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802cbd6:	9305      	str	r3, [sp, #20]
 802cbd8:	eba3 0309 	sub.w	r3, r3, r9
 802cbdc:	455b      	cmp	r3, fp
 802cbde:	dc33      	bgt.n	802cc48 <_printf_float+0x384>
 802cbe0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802cbe4:	429a      	cmp	r2, r3
 802cbe6:	db3b      	blt.n	802cc60 <_printf_float+0x39c>
 802cbe8:	6823      	ldr	r3, [r4, #0]
 802cbea:	07da      	lsls	r2, r3, #31
 802cbec:	d438      	bmi.n	802cc60 <_printf_float+0x39c>
 802cbee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802cbf0:	9a05      	ldr	r2, [sp, #20]
 802cbf2:	9909      	ldr	r1, [sp, #36]	; 0x24
 802cbf4:	1a9a      	subs	r2, r3, r2
 802cbf6:	eba3 0901 	sub.w	r9, r3, r1
 802cbfa:	4591      	cmp	r9, r2
 802cbfc:	bfa8      	it	ge
 802cbfe:	4691      	movge	r9, r2
 802cc00:	f1b9 0f00 	cmp.w	r9, #0
 802cc04:	dc35      	bgt.n	802cc72 <_printf_float+0x3ae>
 802cc06:	f04f 0800 	mov.w	r8, #0
 802cc0a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 802cc0e:	f104 0a1a 	add.w	sl, r4, #26
 802cc12:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802cc16:	1a9b      	subs	r3, r3, r2
 802cc18:	eba3 0309 	sub.w	r3, r3, r9
 802cc1c:	4543      	cmp	r3, r8
 802cc1e:	f77f af79 	ble.w	802cb14 <_printf_float+0x250>
 802cc22:	2301      	movs	r3, #1
 802cc24:	4652      	mov	r2, sl
 802cc26:	4631      	mov	r1, r6
 802cc28:	4628      	mov	r0, r5
 802cc2a:	47b8      	blx	r7
 802cc2c:	3001      	adds	r0, #1
 802cc2e:	f43f aeaa 	beq.w	802c986 <_printf_float+0xc2>
 802cc32:	f108 0801 	add.w	r8, r8, #1
 802cc36:	e7ec      	b.n	802cc12 <_printf_float+0x34e>
 802cc38:	4613      	mov	r3, r2
 802cc3a:	4631      	mov	r1, r6
 802cc3c:	4642      	mov	r2, r8
 802cc3e:	4628      	mov	r0, r5
 802cc40:	47b8      	blx	r7
 802cc42:	3001      	adds	r0, #1
 802cc44:	d1c0      	bne.n	802cbc8 <_printf_float+0x304>
 802cc46:	e69e      	b.n	802c986 <_printf_float+0xc2>
 802cc48:	2301      	movs	r3, #1
 802cc4a:	4631      	mov	r1, r6
 802cc4c:	4628      	mov	r0, r5
 802cc4e:	9205      	str	r2, [sp, #20]
 802cc50:	47b8      	blx	r7
 802cc52:	3001      	adds	r0, #1
 802cc54:	f43f ae97 	beq.w	802c986 <_printf_float+0xc2>
 802cc58:	9a05      	ldr	r2, [sp, #20]
 802cc5a:	f10b 0b01 	add.w	fp, fp, #1
 802cc5e:	e7b9      	b.n	802cbd4 <_printf_float+0x310>
 802cc60:	ee18 3a10 	vmov	r3, s16
 802cc64:	4652      	mov	r2, sl
 802cc66:	4631      	mov	r1, r6
 802cc68:	4628      	mov	r0, r5
 802cc6a:	47b8      	blx	r7
 802cc6c:	3001      	adds	r0, #1
 802cc6e:	d1be      	bne.n	802cbee <_printf_float+0x32a>
 802cc70:	e689      	b.n	802c986 <_printf_float+0xc2>
 802cc72:	9a05      	ldr	r2, [sp, #20]
 802cc74:	464b      	mov	r3, r9
 802cc76:	4442      	add	r2, r8
 802cc78:	4631      	mov	r1, r6
 802cc7a:	4628      	mov	r0, r5
 802cc7c:	47b8      	blx	r7
 802cc7e:	3001      	adds	r0, #1
 802cc80:	d1c1      	bne.n	802cc06 <_printf_float+0x342>
 802cc82:	e680      	b.n	802c986 <_printf_float+0xc2>
 802cc84:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802cc86:	2a01      	cmp	r2, #1
 802cc88:	dc01      	bgt.n	802cc8e <_printf_float+0x3ca>
 802cc8a:	07db      	lsls	r3, r3, #31
 802cc8c:	d538      	bpl.n	802cd00 <_printf_float+0x43c>
 802cc8e:	2301      	movs	r3, #1
 802cc90:	4642      	mov	r2, r8
 802cc92:	4631      	mov	r1, r6
 802cc94:	4628      	mov	r0, r5
 802cc96:	47b8      	blx	r7
 802cc98:	3001      	adds	r0, #1
 802cc9a:	f43f ae74 	beq.w	802c986 <_printf_float+0xc2>
 802cc9e:	ee18 3a10 	vmov	r3, s16
 802cca2:	4652      	mov	r2, sl
 802cca4:	4631      	mov	r1, r6
 802cca6:	4628      	mov	r0, r5
 802cca8:	47b8      	blx	r7
 802ccaa:	3001      	adds	r0, #1
 802ccac:	f43f ae6b 	beq.w	802c986 <_printf_float+0xc2>
 802ccb0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 802ccb4:	2200      	movs	r2, #0
 802ccb6:	2300      	movs	r3, #0
 802ccb8:	f7d3 ff76 	bl	8000ba8 <__aeabi_dcmpeq>
 802ccbc:	b9d8      	cbnz	r0, 802ccf6 <_printf_float+0x432>
 802ccbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802ccc0:	f108 0201 	add.w	r2, r8, #1
 802ccc4:	3b01      	subs	r3, #1
 802ccc6:	4631      	mov	r1, r6
 802ccc8:	4628      	mov	r0, r5
 802ccca:	47b8      	blx	r7
 802cccc:	3001      	adds	r0, #1
 802ccce:	d10e      	bne.n	802ccee <_printf_float+0x42a>
 802ccd0:	e659      	b.n	802c986 <_printf_float+0xc2>
 802ccd2:	2301      	movs	r3, #1
 802ccd4:	4652      	mov	r2, sl
 802ccd6:	4631      	mov	r1, r6
 802ccd8:	4628      	mov	r0, r5
 802ccda:	47b8      	blx	r7
 802ccdc:	3001      	adds	r0, #1
 802ccde:	f43f ae52 	beq.w	802c986 <_printf_float+0xc2>
 802cce2:	f108 0801 	add.w	r8, r8, #1
 802cce6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802cce8:	3b01      	subs	r3, #1
 802ccea:	4543      	cmp	r3, r8
 802ccec:	dcf1      	bgt.n	802ccd2 <_printf_float+0x40e>
 802ccee:	464b      	mov	r3, r9
 802ccf0:	f104 0250 	add.w	r2, r4, #80	; 0x50
 802ccf4:	e6dc      	b.n	802cab0 <_printf_float+0x1ec>
 802ccf6:	f04f 0800 	mov.w	r8, #0
 802ccfa:	f104 0a1a 	add.w	sl, r4, #26
 802ccfe:	e7f2      	b.n	802cce6 <_printf_float+0x422>
 802cd00:	2301      	movs	r3, #1
 802cd02:	4642      	mov	r2, r8
 802cd04:	e7df      	b.n	802ccc6 <_printf_float+0x402>
 802cd06:	2301      	movs	r3, #1
 802cd08:	464a      	mov	r2, r9
 802cd0a:	4631      	mov	r1, r6
 802cd0c:	4628      	mov	r0, r5
 802cd0e:	47b8      	blx	r7
 802cd10:	3001      	adds	r0, #1
 802cd12:	f43f ae38 	beq.w	802c986 <_printf_float+0xc2>
 802cd16:	f108 0801 	add.w	r8, r8, #1
 802cd1a:	68e3      	ldr	r3, [r4, #12]
 802cd1c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802cd1e:	1a5b      	subs	r3, r3, r1
 802cd20:	4543      	cmp	r3, r8
 802cd22:	dcf0      	bgt.n	802cd06 <_printf_float+0x442>
 802cd24:	e6fa      	b.n	802cb1c <_printf_float+0x258>
 802cd26:	f04f 0800 	mov.w	r8, #0
 802cd2a:	f104 0919 	add.w	r9, r4, #25
 802cd2e:	e7f4      	b.n	802cd1a <_printf_float+0x456>

0802cd30 <_printf_common>:
 802cd30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802cd34:	4616      	mov	r6, r2
 802cd36:	4699      	mov	r9, r3
 802cd38:	688a      	ldr	r2, [r1, #8]
 802cd3a:	690b      	ldr	r3, [r1, #16]
 802cd3c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802cd40:	4293      	cmp	r3, r2
 802cd42:	bfb8      	it	lt
 802cd44:	4613      	movlt	r3, r2
 802cd46:	6033      	str	r3, [r6, #0]
 802cd48:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802cd4c:	4607      	mov	r7, r0
 802cd4e:	460c      	mov	r4, r1
 802cd50:	b10a      	cbz	r2, 802cd56 <_printf_common+0x26>
 802cd52:	3301      	adds	r3, #1
 802cd54:	6033      	str	r3, [r6, #0]
 802cd56:	6823      	ldr	r3, [r4, #0]
 802cd58:	0699      	lsls	r1, r3, #26
 802cd5a:	bf42      	ittt	mi
 802cd5c:	6833      	ldrmi	r3, [r6, #0]
 802cd5e:	3302      	addmi	r3, #2
 802cd60:	6033      	strmi	r3, [r6, #0]
 802cd62:	6825      	ldr	r5, [r4, #0]
 802cd64:	f015 0506 	ands.w	r5, r5, #6
 802cd68:	d106      	bne.n	802cd78 <_printf_common+0x48>
 802cd6a:	f104 0a19 	add.w	sl, r4, #25
 802cd6e:	68e3      	ldr	r3, [r4, #12]
 802cd70:	6832      	ldr	r2, [r6, #0]
 802cd72:	1a9b      	subs	r3, r3, r2
 802cd74:	42ab      	cmp	r3, r5
 802cd76:	dc26      	bgt.n	802cdc6 <_printf_common+0x96>
 802cd78:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802cd7c:	1e13      	subs	r3, r2, #0
 802cd7e:	6822      	ldr	r2, [r4, #0]
 802cd80:	bf18      	it	ne
 802cd82:	2301      	movne	r3, #1
 802cd84:	0692      	lsls	r2, r2, #26
 802cd86:	d42b      	bmi.n	802cde0 <_printf_common+0xb0>
 802cd88:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802cd8c:	4649      	mov	r1, r9
 802cd8e:	4638      	mov	r0, r7
 802cd90:	47c0      	blx	r8
 802cd92:	3001      	adds	r0, #1
 802cd94:	d01e      	beq.n	802cdd4 <_printf_common+0xa4>
 802cd96:	6823      	ldr	r3, [r4, #0]
 802cd98:	68e5      	ldr	r5, [r4, #12]
 802cd9a:	6832      	ldr	r2, [r6, #0]
 802cd9c:	f003 0306 	and.w	r3, r3, #6
 802cda0:	2b04      	cmp	r3, #4
 802cda2:	bf08      	it	eq
 802cda4:	1aad      	subeq	r5, r5, r2
 802cda6:	68a3      	ldr	r3, [r4, #8]
 802cda8:	6922      	ldr	r2, [r4, #16]
 802cdaa:	bf0c      	ite	eq
 802cdac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802cdb0:	2500      	movne	r5, #0
 802cdb2:	4293      	cmp	r3, r2
 802cdb4:	bfc4      	itt	gt
 802cdb6:	1a9b      	subgt	r3, r3, r2
 802cdb8:	18ed      	addgt	r5, r5, r3
 802cdba:	2600      	movs	r6, #0
 802cdbc:	341a      	adds	r4, #26
 802cdbe:	42b5      	cmp	r5, r6
 802cdc0:	d11a      	bne.n	802cdf8 <_printf_common+0xc8>
 802cdc2:	2000      	movs	r0, #0
 802cdc4:	e008      	b.n	802cdd8 <_printf_common+0xa8>
 802cdc6:	2301      	movs	r3, #1
 802cdc8:	4652      	mov	r2, sl
 802cdca:	4649      	mov	r1, r9
 802cdcc:	4638      	mov	r0, r7
 802cdce:	47c0      	blx	r8
 802cdd0:	3001      	adds	r0, #1
 802cdd2:	d103      	bne.n	802cddc <_printf_common+0xac>
 802cdd4:	f04f 30ff 	mov.w	r0, #4294967295
 802cdd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802cddc:	3501      	adds	r5, #1
 802cdde:	e7c6      	b.n	802cd6e <_printf_common+0x3e>
 802cde0:	18e1      	adds	r1, r4, r3
 802cde2:	1c5a      	adds	r2, r3, #1
 802cde4:	2030      	movs	r0, #48	; 0x30
 802cde6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802cdea:	4422      	add	r2, r4
 802cdec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802cdf0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802cdf4:	3302      	adds	r3, #2
 802cdf6:	e7c7      	b.n	802cd88 <_printf_common+0x58>
 802cdf8:	2301      	movs	r3, #1
 802cdfa:	4622      	mov	r2, r4
 802cdfc:	4649      	mov	r1, r9
 802cdfe:	4638      	mov	r0, r7
 802ce00:	47c0      	blx	r8
 802ce02:	3001      	adds	r0, #1
 802ce04:	d0e6      	beq.n	802cdd4 <_printf_common+0xa4>
 802ce06:	3601      	adds	r6, #1
 802ce08:	e7d9      	b.n	802cdbe <_printf_common+0x8e>
	...

0802ce0c <_printf_i>:
 802ce0c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802ce10:	7e0f      	ldrb	r7, [r1, #24]
 802ce12:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802ce14:	2f78      	cmp	r7, #120	; 0x78
 802ce16:	4691      	mov	r9, r2
 802ce18:	4680      	mov	r8, r0
 802ce1a:	460c      	mov	r4, r1
 802ce1c:	469a      	mov	sl, r3
 802ce1e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802ce22:	d807      	bhi.n	802ce34 <_printf_i+0x28>
 802ce24:	2f62      	cmp	r7, #98	; 0x62
 802ce26:	d80a      	bhi.n	802ce3e <_printf_i+0x32>
 802ce28:	2f00      	cmp	r7, #0
 802ce2a:	f000 80d8 	beq.w	802cfde <_printf_i+0x1d2>
 802ce2e:	2f58      	cmp	r7, #88	; 0x58
 802ce30:	f000 80a3 	beq.w	802cf7a <_printf_i+0x16e>
 802ce34:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802ce38:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802ce3c:	e03a      	b.n	802ceb4 <_printf_i+0xa8>
 802ce3e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802ce42:	2b15      	cmp	r3, #21
 802ce44:	d8f6      	bhi.n	802ce34 <_printf_i+0x28>
 802ce46:	a101      	add	r1, pc, #4	; (adr r1, 802ce4c <_printf_i+0x40>)
 802ce48:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802ce4c:	0802cea5 	.word	0x0802cea5
 802ce50:	0802ceb9 	.word	0x0802ceb9
 802ce54:	0802ce35 	.word	0x0802ce35
 802ce58:	0802ce35 	.word	0x0802ce35
 802ce5c:	0802ce35 	.word	0x0802ce35
 802ce60:	0802ce35 	.word	0x0802ce35
 802ce64:	0802ceb9 	.word	0x0802ceb9
 802ce68:	0802ce35 	.word	0x0802ce35
 802ce6c:	0802ce35 	.word	0x0802ce35
 802ce70:	0802ce35 	.word	0x0802ce35
 802ce74:	0802ce35 	.word	0x0802ce35
 802ce78:	0802cfc5 	.word	0x0802cfc5
 802ce7c:	0802cee9 	.word	0x0802cee9
 802ce80:	0802cfa7 	.word	0x0802cfa7
 802ce84:	0802ce35 	.word	0x0802ce35
 802ce88:	0802ce35 	.word	0x0802ce35
 802ce8c:	0802cfe7 	.word	0x0802cfe7
 802ce90:	0802ce35 	.word	0x0802ce35
 802ce94:	0802cee9 	.word	0x0802cee9
 802ce98:	0802ce35 	.word	0x0802ce35
 802ce9c:	0802ce35 	.word	0x0802ce35
 802cea0:	0802cfaf 	.word	0x0802cfaf
 802cea4:	682b      	ldr	r3, [r5, #0]
 802cea6:	1d1a      	adds	r2, r3, #4
 802cea8:	681b      	ldr	r3, [r3, #0]
 802ceaa:	602a      	str	r2, [r5, #0]
 802ceac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802ceb0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802ceb4:	2301      	movs	r3, #1
 802ceb6:	e0a3      	b.n	802d000 <_printf_i+0x1f4>
 802ceb8:	6820      	ldr	r0, [r4, #0]
 802ceba:	6829      	ldr	r1, [r5, #0]
 802cebc:	0606      	lsls	r6, r0, #24
 802cebe:	f101 0304 	add.w	r3, r1, #4
 802cec2:	d50a      	bpl.n	802ceda <_printf_i+0xce>
 802cec4:	680e      	ldr	r6, [r1, #0]
 802cec6:	602b      	str	r3, [r5, #0]
 802cec8:	2e00      	cmp	r6, #0
 802ceca:	da03      	bge.n	802ced4 <_printf_i+0xc8>
 802cecc:	232d      	movs	r3, #45	; 0x2d
 802cece:	4276      	negs	r6, r6
 802ced0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802ced4:	485e      	ldr	r0, [pc, #376]	; (802d050 <_printf_i+0x244>)
 802ced6:	230a      	movs	r3, #10
 802ced8:	e019      	b.n	802cf0e <_printf_i+0x102>
 802ceda:	680e      	ldr	r6, [r1, #0]
 802cedc:	602b      	str	r3, [r5, #0]
 802cede:	f010 0f40 	tst.w	r0, #64	; 0x40
 802cee2:	bf18      	it	ne
 802cee4:	b236      	sxthne	r6, r6
 802cee6:	e7ef      	b.n	802cec8 <_printf_i+0xbc>
 802cee8:	682b      	ldr	r3, [r5, #0]
 802ceea:	6820      	ldr	r0, [r4, #0]
 802ceec:	1d19      	adds	r1, r3, #4
 802ceee:	6029      	str	r1, [r5, #0]
 802cef0:	0601      	lsls	r1, r0, #24
 802cef2:	d501      	bpl.n	802cef8 <_printf_i+0xec>
 802cef4:	681e      	ldr	r6, [r3, #0]
 802cef6:	e002      	b.n	802cefe <_printf_i+0xf2>
 802cef8:	0646      	lsls	r6, r0, #25
 802cefa:	d5fb      	bpl.n	802cef4 <_printf_i+0xe8>
 802cefc:	881e      	ldrh	r6, [r3, #0]
 802cefe:	4854      	ldr	r0, [pc, #336]	; (802d050 <_printf_i+0x244>)
 802cf00:	2f6f      	cmp	r7, #111	; 0x6f
 802cf02:	bf0c      	ite	eq
 802cf04:	2308      	moveq	r3, #8
 802cf06:	230a      	movne	r3, #10
 802cf08:	2100      	movs	r1, #0
 802cf0a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802cf0e:	6865      	ldr	r5, [r4, #4]
 802cf10:	60a5      	str	r5, [r4, #8]
 802cf12:	2d00      	cmp	r5, #0
 802cf14:	bfa2      	ittt	ge
 802cf16:	6821      	ldrge	r1, [r4, #0]
 802cf18:	f021 0104 	bicge.w	r1, r1, #4
 802cf1c:	6021      	strge	r1, [r4, #0]
 802cf1e:	b90e      	cbnz	r6, 802cf24 <_printf_i+0x118>
 802cf20:	2d00      	cmp	r5, #0
 802cf22:	d04d      	beq.n	802cfc0 <_printf_i+0x1b4>
 802cf24:	4615      	mov	r5, r2
 802cf26:	fbb6 f1f3 	udiv	r1, r6, r3
 802cf2a:	fb03 6711 	mls	r7, r3, r1, r6
 802cf2e:	5dc7      	ldrb	r7, [r0, r7]
 802cf30:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802cf34:	4637      	mov	r7, r6
 802cf36:	42bb      	cmp	r3, r7
 802cf38:	460e      	mov	r6, r1
 802cf3a:	d9f4      	bls.n	802cf26 <_printf_i+0x11a>
 802cf3c:	2b08      	cmp	r3, #8
 802cf3e:	d10b      	bne.n	802cf58 <_printf_i+0x14c>
 802cf40:	6823      	ldr	r3, [r4, #0]
 802cf42:	07de      	lsls	r6, r3, #31
 802cf44:	d508      	bpl.n	802cf58 <_printf_i+0x14c>
 802cf46:	6923      	ldr	r3, [r4, #16]
 802cf48:	6861      	ldr	r1, [r4, #4]
 802cf4a:	4299      	cmp	r1, r3
 802cf4c:	bfde      	ittt	le
 802cf4e:	2330      	movle	r3, #48	; 0x30
 802cf50:	f805 3c01 	strble.w	r3, [r5, #-1]
 802cf54:	f105 35ff 	addle.w	r5, r5, #4294967295
 802cf58:	1b52      	subs	r2, r2, r5
 802cf5a:	6122      	str	r2, [r4, #16]
 802cf5c:	f8cd a000 	str.w	sl, [sp]
 802cf60:	464b      	mov	r3, r9
 802cf62:	aa03      	add	r2, sp, #12
 802cf64:	4621      	mov	r1, r4
 802cf66:	4640      	mov	r0, r8
 802cf68:	f7ff fee2 	bl	802cd30 <_printf_common>
 802cf6c:	3001      	adds	r0, #1
 802cf6e:	d14c      	bne.n	802d00a <_printf_i+0x1fe>
 802cf70:	f04f 30ff 	mov.w	r0, #4294967295
 802cf74:	b004      	add	sp, #16
 802cf76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802cf7a:	4835      	ldr	r0, [pc, #212]	; (802d050 <_printf_i+0x244>)
 802cf7c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 802cf80:	6829      	ldr	r1, [r5, #0]
 802cf82:	6823      	ldr	r3, [r4, #0]
 802cf84:	f851 6b04 	ldr.w	r6, [r1], #4
 802cf88:	6029      	str	r1, [r5, #0]
 802cf8a:	061d      	lsls	r5, r3, #24
 802cf8c:	d514      	bpl.n	802cfb8 <_printf_i+0x1ac>
 802cf8e:	07df      	lsls	r7, r3, #31
 802cf90:	bf44      	itt	mi
 802cf92:	f043 0320 	orrmi.w	r3, r3, #32
 802cf96:	6023      	strmi	r3, [r4, #0]
 802cf98:	b91e      	cbnz	r6, 802cfa2 <_printf_i+0x196>
 802cf9a:	6823      	ldr	r3, [r4, #0]
 802cf9c:	f023 0320 	bic.w	r3, r3, #32
 802cfa0:	6023      	str	r3, [r4, #0]
 802cfa2:	2310      	movs	r3, #16
 802cfa4:	e7b0      	b.n	802cf08 <_printf_i+0xfc>
 802cfa6:	6823      	ldr	r3, [r4, #0]
 802cfa8:	f043 0320 	orr.w	r3, r3, #32
 802cfac:	6023      	str	r3, [r4, #0]
 802cfae:	2378      	movs	r3, #120	; 0x78
 802cfb0:	4828      	ldr	r0, [pc, #160]	; (802d054 <_printf_i+0x248>)
 802cfb2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 802cfb6:	e7e3      	b.n	802cf80 <_printf_i+0x174>
 802cfb8:	0659      	lsls	r1, r3, #25
 802cfba:	bf48      	it	mi
 802cfbc:	b2b6      	uxthmi	r6, r6
 802cfbe:	e7e6      	b.n	802cf8e <_printf_i+0x182>
 802cfc0:	4615      	mov	r5, r2
 802cfc2:	e7bb      	b.n	802cf3c <_printf_i+0x130>
 802cfc4:	682b      	ldr	r3, [r5, #0]
 802cfc6:	6826      	ldr	r6, [r4, #0]
 802cfc8:	6961      	ldr	r1, [r4, #20]
 802cfca:	1d18      	adds	r0, r3, #4
 802cfcc:	6028      	str	r0, [r5, #0]
 802cfce:	0635      	lsls	r5, r6, #24
 802cfd0:	681b      	ldr	r3, [r3, #0]
 802cfd2:	d501      	bpl.n	802cfd8 <_printf_i+0x1cc>
 802cfd4:	6019      	str	r1, [r3, #0]
 802cfd6:	e002      	b.n	802cfde <_printf_i+0x1d2>
 802cfd8:	0670      	lsls	r0, r6, #25
 802cfda:	d5fb      	bpl.n	802cfd4 <_printf_i+0x1c8>
 802cfdc:	8019      	strh	r1, [r3, #0]
 802cfde:	2300      	movs	r3, #0
 802cfe0:	6123      	str	r3, [r4, #16]
 802cfe2:	4615      	mov	r5, r2
 802cfe4:	e7ba      	b.n	802cf5c <_printf_i+0x150>
 802cfe6:	682b      	ldr	r3, [r5, #0]
 802cfe8:	1d1a      	adds	r2, r3, #4
 802cfea:	602a      	str	r2, [r5, #0]
 802cfec:	681d      	ldr	r5, [r3, #0]
 802cfee:	6862      	ldr	r2, [r4, #4]
 802cff0:	2100      	movs	r1, #0
 802cff2:	4628      	mov	r0, r5
 802cff4:	f7d3 f964 	bl	80002c0 <memchr>
 802cff8:	b108      	cbz	r0, 802cffe <_printf_i+0x1f2>
 802cffa:	1b40      	subs	r0, r0, r5
 802cffc:	6060      	str	r0, [r4, #4]
 802cffe:	6863      	ldr	r3, [r4, #4]
 802d000:	6123      	str	r3, [r4, #16]
 802d002:	2300      	movs	r3, #0
 802d004:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802d008:	e7a8      	b.n	802cf5c <_printf_i+0x150>
 802d00a:	6923      	ldr	r3, [r4, #16]
 802d00c:	462a      	mov	r2, r5
 802d00e:	4649      	mov	r1, r9
 802d010:	4640      	mov	r0, r8
 802d012:	47d0      	blx	sl
 802d014:	3001      	adds	r0, #1
 802d016:	d0ab      	beq.n	802cf70 <_printf_i+0x164>
 802d018:	6823      	ldr	r3, [r4, #0]
 802d01a:	079b      	lsls	r3, r3, #30
 802d01c:	d413      	bmi.n	802d046 <_printf_i+0x23a>
 802d01e:	68e0      	ldr	r0, [r4, #12]
 802d020:	9b03      	ldr	r3, [sp, #12]
 802d022:	4298      	cmp	r0, r3
 802d024:	bfb8      	it	lt
 802d026:	4618      	movlt	r0, r3
 802d028:	e7a4      	b.n	802cf74 <_printf_i+0x168>
 802d02a:	2301      	movs	r3, #1
 802d02c:	4632      	mov	r2, r6
 802d02e:	4649      	mov	r1, r9
 802d030:	4640      	mov	r0, r8
 802d032:	47d0      	blx	sl
 802d034:	3001      	adds	r0, #1
 802d036:	d09b      	beq.n	802cf70 <_printf_i+0x164>
 802d038:	3501      	adds	r5, #1
 802d03a:	68e3      	ldr	r3, [r4, #12]
 802d03c:	9903      	ldr	r1, [sp, #12]
 802d03e:	1a5b      	subs	r3, r3, r1
 802d040:	42ab      	cmp	r3, r5
 802d042:	dcf2      	bgt.n	802d02a <_printf_i+0x21e>
 802d044:	e7eb      	b.n	802d01e <_printf_i+0x212>
 802d046:	2500      	movs	r5, #0
 802d048:	f104 0619 	add.w	r6, r4, #25
 802d04c:	e7f5      	b.n	802d03a <_printf_i+0x22e>
 802d04e:	bf00      	nop
 802d050:	08049b51 	.word	0x08049b51
 802d054:	08049b62 	.word	0x08049b62

0802d058 <cleanup_glue>:
 802d058:	b538      	push	{r3, r4, r5, lr}
 802d05a:	460c      	mov	r4, r1
 802d05c:	6809      	ldr	r1, [r1, #0]
 802d05e:	4605      	mov	r5, r0
 802d060:	b109      	cbz	r1, 802d066 <cleanup_glue+0xe>
 802d062:	f7ff fff9 	bl	802d058 <cleanup_glue>
 802d066:	4621      	mov	r1, r4
 802d068:	4628      	mov	r0, r5
 802d06a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802d06e:	f7ff b94f 	b.w	802c310 <_free_r>
	...

0802d074 <_reclaim_reent>:
 802d074:	4b2c      	ldr	r3, [pc, #176]	; (802d128 <_reclaim_reent+0xb4>)
 802d076:	681b      	ldr	r3, [r3, #0]
 802d078:	4283      	cmp	r3, r0
 802d07a:	b570      	push	{r4, r5, r6, lr}
 802d07c:	4604      	mov	r4, r0
 802d07e:	d051      	beq.n	802d124 <_reclaim_reent+0xb0>
 802d080:	6a43      	ldr	r3, [r0, #36]	; 0x24
 802d082:	b143      	cbz	r3, 802d096 <_reclaim_reent+0x22>
 802d084:	68db      	ldr	r3, [r3, #12]
 802d086:	2b00      	cmp	r3, #0
 802d088:	d14a      	bne.n	802d120 <_reclaim_reent+0xac>
 802d08a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d08c:	6819      	ldr	r1, [r3, #0]
 802d08e:	b111      	cbz	r1, 802d096 <_reclaim_reent+0x22>
 802d090:	4620      	mov	r0, r4
 802d092:	f7ff f93d 	bl	802c310 <_free_r>
 802d096:	6961      	ldr	r1, [r4, #20]
 802d098:	b111      	cbz	r1, 802d0a0 <_reclaim_reent+0x2c>
 802d09a:	4620      	mov	r0, r4
 802d09c:	f7ff f938 	bl	802c310 <_free_r>
 802d0a0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802d0a2:	b111      	cbz	r1, 802d0aa <_reclaim_reent+0x36>
 802d0a4:	4620      	mov	r0, r4
 802d0a6:	f7ff f933 	bl	802c310 <_free_r>
 802d0aa:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802d0ac:	b111      	cbz	r1, 802d0b4 <_reclaim_reent+0x40>
 802d0ae:	4620      	mov	r0, r4
 802d0b0:	f7ff f92e 	bl	802c310 <_free_r>
 802d0b4:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 802d0b6:	b111      	cbz	r1, 802d0be <_reclaim_reent+0x4a>
 802d0b8:	4620      	mov	r0, r4
 802d0ba:	f7ff f929 	bl	802c310 <_free_r>
 802d0be:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802d0c0:	b111      	cbz	r1, 802d0c8 <_reclaim_reent+0x54>
 802d0c2:	4620      	mov	r0, r4
 802d0c4:	f7ff f924 	bl	802c310 <_free_r>
 802d0c8:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802d0ca:	b111      	cbz	r1, 802d0d2 <_reclaim_reent+0x5e>
 802d0cc:	4620      	mov	r0, r4
 802d0ce:	f7ff f91f 	bl	802c310 <_free_r>
 802d0d2:	6da1      	ldr	r1, [r4, #88]	; 0x58
 802d0d4:	b111      	cbz	r1, 802d0dc <_reclaim_reent+0x68>
 802d0d6:	4620      	mov	r0, r4
 802d0d8:	f7ff f91a 	bl	802c310 <_free_r>
 802d0dc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802d0de:	b111      	cbz	r1, 802d0e6 <_reclaim_reent+0x72>
 802d0e0:	4620      	mov	r0, r4
 802d0e2:	f7ff f915 	bl	802c310 <_free_r>
 802d0e6:	69a3      	ldr	r3, [r4, #24]
 802d0e8:	b1e3      	cbz	r3, 802d124 <_reclaim_reent+0xb0>
 802d0ea:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802d0ec:	4620      	mov	r0, r4
 802d0ee:	4798      	blx	r3
 802d0f0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802d0f2:	b1b9      	cbz	r1, 802d124 <_reclaim_reent+0xb0>
 802d0f4:	4620      	mov	r0, r4
 802d0f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802d0fa:	f7ff bfad 	b.w	802d058 <cleanup_glue>
 802d0fe:	5949      	ldr	r1, [r1, r5]
 802d100:	b941      	cbnz	r1, 802d114 <_reclaim_reent+0xa0>
 802d102:	3504      	adds	r5, #4
 802d104:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d106:	2d80      	cmp	r5, #128	; 0x80
 802d108:	68d9      	ldr	r1, [r3, #12]
 802d10a:	d1f8      	bne.n	802d0fe <_reclaim_reent+0x8a>
 802d10c:	4620      	mov	r0, r4
 802d10e:	f7ff f8ff 	bl	802c310 <_free_r>
 802d112:	e7ba      	b.n	802d08a <_reclaim_reent+0x16>
 802d114:	680e      	ldr	r6, [r1, #0]
 802d116:	4620      	mov	r0, r4
 802d118:	f7ff f8fa 	bl	802c310 <_free_r>
 802d11c:	4631      	mov	r1, r6
 802d11e:	e7ef      	b.n	802d100 <_reclaim_reent+0x8c>
 802d120:	2500      	movs	r5, #0
 802d122:	e7ef      	b.n	802d104 <_reclaim_reent+0x90>
 802d124:	bd70      	pop	{r4, r5, r6, pc}
 802d126:	bf00      	nop
 802d128:	20000114 	.word	0x20000114

0802d12c <_sbrk_r>:
 802d12c:	b538      	push	{r3, r4, r5, lr}
 802d12e:	4d06      	ldr	r5, [pc, #24]	; (802d148 <_sbrk_r+0x1c>)
 802d130:	2300      	movs	r3, #0
 802d132:	4604      	mov	r4, r0
 802d134:	4608      	mov	r0, r1
 802d136:	602b      	str	r3, [r5, #0]
 802d138:	f7d6 fa9a 	bl	8003670 <_sbrk>
 802d13c:	1c43      	adds	r3, r0, #1
 802d13e:	d102      	bne.n	802d146 <_sbrk_r+0x1a>
 802d140:	682b      	ldr	r3, [r5, #0]
 802d142:	b103      	cbz	r3, 802d146 <_sbrk_r+0x1a>
 802d144:	6023      	str	r3, [r4, #0]
 802d146:	bd38      	pop	{r3, r4, r5, pc}
 802d148:	2001e3f0 	.word	0x2001e3f0

0802d14c <_raise_r>:
 802d14c:	291f      	cmp	r1, #31
 802d14e:	b538      	push	{r3, r4, r5, lr}
 802d150:	4604      	mov	r4, r0
 802d152:	460d      	mov	r5, r1
 802d154:	d904      	bls.n	802d160 <_raise_r+0x14>
 802d156:	2316      	movs	r3, #22
 802d158:	6003      	str	r3, [r0, #0]
 802d15a:	f04f 30ff 	mov.w	r0, #4294967295
 802d15e:	bd38      	pop	{r3, r4, r5, pc}
 802d160:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802d162:	b112      	cbz	r2, 802d16a <_raise_r+0x1e>
 802d164:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802d168:	b94b      	cbnz	r3, 802d17e <_raise_r+0x32>
 802d16a:	4620      	mov	r0, r4
 802d16c:	f000 f830 	bl	802d1d0 <_getpid_r>
 802d170:	462a      	mov	r2, r5
 802d172:	4601      	mov	r1, r0
 802d174:	4620      	mov	r0, r4
 802d176:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802d17a:	f000 b817 	b.w	802d1ac <_kill_r>
 802d17e:	2b01      	cmp	r3, #1
 802d180:	d00a      	beq.n	802d198 <_raise_r+0x4c>
 802d182:	1c59      	adds	r1, r3, #1
 802d184:	d103      	bne.n	802d18e <_raise_r+0x42>
 802d186:	2316      	movs	r3, #22
 802d188:	6003      	str	r3, [r0, #0]
 802d18a:	2001      	movs	r0, #1
 802d18c:	e7e7      	b.n	802d15e <_raise_r+0x12>
 802d18e:	2400      	movs	r4, #0
 802d190:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802d194:	4628      	mov	r0, r5
 802d196:	4798      	blx	r3
 802d198:	2000      	movs	r0, #0
 802d19a:	e7e0      	b.n	802d15e <_raise_r+0x12>

0802d19c <raise>:
 802d19c:	4b02      	ldr	r3, [pc, #8]	; (802d1a8 <raise+0xc>)
 802d19e:	4601      	mov	r1, r0
 802d1a0:	6818      	ldr	r0, [r3, #0]
 802d1a2:	f7ff bfd3 	b.w	802d14c <_raise_r>
 802d1a6:	bf00      	nop
 802d1a8:	20000114 	.word	0x20000114

0802d1ac <_kill_r>:
 802d1ac:	b538      	push	{r3, r4, r5, lr}
 802d1ae:	4d07      	ldr	r5, [pc, #28]	; (802d1cc <_kill_r+0x20>)
 802d1b0:	2300      	movs	r3, #0
 802d1b2:	4604      	mov	r4, r0
 802d1b4:	4608      	mov	r0, r1
 802d1b6:	4611      	mov	r1, r2
 802d1b8:	602b      	str	r3, [r5, #0]
 802d1ba:	f7d6 fa23 	bl	8003604 <_kill>
 802d1be:	1c43      	adds	r3, r0, #1
 802d1c0:	d102      	bne.n	802d1c8 <_kill_r+0x1c>
 802d1c2:	682b      	ldr	r3, [r5, #0]
 802d1c4:	b103      	cbz	r3, 802d1c8 <_kill_r+0x1c>
 802d1c6:	6023      	str	r3, [r4, #0]
 802d1c8:	bd38      	pop	{r3, r4, r5, pc}
 802d1ca:	bf00      	nop
 802d1cc:	2001e3f0 	.word	0x2001e3f0

0802d1d0 <_getpid_r>:
 802d1d0:	f7d6 ba16 	b.w	8003600 <_getpid>

0802d1d4 <__sread>:
 802d1d4:	b510      	push	{r4, lr}
 802d1d6:	460c      	mov	r4, r1
 802d1d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d1dc:	f001 fce2 	bl	802eba4 <_read_r>
 802d1e0:	2800      	cmp	r0, #0
 802d1e2:	bfab      	itete	ge
 802d1e4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802d1e6:	89a3      	ldrhlt	r3, [r4, #12]
 802d1e8:	181b      	addge	r3, r3, r0
 802d1ea:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802d1ee:	bfac      	ite	ge
 802d1f0:	6563      	strge	r3, [r4, #84]	; 0x54
 802d1f2:	81a3      	strhlt	r3, [r4, #12]
 802d1f4:	bd10      	pop	{r4, pc}

0802d1f6 <__swrite>:
 802d1f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802d1fa:	461f      	mov	r7, r3
 802d1fc:	898b      	ldrh	r3, [r1, #12]
 802d1fe:	05db      	lsls	r3, r3, #23
 802d200:	4605      	mov	r5, r0
 802d202:	460c      	mov	r4, r1
 802d204:	4616      	mov	r6, r2
 802d206:	d505      	bpl.n	802d214 <__swrite+0x1e>
 802d208:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d20c:	2302      	movs	r3, #2
 802d20e:	2200      	movs	r2, #0
 802d210:	f001 f8aa 	bl	802e368 <_lseek_r>
 802d214:	89a3      	ldrh	r3, [r4, #12]
 802d216:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802d21a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802d21e:	81a3      	strh	r3, [r4, #12]
 802d220:	4632      	mov	r2, r6
 802d222:	463b      	mov	r3, r7
 802d224:	4628      	mov	r0, r5
 802d226:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802d22a:	f000 b869 	b.w	802d300 <_write_r>

0802d22e <__sseek>:
 802d22e:	b510      	push	{r4, lr}
 802d230:	460c      	mov	r4, r1
 802d232:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d236:	f001 f897 	bl	802e368 <_lseek_r>
 802d23a:	1c43      	adds	r3, r0, #1
 802d23c:	89a3      	ldrh	r3, [r4, #12]
 802d23e:	bf15      	itete	ne
 802d240:	6560      	strne	r0, [r4, #84]	; 0x54
 802d242:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802d246:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802d24a:	81a3      	strheq	r3, [r4, #12]
 802d24c:	bf18      	it	ne
 802d24e:	81a3      	strhne	r3, [r4, #12]
 802d250:	bd10      	pop	{r4, pc}

0802d252 <__sclose>:
 802d252:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d256:	f000 b935 	b.w	802d4c4 <_close_r>
	...

0802d25c <__swbuf_r>:
 802d25c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802d25e:	460e      	mov	r6, r1
 802d260:	4614      	mov	r4, r2
 802d262:	4605      	mov	r5, r0
 802d264:	b118      	cbz	r0, 802d26e <__swbuf_r+0x12>
 802d266:	6983      	ldr	r3, [r0, #24]
 802d268:	b90b      	cbnz	r3, 802d26e <__swbuf_r+0x12>
 802d26a:	f7fe ff53 	bl	802c114 <__sinit>
 802d26e:	4b21      	ldr	r3, [pc, #132]	; (802d2f4 <__swbuf_r+0x98>)
 802d270:	429c      	cmp	r4, r3
 802d272:	d12b      	bne.n	802d2cc <__swbuf_r+0x70>
 802d274:	686c      	ldr	r4, [r5, #4]
 802d276:	69a3      	ldr	r3, [r4, #24]
 802d278:	60a3      	str	r3, [r4, #8]
 802d27a:	89a3      	ldrh	r3, [r4, #12]
 802d27c:	071a      	lsls	r2, r3, #28
 802d27e:	d52f      	bpl.n	802d2e0 <__swbuf_r+0x84>
 802d280:	6923      	ldr	r3, [r4, #16]
 802d282:	b36b      	cbz	r3, 802d2e0 <__swbuf_r+0x84>
 802d284:	6923      	ldr	r3, [r4, #16]
 802d286:	6820      	ldr	r0, [r4, #0]
 802d288:	1ac0      	subs	r0, r0, r3
 802d28a:	6963      	ldr	r3, [r4, #20]
 802d28c:	b2f6      	uxtb	r6, r6
 802d28e:	4283      	cmp	r3, r0
 802d290:	4637      	mov	r7, r6
 802d292:	dc04      	bgt.n	802d29e <__swbuf_r+0x42>
 802d294:	4621      	mov	r1, r4
 802d296:	4628      	mov	r0, r5
 802d298:	f001 f826 	bl	802e2e8 <_fflush_r>
 802d29c:	bb30      	cbnz	r0, 802d2ec <__swbuf_r+0x90>
 802d29e:	68a3      	ldr	r3, [r4, #8]
 802d2a0:	3b01      	subs	r3, #1
 802d2a2:	60a3      	str	r3, [r4, #8]
 802d2a4:	6823      	ldr	r3, [r4, #0]
 802d2a6:	1c5a      	adds	r2, r3, #1
 802d2a8:	6022      	str	r2, [r4, #0]
 802d2aa:	701e      	strb	r6, [r3, #0]
 802d2ac:	6963      	ldr	r3, [r4, #20]
 802d2ae:	3001      	adds	r0, #1
 802d2b0:	4283      	cmp	r3, r0
 802d2b2:	d004      	beq.n	802d2be <__swbuf_r+0x62>
 802d2b4:	89a3      	ldrh	r3, [r4, #12]
 802d2b6:	07db      	lsls	r3, r3, #31
 802d2b8:	d506      	bpl.n	802d2c8 <__swbuf_r+0x6c>
 802d2ba:	2e0a      	cmp	r6, #10
 802d2bc:	d104      	bne.n	802d2c8 <__swbuf_r+0x6c>
 802d2be:	4621      	mov	r1, r4
 802d2c0:	4628      	mov	r0, r5
 802d2c2:	f001 f811 	bl	802e2e8 <_fflush_r>
 802d2c6:	b988      	cbnz	r0, 802d2ec <__swbuf_r+0x90>
 802d2c8:	4638      	mov	r0, r7
 802d2ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802d2cc:	4b0a      	ldr	r3, [pc, #40]	; (802d2f8 <__swbuf_r+0x9c>)
 802d2ce:	429c      	cmp	r4, r3
 802d2d0:	d101      	bne.n	802d2d6 <__swbuf_r+0x7a>
 802d2d2:	68ac      	ldr	r4, [r5, #8]
 802d2d4:	e7cf      	b.n	802d276 <__swbuf_r+0x1a>
 802d2d6:	4b09      	ldr	r3, [pc, #36]	; (802d2fc <__swbuf_r+0xa0>)
 802d2d8:	429c      	cmp	r4, r3
 802d2da:	bf08      	it	eq
 802d2dc:	68ec      	ldreq	r4, [r5, #12]
 802d2de:	e7ca      	b.n	802d276 <__swbuf_r+0x1a>
 802d2e0:	4621      	mov	r1, r4
 802d2e2:	4628      	mov	r0, r5
 802d2e4:	f000 f81e 	bl	802d324 <__swsetup_r>
 802d2e8:	2800      	cmp	r0, #0
 802d2ea:	d0cb      	beq.n	802d284 <__swbuf_r+0x28>
 802d2ec:	f04f 37ff 	mov.w	r7, #4294967295
 802d2f0:	e7ea      	b.n	802d2c8 <__swbuf_r+0x6c>
 802d2f2:	bf00      	nop
 802d2f4:	08049aec 	.word	0x08049aec
 802d2f8:	08049b0c 	.word	0x08049b0c
 802d2fc:	08049acc 	.word	0x08049acc

0802d300 <_write_r>:
 802d300:	b538      	push	{r3, r4, r5, lr}
 802d302:	4d07      	ldr	r5, [pc, #28]	; (802d320 <_write_r+0x20>)
 802d304:	4604      	mov	r4, r0
 802d306:	4608      	mov	r0, r1
 802d308:	4611      	mov	r1, r2
 802d30a:	2200      	movs	r2, #0
 802d30c:	602a      	str	r2, [r5, #0]
 802d30e:	461a      	mov	r2, r3
 802d310:	f7d6 f994 	bl	800363c <_write>
 802d314:	1c43      	adds	r3, r0, #1
 802d316:	d102      	bne.n	802d31e <_write_r+0x1e>
 802d318:	682b      	ldr	r3, [r5, #0]
 802d31a:	b103      	cbz	r3, 802d31e <_write_r+0x1e>
 802d31c:	6023      	str	r3, [r4, #0]
 802d31e:	bd38      	pop	{r3, r4, r5, pc}
 802d320:	2001e3f0 	.word	0x2001e3f0

0802d324 <__swsetup_r>:
 802d324:	4b32      	ldr	r3, [pc, #200]	; (802d3f0 <__swsetup_r+0xcc>)
 802d326:	b570      	push	{r4, r5, r6, lr}
 802d328:	681d      	ldr	r5, [r3, #0]
 802d32a:	4606      	mov	r6, r0
 802d32c:	460c      	mov	r4, r1
 802d32e:	b125      	cbz	r5, 802d33a <__swsetup_r+0x16>
 802d330:	69ab      	ldr	r3, [r5, #24]
 802d332:	b913      	cbnz	r3, 802d33a <__swsetup_r+0x16>
 802d334:	4628      	mov	r0, r5
 802d336:	f7fe feed 	bl	802c114 <__sinit>
 802d33a:	4b2e      	ldr	r3, [pc, #184]	; (802d3f4 <__swsetup_r+0xd0>)
 802d33c:	429c      	cmp	r4, r3
 802d33e:	d10f      	bne.n	802d360 <__swsetup_r+0x3c>
 802d340:	686c      	ldr	r4, [r5, #4]
 802d342:	89a3      	ldrh	r3, [r4, #12]
 802d344:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d348:	0719      	lsls	r1, r3, #28
 802d34a:	d42c      	bmi.n	802d3a6 <__swsetup_r+0x82>
 802d34c:	06dd      	lsls	r5, r3, #27
 802d34e:	d411      	bmi.n	802d374 <__swsetup_r+0x50>
 802d350:	2309      	movs	r3, #9
 802d352:	6033      	str	r3, [r6, #0]
 802d354:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802d358:	81a3      	strh	r3, [r4, #12]
 802d35a:	f04f 30ff 	mov.w	r0, #4294967295
 802d35e:	e03e      	b.n	802d3de <__swsetup_r+0xba>
 802d360:	4b25      	ldr	r3, [pc, #148]	; (802d3f8 <__swsetup_r+0xd4>)
 802d362:	429c      	cmp	r4, r3
 802d364:	d101      	bne.n	802d36a <__swsetup_r+0x46>
 802d366:	68ac      	ldr	r4, [r5, #8]
 802d368:	e7eb      	b.n	802d342 <__swsetup_r+0x1e>
 802d36a:	4b24      	ldr	r3, [pc, #144]	; (802d3fc <__swsetup_r+0xd8>)
 802d36c:	429c      	cmp	r4, r3
 802d36e:	bf08      	it	eq
 802d370:	68ec      	ldreq	r4, [r5, #12]
 802d372:	e7e6      	b.n	802d342 <__swsetup_r+0x1e>
 802d374:	0758      	lsls	r0, r3, #29
 802d376:	d512      	bpl.n	802d39e <__swsetup_r+0x7a>
 802d378:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802d37a:	b141      	cbz	r1, 802d38e <__swsetup_r+0x6a>
 802d37c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802d380:	4299      	cmp	r1, r3
 802d382:	d002      	beq.n	802d38a <__swsetup_r+0x66>
 802d384:	4630      	mov	r0, r6
 802d386:	f7fe ffc3 	bl	802c310 <_free_r>
 802d38a:	2300      	movs	r3, #0
 802d38c:	6363      	str	r3, [r4, #52]	; 0x34
 802d38e:	89a3      	ldrh	r3, [r4, #12]
 802d390:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802d394:	81a3      	strh	r3, [r4, #12]
 802d396:	2300      	movs	r3, #0
 802d398:	6063      	str	r3, [r4, #4]
 802d39a:	6923      	ldr	r3, [r4, #16]
 802d39c:	6023      	str	r3, [r4, #0]
 802d39e:	89a3      	ldrh	r3, [r4, #12]
 802d3a0:	f043 0308 	orr.w	r3, r3, #8
 802d3a4:	81a3      	strh	r3, [r4, #12]
 802d3a6:	6923      	ldr	r3, [r4, #16]
 802d3a8:	b94b      	cbnz	r3, 802d3be <__swsetup_r+0x9a>
 802d3aa:	89a3      	ldrh	r3, [r4, #12]
 802d3ac:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802d3b0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802d3b4:	d003      	beq.n	802d3be <__swsetup_r+0x9a>
 802d3b6:	4621      	mov	r1, r4
 802d3b8:	4630      	mov	r0, r6
 802d3ba:	f001 f80d 	bl	802e3d8 <__smakebuf_r>
 802d3be:	89a0      	ldrh	r0, [r4, #12]
 802d3c0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d3c4:	f010 0301 	ands.w	r3, r0, #1
 802d3c8:	d00a      	beq.n	802d3e0 <__swsetup_r+0xbc>
 802d3ca:	2300      	movs	r3, #0
 802d3cc:	60a3      	str	r3, [r4, #8]
 802d3ce:	6963      	ldr	r3, [r4, #20]
 802d3d0:	425b      	negs	r3, r3
 802d3d2:	61a3      	str	r3, [r4, #24]
 802d3d4:	6923      	ldr	r3, [r4, #16]
 802d3d6:	b943      	cbnz	r3, 802d3ea <__swsetup_r+0xc6>
 802d3d8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802d3dc:	d1ba      	bne.n	802d354 <__swsetup_r+0x30>
 802d3de:	bd70      	pop	{r4, r5, r6, pc}
 802d3e0:	0781      	lsls	r1, r0, #30
 802d3e2:	bf58      	it	pl
 802d3e4:	6963      	ldrpl	r3, [r4, #20]
 802d3e6:	60a3      	str	r3, [r4, #8]
 802d3e8:	e7f4      	b.n	802d3d4 <__swsetup_r+0xb0>
 802d3ea:	2000      	movs	r0, #0
 802d3ec:	e7f7      	b.n	802d3de <__swsetup_r+0xba>
 802d3ee:	bf00      	nop
 802d3f0:	20000114 	.word	0x20000114
 802d3f4:	08049aec 	.word	0x08049aec
 802d3f8:	08049b0c 	.word	0x08049b0c
 802d3fc:	08049acc 	.word	0x08049acc

0802d400 <__register_exitproc>:
 802d400:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802d404:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 802d4c0 <__register_exitproc+0xc0>
 802d408:	4606      	mov	r6, r0
 802d40a:	f8d8 0000 	ldr.w	r0, [r8]
 802d40e:	461f      	mov	r7, r3
 802d410:	460d      	mov	r5, r1
 802d412:	4691      	mov	r9, r2
 802d414:	f7fe ff53 	bl	802c2be <__retarget_lock_acquire_recursive>
 802d418:	4b25      	ldr	r3, [pc, #148]	; (802d4b0 <__register_exitproc+0xb0>)
 802d41a:	681c      	ldr	r4, [r3, #0]
 802d41c:	b934      	cbnz	r4, 802d42c <__register_exitproc+0x2c>
 802d41e:	4c25      	ldr	r4, [pc, #148]	; (802d4b4 <__register_exitproc+0xb4>)
 802d420:	601c      	str	r4, [r3, #0]
 802d422:	4b25      	ldr	r3, [pc, #148]	; (802d4b8 <__register_exitproc+0xb8>)
 802d424:	b113      	cbz	r3, 802d42c <__register_exitproc+0x2c>
 802d426:	681b      	ldr	r3, [r3, #0]
 802d428:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802d42c:	6863      	ldr	r3, [r4, #4]
 802d42e:	2b1f      	cmp	r3, #31
 802d430:	dd07      	ble.n	802d442 <__register_exitproc+0x42>
 802d432:	f8d8 0000 	ldr.w	r0, [r8]
 802d436:	f7fe ff44 	bl	802c2c2 <__retarget_lock_release_recursive>
 802d43a:	f04f 30ff 	mov.w	r0, #4294967295
 802d43e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802d442:	b34e      	cbz	r6, 802d498 <__register_exitproc+0x98>
 802d444:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802d448:	b988      	cbnz	r0, 802d46e <__register_exitproc+0x6e>
 802d44a:	4b1c      	ldr	r3, [pc, #112]	; (802d4bc <__register_exitproc+0xbc>)
 802d44c:	b923      	cbnz	r3, 802d458 <__register_exitproc+0x58>
 802d44e:	f8d8 0000 	ldr.w	r0, [r8]
 802d452:	f7fe ff35 	bl	802c2c0 <__retarget_lock_release>
 802d456:	e7f0      	b.n	802d43a <__register_exitproc+0x3a>
 802d458:	f44f 7084 	mov.w	r0, #264	; 0x108
 802d45c:	f7fe ff32 	bl	802c2c4 <malloc>
 802d460:	2800      	cmp	r0, #0
 802d462:	d0f4      	beq.n	802d44e <__register_exitproc+0x4e>
 802d464:	2300      	movs	r3, #0
 802d466:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802d46a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802d46e:	6863      	ldr	r3, [r4, #4]
 802d470:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802d474:	2201      	movs	r2, #1
 802d476:	409a      	lsls	r2, r3
 802d478:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802d47c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802d480:	4313      	orrs	r3, r2
 802d482:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802d486:	2e02      	cmp	r6, #2
 802d488:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802d48c:	bf02      	ittt	eq
 802d48e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802d492:	4313      	orreq	r3, r2
 802d494:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802d498:	6863      	ldr	r3, [r4, #4]
 802d49a:	f8d8 0000 	ldr.w	r0, [r8]
 802d49e:	1c5a      	adds	r2, r3, #1
 802d4a0:	3302      	adds	r3, #2
 802d4a2:	6062      	str	r2, [r4, #4]
 802d4a4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802d4a8:	f7fe ff0b 	bl	802c2c2 <__retarget_lock_release_recursive>
 802d4ac:	2000      	movs	r0, #0
 802d4ae:	e7c6      	b.n	802d43e <__register_exitproc+0x3e>
 802d4b0:	2001e480 	.word	0x2001e480
 802d4b4:	2001e3f4 	.word	0x2001e3f4
 802d4b8:	08049b74 	.word	0x08049b74
 802d4bc:	0802c2c5 	.word	0x0802c2c5
 802d4c0:	20000178 	.word	0x20000178

0802d4c4 <_close_r>:
 802d4c4:	b538      	push	{r3, r4, r5, lr}
 802d4c6:	4d06      	ldr	r5, [pc, #24]	; (802d4e0 <_close_r+0x1c>)
 802d4c8:	2300      	movs	r3, #0
 802d4ca:	4604      	mov	r4, r0
 802d4cc:	4608      	mov	r0, r1
 802d4ce:	602b      	str	r3, [r5, #0]
 802d4d0:	f7d6 f8c2 	bl	8003658 <_close>
 802d4d4:	1c43      	adds	r3, r0, #1
 802d4d6:	d102      	bne.n	802d4de <_close_r+0x1a>
 802d4d8:	682b      	ldr	r3, [r5, #0]
 802d4da:	b103      	cbz	r3, 802d4de <_close_r+0x1a>
 802d4dc:	6023      	str	r3, [r4, #0]
 802d4de:	bd38      	pop	{r3, r4, r5, pc}
 802d4e0:	2001e3f0 	.word	0x2001e3f0

0802d4e4 <quorem>:
 802d4e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d4e8:	6903      	ldr	r3, [r0, #16]
 802d4ea:	690c      	ldr	r4, [r1, #16]
 802d4ec:	42a3      	cmp	r3, r4
 802d4ee:	4607      	mov	r7, r0
 802d4f0:	f2c0 8081 	blt.w	802d5f6 <quorem+0x112>
 802d4f4:	3c01      	subs	r4, #1
 802d4f6:	f101 0814 	add.w	r8, r1, #20
 802d4fa:	f100 0514 	add.w	r5, r0, #20
 802d4fe:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802d502:	9301      	str	r3, [sp, #4]
 802d504:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 802d508:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 802d50c:	3301      	adds	r3, #1
 802d50e:	429a      	cmp	r2, r3
 802d510:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 802d514:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 802d518:	fbb2 f6f3 	udiv	r6, r2, r3
 802d51c:	d331      	bcc.n	802d582 <quorem+0x9e>
 802d51e:	f04f 0e00 	mov.w	lr, #0
 802d522:	4640      	mov	r0, r8
 802d524:	46ac      	mov	ip, r5
 802d526:	46f2      	mov	sl, lr
 802d528:	f850 2b04 	ldr.w	r2, [r0], #4
 802d52c:	b293      	uxth	r3, r2
 802d52e:	fb06 e303 	mla	r3, r6, r3, lr
 802d532:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 802d536:	b29b      	uxth	r3, r3
 802d538:	ebaa 0303 	sub.w	r3, sl, r3
 802d53c:	f8dc a000 	ldr.w	sl, [ip]
 802d540:	0c12      	lsrs	r2, r2, #16
 802d542:	fa13 f38a 	uxtah	r3, r3, sl
 802d546:	fb06 e202 	mla	r2, r6, r2, lr
 802d54a:	9300      	str	r3, [sp, #0]
 802d54c:	9b00      	ldr	r3, [sp, #0]
 802d54e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 802d552:	b292      	uxth	r2, r2
 802d554:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 802d558:	eb02 4223 	add.w	r2, r2, r3, asr #16
 802d55c:	f8bd 3000 	ldrh.w	r3, [sp]
 802d560:	4581      	cmp	r9, r0
 802d562:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802d566:	f84c 3b04 	str.w	r3, [ip], #4
 802d56a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 802d56e:	d2db      	bcs.n	802d528 <quorem+0x44>
 802d570:	f855 300b 	ldr.w	r3, [r5, fp]
 802d574:	b92b      	cbnz	r3, 802d582 <quorem+0x9e>
 802d576:	9b01      	ldr	r3, [sp, #4]
 802d578:	3b04      	subs	r3, #4
 802d57a:	429d      	cmp	r5, r3
 802d57c:	461a      	mov	r2, r3
 802d57e:	d32e      	bcc.n	802d5de <quorem+0xfa>
 802d580:	613c      	str	r4, [r7, #16]
 802d582:	4638      	mov	r0, r7
 802d584:	f001 f9f6 	bl	802e974 <__mcmp>
 802d588:	2800      	cmp	r0, #0
 802d58a:	db24      	blt.n	802d5d6 <quorem+0xf2>
 802d58c:	3601      	adds	r6, #1
 802d58e:	4628      	mov	r0, r5
 802d590:	f04f 0c00 	mov.w	ip, #0
 802d594:	f858 2b04 	ldr.w	r2, [r8], #4
 802d598:	f8d0 e000 	ldr.w	lr, [r0]
 802d59c:	b293      	uxth	r3, r2
 802d59e:	ebac 0303 	sub.w	r3, ip, r3
 802d5a2:	0c12      	lsrs	r2, r2, #16
 802d5a4:	fa13 f38e 	uxtah	r3, r3, lr
 802d5a8:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 802d5ac:	eb02 4223 	add.w	r2, r2, r3, asr #16
 802d5b0:	b29b      	uxth	r3, r3
 802d5b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802d5b6:	45c1      	cmp	r9, r8
 802d5b8:	f840 3b04 	str.w	r3, [r0], #4
 802d5bc:	ea4f 4c22 	mov.w	ip, r2, asr #16
 802d5c0:	d2e8      	bcs.n	802d594 <quorem+0xb0>
 802d5c2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 802d5c6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802d5ca:	b922      	cbnz	r2, 802d5d6 <quorem+0xf2>
 802d5cc:	3b04      	subs	r3, #4
 802d5ce:	429d      	cmp	r5, r3
 802d5d0:	461a      	mov	r2, r3
 802d5d2:	d30a      	bcc.n	802d5ea <quorem+0x106>
 802d5d4:	613c      	str	r4, [r7, #16]
 802d5d6:	4630      	mov	r0, r6
 802d5d8:	b003      	add	sp, #12
 802d5da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d5de:	6812      	ldr	r2, [r2, #0]
 802d5e0:	3b04      	subs	r3, #4
 802d5e2:	2a00      	cmp	r2, #0
 802d5e4:	d1cc      	bne.n	802d580 <quorem+0x9c>
 802d5e6:	3c01      	subs	r4, #1
 802d5e8:	e7c7      	b.n	802d57a <quorem+0x96>
 802d5ea:	6812      	ldr	r2, [r2, #0]
 802d5ec:	3b04      	subs	r3, #4
 802d5ee:	2a00      	cmp	r2, #0
 802d5f0:	d1f0      	bne.n	802d5d4 <quorem+0xf0>
 802d5f2:	3c01      	subs	r4, #1
 802d5f4:	e7eb      	b.n	802d5ce <quorem+0xea>
 802d5f6:	2000      	movs	r0, #0
 802d5f8:	e7ee      	b.n	802d5d8 <quorem+0xf4>
 802d5fa:	0000      	movs	r0, r0
 802d5fc:	0000      	movs	r0, r0
	...

0802d600 <_dtoa_r>:
 802d600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d604:	ed2d 8b04 	vpush	{d8-d9}
 802d608:	ec57 6b10 	vmov	r6, r7, d0
 802d60c:	b093      	sub	sp, #76	; 0x4c
 802d60e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 802d610:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 802d614:	9106      	str	r1, [sp, #24]
 802d616:	ee10 aa10 	vmov	sl, s0
 802d61a:	4604      	mov	r4, r0
 802d61c:	9209      	str	r2, [sp, #36]	; 0x24
 802d61e:	930c      	str	r3, [sp, #48]	; 0x30
 802d620:	46bb      	mov	fp, r7
 802d622:	b975      	cbnz	r5, 802d642 <_dtoa_r+0x42>
 802d624:	2010      	movs	r0, #16
 802d626:	f7fe fe4d 	bl	802c2c4 <malloc>
 802d62a:	4602      	mov	r2, r0
 802d62c:	6260      	str	r0, [r4, #36]	; 0x24
 802d62e:	b920      	cbnz	r0, 802d63a <_dtoa_r+0x3a>
 802d630:	4ba7      	ldr	r3, [pc, #668]	; (802d8d0 <_dtoa_r+0x2d0>)
 802d632:	21ea      	movs	r1, #234	; 0xea
 802d634:	48a7      	ldr	r0, [pc, #668]	; (802d8d4 <_dtoa_r+0x2d4>)
 802d636:	f7fe fcdd 	bl	802bff4 <__assert_func>
 802d63a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 802d63e:	6005      	str	r5, [r0, #0]
 802d640:	60c5      	str	r5, [r0, #12]
 802d642:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d644:	6819      	ldr	r1, [r3, #0]
 802d646:	b151      	cbz	r1, 802d65e <_dtoa_r+0x5e>
 802d648:	685a      	ldr	r2, [r3, #4]
 802d64a:	604a      	str	r2, [r1, #4]
 802d64c:	2301      	movs	r3, #1
 802d64e:	4093      	lsls	r3, r2
 802d650:	608b      	str	r3, [r1, #8]
 802d652:	4620      	mov	r0, r4
 802d654:	f000 ff4c 	bl	802e4f0 <_Bfree>
 802d658:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d65a:	2200      	movs	r2, #0
 802d65c:	601a      	str	r2, [r3, #0]
 802d65e:	1e3b      	subs	r3, r7, #0
 802d660:	bfaa      	itet	ge
 802d662:	2300      	movge	r3, #0
 802d664:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 802d668:	f8c8 3000 	strge.w	r3, [r8]
 802d66c:	4b9a      	ldr	r3, [pc, #616]	; (802d8d8 <_dtoa_r+0x2d8>)
 802d66e:	bfbc      	itt	lt
 802d670:	2201      	movlt	r2, #1
 802d672:	f8c8 2000 	strlt.w	r2, [r8]
 802d676:	ea33 030b 	bics.w	r3, r3, fp
 802d67a:	d11b      	bne.n	802d6b4 <_dtoa_r+0xb4>
 802d67c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802d67e:	f242 730f 	movw	r3, #9999	; 0x270f
 802d682:	6013      	str	r3, [r2, #0]
 802d684:	f3cb 0313 	ubfx	r3, fp, #0, #20
 802d688:	4333      	orrs	r3, r6
 802d68a:	f000 8592 	beq.w	802e1b2 <_dtoa_r+0xbb2>
 802d68e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802d690:	b963      	cbnz	r3, 802d6ac <_dtoa_r+0xac>
 802d692:	4b92      	ldr	r3, [pc, #584]	; (802d8dc <_dtoa_r+0x2dc>)
 802d694:	e022      	b.n	802d6dc <_dtoa_r+0xdc>
 802d696:	4b92      	ldr	r3, [pc, #584]	; (802d8e0 <_dtoa_r+0x2e0>)
 802d698:	9301      	str	r3, [sp, #4]
 802d69a:	3308      	adds	r3, #8
 802d69c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802d69e:	6013      	str	r3, [r2, #0]
 802d6a0:	9801      	ldr	r0, [sp, #4]
 802d6a2:	b013      	add	sp, #76	; 0x4c
 802d6a4:	ecbd 8b04 	vpop	{d8-d9}
 802d6a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d6ac:	4b8b      	ldr	r3, [pc, #556]	; (802d8dc <_dtoa_r+0x2dc>)
 802d6ae:	9301      	str	r3, [sp, #4]
 802d6b0:	3303      	adds	r3, #3
 802d6b2:	e7f3      	b.n	802d69c <_dtoa_r+0x9c>
 802d6b4:	2200      	movs	r2, #0
 802d6b6:	2300      	movs	r3, #0
 802d6b8:	4650      	mov	r0, sl
 802d6ba:	4659      	mov	r1, fp
 802d6bc:	f7d3 fa74 	bl	8000ba8 <__aeabi_dcmpeq>
 802d6c0:	ec4b ab19 	vmov	d9, sl, fp
 802d6c4:	4680      	mov	r8, r0
 802d6c6:	b158      	cbz	r0, 802d6e0 <_dtoa_r+0xe0>
 802d6c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802d6ca:	2301      	movs	r3, #1
 802d6cc:	6013      	str	r3, [r2, #0]
 802d6ce:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802d6d0:	2b00      	cmp	r3, #0
 802d6d2:	f000 856b 	beq.w	802e1ac <_dtoa_r+0xbac>
 802d6d6:	4883      	ldr	r0, [pc, #524]	; (802d8e4 <_dtoa_r+0x2e4>)
 802d6d8:	6018      	str	r0, [r3, #0]
 802d6da:	1e43      	subs	r3, r0, #1
 802d6dc:	9301      	str	r3, [sp, #4]
 802d6de:	e7df      	b.n	802d6a0 <_dtoa_r+0xa0>
 802d6e0:	ec4b ab10 	vmov	d0, sl, fp
 802d6e4:	aa10      	add	r2, sp, #64	; 0x40
 802d6e6:	a911      	add	r1, sp, #68	; 0x44
 802d6e8:	4620      	mov	r0, r4
 802d6ea:	f001 f9e9 	bl	802eac0 <__d2b>
 802d6ee:	f3cb 550a 	ubfx	r5, fp, #20, #11
 802d6f2:	ee08 0a10 	vmov	s16, r0
 802d6f6:	2d00      	cmp	r5, #0
 802d6f8:	f000 8084 	beq.w	802d804 <_dtoa_r+0x204>
 802d6fc:	ee19 3a90 	vmov	r3, s19
 802d700:	f3c3 0313 	ubfx	r3, r3, #0, #20
 802d704:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 802d708:	4656      	mov	r6, sl
 802d70a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 802d70e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 802d712:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 802d716:	4b74      	ldr	r3, [pc, #464]	; (802d8e8 <_dtoa_r+0x2e8>)
 802d718:	2200      	movs	r2, #0
 802d71a:	4630      	mov	r0, r6
 802d71c:	4639      	mov	r1, r7
 802d71e:	f7d2 fe23 	bl	8000368 <__aeabi_dsub>
 802d722:	a365      	add	r3, pc, #404	; (adr r3, 802d8b8 <_dtoa_r+0x2b8>)
 802d724:	e9d3 2300 	ldrd	r2, r3, [r3]
 802d728:	f7d2 ffd6 	bl	80006d8 <__aeabi_dmul>
 802d72c:	a364      	add	r3, pc, #400	; (adr r3, 802d8c0 <_dtoa_r+0x2c0>)
 802d72e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802d732:	f7d2 fe1b 	bl	800036c <__adddf3>
 802d736:	4606      	mov	r6, r0
 802d738:	4628      	mov	r0, r5
 802d73a:	460f      	mov	r7, r1
 802d73c:	f7d2 ff62 	bl	8000604 <__aeabi_i2d>
 802d740:	a361      	add	r3, pc, #388	; (adr r3, 802d8c8 <_dtoa_r+0x2c8>)
 802d742:	e9d3 2300 	ldrd	r2, r3, [r3]
 802d746:	f7d2 ffc7 	bl	80006d8 <__aeabi_dmul>
 802d74a:	4602      	mov	r2, r0
 802d74c:	460b      	mov	r3, r1
 802d74e:	4630      	mov	r0, r6
 802d750:	4639      	mov	r1, r7
 802d752:	f7d2 fe0b 	bl	800036c <__adddf3>
 802d756:	4606      	mov	r6, r0
 802d758:	460f      	mov	r7, r1
 802d75a:	f7d3 fa6d 	bl	8000c38 <__aeabi_d2iz>
 802d75e:	2200      	movs	r2, #0
 802d760:	9000      	str	r0, [sp, #0]
 802d762:	2300      	movs	r3, #0
 802d764:	4630      	mov	r0, r6
 802d766:	4639      	mov	r1, r7
 802d768:	f7d3 fa28 	bl	8000bbc <__aeabi_dcmplt>
 802d76c:	b150      	cbz	r0, 802d784 <_dtoa_r+0x184>
 802d76e:	9800      	ldr	r0, [sp, #0]
 802d770:	f7d2 ff48 	bl	8000604 <__aeabi_i2d>
 802d774:	4632      	mov	r2, r6
 802d776:	463b      	mov	r3, r7
 802d778:	f7d3 fa16 	bl	8000ba8 <__aeabi_dcmpeq>
 802d77c:	b910      	cbnz	r0, 802d784 <_dtoa_r+0x184>
 802d77e:	9b00      	ldr	r3, [sp, #0]
 802d780:	3b01      	subs	r3, #1
 802d782:	9300      	str	r3, [sp, #0]
 802d784:	9b00      	ldr	r3, [sp, #0]
 802d786:	2b16      	cmp	r3, #22
 802d788:	d85a      	bhi.n	802d840 <_dtoa_r+0x240>
 802d78a:	9a00      	ldr	r2, [sp, #0]
 802d78c:	4b57      	ldr	r3, [pc, #348]	; (802d8ec <_dtoa_r+0x2ec>)
 802d78e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802d792:	e9d3 2300 	ldrd	r2, r3, [r3]
 802d796:	ec51 0b19 	vmov	r0, r1, d9
 802d79a:	f7d3 fa0f 	bl	8000bbc <__aeabi_dcmplt>
 802d79e:	2800      	cmp	r0, #0
 802d7a0:	d050      	beq.n	802d844 <_dtoa_r+0x244>
 802d7a2:	9b00      	ldr	r3, [sp, #0]
 802d7a4:	3b01      	subs	r3, #1
 802d7a6:	9300      	str	r3, [sp, #0]
 802d7a8:	2300      	movs	r3, #0
 802d7aa:	930b      	str	r3, [sp, #44]	; 0x2c
 802d7ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802d7ae:	1b5d      	subs	r5, r3, r5
 802d7b0:	1e6b      	subs	r3, r5, #1
 802d7b2:	9305      	str	r3, [sp, #20]
 802d7b4:	bf45      	ittet	mi
 802d7b6:	f1c5 0301 	rsbmi	r3, r5, #1
 802d7ba:	9304      	strmi	r3, [sp, #16]
 802d7bc:	2300      	movpl	r3, #0
 802d7be:	2300      	movmi	r3, #0
 802d7c0:	bf4c      	ite	mi
 802d7c2:	9305      	strmi	r3, [sp, #20]
 802d7c4:	9304      	strpl	r3, [sp, #16]
 802d7c6:	9b00      	ldr	r3, [sp, #0]
 802d7c8:	2b00      	cmp	r3, #0
 802d7ca:	db3d      	blt.n	802d848 <_dtoa_r+0x248>
 802d7cc:	9b05      	ldr	r3, [sp, #20]
 802d7ce:	9a00      	ldr	r2, [sp, #0]
 802d7d0:	920a      	str	r2, [sp, #40]	; 0x28
 802d7d2:	4413      	add	r3, r2
 802d7d4:	9305      	str	r3, [sp, #20]
 802d7d6:	2300      	movs	r3, #0
 802d7d8:	9307      	str	r3, [sp, #28]
 802d7da:	9b06      	ldr	r3, [sp, #24]
 802d7dc:	2b09      	cmp	r3, #9
 802d7de:	f200 8089 	bhi.w	802d8f4 <_dtoa_r+0x2f4>
 802d7e2:	2b05      	cmp	r3, #5
 802d7e4:	bfc4      	itt	gt
 802d7e6:	3b04      	subgt	r3, #4
 802d7e8:	9306      	strgt	r3, [sp, #24]
 802d7ea:	9b06      	ldr	r3, [sp, #24]
 802d7ec:	f1a3 0302 	sub.w	r3, r3, #2
 802d7f0:	bfcc      	ite	gt
 802d7f2:	2500      	movgt	r5, #0
 802d7f4:	2501      	movle	r5, #1
 802d7f6:	2b03      	cmp	r3, #3
 802d7f8:	f200 8087 	bhi.w	802d90a <_dtoa_r+0x30a>
 802d7fc:	e8df f003 	tbb	[pc, r3]
 802d800:	59383a2d 	.word	0x59383a2d
 802d804:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 802d808:	441d      	add	r5, r3
 802d80a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 802d80e:	2b20      	cmp	r3, #32
 802d810:	bfc1      	itttt	gt
 802d812:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 802d816:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 802d81a:	fa0b f303 	lslgt.w	r3, fp, r3
 802d81e:	fa26 f000 	lsrgt.w	r0, r6, r0
 802d822:	bfda      	itte	le
 802d824:	f1c3 0320 	rsble	r3, r3, #32
 802d828:	fa06 f003 	lslle.w	r0, r6, r3
 802d82c:	4318      	orrgt	r0, r3
 802d82e:	f7d2 fed9 	bl	80005e4 <__aeabi_ui2d>
 802d832:	2301      	movs	r3, #1
 802d834:	4606      	mov	r6, r0
 802d836:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 802d83a:	3d01      	subs	r5, #1
 802d83c:	930e      	str	r3, [sp, #56]	; 0x38
 802d83e:	e76a      	b.n	802d716 <_dtoa_r+0x116>
 802d840:	2301      	movs	r3, #1
 802d842:	e7b2      	b.n	802d7aa <_dtoa_r+0x1aa>
 802d844:	900b      	str	r0, [sp, #44]	; 0x2c
 802d846:	e7b1      	b.n	802d7ac <_dtoa_r+0x1ac>
 802d848:	9b04      	ldr	r3, [sp, #16]
 802d84a:	9a00      	ldr	r2, [sp, #0]
 802d84c:	1a9b      	subs	r3, r3, r2
 802d84e:	9304      	str	r3, [sp, #16]
 802d850:	4253      	negs	r3, r2
 802d852:	9307      	str	r3, [sp, #28]
 802d854:	2300      	movs	r3, #0
 802d856:	930a      	str	r3, [sp, #40]	; 0x28
 802d858:	e7bf      	b.n	802d7da <_dtoa_r+0x1da>
 802d85a:	2300      	movs	r3, #0
 802d85c:	9308      	str	r3, [sp, #32]
 802d85e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802d860:	2b00      	cmp	r3, #0
 802d862:	dc55      	bgt.n	802d910 <_dtoa_r+0x310>
 802d864:	2301      	movs	r3, #1
 802d866:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802d86a:	461a      	mov	r2, r3
 802d86c:	9209      	str	r2, [sp, #36]	; 0x24
 802d86e:	e00c      	b.n	802d88a <_dtoa_r+0x28a>
 802d870:	2301      	movs	r3, #1
 802d872:	e7f3      	b.n	802d85c <_dtoa_r+0x25c>
 802d874:	2300      	movs	r3, #0
 802d876:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802d878:	9308      	str	r3, [sp, #32]
 802d87a:	9b00      	ldr	r3, [sp, #0]
 802d87c:	4413      	add	r3, r2
 802d87e:	9302      	str	r3, [sp, #8]
 802d880:	3301      	adds	r3, #1
 802d882:	2b01      	cmp	r3, #1
 802d884:	9303      	str	r3, [sp, #12]
 802d886:	bfb8      	it	lt
 802d888:	2301      	movlt	r3, #1
 802d88a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 802d88c:	2200      	movs	r2, #0
 802d88e:	6042      	str	r2, [r0, #4]
 802d890:	2204      	movs	r2, #4
 802d892:	f102 0614 	add.w	r6, r2, #20
 802d896:	429e      	cmp	r6, r3
 802d898:	6841      	ldr	r1, [r0, #4]
 802d89a:	d93d      	bls.n	802d918 <_dtoa_r+0x318>
 802d89c:	4620      	mov	r0, r4
 802d89e:	f000 fde7 	bl	802e470 <_Balloc>
 802d8a2:	9001      	str	r0, [sp, #4]
 802d8a4:	2800      	cmp	r0, #0
 802d8a6:	d13b      	bne.n	802d920 <_dtoa_r+0x320>
 802d8a8:	4b11      	ldr	r3, [pc, #68]	; (802d8f0 <_dtoa_r+0x2f0>)
 802d8aa:	4602      	mov	r2, r0
 802d8ac:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 802d8b0:	e6c0      	b.n	802d634 <_dtoa_r+0x34>
 802d8b2:	2301      	movs	r3, #1
 802d8b4:	e7df      	b.n	802d876 <_dtoa_r+0x276>
 802d8b6:	bf00      	nop
 802d8b8:	636f4361 	.word	0x636f4361
 802d8bc:	3fd287a7 	.word	0x3fd287a7
 802d8c0:	8b60c8b3 	.word	0x8b60c8b3
 802d8c4:	3fc68a28 	.word	0x3fc68a28
 802d8c8:	509f79fb 	.word	0x509f79fb
 802d8cc:	3fd34413 	.word	0x3fd34413
 802d8d0:	08049b85 	.word	0x08049b85
 802d8d4:	08049b9c 	.word	0x08049b9c
 802d8d8:	7ff00000 	.word	0x7ff00000
 802d8dc:	08049b81 	.word	0x08049b81
 802d8e0:	08049b78 	.word	0x08049b78
 802d8e4:	08034009 	.word	0x08034009
 802d8e8:	3ff80000 	.word	0x3ff80000
 802d8ec:	08049c90 	.word	0x08049c90
 802d8f0:	08049bf7 	.word	0x08049bf7
 802d8f4:	2501      	movs	r5, #1
 802d8f6:	2300      	movs	r3, #0
 802d8f8:	9306      	str	r3, [sp, #24]
 802d8fa:	9508      	str	r5, [sp, #32]
 802d8fc:	f04f 33ff 	mov.w	r3, #4294967295
 802d900:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802d904:	2200      	movs	r2, #0
 802d906:	2312      	movs	r3, #18
 802d908:	e7b0      	b.n	802d86c <_dtoa_r+0x26c>
 802d90a:	2301      	movs	r3, #1
 802d90c:	9308      	str	r3, [sp, #32]
 802d90e:	e7f5      	b.n	802d8fc <_dtoa_r+0x2fc>
 802d910:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802d912:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802d916:	e7b8      	b.n	802d88a <_dtoa_r+0x28a>
 802d918:	3101      	adds	r1, #1
 802d91a:	6041      	str	r1, [r0, #4]
 802d91c:	0052      	lsls	r2, r2, #1
 802d91e:	e7b8      	b.n	802d892 <_dtoa_r+0x292>
 802d920:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d922:	9a01      	ldr	r2, [sp, #4]
 802d924:	601a      	str	r2, [r3, #0]
 802d926:	9b03      	ldr	r3, [sp, #12]
 802d928:	2b0e      	cmp	r3, #14
 802d92a:	f200 809d 	bhi.w	802da68 <_dtoa_r+0x468>
 802d92e:	2d00      	cmp	r5, #0
 802d930:	f000 809a 	beq.w	802da68 <_dtoa_r+0x468>
 802d934:	9b00      	ldr	r3, [sp, #0]
 802d936:	2b00      	cmp	r3, #0
 802d938:	dd32      	ble.n	802d9a0 <_dtoa_r+0x3a0>
 802d93a:	4ab7      	ldr	r2, [pc, #732]	; (802dc18 <_dtoa_r+0x618>)
 802d93c:	f003 030f 	and.w	r3, r3, #15
 802d940:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 802d944:	e9d3 8900 	ldrd	r8, r9, [r3]
 802d948:	9b00      	ldr	r3, [sp, #0]
 802d94a:	05d8      	lsls	r0, r3, #23
 802d94c:	ea4f 1723 	mov.w	r7, r3, asr #4
 802d950:	d516      	bpl.n	802d980 <_dtoa_r+0x380>
 802d952:	4bb2      	ldr	r3, [pc, #712]	; (802dc1c <_dtoa_r+0x61c>)
 802d954:	ec51 0b19 	vmov	r0, r1, d9
 802d958:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 802d95c:	f7d2 ffe6 	bl	800092c <__aeabi_ddiv>
 802d960:	f007 070f 	and.w	r7, r7, #15
 802d964:	4682      	mov	sl, r0
 802d966:	468b      	mov	fp, r1
 802d968:	2503      	movs	r5, #3
 802d96a:	4eac      	ldr	r6, [pc, #688]	; (802dc1c <_dtoa_r+0x61c>)
 802d96c:	b957      	cbnz	r7, 802d984 <_dtoa_r+0x384>
 802d96e:	4642      	mov	r2, r8
 802d970:	464b      	mov	r3, r9
 802d972:	4650      	mov	r0, sl
 802d974:	4659      	mov	r1, fp
 802d976:	f7d2 ffd9 	bl	800092c <__aeabi_ddiv>
 802d97a:	4682      	mov	sl, r0
 802d97c:	468b      	mov	fp, r1
 802d97e:	e028      	b.n	802d9d2 <_dtoa_r+0x3d2>
 802d980:	2502      	movs	r5, #2
 802d982:	e7f2      	b.n	802d96a <_dtoa_r+0x36a>
 802d984:	07f9      	lsls	r1, r7, #31
 802d986:	d508      	bpl.n	802d99a <_dtoa_r+0x39a>
 802d988:	4640      	mov	r0, r8
 802d98a:	4649      	mov	r1, r9
 802d98c:	e9d6 2300 	ldrd	r2, r3, [r6]
 802d990:	f7d2 fea2 	bl	80006d8 <__aeabi_dmul>
 802d994:	3501      	adds	r5, #1
 802d996:	4680      	mov	r8, r0
 802d998:	4689      	mov	r9, r1
 802d99a:	107f      	asrs	r7, r7, #1
 802d99c:	3608      	adds	r6, #8
 802d99e:	e7e5      	b.n	802d96c <_dtoa_r+0x36c>
 802d9a0:	f000 809b 	beq.w	802dada <_dtoa_r+0x4da>
 802d9a4:	9b00      	ldr	r3, [sp, #0]
 802d9a6:	4f9d      	ldr	r7, [pc, #628]	; (802dc1c <_dtoa_r+0x61c>)
 802d9a8:	425e      	negs	r6, r3
 802d9aa:	4b9b      	ldr	r3, [pc, #620]	; (802dc18 <_dtoa_r+0x618>)
 802d9ac:	f006 020f 	and.w	r2, r6, #15
 802d9b0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802d9b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 802d9b8:	ec51 0b19 	vmov	r0, r1, d9
 802d9bc:	f7d2 fe8c 	bl	80006d8 <__aeabi_dmul>
 802d9c0:	1136      	asrs	r6, r6, #4
 802d9c2:	4682      	mov	sl, r0
 802d9c4:	468b      	mov	fp, r1
 802d9c6:	2300      	movs	r3, #0
 802d9c8:	2502      	movs	r5, #2
 802d9ca:	2e00      	cmp	r6, #0
 802d9cc:	d17a      	bne.n	802dac4 <_dtoa_r+0x4c4>
 802d9ce:	2b00      	cmp	r3, #0
 802d9d0:	d1d3      	bne.n	802d97a <_dtoa_r+0x37a>
 802d9d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802d9d4:	2b00      	cmp	r3, #0
 802d9d6:	f000 8082 	beq.w	802dade <_dtoa_r+0x4de>
 802d9da:	4b91      	ldr	r3, [pc, #580]	; (802dc20 <_dtoa_r+0x620>)
 802d9dc:	2200      	movs	r2, #0
 802d9de:	4650      	mov	r0, sl
 802d9e0:	4659      	mov	r1, fp
 802d9e2:	f7d3 f8eb 	bl	8000bbc <__aeabi_dcmplt>
 802d9e6:	2800      	cmp	r0, #0
 802d9e8:	d079      	beq.n	802dade <_dtoa_r+0x4de>
 802d9ea:	9b03      	ldr	r3, [sp, #12]
 802d9ec:	2b00      	cmp	r3, #0
 802d9ee:	d076      	beq.n	802dade <_dtoa_r+0x4de>
 802d9f0:	9b02      	ldr	r3, [sp, #8]
 802d9f2:	2b00      	cmp	r3, #0
 802d9f4:	dd36      	ble.n	802da64 <_dtoa_r+0x464>
 802d9f6:	9b00      	ldr	r3, [sp, #0]
 802d9f8:	4650      	mov	r0, sl
 802d9fa:	4659      	mov	r1, fp
 802d9fc:	1e5f      	subs	r7, r3, #1
 802d9fe:	2200      	movs	r2, #0
 802da00:	4b88      	ldr	r3, [pc, #544]	; (802dc24 <_dtoa_r+0x624>)
 802da02:	f7d2 fe69 	bl	80006d8 <__aeabi_dmul>
 802da06:	9e02      	ldr	r6, [sp, #8]
 802da08:	4682      	mov	sl, r0
 802da0a:	468b      	mov	fp, r1
 802da0c:	3501      	adds	r5, #1
 802da0e:	4628      	mov	r0, r5
 802da10:	f7d2 fdf8 	bl	8000604 <__aeabi_i2d>
 802da14:	4652      	mov	r2, sl
 802da16:	465b      	mov	r3, fp
 802da18:	f7d2 fe5e 	bl	80006d8 <__aeabi_dmul>
 802da1c:	4b82      	ldr	r3, [pc, #520]	; (802dc28 <_dtoa_r+0x628>)
 802da1e:	2200      	movs	r2, #0
 802da20:	f7d2 fca4 	bl	800036c <__adddf3>
 802da24:	46d0      	mov	r8, sl
 802da26:	46d9      	mov	r9, fp
 802da28:	4682      	mov	sl, r0
 802da2a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 802da2e:	2e00      	cmp	r6, #0
 802da30:	d158      	bne.n	802dae4 <_dtoa_r+0x4e4>
 802da32:	4b7e      	ldr	r3, [pc, #504]	; (802dc2c <_dtoa_r+0x62c>)
 802da34:	2200      	movs	r2, #0
 802da36:	4640      	mov	r0, r8
 802da38:	4649      	mov	r1, r9
 802da3a:	f7d2 fc95 	bl	8000368 <__aeabi_dsub>
 802da3e:	4652      	mov	r2, sl
 802da40:	465b      	mov	r3, fp
 802da42:	4680      	mov	r8, r0
 802da44:	4689      	mov	r9, r1
 802da46:	f7d3 f8d7 	bl	8000bf8 <__aeabi_dcmpgt>
 802da4a:	2800      	cmp	r0, #0
 802da4c:	f040 8295 	bne.w	802df7a <_dtoa_r+0x97a>
 802da50:	4652      	mov	r2, sl
 802da52:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 802da56:	4640      	mov	r0, r8
 802da58:	4649      	mov	r1, r9
 802da5a:	f7d3 f8af 	bl	8000bbc <__aeabi_dcmplt>
 802da5e:	2800      	cmp	r0, #0
 802da60:	f040 8289 	bne.w	802df76 <_dtoa_r+0x976>
 802da64:	ec5b ab19 	vmov	sl, fp, d9
 802da68:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802da6a:	2b00      	cmp	r3, #0
 802da6c:	f2c0 8148 	blt.w	802dd00 <_dtoa_r+0x700>
 802da70:	9a00      	ldr	r2, [sp, #0]
 802da72:	2a0e      	cmp	r2, #14
 802da74:	f300 8144 	bgt.w	802dd00 <_dtoa_r+0x700>
 802da78:	4b67      	ldr	r3, [pc, #412]	; (802dc18 <_dtoa_r+0x618>)
 802da7a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802da7e:	e9d3 8900 	ldrd	r8, r9, [r3]
 802da82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802da84:	2b00      	cmp	r3, #0
 802da86:	f280 80d5 	bge.w	802dc34 <_dtoa_r+0x634>
 802da8a:	9b03      	ldr	r3, [sp, #12]
 802da8c:	2b00      	cmp	r3, #0
 802da8e:	f300 80d1 	bgt.w	802dc34 <_dtoa_r+0x634>
 802da92:	f040 826f 	bne.w	802df74 <_dtoa_r+0x974>
 802da96:	4b65      	ldr	r3, [pc, #404]	; (802dc2c <_dtoa_r+0x62c>)
 802da98:	2200      	movs	r2, #0
 802da9a:	4640      	mov	r0, r8
 802da9c:	4649      	mov	r1, r9
 802da9e:	f7d2 fe1b 	bl	80006d8 <__aeabi_dmul>
 802daa2:	4652      	mov	r2, sl
 802daa4:	465b      	mov	r3, fp
 802daa6:	f7d3 f89d 	bl	8000be4 <__aeabi_dcmpge>
 802daaa:	9e03      	ldr	r6, [sp, #12]
 802daac:	4637      	mov	r7, r6
 802daae:	2800      	cmp	r0, #0
 802dab0:	f040 8245 	bne.w	802df3e <_dtoa_r+0x93e>
 802dab4:	9d01      	ldr	r5, [sp, #4]
 802dab6:	2331      	movs	r3, #49	; 0x31
 802dab8:	f805 3b01 	strb.w	r3, [r5], #1
 802dabc:	9b00      	ldr	r3, [sp, #0]
 802dabe:	3301      	adds	r3, #1
 802dac0:	9300      	str	r3, [sp, #0]
 802dac2:	e240      	b.n	802df46 <_dtoa_r+0x946>
 802dac4:	07f2      	lsls	r2, r6, #31
 802dac6:	d505      	bpl.n	802dad4 <_dtoa_r+0x4d4>
 802dac8:	e9d7 2300 	ldrd	r2, r3, [r7]
 802dacc:	f7d2 fe04 	bl	80006d8 <__aeabi_dmul>
 802dad0:	3501      	adds	r5, #1
 802dad2:	2301      	movs	r3, #1
 802dad4:	1076      	asrs	r6, r6, #1
 802dad6:	3708      	adds	r7, #8
 802dad8:	e777      	b.n	802d9ca <_dtoa_r+0x3ca>
 802dada:	2502      	movs	r5, #2
 802dadc:	e779      	b.n	802d9d2 <_dtoa_r+0x3d2>
 802dade:	9f00      	ldr	r7, [sp, #0]
 802dae0:	9e03      	ldr	r6, [sp, #12]
 802dae2:	e794      	b.n	802da0e <_dtoa_r+0x40e>
 802dae4:	9901      	ldr	r1, [sp, #4]
 802dae6:	4b4c      	ldr	r3, [pc, #304]	; (802dc18 <_dtoa_r+0x618>)
 802dae8:	4431      	add	r1, r6
 802daea:	910d      	str	r1, [sp, #52]	; 0x34
 802daec:	9908      	ldr	r1, [sp, #32]
 802daee:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 802daf2:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 802daf6:	2900      	cmp	r1, #0
 802daf8:	d043      	beq.n	802db82 <_dtoa_r+0x582>
 802dafa:	494d      	ldr	r1, [pc, #308]	; (802dc30 <_dtoa_r+0x630>)
 802dafc:	2000      	movs	r0, #0
 802dafe:	f7d2 ff15 	bl	800092c <__aeabi_ddiv>
 802db02:	4652      	mov	r2, sl
 802db04:	465b      	mov	r3, fp
 802db06:	f7d2 fc2f 	bl	8000368 <__aeabi_dsub>
 802db0a:	9d01      	ldr	r5, [sp, #4]
 802db0c:	4682      	mov	sl, r0
 802db0e:	468b      	mov	fp, r1
 802db10:	4649      	mov	r1, r9
 802db12:	4640      	mov	r0, r8
 802db14:	f7d3 f890 	bl	8000c38 <__aeabi_d2iz>
 802db18:	4606      	mov	r6, r0
 802db1a:	f7d2 fd73 	bl	8000604 <__aeabi_i2d>
 802db1e:	4602      	mov	r2, r0
 802db20:	460b      	mov	r3, r1
 802db22:	4640      	mov	r0, r8
 802db24:	4649      	mov	r1, r9
 802db26:	f7d2 fc1f 	bl	8000368 <__aeabi_dsub>
 802db2a:	3630      	adds	r6, #48	; 0x30
 802db2c:	f805 6b01 	strb.w	r6, [r5], #1
 802db30:	4652      	mov	r2, sl
 802db32:	465b      	mov	r3, fp
 802db34:	4680      	mov	r8, r0
 802db36:	4689      	mov	r9, r1
 802db38:	f7d3 f840 	bl	8000bbc <__aeabi_dcmplt>
 802db3c:	2800      	cmp	r0, #0
 802db3e:	d163      	bne.n	802dc08 <_dtoa_r+0x608>
 802db40:	4642      	mov	r2, r8
 802db42:	464b      	mov	r3, r9
 802db44:	4936      	ldr	r1, [pc, #216]	; (802dc20 <_dtoa_r+0x620>)
 802db46:	2000      	movs	r0, #0
 802db48:	f7d2 fc0e 	bl	8000368 <__aeabi_dsub>
 802db4c:	4652      	mov	r2, sl
 802db4e:	465b      	mov	r3, fp
 802db50:	f7d3 f834 	bl	8000bbc <__aeabi_dcmplt>
 802db54:	2800      	cmp	r0, #0
 802db56:	f040 80b5 	bne.w	802dcc4 <_dtoa_r+0x6c4>
 802db5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802db5c:	429d      	cmp	r5, r3
 802db5e:	d081      	beq.n	802da64 <_dtoa_r+0x464>
 802db60:	4b30      	ldr	r3, [pc, #192]	; (802dc24 <_dtoa_r+0x624>)
 802db62:	2200      	movs	r2, #0
 802db64:	4650      	mov	r0, sl
 802db66:	4659      	mov	r1, fp
 802db68:	f7d2 fdb6 	bl	80006d8 <__aeabi_dmul>
 802db6c:	4b2d      	ldr	r3, [pc, #180]	; (802dc24 <_dtoa_r+0x624>)
 802db6e:	4682      	mov	sl, r0
 802db70:	468b      	mov	fp, r1
 802db72:	4640      	mov	r0, r8
 802db74:	4649      	mov	r1, r9
 802db76:	2200      	movs	r2, #0
 802db78:	f7d2 fdae 	bl	80006d8 <__aeabi_dmul>
 802db7c:	4680      	mov	r8, r0
 802db7e:	4689      	mov	r9, r1
 802db80:	e7c6      	b.n	802db10 <_dtoa_r+0x510>
 802db82:	4650      	mov	r0, sl
 802db84:	4659      	mov	r1, fp
 802db86:	f7d2 fda7 	bl	80006d8 <__aeabi_dmul>
 802db8a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802db8c:	9d01      	ldr	r5, [sp, #4]
 802db8e:	930f      	str	r3, [sp, #60]	; 0x3c
 802db90:	4682      	mov	sl, r0
 802db92:	468b      	mov	fp, r1
 802db94:	4649      	mov	r1, r9
 802db96:	4640      	mov	r0, r8
 802db98:	f7d3 f84e 	bl	8000c38 <__aeabi_d2iz>
 802db9c:	4606      	mov	r6, r0
 802db9e:	f7d2 fd31 	bl	8000604 <__aeabi_i2d>
 802dba2:	3630      	adds	r6, #48	; 0x30
 802dba4:	4602      	mov	r2, r0
 802dba6:	460b      	mov	r3, r1
 802dba8:	4640      	mov	r0, r8
 802dbaa:	4649      	mov	r1, r9
 802dbac:	f7d2 fbdc 	bl	8000368 <__aeabi_dsub>
 802dbb0:	f805 6b01 	strb.w	r6, [r5], #1
 802dbb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802dbb6:	429d      	cmp	r5, r3
 802dbb8:	4680      	mov	r8, r0
 802dbba:	4689      	mov	r9, r1
 802dbbc:	f04f 0200 	mov.w	r2, #0
 802dbc0:	d124      	bne.n	802dc0c <_dtoa_r+0x60c>
 802dbc2:	4b1b      	ldr	r3, [pc, #108]	; (802dc30 <_dtoa_r+0x630>)
 802dbc4:	4650      	mov	r0, sl
 802dbc6:	4659      	mov	r1, fp
 802dbc8:	f7d2 fbd0 	bl	800036c <__adddf3>
 802dbcc:	4602      	mov	r2, r0
 802dbce:	460b      	mov	r3, r1
 802dbd0:	4640      	mov	r0, r8
 802dbd2:	4649      	mov	r1, r9
 802dbd4:	f7d3 f810 	bl	8000bf8 <__aeabi_dcmpgt>
 802dbd8:	2800      	cmp	r0, #0
 802dbda:	d173      	bne.n	802dcc4 <_dtoa_r+0x6c4>
 802dbdc:	4652      	mov	r2, sl
 802dbde:	465b      	mov	r3, fp
 802dbe0:	4913      	ldr	r1, [pc, #76]	; (802dc30 <_dtoa_r+0x630>)
 802dbe2:	2000      	movs	r0, #0
 802dbe4:	f7d2 fbc0 	bl	8000368 <__aeabi_dsub>
 802dbe8:	4602      	mov	r2, r0
 802dbea:	460b      	mov	r3, r1
 802dbec:	4640      	mov	r0, r8
 802dbee:	4649      	mov	r1, r9
 802dbf0:	f7d2 ffe4 	bl	8000bbc <__aeabi_dcmplt>
 802dbf4:	2800      	cmp	r0, #0
 802dbf6:	f43f af35 	beq.w	802da64 <_dtoa_r+0x464>
 802dbfa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802dbfc:	1e6b      	subs	r3, r5, #1
 802dbfe:	930f      	str	r3, [sp, #60]	; 0x3c
 802dc00:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 802dc04:	2b30      	cmp	r3, #48	; 0x30
 802dc06:	d0f8      	beq.n	802dbfa <_dtoa_r+0x5fa>
 802dc08:	9700      	str	r7, [sp, #0]
 802dc0a:	e049      	b.n	802dca0 <_dtoa_r+0x6a0>
 802dc0c:	4b05      	ldr	r3, [pc, #20]	; (802dc24 <_dtoa_r+0x624>)
 802dc0e:	f7d2 fd63 	bl	80006d8 <__aeabi_dmul>
 802dc12:	4680      	mov	r8, r0
 802dc14:	4689      	mov	r9, r1
 802dc16:	e7bd      	b.n	802db94 <_dtoa_r+0x594>
 802dc18:	08049c90 	.word	0x08049c90
 802dc1c:	08049c68 	.word	0x08049c68
 802dc20:	3ff00000 	.word	0x3ff00000
 802dc24:	40240000 	.word	0x40240000
 802dc28:	401c0000 	.word	0x401c0000
 802dc2c:	40140000 	.word	0x40140000
 802dc30:	3fe00000 	.word	0x3fe00000
 802dc34:	9d01      	ldr	r5, [sp, #4]
 802dc36:	4656      	mov	r6, sl
 802dc38:	465f      	mov	r7, fp
 802dc3a:	4642      	mov	r2, r8
 802dc3c:	464b      	mov	r3, r9
 802dc3e:	4630      	mov	r0, r6
 802dc40:	4639      	mov	r1, r7
 802dc42:	f7d2 fe73 	bl	800092c <__aeabi_ddiv>
 802dc46:	f7d2 fff7 	bl	8000c38 <__aeabi_d2iz>
 802dc4a:	4682      	mov	sl, r0
 802dc4c:	f7d2 fcda 	bl	8000604 <__aeabi_i2d>
 802dc50:	4642      	mov	r2, r8
 802dc52:	464b      	mov	r3, r9
 802dc54:	f7d2 fd40 	bl	80006d8 <__aeabi_dmul>
 802dc58:	4602      	mov	r2, r0
 802dc5a:	460b      	mov	r3, r1
 802dc5c:	4630      	mov	r0, r6
 802dc5e:	4639      	mov	r1, r7
 802dc60:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 802dc64:	f7d2 fb80 	bl	8000368 <__aeabi_dsub>
 802dc68:	f805 6b01 	strb.w	r6, [r5], #1
 802dc6c:	9e01      	ldr	r6, [sp, #4]
 802dc6e:	9f03      	ldr	r7, [sp, #12]
 802dc70:	1bae      	subs	r6, r5, r6
 802dc72:	42b7      	cmp	r7, r6
 802dc74:	4602      	mov	r2, r0
 802dc76:	460b      	mov	r3, r1
 802dc78:	d135      	bne.n	802dce6 <_dtoa_r+0x6e6>
 802dc7a:	f7d2 fb77 	bl	800036c <__adddf3>
 802dc7e:	4642      	mov	r2, r8
 802dc80:	464b      	mov	r3, r9
 802dc82:	4606      	mov	r6, r0
 802dc84:	460f      	mov	r7, r1
 802dc86:	f7d2 ffb7 	bl	8000bf8 <__aeabi_dcmpgt>
 802dc8a:	b9d0      	cbnz	r0, 802dcc2 <_dtoa_r+0x6c2>
 802dc8c:	4642      	mov	r2, r8
 802dc8e:	464b      	mov	r3, r9
 802dc90:	4630      	mov	r0, r6
 802dc92:	4639      	mov	r1, r7
 802dc94:	f7d2 ff88 	bl	8000ba8 <__aeabi_dcmpeq>
 802dc98:	b110      	cbz	r0, 802dca0 <_dtoa_r+0x6a0>
 802dc9a:	f01a 0f01 	tst.w	sl, #1
 802dc9e:	d110      	bne.n	802dcc2 <_dtoa_r+0x6c2>
 802dca0:	4620      	mov	r0, r4
 802dca2:	ee18 1a10 	vmov	r1, s16
 802dca6:	f000 fc23 	bl	802e4f0 <_Bfree>
 802dcaa:	2300      	movs	r3, #0
 802dcac:	9800      	ldr	r0, [sp, #0]
 802dcae:	702b      	strb	r3, [r5, #0]
 802dcb0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802dcb2:	3001      	adds	r0, #1
 802dcb4:	6018      	str	r0, [r3, #0]
 802dcb6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802dcb8:	2b00      	cmp	r3, #0
 802dcba:	f43f acf1 	beq.w	802d6a0 <_dtoa_r+0xa0>
 802dcbe:	601d      	str	r5, [r3, #0]
 802dcc0:	e4ee      	b.n	802d6a0 <_dtoa_r+0xa0>
 802dcc2:	9f00      	ldr	r7, [sp, #0]
 802dcc4:	462b      	mov	r3, r5
 802dcc6:	461d      	mov	r5, r3
 802dcc8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802dccc:	2a39      	cmp	r2, #57	; 0x39
 802dcce:	d106      	bne.n	802dcde <_dtoa_r+0x6de>
 802dcd0:	9a01      	ldr	r2, [sp, #4]
 802dcd2:	429a      	cmp	r2, r3
 802dcd4:	d1f7      	bne.n	802dcc6 <_dtoa_r+0x6c6>
 802dcd6:	9901      	ldr	r1, [sp, #4]
 802dcd8:	2230      	movs	r2, #48	; 0x30
 802dcda:	3701      	adds	r7, #1
 802dcdc:	700a      	strb	r2, [r1, #0]
 802dcde:	781a      	ldrb	r2, [r3, #0]
 802dce0:	3201      	adds	r2, #1
 802dce2:	701a      	strb	r2, [r3, #0]
 802dce4:	e790      	b.n	802dc08 <_dtoa_r+0x608>
 802dce6:	4ba6      	ldr	r3, [pc, #664]	; (802df80 <_dtoa_r+0x980>)
 802dce8:	2200      	movs	r2, #0
 802dcea:	f7d2 fcf5 	bl	80006d8 <__aeabi_dmul>
 802dcee:	2200      	movs	r2, #0
 802dcf0:	2300      	movs	r3, #0
 802dcf2:	4606      	mov	r6, r0
 802dcf4:	460f      	mov	r7, r1
 802dcf6:	f7d2 ff57 	bl	8000ba8 <__aeabi_dcmpeq>
 802dcfa:	2800      	cmp	r0, #0
 802dcfc:	d09d      	beq.n	802dc3a <_dtoa_r+0x63a>
 802dcfe:	e7cf      	b.n	802dca0 <_dtoa_r+0x6a0>
 802dd00:	9a08      	ldr	r2, [sp, #32]
 802dd02:	2a00      	cmp	r2, #0
 802dd04:	f000 80d7 	beq.w	802deb6 <_dtoa_r+0x8b6>
 802dd08:	9a06      	ldr	r2, [sp, #24]
 802dd0a:	2a01      	cmp	r2, #1
 802dd0c:	f300 80ba 	bgt.w	802de84 <_dtoa_r+0x884>
 802dd10:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802dd12:	2a00      	cmp	r2, #0
 802dd14:	f000 80b2 	beq.w	802de7c <_dtoa_r+0x87c>
 802dd18:	f203 4333 	addw	r3, r3, #1075	; 0x433
 802dd1c:	9e07      	ldr	r6, [sp, #28]
 802dd1e:	9d04      	ldr	r5, [sp, #16]
 802dd20:	9a04      	ldr	r2, [sp, #16]
 802dd22:	441a      	add	r2, r3
 802dd24:	9204      	str	r2, [sp, #16]
 802dd26:	9a05      	ldr	r2, [sp, #20]
 802dd28:	2101      	movs	r1, #1
 802dd2a:	441a      	add	r2, r3
 802dd2c:	4620      	mov	r0, r4
 802dd2e:	9205      	str	r2, [sp, #20]
 802dd30:	f000 fc96 	bl	802e660 <__i2b>
 802dd34:	4607      	mov	r7, r0
 802dd36:	2d00      	cmp	r5, #0
 802dd38:	dd0c      	ble.n	802dd54 <_dtoa_r+0x754>
 802dd3a:	9b05      	ldr	r3, [sp, #20]
 802dd3c:	2b00      	cmp	r3, #0
 802dd3e:	dd09      	ble.n	802dd54 <_dtoa_r+0x754>
 802dd40:	42ab      	cmp	r3, r5
 802dd42:	9a04      	ldr	r2, [sp, #16]
 802dd44:	bfa8      	it	ge
 802dd46:	462b      	movge	r3, r5
 802dd48:	1ad2      	subs	r2, r2, r3
 802dd4a:	9204      	str	r2, [sp, #16]
 802dd4c:	9a05      	ldr	r2, [sp, #20]
 802dd4e:	1aed      	subs	r5, r5, r3
 802dd50:	1ad3      	subs	r3, r2, r3
 802dd52:	9305      	str	r3, [sp, #20]
 802dd54:	9b07      	ldr	r3, [sp, #28]
 802dd56:	b31b      	cbz	r3, 802dda0 <_dtoa_r+0x7a0>
 802dd58:	9b08      	ldr	r3, [sp, #32]
 802dd5a:	2b00      	cmp	r3, #0
 802dd5c:	f000 80af 	beq.w	802debe <_dtoa_r+0x8be>
 802dd60:	2e00      	cmp	r6, #0
 802dd62:	dd13      	ble.n	802dd8c <_dtoa_r+0x78c>
 802dd64:	4639      	mov	r1, r7
 802dd66:	4632      	mov	r2, r6
 802dd68:	4620      	mov	r0, r4
 802dd6a:	f000 fd39 	bl	802e7e0 <__pow5mult>
 802dd6e:	ee18 2a10 	vmov	r2, s16
 802dd72:	4601      	mov	r1, r0
 802dd74:	4607      	mov	r7, r0
 802dd76:	4620      	mov	r0, r4
 802dd78:	f000 fc88 	bl	802e68c <__multiply>
 802dd7c:	ee18 1a10 	vmov	r1, s16
 802dd80:	4680      	mov	r8, r0
 802dd82:	4620      	mov	r0, r4
 802dd84:	f000 fbb4 	bl	802e4f0 <_Bfree>
 802dd88:	ee08 8a10 	vmov	s16, r8
 802dd8c:	9b07      	ldr	r3, [sp, #28]
 802dd8e:	1b9a      	subs	r2, r3, r6
 802dd90:	d006      	beq.n	802dda0 <_dtoa_r+0x7a0>
 802dd92:	ee18 1a10 	vmov	r1, s16
 802dd96:	4620      	mov	r0, r4
 802dd98:	f000 fd22 	bl	802e7e0 <__pow5mult>
 802dd9c:	ee08 0a10 	vmov	s16, r0
 802dda0:	2101      	movs	r1, #1
 802dda2:	4620      	mov	r0, r4
 802dda4:	f000 fc5c 	bl	802e660 <__i2b>
 802dda8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802ddaa:	2b00      	cmp	r3, #0
 802ddac:	4606      	mov	r6, r0
 802ddae:	f340 8088 	ble.w	802dec2 <_dtoa_r+0x8c2>
 802ddb2:	461a      	mov	r2, r3
 802ddb4:	4601      	mov	r1, r0
 802ddb6:	4620      	mov	r0, r4
 802ddb8:	f000 fd12 	bl	802e7e0 <__pow5mult>
 802ddbc:	9b06      	ldr	r3, [sp, #24]
 802ddbe:	2b01      	cmp	r3, #1
 802ddc0:	4606      	mov	r6, r0
 802ddc2:	f340 8081 	ble.w	802dec8 <_dtoa_r+0x8c8>
 802ddc6:	f04f 0800 	mov.w	r8, #0
 802ddca:	6933      	ldr	r3, [r6, #16]
 802ddcc:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 802ddd0:	6918      	ldr	r0, [r3, #16]
 802ddd2:	f000 fbf5 	bl	802e5c0 <__hi0bits>
 802ddd6:	f1c0 0020 	rsb	r0, r0, #32
 802ddda:	9b05      	ldr	r3, [sp, #20]
 802dddc:	4418      	add	r0, r3
 802ddde:	f010 001f 	ands.w	r0, r0, #31
 802dde2:	f000 8092 	beq.w	802df0a <_dtoa_r+0x90a>
 802dde6:	f1c0 0320 	rsb	r3, r0, #32
 802ddea:	2b04      	cmp	r3, #4
 802ddec:	f340 808a 	ble.w	802df04 <_dtoa_r+0x904>
 802ddf0:	f1c0 001c 	rsb	r0, r0, #28
 802ddf4:	9b04      	ldr	r3, [sp, #16]
 802ddf6:	4403      	add	r3, r0
 802ddf8:	9304      	str	r3, [sp, #16]
 802ddfa:	9b05      	ldr	r3, [sp, #20]
 802ddfc:	4403      	add	r3, r0
 802ddfe:	4405      	add	r5, r0
 802de00:	9305      	str	r3, [sp, #20]
 802de02:	9b04      	ldr	r3, [sp, #16]
 802de04:	2b00      	cmp	r3, #0
 802de06:	dd07      	ble.n	802de18 <_dtoa_r+0x818>
 802de08:	ee18 1a10 	vmov	r1, s16
 802de0c:	461a      	mov	r2, r3
 802de0e:	4620      	mov	r0, r4
 802de10:	f000 fd40 	bl	802e894 <__lshift>
 802de14:	ee08 0a10 	vmov	s16, r0
 802de18:	9b05      	ldr	r3, [sp, #20]
 802de1a:	2b00      	cmp	r3, #0
 802de1c:	dd05      	ble.n	802de2a <_dtoa_r+0x82a>
 802de1e:	4631      	mov	r1, r6
 802de20:	461a      	mov	r2, r3
 802de22:	4620      	mov	r0, r4
 802de24:	f000 fd36 	bl	802e894 <__lshift>
 802de28:	4606      	mov	r6, r0
 802de2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802de2c:	2b00      	cmp	r3, #0
 802de2e:	d06e      	beq.n	802df0e <_dtoa_r+0x90e>
 802de30:	ee18 0a10 	vmov	r0, s16
 802de34:	4631      	mov	r1, r6
 802de36:	f000 fd9d 	bl	802e974 <__mcmp>
 802de3a:	2800      	cmp	r0, #0
 802de3c:	da67      	bge.n	802df0e <_dtoa_r+0x90e>
 802de3e:	9b00      	ldr	r3, [sp, #0]
 802de40:	3b01      	subs	r3, #1
 802de42:	ee18 1a10 	vmov	r1, s16
 802de46:	9300      	str	r3, [sp, #0]
 802de48:	220a      	movs	r2, #10
 802de4a:	2300      	movs	r3, #0
 802de4c:	4620      	mov	r0, r4
 802de4e:	f000 fb71 	bl	802e534 <__multadd>
 802de52:	9b08      	ldr	r3, [sp, #32]
 802de54:	ee08 0a10 	vmov	s16, r0
 802de58:	2b00      	cmp	r3, #0
 802de5a:	f000 81b1 	beq.w	802e1c0 <_dtoa_r+0xbc0>
 802de5e:	2300      	movs	r3, #0
 802de60:	4639      	mov	r1, r7
 802de62:	220a      	movs	r2, #10
 802de64:	4620      	mov	r0, r4
 802de66:	f000 fb65 	bl	802e534 <__multadd>
 802de6a:	9b02      	ldr	r3, [sp, #8]
 802de6c:	2b00      	cmp	r3, #0
 802de6e:	4607      	mov	r7, r0
 802de70:	f300 808e 	bgt.w	802df90 <_dtoa_r+0x990>
 802de74:	9b06      	ldr	r3, [sp, #24]
 802de76:	2b02      	cmp	r3, #2
 802de78:	dc51      	bgt.n	802df1e <_dtoa_r+0x91e>
 802de7a:	e089      	b.n	802df90 <_dtoa_r+0x990>
 802de7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802de7e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 802de82:	e74b      	b.n	802dd1c <_dtoa_r+0x71c>
 802de84:	9b03      	ldr	r3, [sp, #12]
 802de86:	1e5e      	subs	r6, r3, #1
 802de88:	9b07      	ldr	r3, [sp, #28]
 802de8a:	42b3      	cmp	r3, r6
 802de8c:	bfbf      	itttt	lt
 802de8e:	9b07      	ldrlt	r3, [sp, #28]
 802de90:	9607      	strlt	r6, [sp, #28]
 802de92:	1af2      	sublt	r2, r6, r3
 802de94:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 802de96:	bfb6      	itet	lt
 802de98:	189b      	addlt	r3, r3, r2
 802de9a:	1b9e      	subge	r6, r3, r6
 802de9c:	930a      	strlt	r3, [sp, #40]	; 0x28
 802de9e:	9b03      	ldr	r3, [sp, #12]
 802dea0:	bfb8      	it	lt
 802dea2:	2600      	movlt	r6, #0
 802dea4:	2b00      	cmp	r3, #0
 802dea6:	bfb7      	itett	lt
 802dea8:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 802deac:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 802deb0:	1a9d      	sublt	r5, r3, r2
 802deb2:	2300      	movlt	r3, #0
 802deb4:	e734      	b.n	802dd20 <_dtoa_r+0x720>
 802deb6:	9e07      	ldr	r6, [sp, #28]
 802deb8:	9d04      	ldr	r5, [sp, #16]
 802deba:	9f08      	ldr	r7, [sp, #32]
 802debc:	e73b      	b.n	802dd36 <_dtoa_r+0x736>
 802debe:	9a07      	ldr	r2, [sp, #28]
 802dec0:	e767      	b.n	802dd92 <_dtoa_r+0x792>
 802dec2:	9b06      	ldr	r3, [sp, #24]
 802dec4:	2b01      	cmp	r3, #1
 802dec6:	dc18      	bgt.n	802defa <_dtoa_r+0x8fa>
 802dec8:	f1ba 0f00 	cmp.w	sl, #0
 802decc:	d115      	bne.n	802defa <_dtoa_r+0x8fa>
 802dece:	f3cb 0313 	ubfx	r3, fp, #0, #20
 802ded2:	b993      	cbnz	r3, 802defa <_dtoa_r+0x8fa>
 802ded4:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 802ded8:	0d1b      	lsrs	r3, r3, #20
 802deda:	051b      	lsls	r3, r3, #20
 802dedc:	b183      	cbz	r3, 802df00 <_dtoa_r+0x900>
 802dede:	9b04      	ldr	r3, [sp, #16]
 802dee0:	3301      	adds	r3, #1
 802dee2:	9304      	str	r3, [sp, #16]
 802dee4:	9b05      	ldr	r3, [sp, #20]
 802dee6:	3301      	adds	r3, #1
 802dee8:	9305      	str	r3, [sp, #20]
 802deea:	f04f 0801 	mov.w	r8, #1
 802deee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802def0:	2b00      	cmp	r3, #0
 802def2:	f47f af6a 	bne.w	802ddca <_dtoa_r+0x7ca>
 802def6:	2001      	movs	r0, #1
 802def8:	e76f      	b.n	802ddda <_dtoa_r+0x7da>
 802defa:	f04f 0800 	mov.w	r8, #0
 802defe:	e7f6      	b.n	802deee <_dtoa_r+0x8ee>
 802df00:	4698      	mov	r8, r3
 802df02:	e7f4      	b.n	802deee <_dtoa_r+0x8ee>
 802df04:	f43f af7d 	beq.w	802de02 <_dtoa_r+0x802>
 802df08:	4618      	mov	r0, r3
 802df0a:	301c      	adds	r0, #28
 802df0c:	e772      	b.n	802ddf4 <_dtoa_r+0x7f4>
 802df0e:	9b03      	ldr	r3, [sp, #12]
 802df10:	2b00      	cmp	r3, #0
 802df12:	dc37      	bgt.n	802df84 <_dtoa_r+0x984>
 802df14:	9b06      	ldr	r3, [sp, #24]
 802df16:	2b02      	cmp	r3, #2
 802df18:	dd34      	ble.n	802df84 <_dtoa_r+0x984>
 802df1a:	9b03      	ldr	r3, [sp, #12]
 802df1c:	9302      	str	r3, [sp, #8]
 802df1e:	9b02      	ldr	r3, [sp, #8]
 802df20:	b96b      	cbnz	r3, 802df3e <_dtoa_r+0x93e>
 802df22:	4631      	mov	r1, r6
 802df24:	2205      	movs	r2, #5
 802df26:	4620      	mov	r0, r4
 802df28:	f000 fb04 	bl	802e534 <__multadd>
 802df2c:	4601      	mov	r1, r0
 802df2e:	4606      	mov	r6, r0
 802df30:	ee18 0a10 	vmov	r0, s16
 802df34:	f000 fd1e 	bl	802e974 <__mcmp>
 802df38:	2800      	cmp	r0, #0
 802df3a:	f73f adbb 	bgt.w	802dab4 <_dtoa_r+0x4b4>
 802df3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802df40:	9d01      	ldr	r5, [sp, #4]
 802df42:	43db      	mvns	r3, r3
 802df44:	9300      	str	r3, [sp, #0]
 802df46:	f04f 0800 	mov.w	r8, #0
 802df4a:	4631      	mov	r1, r6
 802df4c:	4620      	mov	r0, r4
 802df4e:	f000 facf 	bl	802e4f0 <_Bfree>
 802df52:	2f00      	cmp	r7, #0
 802df54:	f43f aea4 	beq.w	802dca0 <_dtoa_r+0x6a0>
 802df58:	f1b8 0f00 	cmp.w	r8, #0
 802df5c:	d005      	beq.n	802df6a <_dtoa_r+0x96a>
 802df5e:	45b8      	cmp	r8, r7
 802df60:	d003      	beq.n	802df6a <_dtoa_r+0x96a>
 802df62:	4641      	mov	r1, r8
 802df64:	4620      	mov	r0, r4
 802df66:	f000 fac3 	bl	802e4f0 <_Bfree>
 802df6a:	4639      	mov	r1, r7
 802df6c:	4620      	mov	r0, r4
 802df6e:	f000 fabf 	bl	802e4f0 <_Bfree>
 802df72:	e695      	b.n	802dca0 <_dtoa_r+0x6a0>
 802df74:	2600      	movs	r6, #0
 802df76:	4637      	mov	r7, r6
 802df78:	e7e1      	b.n	802df3e <_dtoa_r+0x93e>
 802df7a:	9700      	str	r7, [sp, #0]
 802df7c:	4637      	mov	r7, r6
 802df7e:	e599      	b.n	802dab4 <_dtoa_r+0x4b4>
 802df80:	40240000 	.word	0x40240000
 802df84:	9b08      	ldr	r3, [sp, #32]
 802df86:	2b00      	cmp	r3, #0
 802df88:	f000 80ca 	beq.w	802e120 <_dtoa_r+0xb20>
 802df8c:	9b03      	ldr	r3, [sp, #12]
 802df8e:	9302      	str	r3, [sp, #8]
 802df90:	2d00      	cmp	r5, #0
 802df92:	dd05      	ble.n	802dfa0 <_dtoa_r+0x9a0>
 802df94:	4639      	mov	r1, r7
 802df96:	462a      	mov	r2, r5
 802df98:	4620      	mov	r0, r4
 802df9a:	f000 fc7b 	bl	802e894 <__lshift>
 802df9e:	4607      	mov	r7, r0
 802dfa0:	f1b8 0f00 	cmp.w	r8, #0
 802dfa4:	d05b      	beq.n	802e05e <_dtoa_r+0xa5e>
 802dfa6:	6879      	ldr	r1, [r7, #4]
 802dfa8:	4620      	mov	r0, r4
 802dfaa:	f000 fa61 	bl	802e470 <_Balloc>
 802dfae:	4605      	mov	r5, r0
 802dfb0:	b928      	cbnz	r0, 802dfbe <_dtoa_r+0x9be>
 802dfb2:	4b87      	ldr	r3, [pc, #540]	; (802e1d0 <_dtoa_r+0xbd0>)
 802dfb4:	4602      	mov	r2, r0
 802dfb6:	f240 21ea 	movw	r1, #746	; 0x2ea
 802dfba:	f7ff bb3b 	b.w	802d634 <_dtoa_r+0x34>
 802dfbe:	693a      	ldr	r2, [r7, #16]
 802dfc0:	3202      	adds	r2, #2
 802dfc2:	0092      	lsls	r2, r2, #2
 802dfc4:	f107 010c 	add.w	r1, r7, #12
 802dfc8:	300c      	adds	r0, #12
 802dfca:	f7fe f98b 	bl	802c2e4 <memcpy>
 802dfce:	2201      	movs	r2, #1
 802dfd0:	4629      	mov	r1, r5
 802dfd2:	4620      	mov	r0, r4
 802dfd4:	f000 fc5e 	bl	802e894 <__lshift>
 802dfd8:	9b01      	ldr	r3, [sp, #4]
 802dfda:	f103 0901 	add.w	r9, r3, #1
 802dfde:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 802dfe2:	4413      	add	r3, r2
 802dfe4:	9305      	str	r3, [sp, #20]
 802dfe6:	f00a 0301 	and.w	r3, sl, #1
 802dfea:	46b8      	mov	r8, r7
 802dfec:	9304      	str	r3, [sp, #16]
 802dfee:	4607      	mov	r7, r0
 802dff0:	4631      	mov	r1, r6
 802dff2:	ee18 0a10 	vmov	r0, s16
 802dff6:	f7ff fa75 	bl	802d4e4 <quorem>
 802dffa:	4641      	mov	r1, r8
 802dffc:	9002      	str	r0, [sp, #8]
 802dffe:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 802e002:	ee18 0a10 	vmov	r0, s16
 802e006:	f000 fcb5 	bl	802e974 <__mcmp>
 802e00a:	463a      	mov	r2, r7
 802e00c:	9003      	str	r0, [sp, #12]
 802e00e:	4631      	mov	r1, r6
 802e010:	4620      	mov	r0, r4
 802e012:	f000 fccb 	bl	802e9ac <__mdiff>
 802e016:	68c2      	ldr	r2, [r0, #12]
 802e018:	f109 3bff 	add.w	fp, r9, #4294967295
 802e01c:	4605      	mov	r5, r0
 802e01e:	bb02      	cbnz	r2, 802e062 <_dtoa_r+0xa62>
 802e020:	4601      	mov	r1, r0
 802e022:	ee18 0a10 	vmov	r0, s16
 802e026:	f000 fca5 	bl	802e974 <__mcmp>
 802e02a:	4602      	mov	r2, r0
 802e02c:	4629      	mov	r1, r5
 802e02e:	4620      	mov	r0, r4
 802e030:	9207      	str	r2, [sp, #28]
 802e032:	f000 fa5d 	bl	802e4f0 <_Bfree>
 802e036:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 802e03a:	ea43 0102 	orr.w	r1, r3, r2
 802e03e:	9b04      	ldr	r3, [sp, #16]
 802e040:	430b      	orrs	r3, r1
 802e042:	464d      	mov	r5, r9
 802e044:	d10f      	bne.n	802e066 <_dtoa_r+0xa66>
 802e046:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 802e04a:	d02a      	beq.n	802e0a2 <_dtoa_r+0xaa2>
 802e04c:	9b03      	ldr	r3, [sp, #12]
 802e04e:	2b00      	cmp	r3, #0
 802e050:	dd02      	ble.n	802e058 <_dtoa_r+0xa58>
 802e052:	9b02      	ldr	r3, [sp, #8]
 802e054:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 802e058:	f88b a000 	strb.w	sl, [fp]
 802e05c:	e775      	b.n	802df4a <_dtoa_r+0x94a>
 802e05e:	4638      	mov	r0, r7
 802e060:	e7ba      	b.n	802dfd8 <_dtoa_r+0x9d8>
 802e062:	2201      	movs	r2, #1
 802e064:	e7e2      	b.n	802e02c <_dtoa_r+0xa2c>
 802e066:	9b03      	ldr	r3, [sp, #12]
 802e068:	2b00      	cmp	r3, #0
 802e06a:	db04      	blt.n	802e076 <_dtoa_r+0xa76>
 802e06c:	9906      	ldr	r1, [sp, #24]
 802e06e:	430b      	orrs	r3, r1
 802e070:	9904      	ldr	r1, [sp, #16]
 802e072:	430b      	orrs	r3, r1
 802e074:	d122      	bne.n	802e0bc <_dtoa_r+0xabc>
 802e076:	2a00      	cmp	r2, #0
 802e078:	ddee      	ble.n	802e058 <_dtoa_r+0xa58>
 802e07a:	ee18 1a10 	vmov	r1, s16
 802e07e:	2201      	movs	r2, #1
 802e080:	4620      	mov	r0, r4
 802e082:	f000 fc07 	bl	802e894 <__lshift>
 802e086:	4631      	mov	r1, r6
 802e088:	ee08 0a10 	vmov	s16, r0
 802e08c:	f000 fc72 	bl	802e974 <__mcmp>
 802e090:	2800      	cmp	r0, #0
 802e092:	dc03      	bgt.n	802e09c <_dtoa_r+0xa9c>
 802e094:	d1e0      	bne.n	802e058 <_dtoa_r+0xa58>
 802e096:	f01a 0f01 	tst.w	sl, #1
 802e09a:	d0dd      	beq.n	802e058 <_dtoa_r+0xa58>
 802e09c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 802e0a0:	d1d7      	bne.n	802e052 <_dtoa_r+0xa52>
 802e0a2:	2339      	movs	r3, #57	; 0x39
 802e0a4:	f88b 3000 	strb.w	r3, [fp]
 802e0a8:	462b      	mov	r3, r5
 802e0aa:	461d      	mov	r5, r3
 802e0ac:	3b01      	subs	r3, #1
 802e0ae:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 802e0b2:	2a39      	cmp	r2, #57	; 0x39
 802e0b4:	d071      	beq.n	802e19a <_dtoa_r+0xb9a>
 802e0b6:	3201      	adds	r2, #1
 802e0b8:	701a      	strb	r2, [r3, #0]
 802e0ba:	e746      	b.n	802df4a <_dtoa_r+0x94a>
 802e0bc:	2a00      	cmp	r2, #0
 802e0be:	dd07      	ble.n	802e0d0 <_dtoa_r+0xad0>
 802e0c0:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 802e0c4:	d0ed      	beq.n	802e0a2 <_dtoa_r+0xaa2>
 802e0c6:	f10a 0301 	add.w	r3, sl, #1
 802e0ca:	f88b 3000 	strb.w	r3, [fp]
 802e0ce:	e73c      	b.n	802df4a <_dtoa_r+0x94a>
 802e0d0:	9b05      	ldr	r3, [sp, #20]
 802e0d2:	f809 ac01 	strb.w	sl, [r9, #-1]
 802e0d6:	4599      	cmp	r9, r3
 802e0d8:	d047      	beq.n	802e16a <_dtoa_r+0xb6a>
 802e0da:	ee18 1a10 	vmov	r1, s16
 802e0de:	2300      	movs	r3, #0
 802e0e0:	220a      	movs	r2, #10
 802e0e2:	4620      	mov	r0, r4
 802e0e4:	f000 fa26 	bl	802e534 <__multadd>
 802e0e8:	45b8      	cmp	r8, r7
 802e0ea:	ee08 0a10 	vmov	s16, r0
 802e0ee:	f04f 0300 	mov.w	r3, #0
 802e0f2:	f04f 020a 	mov.w	r2, #10
 802e0f6:	4641      	mov	r1, r8
 802e0f8:	4620      	mov	r0, r4
 802e0fa:	d106      	bne.n	802e10a <_dtoa_r+0xb0a>
 802e0fc:	f000 fa1a 	bl	802e534 <__multadd>
 802e100:	4680      	mov	r8, r0
 802e102:	4607      	mov	r7, r0
 802e104:	f109 0901 	add.w	r9, r9, #1
 802e108:	e772      	b.n	802dff0 <_dtoa_r+0x9f0>
 802e10a:	f000 fa13 	bl	802e534 <__multadd>
 802e10e:	4639      	mov	r1, r7
 802e110:	4680      	mov	r8, r0
 802e112:	2300      	movs	r3, #0
 802e114:	220a      	movs	r2, #10
 802e116:	4620      	mov	r0, r4
 802e118:	f000 fa0c 	bl	802e534 <__multadd>
 802e11c:	4607      	mov	r7, r0
 802e11e:	e7f1      	b.n	802e104 <_dtoa_r+0xb04>
 802e120:	9b03      	ldr	r3, [sp, #12]
 802e122:	9302      	str	r3, [sp, #8]
 802e124:	9d01      	ldr	r5, [sp, #4]
 802e126:	ee18 0a10 	vmov	r0, s16
 802e12a:	4631      	mov	r1, r6
 802e12c:	f7ff f9da 	bl	802d4e4 <quorem>
 802e130:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 802e134:	9b01      	ldr	r3, [sp, #4]
 802e136:	f805 ab01 	strb.w	sl, [r5], #1
 802e13a:	1aea      	subs	r2, r5, r3
 802e13c:	9b02      	ldr	r3, [sp, #8]
 802e13e:	4293      	cmp	r3, r2
 802e140:	dd09      	ble.n	802e156 <_dtoa_r+0xb56>
 802e142:	ee18 1a10 	vmov	r1, s16
 802e146:	2300      	movs	r3, #0
 802e148:	220a      	movs	r2, #10
 802e14a:	4620      	mov	r0, r4
 802e14c:	f000 f9f2 	bl	802e534 <__multadd>
 802e150:	ee08 0a10 	vmov	s16, r0
 802e154:	e7e7      	b.n	802e126 <_dtoa_r+0xb26>
 802e156:	9b02      	ldr	r3, [sp, #8]
 802e158:	2b00      	cmp	r3, #0
 802e15a:	bfc8      	it	gt
 802e15c:	461d      	movgt	r5, r3
 802e15e:	9b01      	ldr	r3, [sp, #4]
 802e160:	bfd8      	it	le
 802e162:	2501      	movle	r5, #1
 802e164:	441d      	add	r5, r3
 802e166:	f04f 0800 	mov.w	r8, #0
 802e16a:	ee18 1a10 	vmov	r1, s16
 802e16e:	2201      	movs	r2, #1
 802e170:	4620      	mov	r0, r4
 802e172:	f000 fb8f 	bl	802e894 <__lshift>
 802e176:	4631      	mov	r1, r6
 802e178:	ee08 0a10 	vmov	s16, r0
 802e17c:	f000 fbfa 	bl	802e974 <__mcmp>
 802e180:	2800      	cmp	r0, #0
 802e182:	dc91      	bgt.n	802e0a8 <_dtoa_r+0xaa8>
 802e184:	d102      	bne.n	802e18c <_dtoa_r+0xb8c>
 802e186:	f01a 0f01 	tst.w	sl, #1
 802e18a:	d18d      	bne.n	802e0a8 <_dtoa_r+0xaa8>
 802e18c:	462b      	mov	r3, r5
 802e18e:	461d      	mov	r5, r3
 802e190:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802e194:	2a30      	cmp	r2, #48	; 0x30
 802e196:	d0fa      	beq.n	802e18e <_dtoa_r+0xb8e>
 802e198:	e6d7      	b.n	802df4a <_dtoa_r+0x94a>
 802e19a:	9a01      	ldr	r2, [sp, #4]
 802e19c:	429a      	cmp	r2, r3
 802e19e:	d184      	bne.n	802e0aa <_dtoa_r+0xaaa>
 802e1a0:	9b00      	ldr	r3, [sp, #0]
 802e1a2:	3301      	adds	r3, #1
 802e1a4:	9300      	str	r3, [sp, #0]
 802e1a6:	2331      	movs	r3, #49	; 0x31
 802e1a8:	7013      	strb	r3, [r2, #0]
 802e1aa:	e6ce      	b.n	802df4a <_dtoa_r+0x94a>
 802e1ac:	4b09      	ldr	r3, [pc, #36]	; (802e1d4 <_dtoa_r+0xbd4>)
 802e1ae:	f7ff ba95 	b.w	802d6dc <_dtoa_r+0xdc>
 802e1b2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802e1b4:	2b00      	cmp	r3, #0
 802e1b6:	f47f aa6e 	bne.w	802d696 <_dtoa_r+0x96>
 802e1ba:	4b07      	ldr	r3, [pc, #28]	; (802e1d8 <_dtoa_r+0xbd8>)
 802e1bc:	f7ff ba8e 	b.w	802d6dc <_dtoa_r+0xdc>
 802e1c0:	9b02      	ldr	r3, [sp, #8]
 802e1c2:	2b00      	cmp	r3, #0
 802e1c4:	dcae      	bgt.n	802e124 <_dtoa_r+0xb24>
 802e1c6:	9b06      	ldr	r3, [sp, #24]
 802e1c8:	2b02      	cmp	r3, #2
 802e1ca:	f73f aea8 	bgt.w	802df1e <_dtoa_r+0x91e>
 802e1ce:	e7a9      	b.n	802e124 <_dtoa_r+0xb24>
 802e1d0:	08049bf7 	.word	0x08049bf7
 802e1d4:	08034008 	.word	0x08034008
 802e1d8:	08049b78 	.word	0x08049b78

0802e1dc <__sflush_r>:
 802e1dc:	898a      	ldrh	r2, [r1, #12]
 802e1de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e1e2:	4605      	mov	r5, r0
 802e1e4:	0710      	lsls	r0, r2, #28
 802e1e6:	460c      	mov	r4, r1
 802e1e8:	d458      	bmi.n	802e29c <__sflush_r+0xc0>
 802e1ea:	684b      	ldr	r3, [r1, #4]
 802e1ec:	2b00      	cmp	r3, #0
 802e1ee:	dc05      	bgt.n	802e1fc <__sflush_r+0x20>
 802e1f0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802e1f2:	2b00      	cmp	r3, #0
 802e1f4:	dc02      	bgt.n	802e1fc <__sflush_r+0x20>
 802e1f6:	2000      	movs	r0, #0
 802e1f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e1fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e1fe:	2e00      	cmp	r6, #0
 802e200:	d0f9      	beq.n	802e1f6 <__sflush_r+0x1a>
 802e202:	2300      	movs	r3, #0
 802e204:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802e208:	682f      	ldr	r7, [r5, #0]
 802e20a:	602b      	str	r3, [r5, #0]
 802e20c:	d032      	beq.n	802e274 <__sflush_r+0x98>
 802e20e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802e210:	89a3      	ldrh	r3, [r4, #12]
 802e212:	075a      	lsls	r2, r3, #29
 802e214:	d505      	bpl.n	802e222 <__sflush_r+0x46>
 802e216:	6863      	ldr	r3, [r4, #4]
 802e218:	1ac0      	subs	r0, r0, r3
 802e21a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802e21c:	b10b      	cbz	r3, 802e222 <__sflush_r+0x46>
 802e21e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802e220:	1ac0      	subs	r0, r0, r3
 802e222:	2300      	movs	r3, #0
 802e224:	4602      	mov	r2, r0
 802e226:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e228:	6a21      	ldr	r1, [r4, #32]
 802e22a:	4628      	mov	r0, r5
 802e22c:	47b0      	blx	r6
 802e22e:	1c43      	adds	r3, r0, #1
 802e230:	89a3      	ldrh	r3, [r4, #12]
 802e232:	d106      	bne.n	802e242 <__sflush_r+0x66>
 802e234:	6829      	ldr	r1, [r5, #0]
 802e236:	291d      	cmp	r1, #29
 802e238:	d82c      	bhi.n	802e294 <__sflush_r+0xb8>
 802e23a:	4a2a      	ldr	r2, [pc, #168]	; (802e2e4 <__sflush_r+0x108>)
 802e23c:	40ca      	lsrs	r2, r1
 802e23e:	07d6      	lsls	r6, r2, #31
 802e240:	d528      	bpl.n	802e294 <__sflush_r+0xb8>
 802e242:	2200      	movs	r2, #0
 802e244:	6062      	str	r2, [r4, #4]
 802e246:	04d9      	lsls	r1, r3, #19
 802e248:	6922      	ldr	r2, [r4, #16]
 802e24a:	6022      	str	r2, [r4, #0]
 802e24c:	d504      	bpl.n	802e258 <__sflush_r+0x7c>
 802e24e:	1c42      	adds	r2, r0, #1
 802e250:	d101      	bne.n	802e256 <__sflush_r+0x7a>
 802e252:	682b      	ldr	r3, [r5, #0]
 802e254:	b903      	cbnz	r3, 802e258 <__sflush_r+0x7c>
 802e256:	6560      	str	r0, [r4, #84]	; 0x54
 802e258:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e25a:	602f      	str	r7, [r5, #0]
 802e25c:	2900      	cmp	r1, #0
 802e25e:	d0ca      	beq.n	802e1f6 <__sflush_r+0x1a>
 802e260:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e264:	4299      	cmp	r1, r3
 802e266:	d002      	beq.n	802e26e <__sflush_r+0x92>
 802e268:	4628      	mov	r0, r5
 802e26a:	f7fe f851 	bl	802c310 <_free_r>
 802e26e:	2000      	movs	r0, #0
 802e270:	6360      	str	r0, [r4, #52]	; 0x34
 802e272:	e7c1      	b.n	802e1f8 <__sflush_r+0x1c>
 802e274:	6a21      	ldr	r1, [r4, #32]
 802e276:	2301      	movs	r3, #1
 802e278:	4628      	mov	r0, r5
 802e27a:	47b0      	blx	r6
 802e27c:	1c41      	adds	r1, r0, #1
 802e27e:	d1c7      	bne.n	802e210 <__sflush_r+0x34>
 802e280:	682b      	ldr	r3, [r5, #0]
 802e282:	2b00      	cmp	r3, #0
 802e284:	d0c4      	beq.n	802e210 <__sflush_r+0x34>
 802e286:	2b1d      	cmp	r3, #29
 802e288:	d001      	beq.n	802e28e <__sflush_r+0xb2>
 802e28a:	2b16      	cmp	r3, #22
 802e28c:	d101      	bne.n	802e292 <__sflush_r+0xb6>
 802e28e:	602f      	str	r7, [r5, #0]
 802e290:	e7b1      	b.n	802e1f6 <__sflush_r+0x1a>
 802e292:	89a3      	ldrh	r3, [r4, #12]
 802e294:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e298:	81a3      	strh	r3, [r4, #12]
 802e29a:	e7ad      	b.n	802e1f8 <__sflush_r+0x1c>
 802e29c:	690f      	ldr	r7, [r1, #16]
 802e29e:	2f00      	cmp	r7, #0
 802e2a0:	d0a9      	beq.n	802e1f6 <__sflush_r+0x1a>
 802e2a2:	0793      	lsls	r3, r2, #30
 802e2a4:	680e      	ldr	r6, [r1, #0]
 802e2a6:	bf08      	it	eq
 802e2a8:	694b      	ldreq	r3, [r1, #20]
 802e2aa:	600f      	str	r7, [r1, #0]
 802e2ac:	bf18      	it	ne
 802e2ae:	2300      	movne	r3, #0
 802e2b0:	eba6 0807 	sub.w	r8, r6, r7
 802e2b4:	608b      	str	r3, [r1, #8]
 802e2b6:	f1b8 0f00 	cmp.w	r8, #0
 802e2ba:	dd9c      	ble.n	802e1f6 <__sflush_r+0x1a>
 802e2bc:	6a21      	ldr	r1, [r4, #32]
 802e2be:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802e2c0:	4643      	mov	r3, r8
 802e2c2:	463a      	mov	r2, r7
 802e2c4:	4628      	mov	r0, r5
 802e2c6:	47b0      	blx	r6
 802e2c8:	2800      	cmp	r0, #0
 802e2ca:	dc06      	bgt.n	802e2da <__sflush_r+0xfe>
 802e2cc:	89a3      	ldrh	r3, [r4, #12]
 802e2ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e2d2:	81a3      	strh	r3, [r4, #12]
 802e2d4:	f04f 30ff 	mov.w	r0, #4294967295
 802e2d8:	e78e      	b.n	802e1f8 <__sflush_r+0x1c>
 802e2da:	4407      	add	r7, r0
 802e2dc:	eba8 0800 	sub.w	r8, r8, r0
 802e2e0:	e7e9      	b.n	802e2b6 <__sflush_r+0xda>
 802e2e2:	bf00      	nop
 802e2e4:	20400001 	.word	0x20400001

0802e2e8 <_fflush_r>:
 802e2e8:	b538      	push	{r3, r4, r5, lr}
 802e2ea:	690b      	ldr	r3, [r1, #16]
 802e2ec:	4605      	mov	r5, r0
 802e2ee:	460c      	mov	r4, r1
 802e2f0:	b913      	cbnz	r3, 802e2f8 <_fflush_r+0x10>
 802e2f2:	2500      	movs	r5, #0
 802e2f4:	4628      	mov	r0, r5
 802e2f6:	bd38      	pop	{r3, r4, r5, pc}
 802e2f8:	b118      	cbz	r0, 802e302 <_fflush_r+0x1a>
 802e2fa:	6983      	ldr	r3, [r0, #24]
 802e2fc:	b90b      	cbnz	r3, 802e302 <_fflush_r+0x1a>
 802e2fe:	f7fd ff09 	bl	802c114 <__sinit>
 802e302:	4b14      	ldr	r3, [pc, #80]	; (802e354 <_fflush_r+0x6c>)
 802e304:	429c      	cmp	r4, r3
 802e306:	d11b      	bne.n	802e340 <_fflush_r+0x58>
 802e308:	686c      	ldr	r4, [r5, #4]
 802e30a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e30e:	2b00      	cmp	r3, #0
 802e310:	d0ef      	beq.n	802e2f2 <_fflush_r+0xa>
 802e312:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802e314:	07d0      	lsls	r0, r2, #31
 802e316:	d404      	bmi.n	802e322 <_fflush_r+0x3a>
 802e318:	0599      	lsls	r1, r3, #22
 802e31a:	d402      	bmi.n	802e322 <_fflush_r+0x3a>
 802e31c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e31e:	f7fd ffce 	bl	802c2be <__retarget_lock_acquire_recursive>
 802e322:	4628      	mov	r0, r5
 802e324:	4621      	mov	r1, r4
 802e326:	f7ff ff59 	bl	802e1dc <__sflush_r>
 802e32a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802e32c:	07da      	lsls	r2, r3, #31
 802e32e:	4605      	mov	r5, r0
 802e330:	d4e0      	bmi.n	802e2f4 <_fflush_r+0xc>
 802e332:	89a3      	ldrh	r3, [r4, #12]
 802e334:	059b      	lsls	r3, r3, #22
 802e336:	d4dd      	bmi.n	802e2f4 <_fflush_r+0xc>
 802e338:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e33a:	f7fd ffc2 	bl	802c2c2 <__retarget_lock_release_recursive>
 802e33e:	e7d9      	b.n	802e2f4 <_fflush_r+0xc>
 802e340:	4b05      	ldr	r3, [pc, #20]	; (802e358 <_fflush_r+0x70>)
 802e342:	429c      	cmp	r4, r3
 802e344:	d101      	bne.n	802e34a <_fflush_r+0x62>
 802e346:	68ac      	ldr	r4, [r5, #8]
 802e348:	e7df      	b.n	802e30a <_fflush_r+0x22>
 802e34a:	4b04      	ldr	r3, [pc, #16]	; (802e35c <_fflush_r+0x74>)
 802e34c:	429c      	cmp	r4, r3
 802e34e:	bf08      	it	eq
 802e350:	68ec      	ldreq	r4, [r5, #12]
 802e352:	e7da      	b.n	802e30a <_fflush_r+0x22>
 802e354:	08049aec 	.word	0x08049aec
 802e358:	08049b0c 	.word	0x08049b0c
 802e35c:	08049acc 	.word	0x08049acc

0802e360 <_localeconv_r>:
 802e360:	4800      	ldr	r0, [pc, #0]	; (802e364 <_localeconv_r+0x4>)
 802e362:	4770      	bx	lr
 802e364:	2000026c 	.word	0x2000026c

0802e368 <_lseek_r>:
 802e368:	b538      	push	{r3, r4, r5, lr}
 802e36a:	4d07      	ldr	r5, [pc, #28]	; (802e388 <_lseek_r+0x20>)
 802e36c:	4604      	mov	r4, r0
 802e36e:	4608      	mov	r0, r1
 802e370:	4611      	mov	r1, r2
 802e372:	2200      	movs	r2, #0
 802e374:	602a      	str	r2, [r5, #0]
 802e376:	461a      	mov	r2, r3
 802e378:	f7d5 f978 	bl	800366c <_lseek>
 802e37c:	1c43      	adds	r3, r0, #1
 802e37e:	d102      	bne.n	802e386 <_lseek_r+0x1e>
 802e380:	682b      	ldr	r3, [r5, #0]
 802e382:	b103      	cbz	r3, 802e386 <_lseek_r+0x1e>
 802e384:	6023      	str	r3, [r4, #0]
 802e386:	bd38      	pop	{r3, r4, r5, pc}
 802e388:	2001e3f0 	.word	0x2001e3f0

0802e38c <__swhatbuf_r>:
 802e38c:	b570      	push	{r4, r5, r6, lr}
 802e38e:	460e      	mov	r6, r1
 802e390:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e394:	2900      	cmp	r1, #0
 802e396:	b096      	sub	sp, #88	; 0x58
 802e398:	4614      	mov	r4, r2
 802e39a:	461d      	mov	r5, r3
 802e39c:	da08      	bge.n	802e3b0 <__swhatbuf_r+0x24>
 802e39e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 802e3a2:	2200      	movs	r2, #0
 802e3a4:	602a      	str	r2, [r5, #0]
 802e3a6:	061a      	lsls	r2, r3, #24
 802e3a8:	d410      	bmi.n	802e3cc <__swhatbuf_r+0x40>
 802e3aa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802e3ae:	e00e      	b.n	802e3ce <__swhatbuf_r+0x42>
 802e3b0:	466a      	mov	r2, sp
 802e3b2:	f000 fc09 	bl	802ebc8 <_fstat_r>
 802e3b6:	2800      	cmp	r0, #0
 802e3b8:	dbf1      	blt.n	802e39e <__swhatbuf_r+0x12>
 802e3ba:	9a01      	ldr	r2, [sp, #4]
 802e3bc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 802e3c0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 802e3c4:	425a      	negs	r2, r3
 802e3c6:	415a      	adcs	r2, r3
 802e3c8:	602a      	str	r2, [r5, #0]
 802e3ca:	e7ee      	b.n	802e3aa <__swhatbuf_r+0x1e>
 802e3cc:	2340      	movs	r3, #64	; 0x40
 802e3ce:	2000      	movs	r0, #0
 802e3d0:	6023      	str	r3, [r4, #0]
 802e3d2:	b016      	add	sp, #88	; 0x58
 802e3d4:	bd70      	pop	{r4, r5, r6, pc}
	...

0802e3d8 <__smakebuf_r>:
 802e3d8:	898b      	ldrh	r3, [r1, #12]
 802e3da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802e3dc:	079d      	lsls	r5, r3, #30
 802e3de:	4606      	mov	r6, r0
 802e3e0:	460c      	mov	r4, r1
 802e3e2:	d507      	bpl.n	802e3f4 <__smakebuf_r+0x1c>
 802e3e4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802e3e8:	6023      	str	r3, [r4, #0]
 802e3ea:	6123      	str	r3, [r4, #16]
 802e3ec:	2301      	movs	r3, #1
 802e3ee:	6163      	str	r3, [r4, #20]
 802e3f0:	b002      	add	sp, #8
 802e3f2:	bd70      	pop	{r4, r5, r6, pc}
 802e3f4:	ab01      	add	r3, sp, #4
 802e3f6:	466a      	mov	r2, sp
 802e3f8:	f7ff ffc8 	bl	802e38c <__swhatbuf_r>
 802e3fc:	9900      	ldr	r1, [sp, #0]
 802e3fe:	4605      	mov	r5, r0
 802e400:	4630      	mov	r0, r6
 802e402:	f7fd fff1 	bl	802c3e8 <_malloc_r>
 802e406:	b948      	cbnz	r0, 802e41c <__smakebuf_r+0x44>
 802e408:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e40c:	059a      	lsls	r2, r3, #22
 802e40e:	d4ef      	bmi.n	802e3f0 <__smakebuf_r+0x18>
 802e410:	f023 0303 	bic.w	r3, r3, #3
 802e414:	f043 0302 	orr.w	r3, r3, #2
 802e418:	81a3      	strh	r3, [r4, #12]
 802e41a:	e7e3      	b.n	802e3e4 <__smakebuf_r+0xc>
 802e41c:	4b0d      	ldr	r3, [pc, #52]	; (802e454 <__smakebuf_r+0x7c>)
 802e41e:	62b3      	str	r3, [r6, #40]	; 0x28
 802e420:	89a3      	ldrh	r3, [r4, #12]
 802e422:	6020      	str	r0, [r4, #0]
 802e424:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802e428:	81a3      	strh	r3, [r4, #12]
 802e42a:	9b00      	ldr	r3, [sp, #0]
 802e42c:	6163      	str	r3, [r4, #20]
 802e42e:	9b01      	ldr	r3, [sp, #4]
 802e430:	6120      	str	r0, [r4, #16]
 802e432:	b15b      	cbz	r3, 802e44c <__smakebuf_r+0x74>
 802e434:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802e438:	4630      	mov	r0, r6
 802e43a:	f000 fbd7 	bl	802ebec <_isatty_r>
 802e43e:	b128      	cbz	r0, 802e44c <__smakebuf_r+0x74>
 802e440:	89a3      	ldrh	r3, [r4, #12]
 802e442:	f023 0303 	bic.w	r3, r3, #3
 802e446:	f043 0301 	orr.w	r3, r3, #1
 802e44a:	81a3      	strh	r3, [r4, #12]
 802e44c:	89a0      	ldrh	r0, [r4, #12]
 802e44e:	4305      	orrs	r5, r0
 802e450:	81a5      	strh	r5, [r4, #12]
 802e452:	e7cd      	b.n	802e3f0 <__smakebuf_r+0x18>
 802e454:	0802c0ad 	.word	0x0802c0ad

0802e458 <__malloc_lock>:
 802e458:	4801      	ldr	r0, [pc, #4]	; (802e460 <__malloc_lock+0x8>)
 802e45a:	f7fd bf30 	b.w	802c2be <__retarget_lock_acquire_recursive>
 802e45e:	bf00      	nop
 802e460:	2001e2dd 	.word	0x2001e2dd

0802e464 <__malloc_unlock>:
 802e464:	4801      	ldr	r0, [pc, #4]	; (802e46c <__malloc_unlock+0x8>)
 802e466:	f7fd bf2c 	b.w	802c2c2 <__retarget_lock_release_recursive>
 802e46a:	bf00      	nop
 802e46c:	2001e2dd 	.word	0x2001e2dd

0802e470 <_Balloc>:
 802e470:	b570      	push	{r4, r5, r6, lr}
 802e472:	6a46      	ldr	r6, [r0, #36]	; 0x24
 802e474:	4604      	mov	r4, r0
 802e476:	460d      	mov	r5, r1
 802e478:	b976      	cbnz	r6, 802e498 <_Balloc+0x28>
 802e47a:	2010      	movs	r0, #16
 802e47c:	f7fd ff22 	bl	802c2c4 <malloc>
 802e480:	4602      	mov	r2, r0
 802e482:	6260      	str	r0, [r4, #36]	; 0x24
 802e484:	b920      	cbnz	r0, 802e490 <_Balloc+0x20>
 802e486:	4b18      	ldr	r3, [pc, #96]	; (802e4e8 <_Balloc+0x78>)
 802e488:	4818      	ldr	r0, [pc, #96]	; (802e4ec <_Balloc+0x7c>)
 802e48a:	2166      	movs	r1, #102	; 0x66
 802e48c:	f7fd fdb2 	bl	802bff4 <__assert_func>
 802e490:	e9c0 6601 	strd	r6, r6, [r0, #4]
 802e494:	6006      	str	r6, [r0, #0]
 802e496:	60c6      	str	r6, [r0, #12]
 802e498:	6a66      	ldr	r6, [r4, #36]	; 0x24
 802e49a:	68f3      	ldr	r3, [r6, #12]
 802e49c:	b183      	cbz	r3, 802e4c0 <_Balloc+0x50>
 802e49e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802e4a0:	68db      	ldr	r3, [r3, #12]
 802e4a2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 802e4a6:	b9b8      	cbnz	r0, 802e4d8 <_Balloc+0x68>
 802e4a8:	2101      	movs	r1, #1
 802e4aa:	fa01 f605 	lsl.w	r6, r1, r5
 802e4ae:	1d72      	adds	r2, r6, #5
 802e4b0:	0092      	lsls	r2, r2, #2
 802e4b2:	4620      	mov	r0, r4
 802e4b4:	f000 fb60 	bl	802eb78 <_calloc_r>
 802e4b8:	b160      	cbz	r0, 802e4d4 <_Balloc+0x64>
 802e4ba:	e9c0 5601 	strd	r5, r6, [r0, #4]
 802e4be:	e00e      	b.n	802e4de <_Balloc+0x6e>
 802e4c0:	2221      	movs	r2, #33	; 0x21
 802e4c2:	2104      	movs	r1, #4
 802e4c4:	4620      	mov	r0, r4
 802e4c6:	f000 fb57 	bl	802eb78 <_calloc_r>
 802e4ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802e4cc:	60f0      	str	r0, [r6, #12]
 802e4ce:	68db      	ldr	r3, [r3, #12]
 802e4d0:	2b00      	cmp	r3, #0
 802e4d2:	d1e4      	bne.n	802e49e <_Balloc+0x2e>
 802e4d4:	2000      	movs	r0, #0
 802e4d6:	bd70      	pop	{r4, r5, r6, pc}
 802e4d8:	6802      	ldr	r2, [r0, #0]
 802e4da:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 802e4de:	2300      	movs	r3, #0
 802e4e0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 802e4e4:	e7f7      	b.n	802e4d6 <_Balloc+0x66>
 802e4e6:	bf00      	nop
 802e4e8:	08049b85 	.word	0x08049b85
 802e4ec:	08049c08 	.word	0x08049c08

0802e4f0 <_Bfree>:
 802e4f0:	b570      	push	{r4, r5, r6, lr}
 802e4f2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 802e4f4:	4605      	mov	r5, r0
 802e4f6:	460c      	mov	r4, r1
 802e4f8:	b976      	cbnz	r6, 802e518 <_Bfree+0x28>
 802e4fa:	2010      	movs	r0, #16
 802e4fc:	f7fd fee2 	bl	802c2c4 <malloc>
 802e500:	4602      	mov	r2, r0
 802e502:	6268      	str	r0, [r5, #36]	; 0x24
 802e504:	b920      	cbnz	r0, 802e510 <_Bfree+0x20>
 802e506:	4b09      	ldr	r3, [pc, #36]	; (802e52c <_Bfree+0x3c>)
 802e508:	4809      	ldr	r0, [pc, #36]	; (802e530 <_Bfree+0x40>)
 802e50a:	218a      	movs	r1, #138	; 0x8a
 802e50c:	f7fd fd72 	bl	802bff4 <__assert_func>
 802e510:	e9c0 6601 	strd	r6, r6, [r0, #4]
 802e514:	6006      	str	r6, [r0, #0]
 802e516:	60c6      	str	r6, [r0, #12]
 802e518:	b13c      	cbz	r4, 802e52a <_Bfree+0x3a>
 802e51a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 802e51c:	6862      	ldr	r2, [r4, #4]
 802e51e:	68db      	ldr	r3, [r3, #12]
 802e520:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802e524:	6021      	str	r1, [r4, #0]
 802e526:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 802e52a:	bd70      	pop	{r4, r5, r6, pc}
 802e52c:	08049b85 	.word	0x08049b85
 802e530:	08049c08 	.word	0x08049c08

0802e534 <__multadd>:
 802e534:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e538:	690d      	ldr	r5, [r1, #16]
 802e53a:	4607      	mov	r7, r0
 802e53c:	460c      	mov	r4, r1
 802e53e:	461e      	mov	r6, r3
 802e540:	f101 0c14 	add.w	ip, r1, #20
 802e544:	2000      	movs	r0, #0
 802e546:	f8dc 3000 	ldr.w	r3, [ip]
 802e54a:	b299      	uxth	r1, r3
 802e54c:	fb02 6101 	mla	r1, r2, r1, r6
 802e550:	0c1e      	lsrs	r6, r3, #16
 802e552:	0c0b      	lsrs	r3, r1, #16
 802e554:	fb02 3306 	mla	r3, r2, r6, r3
 802e558:	b289      	uxth	r1, r1
 802e55a:	3001      	adds	r0, #1
 802e55c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 802e560:	4285      	cmp	r5, r0
 802e562:	f84c 1b04 	str.w	r1, [ip], #4
 802e566:	ea4f 4613 	mov.w	r6, r3, lsr #16
 802e56a:	dcec      	bgt.n	802e546 <__multadd+0x12>
 802e56c:	b30e      	cbz	r6, 802e5b2 <__multadd+0x7e>
 802e56e:	68a3      	ldr	r3, [r4, #8]
 802e570:	42ab      	cmp	r3, r5
 802e572:	dc19      	bgt.n	802e5a8 <__multadd+0x74>
 802e574:	6861      	ldr	r1, [r4, #4]
 802e576:	4638      	mov	r0, r7
 802e578:	3101      	adds	r1, #1
 802e57a:	f7ff ff79 	bl	802e470 <_Balloc>
 802e57e:	4680      	mov	r8, r0
 802e580:	b928      	cbnz	r0, 802e58e <__multadd+0x5a>
 802e582:	4602      	mov	r2, r0
 802e584:	4b0c      	ldr	r3, [pc, #48]	; (802e5b8 <__multadd+0x84>)
 802e586:	480d      	ldr	r0, [pc, #52]	; (802e5bc <__multadd+0x88>)
 802e588:	21b5      	movs	r1, #181	; 0xb5
 802e58a:	f7fd fd33 	bl	802bff4 <__assert_func>
 802e58e:	6922      	ldr	r2, [r4, #16]
 802e590:	3202      	adds	r2, #2
 802e592:	f104 010c 	add.w	r1, r4, #12
 802e596:	0092      	lsls	r2, r2, #2
 802e598:	300c      	adds	r0, #12
 802e59a:	f7fd fea3 	bl	802c2e4 <memcpy>
 802e59e:	4621      	mov	r1, r4
 802e5a0:	4638      	mov	r0, r7
 802e5a2:	f7ff ffa5 	bl	802e4f0 <_Bfree>
 802e5a6:	4644      	mov	r4, r8
 802e5a8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 802e5ac:	3501      	adds	r5, #1
 802e5ae:	615e      	str	r6, [r3, #20]
 802e5b0:	6125      	str	r5, [r4, #16]
 802e5b2:	4620      	mov	r0, r4
 802e5b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e5b8:	08049bf7 	.word	0x08049bf7
 802e5bc:	08049c08 	.word	0x08049c08

0802e5c0 <__hi0bits>:
 802e5c0:	0c03      	lsrs	r3, r0, #16
 802e5c2:	041b      	lsls	r3, r3, #16
 802e5c4:	b9d3      	cbnz	r3, 802e5fc <__hi0bits+0x3c>
 802e5c6:	0400      	lsls	r0, r0, #16
 802e5c8:	2310      	movs	r3, #16
 802e5ca:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 802e5ce:	bf04      	itt	eq
 802e5d0:	0200      	lsleq	r0, r0, #8
 802e5d2:	3308      	addeq	r3, #8
 802e5d4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 802e5d8:	bf04      	itt	eq
 802e5da:	0100      	lsleq	r0, r0, #4
 802e5dc:	3304      	addeq	r3, #4
 802e5de:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 802e5e2:	bf04      	itt	eq
 802e5e4:	0080      	lsleq	r0, r0, #2
 802e5e6:	3302      	addeq	r3, #2
 802e5e8:	2800      	cmp	r0, #0
 802e5ea:	db05      	blt.n	802e5f8 <__hi0bits+0x38>
 802e5ec:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 802e5f0:	f103 0301 	add.w	r3, r3, #1
 802e5f4:	bf08      	it	eq
 802e5f6:	2320      	moveq	r3, #32
 802e5f8:	4618      	mov	r0, r3
 802e5fa:	4770      	bx	lr
 802e5fc:	2300      	movs	r3, #0
 802e5fe:	e7e4      	b.n	802e5ca <__hi0bits+0xa>

0802e600 <__lo0bits>:
 802e600:	6803      	ldr	r3, [r0, #0]
 802e602:	f013 0207 	ands.w	r2, r3, #7
 802e606:	4601      	mov	r1, r0
 802e608:	d00b      	beq.n	802e622 <__lo0bits+0x22>
 802e60a:	07da      	lsls	r2, r3, #31
 802e60c:	d423      	bmi.n	802e656 <__lo0bits+0x56>
 802e60e:	0798      	lsls	r0, r3, #30
 802e610:	bf49      	itett	mi
 802e612:	085b      	lsrmi	r3, r3, #1
 802e614:	089b      	lsrpl	r3, r3, #2
 802e616:	2001      	movmi	r0, #1
 802e618:	600b      	strmi	r3, [r1, #0]
 802e61a:	bf5c      	itt	pl
 802e61c:	600b      	strpl	r3, [r1, #0]
 802e61e:	2002      	movpl	r0, #2
 802e620:	4770      	bx	lr
 802e622:	b298      	uxth	r0, r3
 802e624:	b9a8      	cbnz	r0, 802e652 <__lo0bits+0x52>
 802e626:	0c1b      	lsrs	r3, r3, #16
 802e628:	2010      	movs	r0, #16
 802e62a:	b2da      	uxtb	r2, r3
 802e62c:	b90a      	cbnz	r2, 802e632 <__lo0bits+0x32>
 802e62e:	3008      	adds	r0, #8
 802e630:	0a1b      	lsrs	r3, r3, #8
 802e632:	071a      	lsls	r2, r3, #28
 802e634:	bf04      	itt	eq
 802e636:	091b      	lsreq	r3, r3, #4
 802e638:	3004      	addeq	r0, #4
 802e63a:	079a      	lsls	r2, r3, #30
 802e63c:	bf04      	itt	eq
 802e63e:	089b      	lsreq	r3, r3, #2
 802e640:	3002      	addeq	r0, #2
 802e642:	07da      	lsls	r2, r3, #31
 802e644:	d403      	bmi.n	802e64e <__lo0bits+0x4e>
 802e646:	085b      	lsrs	r3, r3, #1
 802e648:	f100 0001 	add.w	r0, r0, #1
 802e64c:	d005      	beq.n	802e65a <__lo0bits+0x5a>
 802e64e:	600b      	str	r3, [r1, #0]
 802e650:	4770      	bx	lr
 802e652:	4610      	mov	r0, r2
 802e654:	e7e9      	b.n	802e62a <__lo0bits+0x2a>
 802e656:	2000      	movs	r0, #0
 802e658:	4770      	bx	lr
 802e65a:	2020      	movs	r0, #32
 802e65c:	4770      	bx	lr
	...

0802e660 <__i2b>:
 802e660:	b510      	push	{r4, lr}
 802e662:	460c      	mov	r4, r1
 802e664:	2101      	movs	r1, #1
 802e666:	f7ff ff03 	bl	802e470 <_Balloc>
 802e66a:	4602      	mov	r2, r0
 802e66c:	b928      	cbnz	r0, 802e67a <__i2b+0x1a>
 802e66e:	4b05      	ldr	r3, [pc, #20]	; (802e684 <__i2b+0x24>)
 802e670:	4805      	ldr	r0, [pc, #20]	; (802e688 <__i2b+0x28>)
 802e672:	f44f 71a0 	mov.w	r1, #320	; 0x140
 802e676:	f7fd fcbd 	bl	802bff4 <__assert_func>
 802e67a:	2301      	movs	r3, #1
 802e67c:	6144      	str	r4, [r0, #20]
 802e67e:	6103      	str	r3, [r0, #16]
 802e680:	bd10      	pop	{r4, pc}
 802e682:	bf00      	nop
 802e684:	08049bf7 	.word	0x08049bf7
 802e688:	08049c08 	.word	0x08049c08

0802e68c <__multiply>:
 802e68c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e690:	4691      	mov	r9, r2
 802e692:	690a      	ldr	r2, [r1, #16]
 802e694:	f8d9 3010 	ldr.w	r3, [r9, #16]
 802e698:	429a      	cmp	r2, r3
 802e69a:	bfb8      	it	lt
 802e69c:	460b      	movlt	r3, r1
 802e69e:	460c      	mov	r4, r1
 802e6a0:	bfbc      	itt	lt
 802e6a2:	464c      	movlt	r4, r9
 802e6a4:	4699      	movlt	r9, r3
 802e6a6:	6927      	ldr	r7, [r4, #16]
 802e6a8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 802e6ac:	68a3      	ldr	r3, [r4, #8]
 802e6ae:	6861      	ldr	r1, [r4, #4]
 802e6b0:	eb07 060a 	add.w	r6, r7, sl
 802e6b4:	42b3      	cmp	r3, r6
 802e6b6:	b085      	sub	sp, #20
 802e6b8:	bfb8      	it	lt
 802e6ba:	3101      	addlt	r1, #1
 802e6bc:	f7ff fed8 	bl	802e470 <_Balloc>
 802e6c0:	b930      	cbnz	r0, 802e6d0 <__multiply+0x44>
 802e6c2:	4602      	mov	r2, r0
 802e6c4:	4b44      	ldr	r3, [pc, #272]	; (802e7d8 <__multiply+0x14c>)
 802e6c6:	4845      	ldr	r0, [pc, #276]	; (802e7dc <__multiply+0x150>)
 802e6c8:	f240 115d 	movw	r1, #349	; 0x15d
 802e6cc:	f7fd fc92 	bl	802bff4 <__assert_func>
 802e6d0:	f100 0514 	add.w	r5, r0, #20
 802e6d4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 802e6d8:	462b      	mov	r3, r5
 802e6da:	2200      	movs	r2, #0
 802e6dc:	4543      	cmp	r3, r8
 802e6de:	d321      	bcc.n	802e724 <__multiply+0x98>
 802e6e0:	f104 0314 	add.w	r3, r4, #20
 802e6e4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802e6e8:	f109 0314 	add.w	r3, r9, #20
 802e6ec:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 802e6f0:	9202      	str	r2, [sp, #8]
 802e6f2:	1b3a      	subs	r2, r7, r4
 802e6f4:	3a15      	subs	r2, #21
 802e6f6:	f022 0203 	bic.w	r2, r2, #3
 802e6fa:	3204      	adds	r2, #4
 802e6fc:	f104 0115 	add.w	r1, r4, #21
 802e700:	428f      	cmp	r7, r1
 802e702:	bf38      	it	cc
 802e704:	2204      	movcc	r2, #4
 802e706:	9201      	str	r2, [sp, #4]
 802e708:	9a02      	ldr	r2, [sp, #8]
 802e70a:	9303      	str	r3, [sp, #12]
 802e70c:	429a      	cmp	r2, r3
 802e70e:	d80c      	bhi.n	802e72a <__multiply+0x9e>
 802e710:	2e00      	cmp	r6, #0
 802e712:	dd03      	ble.n	802e71c <__multiply+0x90>
 802e714:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 802e718:	2b00      	cmp	r3, #0
 802e71a:	d05a      	beq.n	802e7d2 <__multiply+0x146>
 802e71c:	6106      	str	r6, [r0, #16]
 802e71e:	b005      	add	sp, #20
 802e720:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e724:	f843 2b04 	str.w	r2, [r3], #4
 802e728:	e7d8      	b.n	802e6dc <__multiply+0x50>
 802e72a:	f8b3 a000 	ldrh.w	sl, [r3]
 802e72e:	f1ba 0f00 	cmp.w	sl, #0
 802e732:	d024      	beq.n	802e77e <__multiply+0xf2>
 802e734:	f104 0e14 	add.w	lr, r4, #20
 802e738:	46a9      	mov	r9, r5
 802e73a:	f04f 0c00 	mov.w	ip, #0
 802e73e:	f85e 2b04 	ldr.w	r2, [lr], #4
 802e742:	f8d9 1000 	ldr.w	r1, [r9]
 802e746:	fa1f fb82 	uxth.w	fp, r2
 802e74a:	b289      	uxth	r1, r1
 802e74c:	fb0a 110b 	mla	r1, sl, fp, r1
 802e750:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 802e754:	f8d9 2000 	ldr.w	r2, [r9]
 802e758:	4461      	add	r1, ip
 802e75a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 802e75e:	fb0a c20b 	mla	r2, sl, fp, ip
 802e762:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 802e766:	b289      	uxth	r1, r1
 802e768:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 802e76c:	4577      	cmp	r7, lr
 802e76e:	f849 1b04 	str.w	r1, [r9], #4
 802e772:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 802e776:	d8e2      	bhi.n	802e73e <__multiply+0xb2>
 802e778:	9a01      	ldr	r2, [sp, #4]
 802e77a:	f845 c002 	str.w	ip, [r5, r2]
 802e77e:	9a03      	ldr	r2, [sp, #12]
 802e780:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 802e784:	3304      	adds	r3, #4
 802e786:	f1b9 0f00 	cmp.w	r9, #0
 802e78a:	d020      	beq.n	802e7ce <__multiply+0x142>
 802e78c:	6829      	ldr	r1, [r5, #0]
 802e78e:	f104 0c14 	add.w	ip, r4, #20
 802e792:	46ae      	mov	lr, r5
 802e794:	f04f 0a00 	mov.w	sl, #0
 802e798:	f8bc b000 	ldrh.w	fp, [ip]
 802e79c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 802e7a0:	fb09 220b 	mla	r2, r9, fp, r2
 802e7a4:	4492      	add	sl, r2
 802e7a6:	b289      	uxth	r1, r1
 802e7a8:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 802e7ac:	f84e 1b04 	str.w	r1, [lr], #4
 802e7b0:	f85c 2b04 	ldr.w	r2, [ip], #4
 802e7b4:	f8be 1000 	ldrh.w	r1, [lr]
 802e7b8:	0c12      	lsrs	r2, r2, #16
 802e7ba:	fb09 1102 	mla	r1, r9, r2, r1
 802e7be:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 802e7c2:	4567      	cmp	r7, ip
 802e7c4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 802e7c8:	d8e6      	bhi.n	802e798 <__multiply+0x10c>
 802e7ca:	9a01      	ldr	r2, [sp, #4]
 802e7cc:	50a9      	str	r1, [r5, r2]
 802e7ce:	3504      	adds	r5, #4
 802e7d0:	e79a      	b.n	802e708 <__multiply+0x7c>
 802e7d2:	3e01      	subs	r6, #1
 802e7d4:	e79c      	b.n	802e710 <__multiply+0x84>
 802e7d6:	bf00      	nop
 802e7d8:	08049bf7 	.word	0x08049bf7
 802e7dc:	08049c08 	.word	0x08049c08

0802e7e0 <__pow5mult>:
 802e7e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802e7e4:	4615      	mov	r5, r2
 802e7e6:	f012 0203 	ands.w	r2, r2, #3
 802e7ea:	4606      	mov	r6, r0
 802e7ec:	460f      	mov	r7, r1
 802e7ee:	d007      	beq.n	802e800 <__pow5mult+0x20>
 802e7f0:	4c25      	ldr	r4, [pc, #148]	; (802e888 <__pow5mult+0xa8>)
 802e7f2:	3a01      	subs	r2, #1
 802e7f4:	2300      	movs	r3, #0
 802e7f6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 802e7fa:	f7ff fe9b 	bl	802e534 <__multadd>
 802e7fe:	4607      	mov	r7, r0
 802e800:	10ad      	asrs	r5, r5, #2
 802e802:	d03d      	beq.n	802e880 <__pow5mult+0xa0>
 802e804:	6a74      	ldr	r4, [r6, #36]	; 0x24
 802e806:	b97c      	cbnz	r4, 802e828 <__pow5mult+0x48>
 802e808:	2010      	movs	r0, #16
 802e80a:	f7fd fd5b 	bl	802c2c4 <malloc>
 802e80e:	4602      	mov	r2, r0
 802e810:	6270      	str	r0, [r6, #36]	; 0x24
 802e812:	b928      	cbnz	r0, 802e820 <__pow5mult+0x40>
 802e814:	4b1d      	ldr	r3, [pc, #116]	; (802e88c <__pow5mult+0xac>)
 802e816:	481e      	ldr	r0, [pc, #120]	; (802e890 <__pow5mult+0xb0>)
 802e818:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 802e81c:	f7fd fbea 	bl	802bff4 <__assert_func>
 802e820:	e9c0 4401 	strd	r4, r4, [r0, #4]
 802e824:	6004      	str	r4, [r0, #0]
 802e826:	60c4      	str	r4, [r0, #12]
 802e828:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 802e82c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 802e830:	b94c      	cbnz	r4, 802e846 <__pow5mult+0x66>
 802e832:	f240 2171 	movw	r1, #625	; 0x271
 802e836:	4630      	mov	r0, r6
 802e838:	f7ff ff12 	bl	802e660 <__i2b>
 802e83c:	2300      	movs	r3, #0
 802e83e:	f8c8 0008 	str.w	r0, [r8, #8]
 802e842:	4604      	mov	r4, r0
 802e844:	6003      	str	r3, [r0, #0]
 802e846:	f04f 0900 	mov.w	r9, #0
 802e84a:	07eb      	lsls	r3, r5, #31
 802e84c:	d50a      	bpl.n	802e864 <__pow5mult+0x84>
 802e84e:	4639      	mov	r1, r7
 802e850:	4622      	mov	r2, r4
 802e852:	4630      	mov	r0, r6
 802e854:	f7ff ff1a 	bl	802e68c <__multiply>
 802e858:	4639      	mov	r1, r7
 802e85a:	4680      	mov	r8, r0
 802e85c:	4630      	mov	r0, r6
 802e85e:	f7ff fe47 	bl	802e4f0 <_Bfree>
 802e862:	4647      	mov	r7, r8
 802e864:	106d      	asrs	r5, r5, #1
 802e866:	d00b      	beq.n	802e880 <__pow5mult+0xa0>
 802e868:	6820      	ldr	r0, [r4, #0]
 802e86a:	b938      	cbnz	r0, 802e87c <__pow5mult+0x9c>
 802e86c:	4622      	mov	r2, r4
 802e86e:	4621      	mov	r1, r4
 802e870:	4630      	mov	r0, r6
 802e872:	f7ff ff0b 	bl	802e68c <__multiply>
 802e876:	6020      	str	r0, [r4, #0]
 802e878:	f8c0 9000 	str.w	r9, [r0]
 802e87c:	4604      	mov	r4, r0
 802e87e:	e7e4      	b.n	802e84a <__pow5mult+0x6a>
 802e880:	4638      	mov	r0, r7
 802e882:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802e886:	bf00      	nop
 802e888:	08049d58 	.word	0x08049d58
 802e88c:	08049b85 	.word	0x08049b85
 802e890:	08049c08 	.word	0x08049c08

0802e894 <__lshift>:
 802e894:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802e898:	460c      	mov	r4, r1
 802e89a:	6849      	ldr	r1, [r1, #4]
 802e89c:	6923      	ldr	r3, [r4, #16]
 802e89e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 802e8a2:	68a3      	ldr	r3, [r4, #8]
 802e8a4:	4607      	mov	r7, r0
 802e8a6:	4691      	mov	r9, r2
 802e8a8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 802e8ac:	f108 0601 	add.w	r6, r8, #1
 802e8b0:	42b3      	cmp	r3, r6
 802e8b2:	db0b      	blt.n	802e8cc <__lshift+0x38>
 802e8b4:	4638      	mov	r0, r7
 802e8b6:	f7ff fddb 	bl	802e470 <_Balloc>
 802e8ba:	4605      	mov	r5, r0
 802e8bc:	b948      	cbnz	r0, 802e8d2 <__lshift+0x3e>
 802e8be:	4602      	mov	r2, r0
 802e8c0:	4b2a      	ldr	r3, [pc, #168]	; (802e96c <__lshift+0xd8>)
 802e8c2:	482b      	ldr	r0, [pc, #172]	; (802e970 <__lshift+0xdc>)
 802e8c4:	f240 11d9 	movw	r1, #473	; 0x1d9
 802e8c8:	f7fd fb94 	bl	802bff4 <__assert_func>
 802e8cc:	3101      	adds	r1, #1
 802e8ce:	005b      	lsls	r3, r3, #1
 802e8d0:	e7ee      	b.n	802e8b0 <__lshift+0x1c>
 802e8d2:	2300      	movs	r3, #0
 802e8d4:	f100 0114 	add.w	r1, r0, #20
 802e8d8:	f100 0210 	add.w	r2, r0, #16
 802e8dc:	4618      	mov	r0, r3
 802e8de:	4553      	cmp	r3, sl
 802e8e0:	db37      	blt.n	802e952 <__lshift+0xbe>
 802e8e2:	6920      	ldr	r0, [r4, #16]
 802e8e4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 802e8e8:	f104 0314 	add.w	r3, r4, #20
 802e8ec:	f019 091f 	ands.w	r9, r9, #31
 802e8f0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802e8f4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 802e8f8:	d02f      	beq.n	802e95a <__lshift+0xc6>
 802e8fa:	f1c9 0e20 	rsb	lr, r9, #32
 802e8fe:	468a      	mov	sl, r1
 802e900:	f04f 0c00 	mov.w	ip, #0
 802e904:	681a      	ldr	r2, [r3, #0]
 802e906:	fa02 f209 	lsl.w	r2, r2, r9
 802e90a:	ea42 020c 	orr.w	r2, r2, ip
 802e90e:	f84a 2b04 	str.w	r2, [sl], #4
 802e912:	f853 2b04 	ldr.w	r2, [r3], #4
 802e916:	4298      	cmp	r0, r3
 802e918:	fa22 fc0e 	lsr.w	ip, r2, lr
 802e91c:	d8f2      	bhi.n	802e904 <__lshift+0x70>
 802e91e:	1b03      	subs	r3, r0, r4
 802e920:	3b15      	subs	r3, #21
 802e922:	f023 0303 	bic.w	r3, r3, #3
 802e926:	3304      	adds	r3, #4
 802e928:	f104 0215 	add.w	r2, r4, #21
 802e92c:	4290      	cmp	r0, r2
 802e92e:	bf38      	it	cc
 802e930:	2304      	movcc	r3, #4
 802e932:	f841 c003 	str.w	ip, [r1, r3]
 802e936:	f1bc 0f00 	cmp.w	ip, #0
 802e93a:	d001      	beq.n	802e940 <__lshift+0xac>
 802e93c:	f108 0602 	add.w	r6, r8, #2
 802e940:	3e01      	subs	r6, #1
 802e942:	4638      	mov	r0, r7
 802e944:	612e      	str	r6, [r5, #16]
 802e946:	4621      	mov	r1, r4
 802e948:	f7ff fdd2 	bl	802e4f0 <_Bfree>
 802e94c:	4628      	mov	r0, r5
 802e94e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e952:	f842 0f04 	str.w	r0, [r2, #4]!
 802e956:	3301      	adds	r3, #1
 802e958:	e7c1      	b.n	802e8de <__lshift+0x4a>
 802e95a:	3904      	subs	r1, #4
 802e95c:	f853 2b04 	ldr.w	r2, [r3], #4
 802e960:	f841 2f04 	str.w	r2, [r1, #4]!
 802e964:	4298      	cmp	r0, r3
 802e966:	d8f9      	bhi.n	802e95c <__lshift+0xc8>
 802e968:	e7ea      	b.n	802e940 <__lshift+0xac>
 802e96a:	bf00      	nop
 802e96c:	08049bf7 	.word	0x08049bf7
 802e970:	08049c08 	.word	0x08049c08

0802e974 <__mcmp>:
 802e974:	b530      	push	{r4, r5, lr}
 802e976:	6902      	ldr	r2, [r0, #16]
 802e978:	690c      	ldr	r4, [r1, #16]
 802e97a:	1b12      	subs	r2, r2, r4
 802e97c:	d10e      	bne.n	802e99c <__mcmp+0x28>
 802e97e:	f100 0314 	add.w	r3, r0, #20
 802e982:	3114      	adds	r1, #20
 802e984:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 802e988:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 802e98c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 802e990:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 802e994:	42a5      	cmp	r5, r4
 802e996:	d003      	beq.n	802e9a0 <__mcmp+0x2c>
 802e998:	d305      	bcc.n	802e9a6 <__mcmp+0x32>
 802e99a:	2201      	movs	r2, #1
 802e99c:	4610      	mov	r0, r2
 802e99e:	bd30      	pop	{r4, r5, pc}
 802e9a0:	4283      	cmp	r3, r0
 802e9a2:	d3f3      	bcc.n	802e98c <__mcmp+0x18>
 802e9a4:	e7fa      	b.n	802e99c <__mcmp+0x28>
 802e9a6:	f04f 32ff 	mov.w	r2, #4294967295
 802e9aa:	e7f7      	b.n	802e99c <__mcmp+0x28>

0802e9ac <__mdiff>:
 802e9ac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e9b0:	460c      	mov	r4, r1
 802e9b2:	4606      	mov	r6, r0
 802e9b4:	4611      	mov	r1, r2
 802e9b6:	4620      	mov	r0, r4
 802e9b8:	4690      	mov	r8, r2
 802e9ba:	f7ff ffdb 	bl	802e974 <__mcmp>
 802e9be:	1e05      	subs	r5, r0, #0
 802e9c0:	d110      	bne.n	802e9e4 <__mdiff+0x38>
 802e9c2:	4629      	mov	r1, r5
 802e9c4:	4630      	mov	r0, r6
 802e9c6:	f7ff fd53 	bl	802e470 <_Balloc>
 802e9ca:	b930      	cbnz	r0, 802e9da <__mdiff+0x2e>
 802e9cc:	4b3a      	ldr	r3, [pc, #232]	; (802eab8 <__mdiff+0x10c>)
 802e9ce:	4602      	mov	r2, r0
 802e9d0:	f240 2132 	movw	r1, #562	; 0x232
 802e9d4:	4839      	ldr	r0, [pc, #228]	; (802eabc <__mdiff+0x110>)
 802e9d6:	f7fd fb0d 	bl	802bff4 <__assert_func>
 802e9da:	2301      	movs	r3, #1
 802e9dc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 802e9e0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e9e4:	bfa4      	itt	ge
 802e9e6:	4643      	movge	r3, r8
 802e9e8:	46a0      	movge	r8, r4
 802e9ea:	4630      	mov	r0, r6
 802e9ec:	f8d8 1004 	ldr.w	r1, [r8, #4]
 802e9f0:	bfa6      	itte	ge
 802e9f2:	461c      	movge	r4, r3
 802e9f4:	2500      	movge	r5, #0
 802e9f6:	2501      	movlt	r5, #1
 802e9f8:	f7ff fd3a 	bl	802e470 <_Balloc>
 802e9fc:	b920      	cbnz	r0, 802ea08 <__mdiff+0x5c>
 802e9fe:	4b2e      	ldr	r3, [pc, #184]	; (802eab8 <__mdiff+0x10c>)
 802ea00:	4602      	mov	r2, r0
 802ea02:	f44f 7110 	mov.w	r1, #576	; 0x240
 802ea06:	e7e5      	b.n	802e9d4 <__mdiff+0x28>
 802ea08:	f8d8 7010 	ldr.w	r7, [r8, #16]
 802ea0c:	6926      	ldr	r6, [r4, #16]
 802ea0e:	60c5      	str	r5, [r0, #12]
 802ea10:	f104 0914 	add.w	r9, r4, #20
 802ea14:	f108 0514 	add.w	r5, r8, #20
 802ea18:	f100 0e14 	add.w	lr, r0, #20
 802ea1c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 802ea20:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 802ea24:	f108 0210 	add.w	r2, r8, #16
 802ea28:	46f2      	mov	sl, lr
 802ea2a:	2100      	movs	r1, #0
 802ea2c:	f859 3b04 	ldr.w	r3, [r9], #4
 802ea30:	f852 bf04 	ldr.w	fp, [r2, #4]!
 802ea34:	fa1f f883 	uxth.w	r8, r3
 802ea38:	fa11 f18b 	uxtah	r1, r1, fp
 802ea3c:	0c1b      	lsrs	r3, r3, #16
 802ea3e:	eba1 0808 	sub.w	r8, r1, r8
 802ea42:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 802ea46:	eb03 4328 	add.w	r3, r3, r8, asr #16
 802ea4a:	fa1f f888 	uxth.w	r8, r8
 802ea4e:	1419      	asrs	r1, r3, #16
 802ea50:	454e      	cmp	r6, r9
 802ea52:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 802ea56:	f84a 3b04 	str.w	r3, [sl], #4
 802ea5a:	d8e7      	bhi.n	802ea2c <__mdiff+0x80>
 802ea5c:	1b33      	subs	r3, r6, r4
 802ea5e:	3b15      	subs	r3, #21
 802ea60:	f023 0303 	bic.w	r3, r3, #3
 802ea64:	3304      	adds	r3, #4
 802ea66:	3415      	adds	r4, #21
 802ea68:	42a6      	cmp	r6, r4
 802ea6a:	bf38      	it	cc
 802ea6c:	2304      	movcc	r3, #4
 802ea6e:	441d      	add	r5, r3
 802ea70:	4473      	add	r3, lr
 802ea72:	469e      	mov	lr, r3
 802ea74:	462e      	mov	r6, r5
 802ea76:	4566      	cmp	r6, ip
 802ea78:	d30e      	bcc.n	802ea98 <__mdiff+0xec>
 802ea7a:	f10c 0203 	add.w	r2, ip, #3
 802ea7e:	1b52      	subs	r2, r2, r5
 802ea80:	f022 0203 	bic.w	r2, r2, #3
 802ea84:	3d03      	subs	r5, #3
 802ea86:	45ac      	cmp	ip, r5
 802ea88:	bf38      	it	cc
 802ea8a:	2200      	movcc	r2, #0
 802ea8c:	441a      	add	r2, r3
 802ea8e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 802ea92:	b17b      	cbz	r3, 802eab4 <__mdiff+0x108>
 802ea94:	6107      	str	r7, [r0, #16]
 802ea96:	e7a3      	b.n	802e9e0 <__mdiff+0x34>
 802ea98:	f856 8b04 	ldr.w	r8, [r6], #4
 802ea9c:	fa11 f288 	uxtah	r2, r1, r8
 802eaa0:	1414      	asrs	r4, r2, #16
 802eaa2:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 802eaa6:	b292      	uxth	r2, r2
 802eaa8:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 802eaac:	f84e 2b04 	str.w	r2, [lr], #4
 802eab0:	1421      	asrs	r1, r4, #16
 802eab2:	e7e0      	b.n	802ea76 <__mdiff+0xca>
 802eab4:	3f01      	subs	r7, #1
 802eab6:	e7ea      	b.n	802ea8e <__mdiff+0xe2>
 802eab8:	08049bf7 	.word	0x08049bf7
 802eabc:	08049c08 	.word	0x08049c08

0802eac0 <__d2b>:
 802eac0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 802eac4:	4689      	mov	r9, r1
 802eac6:	2101      	movs	r1, #1
 802eac8:	ec57 6b10 	vmov	r6, r7, d0
 802eacc:	4690      	mov	r8, r2
 802eace:	f7ff fccf 	bl	802e470 <_Balloc>
 802ead2:	4604      	mov	r4, r0
 802ead4:	b930      	cbnz	r0, 802eae4 <__d2b+0x24>
 802ead6:	4602      	mov	r2, r0
 802ead8:	4b25      	ldr	r3, [pc, #148]	; (802eb70 <__d2b+0xb0>)
 802eada:	4826      	ldr	r0, [pc, #152]	; (802eb74 <__d2b+0xb4>)
 802eadc:	f240 310a 	movw	r1, #778	; 0x30a
 802eae0:	f7fd fa88 	bl	802bff4 <__assert_func>
 802eae4:	f3c7 550a 	ubfx	r5, r7, #20, #11
 802eae8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 802eaec:	bb35      	cbnz	r5, 802eb3c <__d2b+0x7c>
 802eaee:	2e00      	cmp	r6, #0
 802eaf0:	9301      	str	r3, [sp, #4]
 802eaf2:	d028      	beq.n	802eb46 <__d2b+0x86>
 802eaf4:	4668      	mov	r0, sp
 802eaf6:	9600      	str	r6, [sp, #0]
 802eaf8:	f7ff fd82 	bl	802e600 <__lo0bits>
 802eafc:	9900      	ldr	r1, [sp, #0]
 802eafe:	b300      	cbz	r0, 802eb42 <__d2b+0x82>
 802eb00:	9a01      	ldr	r2, [sp, #4]
 802eb02:	f1c0 0320 	rsb	r3, r0, #32
 802eb06:	fa02 f303 	lsl.w	r3, r2, r3
 802eb0a:	430b      	orrs	r3, r1
 802eb0c:	40c2      	lsrs	r2, r0
 802eb0e:	6163      	str	r3, [r4, #20]
 802eb10:	9201      	str	r2, [sp, #4]
 802eb12:	9b01      	ldr	r3, [sp, #4]
 802eb14:	61a3      	str	r3, [r4, #24]
 802eb16:	2b00      	cmp	r3, #0
 802eb18:	bf14      	ite	ne
 802eb1a:	2202      	movne	r2, #2
 802eb1c:	2201      	moveq	r2, #1
 802eb1e:	6122      	str	r2, [r4, #16]
 802eb20:	b1d5      	cbz	r5, 802eb58 <__d2b+0x98>
 802eb22:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 802eb26:	4405      	add	r5, r0
 802eb28:	f8c9 5000 	str.w	r5, [r9]
 802eb2c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 802eb30:	f8c8 0000 	str.w	r0, [r8]
 802eb34:	4620      	mov	r0, r4
 802eb36:	b003      	add	sp, #12
 802eb38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802eb3c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 802eb40:	e7d5      	b.n	802eaee <__d2b+0x2e>
 802eb42:	6161      	str	r1, [r4, #20]
 802eb44:	e7e5      	b.n	802eb12 <__d2b+0x52>
 802eb46:	a801      	add	r0, sp, #4
 802eb48:	f7ff fd5a 	bl	802e600 <__lo0bits>
 802eb4c:	9b01      	ldr	r3, [sp, #4]
 802eb4e:	6163      	str	r3, [r4, #20]
 802eb50:	2201      	movs	r2, #1
 802eb52:	6122      	str	r2, [r4, #16]
 802eb54:	3020      	adds	r0, #32
 802eb56:	e7e3      	b.n	802eb20 <__d2b+0x60>
 802eb58:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 802eb5c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 802eb60:	f8c9 0000 	str.w	r0, [r9]
 802eb64:	6918      	ldr	r0, [r3, #16]
 802eb66:	f7ff fd2b 	bl	802e5c0 <__hi0bits>
 802eb6a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 802eb6e:	e7df      	b.n	802eb30 <__d2b+0x70>
 802eb70:	08049bf7 	.word	0x08049bf7
 802eb74:	08049c08 	.word	0x08049c08

0802eb78 <_calloc_r>:
 802eb78:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802eb7a:	fba1 2402 	umull	r2, r4, r1, r2
 802eb7e:	b94c      	cbnz	r4, 802eb94 <_calloc_r+0x1c>
 802eb80:	4611      	mov	r1, r2
 802eb82:	9201      	str	r2, [sp, #4]
 802eb84:	f7fd fc30 	bl	802c3e8 <_malloc_r>
 802eb88:	9a01      	ldr	r2, [sp, #4]
 802eb8a:	4605      	mov	r5, r0
 802eb8c:	b930      	cbnz	r0, 802eb9c <_calloc_r+0x24>
 802eb8e:	4628      	mov	r0, r5
 802eb90:	b003      	add	sp, #12
 802eb92:	bd30      	pop	{r4, r5, pc}
 802eb94:	220c      	movs	r2, #12
 802eb96:	6002      	str	r2, [r0, #0]
 802eb98:	2500      	movs	r5, #0
 802eb9a:	e7f8      	b.n	802eb8e <_calloc_r+0x16>
 802eb9c:	4621      	mov	r1, r4
 802eb9e:	f7fd fbaf 	bl	802c300 <memset>
 802eba2:	e7f4      	b.n	802eb8e <_calloc_r+0x16>

0802eba4 <_read_r>:
 802eba4:	b538      	push	{r3, r4, r5, lr}
 802eba6:	4d07      	ldr	r5, [pc, #28]	; (802ebc4 <_read_r+0x20>)
 802eba8:	4604      	mov	r4, r0
 802ebaa:	4608      	mov	r0, r1
 802ebac:	4611      	mov	r1, r2
 802ebae:	2200      	movs	r2, #0
 802ebb0:	602a      	str	r2, [r5, #0]
 802ebb2:	461a      	mov	r2, r3
 802ebb4:	f7d4 fd34 	bl	8003620 <_read>
 802ebb8:	1c43      	adds	r3, r0, #1
 802ebba:	d102      	bne.n	802ebc2 <_read_r+0x1e>
 802ebbc:	682b      	ldr	r3, [r5, #0]
 802ebbe:	b103      	cbz	r3, 802ebc2 <_read_r+0x1e>
 802ebc0:	6023      	str	r3, [r4, #0]
 802ebc2:	bd38      	pop	{r3, r4, r5, pc}
 802ebc4:	2001e3f0 	.word	0x2001e3f0

0802ebc8 <_fstat_r>:
 802ebc8:	b538      	push	{r3, r4, r5, lr}
 802ebca:	4d07      	ldr	r5, [pc, #28]	; (802ebe8 <_fstat_r+0x20>)
 802ebcc:	2300      	movs	r3, #0
 802ebce:	4604      	mov	r4, r0
 802ebd0:	4608      	mov	r0, r1
 802ebd2:	4611      	mov	r1, r2
 802ebd4:	602b      	str	r3, [r5, #0]
 802ebd6:	f7d4 fd42 	bl	800365e <_fstat>
 802ebda:	1c43      	adds	r3, r0, #1
 802ebdc:	d102      	bne.n	802ebe4 <_fstat_r+0x1c>
 802ebde:	682b      	ldr	r3, [r5, #0]
 802ebe0:	b103      	cbz	r3, 802ebe4 <_fstat_r+0x1c>
 802ebe2:	6023      	str	r3, [r4, #0]
 802ebe4:	bd38      	pop	{r3, r4, r5, pc}
 802ebe6:	bf00      	nop
 802ebe8:	2001e3f0 	.word	0x2001e3f0

0802ebec <_isatty_r>:
 802ebec:	b538      	push	{r3, r4, r5, lr}
 802ebee:	4d06      	ldr	r5, [pc, #24]	; (802ec08 <_isatty_r+0x1c>)
 802ebf0:	2300      	movs	r3, #0
 802ebf2:	4604      	mov	r4, r0
 802ebf4:	4608      	mov	r0, r1
 802ebf6:	602b      	str	r3, [r5, #0]
 802ebf8:	f7d4 fd36 	bl	8003668 <_isatty>
 802ebfc:	1c43      	adds	r3, r0, #1
 802ebfe:	d102      	bne.n	802ec06 <_isatty_r+0x1a>
 802ec00:	682b      	ldr	r3, [r5, #0]
 802ec02:	b103      	cbz	r3, 802ec06 <_isatty_r+0x1a>
 802ec04:	6023      	str	r3, [r4, #0]
 802ec06:	bd38      	pop	{r3, r4, r5, pc}
 802ec08:	2001e3f0 	.word	0x2001e3f0

0802ec0c <__ascii_mbtowc>:
 802ec0c:	b082      	sub	sp, #8
 802ec0e:	b901      	cbnz	r1, 802ec12 <__ascii_mbtowc+0x6>
 802ec10:	a901      	add	r1, sp, #4
 802ec12:	b142      	cbz	r2, 802ec26 <__ascii_mbtowc+0x1a>
 802ec14:	b14b      	cbz	r3, 802ec2a <__ascii_mbtowc+0x1e>
 802ec16:	7813      	ldrb	r3, [r2, #0]
 802ec18:	600b      	str	r3, [r1, #0]
 802ec1a:	7812      	ldrb	r2, [r2, #0]
 802ec1c:	1e10      	subs	r0, r2, #0
 802ec1e:	bf18      	it	ne
 802ec20:	2001      	movne	r0, #1
 802ec22:	b002      	add	sp, #8
 802ec24:	4770      	bx	lr
 802ec26:	4610      	mov	r0, r2
 802ec28:	e7fb      	b.n	802ec22 <__ascii_mbtowc+0x16>
 802ec2a:	f06f 0001 	mvn.w	r0, #1
 802ec2e:	e7f8      	b.n	802ec22 <__ascii_mbtowc+0x16>

0802ec30 <__ascii_wctomb>:
 802ec30:	b149      	cbz	r1, 802ec46 <__ascii_wctomb+0x16>
 802ec32:	2aff      	cmp	r2, #255	; 0xff
 802ec34:	bf85      	ittet	hi
 802ec36:	238a      	movhi	r3, #138	; 0x8a
 802ec38:	6003      	strhi	r3, [r0, #0]
 802ec3a:	700a      	strbls	r2, [r1, #0]
 802ec3c:	f04f 30ff 	movhi.w	r0, #4294967295
 802ec40:	bf98      	it	ls
 802ec42:	2001      	movls	r0, #1
 802ec44:	4770      	bx	lr
 802ec46:	4608      	mov	r0, r1
 802ec48:	4770      	bx	lr
	...

0802ec4c <_init>:
 802ec4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ec4e:	bf00      	nop
 802ec50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ec52:	bc08      	pop	{r3}
 802ec54:	469e      	mov	lr, r3
 802ec56:	4770      	bx	lr

0802ec58 <_fini>:
 802ec58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ec5a:	bf00      	nop
 802ec5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ec5e:	bc08      	pop	{r3}
 802ec60:	469e      	mov	lr, r3
 802ec62:	4770      	bx	lr
