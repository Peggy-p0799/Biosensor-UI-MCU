/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/BlockTransition.hpp>

#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/startpage_screen/StartPageView.hpp>
#include <gui/startpage_screen/StartPagePresenter.hpp>
#include <gui/instructionpage1_screen/InstructionPage1View.hpp>
#include <gui/instructionpage1_screen/InstructionPage1Presenter.hpp>
#include <gui/instructionpage2_screen/InstructionPage2View.hpp>
#include <gui/instructionpage2_screen/InstructionPage2Presenter.hpp>
#include <gui/knownpage_screen/KnownPageView.hpp>
#include <gui/knownpage_screen/KnownPagePresenter.hpp>
#include <gui/pipage_screen/PIPageView.hpp>
#include <gui/pipage_screen/PIPagePresenter.hpp>
#include <gui/startmeasurement_screen/StartMeasurementView.hpp>
#include <gui/startmeasurement_screen/StartMeasurementPresenter.hpp>
#include <gui/progressbar_screen/ProgressBarView.hpp>
#include <gui/progressbar_screen/ProgressBarPresenter.hpp>
#include <gui/datadisplaylist_screen/DataDisplayListView.hpp>
#include <gui/datadisplaylist_screen/DataDisplayListPresenter.hpp>
#include <gui/resistancegraph_screen/ResistanceGraphView.hpp>
#include <gui/resistancegraph_screen/ResistanceGraphPresenter.hpp>
#include <gui/reactancegraph_screen/ReactanceGraphView.hpp>
#include <gui/reactancegraph_screen/ReactanceGraphPresenter.hpp>
#include <gui/datasaved_screen/DataSavedView.hpp>
#include <gui/datasaved_screen/DataSavedPresenter.hpp>
#include <gui/finishpage_screen/FinishPageView.hpp>
#include <gui/finishpage_screen/FinishPagePresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< StartPageView,
            touchgfx::meta::TypeList< InstructionPage1View,
            touchgfx::meta::TypeList< InstructionPage2View,
            touchgfx::meta::TypeList< KnownPageView,
            touchgfx::meta::TypeList< PIPageView,
            touchgfx::meta::TypeList< StartMeasurementView,
            touchgfx::meta::TypeList< ProgressBarView,
            touchgfx::meta::TypeList< DataDisplayListView,
            touchgfx::meta::TypeList< ResistanceGraphView,
            touchgfx::meta::TypeList< ReactanceGraphView,
            touchgfx::meta::TypeList< DataSavedView,
            touchgfx::meta::TypeList< FinishPageView,
            touchgfx::meta::Nil > > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< StartPagePresenter,
            touchgfx::meta::TypeList< InstructionPage1Presenter,
            touchgfx::meta::TypeList< InstructionPage2Presenter,
            touchgfx::meta::TypeList< KnownPagePresenter,
            touchgfx::meta::TypeList< PIPagePresenter,
            touchgfx::meta::TypeList< StartMeasurementPresenter,
            touchgfx::meta::TypeList< ProgressBarPresenter,
            touchgfx::meta::TypeList< DataDisplayListPresenter,
            touchgfx::meta::TypeList< ResistanceGraphPresenter,
            touchgfx::meta::TypeList< ReactanceGraphPresenter,
            touchgfx::meta::TypeList< DataSavedPresenter,
            touchgfx::meta::TypeList< FinishPagePresenter,
            touchgfx::meta::Nil > > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::TypeList< SlideTransition<NORTH>,
            touchgfx::meta::TypeList< SlideTransition<SOUTH>,
            touchgfx::meta::TypeList< SlideTransition<WEST>,
            touchgfx::meta::TypeList< SlideTransition<EAST>,
            touchgfx::meta::TypeList< BlockTransition,
            touchgfx::meta::Nil > > > > >
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartPageScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
