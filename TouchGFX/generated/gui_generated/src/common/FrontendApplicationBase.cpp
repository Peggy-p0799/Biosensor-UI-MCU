/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <platform/driver/lcd/LCD16bpp.hpp>
#include <gui/startpage_screen/StartPageView.hpp>
#include <gui/startpage_screen/StartPagePresenter.hpp>
#include <gui/instructionpage1_screen/InstructionPage1View.hpp>
#include <gui/instructionpage1_screen/InstructionPage1Presenter.hpp>
#include <gui/instructionpage2_screen/InstructionPage2View.hpp>
#include <gui/instructionpage2_screen/InstructionPage2Presenter.hpp>
#include <gui/knownpage_screen/KnownPageView.hpp>
#include <gui/knownpage_screen/KnownPagePresenter.hpp>
#include <gui/pipage_screen/PIPageView.hpp>
#include <gui/pipage_screen/PIPagePresenter.hpp>
#include <gui/startmeasurement_screen/StartMeasurementView.hpp>
#include <gui/startmeasurement_screen/StartMeasurementPresenter.hpp>
#include <gui/progressbar_screen/ProgressBarView.hpp>
#include <gui/progressbar_screen/ProgressBarPresenter.hpp>
#include <gui/datadisplaylist_screen/DataDisplayListView.hpp>
#include <gui/datadisplaylist_screen/DataDisplayListPresenter.hpp>
#include <gui/resistancegraph_screen/ResistanceGraphView.hpp>
#include <gui/resistancegraph_screen/ResistanceGraphPresenter.hpp>
#include <gui/reactancegraph_screen/ReactanceGraphView.hpp>
#include <gui/reactancegraph_screen/ReactanceGraphPresenter.hpp>
#include <gui/datasaved_screen/DataSavedView.hpp>
#include <gui/datasaved_screen/DataSavedPresenter.hpp>
#include <gui/finishpage_screen/FinishPageView.hpp>
#include <gui/finishpage_screen/FinishPagePresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
    touchgfx::Texts::setLanguage(GB);
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
}

/*
 * Screen Transition Declarations
 */

// StartPage

void FrontendApplicationBase::gotoStartPageScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoStartPageScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoStartPageScreenNoTransitionImpl()
{
    touchgfx::makeTransition<StartPageView, StartPagePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// InstructionPage1

void FrontendApplicationBase::gotoInstructionPage1ScreenSlideTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoInstructionPage1ScreenSlideTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoInstructionPage1ScreenSlideTransitionNorthImpl()
{
    touchgfx::makeTransition<InstructionPage1View, InstructionPage1Presenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoInstructionPage1ScreenSlideTransitionSouth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoInstructionPage1ScreenSlideTransitionSouthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoInstructionPage1ScreenSlideTransitionSouthImpl()
{
    touchgfx::makeTransition<InstructionPage1View, InstructionPage1Presenter, touchgfx::SlideTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// InstructionPage2

void FrontendApplicationBase::gotoInstructionPage2ScreenSlideTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoInstructionPage2ScreenSlideTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoInstructionPage2ScreenSlideTransitionNorthImpl()
{
    touchgfx::makeTransition<InstructionPage2View, InstructionPage2Presenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// KnownPage

void FrontendApplicationBase::gotoKnownPageScreenSlideTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoKnownPageScreenSlideTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoKnownPageScreenSlideTransitionNorthImpl()
{
    touchgfx::makeTransition<KnownPageView, KnownPagePresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// PIPage

void FrontendApplicationBase::gotoPIPageScreenSlideTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoPIPageScreenSlideTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoPIPageScreenSlideTransitionNorthImpl()
{
    touchgfx::makeTransition<PIPageView, PIPagePresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// StartMeasurement

void FrontendApplicationBase::gotoStartMeasurementScreenSlideTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoStartMeasurementScreenSlideTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoStartMeasurementScreenSlideTransitionNorthImpl()
{
    touchgfx::makeTransition<StartMeasurementView, StartMeasurementPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ProgressBar

void FrontendApplicationBase::gotoProgressBarScreenSlideTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoProgressBarScreenSlideTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoProgressBarScreenSlideTransitionNorthImpl()
{
    touchgfx::makeTransition<ProgressBarView, ProgressBarPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// DataDisplayList

void FrontendApplicationBase::gotoDataDisplayListScreenSlideTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoDataDisplayListScreenSlideTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDataDisplayListScreenSlideTransitionNorthImpl()
{
    touchgfx::makeTransition<DataDisplayListView, DataDisplayListPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoDataDisplayListScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoDataDisplayListScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDataDisplayListScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<DataDisplayListView, DataDisplayListPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoDataDisplayListScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoDataDisplayListScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDataDisplayListScreenNoTransitionImpl()
{
    touchgfx::makeTransition<DataDisplayListView, DataDisplayListPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoDataDisplayListScreenSlideTransitionSouth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoDataDisplayListScreenSlideTransitionSouthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDataDisplayListScreenSlideTransitionSouthImpl()
{
    touchgfx::makeTransition<DataDisplayListView, DataDisplayListPresenter, touchgfx::SlideTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ResistanceGraph

void FrontendApplicationBase::gotoResistanceGraphScreenSlideTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoResistanceGraphScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoResistanceGraphScreenSlideTransitionWestImpl()
{
    touchgfx::makeTransition<ResistanceGraphView, ResistanceGraphPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ReactanceGraph

void FrontendApplicationBase::gotoReactanceGraphScreenSlideTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoReactanceGraphScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoReactanceGraphScreenSlideTransitionWestImpl()
{
    touchgfx::makeTransition<ReactanceGraphView, ReactanceGraphPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// DataSaved

void FrontendApplicationBase::gotoDataSavedScreenSlideTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoDataSavedScreenSlideTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDataSavedScreenSlideTransitionNorthImpl()
{
    touchgfx::makeTransition<DataSavedView, DataSavedPresenter, touchgfx::SlideTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// FinishPage

void FrontendApplicationBase::gotoFinishPageScreenBlockTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoFinishPageScreenBlockTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoFinishPageScreenBlockTransitionImpl()
{
    touchgfx::makeTransition<FinishPageView, FinishPagePresenter, touchgfx::BlockTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
